#
#                           VELOXCHEM 1.0-RC2
#         ----------------------------------------------------
#                     An Electronic Structure Code
#
#  Copyright Â© 2018-2021 by VeloxChem developers. All rights reserved.
#  Contact: https://veloxchem.org/contact
#
#  SPDX-License-Identifier: LGPL-3.0-or-later
#
#  This file is part of VeloxChem.
#
#  VeloxChem is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by the Free
#  Software Foundation, either version 3 of the License, or (at your option)
#  any later version.
#
#  VeloxChem is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
#  License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with VeloxChem. If not, see <https://www.gnu.org/licenses/>.

stages:
  - build
  - test
  - deploy

.monkey:setup:
  tags:
    - vlx-docker
  image: ghcr.io/enccs/meta-vlx/vlx-ci_intel:sha-4672d65
  variables:
    OMP_NUM_THREADS: "6"
  before_script:
    - uname -a
    - free -m
    - df -h
    - ulimit -a
    - ulimit -s unlimited
    - lscpu | egrep 'Thread|Core|Socket|^CPU\('
    - python -V
    - mpiicc --version
    - mpiicpc --version
    - python -m venv --clear venv
    - source venv/bin/activate
    - python -m pip install --upgrade pip setuptools wheel

monkey:build:
  extends: .monkey:setup
  stage: build
  variables:
    GTESTLIB: "/usr/lib/x86_64-linux-gnu"
  script:
    - python -m pip install numpy pybind11 mpi4py --no-binary=mpi4py
    - python config/generate_setup.py
    - make -j 6 -C src release
    - make -j 6 -C unit_tests release
  artifacts:
    paths:
      - build
    expire_in: 2 hours

monkey:unit_tests:
  extends: .monkey:setup
  stage: test
  needs: ["monkey:build"]
  script:
    - ./build/bin/UnitTestVeloxChem.x

monkey:python_tests:
  extends: .monkey:setup
  stage: test
  variables:
    VLX_NUM_BUILD_JOBS: "6"
  script:
    - python -m pip install mpi4py --no-binary=mpi4py
    - CC=gcc CXX=g++ python -m pip install cppe==0.2.1 MDAnalysis
    - python -m pip install .[test,qmmm]
    - python -c "import veloxchem; print(veloxchem.__version__)"
    - mpiexec -n 2 python -m pytest -v --pyargs veloxchem -m "solvers"
    - python -m pytest -v --cov=veloxchem --pyargs veloxchem

monkey:deploy:
  extends: .monkey:setup
  stage: deploy
  variables:
    TARBALL: "build/veloxchem.tar.bz2"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TITLE =~ /\[conda-build\]/i'
  script:
    - export PATH=/home/roberto/Software/cmake-3.19.6/bin:$PATH
    - cmake -S. -Bbuild -DPython_EXECUTABLE=$(type -P python3) &> /dev/null
    - cmake --build build --target package_source
    - python3 -m pip install requests  # though it appears to be already installed
    - python3 .gitlab/trigger.py
        --tarball "$TARBALL"
        --url "$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/$CI_JOB_ID/artifacts/$TARBALL"
  artifacts:
    paths:
      - "$TARBALL"
    expire_in: 1 week

.baboon:setup:
  tags:
    - vlx-test-win
  before_script:
    - cmd /c '"C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 > nul 2>&1 && set' | .{process{ if ($_ -match '^([^=]+)=(.*)') { [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])}}}
    - $env:Path += ";C:\ProgramData\Miniconda3\Scripts;C:\ProgramData\Miniconda3;C:\ProgramData\Miniconda3\Library\bin"
    - conda init powershell
    - Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned -Force
    - Invoke-Expression -Command "WindowsPowerShell\profile.ps1"
    - conda config --set always_yes yes
    - conda env create --force --file .gitlab/win-env.yml
    - conda activate vlx

baboon:build:
  extends: .baboon:setup
  stage: build
  script:
    - cmake -S. -Bbuild -GNinja -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_BUILD_TYPE=Release -DENABLE_ARCH_FLAGS=OFF
    - cmake --build build --parallel 6 --config Release -- -v -d stats
  artifacts:
    paths:
      - build
    expire_in: 2 hours
  allow_failure: true
  timeout: 30 minutes

baboon:test:
  extends: .baboon:setup
  stage: test
  needs: ["baboon:build"]
  variables:
    KMP_DUPLICATE_LIB_OK: "TRUE"
  script:
    - cd build
    - ctest -C Release --output-on-failure
  allow_failure: true
  timeout: 30 minutes
