//
//                     V.E.L.O.X. C.H.E.M. MP
//      ---------------------------------------------------
//           An Electronic Structure Code for Nanoscale
//
//  Created by Zilvinas Rinkevicius (rinkevic@kth.se), KTH, Sweden.
//  Copyright Â© 2018 by Velox Chem MP developers. All rights reserved.

#include "ThreeCenterEriFunc.hpp"

#include <cmath>

#include "MathConst.hpp"
#include "GenFunc.hpp"

namespace t3erifunc { // t3erifunc namespace
    
    void
    compElectronRepulsionForSSS(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CBoysFunction&        bfTable,
                                      CMemBlock<double>&    bfArguments,
                                      CMemBlock2D<double>&  bfValues,
                                const int32_t               bfOrder,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  aqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        // set up pointers to primitives data on bra side
        
        auto bnorm = braGtoBlock.getNormFactors();
        
        auto spos = braGtoBlock.getStartPositions();
        
        auto epos = braGtoBlock.getEndPositions();
        
        // set up pointers to primitives data on ket side
        
        auto kfss = ketGtoPairsBlock.getOverlaps();
        
        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();
        
        // set up pointers to R(AQ) distances
        
        auto aqx = aqDistances.data(0);
        
        auto aqy = aqDistances.data(1);
        
        auto aqz = aqDistances.data(2);
        
        // set up up pi prefactor
        
        auto fpi = 2.0 * mathconst::getPiValue();
        
        // loop over contracted GTO on bra side
        
        int32_t idx = 0;
        
        for (int32_t i = spos[iContrGto]; i < epos[iContrGto]; i++)
        {
            // set up Obara-Saika prefactors
            
            auto fz = osFactors.data(5 * idx + 1);
            
            // compute Boys function argument
            
            auto fargs = bfArguments.data();
            
            #pragma omp simd aligned(fargs, fz, aqx, aqy, aqz: VLX_ALIGN)
            for (int32_t j = 0; j < nprim; j++)
            {
                fargs[j] = fz[j] * (aqx[j] * aqx[j] + aqy[j] * aqy[j] +
                                    
                                    aqz[j] * aqz[j]);
            }
            
            // evaluate Boys function values
            
            bfTable.compute(bfValues, bfArguments, bfOrder);
            
            // set up pointers to Obara-Saika factors
            
            auto fia = osFactors.data(5 * idx + 2);
            
            auto fb = bnorm[i];
            
            // compute overlap scaling factor
            
            #pragma omp simd aligned(fz, fia, kfss, fargs: VLX_ALIGN)
            for (int32_t j = 0; j < nprim; j++)
            {
                fargs[j] = fb * kfss[j] * fpi * std::sqrt(fz[j]) * std::pow(fia[j], 1.50);
            }
            
            // distribute (S|g(r,r')|SS) integrals
            
            for (int32_t j = 0; j <= bfOrder; j++)
            {
                auto pidx = genfunc::findTripleIndex(recIndexes, recPattern,
                                                     {0, 0, j});
                
                if (pidx != -1)
                {
                    auto g_0_00 = primBuffer.data(pidx + idx);
                    
                    auto bvals = bfValues.data(j);
                    
                    #pragma omp simd aligned(g_0_00, bvals, fargs: VLX_ALIGN)
                    for (int32_t k = 0; k < nprim; k++)
                    {
                        g_0_00[k] = bvals[k] * fargs[k];
                    }
                }
            }
            
            idx++;
        }
    }
    
    void
    compElectronRepulsionForSSP(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 1);
        
        // skip integrals if not included in recursion pattern
        
        if (bord < 0) return;
        
        // set up pointers to primitives data on bra side
        
        auto spos = braGtoBlock.getStartPositions();
        
        auto epos = braGtoBlock.getEndPositions();
        
        // set up pointers to primitives data on ket side
        
        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();
        
        // set up pointers to distances R(QD)
        
        auto qdx = ketGtoPairsBlock.getDistancesPBX();
        
        auto qdy = ketGtoPairsBlock.getDistancesPBY();
        
        auto qdz = ketGtoPairsBlock.getDistancesPBZ();
        
        // compute primitive integrals up to required order
        
        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer
            
            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 1, i});
            
            // skip integrals if this order is not required
            
            if (goff == -1) continue;
            
            // get position of integrals in primitves buffer
            
            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i});
            
            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i + 1});
            
            // loop over contracted GTO on bra side
            
            int32_t idx = 0;
            
            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to distances R(WD)
                
                auto wqx = wqDistances.data(3 * idx);
                
                auto wqy = wqDistances.data(3 * idx + 1);
                
                auto wqz = wqDistances.data(3 * idx + 2);
                
                // set up pointers to (S|g(r,r')|SS)^(m) integrals
                
                auto g10_0_0 = primBuffer.data(g10off + idx);
                
                // set up pointers to (S|g(r,r')|SS)^(m+1) integrals
                
                auto g11_0_0 = primBuffer.data(g11off + idx);
                
                // set up pointers to (S|g(r,r')|SP)^(m) integrals
                
                auto g_0_x = primBuffer.data(goff + 3 * idx);
                
                auto g_0_y = primBuffer.data(goff + 3 * idx + 1);
                
                auto g_0_z = primBuffer.data(goff + 3 * idx + 2);
                
                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, g_0_x,\
                                         g_0_y, g_0_z, g10_0_0, g11_0_0: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    double fact0 = g10_0_0[k];
                    
                    double fact1 = g11_0_0[k];
                    
                    g_0_x[k] = fact0 * qdx[k] + fact1 * wqx[k];
                    
                    g_0_y[k] = fact0 * qdy[k] + fact1 * wqy[k];
                    
                    g_0_z[k] = fact0 * qdz[k] + fact1 * wqz[k];
                }
                
                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSS(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 0);
        
        // skip integrals if not included in recursion pattern
        
        if (bord < 0) return;
        
        // set up pointers to primitives data on bra side
        
        auto spos = braGtoBlock.getStartPositions();
        
        auto epos = braGtoBlock.getEndPositions();
        
        // set up pointers to primitives data on ket side
        
        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();
        
        // compute primitive integrals up to required order
        
        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer
            
            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 0, i});
            
            // skip integrals if this order is not required
            
            if (goff == -1) continue;
            
            // get position of integrals in primitves buffer
            
            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i + 1});
            
            // loop over contracted GTO on bra side
            
            int32_t idx = 0;
            
            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to distances R(WA)
                
                auto wax = waDistances.data(3 * idx);
                
                auto way = waDistances.data(3 * idx + 1);
                
                auto waz = waDistances.data(3 * idx + 2);
                
                // set up pointers to (S|g(r,r')|SS)^(m+1) integrals
                
                auto g0_0_0 = primBuffer.data(g11off + idx);
                
                // set up pointers to (P|g(r,r')|SS)^(m) integrals
                
                auto g_0_x = primBuffer.data(goff + 3 * idx);
                
                auto g_0_y = primBuffer.data(goff + 3 * idx + 1);
                
                auto g_0_z = primBuffer.data(goff + 3 * idx + 2);
                
                #pragma omp simd aligned(wax, way, waz, g_0_x, g_0_y, g_0_z,\
                                         g0_0_0: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    double fact = g0_0_0[k];
                    
                    g_0_x[k] = fact * wax[k];
                    
                    g_0_y[k] = fact * way[k];
                    
                    g_0_z[k] = fact * waz[k];
                }
                
                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSP(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 1);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 1, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SS)^(m+1) integrals

                auto gk_0_0 = primBuffer.data(gkoff + idx);

                // set up pointers to (S|g(r,r')|SP)^(m+1) integrals

                auto g11_0_x = primBuffer.data(g11off + 3 * idx);

                auto g11_0_y = primBuffer.data(g11off + 3 * idx + 1);

                auto g11_0_z = primBuffer.data(g11off + 3 * idx + 2);

                // set up pointers to (P|g(r,r')|SP)^(m) integrals

                auto g_x_x = primBuffer.data(goff + 9 * idx);

                auto g_x_y = primBuffer.data(goff + 9 * idx + 1);

                auto g_x_z = primBuffer.data(goff + 9 * idx + 2);

                auto g_y_x = primBuffer.data(goff + 9 * idx + 3);

                auto g_y_y = primBuffer.data(goff + 9 * idx + 4);

                auto g_y_z = primBuffer.data(goff + 9 * idx + 5);

                auto g_z_x = primBuffer.data(goff + 9 * idx + 6);

                auto g_z_y = primBuffer.data(goff + 9 * idx + 7);

                auto g_z_z = primBuffer.data(goff + 9 * idx + 8);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_0, g11_0_x, g11_0_y,\
                                         g11_0_z, g_x_x, g_x_y, g_x_z, g_y_x, g_y_y,\
                                         g_y_z, g_z_x, g_z_y, g_z_z: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k] * gk_0_0[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_x[k] = fr * g11_0_x[k] + f2t;

                    g_x_y[k] = fr * g11_0_y[k];

                    g_x_z[k] = fr * g11_0_z[k];

                    // leading y component

                    fr = way[k];

                    g_y_x[k] = fr * g11_0_x[k];

                    g_y_y[k] = fr * g11_0_y[k] + f2t;

                    g_y_z[k] = fr * g11_0_z[k];

                    // leading z component

                    fr = waz[k];

                    g_z_x[k] = fr * g11_0_x[k];

                    g_z_y[k] = fr * g11_0_y[k];

                    g_z_z[k] = fr * g11_0_z[k] + f2t;
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSD(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 2);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 2, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SS)^(m) integrals

                auto g20_0_0 = primBuffer.data(g20off + idx);

                // set up pointers to (S|g(r,r')|SS)^(m+1) integrals

                auto g21_0_0 = primBuffer.data(g21off + idx);

                // set up pointers to (S|g(r,r')|SP)^(m) integrals

                auto g10_0_x = primBuffer.data(g10off + 3 * idx);

                auto g10_0_y = primBuffer.data(g10off + 3 * idx + 1);

                auto g10_0_z = primBuffer.data(g10off + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m+1) integrals

                auto g11_0_x = primBuffer.data(g11off + 3 * idx);

                auto g11_0_y = primBuffer.data(g11off + 3 * idx + 1);

                auto g11_0_z = primBuffer.data(g11off + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SD)^(m) integrals

                auto g_0_xx = primBuffer.data(goff + 6 * idx);

                auto g_0_xy = primBuffer.data(goff + 6 * idx + 1);

                auto g_0_xz = primBuffer.data(goff + 6 * idx + 2);

                auto g_0_yy = primBuffer.data(goff + 6 * idx + 3);

                auto g_0_yz = primBuffer.data(goff + 6 * idx + 4);

                auto g_0_zz = primBuffer.data(goff + 6 * idx + 5);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_0, g21_0_0, g10_0_x, g10_0_y, g10_0_z,\
                                         g11_0_x, g11_0_y, g11_0_z, g_0_xx, g_0_xy,\
                                         g_0_xz, g_0_yy, g_0_yz, g_0_zz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k] * (g20_0_0[k] - fzb[k] * g21_0_0[k]);

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xx[k] = fra * g10_0_x[k] + frb * g11_0_x[k] + f2g;

                    g_0_xy[k] = fra * g10_0_y[k] + frb * g11_0_y[k];

                    g_0_xz[k] = fra * g10_0_z[k] + frb * g11_0_z[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yy[k] = fra * g10_0_y[k] + frb * g11_0_y[k] + f2g;

                    g_0_yz[k] = fra * g10_0_z[k] + frb * g11_0_z[k];

                    // leading z component

                    g_0_zz[k] = qdz[k] * g10_0_z[k] + wqz[k] * g11_0_z[k] + f2g;
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSS(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 0);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 0, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 0, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SS)^(m) integrals

                auto g20_0_0 = primBuffer.data(g20off + idx);

                // set up pointers to (S|g(r,r')|SS)^(m+1) integrals

                auto g21_0_0 = primBuffer.data(g21off + idx);

                // set up pointers to (P|g(r,r')|SS)^(m+1) integrals

                auto g11_x_0 = primBuffer.data(g11off + 3 * idx);

                auto g11_y_0 = primBuffer.data(g11off + 3 * idx + 1);

                auto g11_z_0 = primBuffer.data(g11off + 3 * idx + 2);

                // set up pointers to (D|g(r,r')|SS)^(m) integrals

                auto g_xx_0 = primBuffer.data(goff + 6 * idx);

                auto g_xy_0 = primBuffer.data(goff + 6 * idx + 1);

                auto g_xz_0 = primBuffer.data(goff + 6 * idx + 2);

                auto g_yy_0 = primBuffer.data(goff + 6 * idx + 3);

                auto g_yz_0 = primBuffer.data(goff + 6 * idx + 4);

                auto g_zz_0 = primBuffer.data(goff + 6 * idx + 5);

                #pragma omp simd aligned(wax, way, waz, fga, fza, g20_0_0, g21_0_0,\
                                         g11_x_0, g11_y_0, g11_z_0, g_xx_0, g_xy_0,\
                                         g_xz_0, g_yy_0, g_yz_0, g_zz_0: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k] * (g20_0_0[k] - fza[k] * g21_0_0[k]);

                    // leading x component

                    double fr = wax[k];

                    g_xx_0[k] = fr * g11_x_0[k] + f2g;

                    g_xy_0[k] = fr * g11_y_0[k];

                    g_xz_0[k] = fr * g11_z_0[k];

                    // leading y component

                    fr = way[k];

                    g_yy_0[k] = fr * g11_y_0[k] + f2g;

                    g_yz_0[k] = fr * g11_z_0[k];

                    // leading z component

                    g_zz_0[k] = waz[k] * g11_z_0[k] + f2g;
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSD(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 2);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 2, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 1, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m+1) integrals

                auto gk_0_x = primBuffer.data(gkoff + 3 * idx);

                auto gk_0_y = primBuffer.data(gkoff + 3 * idx + 1);

                auto gk_0_z = primBuffer.data(gkoff + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SD)^(m+1) integrals

                auto g11_0_xx = primBuffer.data(g11off + 6 * idx);

                auto g11_0_xy = primBuffer.data(g11off + 6 * idx + 1);

                auto g11_0_xz = primBuffer.data(g11off + 6 * idx + 2);

                auto g11_0_yy = primBuffer.data(g11off + 6 * idx + 3);

                auto g11_0_yz = primBuffer.data(g11off + 6 * idx + 4);

                auto g11_0_zz = primBuffer.data(g11off + 6 * idx + 5);

                // set up pointers to (P|g(r,r')|SD)^(m) integrals

                auto g_x_xx = primBuffer.data(goff + 18 * idx);

                auto g_x_xy = primBuffer.data(goff + 18 * idx + 1);

                auto g_x_xz = primBuffer.data(goff + 18 * idx + 2);

                auto g_x_yy = primBuffer.data(goff + 18 * idx + 3);

                auto g_x_yz = primBuffer.data(goff + 18 * idx + 4);

                auto g_x_zz = primBuffer.data(goff + 18 * idx + 5);

                auto g_y_xx = primBuffer.data(goff + 18 * idx + 6);

                auto g_y_xy = primBuffer.data(goff + 18 * idx + 7);

                auto g_y_xz = primBuffer.data(goff + 18 * idx + 8);

                auto g_y_yy = primBuffer.data(goff + 18 * idx + 9);

                auto g_y_yz = primBuffer.data(goff + 18 * idx + 10);

                auto g_y_zz = primBuffer.data(goff + 18 * idx + 11);

                auto g_z_xx = primBuffer.data(goff + 18 * idx + 12);

                auto g_z_xy = primBuffer.data(goff + 18 * idx + 13);

                auto g_z_xz = primBuffer.data(goff + 18 * idx + 14);

                auto g_z_yy = primBuffer.data(goff + 18 * idx + 15);

                auto g_z_yz = primBuffer.data(goff + 18 * idx + 16);

                auto g_z_zz = primBuffer.data(goff + 18 * idx + 17);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_x, gk_0_y, gk_0_z,\
                                         g11_0_xx, g11_0_xy, g11_0_xz, g11_0_yy,\
                                         g11_0_yz, g11_0_zz, g_x_xx, g_x_xy, g_x_xz,\
                                         g_x_yy, g_x_yz, g_x_zz, g_y_xx, g_y_xy,\
                                         g_y_xz, g_y_yy, g_y_yz, g_y_zz, g_z_xx,\
                                         g_z_xy, g_z_xz, g_z_yy, g_z_yz, g_z_zz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xx[k] = fr * g11_0_xx[k] + 2.0 * f2t * gk_0_x[k];

                    g_x_xy[k] = fr * g11_0_xy[k] + f2t * gk_0_y[k];

                    g_x_xz[k] = fr * g11_0_xz[k] + f2t * gk_0_z[k];

                    g_x_yy[k] = fr * g11_0_yy[k];

                    g_x_yz[k] = fr * g11_0_yz[k];

                    g_x_zz[k] = fr * g11_0_zz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xx[k] = fr * g11_0_xx[k];

                    g_y_xy[k] = fr * g11_0_xy[k] + f2t * gk_0_x[k];

                    g_y_xz[k] = fr * g11_0_xz[k];

                    g_y_yy[k] = fr * g11_0_yy[k] + 2.0 * f2t * gk_0_y[k];

                    g_y_yz[k] = fr * g11_0_yz[k] + f2t * gk_0_z[k];

                    g_y_zz[k] = fr * g11_0_zz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xx[k] = fr * g11_0_xx[k];

                    g_z_xy[k] = fr * g11_0_xy[k];

                    g_z_xz[k] = fr * g11_0_xz[k] + f2t * gk_0_x[k];

                    g_z_yy[k] = fr * g11_0_yy[k];

                    g_z_yz[k] = fr * g11_0_yz[k] + f2t * gk_0_y[k];

                    g_z_zz[k] = fr * g11_0_zz[k] + 2.0 * f2t * gk_0_z[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSP(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 1);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 1, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 1, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SS)^(m+1) integrals

                auto gk_x_0 = primBuffer.data(gkoff + 3 * idx);

                auto gk_y_0 = primBuffer.data(gkoff + 3 * idx + 1);

                auto gk_z_0 = primBuffer.data(gkoff + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m) integrals

                auto g20_0_x = primBuffer.data(g20off + 3 * idx);

                auto g20_0_y = primBuffer.data(g20off + 3 * idx + 1);

                auto g20_0_z = primBuffer.data(g20off + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m+1) integrals

                auto g21_0_x = primBuffer.data(g21off + 3 * idx);

                auto g21_0_y = primBuffer.data(g21off + 3 * idx + 1);

                auto g21_0_z = primBuffer.data(g21off + 3 * idx + 2);

                // set up pointers to (P|g(r,r')|SP)^(m+1) integrals

                auto g11_x_x = primBuffer.data(g11off + 9 * idx);

                auto g11_x_y = primBuffer.data(g11off + 9 * idx + 1);

                auto g11_x_z = primBuffer.data(g11off + 9 * idx + 2);

                auto g11_y_x = primBuffer.data(g11off + 9 * idx + 3);

                auto g11_y_y = primBuffer.data(g11off + 9 * idx + 4);

                auto g11_y_z = primBuffer.data(g11off + 9 * idx + 5);

                auto g11_z_x = primBuffer.data(g11off + 9 * idx + 6);

                auto g11_z_y = primBuffer.data(g11off + 9 * idx + 7);

                auto g11_z_z = primBuffer.data(g11off + 9 * idx + 8);

                // set up pointers to (D|g(r,r')|SP)^(m) integrals

                auto g_xx_x = primBuffer.data(goff + 18 * idx);

                auto g_xx_y = primBuffer.data(goff + 18 * idx + 1);

                auto g_xx_z = primBuffer.data(goff + 18 * idx + 2);

                auto g_xy_x = primBuffer.data(goff + 18 * idx + 3);

                auto g_xy_y = primBuffer.data(goff + 18 * idx + 4);

                auto g_xy_z = primBuffer.data(goff + 18 * idx + 5);

                auto g_xz_x = primBuffer.data(goff + 18 * idx + 6);

                auto g_xz_y = primBuffer.data(goff + 18 * idx + 7);

                auto g_xz_z = primBuffer.data(goff + 18 * idx + 8);

                auto g_yy_x = primBuffer.data(goff + 18 * idx + 9);

                auto g_yy_y = primBuffer.data(goff + 18 * idx + 10);

                auto g_yy_z = primBuffer.data(goff + 18 * idx + 11);

                auto g_yz_x = primBuffer.data(goff + 18 * idx + 12);

                auto g_yz_y = primBuffer.data(goff + 18 * idx + 13);

                auto g_yz_z = primBuffer.data(goff + 18 * idx + 14);

                auto g_zz_x = primBuffer.data(goff + 18 * idx + 15);

                auto g_zz_y = primBuffer.data(goff + 18 * idx + 16);

                auto g_zz_z = primBuffer.data(goff + 18 * idx + 17);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_0, gk_y_0,\
                                         gk_z_0, g20_0_x, g20_0_y, g20_0_z, g21_0_x,\
                                         g21_0_y, g21_0_z, g11_x_x, g11_x_y, g11_x_z,\
                                         g11_y_x, g11_y_y, g11_y_z, g11_z_x, g11_z_y,\
                                         g11_z_z, g_xx_x, g_xx_y, g_xx_z, g_xy_x,\
                                         g_xy_y, g_xy_z, g_xz_x, g_xz_y, g_xz_z,\
                                         g_yy_x, g_yy_y, g_yy_z, g_yz_x, g_yz_y,\
                                         g_yz_z, g_zz_x, g_zz_y, g_zz_z: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_x[k] = fr * g11_x_x[k] + f2g * (g20_0_x[k] - fgz * g21_0_x[k]) + f2t * gk_x_0[k];

                    g_xx_y[k] = fr * g11_x_y[k] + f2g * (g20_0_y[k] - fgz * g21_0_y[k]);

                    g_xx_z[k] = fr * g11_x_z[k] + f2g * (g20_0_z[k] - fgz * g21_0_z[k]);

                    g_xy_x[k] = fr * g11_y_x[k] + f2t * gk_y_0[k];

                    g_xy_y[k] = fr * g11_y_y[k];

                    g_xy_z[k] = fr * g11_y_z[k];

                    g_xz_x[k] = fr * g11_z_x[k] + f2t * gk_z_0[k];

                    g_xz_y[k] = fr * g11_z_y[k];

                    g_xz_z[k] = fr * g11_z_z[k];

                    // leading y component

                    fr = way[k];

                    g_yy_x[k] = fr * g11_y_x[k] + f2g * (g20_0_x[k] - fgz * g21_0_x[k]);

                    g_yy_y[k] = fr * g11_y_y[k] + f2g * (g20_0_y[k] - fgz * g21_0_y[k]) + f2t * gk_y_0[k];

                    g_yy_z[k] = fr * g11_y_z[k] + f2g * (g20_0_z[k] - fgz * g21_0_z[k]);

                    g_yz_x[k] = fr * g11_z_x[k];

                    g_yz_y[k] = fr * g11_z_y[k] + f2t * gk_z_0[k];

                    g_yz_z[k] = fr * g11_z_z[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_x[k] = fr * g11_z_x[k] + f2g * (g20_0_x[k] - fgz * g21_0_x[k]);

                    g_zz_y[k] = fr * g11_z_y[k] + f2g * (g20_0_y[k] - fgz * g21_0_y[k]);

                    g_zz_z[k] = fr * g11_z_z[k] + f2g * (g20_0_z[k] - fgz * g21_0_z[k]) + f2t * gk_z_0[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSD(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 2);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 2, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 2, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 1, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SP)^(m+1) integrals

                auto gk_x_x = primBuffer.data(gkoff + 9 * idx);

                auto gk_x_y = primBuffer.data(gkoff + 9 * idx + 1);

                auto gk_x_z = primBuffer.data(gkoff + 9 * idx + 2);

                auto gk_y_x = primBuffer.data(gkoff + 9 * idx + 3);

                auto gk_y_y = primBuffer.data(gkoff + 9 * idx + 4);

                auto gk_y_z = primBuffer.data(gkoff + 9 * idx + 5);

                auto gk_z_x = primBuffer.data(gkoff + 9 * idx + 6);

                auto gk_z_y = primBuffer.data(gkoff + 9 * idx + 7);

                auto gk_z_z = primBuffer.data(gkoff + 9 * idx + 8);

                // set up pointers to (S|g(r,r')|SD)^(m) integrals

                auto g20_0_xx = primBuffer.data(g20off + 6 * idx);

                auto g20_0_xy = primBuffer.data(g20off + 6 * idx + 1);

                auto g20_0_xz = primBuffer.data(g20off + 6 * idx + 2);

                auto g20_0_yy = primBuffer.data(g20off + 6 * idx + 3);

                auto g20_0_yz = primBuffer.data(g20off + 6 * idx + 4);

                auto g20_0_zz = primBuffer.data(g20off + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SD)^(m+1) integrals

                auto g21_0_xx = primBuffer.data(g21off + 6 * idx);

                auto g21_0_xy = primBuffer.data(g21off + 6 * idx + 1);

                auto g21_0_xz = primBuffer.data(g21off + 6 * idx + 2);

                auto g21_0_yy = primBuffer.data(g21off + 6 * idx + 3);

                auto g21_0_yz = primBuffer.data(g21off + 6 * idx + 4);

                auto g21_0_zz = primBuffer.data(g21off + 6 * idx + 5);

                // set up pointers to (P|g(r,r')|SD)^(m+1) integrals

                auto g11_x_xx = primBuffer.data(g11off + 18 * idx);

                auto g11_x_xy = primBuffer.data(g11off + 18 * idx + 1);

                auto g11_x_xz = primBuffer.data(g11off + 18 * idx + 2);

                auto g11_x_yy = primBuffer.data(g11off + 18 * idx + 3);

                auto g11_x_yz = primBuffer.data(g11off + 18 * idx + 4);

                auto g11_x_zz = primBuffer.data(g11off + 18 * idx + 5);

                auto g11_y_xx = primBuffer.data(g11off + 18 * idx + 6);

                auto g11_y_xy = primBuffer.data(g11off + 18 * idx + 7);

                auto g11_y_xz = primBuffer.data(g11off + 18 * idx + 8);

                auto g11_y_yy = primBuffer.data(g11off + 18 * idx + 9);

                auto g11_y_yz = primBuffer.data(g11off + 18 * idx + 10);

                auto g11_y_zz = primBuffer.data(g11off + 18 * idx + 11);

                auto g11_z_xx = primBuffer.data(g11off + 18 * idx + 12);

                auto g11_z_xy = primBuffer.data(g11off + 18 * idx + 13);

                auto g11_z_xz = primBuffer.data(g11off + 18 * idx + 14);

                auto g11_z_yy = primBuffer.data(g11off + 18 * idx + 15);

                auto g11_z_yz = primBuffer.data(g11off + 18 * idx + 16);

                auto g11_z_zz = primBuffer.data(g11off + 18 * idx + 17);

                // set up pointers to (D|g(r,r')|SD)^(m) integrals

                auto g_xx_xx = primBuffer.data(goff + 36 * idx);

                auto g_xx_xy = primBuffer.data(goff + 36 * idx + 1);

                auto g_xx_xz = primBuffer.data(goff + 36 * idx + 2);

                auto g_xx_yy = primBuffer.data(goff + 36 * idx + 3);

                auto g_xx_yz = primBuffer.data(goff + 36 * idx + 4);

                auto g_xx_zz = primBuffer.data(goff + 36 * idx + 5);

                auto g_xy_xx = primBuffer.data(goff + 36 * idx + 6);

                auto g_xy_xy = primBuffer.data(goff + 36 * idx + 7);

                auto g_xy_xz = primBuffer.data(goff + 36 * idx + 8);

                auto g_xy_yy = primBuffer.data(goff + 36 * idx + 9);

                auto g_xy_yz = primBuffer.data(goff + 36 * idx + 10);

                auto g_xy_zz = primBuffer.data(goff + 36 * idx + 11);

                auto g_xz_xx = primBuffer.data(goff + 36 * idx + 12);

                auto g_xz_xy = primBuffer.data(goff + 36 * idx + 13);

                auto g_xz_xz = primBuffer.data(goff + 36 * idx + 14);

                auto g_xz_yy = primBuffer.data(goff + 36 * idx + 15);

                auto g_xz_yz = primBuffer.data(goff + 36 * idx + 16);

                auto g_xz_zz = primBuffer.data(goff + 36 * idx + 17);

                auto g_yy_xx = primBuffer.data(goff + 36 * idx + 18);

                auto g_yy_xy = primBuffer.data(goff + 36 * idx + 19);

                auto g_yy_xz = primBuffer.data(goff + 36 * idx + 20);

                auto g_yy_yy = primBuffer.data(goff + 36 * idx + 21);

                auto g_yy_yz = primBuffer.data(goff + 36 * idx + 22);

                auto g_yy_zz = primBuffer.data(goff + 36 * idx + 23);

                auto g_yz_xx = primBuffer.data(goff + 36 * idx + 24);

                auto g_yz_xy = primBuffer.data(goff + 36 * idx + 25);

                auto g_yz_xz = primBuffer.data(goff + 36 * idx + 26);

                auto g_yz_yy = primBuffer.data(goff + 36 * idx + 27);

                auto g_yz_yz = primBuffer.data(goff + 36 * idx + 28);

                auto g_yz_zz = primBuffer.data(goff + 36 * idx + 29);

                auto g_zz_xx = primBuffer.data(goff + 36 * idx + 30);

                auto g_zz_xy = primBuffer.data(goff + 36 * idx + 31);

                auto g_zz_xz = primBuffer.data(goff + 36 * idx + 32);

                auto g_zz_yy = primBuffer.data(goff + 36 * idx + 33);

                auto g_zz_yz = primBuffer.data(goff + 36 * idx + 34);

                auto g_zz_zz = primBuffer.data(goff + 36 * idx + 35);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_x, gk_x_y,\
                                         gk_x_z, gk_y_x, gk_y_y, gk_y_z, gk_z_x,\
                                         gk_z_y, gk_z_z, g20_0_xx, g20_0_xy, g20_0_xz,\
                                         g20_0_yy, g20_0_yz, g20_0_zz, g21_0_xx,\
                                         g21_0_xy, g21_0_xz, g21_0_yy, g21_0_yz,\
                                         g21_0_zz, g11_x_xx, g11_x_xy, g11_x_xz,\
                                         g11_x_yy, g11_x_yz, g11_x_zz, g11_y_xx,\
                                         g11_y_xy, g11_y_xz, g11_y_yy, g11_y_yz,\
                                         g11_y_zz, g11_z_xx, g11_z_xy, g11_z_xz,\
                                         g11_z_yy, g11_z_yz, g11_z_zz, g_xx_xx,\
                                         g_xx_xy, g_xx_xz, g_xx_yy, g_xx_yz, g_xx_zz,\
                                         g_xy_xx, g_xy_xy, g_xy_xz, g_xy_yy, g_xy_yz,\
                                         g_xy_zz, g_xz_xx, g_xz_xy, g_xz_xz, g_xz_yy,\
                                         g_xz_yz, g_xz_zz, g_yy_xx, g_yy_xy, g_yy_xz,\
                                         g_yy_yy, g_yy_yz, g_yy_zz, g_yz_xx, g_yz_xy,\
                                         g_yz_xz, g_yz_yy, g_yz_yz, g_yz_zz, g_zz_xx,\
                                         g_zz_xy, g_zz_xz, g_zz_yy, g_zz_yz, g_zz_zz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xx[k] = fr * g11_x_xx[k] + f2g * (g20_0_xx[k] - fgz * g21_0_xx[k]) + 2.0 * f2t * gk_x_x[k];

                    g_xx_xy[k] = fr * g11_x_xy[k] + f2g * (g20_0_xy[k] - fgz * g21_0_xy[k]) + f2t * gk_x_y[k];

                    g_xx_xz[k] = fr * g11_x_xz[k] + f2g * (g20_0_xz[k] - fgz * g21_0_xz[k]) + f2t * gk_x_z[k];

                    g_xx_yy[k] = fr * g11_x_yy[k] + f2g * (g20_0_yy[k] - fgz * g21_0_yy[k]);

                    g_xx_yz[k] = fr * g11_x_yz[k] + f2g * (g20_0_yz[k] - fgz * g21_0_yz[k]);

                    g_xx_zz[k] = fr * g11_x_zz[k] + f2g * (g20_0_zz[k] - fgz * g21_0_zz[k]);

                    g_xy_xx[k] = fr * g11_y_xx[k] + 2.0 * f2t * gk_y_x[k];

                    g_xy_xy[k] = fr * g11_y_xy[k] + f2t * gk_y_y[k];

                    g_xy_xz[k] = fr * g11_y_xz[k] + f2t * gk_y_z[k];

                    g_xy_yy[k] = fr * g11_y_yy[k];

                    g_xy_yz[k] = fr * g11_y_yz[k];

                    g_xy_zz[k] = fr * g11_y_zz[k];

                    g_xz_xx[k] = fr * g11_z_xx[k] + 2.0 * f2t * gk_z_x[k];

                    g_xz_xy[k] = fr * g11_z_xy[k] + f2t * gk_z_y[k];

                    g_xz_xz[k] = fr * g11_z_xz[k] + f2t * gk_z_z[k];

                    g_xz_yy[k] = fr * g11_z_yy[k];

                    g_xz_yz[k] = fr * g11_z_yz[k];

                    g_xz_zz[k] = fr * g11_z_zz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xx[k] = fr * g11_y_xx[k] + f2g * (g20_0_xx[k] - fgz * g21_0_xx[k]);

                    g_yy_xy[k] = fr * g11_y_xy[k] + f2g * (g20_0_xy[k] - fgz * g21_0_xy[k]) + f2t * gk_y_x[k];

                    g_yy_xz[k] = fr * g11_y_xz[k] + f2g * (g20_0_xz[k] - fgz * g21_0_xz[k]);

                    g_yy_yy[k] = fr * g11_y_yy[k] + f2g * (g20_0_yy[k] - fgz * g21_0_yy[k]) + 2.0 * f2t * gk_y_y[k];

                    g_yy_yz[k] = fr * g11_y_yz[k] + f2g * (g20_0_yz[k] - fgz * g21_0_yz[k]) + f2t * gk_y_z[k];

                    g_yy_zz[k] = fr * g11_y_zz[k] + f2g * (g20_0_zz[k] - fgz * g21_0_zz[k]);

                    g_yz_xx[k] = fr * g11_z_xx[k];

                    g_yz_xy[k] = fr * g11_z_xy[k] + f2t * gk_z_x[k];

                    g_yz_xz[k] = fr * g11_z_xz[k];

                    g_yz_yy[k] = fr * g11_z_yy[k] + 2.0 * f2t * gk_z_y[k];

                    g_yz_yz[k] = fr * g11_z_yz[k] + f2t * gk_z_z[k];

                    g_yz_zz[k] = fr * g11_z_zz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xx[k] = fr * g11_z_xx[k] + f2g * (g20_0_xx[k] - fgz * g21_0_xx[k]);

                    g_zz_xy[k] = fr * g11_z_xy[k] + f2g * (g20_0_xy[k] - fgz * g21_0_xy[k]);

                    g_zz_xz[k] = fr * g11_z_xz[k] + f2g * (g20_0_xz[k] - fgz * g21_0_xz[k]) + f2t * gk_z_x[k];

                    g_zz_yy[k] = fr * g11_z_yy[k] + f2g * (g20_0_yy[k] - fgz * g21_0_yy[k]);

                    g_zz_yz[k] = fr * g11_z_yz[k] + f2g * (g20_0_yz[k] - fgz * g21_0_yz[k]) + f2t * gk_z_y[k];

                    g_zz_zz[k] = fr * g11_z_zz[k] + f2g * (g20_0_zz[k] - fgz * g21_0_zz[k]) + 2.0 * f2t * gk_z_z[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSF(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 3);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 3, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 1, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m) integrals

                auto g20_0_x = primBuffer.data(g20off + 3 * idx);

                auto g20_0_y = primBuffer.data(g20off + 3 * idx + 1);

                auto g20_0_z = primBuffer.data(g20off + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SP)^(m+1) integrals

                auto g21_0_x = primBuffer.data(g21off + 3 * idx);

                auto g21_0_y = primBuffer.data(g21off + 3 * idx + 1);

                auto g21_0_z = primBuffer.data(g21off + 3 * idx + 2);

                // set up pointers to (S|g(r,r')|SD)^(m) integrals

                auto g10_0_xx = primBuffer.data(g10off + 6 * idx);

                auto g10_0_xy = primBuffer.data(g10off + 6 * idx + 1);

                auto g10_0_xz = primBuffer.data(g10off + 6 * idx + 2);

                auto g10_0_yy = primBuffer.data(g10off + 6 * idx + 3);

                auto g10_0_yz = primBuffer.data(g10off + 6 * idx + 4);

                auto g10_0_zz = primBuffer.data(g10off + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SD)^(m+1) integrals

                auto g11_0_xx = primBuffer.data(g11off + 6 * idx);

                auto g11_0_xy = primBuffer.data(g11off + 6 * idx + 1);

                auto g11_0_xz = primBuffer.data(g11off + 6 * idx + 2);

                auto g11_0_yy = primBuffer.data(g11off + 6 * idx + 3);

                auto g11_0_yz = primBuffer.data(g11off + 6 * idx + 4);

                auto g11_0_zz = primBuffer.data(g11off + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SF)^(m) integrals

                auto g_0_xxx = primBuffer.data(goff + 10 * idx);

                auto g_0_xxy = primBuffer.data(goff + 10 * idx + 1);

                auto g_0_xxz = primBuffer.data(goff + 10 * idx + 2);

                auto g_0_xyy = primBuffer.data(goff + 10 * idx + 3);

                auto g_0_xyz = primBuffer.data(goff + 10 * idx + 4);

                auto g_0_xzz = primBuffer.data(goff + 10 * idx + 5);

                auto g_0_yyy = primBuffer.data(goff + 10 * idx + 6);

                auto g_0_yyz = primBuffer.data(goff + 10 * idx + 7);

                auto g_0_yzz = primBuffer.data(goff + 10 * idx + 8);

                auto g_0_zzz = primBuffer.data(goff + 10 * idx + 9);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_x, g20_0_y, g20_0_z, g21_0_x, g21_0_y,\
                                         g21_0_z, g10_0_xx, g10_0_xy, g10_0_xz,\
                                         g10_0_yy, g10_0_yz, g10_0_zz, g11_0_xx,\
                                         g11_0_xy, g11_0_xz, g11_0_yy, g11_0_yz,\
                                         g11_0_zz, g_0_xxx, g_0_xxy, g_0_xxz, g_0_xyy,\
                                         g_0_xyz, g_0_xzz, g_0_yyy, g_0_yyz, g_0_yzz,\
                                         g_0_zzz: VLX_ALIGN)
                 for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxx[k] = fra * g10_0_xx[k] + frb * g11_0_xx[k] + f2g * (2.0 * g20_0_x[k] - 2.0 * fgz * g21_0_x[k]);

                    g_0_xxy[k] = fra * g10_0_xy[k] + frb * g11_0_xy[k] + f2g * (g20_0_y[k] - fgz * g21_0_y[k]);

                    g_0_xxz[k] = fra * g10_0_xz[k] + frb * g11_0_xz[k] + f2g * (g20_0_z[k] - fgz * g21_0_z[k]);

                    g_0_xyy[k] = fra * g10_0_yy[k] + frb * g11_0_yy[k];

                    g_0_xyz[k] = fra * g10_0_yz[k] + frb * g11_0_yz[k];

                    g_0_xzz[k] = fra * g10_0_zz[k] + frb * g11_0_zz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyy[k] = fra * g10_0_yy[k] + frb * g11_0_yy[k] + f2g * (2.0 * g20_0_y[k] - 2.0 * fgz * g21_0_y[k]);

                    g_0_yyz[k] = fra * g10_0_yz[k] + frb * g11_0_yz[k] + f2g * (g20_0_z[k] - fgz * g21_0_z[k]);

                    g_0_yzz[k] = fra * g10_0_zz[k] + frb * g11_0_zz[k];

                    // leading z component

                    g_0_zzz[k] = qdz[k] * g10_0_zz[k] + wqz[k] * g11_0_zz[k] + f2g * (2.0 * g20_0_z[k] - 2.0 * fgz * g21_0_z[k]);

                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSS(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 0);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 0, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 0, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 0, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SS)^(m) integrals

                auto g20_x_0 = primBuffer.data(g20off + 3 * idx);

                auto g20_y_0 = primBuffer.data(g20off + 3 * idx + 1);

                auto g20_z_0 = primBuffer.data(g20off + 3 * idx + 2);

                // set up pointers to (P|g(r,r')|SS)^(m+1) integrals

                auto g21_x_0 = primBuffer.data(g21off + 3 * idx);

                auto g21_y_0 = primBuffer.data(g21off + 3 * idx + 1);

                auto g21_z_0 = primBuffer.data(g21off + 3 * idx + 2);

                // set up pointers to (D|g(r,r')|SS)^(m+1) integrals

                auto g11_xx_0 = primBuffer.data(g11off + 6 * idx);

                auto g11_xy_0 = primBuffer.data(g11off + 6 * idx + 1);

                auto g11_xz_0 = primBuffer.data(g11off + 6 * idx + 2);

                auto g11_yy_0 = primBuffer.data(g11off + 6 * idx + 3);

                auto g11_yz_0 = primBuffer.data(g11off + 6 * idx + 4);

                auto g11_zz_0 = primBuffer.data(g11off + 6 * idx + 5);

                // set up pointers to (F|g(r,r')|SS)^(m) integrals

                auto g_xxx_0 = primBuffer.data(goff + 10 * idx);

                auto g_xxy_0 = primBuffer.data(goff + 10 * idx + 1);

                auto g_xxz_0 = primBuffer.data(goff + 10 * idx + 2);

                auto g_xyy_0 = primBuffer.data(goff + 10 * idx + 3);

                auto g_xyz_0 = primBuffer.data(goff + 10 * idx + 4);

                auto g_xzz_0 = primBuffer.data(goff + 10 * idx + 5);

                auto g_yyy_0 = primBuffer.data(goff + 10 * idx + 6);

                auto g_yyz_0 = primBuffer.data(goff + 10 * idx + 7);

                auto g_yzz_0 = primBuffer.data(goff + 10 * idx + 8);

                auto g_zzz_0 = primBuffer.data(goff + 10 * idx + 9);

                #pragma omp simd aligned(wax, way, waz, fga, fza, g20_x_0, g20_y_0,\
                                         g20_z_0, g21_x_0, g21_y_0, g21_z_0, g11_xx_0,\
                                         g11_xy_0, g11_xz_0, g11_yy_0, g11_yz_0,\
                                         g11_zz_0, g_xxx_0, g_xxy_0, g_xxz_0, g_xyy_0,\
                                         g_xyz_0, g_xzz_0, g_yyy_0, g_yyz_0, g_yzz_0,\
                                         g_zzz_0: VLX_ALIGN)
                 for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_0[k] = fr * g11_xx_0[k] + f2g * (2.0 * g20_x_0[k] - 2.0 * fgz * g21_x_0[k]);

                    g_xxy_0[k] = fr * g11_xy_0[k] + f2g * (g20_y_0[k] - fgz * g21_y_0[k]);

                    g_xxz_0[k] = fr * g11_xz_0[k] + f2g * (g20_z_0[k] - fgz * g21_z_0[k]);

                    g_xyy_0[k] = fr * g11_yy_0[k];

                    g_xyz_0[k] = fr * g11_yz_0[k];

                    g_xzz_0[k] = fr * g11_zz_0[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_0[k] = fr * g11_yy_0[k] + f2g * (2.0 * g20_y_0[k] - 2.0 * fgz * g21_y_0[k]);

                    g_yyz_0[k] = fr * g11_yz_0[k] + f2g * (g20_z_0[k] - fgz * g21_z_0[k]);

                    g_yzz_0[k] = fr * g11_zz_0[k];

                    // leading z component

                    g_zzz_0[k] = waz[k] * g11_zz_0[k] + f2g * (2.0 * g20_z_0[k] - 2.0 * fgz * g21_z_0[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSF(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 3);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 3, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 2, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SD)^(m+1) integrals

                auto gk_0_xx = primBuffer.data(gkoff + 6 * idx);

                auto gk_0_xy = primBuffer.data(gkoff + 6 * idx + 1);

                auto gk_0_xz = primBuffer.data(gkoff + 6 * idx + 2);

                auto gk_0_yy = primBuffer.data(gkoff + 6 * idx + 3);

                auto gk_0_yz = primBuffer.data(gkoff + 6 * idx + 4);

                auto gk_0_zz = primBuffer.data(gkoff + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SF)^(m+1) integrals

                auto g11_0_xxx = primBuffer.data(g11off + 10 * idx);

                auto g11_0_xxy = primBuffer.data(g11off + 10 * idx + 1);

                auto g11_0_xxz = primBuffer.data(g11off + 10 * idx + 2);

                auto g11_0_xyy = primBuffer.data(g11off + 10 * idx + 3);

                auto g11_0_xyz = primBuffer.data(g11off + 10 * idx + 4);

                auto g11_0_xzz = primBuffer.data(g11off + 10 * idx + 5);

                auto g11_0_yyy = primBuffer.data(g11off + 10 * idx + 6);

                auto g11_0_yyz = primBuffer.data(g11off + 10 * idx + 7);

                auto g11_0_yzz = primBuffer.data(g11off + 10 * idx + 8);

                auto g11_0_zzz = primBuffer.data(g11off + 10 * idx + 9);

                // set up pointers to (P|g(r,r')|SF)^(m) integrals

                auto g_x_xxx = primBuffer.data(goff + 30 * idx);

                auto g_x_xxy = primBuffer.data(goff + 30 * idx + 1);

                auto g_x_xxz = primBuffer.data(goff + 30 * idx + 2);

                auto g_x_xyy = primBuffer.data(goff + 30 * idx + 3);

                auto g_x_xyz = primBuffer.data(goff + 30 * idx + 4);

                auto g_x_xzz = primBuffer.data(goff + 30 * idx + 5);

                auto g_x_yyy = primBuffer.data(goff + 30 * idx + 6);

                auto g_x_yyz = primBuffer.data(goff + 30 * idx + 7);

                auto g_x_yzz = primBuffer.data(goff + 30 * idx + 8);

                auto g_x_zzz = primBuffer.data(goff + 30 * idx + 9);

                auto g_y_xxx = primBuffer.data(goff + 30 * idx + 10);

                auto g_y_xxy = primBuffer.data(goff + 30 * idx + 11);

                auto g_y_xxz = primBuffer.data(goff + 30 * idx + 12);

                auto g_y_xyy = primBuffer.data(goff + 30 * idx + 13);

                auto g_y_xyz = primBuffer.data(goff + 30 * idx + 14);

                auto g_y_xzz = primBuffer.data(goff + 30 * idx + 15);

                auto g_y_yyy = primBuffer.data(goff + 30 * idx + 16);

                auto g_y_yyz = primBuffer.data(goff + 30 * idx + 17);

                auto g_y_yzz = primBuffer.data(goff + 30 * idx + 18);

                auto g_y_zzz = primBuffer.data(goff + 30 * idx + 19);

                auto g_z_xxx = primBuffer.data(goff + 30 * idx + 20);

                auto g_z_xxy = primBuffer.data(goff + 30 * idx + 21);

                auto g_z_xxz = primBuffer.data(goff + 30 * idx + 22);

                auto g_z_xyy = primBuffer.data(goff + 30 * idx + 23);

                auto g_z_xyz = primBuffer.data(goff + 30 * idx + 24);

                auto g_z_xzz = primBuffer.data(goff + 30 * idx + 25);

                auto g_z_yyy = primBuffer.data(goff + 30 * idx + 26);

                auto g_z_yyz = primBuffer.data(goff + 30 * idx + 27);

                auto g_z_yzz = primBuffer.data(goff + 30 * idx + 28);

                auto g_z_zzz = primBuffer.data(goff + 30 * idx + 29);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xx, gk_0_xy, gk_0_xz,\
                                         gk_0_yy, gk_0_yz, gk_0_zz, g11_0_xxx,\
                                         g11_0_xxy, g11_0_xxz, g11_0_xyy, g11_0_xyz,\
                                         g11_0_xzz, g11_0_yyy, g11_0_yyz, g11_0_yzz,\
                                         g11_0_zzz, g_x_xxx, g_x_xxy, g_x_xxz,\
                                         g_x_xyy, g_x_xyz, g_x_xzz, g_x_yyy, g_x_yyz,\
                                         g_x_yzz, g_x_zzz, g_y_xxx, g_y_xxy, g_y_xxz,\
                                         g_y_xyy, g_y_xyz, g_y_xzz, g_y_yyy, g_y_yyz,\
                                         g_y_yzz, g_y_zzz, g_z_xxx, g_z_xxy, g_z_xxz,\
                                         g_z_xyy, g_z_xyz, g_z_xzz, g_z_yyy, g_z_yyz,\
                                         g_z_yzz, g_z_zzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxx[k] = fr * g11_0_xxx[k] + 3.0 * f2t * gk_0_xx[k];

                    g_x_xxy[k] = fr * g11_0_xxy[k] + 2.0 * f2t * gk_0_xy[k];

                    g_x_xxz[k] = fr * g11_0_xxz[k] + 2.0 * f2t * gk_0_xz[k];

                    g_x_xyy[k] = fr * g11_0_xyy[k] + f2t * gk_0_yy[k];

                    g_x_xyz[k] = fr * g11_0_xyz[k] + f2t * gk_0_yz[k];

                    g_x_xzz[k] = fr * g11_0_xzz[k] + f2t * gk_0_zz[k];

                    g_x_yyy[k] = fr * g11_0_yyy[k];

                    g_x_yyz[k] = fr * g11_0_yyz[k];

                    g_x_yzz[k] = fr * g11_0_yzz[k];

                    g_x_zzz[k] = fr * g11_0_zzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxx[k] = fr * g11_0_xxx[k];

                    g_y_xxy[k] = fr * g11_0_xxy[k] + f2t * gk_0_xx[k];

                    g_y_xxz[k] = fr * g11_0_xxz[k];

                    g_y_xyy[k] = fr * g11_0_xyy[k] + 2.0 * f2t * gk_0_xy[k];

                    g_y_xyz[k] = fr * g11_0_xyz[k] + f2t * gk_0_xz[k];

                    g_y_xzz[k] = fr * g11_0_xzz[k];

                    g_y_yyy[k] = fr * g11_0_yyy[k] + 3.0 * f2t * gk_0_yy[k];

                    g_y_yyz[k] = fr * g11_0_yyz[k] + 2.0 * f2t * gk_0_yz[k];

                    g_y_yzz[k] = fr * g11_0_yzz[k] + f2t * gk_0_zz[k];

                    g_y_zzz[k] = fr * g11_0_zzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxx[k] = fr * g11_0_xxx[k];

                    g_z_xxy[k] = fr * g11_0_xxy[k];

                    g_z_xxz[k] = fr * g11_0_xxz[k] + f2t * gk_0_xx[k];

                    g_z_xyy[k] = fr * g11_0_xyy[k];

                    g_z_xyz[k] = fr * g11_0_xyz[k] + f2t * gk_0_xy[k];

                    g_z_xzz[k] = fr * g11_0_xzz[k] + 2.0 * f2t * gk_0_xz[k];

                    g_z_yyy[k] = fr * g11_0_yyy[k];

                    g_z_yyz[k] = fr * g11_0_yyz[k] + f2t * gk_0_yy[k];

                    g_z_yzz[k] = fr * g11_0_yzz[k] + 2.0 * f2t * gk_0_yz[k];

                    g_z_zzz[k] = fr * g11_0_zzz[k] + 3.0 * f2t * gk_0_zz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSP(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 1);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 1, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 1, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 1, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 1, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SS)^(m+1) integrals

                auto gk_xx_0 = primBuffer.data(gkoff + 6 * idx);

                auto gk_xy_0 = primBuffer.data(gkoff + 6 * idx + 1);

                auto gk_xz_0 = primBuffer.data(gkoff + 6 * idx + 2);

                auto gk_yy_0 = primBuffer.data(gkoff + 6 * idx + 3);

                auto gk_yz_0 = primBuffer.data(gkoff + 6 * idx + 4);

                auto gk_zz_0 = primBuffer.data(gkoff + 6 * idx + 5);

                // set up pointers to (P|g(r,r')|SP)^(m) integrals

                auto g20_x_x = primBuffer.data(g20off + 9 * idx);

                auto g20_x_y = primBuffer.data(g20off + 9 * idx + 1);

                auto g20_x_z = primBuffer.data(g20off + 9 * idx + 2);

                auto g20_y_x = primBuffer.data(g20off + 9 * idx + 3);

                auto g20_y_y = primBuffer.data(g20off + 9 * idx + 4);

                auto g20_y_z = primBuffer.data(g20off + 9 * idx + 5);

                auto g20_z_x = primBuffer.data(g20off + 9 * idx + 6);

                auto g20_z_y = primBuffer.data(g20off + 9 * idx + 7);

                auto g20_z_z = primBuffer.data(g20off + 9 * idx + 8);

                // set up pointers to (P|g(r,r')|SP)^(m+1) integrals

                auto g21_x_x = primBuffer.data(g21off + 9 * idx);

                auto g21_x_y = primBuffer.data(g21off + 9 * idx + 1);

                auto g21_x_z = primBuffer.data(g21off + 9 * idx + 2);

                auto g21_y_x = primBuffer.data(g21off + 9 * idx + 3);

                auto g21_y_y = primBuffer.data(g21off + 9 * idx + 4);

                auto g21_y_z = primBuffer.data(g21off + 9 * idx + 5);

                auto g21_z_x = primBuffer.data(g21off + 9 * idx + 6);

                auto g21_z_y = primBuffer.data(g21off + 9 * idx + 7);

                auto g21_z_z = primBuffer.data(g21off + 9 * idx + 8);

                // set up pointers to (D|g(r,r')|SP)^(m+1) integrals

                auto g11_xx_x = primBuffer.data(g11off + 18 * idx);

                auto g11_xx_y = primBuffer.data(g11off + 18 * idx + 1);

                auto g11_xx_z = primBuffer.data(g11off + 18 * idx + 2);

                auto g11_xy_x = primBuffer.data(g11off + 18 * idx + 3);

                auto g11_xy_y = primBuffer.data(g11off + 18 * idx + 4);

                auto g11_xy_z = primBuffer.data(g11off + 18 * idx + 5);

                auto g11_xz_x = primBuffer.data(g11off + 18 * idx + 6);

                auto g11_xz_y = primBuffer.data(g11off + 18 * idx + 7);

                auto g11_xz_z = primBuffer.data(g11off + 18 * idx + 8);

                auto g11_yy_x = primBuffer.data(g11off + 18 * idx + 9);

                auto g11_yy_y = primBuffer.data(g11off + 18 * idx + 10);

                auto g11_yy_z = primBuffer.data(g11off + 18 * idx + 11);

                auto g11_yz_x = primBuffer.data(g11off + 18 * idx + 12);

                auto g11_yz_y = primBuffer.data(g11off + 18 * idx + 13);

                auto g11_yz_z = primBuffer.data(g11off + 18 * idx + 14);

                auto g11_zz_x = primBuffer.data(g11off + 18 * idx + 15);

                auto g11_zz_y = primBuffer.data(g11off + 18 * idx + 16);

                auto g11_zz_z = primBuffer.data(g11off + 18 * idx + 17);

                // set up pointers to (F|g(r,r')|SP)^(m) integrals

                auto g_xxx_x = primBuffer.data(goff + 30 * idx);

                auto g_xxx_y = primBuffer.data(goff + 30 * idx + 1);

                auto g_xxx_z = primBuffer.data(goff + 30 * idx + 2);

                auto g_xxy_x = primBuffer.data(goff + 30 * idx + 3);

                auto g_xxy_y = primBuffer.data(goff + 30 * idx + 4);

                auto g_xxy_z = primBuffer.data(goff + 30 * idx + 5);

                auto g_xxz_x = primBuffer.data(goff + 30 * idx + 6);

                auto g_xxz_y = primBuffer.data(goff + 30 * idx + 7);

                auto g_xxz_z = primBuffer.data(goff + 30 * idx + 8);

                auto g_xyy_x = primBuffer.data(goff + 30 * idx + 9);

                auto g_xyy_y = primBuffer.data(goff + 30 * idx + 10);

                auto g_xyy_z = primBuffer.data(goff + 30 * idx + 11);

                auto g_xyz_x = primBuffer.data(goff + 30 * idx + 12);

                auto g_xyz_y = primBuffer.data(goff + 30 * idx + 13);

                auto g_xyz_z = primBuffer.data(goff + 30 * idx + 14);

                auto g_xzz_x = primBuffer.data(goff + 30 * idx + 15);

                auto g_xzz_y = primBuffer.data(goff + 30 * idx + 16);

                auto g_xzz_z = primBuffer.data(goff + 30 * idx + 17);

                auto g_yyy_x = primBuffer.data(goff + 30 * idx + 18);

                auto g_yyy_y = primBuffer.data(goff + 30 * idx + 19);

                auto g_yyy_z = primBuffer.data(goff + 30 * idx + 20);

                auto g_yyz_x = primBuffer.data(goff + 30 * idx + 21);

                auto g_yyz_y = primBuffer.data(goff + 30 * idx + 22);

                auto g_yyz_z = primBuffer.data(goff + 30 * idx + 23);

                auto g_yzz_x = primBuffer.data(goff + 30 * idx + 24);

                auto g_yzz_y = primBuffer.data(goff + 30 * idx + 25);

                auto g_yzz_z = primBuffer.data(goff + 30 * idx + 26);

                auto g_zzz_x = primBuffer.data(goff + 30 * idx + 27);

                auto g_zzz_y = primBuffer.data(goff + 30 * idx + 28);

                auto g_zzz_z = primBuffer.data(goff + 30 * idx + 29);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_0,\
                                         gk_xy_0, gk_xz_0, gk_yy_0, gk_yz_0, gk_zz_0,\
                                         g20_x_x, g20_x_y, g20_x_z, g20_y_x, g20_y_y,\
                                         g20_y_z, g20_z_x, g20_z_y, g20_z_z, g21_x_x,\
                                         g21_x_y, g21_x_z, g21_y_x, g21_y_y, g21_y_z,\
                                         g21_z_x, g21_z_y, g21_z_z, g11_xx_x, g11_xx_y,\
                                         g11_xx_z, g11_xy_x, g11_xy_y, g11_xy_z,\
                                         g11_xz_x, g11_xz_y, g11_xz_z, g11_yy_x,\
                                         g11_yy_y, g11_yy_z, g11_yz_x, g11_yz_y,\
                                         g11_yz_z, g11_zz_x, g11_zz_y, g11_zz_z,\
                                         g_xxx_x, g_xxx_y, g_xxx_z, g_xxy_x, g_xxy_y,\
                                         g_xxy_z, g_xxz_x, g_xxz_y, g_xxz_z, g_xyy_x,\
                                         g_xyy_y, g_xyy_z, g_xyz_x, g_xyz_y, g_xyz_z,\
                                         g_xzz_x, g_xzz_y, g_xzz_z, g_yyy_x, g_yyy_y,\
                                         g_yyy_z, g_yyz_x, g_yyz_y, g_yyz_z, g_yzz_x,\
                                         g_yzz_y, g_yzz_z, g_zzz_x, g_zzz_y, g_zzz_z: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_x[k] = fr * g11_xx_x[k] + f2g * (2.0 * g20_x_x[k] - 2.0 * fgz * g21_x_x[k]) + f2t * gk_xx_0[k];

                    g_xxx_y[k] = fr * g11_xx_y[k] + f2g * (2.0 * g20_x_y[k] - 2.0 * fgz * g21_x_y[k]);

                    g_xxx_z[k] = fr * g11_xx_z[k] + f2g * (2.0 * g20_x_z[k] - 2.0 * fgz * g21_x_z[k]);

                    g_xxy_x[k] = fr * g11_xy_x[k] + f2g * (g20_y_x[k] - fgz * g21_y_x[k]) + f2t * gk_xy_0[k];

                    g_xxy_y[k] = fr * g11_xy_y[k] + f2g * (g20_y_y[k] - fgz * g21_y_y[k]);

                    g_xxy_z[k] = fr * g11_xy_z[k] + f2g * (g20_y_z[k] - fgz * g21_y_z[k]);

                    g_xxz_x[k] = fr * g11_xz_x[k] + f2g * (g20_z_x[k] - fgz * g21_z_x[k]) + f2t * gk_xz_0[k];

                    g_xxz_y[k] = fr * g11_xz_y[k] + f2g * (g20_z_y[k] - fgz * g21_z_y[k]);

                    g_xxz_z[k] = fr * g11_xz_z[k] + f2g * (g20_z_z[k] - fgz * g21_z_z[k]);

                    g_xyy_x[k] = fr * g11_yy_x[k] + f2t * gk_yy_0[k];

                    g_xyy_y[k] = fr * g11_yy_y[k];

                    g_xyy_z[k] = fr * g11_yy_z[k];

                    g_xyz_x[k] = fr * g11_yz_x[k] + f2t * gk_yz_0[k];

                    g_xyz_y[k] = fr * g11_yz_y[k];

                    g_xyz_z[k] = fr * g11_yz_z[k];

                    g_xzz_x[k] = fr * g11_zz_x[k] + f2t * gk_zz_0[k];

                    g_xzz_y[k] = fr * g11_zz_y[k];

                    g_xzz_z[k] = fr * g11_zz_z[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_x[k] = fr * g11_yy_x[k] + f2g * (2.0 * g20_y_x[k] - 2.0 * fgz * g21_y_x[k]);

                    g_yyy_y[k] = fr * g11_yy_y[k] + f2g * (2.0 * g20_y_y[k] - 2.0 * fgz * g21_y_y[k]) + f2t * gk_yy_0[k];

                    g_yyy_z[k] = fr * g11_yy_z[k] + f2g * (2.0 * g20_y_z[k] - 2.0 * fgz * g21_y_z[k]);

                    g_yyz_x[k] = fr * g11_yz_x[k] + f2g * (g20_z_x[k] - fgz * g21_z_x[k]);

                    g_yyz_y[k] = fr * g11_yz_y[k] + f2g * (g20_z_y[k] - fgz * g21_z_y[k]) + f2t * gk_yz_0[k];

                    g_yyz_z[k] = fr * g11_yz_z[k] + f2g * (g20_z_z[k] - fgz * g21_z_z[k]);

                    g_yzz_x[k] = fr * g11_zz_x[k];

                    g_yzz_y[k] = fr * g11_zz_y[k] + f2t * gk_zz_0[k];

                    g_yzz_z[k] = fr * g11_zz_z[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_x[k] = fr * g11_zz_x[k] + f2g * (2.0 * g20_z_x[k] - 2.0 * fgz * g21_z_x[k]);

                    g_zzz_y[k] = fr * g11_zz_y[k] + f2g * (2.0 * g20_z_y[k] - 2.0 * fgz * g21_z_y[k]);

                    g_zzz_z[k] = fr * g11_zz_z[k] + f2g * (2.0 * g20_z_z[k] - 2.0 * fgz * g21_z_z[k]) + f2t * gk_zz_0[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSF(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 3);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 3, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 3, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 2, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SD)^(m+1) integrals

                auto gk_x_xx = primBuffer.data(gkoff + 18 * idx);

                auto gk_x_xy = primBuffer.data(gkoff + 18 * idx + 1);

                auto gk_x_xz = primBuffer.data(gkoff + 18 * idx + 2);

                auto gk_x_yy = primBuffer.data(gkoff + 18 * idx + 3);

                auto gk_x_yz = primBuffer.data(gkoff + 18 * idx + 4);

                auto gk_x_zz = primBuffer.data(gkoff + 18 * idx + 5);

                auto gk_y_xx = primBuffer.data(gkoff + 18 * idx + 6);

                auto gk_y_xy = primBuffer.data(gkoff + 18 * idx + 7);

                auto gk_y_xz = primBuffer.data(gkoff + 18 * idx + 8);

                auto gk_y_yy = primBuffer.data(gkoff + 18 * idx + 9);

                auto gk_y_yz = primBuffer.data(gkoff + 18 * idx + 10);

                auto gk_y_zz = primBuffer.data(gkoff + 18 * idx + 11);

                auto gk_z_xx = primBuffer.data(gkoff + 18 * idx + 12);

                auto gk_z_xy = primBuffer.data(gkoff + 18 * idx + 13);

                auto gk_z_xz = primBuffer.data(gkoff + 18 * idx + 14);

                auto gk_z_yy = primBuffer.data(gkoff + 18 * idx + 15);

                auto gk_z_yz = primBuffer.data(gkoff + 18 * idx + 16);

                auto gk_z_zz = primBuffer.data(gkoff + 18 * idx + 17);

                // set up pointers to (S|g(r,r')|SF)^(m) integrals

                auto g20_0_xxx = primBuffer.data(g20off + 10 * idx);

                auto g20_0_xxy = primBuffer.data(g20off + 10 * idx + 1);

                auto g20_0_xxz = primBuffer.data(g20off + 10 * idx + 2);

                auto g20_0_xyy = primBuffer.data(g20off + 10 * idx + 3);

                auto g20_0_xyz = primBuffer.data(g20off + 10 * idx + 4);

                auto g20_0_xzz = primBuffer.data(g20off + 10 * idx + 5);

                auto g20_0_yyy = primBuffer.data(g20off + 10 * idx + 6);

                auto g20_0_yyz = primBuffer.data(g20off + 10 * idx + 7);

                auto g20_0_yzz = primBuffer.data(g20off + 10 * idx + 8);

                auto g20_0_zzz = primBuffer.data(g20off + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SF)^(m+1) integrals

                auto g21_0_xxx = primBuffer.data(g21off + 10 * idx);

                auto g21_0_xxy = primBuffer.data(g21off + 10 * idx + 1);

                auto g21_0_xxz = primBuffer.data(g21off + 10 * idx + 2);

                auto g21_0_xyy = primBuffer.data(g21off + 10 * idx + 3);

                auto g21_0_xyz = primBuffer.data(g21off + 10 * idx + 4);

                auto g21_0_xzz = primBuffer.data(g21off + 10 * idx + 5);

                auto g21_0_yyy = primBuffer.data(g21off + 10 * idx + 6);

                auto g21_0_yyz = primBuffer.data(g21off + 10 * idx + 7);

                auto g21_0_yzz = primBuffer.data(g21off + 10 * idx + 8);

                auto g21_0_zzz = primBuffer.data(g21off + 10 * idx + 9);

                // set up pointers to (P|g(r,r')|SF)^(m+1) integrals

                auto g11_x_xxx = primBuffer.data(g11off + 30 * idx);

                auto g11_x_xxy = primBuffer.data(g11off + 30 * idx + 1);

                auto g11_x_xxz = primBuffer.data(g11off + 30 * idx + 2);

                auto g11_x_xyy = primBuffer.data(g11off + 30 * idx + 3);

                auto g11_x_xyz = primBuffer.data(g11off + 30 * idx + 4);

                auto g11_x_xzz = primBuffer.data(g11off + 30 * idx + 5);

                auto g11_x_yyy = primBuffer.data(g11off + 30 * idx + 6);

                auto g11_x_yyz = primBuffer.data(g11off + 30 * idx + 7);

                auto g11_x_yzz = primBuffer.data(g11off + 30 * idx + 8);

                auto g11_x_zzz = primBuffer.data(g11off + 30 * idx + 9);

                auto g11_y_xxx = primBuffer.data(g11off + 30 * idx + 10);

                auto g11_y_xxy = primBuffer.data(g11off + 30 * idx + 11);

                auto g11_y_xxz = primBuffer.data(g11off + 30 * idx + 12);

                auto g11_y_xyy = primBuffer.data(g11off + 30 * idx + 13);

                auto g11_y_xyz = primBuffer.data(g11off + 30 * idx + 14);

                auto g11_y_xzz = primBuffer.data(g11off + 30 * idx + 15);

                auto g11_y_yyy = primBuffer.data(g11off + 30 * idx + 16);

                auto g11_y_yyz = primBuffer.data(g11off + 30 * idx + 17);

                auto g11_y_yzz = primBuffer.data(g11off + 30 * idx + 18);

                auto g11_y_zzz = primBuffer.data(g11off + 30 * idx + 19);

                auto g11_z_xxx = primBuffer.data(g11off + 30 * idx + 20);

                auto g11_z_xxy = primBuffer.data(g11off + 30 * idx + 21);

                auto g11_z_xxz = primBuffer.data(g11off + 30 * idx + 22);

                auto g11_z_xyy = primBuffer.data(g11off + 30 * idx + 23);

                auto g11_z_xyz = primBuffer.data(g11off + 30 * idx + 24);

                auto g11_z_xzz = primBuffer.data(g11off + 30 * idx + 25);

                auto g11_z_yyy = primBuffer.data(g11off + 30 * idx + 26);

                auto g11_z_yyz = primBuffer.data(g11off + 30 * idx + 27);

                auto g11_z_yzz = primBuffer.data(g11off + 30 * idx + 28);

                auto g11_z_zzz = primBuffer.data(g11off + 30 * idx + 29);

                // set up pointers to (D|g(r,r')|SF)^(m) integrals

                auto g_xx_xxx = primBuffer.data(goff + 60 * idx);

                auto g_xx_xxy = primBuffer.data(goff + 60 * idx + 1);

                auto g_xx_xxz = primBuffer.data(goff + 60 * idx + 2);

                auto g_xx_xyy = primBuffer.data(goff + 60 * idx + 3);

                auto g_xx_xyz = primBuffer.data(goff + 60 * idx + 4);

                auto g_xx_xzz = primBuffer.data(goff + 60 * idx + 5);

                auto g_xx_yyy = primBuffer.data(goff + 60 * idx + 6);

                auto g_xx_yyz = primBuffer.data(goff + 60 * idx + 7);

                auto g_xx_yzz = primBuffer.data(goff + 60 * idx + 8);

                auto g_xx_zzz = primBuffer.data(goff + 60 * idx + 9);

                auto g_xy_xxx = primBuffer.data(goff + 60 * idx + 10);

                auto g_xy_xxy = primBuffer.data(goff + 60 * idx + 11);

                auto g_xy_xxz = primBuffer.data(goff + 60 * idx + 12);

                auto g_xy_xyy = primBuffer.data(goff + 60 * idx + 13);

                auto g_xy_xyz = primBuffer.data(goff + 60 * idx + 14);

                auto g_xy_xzz = primBuffer.data(goff + 60 * idx + 15);

                auto g_xy_yyy = primBuffer.data(goff + 60 * idx + 16);

                auto g_xy_yyz = primBuffer.data(goff + 60 * idx + 17);

                auto g_xy_yzz = primBuffer.data(goff + 60 * idx + 18);

                auto g_xy_zzz = primBuffer.data(goff + 60 * idx + 19);

                auto g_xz_xxx = primBuffer.data(goff + 60 * idx + 20);

                auto g_xz_xxy = primBuffer.data(goff + 60 * idx + 21);

                auto g_xz_xxz = primBuffer.data(goff + 60 * idx + 22);

                auto g_xz_xyy = primBuffer.data(goff + 60 * idx + 23);

                auto g_xz_xyz = primBuffer.data(goff + 60 * idx + 24);

                auto g_xz_xzz = primBuffer.data(goff + 60 * idx + 25);

                auto g_xz_yyy = primBuffer.data(goff + 60 * idx + 26);

                auto g_xz_yyz = primBuffer.data(goff + 60 * idx + 27);

                auto g_xz_yzz = primBuffer.data(goff + 60 * idx + 28);

                auto g_xz_zzz = primBuffer.data(goff + 60 * idx + 29);

                auto g_yy_xxx = primBuffer.data(goff + 60 * idx + 30);

                auto g_yy_xxy = primBuffer.data(goff + 60 * idx + 31);

                auto g_yy_xxz = primBuffer.data(goff + 60 * idx + 32);

                auto g_yy_xyy = primBuffer.data(goff + 60 * idx + 33);

                auto g_yy_xyz = primBuffer.data(goff + 60 * idx + 34);

                auto g_yy_xzz = primBuffer.data(goff + 60 * idx + 35);

                auto g_yy_yyy = primBuffer.data(goff + 60 * idx + 36);

                auto g_yy_yyz = primBuffer.data(goff + 60 * idx + 37);

                auto g_yy_yzz = primBuffer.data(goff + 60 * idx + 38);

                auto g_yy_zzz = primBuffer.data(goff + 60 * idx + 39);

                auto g_yz_xxx = primBuffer.data(goff + 60 * idx + 40);

                auto g_yz_xxy = primBuffer.data(goff + 60 * idx + 41);

                auto g_yz_xxz = primBuffer.data(goff + 60 * idx + 42);

                auto g_yz_xyy = primBuffer.data(goff + 60 * idx + 43);

                auto g_yz_xyz = primBuffer.data(goff + 60 * idx + 44);

                auto g_yz_xzz = primBuffer.data(goff + 60 * idx + 45);

                auto g_yz_yyy = primBuffer.data(goff + 60 * idx + 46);

                auto g_yz_yyz = primBuffer.data(goff + 60 * idx + 47);

                auto g_yz_yzz = primBuffer.data(goff + 60 * idx + 48);

                auto g_yz_zzz = primBuffer.data(goff + 60 * idx + 49);

                auto g_zz_xxx = primBuffer.data(goff + 60 * idx + 50);

                auto g_zz_xxy = primBuffer.data(goff + 60 * idx + 51);

                auto g_zz_xxz = primBuffer.data(goff + 60 * idx + 52);

                auto g_zz_xyy = primBuffer.data(goff + 60 * idx + 53);

                auto g_zz_xyz = primBuffer.data(goff + 60 * idx + 54);

                auto g_zz_xzz = primBuffer.data(goff + 60 * idx + 55);

                auto g_zz_yyy = primBuffer.data(goff + 60 * idx + 56);

                auto g_zz_yyz = primBuffer.data(goff + 60 * idx + 57);

                auto g_zz_yzz = primBuffer.data(goff + 60 * idx + 58);

                auto g_zz_zzz = primBuffer.data(goff + 60 * idx + 59);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xx,\
                                         gk_x_xy, gk_x_xz, gk_x_yy, gk_x_yz, gk_x_zz,\
                                         gk_y_xx, gk_y_xy, gk_y_xz, gk_y_yy, gk_y_yz,\
                                         gk_y_zz, gk_z_xx, gk_z_xy, gk_z_xz, gk_z_yy,\
                                         gk_z_yz, gk_z_zz, g20_0_xxx, g20_0_xxy,\
                                         g20_0_xxz, g20_0_xyy, g20_0_xyz, g20_0_xzz,\
                                         g20_0_yyy, g20_0_yyz, g20_0_yzz, g20_0_zzz,\
                                         g21_0_xxx, g21_0_xxy, g21_0_xxz, g21_0_xyy,\
                                         g21_0_xyz, g21_0_xzz, g21_0_yyy, g21_0_yyz,\
                                         g21_0_yzz, g21_0_zzz, g11_x_xxx, g11_x_xxy,\
                                         g11_x_xxz, g11_x_xyy, g11_x_xyz, g11_x_xzz,\
                                         g11_x_yyy, g11_x_yyz, g11_x_yzz, g11_x_zzz,\
                                         g11_y_xxx, g11_y_xxy, g11_y_xxz, g11_y_xyy,\
                                         g11_y_xyz, g11_y_xzz, g11_y_yyy, g11_y_yyz,\
                                         g11_y_yzz, g11_y_zzz, g11_z_xxx, g11_z_xxy,\
                                         g11_z_xxz, g11_z_xyy, g11_z_xyz, g11_z_xzz,\
                                         g11_z_yyy, g11_z_yyz, g11_z_yzz, g11_z_zzz,\
                                         g_xx_xxx, g_xx_xxy, g_xx_xxz, g_xx_xyy,\
                                         g_xx_xyz, g_xx_xzz, g_xx_yyy, g_xx_yyz,\
                                         g_xx_yzz, g_xx_zzz, g_xy_xxx, g_xy_xxy,\
                                         g_xy_xxz, g_xy_xyy, g_xy_xyz, g_xy_xzz,\
                                         g_xy_yyy, g_xy_yyz, g_xy_yzz, g_xy_zzz,\
                                         g_xz_xxx, g_xz_xxy, g_xz_xxz, g_xz_xyy,\
                                         g_xz_xyz, g_xz_xzz, g_xz_yyy, g_xz_yyz,\
                                         g_xz_yzz, g_xz_zzz, g_yy_xxx, g_yy_xxy,\
                                         g_yy_xxz, g_yy_xyy, g_yy_xyz, g_yy_xzz,\
                                         g_yy_yyy, g_yy_yyz, g_yy_yzz, g_yy_zzz,\
                                         g_yz_xxx, g_yz_xxy, g_yz_xxz, g_yz_xyy,\
                                         g_yz_xyz, g_yz_xzz, g_yz_yyy, g_yz_yyz,\
                                         g_yz_yzz, g_yz_zzz, g_zz_xxx, g_zz_xxy,\
                                         g_zz_xxz, g_zz_xyy, g_zz_xyz, g_zz_xzz,\
                                         g_zz_yyy, g_zz_yyz, g_zz_yzz, g_zz_zzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxx[k] = fr * g11_x_xxx[k] + f2g * (g20_0_xxx[k] - fgz * g21_0_xxx[k]) + 3.0 * f2t * gk_x_xx[k];

                    g_xx_xxy[k] = fr * g11_x_xxy[k] + f2g * (g20_0_xxy[k] - fgz * g21_0_xxy[k]) + 2.0 * f2t * gk_x_xy[k];

                    g_xx_xxz[k] = fr * g11_x_xxz[k] + f2g * (g20_0_xxz[k] - fgz * g21_0_xxz[k]) + 2.0 * f2t * gk_x_xz[k];

                    g_xx_xyy[k] = fr * g11_x_xyy[k] + f2g * (g20_0_xyy[k] - fgz * g21_0_xyy[k]) + f2t * gk_x_yy[k];

                    g_xx_xyz[k] = fr * g11_x_xyz[k] + f2g * (g20_0_xyz[k] - fgz * g21_0_xyz[k]) + f2t * gk_x_yz[k];

                    g_xx_xzz[k] = fr * g11_x_xzz[k] + f2g * (g20_0_xzz[k] - fgz * g21_0_xzz[k]) + f2t * gk_x_zz[k];

                    g_xx_yyy[k] = fr * g11_x_yyy[k] + f2g * (g20_0_yyy[k] - fgz * g21_0_yyy[k]);

                    g_xx_yyz[k] = fr * g11_x_yyz[k] + f2g * (g20_0_yyz[k] - fgz * g21_0_yyz[k]);

                    g_xx_yzz[k] = fr * g11_x_yzz[k] + f2g * (g20_0_yzz[k] - fgz * g21_0_yzz[k]);

                    g_xx_zzz[k] = fr * g11_x_zzz[k] + f2g * (g20_0_zzz[k] - fgz * g21_0_zzz[k]);

                    g_xy_xxx[k] = fr * g11_y_xxx[k] + 3.0 * f2t * gk_y_xx[k];

                    g_xy_xxy[k] = fr * g11_y_xxy[k] + 2.0 * f2t * gk_y_xy[k];

                    g_xy_xxz[k] = fr * g11_y_xxz[k] + 2.0 * f2t * gk_y_xz[k];

                    g_xy_xyy[k] = fr * g11_y_xyy[k] + f2t * gk_y_yy[k];

                    g_xy_xyz[k] = fr * g11_y_xyz[k] + f2t * gk_y_yz[k];

                    g_xy_xzz[k] = fr * g11_y_xzz[k] + f2t * gk_y_zz[k];

                    g_xy_yyy[k] = fr * g11_y_yyy[k];

                    g_xy_yyz[k] = fr * g11_y_yyz[k];

                    g_xy_yzz[k] = fr * g11_y_yzz[k];

                    g_xy_zzz[k] = fr * g11_y_zzz[k];

                    g_xz_xxx[k] = fr * g11_z_xxx[k] + 3.0 * f2t * gk_z_xx[k];

                    g_xz_xxy[k] = fr * g11_z_xxy[k] + 2.0 * f2t * gk_z_xy[k];

                    g_xz_xxz[k] = fr * g11_z_xxz[k] + 2.0 * f2t * gk_z_xz[k];

                    g_xz_xyy[k] = fr * g11_z_xyy[k] + f2t * gk_z_yy[k];

                    g_xz_xyz[k] = fr * g11_z_xyz[k] + f2t * gk_z_yz[k];

                    g_xz_xzz[k] = fr * g11_z_xzz[k] + f2t * gk_z_zz[k];

                    g_xz_yyy[k] = fr * g11_z_yyy[k];

                    g_xz_yyz[k] = fr * g11_z_yyz[k];

                    g_xz_yzz[k] = fr * g11_z_yzz[k];

                    g_xz_zzz[k] = fr * g11_z_zzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxx[k] = fr * g11_y_xxx[k] + f2g * (g20_0_xxx[k] - fgz * g21_0_xxx[k]);

                    g_yy_xxy[k] = fr * g11_y_xxy[k] + f2g * (g20_0_xxy[k] - fgz * g21_0_xxy[k]) + f2t * gk_y_xx[k];

                    g_yy_xxz[k] = fr * g11_y_xxz[k] + f2g * (g20_0_xxz[k] - fgz * g21_0_xxz[k]);

                    g_yy_xyy[k] = fr * g11_y_xyy[k] + f2g * (g20_0_xyy[k] - fgz * g21_0_xyy[k]) + 2.0 * f2t * gk_y_xy[k];

                    g_yy_xyz[k] = fr * g11_y_xyz[k] + f2g * (g20_0_xyz[k] - fgz * g21_0_xyz[k]) + f2t * gk_y_xz[k];

                    g_yy_xzz[k] = fr * g11_y_xzz[k] + f2g * (g20_0_xzz[k] - fgz * g21_0_xzz[k]);

                    g_yy_yyy[k] = fr * g11_y_yyy[k] + f2g * (g20_0_yyy[k] - fgz * g21_0_yyy[k]) + 3.0 * f2t * gk_y_yy[k];

                    g_yy_yyz[k] = fr * g11_y_yyz[k] + f2g * (g20_0_yyz[k] - fgz * g21_0_yyz[k]) + 2.0 * f2t * gk_y_yz[k];

                    g_yy_yzz[k] = fr * g11_y_yzz[k] + f2g * (g20_0_yzz[k] - fgz * g21_0_yzz[k]) + f2t * gk_y_zz[k];

                    g_yy_zzz[k] = fr * g11_y_zzz[k] + f2g * (g20_0_zzz[k] - fgz * g21_0_zzz[k]);

                    g_yz_xxx[k] = fr * g11_z_xxx[k];

                    g_yz_xxy[k] = fr * g11_z_xxy[k] + f2t * gk_z_xx[k];

                    g_yz_xxz[k] = fr * g11_z_xxz[k];

                    g_yz_xyy[k] = fr * g11_z_xyy[k] + 2.0 * f2t * gk_z_xy[k];

                    g_yz_xyz[k] = fr * g11_z_xyz[k] + f2t * gk_z_xz[k];

                    g_yz_xzz[k] = fr * g11_z_xzz[k];

                    g_yz_yyy[k] = fr * g11_z_yyy[k] + 3.0 * f2t * gk_z_yy[k];

                    g_yz_yyz[k] = fr * g11_z_yyz[k] + 2.0 * f2t * gk_z_yz[k];

                    g_yz_yzz[k] = fr * g11_z_yzz[k] + f2t * gk_z_zz[k];

                    g_yz_zzz[k] = fr * g11_z_zzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxx[k] = fr * g11_z_xxx[k] + f2g * (g20_0_xxx[k] - fgz * g21_0_xxx[k]);

                    g_zz_xxy[k] = fr * g11_z_xxy[k] + f2g * (g20_0_xxy[k] - fgz * g21_0_xxy[k]);

                    g_zz_xxz[k] = fr * g11_z_xxz[k] + f2g * (g20_0_xxz[k] - fgz * g21_0_xxz[k]) + f2t * gk_z_xx[k];

                    g_zz_xyy[k] = fr * g11_z_xyy[k] + f2g * (g20_0_xyy[k] - fgz * g21_0_xyy[k]);

                    g_zz_xyz[k] = fr * g11_z_xyz[k] + f2g * (g20_0_xyz[k] - fgz * g21_0_xyz[k]) + f2t * gk_z_xy[k];

                    g_zz_xzz[k] = fr * g11_z_xzz[k] + f2g * (g20_0_xzz[k] - fgz * g21_0_xzz[k]) + 2.0 * f2t * gk_z_xz[k];

                    g_zz_yyy[k] = fr * g11_z_yyy[k] + f2g * (g20_0_yyy[k] - fgz * g21_0_yyy[k]);

                    g_zz_yyz[k] = fr * g11_z_yyz[k] + f2g * (g20_0_yyz[k] - fgz * g21_0_yyz[k]) + f2t * gk_z_yy[k];

                    g_zz_yzz[k] = fr * g11_z_yzz[k] + f2g * (g20_0_yzz[k] - fgz * g21_0_yzz[k]) + 2.0 * f2t * gk_z_yz[k];

                    g_zz_zzz[k] = fr * g11_z_zzz[k] + f2g * (g20_0_zzz[k] - fgz * g21_0_zzz[k]) + 3.0 * f2t * gk_z_zz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSD(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 2);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 2, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 2, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 2, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 2, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 1, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SP)^(m+1) integrals

                auto gk_xx_x = primBuffer.data(gkoff + 18 * idx);

                auto gk_xx_y = primBuffer.data(gkoff + 18 * idx + 1);

                auto gk_xx_z = primBuffer.data(gkoff + 18 * idx + 2);

                auto gk_xy_x = primBuffer.data(gkoff + 18 * idx + 3);

                auto gk_xy_y = primBuffer.data(gkoff + 18 * idx + 4);

                auto gk_xy_z = primBuffer.data(gkoff + 18 * idx + 5);

                auto gk_xz_x = primBuffer.data(gkoff + 18 * idx + 6);

                auto gk_xz_y = primBuffer.data(gkoff + 18 * idx + 7);

                auto gk_xz_z = primBuffer.data(gkoff + 18 * idx + 8);

                auto gk_yy_x = primBuffer.data(gkoff + 18 * idx + 9);

                auto gk_yy_y = primBuffer.data(gkoff + 18 * idx + 10);

                auto gk_yy_z = primBuffer.data(gkoff + 18 * idx + 11);

                auto gk_yz_x = primBuffer.data(gkoff + 18 * idx + 12);

                auto gk_yz_y = primBuffer.data(gkoff + 18 * idx + 13);

                auto gk_yz_z = primBuffer.data(gkoff + 18 * idx + 14);

                auto gk_zz_x = primBuffer.data(gkoff + 18 * idx + 15);

                auto gk_zz_y = primBuffer.data(gkoff + 18 * idx + 16);

                auto gk_zz_z = primBuffer.data(gkoff + 18 * idx + 17);

                // set up pointers to (P|g(r,r')|SD)^(m) integrals

                auto g20_x_xx = primBuffer.data(g20off + 18 * idx);

                auto g20_x_xy = primBuffer.data(g20off + 18 * idx + 1);

                auto g20_x_xz = primBuffer.data(g20off + 18 * idx + 2);

                auto g20_x_yy = primBuffer.data(g20off + 18 * idx + 3);

                auto g20_x_yz = primBuffer.data(g20off + 18 * idx + 4);

                auto g20_x_zz = primBuffer.data(g20off + 18 * idx + 5);

                auto g20_y_xx = primBuffer.data(g20off + 18 * idx + 6);

                auto g20_y_xy = primBuffer.data(g20off + 18 * idx + 7);

                auto g20_y_xz = primBuffer.data(g20off + 18 * idx + 8);

                auto g20_y_yy = primBuffer.data(g20off + 18 * idx + 9);

                auto g20_y_yz = primBuffer.data(g20off + 18 * idx + 10);

                auto g20_y_zz = primBuffer.data(g20off + 18 * idx + 11);

                auto g20_z_xx = primBuffer.data(g20off + 18 * idx + 12);

                auto g20_z_xy = primBuffer.data(g20off + 18 * idx + 13);

                auto g20_z_xz = primBuffer.data(g20off + 18 * idx + 14);

                auto g20_z_yy = primBuffer.data(g20off + 18 * idx + 15);

                auto g20_z_yz = primBuffer.data(g20off + 18 * idx + 16);

                auto g20_z_zz = primBuffer.data(g20off + 18 * idx + 17);

                // set up pointers to (P|g(r,r')|SD)^(m+1) integrals

                auto g21_x_xx = primBuffer.data(g21off + 18 * idx);

                auto g21_x_xy = primBuffer.data(g21off + 18 * idx + 1);

                auto g21_x_xz = primBuffer.data(g21off + 18 * idx + 2);

                auto g21_x_yy = primBuffer.data(g21off + 18 * idx + 3);

                auto g21_x_yz = primBuffer.data(g21off + 18 * idx + 4);

                auto g21_x_zz = primBuffer.data(g21off + 18 * idx + 5);

                auto g21_y_xx = primBuffer.data(g21off + 18 * idx + 6);

                auto g21_y_xy = primBuffer.data(g21off + 18 * idx + 7);

                auto g21_y_xz = primBuffer.data(g21off + 18 * idx + 8);

                auto g21_y_yy = primBuffer.data(g21off + 18 * idx + 9);

                auto g21_y_yz = primBuffer.data(g21off + 18 * idx + 10);

                auto g21_y_zz = primBuffer.data(g21off + 18 * idx + 11);

                auto g21_z_xx = primBuffer.data(g21off + 18 * idx + 12);

                auto g21_z_xy = primBuffer.data(g21off + 18 * idx + 13);

                auto g21_z_xz = primBuffer.data(g21off + 18 * idx + 14);

                auto g21_z_yy = primBuffer.data(g21off + 18 * idx + 15);

                auto g21_z_yz = primBuffer.data(g21off + 18 * idx + 16);

                auto g21_z_zz = primBuffer.data(g21off + 18 * idx + 17);

                // set up pointers to (D|g(r,r')|SD)^(m+1) integrals

                auto g11_xx_xx = primBuffer.data(g11off + 36 * idx);

                auto g11_xx_xy = primBuffer.data(g11off + 36 * idx + 1);

                auto g11_xx_xz = primBuffer.data(g11off + 36 * idx + 2);

                auto g11_xx_yy = primBuffer.data(g11off + 36 * idx + 3);

                auto g11_xx_yz = primBuffer.data(g11off + 36 * idx + 4);

                auto g11_xx_zz = primBuffer.data(g11off + 36 * idx + 5);

                auto g11_xy_xx = primBuffer.data(g11off + 36 * idx + 6);

                auto g11_xy_xy = primBuffer.data(g11off + 36 * idx + 7);

                auto g11_xy_xz = primBuffer.data(g11off + 36 * idx + 8);

                auto g11_xy_yy = primBuffer.data(g11off + 36 * idx + 9);

                auto g11_xy_yz = primBuffer.data(g11off + 36 * idx + 10);

                auto g11_xy_zz = primBuffer.data(g11off + 36 * idx + 11);

                auto g11_xz_xx = primBuffer.data(g11off + 36 * idx + 12);

                auto g11_xz_xy = primBuffer.data(g11off + 36 * idx + 13);

                auto g11_xz_xz = primBuffer.data(g11off + 36 * idx + 14);

                auto g11_xz_yy = primBuffer.data(g11off + 36 * idx + 15);

                auto g11_xz_yz = primBuffer.data(g11off + 36 * idx + 16);

                auto g11_xz_zz = primBuffer.data(g11off + 36 * idx + 17);

                auto g11_yy_xx = primBuffer.data(g11off + 36 * idx + 18);

                auto g11_yy_xy = primBuffer.data(g11off + 36 * idx + 19);

                auto g11_yy_xz = primBuffer.data(g11off + 36 * idx + 20);

                auto g11_yy_yy = primBuffer.data(g11off + 36 * idx + 21);

                auto g11_yy_yz = primBuffer.data(g11off + 36 * idx + 22);

                auto g11_yy_zz = primBuffer.data(g11off + 36 * idx + 23);

                auto g11_yz_xx = primBuffer.data(g11off + 36 * idx + 24);

                auto g11_yz_xy = primBuffer.data(g11off + 36 * idx + 25);

                auto g11_yz_xz = primBuffer.data(g11off + 36 * idx + 26);

                auto g11_yz_yy = primBuffer.data(g11off + 36 * idx + 27);

                auto g11_yz_yz = primBuffer.data(g11off + 36 * idx + 28);

                auto g11_yz_zz = primBuffer.data(g11off + 36 * idx + 29);

                auto g11_zz_xx = primBuffer.data(g11off + 36 * idx + 30);

                auto g11_zz_xy = primBuffer.data(g11off + 36 * idx + 31);

                auto g11_zz_xz = primBuffer.data(g11off + 36 * idx + 32);

                auto g11_zz_yy = primBuffer.data(g11off + 36 * idx + 33);

                auto g11_zz_yz = primBuffer.data(g11off + 36 * idx + 34);

                auto g11_zz_zz = primBuffer.data(g11off + 36 * idx + 35);

                // set up pointers to (F|g(r,r')|SD)^(m) integrals

                auto g_xxx_xx = primBuffer.data(goff + 60 * idx);

                auto g_xxx_xy = primBuffer.data(goff + 60 * idx + 1);

                auto g_xxx_xz = primBuffer.data(goff + 60 * idx + 2);

                auto g_xxx_yy = primBuffer.data(goff + 60 * idx + 3);

                auto g_xxx_yz = primBuffer.data(goff + 60 * idx + 4);

                auto g_xxx_zz = primBuffer.data(goff + 60 * idx + 5);

                auto g_xxy_xx = primBuffer.data(goff + 60 * idx + 6);

                auto g_xxy_xy = primBuffer.data(goff + 60 * idx + 7);

                auto g_xxy_xz = primBuffer.data(goff + 60 * idx + 8);

                auto g_xxy_yy = primBuffer.data(goff + 60 * idx + 9);

                auto g_xxy_yz = primBuffer.data(goff + 60 * idx + 10);

                auto g_xxy_zz = primBuffer.data(goff + 60 * idx + 11);

                auto g_xxz_xx = primBuffer.data(goff + 60 * idx + 12);

                auto g_xxz_xy = primBuffer.data(goff + 60 * idx + 13);

                auto g_xxz_xz = primBuffer.data(goff + 60 * idx + 14);

                auto g_xxz_yy = primBuffer.data(goff + 60 * idx + 15);

                auto g_xxz_yz = primBuffer.data(goff + 60 * idx + 16);

                auto g_xxz_zz = primBuffer.data(goff + 60 * idx + 17);

                auto g_xyy_xx = primBuffer.data(goff + 60 * idx + 18);

                auto g_xyy_xy = primBuffer.data(goff + 60 * idx + 19);

                auto g_xyy_xz = primBuffer.data(goff + 60 * idx + 20);

                auto g_xyy_yy = primBuffer.data(goff + 60 * idx + 21);

                auto g_xyy_yz = primBuffer.data(goff + 60 * idx + 22);

                auto g_xyy_zz = primBuffer.data(goff + 60 * idx + 23);

                auto g_xyz_xx = primBuffer.data(goff + 60 * idx + 24);

                auto g_xyz_xy = primBuffer.data(goff + 60 * idx + 25);

                auto g_xyz_xz = primBuffer.data(goff + 60 * idx + 26);

                auto g_xyz_yy = primBuffer.data(goff + 60 * idx + 27);

                auto g_xyz_yz = primBuffer.data(goff + 60 * idx + 28);

                auto g_xyz_zz = primBuffer.data(goff + 60 * idx + 29);

                auto g_xzz_xx = primBuffer.data(goff + 60 * idx + 30);

                auto g_xzz_xy = primBuffer.data(goff + 60 * idx + 31);

                auto g_xzz_xz = primBuffer.data(goff + 60 * idx + 32);

                auto g_xzz_yy = primBuffer.data(goff + 60 * idx + 33);

                auto g_xzz_yz = primBuffer.data(goff + 60 * idx + 34);

                auto g_xzz_zz = primBuffer.data(goff + 60 * idx + 35);

                auto g_yyy_xx = primBuffer.data(goff + 60 * idx + 36);

                auto g_yyy_xy = primBuffer.data(goff + 60 * idx + 37);

                auto g_yyy_xz = primBuffer.data(goff + 60 * idx + 38);

                auto g_yyy_yy = primBuffer.data(goff + 60 * idx + 39);

                auto g_yyy_yz = primBuffer.data(goff + 60 * idx + 40);

                auto g_yyy_zz = primBuffer.data(goff + 60 * idx + 41);

                auto g_yyz_xx = primBuffer.data(goff + 60 * idx + 42);

                auto g_yyz_xy = primBuffer.data(goff + 60 * idx + 43);

                auto g_yyz_xz = primBuffer.data(goff + 60 * idx + 44);

                auto g_yyz_yy = primBuffer.data(goff + 60 * idx + 45);

                auto g_yyz_yz = primBuffer.data(goff + 60 * idx + 46);

                auto g_yyz_zz = primBuffer.data(goff + 60 * idx + 47);

                auto g_yzz_xx = primBuffer.data(goff + 60 * idx + 48);

                auto g_yzz_xy = primBuffer.data(goff + 60 * idx + 49);

                auto g_yzz_xz = primBuffer.data(goff + 60 * idx + 50);

                auto g_yzz_yy = primBuffer.data(goff + 60 * idx + 51);

                auto g_yzz_yz = primBuffer.data(goff + 60 * idx + 52);

                auto g_yzz_zz = primBuffer.data(goff + 60 * idx + 53);

                auto g_zzz_xx = primBuffer.data(goff + 60 * idx + 54);

                auto g_zzz_xy = primBuffer.data(goff + 60 * idx + 55);

                auto g_zzz_xz = primBuffer.data(goff + 60 * idx + 56);

                auto g_zzz_yy = primBuffer.data(goff + 60 * idx + 57);

                auto g_zzz_yz = primBuffer.data(goff + 60 * idx + 58);

                auto g_zzz_zz = primBuffer.data(goff + 60 * idx + 59);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_x,\
                                         gk_xx_y, gk_xx_z, gk_xy_x, gk_xy_y, gk_xy_z,\
                                         gk_xz_x, gk_xz_y, gk_xz_z, gk_yy_x, gk_yy_y,\
                                         gk_yy_z, gk_yz_x, gk_yz_y, gk_yz_z, gk_zz_x,\
                                         gk_zz_y, gk_zz_z, g20_x_xx, g20_x_xy,\
                                         g20_x_xz, g20_x_yy, g20_x_yz, g20_x_zz,\
                                         g20_y_xx, g20_y_xy, g20_y_xz, g20_y_yy,\
                                         g20_y_yz, g20_y_zz, g20_z_xx, g20_z_xy,\
                                         g20_z_xz, g20_z_yy, g20_z_yz, g20_z_zz,\
                                         g21_x_xx, g21_x_xy, g21_x_xz, g21_x_yy,\
                                         g21_x_yz, g21_x_zz, g21_y_xx, g21_y_xy,\
                                         g21_y_xz, g21_y_yy, g21_y_yz, g21_y_zz,\
                                         g21_z_xx, g21_z_xy, g21_z_xz, g21_z_yy,\
                                         g21_z_yz, g21_z_zz, g11_xx_xx, g11_xx_xy,\
                                         g11_xx_xz, g11_xx_yy, g11_xx_yz, g11_xx_zz,\
                                         g11_xy_xx, g11_xy_xy, g11_xy_xz, g11_xy_yy,\
                                         g11_xy_yz, g11_xy_zz, g11_xz_xx, g11_xz_xy,\
                                         g11_xz_xz, g11_xz_yy, g11_xz_yz, g11_xz_zz,\
                                         g11_yy_xx, g11_yy_xy, g11_yy_xz, g11_yy_yy,\
                                         g11_yy_yz, g11_yy_zz, g11_yz_xx, g11_yz_xy,\
                                         g11_yz_xz, g11_yz_yy, g11_yz_yz, g11_yz_zz,\
                                         g11_zz_xx, g11_zz_xy, g11_zz_xz, g11_zz_yy,\
                                         g11_zz_yz, g11_zz_zz, g_xxx_xx, g_xxx_xy,\
                                         g_xxx_xz, g_xxx_yy, g_xxx_yz, g_xxx_zz,\
                                         g_xxy_xx, g_xxy_xy, g_xxy_xz, g_xxy_yy,\
                                         g_xxy_yz, g_xxy_zz, g_xxz_xx, g_xxz_xy,\
                                         g_xxz_xz, g_xxz_yy, g_xxz_yz, g_xxz_zz,\
                                         g_xyy_xx, g_xyy_xy, g_xyy_xz, g_xyy_yy,\
                                         g_xyy_yz, g_xyy_zz, g_xyz_xx, g_xyz_xy,\
                                         g_xyz_xz, g_xyz_yy, g_xyz_yz, g_xyz_zz,\
                                         g_xzz_xx, g_xzz_xy, g_xzz_xz, g_xzz_yy,\
                                         g_xzz_yz, g_xzz_zz, g_yyy_xx, g_yyy_xy,\
                                         g_yyy_xz, g_yyy_yy, g_yyy_yz, g_yyy_zz,\
                                         g_yyz_xx, g_yyz_xy, g_yyz_xz, g_yyz_yy,\
                                         g_yyz_yz, g_yyz_zz, g_yzz_xx, g_yzz_xy,\
                                         g_yzz_xz, g_yzz_yy, g_yzz_yz, g_yzz_zz,\
                                         g_zzz_xx, g_zzz_xy, g_zzz_xz, g_zzz_yy,\
                                         g_zzz_yz, g_zzz_zz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xx[k] = fr * g11_xx_xx[k] + f2g * (2.0 * g20_x_xx[k] - 2.0 * fgz * g21_x_xx[k]) + 2.0 * f2t * gk_xx_x[k];

                    g_xxx_xy[k] = fr * g11_xx_xy[k] + f2g * (2.0 * g20_x_xy[k] - 2.0 * fgz * g21_x_xy[k]) + f2t * gk_xx_y[k];

                    g_xxx_xz[k] = fr * g11_xx_xz[k] + f2g * (2.0 * g20_x_xz[k] - 2.0 * fgz * g21_x_xz[k]) + f2t * gk_xx_z[k];

                    g_xxx_yy[k] = fr * g11_xx_yy[k] + f2g * (2.0 * g20_x_yy[k] - 2.0 * fgz * g21_x_yy[k]);

                    g_xxx_yz[k] = fr * g11_xx_yz[k] + f2g * (2.0 * g20_x_yz[k] - 2.0 * fgz * g21_x_yz[k]);

                    g_xxx_zz[k] = fr * g11_xx_zz[k] + f2g * (2.0 * g20_x_zz[k] - 2.0 * fgz * g21_x_zz[k]);

                    g_xxy_xx[k] = fr * g11_xy_xx[k] + f2g * (g20_y_xx[k] - fgz * g21_y_xx[k]) + 2.0 * f2t * gk_xy_x[k];

                    g_xxy_xy[k] = fr * g11_xy_xy[k] + f2g * (g20_y_xy[k] - fgz * g21_y_xy[k]) + f2t * gk_xy_y[k];

                    g_xxy_xz[k] = fr * g11_xy_xz[k] + f2g * (g20_y_xz[k] - fgz * g21_y_xz[k]) + f2t * gk_xy_z[k];

                    g_xxy_yy[k] = fr * g11_xy_yy[k] + f2g * (g20_y_yy[k] - fgz * g21_y_yy[k]);

                    g_xxy_yz[k] = fr * g11_xy_yz[k] + f2g * (g20_y_yz[k] - fgz * g21_y_yz[k]);

                    g_xxy_zz[k] = fr * g11_xy_zz[k] + f2g * (g20_y_zz[k] - fgz * g21_y_zz[k]);

                    g_xxz_xx[k] = fr * g11_xz_xx[k] + f2g * (g20_z_xx[k] - fgz * g21_z_xx[k]) + 2.0 * f2t * gk_xz_x[k];

                    g_xxz_xy[k] = fr * g11_xz_xy[k] + f2g * (g20_z_xy[k] - fgz * g21_z_xy[k]) + f2t * gk_xz_y[k];

                    g_xxz_xz[k] = fr * g11_xz_xz[k] + f2g * (g20_z_xz[k] - fgz * g21_z_xz[k]) + f2t * gk_xz_z[k];

                    g_xxz_yy[k] = fr * g11_xz_yy[k] + f2g * (g20_z_yy[k] - fgz * g21_z_yy[k]);

                    g_xxz_yz[k] = fr * g11_xz_yz[k] + f2g * (g20_z_yz[k] - fgz * g21_z_yz[k]);

                    g_xxz_zz[k] = fr * g11_xz_zz[k] + f2g * (g20_z_zz[k] - fgz * g21_z_zz[k]);

                    g_xyy_xx[k] = fr * g11_yy_xx[k] + 2.0 * f2t * gk_yy_x[k];

                    g_xyy_xy[k] = fr * g11_yy_xy[k] + f2t * gk_yy_y[k];

                    g_xyy_xz[k] = fr * g11_yy_xz[k] + f2t * gk_yy_z[k];

                    g_xyy_yy[k] = fr * g11_yy_yy[k];

                    g_xyy_yz[k] = fr * g11_yy_yz[k];

                    g_xyy_zz[k] = fr * g11_yy_zz[k];

                    g_xyz_xx[k] = fr * g11_yz_xx[k] + 2.0 * f2t * gk_yz_x[k];

                    g_xyz_xy[k] = fr * g11_yz_xy[k] + f2t * gk_yz_y[k];

                    g_xyz_xz[k] = fr * g11_yz_xz[k] + f2t * gk_yz_z[k];

                    g_xyz_yy[k] = fr * g11_yz_yy[k];

                    g_xyz_yz[k] = fr * g11_yz_yz[k];

                    g_xyz_zz[k] = fr * g11_yz_zz[k];

                    g_xzz_xx[k] = fr * g11_zz_xx[k] + 2.0 * f2t * gk_zz_x[k];

                    g_xzz_xy[k] = fr * g11_zz_xy[k] + f2t * gk_zz_y[k];

                    g_xzz_xz[k] = fr * g11_zz_xz[k] + f2t * gk_zz_z[k];

                    g_xzz_yy[k] = fr * g11_zz_yy[k];

                    g_xzz_yz[k] = fr * g11_zz_yz[k];

                    g_xzz_zz[k] = fr * g11_zz_zz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xx[k] = fr * g11_yy_xx[k] + f2g * (2.0 * g20_y_xx[k] - 2.0 * fgz * g21_y_xx[k]);

                    g_yyy_xy[k] = fr * g11_yy_xy[k] + f2g * (2.0 * g20_y_xy[k] - 2.0 * fgz * g21_y_xy[k]) + f2t * gk_yy_x[k];

                    g_yyy_xz[k] = fr * g11_yy_xz[k] + f2g * (2.0 * g20_y_xz[k] - 2.0 * fgz * g21_y_xz[k]);

                    g_yyy_yy[k] = fr * g11_yy_yy[k] + f2g * (2.0 * g20_y_yy[k] - 2.0 * fgz * g21_y_yy[k]) + 2.0 * f2t * gk_yy_y[k];

                    g_yyy_yz[k] = fr * g11_yy_yz[k] + f2g * (2.0 * g20_y_yz[k] - 2.0 * fgz * g21_y_yz[k]) + f2t * gk_yy_z[k];

                    g_yyy_zz[k] = fr * g11_yy_zz[k] + f2g * (2.0 * g20_y_zz[k] - 2.0 * fgz * g21_y_zz[k]);

                    g_yyz_xx[k] = fr * g11_yz_xx[k] + f2g * (g20_z_xx[k] - fgz * g21_z_xx[k]);

                    g_yyz_xy[k] = fr * g11_yz_xy[k] + f2g * (g20_z_xy[k] - fgz * g21_z_xy[k]) + f2t * gk_yz_x[k];

                    g_yyz_xz[k] = fr * g11_yz_xz[k] + f2g * (g20_z_xz[k] - fgz * g21_z_xz[k]);

                    g_yyz_yy[k] = fr * g11_yz_yy[k] + f2g * (g20_z_yy[k] - fgz * g21_z_yy[k]) + 2.0 * f2t * gk_yz_y[k];

                    g_yyz_yz[k] = fr * g11_yz_yz[k] + f2g * (g20_z_yz[k] - fgz * g21_z_yz[k]) + f2t * gk_yz_z[k];

                    g_yyz_zz[k] = fr * g11_yz_zz[k] + f2g * (g20_z_zz[k] - fgz * g21_z_zz[k]);

                    g_yzz_xx[k] = fr * g11_zz_xx[k];

                    g_yzz_xy[k] = fr * g11_zz_xy[k] + f2t * gk_zz_x[k];

                    g_yzz_xz[k] = fr * g11_zz_xz[k];

                    g_yzz_yy[k] = fr * g11_zz_yy[k] + 2.0 * f2t * gk_zz_y[k];

                    g_yzz_yz[k] = fr * g11_zz_yz[k] + f2t * gk_zz_z[k];

                    g_yzz_zz[k] = fr * g11_zz_zz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xx[k] = fr * g11_zz_xx[k] + f2g * (2.0 * g20_z_xx[k] - 2.0 * fgz * g21_z_xx[k]);

                    g_zzz_xy[k] = fr * g11_zz_xy[k] + f2g * (2.0 * g20_z_xy[k] - 2.0 * fgz * g21_z_xy[k]);

                    g_zzz_xz[k] = fr * g11_zz_xz[k] + f2g * (2.0 * g20_z_xz[k] - 2.0 * fgz * g21_z_xz[k]) + f2t * gk_zz_x[k];

                    g_zzz_yy[k] = fr * g11_zz_yy[k] + f2g * (2.0 * g20_z_yy[k] - 2.0 * fgz * g21_z_yy[k]);

                    g_zzz_yz[k] = fr * g11_zz_yz[k] + f2g * (2.0 * g20_z_yz[k] - 2.0 * fgz * g21_z_yz[k]) + f2t * gk_zz_y[k];

                    g_zzz_zz[k] = fr * g11_zz_zz[k] + f2g * (2.0 * g20_z_zz[k] - 2.0 * fgz * g21_z_zz[k]) + 2.0 * f2t * gk_zz_z[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSF(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 3);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 3, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 3, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 3, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 3, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 2, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SD)^(m+1) integrals

                auto gk_xx_xx = primBuffer.data(gkoff + 36 * idx);

                auto gk_xx_xy = primBuffer.data(gkoff + 36 * idx + 1);

                auto gk_xx_xz = primBuffer.data(gkoff + 36 * idx + 2);

                auto gk_xx_yy = primBuffer.data(gkoff + 36 * idx + 3);

                auto gk_xx_yz = primBuffer.data(gkoff + 36 * idx + 4);

                auto gk_xx_zz = primBuffer.data(gkoff + 36 * idx + 5);

                auto gk_xy_xx = primBuffer.data(gkoff + 36 * idx + 6);

                auto gk_xy_xy = primBuffer.data(gkoff + 36 * idx + 7);

                auto gk_xy_xz = primBuffer.data(gkoff + 36 * idx + 8);

                auto gk_xy_yy = primBuffer.data(gkoff + 36 * idx + 9);

                auto gk_xy_yz = primBuffer.data(gkoff + 36 * idx + 10);

                auto gk_xy_zz = primBuffer.data(gkoff + 36 * idx + 11);

                auto gk_xz_xx = primBuffer.data(gkoff + 36 * idx + 12);

                auto gk_xz_xy = primBuffer.data(gkoff + 36 * idx + 13);

                auto gk_xz_xz = primBuffer.data(gkoff + 36 * idx + 14);

                auto gk_xz_yy = primBuffer.data(gkoff + 36 * idx + 15);

                auto gk_xz_yz = primBuffer.data(gkoff + 36 * idx + 16);

                auto gk_xz_zz = primBuffer.data(gkoff + 36 * idx + 17);

                auto gk_yy_xx = primBuffer.data(gkoff + 36 * idx + 18);

                auto gk_yy_xy = primBuffer.data(gkoff + 36 * idx + 19);

                auto gk_yy_xz = primBuffer.data(gkoff + 36 * idx + 20);

                auto gk_yy_yy = primBuffer.data(gkoff + 36 * idx + 21);

                auto gk_yy_yz = primBuffer.data(gkoff + 36 * idx + 22);

                auto gk_yy_zz = primBuffer.data(gkoff + 36 * idx + 23);

                auto gk_yz_xx = primBuffer.data(gkoff + 36 * idx + 24);

                auto gk_yz_xy = primBuffer.data(gkoff + 36 * idx + 25);

                auto gk_yz_xz = primBuffer.data(gkoff + 36 * idx + 26);

                auto gk_yz_yy = primBuffer.data(gkoff + 36 * idx + 27);

                auto gk_yz_yz = primBuffer.data(gkoff + 36 * idx + 28);

                auto gk_yz_zz = primBuffer.data(gkoff + 36 * idx + 29);

                auto gk_zz_xx = primBuffer.data(gkoff + 36 * idx + 30);

                auto gk_zz_xy = primBuffer.data(gkoff + 36 * idx + 31);

                auto gk_zz_xz = primBuffer.data(gkoff + 36 * idx + 32);

                auto gk_zz_yy = primBuffer.data(gkoff + 36 * idx + 33);

                auto gk_zz_yz = primBuffer.data(gkoff + 36 * idx + 34);

                auto gk_zz_zz = primBuffer.data(gkoff + 36 * idx + 35);

                // set up pointers to (P|g(r,r')|SF)^(m) integrals

                auto g20_x_xxx = primBuffer.data(g20off + 30 * idx);

                auto g20_x_xxy = primBuffer.data(g20off + 30 * idx + 1);

                auto g20_x_xxz = primBuffer.data(g20off + 30 * idx + 2);

                auto g20_x_xyy = primBuffer.data(g20off + 30 * idx + 3);

                auto g20_x_xyz = primBuffer.data(g20off + 30 * idx + 4);

                auto g20_x_xzz = primBuffer.data(g20off + 30 * idx + 5);

                auto g20_x_yyy = primBuffer.data(g20off + 30 * idx + 6);

                auto g20_x_yyz = primBuffer.data(g20off + 30 * idx + 7);

                auto g20_x_yzz = primBuffer.data(g20off + 30 * idx + 8);

                auto g20_x_zzz = primBuffer.data(g20off + 30 * idx + 9);

                auto g20_y_xxx = primBuffer.data(g20off + 30 * idx + 10);

                auto g20_y_xxy = primBuffer.data(g20off + 30 * idx + 11);

                auto g20_y_xxz = primBuffer.data(g20off + 30 * idx + 12);

                auto g20_y_xyy = primBuffer.data(g20off + 30 * idx + 13);

                auto g20_y_xyz = primBuffer.data(g20off + 30 * idx + 14);

                auto g20_y_xzz = primBuffer.data(g20off + 30 * idx + 15);

                auto g20_y_yyy = primBuffer.data(g20off + 30 * idx + 16);

                auto g20_y_yyz = primBuffer.data(g20off + 30 * idx + 17);

                auto g20_y_yzz = primBuffer.data(g20off + 30 * idx + 18);

                auto g20_y_zzz = primBuffer.data(g20off + 30 * idx + 19);

                auto g20_z_xxx = primBuffer.data(g20off + 30 * idx + 20);

                auto g20_z_xxy = primBuffer.data(g20off + 30 * idx + 21);

                auto g20_z_xxz = primBuffer.data(g20off + 30 * idx + 22);

                auto g20_z_xyy = primBuffer.data(g20off + 30 * idx + 23);

                auto g20_z_xyz = primBuffer.data(g20off + 30 * idx + 24);

                auto g20_z_xzz = primBuffer.data(g20off + 30 * idx + 25);

                auto g20_z_yyy = primBuffer.data(g20off + 30 * idx + 26);

                auto g20_z_yyz = primBuffer.data(g20off + 30 * idx + 27);

                auto g20_z_yzz = primBuffer.data(g20off + 30 * idx + 28);

                auto g20_z_zzz = primBuffer.data(g20off + 30 * idx + 29);

                // set up pointers to (P|g(r,r')|SF)^(m+1) integrals

                auto g21_x_xxx = primBuffer.data(g21off + 30 * idx);

                auto g21_x_xxy = primBuffer.data(g21off + 30 * idx + 1);

                auto g21_x_xxz = primBuffer.data(g21off + 30 * idx + 2);

                auto g21_x_xyy = primBuffer.data(g21off + 30 * idx + 3);

                auto g21_x_xyz = primBuffer.data(g21off + 30 * idx + 4);

                auto g21_x_xzz = primBuffer.data(g21off + 30 * idx + 5);

                auto g21_x_yyy = primBuffer.data(g21off + 30 * idx + 6);

                auto g21_x_yyz = primBuffer.data(g21off + 30 * idx + 7);

                auto g21_x_yzz = primBuffer.data(g21off + 30 * idx + 8);

                auto g21_x_zzz = primBuffer.data(g21off + 30 * idx + 9);

                auto g21_y_xxx = primBuffer.data(g21off + 30 * idx + 10);

                auto g21_y_xxy = primBuffer.data(g21off + 30 * idx + 11);

                auto g21_y_xxz = primBuffer.data(g21off + 30 * idx + 12);

                auto g21_y_xyy = primBuffer.data(g21off + 30 * idx + 13);

                auto g21_y_xyz = primBuffer.data(g21off + 30 * idx + 14);

                auto g21_y_xzz = primBuffer.data(g21off + 30 * idx + 15);

                auto g21_y_yyy = primBuffer.data(g21off + 30 * idx + 16);

                auto g21_y_yyz = primBuffer.data(g21off + 30 * idx + 17);

                auto g21_y_yzz = primBuffer.data(g21off + 30 * idx + 18);

                auto g21_y_zzz = primBuffer.data(g21off + 30 * idx + 19);

                auto g21_z_xxx = primBuffer.data(g21off + 30 * idx + 20);

                auto g21_z_xxy = primBuffer.data(g21off + 30 * idx + 21);

                auto g21_z_xxz = primBuffer.data(g21off + 30 * idx + 22);

                auto g21_z_xyy = primBuffer.data(g21off + 30 * idx + 23);

                auto g21_z_xyz = primBuffer.data(g21off + 30 * idx + 24);

                auto g21_z_xzz = primBuffer.data(g21off + 30 * idx + 25);

                auto g21_z_yyy = primBuffer.data(g21off + 30 * idx + 26);

                auto g21_z_yyz = primBuffer.data(g21off + 30 * idx + 27);

                auto g21_z_yzz = primBuffer.data(g21off + 30 * idx + 28);

                auto g21_z_zzz = primBuffer.data(g21off + 30 * idx + 29);

                // set up pointers to (D|g(r,r')|SF)^(m+1) integrals

                auto g11_xx_xxx = primBuffer.data(g11off + 60 * idx);

                auto g11_xx_xxy = primBuffer.data(g11off + 60 * idx + 1);

                auto g11_xx_xxz = primBuffer.data(g11off + 60 * idx + 2);

                auto g11_xx_xyy = primBuffer.data(g11off + 60 * idx + 3);

                auto g11_xx_xyz = primBuffer.data(g11off + 60 * idx + 4);

                auto g11_xx_xzz = primBuffer.data(g11off + 60 * idx + 5);

                auto g11_xx_yyy = primBuffer.data(g11off + 60 * idx + 6);

                auto g11_xx_yyz = primBuffer.data(g11off + 60 * idx + 7);

                auto g11_xx_yzz = primBuffer.data(g11off + 60 * idx + 8);

                auto g11_xx_zzz = primBuffer.data(g11off + 60 * idx + 9);

                auto g11_xy_xxx = primBuffer.data(g11off + 60 * idx + 10);

                auto g11_xy_xxy = primBuffer.data(g11off + 60 * idx + 11);

                auto g11_xy_xxz = primBuffer.data(g11off + 60 * idx + 12);

                auto g11_xy_xyy = primBuffer.data(g11off + 60 * idx + 13);

                auto g11_xy_xyz = primBuffer.data(g11off + 60 * idx + 14);

                auto g11_xy_xzz = primBuffer.data(g11off + 60 * idx + 15);

                auto g11_xy_yyy = primBuffer.data(g11off + 60 * idx + 16);

                auto g11_xy_yyz = primBuffer.data(g11off + 60 * idx + 17);

                auto g11_xy_yzz = primBuffer.data(g11off + 60 * idx + 18);

                auto g11_xy_zzz = primBuffer.data(g11off + 60 * idx + 19);

                auto g11_xz_xxx = primBuffer.data(g11off + 60 * idx + 20);

                auto g11_xz_xxy = primBuffer.data(g11off + 60 * idx + 21);

                auto g11_xz_xxz = primBuffer.data(g11off + 60 * idx + 22);

                auto g11_xz_xyy = primBuffer.data(g11off + 60 * idx + 23);

                auto g11_xz_xyz = primBuffer.data(g11off + 60 * idx + 24);

                auto g11_xz_xzz = primBuffer.data(g11off + 60 * idx + 25);

                auto g11_xz_yyy = primBuffer.data(g11off + 60 * idx + 26);

                auto g11_xz_yyz = primBuffer.data(g11off + 60 * idx + 27);

                auto g11_xz_yzz = primBuffer.data(g11off + 60 * idx + 28);

                auto g11_xz_zzz = primBuffer.data(g11off + 60 * idx + 29);

                auto g11_yy_xxx = primBuffer.data(g11off + 60 * idx + 30);

                auto g11_yy_xxy = primBuffer.data(g11off + 60 * idx + 31);

                auto g11_yy_xxz = primBuffer.data(g11off + 60 * idx + 32);

                auto g11_yy_xyy = primBuffer.data(g11off + 60 * idx + 33);

                auto g11_yy_xyz = primBuffer.data(g11off + 60 * idx + 34);

                auto g11_yy_xzz = primBuffer.data(g11off + 60 * idx + 35);

                auto g11_yy_yyy = primBuffer.data(g11off + 60 * idx + 36);

                auto g11_yy_yyz = primBuffer.data(g11off + 60 * idx + 37);

                auto g11_yy_yzz = primBuffer.data(g11off + 60 * idx + 38);

                auto g11_yy_zzz = primBuffer.data(g11off + 60 * idx + 39);

                auto g11_yz_xxx = primBuffer.data(g11off + 60 * idx + 40);

                auto g11_yz_xxy = primBuffer.data(g11off + 60 * idx + 41);

                auto g11_yz_xxz = primBuffer.data(g11off + 60 * idx + 42);

                auto g11_yz_xyy = primBuffer.data(g11off + 60 * idx + 43);

                auto g11_yz_xyz = primBuffer.data(g11off + 60 * idx + 44);

                auto g11_yz_xzz = primBuffer.data(g11off + 60 * idx + 45);

                auto g11_yz_yyy = primBuffer.data(g11off + 60 * idx + 46);

                auto g11_yz_yyz = primBuffer.data(g11off + 60 * idx + 47);

                auto g11_yz_yzz = primBuffer.data(g11off + 60 * idx + 48);

                auto g11_yz_zzz = primBuffer.data(g11off + 60 * idx + 49);

                auto g11_zz_xxx = primBuffer.data(g11off + 60 * idx + 50);

                auto g11_zz_xxy = primBuffer.data(g11off + 60 * idx + 51);

                auto g11_zz_xxz = primBuffer.data(g11off + 60 * idx + 52);

                auto g11_zz_xyy = primBuffer.data(g11off + 60 * idx + 53);

                auto g11_zz_xyz = primBuffer.data(g11off + 60 * idx + 54);

                auto g11_zz_xzz = primBuffer.data(g11off + 60 * idx + 55);

                auto g11_zz_yyy = primBuffer.data(g11off + 60 * idx + 56);

                auto g11_zz_yyz = primBuffer.data(g11off + 60 * idx + 57);

                auto g11_zz_yzz = primBuffer.data(g11off + 60 * idx + 58);

                auto g11_zz_zzz = primBuffer.data(g11off + 60 * idx + 59);

                // set up pointers to (F|g(r,r')|SF)^(m) integrals

                auto g_xxx_xxx = primBuffer.data(goff + 100 * idx);

                auto g_xxx_xxy = primBuffer.data(goff + 100 * idx + 1);

                auto g_xxx_xxz = primBuffer.data(goff + 100 * idx + 2);

                auto g_xxx_xyy = primBuffer.data(goff + 100 * idx + 3);

                auto g_xxx_xyz = primBuffer.data(goff + 100 * idx + 4);

                auto g_xxx_xzz = primBuffer.data(goff + 100 * idx + 5);

                auto g_xxx_yyy = primBuffer.data(goff + 100 * idx + 6);

                auto g_xxx_yyz = primBuffer.data(goff + 100 * idx + 7);

                auto g_xxx_yzz = primBuffer.data(goff + 100 * idx + 8);

                auto g_xxx_zzz = primBuffer.data(goff + 100 * idx + 9);

                auto g_xxy_xxx = primBuffer.data(goff + 100 * idx + 10);

                auto g_xxy_xxy = primBuffer.data(goff + 100 * idx + 11);

                auto g_xxy_xxz = primBuffer.data(goff + 100 * idx + 12);

                auto g_xxy_xyy = primBuffer.data(goff + 100 * idx + 13);

                auto g_xxy_xyz = primBuffer.data(goff + 100 * idx + 14);

                auto g_xxy_xzz = primBuffer.data(goff + 100 * idx + 15);

                auto g_xxy_yyy = primBuffer.data(goff + 100 * idx + 16);

                auto g_xxy_yyz = primBuffer.data(goff + 100 * idx + 17);

                auto g_xxy_yzz = primBuffer.data(goff + 100 * idx + 18);

                auto g_xxy_zzz = primBuffer.data(goff + 100 * idx + 19);

                auto g_xxz_xxx = primBuffer.data(goff + 100 * idx + 20);

                auto g_xxz_xxy = primBuffer.data(goff + 100 * idx + 21);

                auto g_xxz_xxz = primBuffer.data(goff + 100 * idx + 22);

                auto g_xxz_xyy = primBuffer.data(goff + 100 * idx + 23);

                auto g_xxz_xyz = primBuffer.data(goff + 100 * idx + 24);

                auto g_xxz_xzz = primBuffer.data(goff + 100 * idx + 25);

                auto g_xxz_yyy = primBuffer.data(goff + 100 * idx + 26);

                auto g_xxz_yyz = primBuffer.data(goff + 100 * idx + 27);

                auto g_xxz_yzz = primBuffer.data(goff + 100 * idx + 28);

                auto g_xxz_zzz = primBuffer.data(goff + 100 * idx + 29);

                auto g_xyy_xxx = primBuffer.data(goff + 100 * idx + 30);

                auto g_xyy_xxy = primBuffer.data(goff + 100 * idx + 31);

                auto g_xyy_xxz = primBuffer.data(goff + 100 * idx + 32);

                auto g_xyy_xyy = primBuffer.data(goff + 100 * idx + 33);

                auto g_xyy_xyz = primBuffer.data(goff + 100 * idx + 34);

                auto g_xyy_xzz = primBuffer.data(goff + 100 * idx + 35);

                auto g_xyy_yyy = primBuffer.data(goff + 100 * idx + 36);

                auto g_xyy_yyz = primBuffer.data(goff + 100 * idx + 37);

                auto g_xyy_yzz = primBuffer.data(goff + 100 * idx + 38);

                auto g_xyy_zzz = primBuffer.data(goff + 100 * idx + 39);

                auto g_xyz_xxx = primBuffer.data(goff + 100 * idx + 40);

                auto g_xyz_xxy = primBuffer.data(goff + 100 * idx + 41);

                auto g_xyz_xxz = primBuffer.data(goff + 100 * idx + 42);

                auto g_xyz_xyy = primBuffer.data(goff + 100 * idx + 43);

                auto g_xyz_xyz = primBuffer.data(goff + 100 * idx + 44);

                auto g_xyz_xzz = primBuffer.data(goff + 100 * idx + 45);

                auto g_xyz_yyy = primBuffer.data(goff + 100 * idx + 46);

                auto g_xyz_yyz = primBuffer.data(goff + 100 * idx + 47);

                auto g_xyz_yzz = primBuffer.data(goff + 100 * idx + 48);

                auto g_xyz_zzz = primBuffer.data(goff + 100 * idx + 49);

                auto g_xzz_xxx = primBuffer.data(goff + 100 * idx + 50);

                auto g_xzz_xxy = primBuffer.data(goff + 100 * idx + 51);

                auto g_xzz_xxz = primBuffer.data(goff + 100 * idx + 52);

                auto g_xzz_xyy = primBuffer.data(goff + 100 * idx + 53);

                auto g_xzz_xyz = primBuffer.data(goff + 100 * idx + 54);

                auto g_xzz_xzz = primBuffer.data(goff + 100 * idx + 55);

                auto g_xzz_yyy = primBuffer.data(goff + 100 * idx + 56);

                auto g_xzz_yyz = primBuffer.data(goff + 100 * idx + 57);

                auto g_xzz_yzz = primBuffer.data(goff + 100 * idx + 58);

                auto g_xzz_zzz = primBuffer.data(goff + 100 * idx + 59);

                auto g_yyy_xxx = primBuffer.data(goff + 100 * idx + 60);

                auto g_yyy_xxy = primBuffer.data(goff + 100 * idx + 61);

                auto g_yyy_xxz = primBuffer.data(goff + 100 * idx + 62);

                auto g_yyy_xyy = primBuffer.data(goff + 100 * idx + 63);

                auto g_yyy_xyz = primBuffer.data(goff + 100 * idx + 64);

                auto g_yyy_xzz = primBuffer.data(goff + 100 * idx + 65);

                auto g_yyy_yyy = primBuffer.data(goff + 100 * idx + 66);

                auto g_yyy_yyz = primBuffer.data(goff + 100 * idx + 67);

                auto g_yyy_yzz = primBuffer.data(goff + 100 * idx + 68);

                auto g_yyy_zzz = primBuffer.data(goff + 100 * idx + 69);

                auto g_yyz_xxx = primBuffer.data(goff + 100 * idx + 70);

                auto g_yyz_xxy = primBuffer.data(goff + 100 * idx + 71);

                auto g_yyz_xxz = primBuffer.data(goff + 100 * idx + 72);

                auto g_yyz_xyy = primBuffer.data(goff + 100 * idx + 73);

                auto g_yyz_xyz = primBuffer.data(goff + 100 * idx + 74);

                auto g_yyz_xzz = primBuffer.data(goff + 100 * idx + 75);

                auto g_yyz_yyy = primBuffer.data(goff + 100 * idx + 76);

                auto g_yyz_yyz = primBuffer.data(goff + 100 * idx + 77);

                auto g_yyz_yzz = primBuffer.data(goff + 100 * idx + 78);

                auto g_yyz_zzz = primBuffer.data(goff + 100 * idx + 79);

                auto g_yzz_xxx = primBuffer.data(goff + 100 * idx + 80);

                auto g_yzz_xxy = primBuffer.data(goff + 100 * idx + 81);

                auto g_yzz_xxz = primBuffer.data(goff + 100 * idx + 82);

                auto g_yzz_xyy = primBuffer.data(goff + 100 * idx + 83);

                auto g_yzz_xyz = primBuffer.data(goff + 100 * idx + 84);

                auto g_yzz_xzz = primBuffer.data(goff + 100 * idx + 85);

                auto g_yzz_yyy = primBuffer.data(goff + 100 * idx + 86);

                auto g_yzz_yyz = primBuffer.data(goff + 100 * idx + 87);

                auto g_yzz_yzz = primBuffer.data(goff + 100 * idx + 88);

                auto g_yzz_zzz = primBuffer.data(goff + 100 * idx + 89);

                auto g_zzz_xxx = primBuffer.data(goff + 100 * idx + 90);

                auto g_zzz_xxy = primBuffer.data(goff + 100 * idx + 91);

                auto g_zzz_xxz = primBuffer.data(goff + 100 * idx + 92);

                auto g_zzz_xyy = primBuffer.data(goff + 100 * idx + 93);

                auto g_zzz_xyz = primBuffer.data(goff + 100 * idx + 94);

                auto g_zzz_xzz = primBuffer.data(goff + 100 * idx + 95);

                auto g_zzz_yyy = primBuffer.data(goff + 100 * idx + 96);

                auto g_zzz_yyz = primBuffer.data(goff + 100 * idx + 97);

                auto g_zzz_yzz = primBuffer.data(goff + 100 * idx + 98);

                auto g_zzz_zzz = primBuffer.data(goff + 100 * idx + 99);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xx,\
                                         gk_xx_xy, gk_xx_xz, gk_xx_yy, gk_xx_yz,\
                                         gk_xx_zz, gk_xy_xx, gk_xy_xy, gk_xy_xz,\
                                         gk_xy_yy, gk_xy_yz, gk_xy_zz, gk_xz_xx,\
                                         gk_xz_xy, gk_xz_xz, gk_xz_yy, gk_xz_yz,\
                                         gk_xz_zz, gk_yy_xx, gk_yy_xy, gk_yy_xz,\
                                         gk_yy_yy, gk_yy_yz, gk_yy_zz, gk_yz_xx,\
                                         gk_yz_xy, gk_yz_xz, gk_yz_yy, gk_yz_yz,\
                                         gk_yz_zz, gk_zz_xx, gk_zz_xy, gk_zz_xz,\
                                         gk_zz_yy, gk_zz_yz, gk_zz_zz, g20_x_xxx,\
                                         g20_x_xxy, g20_x_xxz, g20_x_xyy, g20_x_xyz,\
                                         g20_x_xzz, g20_x_yyy, g20_x_yyz, g20_x_yzz,\
                                         g20_x_zzz, g20_y_xxx, g20_y_xxy, g20_y_xxz,\
                                         g20_y_xyy, g20_y_xyz, g20_y_xzz, g20_y_yyy,\
                                         g20_y_yyz, g20_y_yzz, g20_y_zzz, g20_z_xxx,\
                                         g20_z_xxy, g20_z_xxz, g20_z_xyy, g20_z_xyz,\
                                         g20_z_xzz, g20_z_yyy, g20_z_yyz, g20_z_yzz,\
                                         g20_z_zzz, g21_x_xxx, g21_x_xxy, g21_x_xxz,\
                                         g21_x_xyy, g21_x_xyz, g21_x_xzz, g21_x_yyy,\
                                         g21_x_yyz, g21_x_yzz, g21_x_zzz, g21_y_xxx,\
                                         g21_y_xxy, g21_y_xxz, g21_y_xyy, g21_y_xyz,\
                                         g21_y_xzz, g21_y_yyy, g21_y_yyz, g21_y_yzz,\
                                         g21_y_zzz, g21_z_xxx, g21_z_xxy, g21_z_xxz,\
                                         g21_z_xyy, g21_z_xyz, g21_z_xzz, g21_z_yyy,\
                                         g21_z_yyz, g21_z_yzz, g21_z_zzz, g11_xx_xxx,\
                                         g11_xx_xxy, g11_xx_xxz, g11_xx_xyy, g11_xx_xyz,\
                                         g11_xx_xzz, g11_xx_yyy, g11_xx_yyz, g11_xx_yzz,\
                                         g11_xx_zzz, g11_xy_xxx, g11_xy_xxy, g11_xy_xxz,\
                                         g11_xy_xyy, g11_xy_xyz, g11_xy_xzz, g11_xy_yyy,\
                                         g11_xy_yyz, g11_xy_yzz, g11_xy_zzz, g11_xz_xxx,\
                                         g11_xz_xxy, g11_xz_xxz, g11_xz_xyy, g11_xz_xyz,\
                                         g11_xz_xzz, g11_xz_yyy, g11_xz_yyz, g11_xz_yzz,\
                                         g11_xz_zzz, g11_yy_xxx, g11_yy_xxy, g11_yy_xxz,\
                                         g11_yy_xyy, g11_yy_xyz, g11_yy_xzz, g11_yy_yyy,\
                                         g11_yy_yyz, g11_yy_yzz, g11_yy_zzz, g11_yz_xxx,\
                                         g11_yz_xxy, g11_yz_xxz, g11_yz_xyy, g11_yz_xyz,\
                                         g11_yz_xzz, g11_yz_yyy, g11_yz_yyz, g11_yz_yzz,\
                                         g11_yz_zzz, g11_zz_xxx, g11_zz_xxy, g11_zz_xxz,\
                                         g11_zz_xyy, g11_zz_xyz, g11_zz_xzz, g11_zz_yyy,\
                                         g11_zz_yyz, g11_zz_yzz, g11_zz_zzz, g_xxx_xxx,\
                                         g_xxx_xxy, g_xxx_xxz, g_xxx_xyy, g_xxx_xyz,\
                                         g_xxx_xzz, g_xxx_yyy, g_xxx_yyz, g_xxx_yzz,\
                                         g_xxx_zzz, g_xxy_xxx, g_xxy_xxy, g_xxy_xxz,\
                                         g_xxy_xyy, g_xxy_xyz, g_xxy_xzz, g_xxy_yyy,\
                                         g_xxy_yyz, g_xxy_yzz, g_xxy_zzz, g_xxz_xxx,\
                                         g_xxz_xxy, g_xxz_xxz, g_xxz_xyy, g_xxz_xyz,\
                                         g_xxz_xzz, g_xxz_yyy, g_xxz_yyz, g_xxz_yzz,\
                                         g_xxz_zzz, g_xyy_xxx, g_xyy_xxy, g_xyy_xxz,\
                                         g_xyy_xyy, g_xyy_xyz, g_xyy_xzz, g_xyy_yyy,\
                                         g_xyy_yyz, g_xyy_yzz, g_xyy_zzz, g_xyz_xxx,\
                                         g_xyz_xxy, g_xyz_xxz, g_xyz_xyy, g_xyz_xyz,\
                                         g_xyz_xzz, g_xyz_yyy, g_xyz_yyz, g_xyz_yzz,\
                                         g_xyz_zzz, g_xzz_xxx, g_xzz_xxy, g_xzz_xxz,\
                                         g_xzz_xyy, g_xzz_xyz, g_xzz_xzz, g_xzz_yyy,\
                                         g_xzz_yyz, g_xzz_yzz, g_xzz_zzz, g_yyy_xxx,\
                                         g_yyy_xxy, g_yyy_xxz, g_yyy_xyy, g_yyy_xyz,\
                                         g_yyy_xzz, g_yyy_yyy, g_yyy_yyz, g_yyy_yzz,\
                                         g_yyy_zzz, g_yyz_xxx, g_yyz_xxy, g_yyz_xxz,\
                                         g_yyz_xyy, g_yyz_xyz, g_yyz_xzz, g_yyz_yyy,\
                                         g_yyz_yyz, g_yyz_yzz, g_yyz_zzz, g_yzz_xxx,\
                                         g_yzz_xxy, g_yzz_xxz, g_yzz_xyy, g_yzz_xyz,\
                                         g_yzz_xzz, g_yzz_yyy, g_yzz_yyz, g_yzz_yzz,\
                                         g_yzz_zzz, g_zzz_xxx, g_zzz_xxy, g_zzz_xxz,\
                                         g_zzz_xyy, g_zzz_xyz, g_zzz_xzz, g_zzz_yyy,\
                                         g_zzz_yyz, g_zzz_yzz, g_zzz_zzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxx[k] = fr * g11_xx_xxx[k] + f2g * (2.0 * g20_x_xxx[k] - 2.0 * fgz * g21_x_xxx[k]) + 3.0 * f2t * gk_xx_xx[k];

                    g_xxx_xxy[k] = fr * g11_xx_xxy[k] + f2g * (2.0 * g20_x_xxy[k] - 2.0 * fgz * g21_x_xxy[k]) + 2.0 * f2t * gk_xx_xy[k];

                    g_xxx_xxz[k] = fr * g11_xx_xxz[k] + f2g * (2.0 * g20_x_xxz[k] - 2.0 * fgz * g21_x_xxz[k]) + 2.0 * f2t * gk_xx_xz[k];

                    g_xxx_xyy[k] = fr * g11_xx_xyy[k] + f2g * (2.0 * g20_x_xyy[k] - 2.0 * fgz * g21_x_xyy[k]) + f2t * gk_xx_yy[k];

                    g_xxx_xyz[k] = fr * g11_xx_xyz[k] + f2g * (2.0 * g20_x_xyz[k] - 2.0 * fgz * g21_x_xyz[k]) + f2t * gk_xx_yz[k];

                    g_xxx_xzz[k] = fr * g11_xx_xzz[k] + f2g * (2.0 * g20_x_xzz[k] - 2.0 * fgz * g21_x_xzz[k]) + f2t * gk_xx_zz[k];

                    g_xxx_yyy[k] = fr * g11_xx_yyy[k] + f2g * (2.0 * g20_x_yyy[k] - 2.0 * fgz * g21_x_yyy[k]);

                    g_xxx_yyz[k] = fr * g11_xx_yyz[k] + f2g * (2.0 * g20_x_yyz[k] - 2.0 * fgz * g21_x_yyz[k]);

                    g_xxx_yzz[k] = fr * g11_xx_yzz[k] + f2g * (2.0 * g20_x_yzz[k] - 2.0 * fgz * g21_x_yzz[k]);

                    g_xxx_zzz[k] = fr * g11_xx_zzz[k] + f2g * (2.0 * g20_x_zzz[k] - 2.0 * fgz * g21_x_zzz[k]);

                    g_xxy_xxx[k] = fr * g11_xy_xxx[k] + f2g * (g20_y_xxx[k] - fgz * g21_y_xxx[k]) + 3.0 * f2t * gk_xy_xx[k];

                    g_xxy_xxy[k] = fr * g11_xy_xxy[k] + f2g * (g20_y_xxy[k] - fgz * g21_y_xxy[k]) + 2.0 * f2t * gk_xy_xy[k];

                    g_xxy_xxz[k] = fr * g11_xy_xxz[k] + f2g * (g20_y_xxz[k] - fgz * g21_y_xxz[k]) + 2.0 * f2t * gk_xy_xz[k];

                    g_xxy_xyy[k] = fr * g11_xy_xyy[k] + f2g * (g20_y_xyy[k] - fgz * g21_y_xyy[k]) + f2t * gk_xy_yy[k];

                    g_xxy_xyz[k] = fr * g11_xy_xyz[k] + f2g * (g20_y_xyz[k] - fgz * g21_y_xyz[k]) + f2t * gk_xy_yz[k];

                    g_xxy_xzz[k] = fr * g11_xy_xzz[k] + f2g * (g20_y_xzz[k] - fgz * g21_y_xzz[k]) + f2t * gk_xy_zz[k];

                    g_xxy_yyy[k] = fr * g11_xy_yyy[k] + f2g * (g20_y_yyy[k] - fgz * g21_y_yyy[k]);

                    g_xxy_yyz[k] = fr * g11_xy_yyz[k] + f2g * (g20_y_yyz[k] - fgz * g21_y_yyz[k]);

                    g_xxy_yzz[k] = fr * g11_xy_yzz[k] + f2g * (g20_y_yzz[k] - fgz * g21_y_yzz[k]);

                    g_xxy_zzz[k] = fr * g11_xy_zzz[k] + f2g * (g20_y_zzz[k] - fgz * g21_y_zzz[k]);

                    g_xxz_xxx[k] = fr * g11_xz_xxx[k] + f2g * (g20_z_xxx[k] - fgz * g21_z_xxx[k]) + 3.0 * f2t * gk_xz_xx[k];

                    g_xxz_xxy[k] = fr * g11_xz_xxy[k] + f2g * (g20_z_xxy[k] - fgz * g21_z_xxy[k]) + 2.0 * f2t * gk_xz_xy[k];

                    g_xxz_xxz[k] = fr * g11_xz_xxz[k] + f2g * (g20_z_xxz[k] - fgz * g21_z_xxz[k]) + 2.0 * f2t * gk_xz_xz[k];

                    g_xxz_xyy[k] = fr * g11_xz_xyy[k] + f2g * (g20_z_xyy[k] - fgz * g21_z_xyy[k]) + f2t * gk_xz_yy[k];

                    g_xxz_xyz[k] = fr * g11_xz_xyz[k] + f2g * (g20_z_xyz[k] - fgz * g21_z_xyz[k]) + f2t * gk_xz_yz[k];

                    g_xxz_xzz[k] = fr * g11_xz_xzz[k] + f2g * (g20_z_xzz[k] - fgz * g21_z_xzz[k]) + f2t * gk_xz_zz[k];

                    g_xxz_yyy[k] = fr * g11_xz_yyy[k] + f2g * (g20_z_yyy[k] - fgz * g21_z_yyy[k]);

                    g_xxz_yyz[k] = fr * g11_xz_yyz[k] + f2g * (g20_z_yyz[k] - fgz * g21_z_yyz[k]);

                    g_xxz_yzz[k] = fr * g11_xz_yzz[k] + f2g * (g20_z_yzz[k] - fgz * g21_z_yzz[k]);

                    g_xxz_zzz[k] = fr * g11_xz_zzz[k] + f2g * (g20_z_zzz[k] - fgz * g21_z_zzz[k]);

                    g_xyy_xxx[k] = fr * g11_yy_xxx[k] + 3.0 * f2t * gk_yy_xx[k];

                    g_xyy_xxy[k] = fr * g11_yy_xxy[k] + 2.0 * f2t * gk_yy_xy[k];

                    g_xyy_xxz[k] = fr * g11_yy_xxz[k] + 2.0 * f2t * gk_yy_xz[k];

                    g_xyy_xyy[k] = fr * g11_yy_xyy[k] + f2t * gk_yy_yy[k];

                    g_xyy_xyz[k] = fr * g11_yy_xyz[k] + f2t * gk_yy_yz[k];

                    g_xyy_xzz[k] = fr * g11_yy_xzz[k] + f2t * gk_yy_zz[k];

                    g_xyy_yyy[k] = fr * g11_yy_yyy[k];

                    g_xyy_yyz[k] = fr * g11_yy_yyz[k];

                    g_xyy_yzz[k] = fr * g11_yy_yzz[k];

                    g_xyy_zzz[k] = fr * g11_yy_zzz[k];

                    g_xyz_xxx[k] = fr * g11_yz_xxx[k] + 3.0 * f2t * gk_yz_xx[k];

                    g_xyz_xxy[k] = fr * g11_yz_xxy[k] + 2.0 * f2t * gk_yz_xy[k];

                    g_xyz_xxz[k] = fr * g11_yz_xxz[k] + 2.0 * f2t * gk_yz_xz[k];

                    g_xyz_xyy[k] = fr * g11_yz_xyy[k] + f2t * gk_yz_yy[k];

                    g_xyz_xyz[k] = fr * g11_yz_xyz[k] + f2t * gk_yz_yz[k];

                    g_xyz_xzz[k] = fr * g11_yz_xzz[k] + f2t * gk_yz_zz[k];

                    g_xyz_yyy[k] = fr * g11_yz_yyy[k];

                    g_xyz_yyz[k] = fr * g11_yz_yyz[k];

                    g_xyz_yzz[k] = fr * g11_yz_yzz[k];

                    g_xyz_zzz[k] = fr * g11_yz_zzz[k];

                    g_xzz_xxx[k] = fr * g11_zz_xxx[k] + 3.0 * f2t * gk_zz_xx[k];

                    g_xzz_xxy[k] = fr * g11_zz_xxy[k] + 2.0 * f2t * gk_zz_xy[k];

                    g_xzz_xxz[k] = fr * g11_zz_xxz[k] + 2.0 * f2t * gk_zz_xz[k];

                    g_xzz_xyy[k] = fr * g11_zz_xyy[k] + f2t * gk_zz_yy[k];

                    g_xzz_xyz[k] = fr * g11_zz_xyz[k] + f2t * gk_zz_yz[k];

                    g_xzz_xzz[k] = fr * g11_zz_xzz[k] + f2t * gk_zz_zz[k];

                    g_xzz_yyy[k] = fr * g11_zz_yyy[k];

                    g_xzz_yyz[k] = fr * g11_zz_yyz[k];

                    g_xzz_yzz[k] = fr * g11_zz_yzz[k];

                    g_xzz_zzz[k] = fr * g11_zz_zzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxx[k] = fr * g11_yy_xxx[k] + f2g * (2.0 * g20_y_xxx[k] - 2.0 * fgz * g21_y_xxx[k]);

                    g_yyy_xxy[k] = fr * g11_yy_xxy[k] + f2g * (2.0 * g20_y_xxy[k] - 2.0 * fgz * g21_y_xxy[k]) + f2t * gk_yy_xx[k];

                    g_yyy_xxz[k] = fr * g11_yy_xxz[k] + f2g * (2.0 * g20_y_xxz[k] - 2.0 * fgz * g21_y_xxz[k]);

                    g_yyy_xyy[k] = fr * g11_yy_xyy[k] + f2g * (2.0 * g20_y_xyy[k] - 2.0 * fgz * g21_y_xyy[k]) + 2.0 * f2t * gk_yy_xy[k];

                    g_yyy_xyz[k] = fr * g11_yy_xyz[k] + f2g * (2.0 * g20_y_xyz[k] - 2.0 * fgz * g21_y_xyz[k]) + f2t * gk_yy_xz[k];

                    g_yyy_xzz[k] = fr * g11_yy_xzz[k] + f2g * (2.0 * g20_y_xzz[k] - 2.0 * fgz * g21_y_xzz[k]);

                    g_yyy_yyy[k] = fr * g11_yy_yyy[k] + f2g * (2.0 * g20_y_yyy[k] - 2.0 * fgz * g21_y_yyy[k]) + 3.0 * f2t * gk_yy_yy[k];

                    g_yyy_yyz[k] = fr * g11_yy_yyz[k] + f2g * (2.0 * g20_y_yyz[k] - 2.0 * fgz * g21_y_yyz[k]) + 2.0 * f2t * gk_yy_yz[k];

                    g_yyy_yzz[k] = fr * g11_yy_yzz[k] + f2g * (2.0 * g20_y_yzz[k] - 2.0 * fgz * g21_y_yzz[k]) + f2t * gk_yy_zz[k];

                    g_yyy_zzz[k] = fr * g11_yy_zzz[k] + f2g * (2.0 * g20_y_zzz[k] - 2.0 * fgz * g21_y_zzz[k]);

                    g_yyz_xxx[k] = fr * g11_yz_xxx[k] + f2g * (g20_z_xxx[k] - fgz * g21_z_xxx[k]);

                    g_yyz_xxy[k] = fr * g11_yz_xxy[k] + f2g * (g20_z_xxy[k] - fgz * g21_z_xxy[k]) + f2t * gk_yz_xx[k];

                    g_yyz_xxz[k] = fr * g11_yz_xxz[k] + f2g * (g20_z_xxz[k] - fgz * g21_z_xxz[k]);

                    g_yyz_xyy[k] = fr * g11_yz_xyy[k] + f2g * (g20_z_xyy[k] - fgz * g21_z_xyy[k]) + 2.0 * f2t * gk_yz_xy[k];

                    g_yyz_xyz[k] = fr * g11_yz_xyz[k] + f2g * (g20_z_xyz[k] - fgz * g21_z_xyz[k]) + f2t * gk_yz_xz[k];

                    g_yyz_xzz[k] = fr * g11_yz_xzz[k] + f2g * (g20_z_xzz[k] - fgz * g21_z_xzz[k]);

                    g_yyz_yyy[k] = fr * g11_yz_yyy[k] + f2g * (g20_z_yyy[k] - fgz * g21_z_yyy[k]) + 3.0 * f2t * gk_yz_yy[k];

                    g_yyz_yyz[k] = fr * g11_yz_yyz[k] + f2g * (g20_z_yyz[k] - fgz * g21_z_yyz[k]) + 2.0 * f2t * gk_yz_yz[k];

                    g_yyz_yzz[k] = fr * g11_yz_yzz[k] + f2g * (g20_z_yzz[k] - fgz * g21_z_yzz[k]) + f2t * gk_yz_zz[k];

                    g_yyz_zzz[k] = fr * g11_yz_zzz[k] + f2g * (g20_z_zzz[k] - fgz * g21_z_zzz[k]);

                    g_yzz_xxx[k] = fr * g11_zz_xxx[k];

                    g_yzz_xxy[k] = fr * g11_zz_xxy[k] + f2t * gk_zz_xx[k];

                    g_yzz_xxz[k] = fr * g11_zz_xxz[k];

                    g_yzz_xyy[k] = fr * g11_zz_xyy[k] + 2.0 * f2t * gk_zz_xy[k];

                    g_yzz_xyz[k] = fr * g11_zz_xyz[k] + f2t * gk_zz_xz[k];

                    g_yzz_xzz[k] = fr * g11_zz_xzz[k];

                    g_yzz_yyy[k] = fr * g11_zz_yyy[k] + 3.0 * f2t * gk_zz_yy[k];

                    g_yzz_yyz[k] = fr * g11_zz_yyz[k] + 2.0 * f2t * gk_zz_yz[k];

                    g_yzz_yzz[k] = fr * g11_zz_yzz[k] + f2t * gk_zz_zz[k];

                    g_yzz_zzz[k] = fr * g11_zz_zzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxx[k] = fr * g11_zz_xxx[k] + f2g * (2.0 * g20_z_xxx[k] - 2.0 * fgz * g21_z_xxx[k]);

                    g_zzz_xxy[k] = fr * g11_zz_xxy[k] + f2g * (2.0 * g20_z_xxy[k] - 2.0 * fgz * g21_z_xxy[k]);

                    g_zzz_xxz[k] = fr * g11_zz_xxz[k] + f2g * (2.0 * g20_z_xxz[k] - 2.0 * fgz * g21_z_xxz[k]) + f2t * gk_zz_xx[k];

                    g_zzz_xyy[k] = fr * g11_zz_xyy[k] + f2g * (2.0 * g20_z_xyy[k] - 2.0 * fgz * g21_z_xyy[k]);

                    g_zzz_xyz[k] = fr * g11_zz_xyz[k] + f2g * (2.0 * g20_z_xyz[k] - 2.0 * fgz * g21_z_xyz[k]) + f2t * gk_zz_xy[k];

                    g_zzz_xzz[k] = fr * g11_zz_xzz[k] + f2g * (2.0 * g20_z_xzz[k] - 2.0 * fgz * g21_z_xzz[k]) + 2.0 * f2t * gk_zz_xz[k];

                    g_zzz_yyy[k] = fr * g11_zz_yyy[k] + f2g * (2.0 * g20_z_yyy[k] - 2.0 * fgz * g21_z_yyy[k]);

                    g_zzz_yyz[k] = fr * g11_zz_yyz[k] + f2g * (2.0 * g20_z_yyz[k] - 2.0 * fgz * g21_z_yyz[k]) + f2t * gk_zz_yy[k];

                    g_zzz_yzz[k] = fr * g11_zz_yzz[k] + f2g * (2.0 * g20_z_yzz[k] - 2.0 * fgz * g21_z_yzz[k]) + 2.0 * f2t * gk_zz_yz[k];

                    g_zzz_zzz[k] = fr * g11_zz_zzz[k] + f2g * (2.0 * g20_z_zzz[k] - 2.0 * fgz * g21_z_zzz[k]) + 3.0 * f2t * gk_zz_zz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSG(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 4);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 4, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 2, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SD)^(m) integrals

                auto g20_0_xx = primBuffer.data(g20off + 6 * idx);

                auto g20_0_xy = primBuffer.data(g20off + 6 * idx + 1);

                auto g20_0_xz = primBuffer.data(g20off + 6 * idx + 2);

                auto g20_0_yy = primBuffer.data(g20off + 6 * idx + 3);

                auto g20_0_yz = primBuffer.data(g20off + 6 * idx + 4);

                auto g20_0_zz = primBuffer.data(g20off + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SD)^(m+1) integrals

                auto g21_0_xx = primBuffer.data(g21off + 6 * idx);

                auto g21_0_xy = primBuffer.data(g21off + 6 * idx + 1);

                auto g21_0_xz = primBuffer.data(g21off + 6 * idx + 2);

                auto g21_0_yy = primBuffer.data(g21off + 6 * idx + 3);

                auto g21_0_yz = primBuffer.data(g21off + 6 * idx + 4);

                auto g21_0_zz = primBuffer.data(g21off + 6 * idx + 5);

                // set up pointers to (S|g(r,r')|SF)^(m) integrals

                auto g10_0_xxx = primBuffer.data(g10off + 10 * idx);

                auto g10_0_xxy = primBuffer.data(g10off + 10 * idx + 1);

                auto g10_0_xxz = primBuffer.data(g10off + 10 * idx + 2);

                auto g10_0_xyy = primBuffer.data(g10off + 10 * idx + 3);

                auto g10_0_xyz = primBuffer.data(g10off + 10 * idx + 4);

                auto g10_0_xzz = primBuffer.data(g10off + 10 * idx + 5);

                auto g10_0_yyy = primBuffer.data(g10off + 10 * idx + 6);

                auto g10_0_yyz = primBuffer.data(g10off + 10 * idx + 7);

                auto g10_0_yzz = primBuffer.data(g10off + 10 * idx + 8);

                auto g10_0_zzz = primBuffer.data(g10off + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SF)^(m+1) integrals

                auto g11_0_xxx = primBuffer.data(g11off + 10 * idx);

                auto g11_0_xxy = primBuffer.data(g11off + 10 * idx + 1);

                auto g11_0_xxz = primBuffer.data(g11off + 10 * idx + 2);

                auto g11_0_xyy = primBuffer.data(g11off + 10 * idx + 3);

                auto g11_0_xyz = primBuffer.data(g11off + 10 * idx + 4);

                auto g11_0_xzz = primBuffer.data(g11off + 10 * idx + 5);

                auto g11_0_yyy = primBuffer.data(g11off + 10 * idx + 6);

                auto g11_0_yyz = primBuffer.data(g11off + 10 * idx + 7);

                auto g11_0_yzz = primBuffer.data(g11off + 10 * idx + 8);

                auto g11_0_zzz = primBuffer.data(g11off + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SG)^(m) integrals

                auto g_0_xxxx = primBuffer.data(goff + 15 * idx);

                auto g_0_xxxy = primBuffer.data(goff + 15 * idx + 1);

                auto g_0_xxxz = primBuffer.data(goff + 15 * idx + 2);

                auto g_0_xxyy = primBuffer.data(goff + 15 * idx + 3);

                auto g_0_xxyz = primBuffer.data(goff + 15 * idx + 4);

                auto g_0_xxzz = primBuffer.data(goff + 15 * idx + 5);

                auto g_0_xyyy = primBuffer.data(goff + 15 * idx + 6);

                auto g_0_xyyz = primBuffer.data(goff + 15 * idx + 7);

                auto g_0_xyzz = primBuffer.data(goff + 15 * idx + 8);

                auto g_0_xzzz = primBuffer.data(goff + 15 * idx + 9);

                auto g_0_yyyy = primBuffer.data(goff + 15 * idx + 10);

                auto g_0_yyyz = primBuffer.data(goff + 15 * idx + 11);

                auto g_0_yyzz = primBuffer.data(goff + 15 * idx + 12);

                auto g_0_yzzz = primBuffer.data(goff + 15 * idx + 13);

                auto g_0_zzzz = primBuffer.data(goff + 15 * idx + 14);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_xx, g20_0_xy, g20_0_xz, g20_0_yy,\
                                         g20_0_yz, g20_0_zz, g21_0_xx, g21_0_xy,\
                                         g21_0_xz, g21_0_yy, g21_0_yz, g21_0_zz,\
                                         g10_0_xxx, g10_0_xxy, g10_0_xxz, g10_0_xyy,\
                                         g10_0_xyz, g10_0_xzz, g10_0_yyy, g10_0_yyz,\
                                         g10_0_yzz, g10_0_zzz, g11_0_xxx, g11_0_xxy,\
                                         g11_0_xxz, g11_0_xyy, g11_0_xyz, g11_0_xzz,\
                                         g11_0_yyy, g11_0_yyz, g11_0_yzz, g11_0_zzz,\
                                         g_0_xxxx, g_0_xxxy, g_0_xxxz, g_0_xxyy,\
                                         g_0_xxyz, g_0_xxzz, g_0_xyyy, g_0_xyyz,\
                                         g_0_xyzz, g_0_xzzz, g_0_yyyy, g_0_yyyz,\
                                         g_0_yyzz, g_0_yzzz, g_0_zzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxxx[k] = fra * g10_0_xxx[k] + frb * g11_0_xxx[k] + f2g * (3.0 * g20_0_xx[k] - 3.0 * fgz * g21_0_xx[k]);

                    g_0_xxxy[k] = fra * g10_0_xxy[k] + frb * g11_0_xxy[k] + f2g * (2.0 * g20_0_xy[k] - 2.0 * fgz * g21_0_xy[k]);

                    g_0_xxxz[k] = fra * g10_0_xxz[k] + frb * g11_0_xxz[k] + f2g * (2.0 * g20_0_xz[k] - 2.0 * fgz * g21_0_xz[k]);

                    g_0_xxyy[k] = fra * g10_0_xyy[k] + frb * g11_0_xyy[k] + f2g * (g20_0_yy[k] - fgz * g21_0_yy[k]);

                    g_0_xxyz[k] = fra * g10_0_xyz[k] + frb * g11_0_xyz[k] + f2g * (g20_0_yz[k] - fgz * g21_0_yz[k]);

                    g_0_xxzz[k] = fra * g10_0_xzz[k] + frb * g11_0_xzz[k] + f2g * (g20_0_zz[k] - fgz * g21_0_zz[k]);

                    g_0_xyyy[k] = fra * g10_0_yyy[k] + frb * g11_0_yyy[k];

                    g_0_xyyz[k] = fra * g10_0_yyz[k] + frb * g11_0_yyz[k];

                    g_0_xyzz[k] = fra * g10_0_yzz[k] + frb * g11_0_yzz[k];

                    g_0_xzzz[k] = fra * g10_0_zzz[k] + frb * g11_0_zzz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyyy[k] = fra * g10_0_yyy[k] + frb * g11_0_yyy[k] + f2g * (3.0 * g20_0_yy[k] - 3.0 * fgz * g21_0_yy[k]);

                    g_0_yyyz[k] = fra * g10_0_yyz[k] + frb * g11_0_yyz[k] + f2g * (2.0 * g20_0_yz[k] - 2.0 * fgz * g21_0_yz[k]);

                    g_0_yyzz[k] = fra * g10_0_yzz[k] + frb * g11_0_yzz[k] + f2g * (g20_0_zz[k] - fgz * g21_0_zz[k]);

                    g_0_yzzz[k] = fra * g10_0_zzz[k] + frb * g11_0_zzz[k];

                    // leading z component

                    g_0_zzzz[k] = qdz[k] * g10_0_zzz[k] + wqz[k] * g11_0_zzz[k] + f2g * (3.0 * g20_0_zz[k] - 3.0 * fgz * g21_0_zz[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSS(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 0);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 0, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 0, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 0, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SS)^(m) integrals

                auto g20_xx_0 = primBuffer.data(g20off + 6 * idx);

                auto g20_xy_0 = primBuffer.data(g20off + 6 * idx + 1);

                auto g20_xz_0 = primBuffer.data(g20off + 6 * idx + 2);

                auto g20_yy_0 = primBuffer.data(g20off + 6 * idx + 3);

                auto g20_yz_0 = primBuffer.data(g20off + 6 * idx + 4);

                auto g20_zz_0 = primBuffer.data(g20off + 6 * idx + 5);

                // set up pointers to (D|g(r,r')|SS)^(m+1) integrals

                auto g21_xx_0 = primBuffer.data(g21off + 6 * idx);

                auto g21_xy_0 = primBuffer.data(g21off + 6 * idx + 1);

                auto g21_xz_0 = primBuffer.data(g21off + 6 * idx + 2);

                auto g21_yy_0 = primBuffer.data(g21off + 6 * idx + 3);

                auto g21_yz_0 = primBuffer.data(g21off + 6 * idx + 4);

                auto g21_zz_0 = primBuffer.data(g21off + 6 * idx + 5);

                // set up pointers to (F|g(r,r')|SS)^(m+1) integrals

                auto g11_xxx_0 = primBuffer.data(g11off + 10 * idx);

                auto g11_xxy_0 = primBuffer.data(g11off + 10 * idx + 1);

                auto g11_xxz_0 = primBuffer.data(g11off + 10 * idx + 2);

                auto g11_xyy_0 = primBuffer.data(g11off + 10 * idx + 3);

                auto g11_xyz_0 = primBuffer.data(g11off + 10 * idx + 4);

                auto g11_xzz_0 = primBuffer.data(g11off + 10 * idx + 5);

                auto g11_yyy_0 = primBuffer.data(g11off + 10 * idx + 6);

                auto g11_yyz_0 = primBuffer.data(g11off + 10 * idx + 7);

                auto g11_yzz_0 = primBuffer.data(g11off + 10 * idx + 8);

                auto g11_zzz_0 = primBuffer.data(g11off + 10 * idx + 9);

                // set up pointers to (G|g(r,r')|SS)^(m) integrals

                auto g_xxxx_0 = primBuffer.data(goff + 15 * idx);

                auto g_xxxy_0 = primBuffer.data(goff + 15 * idx + 1);

                auto g_xxxz_0 = primBuffer.data(goff + 15 * idx + 2);

                auto g_xxyy_0 = primBuffer.data(goff + 15 * idx + 3);

                auto g_xxyz_0 = primBuffer.data(goff + 15 * idx + 4);

                auto g_xxzz_0 = primBuffer.data(goff + 15 * idx + 5);

                auto g_xyyy_0 = primBuffer.data(goff + 15 * idx + 6);

                auto g_xyyz_0 = primBuffer.data(goff + 15 * idx + 7);

                auto g_xyzz_0 = primBuffer.data(goff + 15 * idx + 8);

                auto g_xzzz_0 = primBuffer.data(goff + 15 * idx + 9);

                auto g_yyyy_0 = primBuffer.data(goff + 15 * idx + 10);

                auto g_yyyz_0 = primBuffer.data(goff + 15 * idx + 11);

                auto g_yyzz_0 = primBuffer.data(goff + 15 * idx + 12);

                auto g_yzzz_0 = primBuffer.data(goff + 15 * idx + 13);

                auto g_zzzz_0 = primBuffer.data(goff + 15 * idx + 14);

                #pragma omp simd aligned(wax, way, waz, fga, fza, g20_xx_0, g20_xy_0,\
                                         g20_xz_0, g20_yy_0, g20_yz_0, g20_zz_0,\
                                         g21_xx_0, g21_xy_0, g21_xz_0, g21_yy_0,\
                                         g21_yz_0, g21_zz_0, g11_xxx_0, g11_xxy_0,\
                                         g11_xxz_0, g11_xyy_0, g11_xyz_0, g11_xzz_0,\
                                         g11_yyy_0, g11_yyz_0, g11_yzz_0, g11_zzz_0,\
                                         g_xxxx_0, g_xxxy_0, g_xxxz_0, g_xxyy_0,\
                                         g_xxyz_0, g_xxzz_0, g_xyyy_0, g_xyyz_0,\
                                         g_xyzz_0, g_xzzz_0, g_yyyy_0, g_yyyz_0,\
                                         g_yyzz_0, g_yzzz_0, g_zzzz_0: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_0[k] = fr * g11_xxx_0[k] + f2g * (3.0 * g20_xx_0[k] - 3.0 * fgz * g21_xx_0[k]);

                    g_xxxy_0[k] = fr * g11_xxy_0[k] + f2g * (2.0 * g20_xy_0[k] - 2.0 * fgz * g21_xy_0[k]);

                    g_xxxz_0[k] = fr * g11_xxz_0[k] + f2g * (2.0 * g20_xz_0[k] - 2.0 * fgz * g21_xz_0[k]);

                    g_xxyy_0[k] = fr * g11_xyy_0[k] + f2g * (g20_yy_0[k] - fgz * g21_yy_0[k]);

                    g_xxyz_0[k] = fr * g11_xyz_0[k] + f2g * (g20_yz_0[k] - fgz * g21_yz_0[k]);

                    g_xxzz_0[k] = fr * g11_xzz_0[k] + f2g * (g20_zz_0[k] - fgz * g21_zz_0[k]);

                    g_xyyy_0[k] = fr * g11_yyy_0[k];

                    g_xyyz_0[k] = fr * g11_yyz_0[k];

                    g_xyzz_0[k] = fr * g11_yzz_0[k];

                    g_xzzz_0[k] = fr * g11_zzz_0[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_0[k] = fr * g11_yyy_0[k] + f2g * (3.0 * g20_yy_0[k] - 3.0 * fgz * g21_yy_0[k]);

                    g_yyyz_0[k] = fr * g11_yyz_0[k] + f2g * (2.0 * g20_yz_0[k] - 2.0 * fgz * g21_yz_0[k]);

                    g_yyzz_0[k] = fr * g11_yzz_0[k] + f2g * (g20_zz_0[k] - fgz * g21_zz_0[k]);

                    g_yzzz_0[k] = fr * g11_zzz_0[k];

                    // leading z component

                    g_zzzz_0[k] = waz[k] * g11_zzz_0[k] + f2g * (3.0 * g20_zz_0[k] - 3.0 * fgz * g21_zz_0[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSG(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 4);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 4, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 3, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SF)^(m+1) integrals

                auto gk_0_xxx = primBuffer.data(gkoff + 10 * idx);

                auto gk_0_xxy = primBuffer.data(gkoff + 10 * idx + 1);

                auto gk_0_xxz = primBuffer.data(gkoff + 10 * idx + 2);

                auto gk_0_xyy = primBuffer.data(gkoff + 10 * idx + 3);

                auto gk_0_xyz = primBuffer.data(gkoff + 10 * idx + 4);

                auto gk_0_xzz = primBuffer.data(gkoff + 10 * idx + 5);

                auto gk_0_yyy = primBuffer.data(gkoff + 10 * idx + 6);

                auto gk_0_yyz = primBuffer.data(gkoff + 10 * idx + 7);

                auto gk_0_yzz = primBuffer.data(gkoff + 10 * idx + 8);

                auto gk_0_zzz = primBuffer.data(gkoff + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SG)^(m+1) integrals

                auto g11_0_xxxx = primBuffer.data(g11off + 15 * idx);

                auto g11_0_xxxy = primBuffer.data(g11off + 15 * idx + 1);

                auto g11_0_xxxz = primBuffer.data(g11off + 15 * idx + 2);

                auto g11_0_xxyy = primBuffer.data(g11off + 15 * idx + 3);

                auto g11_0_xxyz = primBuffer.data(g11off + 15 * idx + 4);

                auto g11_0_xxzz = primBuffer.data(g11off + 15 * idx + 5);

                auto g11_0_xyyy = primBuffer.data(g11off + 15 * idx + 6);

                auto g11_0_xyyz = primBuffer.data(g11off + 15 * idx + 7);

                auto g11_0_xyzz = primBuffer.data(g11off + 15 * idx + 8);

                auto g11_0_xzzz = primBuffer.data(g11off + 15 * idx + 9);

                auto g11_0_yyyy = primBuffer.data(g11off + 15 * idx + 10);

                auto g11_0_yyyz = primBuffer.data(g11off + 15 * idx + 11);

                auto g11_0_yyzz = primBuffer.data(g11off + 15 * idx + 12);

                auto g11_0_yzzz = primBuffer.data(g11off + 15 * idx + 13);

                auto g11_0_zzzz = primBuffer.data(g11off + 15 * idx + 14);

                // set up pointers to (P|g(r,r')|SG)^(m) integrals

                auto g_x_xxxx = primBuffer.data(goff + 45 * idx);

                auto g_x_xxxy = primBuffer.data(goff + 45 * idx + 1);

                auto g_x_xxxz = primBuffer.data(goff + 45 * idx + 2);

                auto g_x_xxyy = primBuffer.data(goff + 45 * idx + 3);

                auto g_x_xxyz = primBuffer.data(goff + 45 * idx + 4);

                auto g_x_xxzz = primBuffer.data(goff + 45 * idx + 5);

                auto g_x_xyyy = primBuffer.data(goff + 45 * idx + 6);

                auto g_x_xyyz = primBuffer.data(goff + 45 * idx + 7);

                auto g_x_xyzz = primBuffer.data(goff + 45 * idx + 8);

                auto g_x_xzzz = primBuffer.data(goff + 45 * idx + 9);

                auto g_x_yyyy = primBuffer.data(goff + 45 * idx + 10);

                auto g_x_yyyz = primBuffer.data(goff + 45 * idx + 11);

                auto g_x_yyzz = primBuffer.data(goff + 45 * idx + 12);

                auto g_x_yzzz = primBuffer.data(goff + 45 * idx + 13);

                auto g_x_zzzz = primBuffer.data(goff + 45 * idx + 14);

                auto g_y_xxxx = primBuffer.data(goff + 45 * idx + 15);

                auto g_y_xxxy = primBuffer.data(goff + 45 * idx + 16);

                auto g_y_xxxz = primBuffer.data(goff + 45 * idx + 17);

                auto g_y_xxyy = primBuffer.data(goff + 45 * idx + 18);

                auto g_y_xxyz = primBuffer.data(goff + 45 * idx + 19);

                auto g_y_xxzz = primBuffer.data(goff + 45 * idx + 20);

                auto g_y_xyyy = primBuffer.data(goff + 45 * idx + 21);

                auto g_y_xyyz = primBuffer.data(goff + 45 * idx + 22);

                auto g_y_xyzz = primBuffer.data(goff + 45 * idx + 23);

                auto g_y_xzzz = primBuffer.data(goff + 45 * idx + 24);

                auto g_y_yyyy = primBuffer.data(goff + 45 * idx + 25);

                auto g_y_yyyz = primBuffer.data(goff + 45 * idx + 26);

                auto g_y_yyzz = primBuffer.data(goff + 45 * idx + 27);

                auto g_y_yzzz = primBuffer.data(goff + 45 * idx + 28);

                auto g_y_zzzz = primBuffer.data(goff + 45 * idx + 29);

                auto g_z_xxxx = primBuffer.data(goff + 45 * idx + 30);

                auto g_z_xxxy = primBuffer.data(goff + 45 * idx + 31);

                auto g_z_xxxz = primBuffer.data(goff + 45 * idx + 32);

                auto g_z_xxyy = primBuffer.data(goff + 45 * idx + 33);

                auto g_z_xxyz = primBuffer.data(goff + 45 * idx + 34);

                auto g_z_xxzz = primBuffer.data(goff + 45 * idx + 35);

                auto g_z_xyyy = primBuffer.data(goff + 45 * idx + 36);

                auto g_z_xyyz = primBuffer.data(goff + 45 * idx + 37);

                auto g_z_xyzz = primBuffer.data(goff + 45 * idx + 38);

                auto g_z_xzzz = primBuffer.data(goff + 45 * idx + 39);

                auto g_z_yyyy = primBuffer.data(goff + 45 * idx + 40);

                auto g_z_yyyz = primBuffer.data(goff + 45 * idx + 41);

                auto g_z_yyzz = primBuffer.data(goff + 45 * idx + 42);

                auto g_z_yzzz = primBuffer.data(goff + 45 * idx + 43);

                auto g_z_zzzz = primBuffer.data(goff + 45 * idx + 44);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xxx, gk_0_xxy,\
                                         gk_0_xxz, gk_0_xyy, gk_0_xyz, gk_0_xzz,\
                                         gk_0_yyy, gk_0_yyz, gk_0_yzz, gk_0_zzz,\
                                         g11_0_xxxx, g11_0_xxxy, g11_0_xxxz, g11_0_xxyy,\
                                         g11_0_xxyz, g11_0_xxzz, g11_0_xyyy, g11_0_xyyz,\
                                         g11_0_xyzz, g11_0_xzzz, g11_0_yyyy, g11_0_yyyz,\
                                         g11_0_yyzz, g11_0_yzzz, g11_0_zzzz, g_x_xxxx,\
                                         g_x_xxxy, g_x_xxxz, g_x_xxyy, g_x_xxyz,\
                                         g_x_xxzz, g_x_xyyy, g_x_xyyz, g_x_xyzz,\
                                         g_x_xzzz, g_x_yyyy, g_x_yyyz, g_x_yyzz,\
                                         g_x_yzzz, g_x_zzzz, g_y_xxxx, g_y_xxxy,\
                                         g_y_xxxz, g_y_xxyy, g_y_xxyz, g_y_xxzz,\
                                         g_y_xyyy, g_y_xyyz, g_y_xyzz, g_y_xzzz,\
                                         g_y_yyyy, g_y_yyyz, g_y_yyzz, g_y_yzzz,\
                                         g_y_zzzz, g_z_xxxx, g_z_xxxy, g_z_xxxz,\
                                         g_z_xxyy, g_z_xxyz, g_z_xxzz, g_z_xyyy,\
                                         g_z_xyyz, g_z_xyzz, g_z_xzzz, g_z_yyyy,\
                                         g_z_yyyz, g_z_yyzz, g_z_yzzz, g_z_zzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxxx[k] = fr * g11_0_xxxx[k] + 4.0 * f2t * gk_0_xxx[k];

                    g_x_xxxy[k] = fr * g11_0_xxxy[k] + 3.0 * f2t * gk_0_xxy[k];

                    g_x_xxxz[k] = fr * g11_0_xxxz[k] + 3.0 * f2t * gk_0_xxz[k];

                    g_x_xxyy[k] = fr * g11_0_xxyy[k] + 2.0 * f2t * gk_0_xyy[k];

                    g_x_xxyz[k] = fr * g11_0_xxyz[k] + 2.0 * f2t * gk_0_xyz[k];

                    g_x_xxzz[k] = fr * g11_0_xxzz[k] + 2.0 * f2t * gk_0_xzz[k];

                    g_x_xyyy[k] = fr * g11_0_xyyy[k] + f2t * gk_0_yyy[k];

                    g_x_xyyz[k] = fr * g11_0_xyyz[k] + f2t * gk_0_yyz[k];

                    g_x_xyzz[k] = fr * g11_0_xyzz[k] + f2t * gk_0_yzz[k];

                    g_x_xzzz[k] = fr * g11_0_xzzz[k] + f2t * gk_0_zzz[k];

                    g_x_yyyy[k] = fr * g11_0_yyyy[k];

                    g_x_yyyz[k] = fr * g11_0_yyyz[k];

                    g_x_yyzz[k] = fr * g11_0_yyzz[k];

                    g_x_yzzz[k] = fr * g11_0_yzzz[k];

                    g_x_zzzz[k] = fr * g11_0_zzzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxxx[k] = fr * g11_0_xxxx[k];

                    g_y_xxxy[k] = fr * g11_0_xxxy[k] + f2t * gk_0_xxx[k];

                    g_y_xxxz[k] = fr * g11_0_xxxz[k];

                    g_y_xxyy[k] = fr * g11_0_xxyy[k] + 2.0 * f2t * gk_0_xxy[k];

                    g_y_xxyz[k] = fr * g11_0_xxyz[k] + f2t * gk_0_xxz[k];

                    g_y_xxzz[k] = fr * g11_0_xxzz[k];

                    g_y_xyyy[k] = fr * g11_0_xyyy[k] + 3.0 * f2t * gk_0_xyy[k];

                    g_y_xyyz[k] = fr * g11_0_xyyz[k] + 2.0 * f2t * gk_0_xyz[k];

                    g_y_xyzz[k] = fr * g11_0_xyzz[k] + f2t * gk_0_xzz[k];

                    g_y_xzzz[k] = fr * g11_0_xzzz[k];

                    g_y_yyyy[k] = fr * g11_0_yyyy[k] + 4.0 * f2t * gk_0_yyy[k];

                    g_y_yyyz[k] = fr * g11_0_yyyz[k] + 3.0 * f2t * gk_0_yyz[k];

                    g_y_yyzz[k] = fr * g11_0_yyzz[k] + 2.0 * f2t * gk_0_yzz[k];

                    g_y_yzzz[k] = fr * g11_0_yzzz[k] + f2t * gk_0_zzz[k];

                    g_y_zzzz[k] = fr * g11_0_zzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxxx[k] = fr * g11_0_xxxx[k];

                    g_z_xxxy[k] = fr * g11_0_xxxy[k];

                    g_z_xxxz[k] = fr * g11_0_xxxz[k] + f2t * gk_0_xxx[k];

                    g_z_xxyy[k] = fr * g11_0_xxyy[k];

                    g_z_xxyz[k] = fr * g11_0_xxyz[k] + f2t * gk_0_xxy[k];

                    g_z_xxzz[k] = fr * g11_0_xxzz[k] + 2.0 * f2t * gk_0_xxz[k];

                    g_z_xyyy[k] = fr * g11_0_xyyy[k];

                    g_z_xyyz[k] = fr * g11_0_xyyz[k] + f2t * gk_0_xyy[k];

                    g_z_xyzz[k] = fr * g11_0_xyzz[k] + 2.0 * f2t * gk_0_xyz[k];

                    g_z_xzzz[k] = fr * g11_0_xzzz[k] + 3.0 * f2t * gk_0_xzz[k];

                    g_z_yyyy[k] = fr * g11_0_yyyy[k];

                    g_z_yyyz[k] = fr * g11_0_yyyz[k] + f2t * gk_0_yyy[k];

                    g_z_yyzz[k] = fr * g11_0_yyzz[k] + 2.0 * f2t * gk_0_yyz[k];

                    g_z_yzzz[k] = fr * g11_0_yzzz[k] + 3.0 * f2t * gk_0_yzz[k];

                    g_z_zzzz[k] = fr * g11_0_zzzz[k] + 4.0 * f2t * gk_0_zzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSP(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 1);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 1, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 1, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 1, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 1, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 0, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SS)^(m+1) integrals

                auto gk_xxx_0 = primBuffer.data(gkoff + 10 * idx);

                auto gk_xxy_0 = primBuffer.data(gkoff + 10 * idx + 1);

                auto gk_xxz_0 = primBuffer.data(gkoff + 10 * idx + 2);

                auto gk_xyy_0 = primBuffer.data(gkoff + 10 * idx + 3);

                auto gk_xyz_0 = primBuffer.data(gkoff + 10 * idx + 4);

                auto gk_xzz_0 = primBuffer.data(gkoff + 10 * idx + 5);

                auto gk_yyy_0 = primBuffer.data(gkoff + 10 * idx + 6);

                auto gk_yyz_0 = primBuffer.data(gkoff + 10 * idx + 7);

                auto gk_yzz_0 = primBuffer.data(gkoff + 10 * idx + 8);

                auto gk_zzz_0 = primBuffer.data(gkoff + 10 * idx + 9);

                // set up pointers to (D|g(r,r')|SP)^(m) integrals

                auto g20_xx_x = primBuffer.data(g20off + 18 * idx);

                auto g20_xx_y = primBuffer.data(g20off + 18 * idx + 1);

                auto g20_xx_z = primBuffer.data(g20off + 18 * idx + 2);

                auto g20_xy_x = primBuffer.data(g20off + 18 * idx + 3);

                auto g20_xy_y = primBuffer.data(g20off + 18 * idx + 4);

                auto g20_xy_z = primBuffer.data(g20off + 18 * idx + 5);

                auto g20_xz_x = primBuffer.data(g20off + 18 * idx + 6);

                auto g20_xz_y = primBuffer.data(g20off + 18 * idx + 7);

                auto g20_xz_z = primBuffer.data(g20off + 18 * idx + 8);

                auto g20_yy_x = primBuffer.data(g20off + 18 * idx + 9);

                auto g20_yy_y = primBuffer.data(g20off + 18 * idx + 10);

                auto g20_yy_z = primBuffer.data(g20off + 18 * idx + 11);

                auto g20_yz_x = primBuffer.data(g20off + 18 * idx + 12);

                auto g20_yz_y = primBuffer.data(g20off + 18 * idx + 13);

                auto g20_yz_z = primBuffer.data(g20off + 18 * idx + 14);

                auto g20_zz_x = primBuffer.data(g20off + 18 * idx + 15);

                auto g20_zz_y = primBuffer.data(g20off + 18 * idx + 16);

                auto g20_zz_z = primBuffer.data(g20off + 18 * idx + 17);

                // set up pointers to (D|g(r,r')|SP)^(m+1) integrals

                auto g21_xx_x = primBuffer.data(g21off + 18 * idx);

                auto g21_xx_y = primBuffer.data(g21off + 18 * idx + 1);

                auto g21_xx_z = primBuffer.data(g21off + 18 * idx + 2);

                auto g21_xy_x = primBuffer.data(g21off + 18 * idx + 3);

                auto g21_xy_y = primBuffer.data(g21off + 18 * idx + 4);

                auto g21_xy_z = primBuffer.data(g21off + 18 * idx + 5);

                auto g21_xz_x = primBuffer.data(g21off + 18 * idx + 6);

                auto g21_xz_y = primBuffer.data(g21off + 18 * idx + 7);

                auto g21_xz_z = primBuffer.data(g21off + 18 * idx + 8);

                auto g21_yy_x = primBuffer.data(g21off + 18 * idx + 9);

                auto g21_yy_y = primBuffer.data(g21off + 18 * idx + 10);

                auto g21_yy_z = primBuffer.data(g21off + 18 * idx + 11);

                auto g21_yz_x = primBuffer.data(g21off + 18 * idx + 12);

                auto g21_yz_y = primBuffer.data(g21off + 18 * idx + 13);

                auto g21_yz_z = primBuffer.data(g21off + 18 * idx + 14);

                auto g21_zz_x = primBuffer.data(g21off + 18 * idx + 15);

                auto g21_zz_y = primBuffer.data(g21off + 18 * idx + 16);

                auto g21_zz_z = primBuffer.data(g21off + 18 * idx + 17);

                // set up pointers to (F|g(r,r')|SP)^(m+1) integrals

                auto g11_xxx_x = primBuffer.data(g11off + 30 * idx);

                auto g11_xxx_y = primBuffer.data(g11off + 30 * idx + 1);

                auto g11_xxx_z = primBuffer.data(g11off + 30 * idx + 2);

                auto g11_xxy_x = primBuffer.data(g11off + 30 * idx + 3);

                auto g11_xxy_y = primBuffer.data(g11off + 30 * idx + 4);

                auto g11_xxy_z = primBuffer.data(g11off + 30 * idx + 5);

                auto g11_xxz_x = primBuffer.data(g11off + 30 * idx + 6);

                auto g11_xxz_y = primBuffer.data(g11off + 30 * idx + 7);

                auto g11_xxz_z = primBuffer.data(g11off + 30 * idx + 8);

                auto g11_xyy_x = primBuffer.data(g11off + 30 * idx + 9);

                auto g11_xyy_y = primBuffer.data(g11off + 30 * idx + 10);

                auto g11_xyy_z = primBuffer.data(g11off + 30 * idx + 11);

                auto g11_xyz_x = primBuffer.data(g11off + 30 * idx + 12);

                auto g11_xyz_y = primBuffer.data(g11off + 30 * idx + 13);

                auto g11_xyz_z = primBuffer.data(g11off + 30 * idx + 14);

                auto g11_xzz_x = primBuffer.data(g11off + 30 * idx + 15);

                auto g11_xzz_y = primBuffer.data(g11off + 30 * idx + 16);

                auto g11_xzz_z = primBuffer.data(g11off + 30 * idx + 17);

                auto g11_yyy_x = primBuffer.data(g11off + 30 * idx + 18);

                auto g11_yyy_y = primBuffer.data(g11off + 30 * idx + 19);

                auto g11_yyy_z = primBuffer.data(g11off + 30 * idx + 20);

                auto g11_yyz_x = primBuffer.data(g11off + 30 * idx + 21);

                auto g11_yyz_y = primBuffer.data(g11off + 30 * idx + 22);

                auto g11_yyz_z = primBuffer.data(g11off + 30 * idx + 23);

                auto g11_yzz_x = primBuffer.data(g11off + 30 * idx + 24);

                auto g11_yzz_y = primBuffer.data(g11off + 30 * idx + 25);

                auto g11_yzz_z = primBuffer.data(g11off + 30 * idx + 26);

                auto g11_zzz_x = primBuffer.data(g11off + 30 * idx + 27);

                auto g11_zzz_y = primBuffer.data(g11off + 30 * idx + 28);

                auto g11_zzz_z = primBuffer.data(g11off + 30 * idx + 29);

                // set up pointers to (G|g(r,r')|SP)^(m) integrals

                auto g_xxxx_x = primBuffer.data(goff + 45 * idx);

                auto g_xxxx_y = primBuffer.data(goff + 45 * idx + 1);

                auto g_xxxx_z = primBuffer.data(goff + 45 * idx + 2);

                auto g_xxxy_x = primBuffer.data(goff + 45 * idx + 3);

                auto g_xxxy_y = primBuffer.data(goff + 45 * idx + 4);

                auto g_xxxy_z = primBuffer.data(goff + 45 * idx + 5);

                auto g_xxxz_x = primBuffer.data(goff + 45 * idx + 6);

                auto g_xxxz_y = primBuffer.data(goff + 45 * idx + 7);

                auto g_xxxz_z = primBuffer.data(goff + 45 * idx + 8);

                auto g_xxyy_x = primBuffer.data(goff + 45 * idx + 9);

                auto g_xxyy_y = primBuffer.data(goff + 45 * idx + 10);

                auto g_xxyy_z = primBuffer.data(goff + 45 * idx + 11);

                auto g_xxyz_x = primBuffer.data(goff + 45 * idx + 12);

                auto g_xxyz_y = primBuffer.data(goff + 45 * idx + 13);

                auto g_xxyz_z = primBuffer.data(goff + 45 * idx + 14);

                auto g_xxzz_x = primBuffer.data(goff + 45 * idx + 15);

                auto g_xxzz_y = primBuffer.data(goff + 45 * idx + 16);

                auto g_xxzz_z = primBuffer.data(goff + 45 * idx + 17);

                auto g_xyyy_x = primBuffer.data(goff + 45 * idx + 18);

                auto g_xyyy_y = primBuffer.data(goff + 45 * idx + 19);

                auto g_xyyy_z = primBuffer.data(goff + 45 * idx + 20);

                auto g_xyyz_x = primBuffer.data(goff + 45 * idx + 21);

                auto g_xyyz_y = primBuffer.data(goff + 45 * idx + 22);

                auto g_xyyz_z = primBuffer.data(goff + 45 * idx + 23);

                auto g_xyzz_x = primBuffer.data(goff + 45 * idx + 24);

                auto g_xyzz_y = primBuffer.data(goff + 45 * idx + 25);

                auto g_xyzz_z = primBuffer.data(goff + 45 * idx + 26);

                auto g_xzzz_x = primBuffer.data(goff + 45 * idx + 27);

                auto g_xzzz_y = primBuffer.data(goff + 45 * idx + 28);

                auto g_xzzz_z = primBuffer.data(goff + 45 * idx + 29);

                auto g_yyyy_x = primBuffer.data(goff + 45 * idx + 30);

                auto g_yyyy_y = primBuffer.data(goff + 45 * idx + 31);

                auto g_yyyy_z = primBuffer.data(goff + 45 * idx + 32);

                auto g_yyyz_x = primBuffer.data(goff + 45 * idx + 33);

                auto g_yyyz_y = primBuffer.data(goff + 45 * idx + 34);

                auto g_yyyz_z = primBuffer.data(goff + 45 * idx + 35);

                auto g_yyzz_x = primBuffer.data(goff + 45 * idx + 36);

                auto g_yyzz_y = primBuffer.data(goff + 45 * idx + 37);

                auto g_yyzz_z = primBuffer.data(goff + 45 * idx + 38);

                auto g_yzzz_x = primBuffer.data(goff + 45 * idx + 39);

                auto g_yzzz_y = primBuffer.data(goff + 45 * idx + 40);

                auto g_yzzz_z = primBuffer.data(goff + 45 * idx + 41);

                auto g_zzzz_x = primBuffer.data(goff + 45 * idx + 42);

                auto g_zzzz_y = primBuffer.data(goff + 45 * idx + 43);

                auto g_zzzz_z = primBuffer.data(goff + 45 * idx + 44);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_0,\
                                         gk_xxy_0, gk_xxz_0, gk_xyy_0, gk_xyz_0,\
                                         gk_xzz_0, gk_yyy_0, gk_yyz_0, gk_yzz_0,\
                                         gk_zzz_0, g20_xx_x, g20_xx_y, g20_xx_z,\
                                         g20_xy_x, g20_xy_y, g20_xy_z, g20_xz_x,\
                                         g20_xz_y, g20_xz_z, g20_yy_x, g20_yy_y,\
                                         g20_yy_z, g20_yz_x, g20_yz_y, g20_yz_z,\
                                         g20_zz_x, g20_zz_y, g20_zz_z, g21_xx_x,\
                                         g21_xx_y, g21_xx_z, g21_xy_x, g21_xy_y,\
                                         g21_xy_z, g21_xz_x, g21_xz_y, g21_xz_z,\
                                         g21_yy_x, g21_yy_y, g21_yy_z, g21_yz_x,\
                                         g21_yz_y, g21_yz_z, g21_zz_x, g21_zz_y,\
                                         g21_zz_z, g11_xxx_x, g11_xxx_y, g11_xxx_z,\
                                         g11_xxy_x, g11_xxy_y, g11_xxy_z, g11_xxz_x,\
                                         g11_xxz_y, g11_xxz_z, g11_xyy_x, g11_xyy_y,\
                                         g11_xyy_z, g11_xyz_x, g11_xyz_y, g11_xyz_z,\
                                         g11_xzz_x, g11_xzz_y, g11_xzz_z, g11_yyy_x,\
                                         g11_yyy_y, g11_yyy_z, g11_yyz_x, g11_yyz_y,\
                                         g11_yyz_z, g11_yzz_x, g11_yzz_y, g11_yzz_z,\
                                         g11_zzz_x, g11_zzz_y, g11_zzz_z, g_xxxx_x,\
                                         g_xxxx_y, g_xxxx_z, g_xxxy_x, g_xxxy_y,\
                                         g_xxxy_z, g_xxxz_x, g_xxxz_y, g_xxxz_z,\
                                         g_xxyy_x, g_xxyy_y, g_xxyy_z, g_xxyz_x,\
                                         g_xxyz_y, g_xxyz_z, g_xxzz_x, g_xxzz_y,\
                                         g_xxzz_z, g_xyyy_x, g_xyyy_y, g_xyyy_z,\
                                         g_xyyz_x, g_xyyz_y, g_xyyz_z, g_xyzz_x,\
                                         g_xyzz_y, g_xyzz_z, g_xzzz_x, g_xzzz_y,\
                                         g_xzzz_z, g_yyyy_x, g_yyyy_y, g_yyyy_z,\
                                         g_yyyz_x, g_yyyz_y, g_yyyz_z, g_yyzz_x,\
                                         g_yyzz_y, g_yyzz_z, g_yzzz_x, g_yzzz_y,\
                                         g_yzzz_z, g_zzzz_x, g_zzzz_y, g_zzzz_z: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_x[k] = fr * g11_xxx_x[k] + f2g * (3.0 * g20_xx_x[k] - 3.0 * fgz * g21_xx_x[k]) + f2t * gk_xxx_0[k];

                    g_xxxx_y[k] = fr * g11_xxx_y[k] + f2g * (3.0 * g20_xx_y[k] - 3.0 * fgz * g21_xx_y[k]);

                    g_xxxx_z[k] = fr * g11_xxx_z[k] + f2g * (3.0 * g20_xx_z[k] - 3.0 * fgz * g21_xx_z[k]);

                    g_xxxy_x[k] = fr * g11_xxy_x[k] + f2g * (2.0 * g20_xy_x[k] - 2.0 * fgz * g21_xy_x[k]) + f2t * gk_xxy_0[k];

                    g_xxxy_y[k] = fr * g11_xxy_y[k] + f2g * (2.0 * g20_xy_y[k] - 2.0 * fgz * g21_xy_y[k]);

                    g_xxxy_z[k] = fr * g11_xxy_z[k] + f2g * (2.0 * g20_xy_z[k] - 2.0 * fgz * g21_xy_z[k]);

                    g_xxxz_x[k] = fr * g11_xxz_x[k] + f2g * (2.0 * g20_xz_x[k] - 2.0 * fgz * g21_xz_x[k]) + f2t * gk_xxz_0[k];

                    g_xxxz_y[k] = fr * g11_xxz_y[k] + f2g * (2.0 * g20_xz_y[k] - 2.0 * fgz * g21_xz_y[k]);

                    g_xxxz_z[k] = fr * g11_xxz_z[k] + f2g * (2.0 * g20_xz_z[k] - 2.0 * fgz * g21_xz_z[k]);

                    g_xxyy_x[k] = fr * g11_xyy_x[k] + f2g * (g20_yy_x[k] - fgz * g21_yy_x[k]) + f2t * gk_xyy_0[k];

                    g_xxyy_y[k] = fr * g11_xyy_y[k] + f2g * (g20_yy_y[k] - fgz * g21_yy_y[k]);

                    g_xxyy_z[k] = fr * g11_xyy_z[k] + f2g * (g20_yy_z[k] - fgz * g21_yy_z[k]);

                    g_xxyz_x[k] = fr * g11_xyz_x[k] + f2g * (g20_yz_x[k] - fgz * g21_yz_x[k]) + f2t * gk_xyz_0[k];

                    g_xxyz_y[k] = fr * g11_xyz_y[k] + f2g * (g20_yz_y[k] - fgz * g21_yz_y[k]);

                    g_xxyz_z[k] = fr * g11_xyz_z[k] + f2g * (g20_yz_z[k] - fgz * g21_yz_z[k]);

                    g_xxzz_x[k] = fr * g11_xzz_x[k] + f2g * (g20_zz_x[k] - fgz * g21_zz_x[k]) + f2t * gk_xzz_0[k];

                    g_xxzz_y[k] = fr * g11_xzz_y[k] + f2g * (g20_zz_y[k] - fgz * g21_zz_y[k]);

                    g_xxzz_z[k] = fr * g11_xzz_z[k] + f2g * (g20_zz_z[k] - fgz * g21_zz_z[k]);

                    g_xyyy_x[k] = fr * g11_yyy_x[k] + f2t * gk_yyy_0[k];

                    g_xyyy_y[k] = fr * g11_yyy_y[k];

                    g_xyyy_z[k] = fr * g11_yyy_z[k];

                    g_xyyz_x[k] = fr * g11_yyz_x[k] + f2t * gk_yyz_0[k];

                    g_xyyz_y[k] = fr * g11_yyz_y[k];

                    g_xyyz_z[k] = fr * g11_yyz_z[k];

                    g_xyzz_x[k] = fr * g11_yzz_x[k] + f2t * gk_yzz_0[k];

                    g_xyzz_y[k] = fr * g11_yzz_y[k];

                    g_xyzz_z[k] = fr * g11_yzz_z[k];

                    g_xzzz_x[k] = fr * g11_zzz_x[k] + f2t * gk_zzz_0[k];

                    g_xzzz_y[k] = fr * g11_zzz_y[k];

                    g_xzzz_z[k] = fr * g11_zzz_z[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_x[k] = fr * g11_yyy_x[k] + f2g * (3.0 * g20_yy_x[k] - 3.0 * fgz * g21_yy_x[k]);

                    g_yyyy_y[k] = fr * g11_yyy_y[k] + f2g * (3.0 * g20_yy_y[k] - 3.0 * fgz * g21_yy_y[k]) + f2t * gk_yyy_0[k];

                    g_yyyy_z[k] = fr * g11_yyy_z[k] + f2g * (3.0 * g20_yy_z[k] - 3.0 * fgz * g21_yy_z[k]);

                    g_yyyz_x[k] = fr * g11_yyz_x[k] + f2g * (2.0 * g20_yz_x[k] - 2.0 * fgz * g21_yz_x[k]);

                    g_yyyz_y[k] = fr * g11_yyz_y[k] + f2g * (2.0 * g20_yz_y[k] - 2.0 * fgz * g21_yz_y[k]) + f2t * gk_yyz_0[k];

                    g_yyyz_z[k] = fr * g11_yyz_z[k] + f2g * (2.0 * g20_yz_z[k] - 2.0 * fgz * g21_yz_z[k]);

                    g_yyzz_x[k] = fr * g11_yzz_x[k] + f2g * (g20_zz_x[k] - fgz * g21_zz_x[k]);

                    g_yyzz_y[k] = fr * g11_yzz_y[k] + f2g * (g20_zz_y[k] - fgz * g21_zz_y[k]) + f2t * gk_yzz_0[k];

                    g_yyzz_z[k] = fr * g11_yzz_z[k] + f2g * (g20_zz_z[k] - fgz * g21_zz_z[k]);

                    g_yzzz_x[k] = fr * g11_zzz_x[k];

                    g_yzzz_y[k] = fr * g11_zzz_y[k] + f2t * gk_zzz_0[k];

                    g_yzzz_z[k] = fr * g11_zzz_z[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_x[k] = fr * g11_zzz_x[k] + f2g * (3.0 * g20_zz_x[k] - 3.0 * fgz * g21_zz_x[k]);

                    g_zzzz_y[k] = fr * g11_zzz_y[k] + f2g * (3.0 * g20_zz_y[k] - 3.0 * fgz * g21_zz_y[k]);

                    g_zzzz_z[k] = fr * g11_zzz_z[k] + f2g * (3.0 * g20_zz_z[k] - 3.0 * fgz * g21_zz_z[k]) + f2t * gk_zzz_0[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSG(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 4);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 4, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 4, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 3, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SF)^(m+1) integrals

                auto gk_x_xxx = primBuffer.data(gkoff + 30 * idx);

                auto gk_x_xxy = primBuffer.data(gkoff + 30 * idx + 1);

                auto gk_x_xxz = primBuffer.data(gkoff + 30 * idx + 2);

                auto gk_x_xyy = primBuffer.data(gkoff + 30 * idx + 3);

                auto gk_x_xyz = primBuffer.data(gkoff + 30 * idx + 4);

                auto gk_x_xzz = primBuffer.data(gkoff + 30 * idx + 5);

                auto gk_x_yyy = primBuffer.data(gkoff + 30 * idx + 6);

                auto gk_x_yyz = primBuffer.data(gkoff + 30 * idx + 7);

                auto gk_x_yzz = primBuffer.data(gkoff + 30 * idx + 8);

                auto gk_x_zzz = primBuffer.data(gkoff + 30 * idx + 9);

                auto gk_y_xxx = primBuffer.data(gkoff + 30 * idx + 10);

                auto gk_y_xxy = primBuffer.data(gkoff + 30 * idx + 11);

                auto gk_y_xxz = primBuffer.data(gkoff + 30 * idx + 12);

                auto gk_y_xyy = primBuffer.data(gkoff + 30 * idx + 13);

                auto gk_y_xyz = primBuffer.data(gkoff + 30 * idx + 14);

                auto gk_y_xzz = primBuffer.data(gkoff + 30 * idx + 15);

                auto gk_y_yyy = primBuffer.data(gkoff + 30 * idx + 16);

                auto gk_y_yyz = primBuffer.data(gkoff + 30 * idx + 17);

                auto gk_y_yzz = primBuffer.data(gkoff + 30 * idx + 18);

                auto gk_y_zzz = primBuffer.data(gkoff + 30 * idx + 19);

                auto gk_z_xxx = primBuffer.data(gkoff + 30 * idx + 20);

                auto gk_z_xxy = primBuffer.data(gkoff + 30 * idx + 21);

                auto gk_z_xxz = primBuffer.data(gkoff + 30 * idx + 22);

                auto gk_z_xyy = primBuffer.data(gkoff + 30 * idx + 23);

                auto gk_z_xyz = primBuffer.data(gkoff + 30 * idx + 24);

                auto gk_z_xzz = primBuffer.data(gkoff + 30 * idx + 25);

                auto gk_z_yyy = primBuffer.data(gkoff + 30 * idx + 26);

                auto gk_z_yyz = primBuffer.data(gkoff + 30 * idx + 27);

                auto gk_z_yzz = primBuffer.data(gkoff + 30 * idx + 28);

                auto gk_z_zzz = primBuffer.data(gkoff + 30 * idx + 29);

                // set up pointers to (S|g(r,r')|SG)^(m) integrals

                auto g20_0_xxxx = primBuffer.data(g20off + 15 * idx);

                auto g20_0_xxxy = primBuffer.data(g20off + 15 * idx + 1);

                auto g20_0_xxxz = primBuffer.data(g20off + 15 * idx + 2);

                auto g20_0_xxyy = primBuffer.data(g20off + 15 * idx + 3);

                auto g20_0_xxyz = primBuffer.data(g20off + 15 * idx + 4);

                auto g20_0_xxzz = primBuffer.data(g20off + 15 * idx + 5);

                auto g20_0_xyyy = primBuffer.data(g20off + 15 * idx + 6);

                auto g20_0_xyyz = primBuffer.data(g20off + 15 * idx + 7);

                auto g20_0_xyzz = primBuffer.data(g20off + 15 * idx + 8);

                auto g20_0_xzzz = primBuffer.data(g20off + 15 * idx + 9);

                auto g20_0_yyyy = primBuffer.data(g20off + 15 * idx + 10);

                auto g20_0_yyyz = primBuffer.data(g20off + 15 * idx + 11);

                auto g20_0_yyzz = primBuffer.data(g20off + 15 * idx + 12);

                auto g20_0_yzzz = primBuffer.data(g20off + 15 * idx + 13);

                auto g20_0_zzzz = primBuffer.data(g20off + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SG)^(m+1) integrals

                auto g21_0_xxxx = primBuffer.data(g21off + 15 * idx);

                auto g21_0_xxxy = primBuffer.data(g21off + 15 * idx + 1);

                auto g21_0_xxxz = primBuffer.data(g21off + 15 * idx + 2);

                auto g21_0_xxyy = primBuffer.data(g21off + 15 * idx + 3);

                auto g21_0_xxyz = primBuffer.data(g21off + 15 * idx + 4);

                auto g21_0_xxzz = primBuffer.data(g21off + 15 * idx + 5);

                auto g21_0_xyyy = primBuffer.data(g21off + 15 * idx + 6);

                auto g21_0_xyyz = primBuffer.data(g21off + 15 * idx + 7);

                auto g21_0_xyzz = primBuffer.data(g21off + 15 * idx + 8);

                auto g21_0_xzzz = primBuffer.data(g21off + 15 * idx + 9);

                auto g21_0_yyyy = primBuffer.data(g21off + 15 * idx + 10);

                auto g21_0_yyyz = primBuffer.data(g21off + 15 * idx + 11);

                auto g21_0_yyzz = primBuffer.data(g21off + 15 * idx + 12);

                auto g21_0_yzzz = primBuffer.data(g21off + 15 * idx + 13);

                auto g21_0_zzzz = primBuffer.data(g21off + 15 * idx + 14);

                // set up pointers to (P|g(r,r')|SG)^(m+1) integrals

                auto g11_x_xxxx = primBuffer.data(g11off + 45 * idx);

                auto g11_x_xxxy = primBuffer.data(g11off + 45 * idx + 1);

                auto g11_x_xxxz = primBuffer.data(g11off + 45 * idx + 2);

                auto g11_x_xxyy = primBuffer.data(g11off + 45 * idx + 3);

                auto g11_x_xxyz = primBuffer.data(g11off + 45 * idx + 4);

                auto g11_x_xxzz = primBuffer.data(g11off + 45 * idx + 5);

                auto g11_x_xyyy = primBuffer.data(g11off + 45 * idx + 6);

                auto g11_x_xyyz = primBuffer.data(g11off + 45 * idx + 7);

                auto g11_x_xyzz = primBuffer.data(g11off + 45 * idx + 8);

                auto g11_x_xzzz = primBuffer.data(g11off + 45 * idx + 9);

                auto g11_x_yyyy = primBuffer.data(g11off + 45 * idx + 10);

                auto g11_x_yyyz = primBuffer.data(g11off + 45 * idx + 11);

                auto g11_x_yyzz = primBuffer.data(g11off + 45 * idx + 12);

                auto g11_x_yzzz = primBuffer.data(g11off + 45 * idx + 13);

                auto g11_x_zzzz = primBuffer.data(g11off + 45 * idx + 14);

                auto g11_y_xxxx = primBuffer.data(g11off + 45 * idx + 15);

                auto g11_y_xxxy = primBuffer.data(g11off + 45 * idx + 16);

                auto g11_y_xxxz = primBuffer.data(g11off + 45 * idx + 17);

                auto g11_y_xxyy = primBuffer.data(g11off + 45 * idx + 18);

                auto g11_y_xxyz = primBuffer.data(g11off + 45 * idx + 19);

                auto g11_y_xxzz = primBuffer.data(g11off + 45 * idx + 20);

                auto g11_y_xyyy = primBuffer.data(g11off + 45 * idx + 21);

                auto g11_y_xyyz = primBuffer.data(g11off + 45 * idx + 22);

                auto g11_y_xyzz = primBuffer.data(g11off + 45 * idx + 23);

                auto g11_y_xzzz = primBuffer.data(g11off + 45 * idx + 24);

                auto g11_y_yyyy = primBuffer.data(g11off + 45 * idx + 25);

                auto g11_y_yyyz = primBuffer.data(g11off + 45 * idx + 26);

                auto g11_y_yyzz = primBuffer.data(g11off + 45 * idx + 27);

                auto g11_y_yzzz = primBuffer.data(g11off + 45 * idx + 28);

                auto g11_y_zzzz = primBuffer.data(g11off + 45 * idx + 29);

                auto g11_z_xxxx = primBuffer.data(g11off + 45 * idx + 30);

                auto g11_z_xxxy = primBuffer.data(g11off + 45 * idx + 31);

                auto g11_z_xxxz = primBuffer.data(g11off + 45 * idx + 32);

                auto g11_z_xxyy = primBuffer.data(g11off + 45 * idx + 33);

                auto g11_z_xxyz = primBuffer.data(g11off + 45 * idx + 34);

                auto g11_z_xxzz = primBuffer.data(g11off + 45 * idx + 35);

                auto g11_z_xyyy = primBuffer.data(g11off + 45 * idx + 36);

                auto g11_z_xyyz = primBuffer.data(g11off + 45 * idx + 37);

                auto g11_z_xyzz = primBuffer.data(g11off + 45 * idx + 38);

                auto g11_z_xzzz = primBuffer.data(g11off + 45 * idx + 39);

                auto g11_z_yyyy = primBuffer.data(g11off + 45 * idx + 40);

                auto g11_z_yyyz = primBuffer.data(g11off + 45 * idx + 41);

                auto g11_z_yyzz = primBuffer.data(g11off + 45 * idx + 42);

                auto g11_z_yzzz = primBuffer.data(g11off + 45 * idx + 43);

                auto g11_z_zzzz = primBuffer.data(g11off + 45 * idx + 44);

                // set up pointers to (D|g(r,r')|SG)^(m) integrals

                auto g_xx_xxxx = primBuffer.data(goff + 90 * idx);

                auto g_xx_xxxy = primBuffer.data(goff + 90 * idx + 1);

                auto g_xx_xxxz = primBuffer.data(goff + 90 * idx + 2);

                auto g_xx_xxyy = primBuffer.data(goff + 90 * idx + 3);

                auto g_xx_xxyz = primBuffer.data(goff + 90 * idx + 4);

                auto g_xx_xxzz = primBuffer.data(goff + 90 * idx + 5);

                auto g_xx_xyyy = primBuffer.data(goff + 90 * idx + 6);

                auto g_xx_xyyz = primBuffer.data(goff + 90 * idx + 7);

                auto g_xx_xyzz = primBuffer.data(goff + 90 * idx + 8);

                auto g_xx_xzzz = primBuffer.data(goff + 90 * idx + 9);

                auto g_xx_yyyy = primBuffer.data(goff + 90 * idx + 10);

                auto g_xx_yyyz = primBuffer.data(goff + 90 * idx + 11);

                auto g_xx_yyzz = primBuffer.data(goff + 90 * idx + 12);

                auto g_xx_yzzz = primBuffer.data(goff + 90 * idx + 13);

                auto g_xx_zzzz = primBuffer.data(goff + 90 * idx + 14);

                auto g_xy_xxxx = primBuffer.data(goff + 90 * idx + 15);

                auto g_xy_xxxy = primBuffer.data(goff + 90 * idx + 16);

                auto g_xy_xxxz = primBuffer.data(goff + 90 * idx + 17);

                auto g_xy_xxyy = primBuffer.data(goff + 90 * idx + 18);

                auto g_xy_xxyz = primBuffer.data(goff + 90 * idx + 19);

                auto g_xy_xxzz = primBuffer.data(goff + 90 * idx + 20);

                auto g_xy_xyyy = primBuffer.data(goff + 90 * idx + 21);

                auto g_xy_xyyz = primBuffer.data(goff + 90 * idx + 22);

                auto g_xy_xyzz = primBuffer.data(goff + 90 * idx + 23);

                auto g_xy_xzzz = primBuffer.data(goff + 90 * idx + 24);

                auto g_xy_yyyy = primBuffer.data(goff + 90 * idx + 25);

                auto g_xy_yyyz = primBuffer.data(goff + 90 * idx + 26);

                auto g_xy_yyzz = primBuffer.data(goff + 90 * idx + 27);

                auto g_xy_yzzz = primBuffer.data(goff + 90 * idx + 28);

                auto g_xy_zzzz = primBuffer.data(goff + 90 * idx + 29);

                auto g_xz_xxxx = primBuffer.data(goff + 90 * idx + 30);

                auto g_xz_xxxy = primBuffer.data(goff + 90 * idx + 31);

                auto g_xz_xxxz = primBuffer.data(goff + 90 * idx + 32);

                auto g_xz_xxyy = primBuffer.data(goff + 90 * idx + 33);

                auto g_xz_xxyz = primBuffer.data(goff + 90 * idx + 34);

                auto g_xz_xxzz = primBuffer.data(goff + 90 * idx + 35);

                auto g_xz_xyyy = primBuffer.data(goff + 90 * idx + 36);

                auto g_xz_xyyz = primBuffer.data(goff + 90 * idx + 37);

                auto g_xz_xyzz = primBuffer.data(goff + 90 * idx + 38);

                auto g_xz_xzzz = primBuffer.data(goff + 90 * idx + 39);

                auto g_xz_yyyy = primBuffer.data(goff + 90 * idx + 40);

                auto g_xz_yyyz = primBuffer.data(goff + 90 * idx + 41);

                auto g_xz_yyzz = primBuffer.data(goff + 90 * idx + 42);

                auto g_xz_yzzz = primBuffer.data(goff + 90 * idx + 43);

                auto g_xz_zzzz = primBuffer.data(goff + 90 * idx + 44);

                auto g_yy_xxxx = primBuffer.data(goff + 90 * idx + 45);

                auto g_yy_xxxy = primBuffer.data(goff + 90 * idx + 46);

                auto g_yy_xxxz = primBuffer.data(goff + 90 * idx + 47);

                auto g_yy_xxyy = primBuffer.data(goff + 90 * idx + 48);

                auto g_yy_xxyz = primBuffer.data(goff + 90 * idx + 49);

                auto g_yy_xxzz = primBuffer.data(goff + 90 * idx + 50);

                auto g_yy_xyyy = primBuffer.data(goff + 90 * idx + 51);

                auto g_yy_xyyz = primBuffer.data(goff + 90 * idx + 52);

                auto g_yy_xyzz = primBuffer.data(goff + 90 * idx + 53);

                auto g_yy_xzzz = primBuffer.data(goff + 90 * idx + 54);

                auto g_yy_yyyy = primBuffer.data(goff + 90 * idx + 55);

                auto g_yy_yyyz = primBuffer.data(goff + 90 * idx + 56);

                auto g_yy_yyzz = primBuffer.data(goff + 90 * idx + 57);

                auto g_yy_yzzz = primBuffer.data(goff + 90 * idx + 58);

                auto g_yy_zzzz = primBuffer.data(goff + 90 * idx + 59);

                auto g_yz_xxxx = primBuffer.data(goff + 90 * idx + 60);

                auto g_yz_xxxy = primBuffer.data(goff + 90 * idx + 61);

                auto g_yz_xxxz = primBuffer.data(goff + 90 * idx + 62);

                auto g_yz_xxyy = primBuffer.data(goff + 90 * idx + 63);

                auto g_yz_xxyz = primBuffer.data(goff + 90 * idx + 64);

                auto g_yz_xxzz = primBuffer.data(goff + 90 * idx + 65);

                auto g_yz_xyyy = primBuffer.data(goff + 90 * idx + 66);

                auto g_yz_xyyz = primBuffer.data(goff + 90 * idx + 67);

                auto g_yz_xyzz = primBuffer.data(goff + 90 * idx + 68);

                auto g_yz_xzzz = primBuffer.data(goff + 90 * idx + 69);

                auto g_yz_yyyy = primBuffer.data(goff + 90 * idx + 70);

                auto g_yz_yyyz = primBuffer.data(goff + 90 * idx + 71);

                auto g_yz_yyzz = primBuffer.data(goff + 90 * idx + 72);

                auto g_yz_yzzz = primBuffer.data(goff + 90 * idx + 73);

                auto g_yz_zzzz = primBuffer.data(goff + 90 * idx + 74);

                auto g_zz_xxxx = primBuffer.data(goff + 90 * idx + 75);

                auto g_zz_xxxy = primBuffer.data(goff + 90 * idx + 76);

                auto g_zz_xxxz = primBuffer.data(goff + 90 * idx + 77);

                auto g_zz_xxyy = primBuffer.data(goff + 90 * idx + 78);

                auto g_zz_xxyz = primBuffer.data(goff + 90 * idx + 79);

                auto g_zz_xxzz = primBuffer.data(goff + 90 * idx + 80);

                auto g_zz_xyyy = primBuffer.data(goff + 90 * idx + 81);

                auto g_zz_xyyz = primBuffer.data(goff + 90 * idx + 82);

                auto g_zz_xyzz = primBuffer.data(goff + 90 * idx + 83);

                auto g_zz_xzzz = primBuffer.data(goff + 90 * idx + 84);

                auto g_zz_yyyy = primBuffer.data(goff + 90 * idx + 85);

                auto g_zz_yyyz = primBuffer.data(goff + 90 * idx + 86);

                auto g_zz_yyzz = primBuffer.data(goff + 90 * idx + 87);

                auto g_zz_yzzz = primBuffer.data(goff + 90 * idx + 88);

                auto g_zz_zzzz = primBuffer.data(goff + 90 * idx + 89);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xxx,\
                                         gk_x_xxy, gk_x_xxz, gk_x_xyy, gk_x_xyz,\
                                         gk_x_xzz, gk_x_yyy, gk_x_yyz, gk_x_yzz,\
                                         gk_x_zzz, gk_y_xxx, gk_y_xxy, gk_y_xxz,\
                                         gk_y_xyy, gk_y_xyz, gk_y_xzz, gk_y_yyy,\
                                         gk_y_yyz, gk_y_yzz, gk_y_zzz, gk_z_xxx,\
                                         gk_z_xxy, gk_z_xxz, gk_z_xyy, gk_z_xyz,\
                                         gk_z_xzz, gk_z_yyy, gk_z_yyz, gk_z_yzz,\
                                         gk_z_zzz, g20_0_xxxx, g20_0_xxxy, g20_0_xxxz,\
                                         g20_0_xxyy, g20_0_xxyz, g20_0_xxzz, g20_0_xyyy,\
                                         g20_0_xyyz, g20_0_xyzz, g20_0_xzzz, g20_0_yyyy,\
                                         g20_0_yyyz, g20_0_yyzz, g20_0_yzzz, g20_0_zzzz,\
                                         g21_0_xxxx, g21_0_xxxy, g21_0_xxxz, g21_0_xxyy,\
                                         g21_0_xxyz, g21_0_xxzz, g21_0_xyyy, g21_0_xyyz,\
                                         g21_0_xyzz, g21_0_xzzz, g21_0_yyyy, g21_0_yyyz,\
                                         g21_0_yyzz, g21_0_yzzz, g21_0_zzzz, g11_x_xxxx,\
                                         g11_x_xxxy, g11_x_xxxz, g11_x_xxyy, g11_x_xxyz,\
                                         g11_x_xxzz, g11_x_xyyy, g11_x_xyyz, g11_x_xyzz,\
                                         g11_x_xzzz, g11_x_yyyy, g11_x_yyyz, g11_x_yyzz,\
                                         g11_x_yzzz, g11_x_zzzz, g11_y_xxxx, g11_y_xxxy,\
                                         g11_y_xxxz, g11_y_xxyy, g11_y_xxyz, g11_y_xxzz,\
                                         g11_y_xyyy, g11_y_xyyz, g11_y_xyzz, g11_y_xzzz,\
                                         g11_y_yyyy, g11_y_yyyz, g11_y_yyzz, g11_y_yzzz,\
                                         g11_y_zzzz, g11_z_xxxx, g11_z_xxxy, g11_z_xxxz,\
                                         g11_z_xxyy, g11_z_xxyz, g11_z_xxzz, g11_z_xyyy,\
                                         g11_z_xyyz, g11_z_xyzz, g11_z_xzzz, g11_z_yyyy,\
                                         g11_z_yyyz, g11_z_yyzz, g11_z_yzzz, g11_z_zzzz,\
                                         g_xx_xxxx, g_xx_xxxy, g_xx_xxxz, g_xx_xxyy,\
                                         g_xx_xxyz, g_xx_xxzz, g_xx_xyyy, g_xx_xyyz,\
                                         g_xx_xyzz, g_xx_xzzz, g_xx_yyyy, g_xx_yyyz,\
                                         g_xx_yyzz, g_xx_yzzz, g_xx_zzzz, g_xy_xxxx,\
                                         g_xy_xxxy, g_xy_xxxz, g_xy_xxyy, g_xy_xxyz,\
                                         g_xy_xxzz, g_xy_xyyy, g_xy_xyyz, g_xy_xyzz,\
                                         g_xy_xzzz, g_xy_yyyy, g_xy_yyyz, g_xy_yyzz,\
                                         g_xy_yzzz, g_xy_zzzz, g_xz_xxxx, g_xz_xxxy,\
                                         g_xz_xxxz, g_xz_xxyy, g_xz_xxyz, g_xz_xxzz,\
                                         g_xz_xyyy, g_xz_xyyz, g_xz_xyzz, g_xz_xzzz,\
                                         g_xz_yyyy, g_xz_yyyz, g_xz_yyzz, g_xz_yzzz,\
                                         g_xz_zzzz, g_yy_xxxx, g_yy_xxxy, g_yy_xxxz,\
                                         g_yy_xxyy, g_yy_xxyz, g_yy_xxzz, g_yy_xyyy,\
                                         g_yy_xyyz, g_yy_xyzz, g_yy_xzzz, g_yy_yyyy,\
                                         g_yy_yyyz, g_yy_yyzz, g_yy_yzzz, g_yy_zzzz,\
                                         g_yz_xxxx, g_yz_xxxy, g_yz_xxxz, g_yz_xxyy,\
                                         g_yz_xxyz, g_yz_xxzz, g_yz_xyyy, g_yz_xyyz,\
                                         g_yz_xyzz, g_yz_xzzz, g_yz_yyyy, g_yz_yyyz,\
                                         g_yz_yyzz, g_yz_yzzz, g_yz_zzzz, g_zz_xxxx,\
                                         g_zz_xxxy, g_zz_xxxz, g_zz_xxyy, g_zz_xxyz,\
                                         g_zz_xxzz, g_zz_xyyy, g_zz_xyyz, g_zz_xyzz,\
                                         g_zz_xzzz, g_zz_yyyy, g_zz_yyyz, g_zz_yyzz,\
                                         g_zz_yzzz, g_zz_zzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxxx[k] = fr * g11_x_xxxx[k] + f2g * (g20_0_xxxx[k] - fgz * g21_0_xxxx[k]) + 4.0 * f2t * gk_x_xxx[k];

                    g_xx_xxxy[k] = fr * g11_x_xxxy[k] + f2g * (g20_0_xxxy[k] - fgz * g21_0_xxxy[k]) + 3.0 * f2t * gk_x_xxy[k];

                    g_xx_xxxz[k] = fr * g11_x_xxxz[k] + f2g * (g20_0_xxxz[k] - fgz * g21_0_xxxz[k]) + 3.0 * f2t * gk_x_xxz[k];

                    g_xx_xxyy[k] = fr * g11_x_xxyy[k] + f2g * (g20_0_xxyy[k] - fgz * g21_0_xxyy[k]) + 2.0 * f2t * gk_x_xyy[k];

                    g_xx_xxyz[k] = fr * g11_x_xxyz[k] + f2g * (g20_0_xxyz[k] - fgz * g21_0_xxyz[k]) + 2.0 * f2t * gk_x_xyz[k];

                    g_xx_xxzz[k] = fr * g11_x_xxzz[k] + f2g * (g20_0_xxzz[k] - fgz * g21_0_xxzz[k]) + 2.0 * f2t * gk_x_xzz[k];

                    g_xx_xyyy[k] = fr * g11_x_xyyy[k] + f2g * (g20_0_xyyy[k] - fgz * g21_0_xyyy[k]) + f2t * gk_x_yyy[k];

                    g_xx_xyyz[k] = fr * g11_x_xyyz[k] + f2g * (g20_0_xyyz[k] - fgz * g21_0_xyyz[k]) + f2t * gk_x_yyz[k];

                    g_xx_xyzz[k] = fr * g11_x_xyzz[k] + f2g * (g20_0_xyzz[k] - fgz * g21_0_xyzz[k]) + f2t * gk_x_yzz[k];

                    g_xx_xzzz[k] = fr * g11_x_xzzz[k] + f2g * (g20_0_xzzz[k] - fgz * g21_0_xzzz[k]) + f2t * gk_x_zzz[k];

                    g_xx_yyyy[k] = fr * g11_x_yyyy[k] + f2g * (g20_0_yyyy[k] - fgz * g21_0_yyyy[k]);

                    g_xx_yyyz[k] = fr * g11_x_yyyz[k] + f2g * (g20_0_yyyz[k] - fgz * g21_0_yyyz[k]);

                    g_xx_yyzz[k] = fr * g11_x_yyzz[k] + f2g * (g20_0_yyzz[k] - fgz * g21_0_yyzz[k]);

                    g_xx_yzzz[k] = fr * g11_x_yzzz[k] + f2g * (g20_0_yzzz[k] - fgz * g21_0_yzzz[k]);

                    g_xx_zzzz[k] = fr * g11_x_zzzz[k] + f2g * (g20_0_zzzz[k] - fgz * g21_0_zzzz[k]);

                    g_xy_xxxx[k] = fr * g11_y_xxxx[k] + 4.0 * f2t * gk_y_xxx[k];

                    g_xy_xxxy[k] = fr * g11_y_xxxy[k] + 3.0 * f2t * gk_y_xxy[k];

                    g_xy_xxxz[k] = fr * g11_y_xxxz[k] + 3.0 * f2t * gk_y_xxz[k];

                    g_xy_xxyy[k] = fr * g11_y_xxyy[k] + 2.0 * f2t * gk_y_xyy[k];

                    g_xy_xxyz[k] = fr * g11_y_xxyz[k] + 2.0 * f2t * gk_y_xyz[k];

                    g_xy_xxzz[k] = fr * g11_y_xxzz[k] + 2.0 * f2t * gk_y_xzz[k];

                    g_xy_xyyy[k] = fr * g11_y_xyyy[k] + f2t * gk_y_yyy[k];

                    g_xy_xyyz[k] = fr * g11_y_xyyz[k] + f2t * gk_y_yyz[k];

                    g_xy_xyzz[k] = fr * g11_y_xyzz[k] + f2t * gk_y_yzz[k];

                    g_xy_xzzz[k] = fr * g11_y_xzzz[k] + f2t * gk_y_zzz[k];

                    g_xy_yyyy[k] = fr * g11_y_yyyy[k];

                    g_xy_yyyz[k] = fr * g11_y_yyyz[k];

                    g_xy_yyzz[k] = fr * g11_y_yyzz[k];

                    g_xy_yzzz[k] = fr * g11_y_yzzz[k];

                    g_xy_zzzz[k] = fr * g11_y_zzzz[k];

                    g_xz_xxxx[k] = fr * g11_z_xxxx[k] + 4.0 * f2t * gk_z_xxx[k];

                    g_xz_xxxy[k] = fr * g11_z_xxxy[k] + 3.0 * f2t * gk_z_xxy[k];

                    g_xz_xxxz[k] = fr * g11_z_xxxz[k] + 3.0 * f2t * gk_z_xxz[k];

                    g_xz_xxyy[k] = fr * g11_z_xxyy[k] + 2.0 * f2t * gk_z_xyy[k];

                    g_xz_xxyz[k] = fr * g11_z_xxyz[k] + 2.0 * f2t * gk_z_xyz[k];

                    g_xz_xxzz[k] = fr * g11_z_xxzz[k] + 2.0 * f2t * gk_z_xzz[k];

                    g_xz_xyyy[k] = fr * g11_z_xyyy[k] + f2t * gk_z_yyy[k];

                    g_xz_xyyz[k] = fr * g11_z_xyyz[k] + f2t * gk_z_yyz[k];

                    g_xz_xyzz[k] = fr * g11_z_xyzz[k] + f2t * gk_z_yzz[k];

                    g_xz_xzzz[k] = fr * g11_z_xzzz[k] + f2t * gk_z_zzz[k];

                    g_xz_yyyy[k] = fr * g11_z_yyyy[k];

                    g_xz_yyyz[k] = fr * g11_z_yyyz[k];

                    g_xz_yyzz[k] = fr * g11_z_yyzz[k];

                    g_xz_yzzz[k] = fr * g11_z_yzzz[k];

                    g_xz_zzzz[k] = fr * g11_z_zzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxxx[k] = fr * g11_y_xxxx[k] + f2g * (g20_0_xxxx[k] - fgz * g21_0_xxxx[k]);

                    g_yy_xxxy[k] = fr * g11_y_xxxy[k] + f2g * (g20_0_xxxy[k] - fgz * g21_0_xxxy[k]) + f2t * gk_y_xxx[k];

                    g_yy_xxxz[k] = fr * g11_y_xxxz[k] + f2g * (g20_0_xxxz[k] - fgz * g21_0_xxxz[k]);

                    g_yy_xxyy[k] = fr * g11_y_xxyy[k] + f2g * (g20_0_xxyy[k] - fgz * g21_0_xxyy[k]) + 2.0 * f2t * gk_y_xxy[k];

                    g_yy_xxyz[k] = fr * g11_y_xxyz[k] + f2g * (g20_0_xxyz[k] - fgz * g21_0_xxyz[k]) + f2t * gk_y_xxz[k];

                    g_yy_xxzz[k] = fr * g11_y_xxzz[k] + f2g * (g20_0_xxzz[k] - fgz * g21_0_xxzz[k]);

                    g_yy_xyyy[k] = fr * g11_y_xyyy[k] + f2g * (g20_0_xyyy[k] - fgz * g21_0_xyyy[k]) + 3.0 * f2t * gk_y_xyy[k];

                    g_yy_xyyz[k] = fr * g11_y_xyyz[k] + f2g * (g20_0_xyyz[k] - fgz * g21_0_xyyz[k]) + 2.0 * f2t * gk_y_xyz[k];

                    g_yy_xyzz[k] = fr * g11_y_xyzz[k] + f2g * (g20_0_xyzz[k] - fgz * g21_0_xyzz[k]) + f2t * gk_y_xzz[k];

                    g_yy_xzzz[k] = fr * g11_y_xzzz[k] + f2g * (g20_0_xzzz[k] - fgz * g21_0_xzzz[k]);

                    g_yy_yyyy[k] = fr * g11_y_yyyy[k] + f2g * (g20_0_yyyy[k] - fgz * g21_0_yyyy[k]) + 4.0 * f2t * gk_y_yyy[k];

                    g_yy_yyyz[k] = fr * g11_y_yyyz[k] + f2g * (g20_0_yyyz[k] - fgz * g21_0_yyyz[k]) + 3.0 * f2t * gk_y_yyz[k];

                    g_yy_yyzz[k] = fr * g11_y_yyzz[k] + f2g * (g20_0_yyzz[k] - fgz * g21_0_yyzz[k]) + 2.0 * f2t * gk_y_yzz[k];

                    g_yy_yzzz[k] = fr * g11_y_yzzz[k] + f2g * (g20_0_yzzz[k] - fgz * g21_0_yzzz[k]) + f2t * gk_y_zzz[k];

                    g_yy_zzzz[k] = fr * g11_y_zzzz[k] + f2g * (g20_0_zzzz[k] - fgz * g21_0_zzzz[k]);

                    g_yz_xxxx[k] = fr * g11_z_xxxx[k];

                    g_yz_xxxy[k] = fr * g11_z_xxxy[k] + f2t * gk_z_xxx[k];

                    g_yz_xxxz[k] = fr * g11_z_xxxz[k];

                    g_yz_xxyy[k] = fr * g11_z_xxyy[k] + 2.0 * f2t * gk_z_xxy[k];

                    g_yz_xxyz[k] = fr * g11_z_xxyz[k] + f2t * gk_z_xxz[k];

                    g_yz_xxzz[k] = fr * g11_z_xxzz[k];

                    g_yz_xyyy[k] = fr * g11_z_xyyy[k] + 3.0 * f2t * gk_z_xyy[k];

                    g_yz_xyyz[k] = fr * g11_z_xyyz[k] + 2.0 * f2t * gk_z_xyz[k];

                    g_yz_xyzz[k] = fr * g11_z_xyzz[k] + f2t * gk_z_xzz[k];

                    g_yz_xzzz[k] = fr * g11_z_xzzz[k];

                    g_yz_yyyy[k] = fr * g11_z_yyyy[k] + 4.0 * f2t * gk_z_yyy[k];

                    g_yz_yyyz[k] = fr * g11_z_yyyz[k] + 3.0 * f2t * gk_z_yyz[k];

                    g_yz_yyzz[k] = fr * g11_z_yyzz[k] + 2.0 * f2t * gk_z_yzz[k];

                    g_yz_yzzz[k] = fr * g11_z_yzzz[k] + f2t * gk_z_zzz[k];

                    g_yz_zzzz[k] = fr * g11_z_zzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxxx[k] = fr * g11_z_xxxx[k] + f2g * (g20_0_xxxx[k] - fgz * g21_0_xxxx[k]);

                    g_zz_xxxy[k] = fr * g11_z_xxxy[k] + f2g * (g20_0_xxxy[k] - fgz * g21_0_xxxy[k]);

                    g_zz_xxxz[k] = fr * g11_z_xxxz[k] + f2g * (g20_0_xxxz[k] - fgz * g21_0_xxxz[k]) + f2t * gk_z_xxx[k];

                    g_zz_xxyy[k] = fr * g11_z_xxyy[k] + f2g * (g20_0_xxyy[k] - fgz * g21_0_xxyy[k]);

                    g_zz_xxyz[k] = fr * g11_z_xxyz[k] + f2g * (g20_0_xxyz[k] - fgz * g21_0_xxyz[k]) + f2t * gk_z_xxy[k];

                    g_zz_xxzz[k] = fr * g11_z_xxzz[k] + f2g * (g20_0_xxzz[k] - fgz * g21_0_xxzz[k]) + 2.0 * f2t * gk_z_xxz[k];

                    g_zz_xyyy[k] = fr * g11_z_xyyy[k] + f2g * (g20_0_xyyy[k] - fgz * g21_0_xyyy[k]);

                    g_zz_xyyz[k] = fr * g11_z_xyyz[k] + f2g * (g20_0_xyyz[k] - fgz * g21_0_xyyz[k]) + f2t * gk_z_xyy[k];

                    g_zz_xyzz[k] = fr * g11_z_xyzz[k] + f2g * (g20_0_xyzz[k] - fgz * g21_0_xyzz[k]) + 2.0 * f2t * gk_z_xyz[k];

                    g_zz_xzzz[k] = fr * g11_z_xzzz[k] + f2g * (g20_0_xzzz[k] - fgz * g21_0_xzzz[k]) + 3.0 * f2t * gk_z_xzz[k];

                    g_zz_yyyy[k] = fr * g11_z_yyyy[k] + f2g * (g20_0_yyyy[k] - fgz * g21_0_yyyy[k]);

                    g_zz_yyyz[k] = fr * g11_z_yyyz[k] + f2g * (g20_0_yyyz[k] - fgz * g21_0_yyyz[k]) + f2t * gk_z_yyy[k];

                    g_zz_yyzz[k] = fr * g11_z_yyzz[k] + f2g * (g20_0_yyzz[k] - fgz * g21_0_yyzz[k]) + 2.0 * f2t * gk_z_yyz[k];

                    g_zz_yzzz[k] = fr * g11_z_yzzz[k] + f2g * (g20_0_yzzz[k] - fgz * g21_0_yzzz[k]) + 3.0 * f2t * gk_z_yzz[k];

                    g_zz_zzzz[k] = fr * g11_z_zzzz[k] + f2g * (g20_0_zzzz[k] - fgz * g21_0_zzzz[k]) + 4.0 * f2t * gk_z_zzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSD(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 2);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 2, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 2, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 2, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 2, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 1, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SP)^(m+1) integrals

                auto gk_xxx_x = primBuffer.data(gkoff + 30 * idx);

                auto gk_xxx_y = primBuffer.data(gkoff + 30 * idx + 1);

                auto gk_xxx_z = primBuffer.data(gkoff + 30 * idx + 2);

                auto gk_xxy_x = primBuffer.data(gkoff + 30 * idx + 3);

                auto gk_xxy_y = primBuffer.data(gkoff + 30 * idx + 4);

                auto gk_xxy_z = primBuffer.data(gkoff + 30 * idx + 5);

                auto gk_xxz_x = primBuffer.data(gkoff + 30 * idx + 6);

                auto gk_xxz_y = primBuffer.data(gkoff + 30 * idx + 7);

                auto gk_xxz_z = primBuffer.data(gkoff + 30 * idx + 8);

                auto gk_xyy_x = primBuffer.data(gkoff + 30 * idx + 9);

                auto gk_xyy_y = primBuffer.data(gkoff + 30 * idx + 10);

                auto gk_xyy_z = primBuffer.data(gkoff + 30 * idx + 11);

                auto gk_xyz_x = primBuffer.data(gkoff + 30 * idx + 12);

                auto gk_xyz_y = primBuffer.data(gkoff + 30 * idx + 13);

                auto gk_xyz_z = primBuffer.data(gkoff + 30 * idx + 14);

                auto gk_xzz_x = primBuffer.data(gkoff + 30 * idx + 15);

                auto gk_xzz_y = primBuffer.data(gkoff + 30 * idx + 16);

                auto gk_xzz_z = primBuffer.data(gkoff + 30 * idx + 17);

                auto gk_yyy_x = primBuffer.data(gkoff + 30 * idx + 18);

                auto gk_yyy_y = primBuffer.data(gkoff + 30 * idx + 19);

                auto gk_yyy_z = primBuffer.data(gkoff + 30 * idx + 20);

                auto gk_yyz_x = primBuffer.data(gkoff + 30 * idx + 21);

                auto gk_yyz_y = primBuffer.data(gkoff + 30 * idx + 22);

                auto gk_yyz_z = primBuffer.data(gkoff + 30 * idx + 23);

                auto gk_yzz_x = primBuffer.data(gkoff + 30 * idx + 24);

                auto gk_yzz_y = primBuffer.data(gkoff + 30 * idx + 25);

                auto gk_yzz_z = primBuffer.data(gkoff + 30 * idx + 26);

                auto gk_zzz_x = primBuffer.data(gkoff + 30 * idx + 27);

                auto gk_zzz_y = primBuffer.data(gkoff + 30 * idx + 28);

                auto gk_zzz_z = primBuffer.data(gkoff + 30 * idx + 29);

                // set up pointers to (D|g(r,r')|SD)^(m) integrals

                auto g20_xx_xx = primBuffer.data(g20off + 36 * idx);

                auto g20_xx_xy = primBuffer.data(g20off + 36 * idx + 1);

                auto g20_xx_xz = primBuffer.data(g20off + 36 * idx + 2);

                auto g20_xx_yy = primBuffer.data(g20off + 36 * idx + 3);

                auto g20_xx_yz = primBuffer.data(g20off + 36 * idx + 4);

                auto g20_xx_zz = primBuffer.data(g20off + 36 * idx + 5);

                auto g20_xy_xx = primBuffer.data(g20off + 36 * idx + 6);

                auto g20_xy_xy = primBuffer.data(g20off + 36 * idx + 7);

                auto g20_xy_xz = primBuffer.data(g20off + 36 * idx + 8);

                auto g20_xy_yy = primBuffer.data(g20off + 36 * idx + 9);

                auto g20_xy_yz = primBuffer.data(g20off + 36 * idx + 10);

                auto g20_xy_zz = primBuffer.data(g20off + 36 * idx + 11);

                auto g20_xz_xx = primBuffer.data(g20off + 36 * idx + 12);

                auto g20_xz_xy = primBuffer.data(g20off + 36 * idx + 13);

                auto g20_xz_xz = primBuffer.data(g20off + 36 * idx + 14);

                auto g20_xz_yy = primBuffer.data(g20off + 36 * idx + 15);

                auto g20_xz_yz = primBuffer.data(g20off + 36 * idx + 16);

                auto g20_xz_zz = primBuffer.data(g20off + 36 * idx + 17);

                auto g20_yy_xx = primBuffer.data(g20off + 36 * idx + 18);

                auto g20_yy_xy = primBuffer.data(g20off + 36 * idx + 19);

                auto g20_yy_xz = primBuffer.data(g20off + 36 * idx + 20);

                auto g20_yy_yy = primBuffer.data(g20off + 36 * idx + 21);

                auto g20_yy_yz = primBuffer.data(g20off + 36 * idx + 22);

                auto g20_yy_zz = primBuffer.data(g20off + 36 * idx + 23);

                auto g20_yz_xx = primBuffer.data(g20off + 36 * idx + 24);

                auto g20_yz_xy = primBuffer.data(g20off + 36 * idx + 25);

                auto g20_yz_xz = primBuffer.data(g20off + 36 * idx + 26);

                auto g20_yz_yy = primBuffer.data(g20off + 36 * idx + 27);

                auto g20_yz_yz = primBuffer.data(g20off + 36 * idx + 28);

                auto g20_yz_zz = primBuffer.data(g20off + 36 * idx + 29);

                auto g20_zz_xx = primBuffer.data(g20off + 36 * idx + 30);

                auto g20_zz_xy = primBuffer.data(g20off + 36 * idx + 31);

                auto g20_zz_xz = primBuffer.data(g20off + 36 * idx + 32);

                auto g20_zz_yy = primBuffer.data(g20off + 36 * idx + 33);

                auto g20_zz_yz = primBuffer.data(g20off + 36 * idx + 34);

                auto g20_zz_zz = primBuffer.data(g20off + 36 * idx + 35);

                // set up pointers to (D|g(r,r')|SD)^(m+1) integrals

                auto g21_xx_xx = primBuffer.data(g21off + 36 * idx);

                auto g21_xx_xy = primBuffer.data(g21off + 36 * idx + 1);

                auto g21_xx_xz = primBuffer.data(g21off + 36 * idx + 2);

                auto g21_xx_yy = primBuffer.data(g21off + 36 * idx + 3);

                auto g21_xx_yz = primBuffer.data(g21off + 36 * idx + 4);

                auto g21_xx_zz = primBuffer.data(g21off + 36 * idx + 5);

                auto g21_xy_xx = primBuffer.data(g21off + 36 * idx + 6);

                auto g21_xy_xy = primBuffer.data(g21off + 36 * idx + 7);

                auto g21_xy_xz = primBuffer.data(g21off + 36 * idx + 8);

                auto g21_xy_yy = primBuffer.data(g21off + 36 * idx + 9);

                auto g21_xy_yz = primBuffer.data(g21off + 36 * idx + 10);

                auto g21_xy_zz = primBuffer.data(g21off + 36 * idx + 11);

                auto g21_xz_xx = primBuffer.data(g21off + 36 * idx + 12);

                auto g21_xz_xy = primBuffer.data(g21off + 36 * idx + 13);

                auto g21_xz_xz = primBuffer.data(g21off + 36 * idx + 14);

                auto g21_xz_yy = primBuffer.data(g21off + 36 * idx + 15);

                auto g21_xz_yz = primBuffer.data(g21off + 36 * idx + 16);

                auto g21_xz_zz = primBuffer.data(g21off + 36 * idx + 17);

                auto g21_yy_xx = primBuffer.data(g21off + 36 * idx + 18);

                auto g21_yy_xy = primBuffer.data(g21off + 36 * idx + 19);

                auto g21_yy_xz = primBuffer.data(g21off + 36 * idx + 20);

                auto g21_yy_yy = primBuffer.data(g21off + 36 * idx + 21);

                auto g21_yy_yz = primBuffer.data(g21off + 36 * idx + 22);

                auto g21_yy_zz = primBuffer.data(g21off + 36 * idx + 23);

                auto g21_yz_xx = primBuffer.data(g21off + 36 * idx + 24);

                auto g21_yz_xy = primBuffer.data(g21off + 36 * idx + 25);

                auto g21_yz_xz = primBuffer.data(g21off + 36 * idx + 26);

                auto g21_yz_yy = primBuffer.data(g21off + 36 * idx + 27);

                auto g21_yz_yz = primBuffer.data(g21off + 36 * idx + 28);

                auto g21_yz_zz = primBuffer.data(g21off + 36 * idx + 29);

                auto g21_zz_xx = primBuffer.data(g21off + 36 * idx + 30);

                auto g21_zz_xy = primBuffer.data(g21off + 36 * idx + 31);

                auto g21_zz_xz = primBuffer.data(g21off + 36 * idx + 32);

                auto g21_zz_yy = primBuffer.data(g21off + 36 * idx + 33);

                auto g21_zz_yz = primBuffer.data(g21off + 36 * idx + 34);

                auto g21_zz_zz = primBuffer.data(g21off + 36 * idx + 35);

                // set up pointers to (F|g(r,r')|SD)^(m+1) integrals

                auto g11_xxx_xx = primBuffer.data(g11off + 60 * idx);

                auto g11_xxx_xy = primBuffer.data(g11off + 60 * idx + 1);

                auto g11_xxx_xz = primBuffer.data(g11off + 60 * idx + 2);

                auto g11_xxx_yy = primBuffer.data(g11off + 60 * idx + 3);

                auto g11_xxx_yz = primBuffer.data(g11off + 60 * idx + 4);

                auto g11_xxx_zz = primBuffer.data(g11off + 60 * idx + 5);

                auto g11_xxy_xx = primBuffer.data(g11off + 60 * idx + 6);

                auto g11_xxy_xy = primBuffer.data(g11off + 60 * idx + 7);

                auto g11_xxy_xz = primBuffer.data(g11off + 60 * idx + 8);

                auto g11_xxy_yy = primBuffer.data(g11off + 60 * idx + 9);

                auto g11_xxy_yz = primBuffer.data(g11off + 60 * idx + 10);

                auto g11_xxy_zz = primBuffer.data(g11off + 60 * idx + 11);

                auto g11_xxz_xx = primBuffer.data(g11off + 60 * idx + 12);

                auto g11_xxz_xy = primBuffer.data(g11off + 60 * idx + 13);

                auto g11_xxz_xz = primBuffer.data(g11off + 60 * idx + 14);

                auto g11_xxz_yy = primBuffer.data(g11off + 60 * idx + 15);

                auto g11_xxz_yz = primBuffer.data(g11off + 60 * idx + 16);

                auto g11_xxz_zz = primBuffer.data(g11off + 60 * idx + 17);

                auto g11_xyy_xx = primBuffer.data(g11off + 60 * idx + 18);

                auto g11_xyy_xy = primBuffer.data(g11off + 60 * idx + 19);

                auto g11_xyy_xz = primBuffer.data(g11off + 60 * idx + 20);

                auto g11_xyy_yy = primBuffer.data(g11off + 60 * idx + 21);

                auto g11_xyy_yz = primBuffer.data(g11off + 60 * idx + 22);

                auto g11_xyy_zz = primBuffer.data(g11off + 60 * idx + 23);

                auto g11_xyz_xx = primBuffer.data(g11off + 60 * idx + 24);

                auto g11_xyz_xy = primBuffer.data(g11off + 60 * idx + 25);

                auto g11_xyz_xz = primBuffer.data(g11off + 60 * idx + 26);

                auto g11_xyz_yy = primBuffer.data(g11off + 60 * idx + 27);

                auto g11_xyz_yz = primBuffer.data(g11off + 60 * idx + 28);

                auto g11_xyz_zz = primBuffer.data(g11off + 60 * idx + 29);

                auto g11_xzz_xx = primBuffer.data(g11off + 60 * idx + 30);

                auto g11_xzz_xy = primBuffer.data(g11off + 60 * idx + 31);

                auto g11_xzz_xz = primBuffer.data(g11off + 60 * idx + 32);

                auto g11_xzz_yy = primBuffer.data(g11off + 60 * idx + 33);

                auto g11_xzz_yz = primBuffer.data(g11off + 60 * idx + 34);

                auto g11_xzz_zz = primBuffer.data(g11off + 60 * idx + 35);

                auto g11_yyy_xx = primBuffer.data(g11off + 60 * idx + 36);

                auto g11_yyy_xy = primBuffer.data(g11off + 60 * idx + 37);

                auto g11_yyy_xz = primBuffer.data(g11off + 60 * idx + 38);

                auto g11_yyy_yy = primBuffer.data(g11off + 60 * idx + 39);

                auto g11_yyy_yz = primBuffer.data(g11off + 60 * idx + 40);

                auto g11_yyy_zz = primBuffer.data(g11off + 60 * idx + 41);

                auto g11_yyz_xx = primBuffer.data(g11off + 60 * idx + 42);

                auto g11_yyz_xy = primBuffer.data(g11off + 60 * idx + 43);

                auto g11_yyz_xz = primBuffer.data(g11off + 60 * idx + 44);

                auto g11_yyz_yy = primBuffer.data(g11off + 60 * idx + 45);

                auto g11_yyz_yz = primBuffer.data(g11off + 60 * idx + 46);

                auto g11_yyz_zz = primBuffer.data(g11off + 60 * idx + 47);

                auto g11_yzz_xx = primBuffer.data(g11off + 60 * idx + 48);

                auto g11_yzz_xy = primBuffer.data(g11off + 60 * idx + 49);

                auto g11_yzz_xz = primBuffer.data(g11off + 60 * idx + 50);

                auto g11_yzz_yy = primBuffer.data(g11off + 60 * idx + 51);

                auto g11_yzz_yz = primBuffer.data(g11off + 60 * idx + 52);

                auto g11_yzz_zz = primBuffer.data(g11off + 60 * idx + 53);

                auto g11_zzz_xx = primBuffer.data(g11off + 60 * idx + 54);

                auto g11_zzz_xy = primBuffer.data(g11off + 60 * idx + 55);

                auto g11_zzz_xz = primBuffer.data(g11off + 60 * idx + 56);

                auto g11_zzz_yy = primBuffer.data(g11off + 60 * idx + 57);

                auto g11_zzz_yz = primBuffer.data(g11off + 60 * idx + 58);

                auto g11_zzz_zz = primBuffer.data(g11off + 60 * idx + 59);

                // set up pointers to (G|g(r,r')|SD)^(m) integrals

                auto g_xxxx_xx = primBuffer.data(goff + 90 * idx);

                auto g_xxxx_xy = primBuffer.data(goff + 90 * idx + 1);

                auto g_xxxx_xz = primBuffer.data(goff + 90 * idx + 2);

                auto g_xxxx_yy = primBuffer.data(goff + 90 * idx + 3);

                auto g_xxxx_yz = primBuffer.data(goff + 90 * idx + 4);

                auto g_xxxx_zz = primBuffer.data(goff + 90 * idx + 5);

                auto g_xxxy_xx = primBuffer.data(goff + 90 * idx + 6);

                auto g_xxxy_xy = primBuffer.data(goff + 90 * idx + 7);

                auto g_xxxy_xz = primBuffer.data(goff + 90 * idx + 8);

                auto g_xxxy_yy = primBuffer.data(goff + 90 * idx + 9);

                auto g_xxxy_yz = primBuffer.data(goff + 90 * idx + 10);

                auto g_xxxy_zz = primBuffer.data(goff + 90 * idx + 11);

                auto g_xxxz_xx = primBuffer.data(goff + 90 * idx + 12);

                auto g_xxxz_xy = primBuffer.data(goff + 90 * idx + 13);

                auto g_xxxz_xz = primBuffer.data(goff + 90 * idx + 14);

                auto g_xxxz_yy = primBuffer.data(goff + 90 * idx + 15);

                auto g_xxxz_yz = primBuffer.data(goff + 90 * idx + 16);

                auto g_xxxz_zz = primBuffer.data(goff + 90 * idx + 17);

                auto g_xxyy_xx = primBuffer.data(goff + 90 * idx + 18);

                auto g_xxyy_xy = primBuffer.data(goff + 90 * idx + 19);

                auto g_xxyy_xz = primBuffer.data(goff + 90 * idx + 20);

                auto g_xxyy_yy = primBuffer.data(goff + 90 * idx + 21);

                auto g_xxyy_yz = primBuffer.data(goff + 90 * idx + 22);

                auto g_xxyy_zz = primBuffer.data(goff + 90 * idx + 23);

                auto g_xxyz_xx = primBuffer.data(goff + 90 * idx + 24);

                auto g_xxyz_xy = primBuffer.data(goff + 90 * idx + 25);

                auto g_xxyz_xz = primBuffer.data(goff + 90 * idx + 26);

                auto g_xxyz_yy = primBuffer.data(goff + 90 * idx + 27);

                auto g_xxyz_yz = primBuffer.data(goff + 90 * idx + 28);

                auto g_xxyz_zz = primBuffer.data(goff + 90 * idx + 29);

                auto g_xxzz_xx = primBuffer.data(goff + 90 * idx + 30);

                auto g_xxzz_xy = primBuffer.data(goff + 90 * idx + 31);

                auto g_xxzz_xz = primBuffer.data(goff + 90 * idx + 32);

                auto g_xxzz_yy = primBuffer.data(goff + 90 * idx + 33);

                auto g_xxzz_yz = primBuffer.data(goff + 90 * idx + 34);

                auto g_xxzz_zz = primBuffer.data(goff + 90 * idx + 35);

                auto g_xyyy_xx = primBuffer.data(goff + 90 * idx + 36);

                auto g_xyyy_xy = primBuffer.data(goff + 90 * idx + 37);

                auto g_xyyy_xz = primBuffer.data(goff + 90 * idx + 38);

                auto g_xyyy_yy = primBuffer.data(goff + 90 * idx + 39);

                auto g_xyyy_yz = primBuffer.data(goff + 90 * idx + 40);

                auto g_xyyy_zz = primBuffer.data(goff + 90 * idx + 41);

                auto g_xyyz_xx = primBuffer.data(goff + 90 * idx + 42);

                auto g_xyyz_xy = primBuffer.data(goff + 90 * idx + 43);

                auto g_xyyz_xz = primBuffer.data(goff + 90 * idx + 44);

                auto g_xyyz_yy = primBuffer.data(goff + 90 * idx + 45);

                auto g_xyyz_yz = primBuffer.data(goff + 90 * idx + 46);

                auto g_xyyz_zz = primBuffer.data(goff + 90 * idx + 47);

                auto g_xyzz_xx = primBuffer.data(goff + 90 * idx + 48);

                auto g_xyzz_xy = primBuffer.data(goff + 90 * idx + 49);

                auto g_xyzz_xz = primBuffer.data(goff + 90 * idx + 50);

                auto g_xyzz_yy = primBuffer.data(goff + 90 * idx + 51);

                auto g_xyzz_yz = primBuffer.data(goff + 90 * idx + 52);

                auto g_xyzz_zz = primBuffer.data(goff + 90 * idx + 53);

                auto g_xzzz_xx = primBuffer.data(goff + 90 * idx + 54);

                auto g_xzzz_xy = primBuffer.data(goff + 90 * idx + 55);

                auto g_xzzz_xz = primBuffer.data(goff + 90 * idx + 56);

                auto g_xzzz_yy = primBuffer.data(goff + 90 * idx + 57);

                auto g_xzzz_yz = primBuffer.data(goff + 90 * idx + 58);

                auto g_xzzz_zz = primBuffer.data(goff + 90 * idx + 59);

                auto g_yyyy_xx = primBuffer.data(goff + 90 * idx + 60);

                auto g_yyyy_xy = primBuffer.data(goff + 90 * idx + 61);

                auto g_yyyy_xz = primBuffer.data(goff + 90 * idx + 62);

                auto g_yyyy_yy = primBuffer.data(goff + 90 * idx + 63);

                auto g_yyyy_yz = primBuffer.data(goff + 90 * idx + 64);

                auto g_yyyy_zz = primBuffer.data(goff + 90 * idx + 65);

                auto g_yyyz_xx = primBuffer.data(goff + 90 * idx + 66);

                auto g_yyyz_xy = primBuffer.data(goff + 90 * idx + 67);

                auto g_yyyz_xz = primBuffer.data(goff + 90 * idx + 68);

                auto g_yyyz_yy = primBuffer.data(goff + 90 * idx + 69);

                auto g_yyyz_yz = primBuffer.data(goff + 90 * idx + 70);

                auto g_yyyz_zz = primBuffer.data(goff + 90 * idx + 71);

                auto g_yyzz_xx = primBuffer.data(goff + 90 * idx + 72);

                auto g_yyzz_xy = primBuffer.data(goff + 90 * idx + 73);

                auto g_yyzz_xz = primBuffer.data(goff + 90 * idx + 74);

                auto g_yyzz_yy = primBuffer.data(goff + 90 * idx + 75);

                auto g_yyzz_yz = primBuffer.data(goff + 90 * idx + 76);

                auto g_yyzz_zz = primBuffer.data(goff + 90 * idx + 77);

                auto g_yzzz_xx = primBuffer.data(goff + 90 * idx + 78);

                auto g_yzzz_xy = primBuffer.data(goff + 90 * idx + 79);

                auto g_yzzz_xz = primBuffer.data(goff + 90 * idx + 80);

                auto g_yzzz_yy = primBuffer.data(goff + 90 * idx + 81);

                auto g_yzzz_yz = primBuffer.data(goff + 90 * idx + 82);

                auto g_yzzz_zz = primBuffer.data(goff + 90 * idx + 83);

                auto g_zzzz_xx = primBuffer.data(goff + 90 * idx + 84);

                auto g_zzzz_xy = primBuffer.data(goff + 90 * idx + 85);

                auto g_zzzz_xz = primBuffer.data(goff + 90 * idx + 86);

                auto g_zzzz_yy = primBuffer.data(goff + 90 * idx + 87);

                auto g_zzzz_yz = primBuffer.data(goff + 90 * idx + 88);

                auto g_zzzz_zz = primBuffer.data(goff + 90 * idx + 89);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_x,\
                                         gk_xxx_y, gk_xxx_z, gk_xxy_x, gk_xxy_y,\
                                         gk_xxy_z, gk_xxz_x, gk_xxz_y, gk_xxz_z,\
                                         gk_xyy_x, gk_xyy_y, gk_xyy_z, gk_xyz_x,\
                                         gk_xyz_y, gk_xyz_z, gk_xzz_x, gk_xzz_y,\
                                         gk_xzz_z, gk_yyy_x, gk_yyy_y, gk_yyy_z,\
                                         gk_yyz_x, gk_yyz_y, gk_yyz_z, gk_yzz_x,\
                                         gk_yzz_y, gk_yzz_z, gk_zzz_x, gk_zzz_y,\
                                         gk_zzz_z, g20_xx_xx, g20_xx_xy, g20_xx_xz,\
                                         g20_xx_yy, g20_xx_yz, g20_xx_zz, g20_xy_xx,\
                                         g20_xy_xy, g20_xy_xz, g20_xy_yy, g20_xy_yz,\
                                         g20_xy_zz, g20_xz_xx, g20_xz_xy, g20_xz_xz,\
                                         g20_xz_yy, g20_xz_yz, g20_xz_zz, g20_yy_xx,\
                                         g20_yy_xy, g20_yy_xz, g20_yy_yy, g20_yy_yz,\
                                         g20_yy_zz, g20_yz_xx, g20_yz_xy, g20_yz_xz,\
                                         g20_yz_yy, g20_yz_yz, g20_yz_zz, g20_zz_xx,\
                                         g20_zz_xy, g20_zz_xz, g20_zz_yy, g20_zz_yz,\
                                         g20_zz_zz, g21_xx_xx, g21_xx_xy, g21_xx_xz,\
                                         g21_xx_yy, g21_xx_yz, g21_xx_zz, g21_xy_xx,\
                                         g21_xy_xy, g21_xy_xz, g21_xy_yy, g21_xy_yz,\
                                         g21_xy_zz, g21_xz_xx, g21_xz_xy, g21_xz_xz,\
                                         g21_xz_yy, g21_xz_yz, g21_xz_zz, g21_yy_xx,\
                                         g21_yy_xy, g21_yy_xz, g21_yy_yy, g21_yy_yz,\
                                         g21_yy_zz, g21_yz_xx, g21_yz_xy, g21_yz_xz,\
                                         g21_yz_yy, g21_yz_yz, g21_yz_zz, g21_zz_xx,\
                                         g21_zz_xy, g21_zz_xz, g21_zz_yy, g21_zz_yz,\
                                         g21_zz_zz, g11_xxx_xx, g11_xxx_xy, g11_xxx_xz,\
                                         g11_xxx_yy, g11_xxx_yz, g11_xxx_zz, g11_xxy_xx,\
                                         g11_xxy_xy, g11_xxy_xz, g11_xxy_yy, g11_xxy_yz,\
                                         g11_xxy_zz, g11_xxz_xx, g11_xxz_xy, g11_xxz_xz,\
                                         g11_xxz_yy, g11_xxz_yz, g11_xxz_zz, g11_xyy_xx,\
                                         g11_xyy_xy, g11_xyy_xz, g11_xyy_yy, g11_xyy_yz,\
                                         g11_xyy_zz, g11_xyz_xx, g11_xyz_xy, g11_xyz_xz,\
                                         g11_xyz_yy, g11_xyz_yz, g11_xyz_zz, g11_xzz_xx,\
                                         g11_xzz_xy, g11_xzz_xz, g11_xzz_yy, g11_xzz_yz,\
                                         g11_xzz_zz, g11_yyy_xx, g11_yyy_xy, g11_yyy_xz,\
                                         g11_yyy_yy, g11_yyy_yz, g11_yyy_zz, g11_yyz_xx,\
                                         g11_yyz_xy, g11_yyz_xz, g11_yyz_yy, g11_yyz_yz,\
                                         g11_yyz_zz, g11_yzz_xx, g11_yzz_xy, g11_yzz_xz,\
                                         g11_yzz_yy, g11_yzz_yz, g11_yzz_zz, g11_zzz_xx,\
                                         g11_zzz_xy, g11_zzz_xz, g11_zzz_yy, g11_zzz_yz,\
                                         g11_zzz_zz, g_xxxx_xx, g_xxxx_xy, g_xxxx_xz,\
                                         g_xxxx_yy, g_xxxx_yz, g_xxxx_zz, g_xxxy_xx,\
                                         g_xxxy_xy, g_xxxy_xz, g_xxxy_yy, g_xxxy_yz,\
                                         g_xxxy_zz, g_xxxz_xx, g_xxxz_xy, g_xxxz_xz,\
                                         g_xxxz_yy, g_xxxz_yz, g_xxxz_zz, g_xxyy_xx,\
                                         g_xxyy_xy, g_xxyy_xz, g_xxyy_yy, g_xxyy_yz,\
                                         g_xxyy_zz, g_xxyz_xx, g_xxyz_xy, g_xxyz_xz,\
                                         g_xxyz_yy, g_xxyz_yz, g_xxyz_zz, g_xxzz_xx,\
                                         g_xxzz_xy, g_xxzz_xz, g_xxzz_yy, g_xxzz_yz,\
                                         g_xxzz_zz, g_xyyy_xx, g_xyyy_xy, g_xyyy_xz,\
                                         g_xyyy_yy, g_xyyy_yz, g_xyyy_zz, g_xyyz_xx,\
                                         g_xyyz_xy, g_xyyz_xz, g_xyyz_yy, g_xyyz_yz,\
                                         g_xyyz_zz, g_xyzz_xx, g_xyzz_xy, g_xyzz_xz,\
                                         g_xyzz_yy, g_xyzz_yz, g_xyzz_zz, g_xzzz_xx,\
                                         g_xzzz_xy, g_xzzz_xz, g_xzzz_yy, g_xzzz_yz,\
                                         g_xzzz_zz, g_yyyy_xx, g_yyyy_xy, g_yyyy_xz,\
                                         g_yyyy_yy, g_yyyy_yz, g_yyyy_zz, g_yyyz_xx,\
                                         g_yyyz_xy, g_yyyz_xz, g_yyyz_yy, g_yyyz_yz,\
                                         g_yyyz_zz, g_yyzz_xx, g_yyzz_xy, g_yyzz_xz,\
                                         g_yyzz_yy, g_yyzz_yz, g_yyzz_zz, g_yzzz_xx,\
                                         g_yzzz_xy, g_yzzz_xz, g_yzzz_yy, g_yzzz_yz,\
                                         g_yzzz_zz, g_zzzz_xx, g_zzzz_xy, g_zzzz_xz,\
                                         g_zzzz_yy, g_zzzz_yz, g_zzzz_zz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xx[k] = fr * g11_xxx_xx[k] + f2g * (3.0 * g20_xx_xx[k] - 3.0 * fgz * g21_xx_xx[k]) + 2.0 * f2t * gk_xxx_x[k];

                    g_xxxx_xy[k] = fr * g11_xxx_xy[k] + f2g * (3.0 * g20_xx_xy[k] - 3.0 * fgz * g21_xx_xy[k]) + f2t * gk_xxx_y[k];

                    g_xxxx_xz[k] = fr * g11_xxx_xz[k] + f2g * (3.0 * g20_xx_xz[k] - 3.0 * fgz * g21_xx_xz[k]) + f2t * gk_xxx_z[k];

                    g_xxxx_yy[k] = fr * g11_xxx_yy[k] + f2g * (3.0 * g20_xx_yy[k] - 3.0 * fgz * g21_xx_yy[k]);

                    g_xxxx_yz[k] = fr * g11_xxx_yz[k] + f2g * (3.0 * g20_xx_yz[k] - 3.0 * fgz * g21_xx_yz[k]);

                    g_xxxx_zz[k] = fr * g11_xxx_zz[k] + f2g * (3.0 * g20_xx_zz[k] - 3.0 * fgz * g21_xx_zz[k]);

                    g_xxxy_xx[k] = fr * g11_xxy_xx[k] + f2g * (2.0 * g20_xy_xx[k] - 2.0 * fgz * g21_xy_xx[k]) + 2.0 * f2t * gk_xxy_x[k];

                    g_xxxy_xy[k] = fr * g11_xxy_xy[k] + f2g * (2.0 * g20_xy_xy[k] - 2.0 * fgz * g21_xy_xy[k]) + f2t * gk_xxy_y[k];

                    g_xxxy_xz[k] = fr * g11_xxy_xz[k] + f2g * (2.0 * g20_xy_xz[k] - 2.0 * fgz * g21_xy_xz[k]) + f2t * gk_xxy_z[k];

                    g_xxxy_yy[k] = fr * g11_xxy_yy[k] + f2g * (2.0 * g20_xy_yy[k] - 2.0 * fgz * g21_xy_yy[k]);

                    g_xxxy_yz[k] = fr * g11_xxy_yz[k] + f2g * (2.0 * g20_xy_yz[k] - 2.0 * fgz * g21_xy_yz[k]);

                    g_xxxy_zz[k] = fr * g11_xxy_zz[k] + f2g * (2.0 * g20_xy_zz[k] - 2.0 * fgz * g21_xy_zz[k]);

                    g_xxxz_xx[k] = fr * g11_xxz_xx[k] + f2g * (2.0 * g20_xz_xx[k] - 2.0 * fgz * g21_xz_xx[k]) + 2.0 * f2t * gk_xxz_x[k];

                    g_xxxz_xy[k] = fr * g11_xxz_xy[k] + f2g * (2.0 * g20_xz_xy[k] - 2.0 * fgz * g21_xz_xy[k]) + f2t * gk_xxz_y[k];

                    g_xxxz_xz[k] = fr * g11_xxz_xz[k] + f2g * (2.0 * g20_xz_xz[k] - 2.0 * fgz * g21_xz_xz[k]) + f2t * gk_xxz_z[k];

                    g_xxxz_yy[k] = fr * g11_xxz_yy[k] + f2g * (2.0 * g20_xz_yy[k] - 2.0 * fgz * g21_xz_yy[k]);

                    g_xxxz_yz[k] = fr * g11_xxz_yz[k] + f2g * (2.0 * g20_xz_yz[k] - 2.0 * fgz * g21_xz_yz[k]);

                    g_xxxz_zz[k] = fr * g11_xxz_zz[k] + f2g * (2.0 * g20_xz_zz[k] - 2.0 * fgz * g21_xz_zz[k]);

                    g_xxyy_xx[k] = fr * g11_xyy_xx[k] + f2g * (g20_yy_xx[k] - fgz * g21_yy_xx[k]) + 2.0 * f2t * gk_xyy_x[k];

                    g_xxyy_xy[k] = fr * g11_xyy_xy[k] + f2g * (g20_yy_xy[k] - fgz * g21_yy_xy[k]) + f2t * gk_xyy_y[k];

                    g_xxyy_xz[k] = fr * g11_xyy_xz[k] + f2g * (g20_yy_xz[k] - fgz * g21_yy_xz[k]) + f2t * gk_xyy_z[k];

                    g_xxyy_yy[k] = fr * g11_xyy_yy[k] + f2g * (g20_yy_yy[k] - fgz * g21_yy_yy[k]);

                    g_xxyy_yz[k] = fr * g11_xyy_yz[k] + f2g * (g20_yy_yz[k] - fgz * g21_yy_yz[k]);

                    g_xxyy_zz[k] = fr * g11_xyy_zz[k] + f2g * (g20_yy_zz[k] - fgz * g21_yy_zz[k]);

                    g_xxyz_xx[k] = fr * g11_xyz_xx[k] + f2g * (g20_yz_xx[k] - fgz * g21_yz_xx[k]) + 2.0 * f2t * gk_xyz_x[k];

                    g_xxyz_xy[k] = fr * g11_xyz_xy[k] + f2g * (g20_yz_xy[k] - fgz * g21_yz_xy[k]) + f2t * gk_xyz_y[k];

                    g_xxyz_xz[k] = fr * g11_xyz_xz[k] + f2g * (g20_yz_xz[k] - fgz * g21_yz_xz[k]) + f2t * gk_xyz_z[k];

                    g_xxyz_yy[k] = fr * g11_xyz_yy[k] + f2g * (g20_yz_yy[k] - fgz * g21_yz_yy[k]);

                    g_xxyz_yz[k] = fr * g11_xyz_yz[k] + f2g * (g20_yz_yz[k] - fgz * g21_yz_yz[k]);

                    g_xxyz_zz[k] = fr * g11_xyz_zz[k] + f2g * (g20_yz_zz[k] - fgz * g21_yz_zz[k]);

                    g_xxzz_xx[k] = fr * g11_xzz_xx[k] + f2g * (g20_zz_xx[k] - fgz * g21_zz_xx[k]) + 2.0 * f2t * gk_xzz_x[k];

                    g_xxzz_xy[k] = fr * g11_xzz_xy[k] + f2g * (g20_zz_xy[k] - fgz * g21_zz_xy[k]) + f2t * gk_xzz_y[k];

                    g_xxzz_xz[k] = fr * g11_xzz_xz[k] + f2g * (g20_zz_xz[k] - fgz * g21_zz_xz[k]) + f2t * gk_xzz_z[k];

                    g_xxzz_yy[k] = fr * g11_xzz_yy[k] + f2g * (g20_zz_yy[k] - fgz * g21_zz_yy[k]);

                    g_xxzz_yz[k] = fr * g11_xzz_yz[k] + f2g * (g20_zz_yz[k] - fgz * g21_zz_yz[k]);

                    g_xxzz_zz[k] = fr * g11_xzz_zz[k] + f2g * (g20_zz_zz[k] - fgz * g21_zz_zz[k]);

                    g_xyyy_xx[k] = fr * g11_yyy_xx[k] + 2.0 * f2t * gk_yyy_x[k];

                    g_xyyy_xy[k] = fr * g11_yyy_xy[k] + f2t * gk_yyy_y[k];

                    g_xyyy_xz[k] = fr * g11_yyy_xz[k] + f2t * gk_yyy_z[k];

                    g_xyyy_yy[k] = fr * g11_yyy_yy[k];

                    g_xyyy_yz[k] = fr * g11_yyy_yz[k];

                    g_xyyy_zz[k] = fr * g11_yyy_zz[k];

                    g_xyyz_xx[k] = fr * g11_yyz_xx[k] + 2.0 * f2t * gk_yyz_x[k];

                    g_xyyz_xy[k] = fr * g11_yyz_xy[k] + f2t * gk_yyz_y[k];

                    g_xyyz_xz[k] = fr * g11_yyz_xz[k] + f2t * gk_yyz_z[k];

                    g_xyyz_yy[k] = fr * g11_yyz_yy[k];

                    g_xyyz_yz[k] = fr * g11_yyz_yz[k];

                    g_xyyz_zz[k] = fr * g11_yyz_zz[k];

                    g_xyzz_xx[k] = fr * g11_yzz_xx[k] + 2.0 * f2t * gk_yzz_x[k];

                    g_xyzz_xy[k] = fr * g11_yzz_xy[k] + f2t * gk_yzz_y[k];

                    g_xyzz_xz[k] = fr * g11_yzz_xz[k] + f2t * gk_yzz_z[k];

                    g_xyzz_yy[k] = fr * g11_yzz_yy[k];

                    g_xyzz_yz[k] = fr * g11_yzz_yz[k];

                    g_xyzz_zz[k] = fr * g11_yzz_zz[k];

                    g_xzzz_xx[k] = fr * g11_zzz_xx[k] + 2.0 * f2t * gk_zzz_x[k];

                    g_xzzz_xy[k] = fr * g11_zzz_xy[k] + f2t * gk_zzz_y[k];

                    g_xzzz_xz[k] = fr * g11_zzz_xz[k] + f2t * gk_zzz_z[k];

                    g_xzzz_yy[k] = fr * g11_zzz_yy[k];

                    g_xzzz_yz[k] = fr * g11_zzz_yz[k];

                    g_xzzz_zz[k] = fr * g11_zzz_zz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xx[k] = fr * g11_yyy_xx[k] + f2g * (3.0 * g20_yy_xx[k] - 3.0 * fgz * g21_yy_xx[k]);

                    g_yyyy_xy[k] = fr * g11_yyy_xy[k] + f2g * (3.0 * g20_yy_xy[k] - 3.0 * fgz * g21_yy_xy[k]) + f2t * gk_yyy_x[k];

                    g_yyyy_xz[k] = fr * g11_yyy_xz[k] + f2g * (3.0 * g20_yy_xz[k] - 3.0 * fgz * g21_yy_xz[k]);

                    g_yyyy_yy[k] = fr * g11_yyy_yy[k] + f2g * (3.0 * g20_yy_yy[k] - 3.0 * fgz * g21_yy_yy[k]) + 2.0 * f2t * gk_yyy_y[k];

                    g_yyyy_yz[k] = fr * g11_yyy_yz[k] + f2g * (3.0 * g20_yy_yz[k] - 3.0 * fgz * g21_yy_yz[k]) + f2t * gk_yyy_z[k];

                    g_yyyy_zz[k] = fr * g11_yyy_zz[k] + f2g * (3.0 * g20_yy_zz[k] - 3.0 * fgz * g21_yy_zz[k]);

                    g_yyyz_xx[k] = fr * g11_yyz_xx[k] + f2g * (2.0 * g20_yz_xx[k] - 2.0 * fgz * g21_yz_xx[k]);

                    g_yyyz_xy[k] = fr * g11_yyz_xy[k] + f2g * (2.0 * g20_yz_xy[k] - 2.0 * fgz * g21_yz_xy[k]) + f2t * gk_yyz_x[k];

                    g_yyyz_xz[k] = fr * g11_yyz_xz[k] + f2g * (2.0 * g20_yz_xz[k] - 2.0 * fgz * g21_yz_xz[k]);

                    g_yyyz_yy[k] = fr * g11_yyz_yy[k] + f2g * (2.0 * g20_yz_yy[k] - 2.0 * fgz * g21_yz_yy[k]) + 2.0 * f2t * gk_yyz_y[k];

                    g_yyyz_yz[k] = fr * g11_yyz_yz[k] + f2g * (2.0 * g20_yz_yz[k] - 2.0 * fgz * g21_yz_yz[k]) + f2t * gk_yyz_z[k];

                    g_yyyz_zz[k] = fr * g11_yyz_zz[k] + f2g * (2.0 * g20_yz_zz[k] - 2.0 * fgz * g21_yz_zz[k]);

                    g_yyzz_xx[k] = fr * g11_yzz_xx[k] + f2g * (g20_zz_xx[k] - fgz * g21_zz_xx[k]);

                    g_yyzz_xy[k] = fr * g11_yzz_xy[k] + f2g * (g20_zz_xy[k] - fgz * g21_zz_xy[k]) + f2t * gk_yzz_x[k];

                    g_yyzz_xz[k] = fr * g11_yzz_xz[k] + f2g * (g20_zz_xz[k] - fgz * g21_zz_xz[k]);

                    g_yyzz_yy[k] = fr * g11_yzz_yy[k] + f2g * (g20_zz_yy[k] - fgz * g21_zz_yy[k]) + 2.0 * f2t * gk_yzz_y[k];

                    g_yyzz_yz[k] = fr * g11_yzz_yz[k] + f2g * (g20_zz_yz[k] - fgz * g21_zz_yz[k]) + f2t * gk_yzz_z[k];

                    g_yyzz_zz[k] = fr * g11_yzz_zz[k] + f2g * (g20_zz_zz[k] - fgz * g21_zz_zz[k]);

                    g_yzzz_xx[k] = fr * g11_zzz_xx[k];

                    g_yzzz_xy[k] = fr * g11_zzz_xy[k] + f2t * gk_zzz_x[k];

                    g_yzzz_xz[k] = fr * g11_zzz_xz[k];

                    g_yzzz_yy[k] = fr * g11_zzz_yy[k] + 2.0 * f2t * gk_zzz_y[k];

                    g_yzzz_yz[k] = fr * g11_zzz_yz[k] + f2t * gk_zzz_z[k];

                    g_yzzz_zz[k] = fr * g11_zzz_zz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xx[k] = fr * g11_zzz_xx[k] + f2g * (3.0 * g20_zz_xx[k] - 3.0 * fgz * g21_zz_xx[k]);

                    g_zzzz_xy[k] = fr * g11_zzz_xy[k] + f2g * (3.0 * g20_zz_xy[k] - 3.0 * fgz * g21_zz_xy[k]);

                    g_zzzz_xz[k] = fr * g11_zzz_xz[k] + f2g * (3.0 * g20_zz_xz[k] - 3.0 * fgz * g21_zz_xz[k]) + f2t * gk_zzz_x[k];

                    g_zzzz_yy[k] = fr * g11_zzz_yy[k] + f2g * (3.0 * g20_zz_yy[k] - 3.0 * fgz * g21_zz_yy[k]);

                    g_zzzz_yz[k] = fr * g11_zzz_yz[k] + f2g * (3.0 * g20_zz_yz[k] - 3.0 * fgz * g21_zz_yz[k]) + f2t * gk_zzz_y[k];

                    g_zzzz_zz[k] = fr * g11_zzz_zz[k] + f2g * (3.0 * g20_zz_zz[k] - 3.0 * fgz * g21_zz_zz[k]) + 2.0 * f2t * gk_zzz_z[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSG(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 4);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 4, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 4, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 4, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 4, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 3, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SF)^(m+1) integrals

                auto gk_xx_xxx = primBuffer.data(gkoff + 60 * idx);

                auto gk_xx_xxy = primBuffer.data(gkoff + 60 * idx + 1);

                auto gk_xx_xxz = primBuffer.data(gkoff + 60 * idx + 2);

                auto gk_xx_xyy = primBuffer.data(gkoff + 60 * idx + 3);

                auto gk_xx_xyz = primBuffer.data(gkoff + 60 * idx + 4);

                auto gk_xx_xzz = primBuffer.data(gkoff + 60 * idx + 5);

                auto gk_xx_yyy = primBuffer.data(gkoff + 60 * idx + 6);

                auto gk_xx_yyz = primBuffer.data(gkoff + 60 * idx + 7);

                auto gk_xx_yzz = primBuffer.data(gkoff + 60 * idx + 8);

                auto gk_xx_zzz = primBuffer.data(gkoff + 60 * idx + 9);

                auto gk_xy_xxx = primBuffer.data(gkoff + 60 * idx + 10);

                auto gk_xy_xxy = primBuffer.data(gkoff + 60 * idx + 11);

                auto gk_xy_xxz = primBuffer.data(gkoff + 60 * idx + 12);

                auto gk_xy_xyy = primBuffer.data(gkoff + 60 * idx + 13);

                auto gk_xy_xyz = primBuffer.data(gkoff + 60 * idx + 14);

                auto gk_xy_xzz = primBuffer.data(gkoff + 60 * idx + 15);

                auto gk_xy_yyy = primBuffer.data(gkoff + 60 * idx + 16);

                auto gk_xy_yyz = primBuffer.data(gkoff + 60 * idx + 17);

                auto gk_xy_yzz = primBuffer.data(gkoff + 60 * idx + 18);

                auto gk_xy_zzz = primBuffer.data(gkoff + 60 * idx + 19);

                auto gk_xz_xxx = primBuffer.data(gkoff + 60 * idx + 20);

                auto gk_xz_xxy = primBuffer.data(gkoff + 60 * idx + 21);

                auto gk_xz_xxz = primBuffer.data(gkoff + 60 * idx + 22);

                auto gk_xz_xyy = primBuffer.data(gkoff + 60 * idx + 23);

                auto gk_xz_xyz = primBuffer.data(gkoff + 60 * idx + 24);

                auto gk_xz_xzz = primBuffer.data(gkoff + 60 * idx + 25);

                auto gk_xz_yyy = primBuffer.data(gkoff + 60 * idx + 26);

                auto gk_xz_yyz = primBuffer.data(gkoff + 60 * idx + 27);

                auto gk_xz_yzz = primBuffer.data(gkoff + 60 * idx + 28);

                auto gk_xz_zzz = primBuffer.data(gkoff + 60 * idx + 29);

                auto gk_yy_xxx = primBuffer.data(gkoff + 60 * idx + 30);

                auto gk_yy_xxy = primBuffer.data(gkoff + 60 * idx + 31);

                auto gk_yy_xxz = primBuffer.data(gkoff + 60 * idx + 32);

                auto gk_yy_xyy = primBuffer.data(gkoff + 60 * idx + 33);

                auto gk_yy_xyz = primBuffer.data(gkoff + 60 * idx + 34);

                auto gk_yy_xzz = primBuffer.data(gkoff + 60 * idx + 35);

                auto gk_yy_yyy = primBuffer.data(gkoff + 60 * idx + 36);

                auto gk_yy_yyz = primBuffer.data(gkoff + 60 * idx + 37);

                auto gk_yy_yzz = primBuffer.data(gkoff + 60 * idx + 38);

                auto gk_yy_zzz = primBuffer.data(gkoff + 60 * idx + 39);

                auto gk_yz_xxx = primBuffer.data(gkoff + 60 * idx + 40);

                auto gk_yz_xxy = primBuffer.data(gkoff + 60 * idx + 41);

                auto gk_yz_xxz = primBuffer.data(gkoff + 60 * idx + 42);

                auto gk_yz_xyy = primBuffer.data(gkoff + 60 * idx + 43);

                auto gk_yz_xyz = primBuffer.data(gkoff + 60 * idx + 44);

                auto gk_yz_xzz = primBuffer.data(gkoff + 60 * idx + 45);

                auto gk_yz_yyy = primBuffer.data(gkoff + 60 * idx + 46);

                auto gk_yz_yyz = primBuffer.data(gkoff + 60 * idx + 47);

                auto gk_yz_yzz = primBuffer.data(gkoff + 60 * idx + 48);

                auto gk_yz_zzz = primBuffer.data(gkoff + 60 * idx + 49);

                auto gk_zz_xxx = primBuffer.data(gkoff + 60 * idx + 50);

                auto gk_zz_xxy = primBuffer.data(gkoff + 60 * idx + 51);

                auto gk_zz_xxz = primBuffer.data(gkoff + 60 * idx + 52);

                auto gk_zz_xyy = primBuffer.data(gkoff + 60 * idx + 53);

                auto gk_zz_xyz = primBuffer.data(gkoff + 60 * idx + 54);

                auto gk_zz_xzz = primBuffer.data(gkoff + 60 * idx + 55);

                auto gk_zz_yyy = primBuffer.data(gkoff + 60 * idx + 56);

                auto gk_zz_yyz = primBuffer.data(gkoff + 60 * idx + 57);

                auto gk_zz_yzz = primBuffer.data(gkoff + 60 * idx + 58);

                auto gk_zz_zzz = primBuffer.data(gkoff + 60 * idx + 59);

                // set up pointers to (P|g(r,r')|SG)^(m) integrals

                auto g20_x_xxxx = primBuffer.data(g20off + 45 * idx);

                auto g20_x_xxxy = primBuffer.data(g20off + 45 * idx + 1);

                auto g20_x_xxxz = primBuffer.data(g20off + 45 * idx + 2);

                auto g20_x_xxyy = primBuffer.data(g20off + 45 * idx + 3);

                auto g20_x_xxyz = primBuffer.data(g20off + 45 * idx + 4);

                auto g20_x_xxzz = primBuffer.data(g20off + 45 * idx + 5);

                auto g20_x_xyyy = primBuffer.data(g20off + 45 * idx + 6);

                auto g20_x_xyyz = primBuffer.data(g20off + 45 * idx + 7);

                auto g20_x_xyzz = primBuffer.data(g20off + 45 * idx + 8);

                auto g20_x_xzzz = primBuffer.data(g20off + 45 * idx + 9);

                auto g20_x_yyyy = primBuffer.data(g20off + 45 * idx + 10);

                auto g20_x_yyyz = primBuffer.data(g20off + 45 * idx + 11);

                auto g20_x_yyzz = primBuffer.data(g20off + 45 * idx + 12);

                auto g20_x_yzzz = primBuffer.data(g20off + 45 * idx + 13);

                auto g20_x_zzzz = primBuffer.data(g20off + 45 * idx + 14);

                auto g20_y_xxxx = primBuffer.data(g20off + 45 * idx + 15);

                auto g20_y_xxxy = primBuffer.data(g20off + 45 * idx + 16);

                auto g20_y_xxxz = primBuffer.data(g20off + 45 * idx + 17);

                auto g20_y_xxyy = primBuffer.data(g20off + 45 * idx + 18);

                auto g20_y_xxyz = primBuffer.data(g20off + 45 * idx + 19);

                auto g20_y_xxzz = primBuffer.data(g20off + 45 * idx + 20);

                auto g20_y_xyyy = primBuffer.data(g20off + 45 * idx + 21);

                auto g20_y_xyyz = primBuffer.data(g20off + 45 * idx + 22);

                auto g20_y_xyzz = primBuffer.data(g20off + 45 * idx + 23);

                auto g20_y_xzzz = primBuffer.data(g20off + 45 * idx + 24);

                auto g20_y_yyyy = primBuffer.data(g20off + 45 * idx + 25);

                auto g20_y_yyyz = primBuffer.data(g20off + 45 * idx + 26);

                auto g20_y_yyzz = primBuffer.data(g20off + 45 * idx + 27);

                auto g20_y_yzzz = primBuffer.data(g20off + 45 * idx + 28);

                auto g20_y_zzzz = primBuffer.data(g20off + 45 * idx + 29);

                auto g20_z_xxxx = primBuffer.data(g20off + 45 * idx + 30);

                auto g20_z_xxxy = primBuffer.data(g20off + 45 * idx + 31);

                auto g20_z_xxxz = primBuffer.data(g20off + 45 * idx + 32);

                auto g20_z_xxyy = primBuffer.data(g20off + 45 * idx + 33);

                auto g20_z_xxyz = primBuffer.data(g20off + 45 * idx + 34);

                auto g20_z_xxzz = primBuffer.data(g20off + 45 * idx + 35);

                auto g20_z_xyyy = primBuffer.data(g20off + 45 * idx + 36);

                auto g20_z_xyyz = primBuffer.data(g20off + 45 * idx + 37);

                auto g20_z_xyzz = primBuffer.data(g20off + 45 * idx + 38);

                auto g20_z_xzzz = primBuffer.data(g20off + 45 * idx + 39);

                auto g20_z_yyyy = primBuffer.data(g20off + 45 * idx + 40);

                auto g20_z_yyyz = primBuffer.data(g20off + 45 * idx + 41);

                auto g20_z_yyzz = primBuffer.data(g20off + 45 * idx + 42);

                auto g20_z_yzzz = primBuffer.data(g20off + 45 * idx + 43);

                auto g20_z_zzzz = primBuffer.data(g20off + 45 * idx + 44);

                // set up pointers to (P|g(r,r')|SG)^(m+1) integrals

                auto g21_x_xxxx = primBuffer.data(g21off + 45 * idx);

                auto g21_x_xxxy = primBuffer.data(g21off + 45 * idx + 1);

                auto g21_x_xxxz = primBuffer.data(g21off + 45 * idx + 2);

                auto g21_x_xxyy = primBuffer.data(g21off + 45 * idx + 3);

                auto g21_x_xxyz = primBuffer.data(g21off + 45 * idx + 4);

                auto g21_x_xxzz = primBuffer.data(g21off + 45 * idx + 5);

                auto g21_x_xyyy = primBuffer.data(g21off + 45 * idx + 6);

                auto g21_x_xyyz = primBuffer.data(g21off + 45 * idx + 7);

                auto g21_x_xyzz = primBuffer.data(g21off + 45 * idx + 8);

                auto g21_x_xzzz = primBuffer.data(g21off + 45 * idx + 9);

                auto g21_x_yyyy = primBuffer.data(g21off + 45 * idx + 10);

                auto g21_x_yyyz = primBuffer.data(g21off + 45 * idx + 11);

                auto g21_x_yyzz = primBuffer.data(g21off + 45 * idx + 12);

                auto g21_x_yzzz = primBuffer.data(g21off + 45 * idx + 13);

                auto g21_x_zzzz = primBuffer.data(g21off + 45 * idx + 14);

                auto g21_y_xxxx = primBuffer.data(g21off + 45 * idx + 15);

                auto g21_y_xxxy = primBuffer.data(g21off + 45 * idx + 16);

                auto g21_y_xxxz = primBuffer.data(g21off + 45 * idx + 17);

                auto g21_y_xxyy = primBuffer.data(g21off + 45 * idx + 18);

                auto g21_y_xxyz = primBuffer.data(g21off + 45 * idx + 19);

                auto g21_y_xxzz = primBuffer.data(g21off + 45 * idx + 20);

                auto g21_y_xyyy = primBuffer.data(g21off + 45 * idx + 21);

                auto g21_y_xyyz = primBuffer.data(g21off + 45 * idx + 22);

                auto g21_y_xyzz = primBuffer.data(g21off + 45 * idx + 23);

                auto g21_y_xzzz = primBuffer.data(g21off + 45 * idx + 24);

                auto g21_y_yyyy = primBuffer.data(g21off + 45 * idx + 25);

                auto g21_y_yyyz = primBuffer.data(g21off + 45 * idx + 26);

                auto g21_y_yyzz = primBuffer.data(g21off + 45 * idx + 27);

                auto g21_y_yzzz = primBuffer.data(g21off + 45 * idx + 28);

                auto g21_y_zzzz = primBuffer.data(g21off + 45 * idx + 29);

                auto g21_z_xxxx = primBuffer.data(g21off + 45 * idx + 30);

                auto g21_z_xxxy = primBuffer.data(g21off + 45 * idx + 31);

                auto g21_z_xxxz = primBuffer.data(g21off + 45 * idx + 32);

                auto g21_z_xxyy = primBuffer.data(g21off + 45 * idx + 33);

                auto g21_z_xxyz = primBuffer.data(g21off + 45 * idx + 34);

                auto g21_z_xxzz = primBuffer.data(g21off + 45 * idx + 35);

                auto g21_z_xyyy = primBuffer.data(g21off + 45 * idx + 36);

                auto g21_z_xyyz = primBuffer.data(g21off + 45 * idx + 37);

                auto g21_z_xyzz = primBuffer.data(g21off + 45 * idx + 38);

                auto g21_z_xzzz = primBuffer.data(g21off + 45 * idx + 39);

                auto g21_z_yyyy = primBuffer.data(g21off + 45 * idx + 40);

                auto g21_z_yyyz = primBuffer.data(g21off + 45 * idx + 41);

                auto g21_z_yyzz = primBuffer.data(g21off + 45 * idx + 42);

                auto g21_z_yzzz = primBuffer.data(g21off + 45 * idx + 43);

                auto g21_z_zzzz = primBuffer.data(g21off + 45 * idx + 44);

                // set up pointers to (D|g(r,r')|SG)^(m+1) integrals

                auto g11_xx_xxxx = primBuffer.data(g11off + 90 * idx);

                auto g11_xx_xxxy = primBuffer.data(g11off + 90 * idx + 1);

                auto g11_xx_xxxz = primBuffer.data(g11off + 90 * idx + 2);

                auto g11_xx_xxyy = primBuffer.data(g11off + 90 * idx + 3);

                auto g11_xx_xxyz = primBuffer.data(g11off + 90 * idx + 4);

                auto g11_xx_xxzz = primBuffer.data(g11off + 90 * idx + 5);

                auto g11_xx_xyyy = primBuffer.data(g11off + 90 * idx + 6);

                auto g11_xx_xyyz = primBuffer.data(g11off + 90 * idx + 7);

                auto g11_xx_xyzz = primBuffer.data(g11off + 90 * idx + 8);

                auto g11_xx_xzzz = primBuffer.data(g11off + 90 * idx + 9);

                auto g11_xx_yyyy = primBuffer.data(g11off + 90 * idx + 10);

                auto g11_xx_yyyz = primBuffer.data(g11off + 90 * idx + 11);

                auto g11_xx_yyzz = primBuffer.data(g11off + 90 * idx + 12);

                auto g11_xx_yzzz = primBuffer.data(g11off + 90 * idx + 13);

                auto g11_xx_zzzz = primBuffer.data(g11off + 90 * idx + 14);

                auto g11_xy_xxxx = primBuffer.data(g11off + 90 * idx + 15);

                auto g11_xy_xxxy = primBuffer.data(g11off + 90 * idx + 16);

                auto g11_xy_xxxz = primBuffer.data(g11off + 90 * idx + 17);

                auto g11_xy_xxyy = primBuffer.data(g11off + 90 * idx + 18);

                auto g11_xy_xxyz = primBuffer.data(g11off + 90 * idx + 19);

                auto g11_xy_xxzz = primBuffer.data(g11off + 90 * idx + 20);

                auto g11_xy_xyyy = primBuffer.data(g11off + 90 * idx + 21);

                auto g11_xy_xyyz = primBuffer.data(g11off + 90 * idx + 22);

                auto g11_xy_xyzz = primBuffer.data(g11off + 90 * idx + 23);

                auto g11_xy_xzzz = primBuffer.data(g11off + 90 * idx + 24);

                auto g11_xy_yyyy = primBuffer.data(g11off + 90 * idx + 25);

                auto g11_xy_yyyz = primBuffer.data(g11off + 90 * idx + 26);

                auto g11_xy_yyzz = primBuffer.data(g11off + 90 * idx + 27);

                auto g11_xy_yzzz = primBuffer.data(g11off + 90 * idx + 28);

                auto g11_xy_zzzz = primBuffer.data(g11off + 90 * idx + 29);

                auto g11_xz_xxxx = primBuffer.data(g11off + 90 * idx + 30);

                auto g11_xz_xxxy = primBuffer.data(g11off + 90 * idx + 31);

                auto g11_xz_xxxz = primBuffer.data(g11off + 90 * idx + 32);

                auto g11_xz_xxyy = primBuffer.data(g11off + 90 * idx + 33);

                auto g11_xz_xxyz = primBuffer.data(g11off + 90 * idx + 34);

                auto g11_xz_xxzz = primBuffer.data(g11off + 90 * idx + 35);

                auto g11_xz_xyyy = primBuffer.data(g11off + 90 * idx + 36);

                auto g11_xz_xyyz = primBuffer.data(g11off + 90 * idx + 37);

                auto g11_xz_xyzz = primBuffer.data(g11off + 90 * idx + 38);

                auto g11_xz_xzzz = primBuffer.data(g11off + 90 * idx + 39);

                auto g11_xz_yyyy = primBuffer.data(g11off + 90 * idx + 40);

                auto g11_xz_yyyz = primBuffer.data(g11off + 90 * idx + 41);

                auto g11_xz_yyzz = primBuffer.data(g11off + 90 * idx + 42);

                auto g11_xz_yzzz = primBuffer.data(g11off + 90 * idx + 43);

                auto g11_xz_zzzz = primBuffer.data(g11off + 90 * idx + 44);

                auto g11_yy_xxxx = primBuffer.data(g11off + 90 * idx + 45);

                auto g11_yy_xxxy = primBuffer.data(g11off + 90 * idx + 46);

                auto g11_yy_xxxz = primBuffer.data(g11off + 90 * idx + 47);

                auto g11_yy_xxyy = primBuffer.data(g11off + 90 * idx + 48);

                auto g11_yy_xxyz = primBuffer.data(g11off + 90 * idx + 49);

                auto g11_yy_xxzz = primBuffer.data(g11off + 90 * idx + 50);

                auto g11_yy_xyyy = primBuffer.data(g11off + 90 * idx + 51);

                auto g11_yy_xyyz = primBuffer.data(g11off + 90 * idx + 52);

                auto g11_yy_xyzz = primBuffer.data(g11off + 90 * idx + 53);

                auto g11_yy_xzzz = primBuffer.data(g11off + 90 * idx + 54);

                auto g11_yy_yyyy = primBuffer.data(g11off + 90 * idx + 55);

                auto g11_yy_yyyz = primBuffer.data(g11off + 90 * idx + 56);

                auto g11_yy_yyzz = primBuffer.data(g11off + 90 * idx + 57);

                auto g11_yy_yzzz = primBuffer.data(g11off + 90 * idx + 58);

                auto g11_yy_zzzz = primBuffer.data(g11off + 90 * idx + 59);

                auto g11_yz_xxxx = primBuffer.data(g11off + 90 * idx + 60);

                auto g11_yz_xxxy = primBuffer.data(g11off + 90 * idx + 61);

                auto g11_yz_xxxz = primBuffer.data(g11off + 90 * idx + 62);

                auto g11_yz_xxyy = primBuffer.data(g11off + 90 * idx + 63);

                auto g11_yz_xxyz = primBuffer.data(g11off + 90 * idx + 64);

                auto g11_yz_xxzz = primBuffer.data(g11off + 90 * idx + 65);

                auto g11_yz_xyyy = primBuffer.data(g11off + 90 * idx + 66);

                auto g11_yz_xyyz = primBuffer.data(g11off + 90 * idx + 67);

                auto g11_yz_xyzz = primBuffer.data(g11off + 90 * idx + 68);

                auto g11_yz_xzzz = primBuffer.data(g11off + 90 * idx + 69);

                auto g11_yz_yyyy = primBuffer.data(g11off + 90 * idx + 70);

                auto g11_yz_yyyz = primBuffer.data(g11off + 90 * idx + 71);

                auto g11_yz_yyzz = primBuffer.data(g11off + 90 * idx + 72);

                auto g11_yz_yzzz = primBuffer.data(g11off + 90 * idx + 73);

                auto g11_yz_zzzz = primBuffer.data(g11off + 90 * idx + 74);

                auto g11_zz_xxxx = primBuffer.data(g11off + 90 * idx + 75);

                auto g11_zz_xxxy = primBuffer.data(g11off + 90 * idx + 76);

                auto g11_zz_xxxz = primBuffer.data(g11off + 90 * idx + 77);

                auto g11_zz_xxyy = primBuffer.data(g11off + 90 * idx + 78);

                auto g11_zz_xxyz = primBuffer.data(g11off + 90 * idx + 79);

                auto g11_zz_xxzz = primBuffer.data(g11off + 90 * idx + 80);

                auto g11_zz_xyyy = primBuffer.data(g11off + 90 * idx + 81);

                auto g11_zz_xyyz = primBuffer.data(g11off + 90 * idx + 82);

                auto g11_zz_xyzz = primBuffer.data(g11off + 90 * idx + 83);

                auto g11_zz_xzzz = primBuffer.data(g11off + 90 * idx + 84);

                auto g11_zz_yyyy = primBuffer.data(g11off + 90 * idx + 85);

                auto g11_zz_yyyz = primBuffer.data(g11off + 90 * idx + 86);

                auto g11_zz_yyzz = primBuffer.data(g11off + 90 * idx + 87);

                auto g11_zz_yzzz = primBuffer.data(g11off + 90 * idx + 88);

                auto g11_zz_zzzz = primBuffer.data(g11off + 90 * idx + 89);

                // set up pointers to (F|g(r,r')|SG)^(m) integrals

                auto g_xxx_xxxx = primBuffer.data(goff + 150 * idx);

                auto g_xxx_xxxy = primBuffer.data(goff + 150 * idx + 1);

                auto g_xxx_xxxz = primBuffer.data(goff + 150 * idx + 2);

                auto g_xxx_xxyy = primBuffer.data(goff + 150 * idx + 3);

                auto g_xxx_xxyz = primBuffer.data(goff + 150 * idx + 4);

                auto g_xxx_xxzz = primBuffer.data(goff + 150 * idx + 5);

                auto g_xxx_xyyy = primBuffer.data(goff + 150 * idx + 6);

                auto g_xxx_xyyz = primBuffer.data(goff + 150 * idx + 7);

                auto g_xxx_xyzz = primBuffer.data(goff + 150 * idx + 8);

                auto g_xxx_xzzz = primBuffer.data(goff + 150 * idx + 9);

                auto g_xxx_yyyy = primBuffer.data(goff + 150 * idx + 10);

                auto g_xxx_yyyz = primBuffer.data(goff + 150 * idx + 11);

                auto g_xxx_yyzz = primBuffer.data(goff + 150 * idx + 12);

                auto g_xxx_yzzz = primBuffer.data(goff + 150 * idx + 13);

                auto g_xxx_zzzz = primBuffer.data(goff + 150 * idx + 14);

                auto g_xxy_xxxx = primBuffer.data(goff + 150 * idx + 15);

                auto g_xxy_xxxy = primBuffer.data(goff + 150 * idx + 16);

                auto g_xxy_xxxz = primBuffer.data(goff + 150 * idx + 17);

                auto g_xxy_xxyy = primBuffer.data(goff + 150 * idx + 18);

                auto g_xxy_xxyz = primBuffer.data(goff + 150 * idx + 19);

                auto g_xxy_xxzz = primBuffer.data(goff + 150 * idx + 20);

                auto g_xxy_xyyy = primBuffer.data(goff + 150 * idx + 21);

                auto g_xxy_xyyz = primBuffer.data(goff + 150 * idx + 22);

                auto g_xxy_xyzz = primBuffer.data(goff + 150 * idx + 23);

                auto g_xxy_xzzz = primBuffer.data(goff + 150 * idx + 24);

                auto g_xxy_yyyy = primBuffer.data(goff + 150 * idx + 25);

                auto g_xxy_yyyz = primBuffer.data(goff + 150 * idx + 26);

                auto g_xxy_yyzz = primBuffer.data(goff + 150 * idx + 27);

                auto g_xxy_yzzz = primBuffer.data(goff + 150 * idx + 28);

                auto g_xxy_zzzz = primBuffer.data(goff + 150 * idx + 29);

                auto g_xxz_xxxx = primBuffer.data(goff + 150 * idx + 30);

                auto g_xxz_xxxy = primBuffer.data(goff + 150 * idx + 31);

                auto g_xxz_xxxz = primBuffer.data(goff + 150 * idx + 32);

                auto g_xxz_xxyy = primBuffer.data(goff + 150 * idx + 33);

                auto g_xxz_xxyz = primBuffer.data(goff + 150 * idx + 34);

                auto g_xxz_xxzz = primBuffer.data(goff + 150 * idx + 35);

                auto g_xxz_xyyy = primBuffer.data(goff + 150 * idx + 36);

                auto g_xxz_xyyz = primBuffer.data(goff + 150 * idx + 37);

                auto g_xxz_xyzz = primBuffer.data(goff + 150 * idx + 38);

                auto g_xxz_xzzz = primBuffer.data(goff + 150 * idx + 39);

                auto g_xxz_yyyy = primBuffer.data(goff + 150 * idx + 40);

                auto g_xxz_yyyz = primBuffer.data(goff + 150 * idx + 41);

                auto g_xxz_yyzz = primBuffer.data(goff + 150 * idx + 42);

                auto g_xxz_yzzz = primBuffer.data(goff + 150 * idx + 43);

                auto g_xxz_zzzz = primBuffer.data(goff + 150 * idx + 44);

                auto g_xyy_xxxx = primBuffer.data(goff + 150 * idx + 45);

                auto g_xyy_xxxy = primBuffer.data(goff + 150 * idx + 46);

                auto g_xyy_xxxz = primBuffer.data(goff + 150 * idx + 47);

                auto g_xyy_xxyy = primBuffer.data(goff + 150 * idx + 48);

                auto g_xyy_xxyz = primBuffer.data(goff + 150 * idx + 49);

                auto g_xyy_xxzz = primBuffer.data(goff + 150 * idx + 50);

                auto g_xyy_xyyy = primBuffer.data(goff + 150 * idx + 51);

                auto g_xyy_xyyz = primBuffer.data(goff + 150 * idx + 52);

                auto g_xyy_xyzz = primBuffer.data(goff + 150 * idx + 53);

                auto g_xyy_xzzz = primBuffer.data(goff + 150 * idx + 54);

                auto g_xyy_yyyy = primBuffer.data(goff + 150 * idx + 55);

                auto g_xyy_yyyz = primBuffer.data(goff + 150 * idx + 56);

                auto g_xyy_yyzz = primBuffer.data(goff + 150 * idx + 57);

                auto g_xyy_yzzz = primBuffer.data(goff + 150 * idx + 58);

                auto g_xyy_zzzz = primBuffer.data(goff + 150 * idx + 59);

                auto g_xyz_xxxx = primBuffer.data(goff + 150 * idx + 60);

                auto g_xyz_xxxy = primBuffer.data(goff + 150 * idx + 61);

                auto g_xyz_xxxz = primBuffer.data(goff + 150 * idx + 62);

                auto g_xyz_xxyy = primBuffer.data(goff + 150 * idx + 63);

                auto g_xyz_xxyz = primBuffer.data(goff + 150 * idx + 64);

                auto g_xyz_xxzz = primBuffer.data(goff + 150 * idx + 65);

                auto g_xyz_xyyy = primBuffer.data(goff + 150 * idx + 66);

                auto g_xyz_xyyz = primBuffer.data(goff + 150 * idx + 67);

                auto g_xyz_xyzz = primBuffer.data(goff + 150 * idx + 68);

                auto g_xyz_xzzz = primBuffer.data(goff + 150 * idx + 69);

                auto g_xyz_yyyy = primBuffer.data(goff + 150 * idx + 70);

                auto g_xyz_yyyz = primBuffer.data(goff + 150 * idx + 71);

                auto g_xyz_yyzz = primBuffer.data(goff + 150 * idx + 72);

                auto g_xyz_yzzz = primBuffer.data(goff + 150 * idx + 73);

                auto g_xyz_zzzz = primBuffer.data(goff + 150 * idx + 74);

                auto g_xzz_xxxx = primBuffer.data(goff + 150 * idx + 75);

                auto g_xzz_xxxy = primBuffer.data(goff + 150 * idx + 76);

                auto g_xzz_xxxz = primBuffer.data(goff + 150 * idx + 77);

                auto g_xzz_xxyy = primBuffer.data(goff + 150 * idx + 78);

                auto g_xzz_xxyz = primBuffer.data(goff + 150 * idx + 79);

                auto g_xzz_xxzz = primBuffer.data(goff + 150 * idx + 80);

                auto g_xzz_xyyy = primBuffer.data(goff + 150 * idx + 81);

                auto g_xzz_xyyz = primBuffer.data(goff + 150 * idx + 82);

                auto g_xzz_xyzz = primBuffer.data(goff + 150 * idx + 83);

                auto g_xzz_xzzz = primBuffer.data(goff + 150 * idx + 84);

                auto g_xzz_yyyy = primBuffer.data(goff + 150 * idx + 85);

                auto g_xzz_yyyz = primBuffer.data(goff + 150 * idx + 86);

                auto g_xzz_yyzz = primBuffer.data(goff + 150 * idx + 87);

                auto g_xzz_yzzz = primBuffer.data(goff + 150 * idx + 88);

                auto g_xzz_zzzz = primBuffer.data(goff + 150 * idx + 89);

                auto g_yyy_xxxx = primBuffer.data(goff + 150 * idx + 90);

                auto g_yyy_xxxy = primBuffer.data(goff + 150 * idx + 91);

                auto g_yyy_xxxz = primBuffer.data(goff + 150 * idx + 92);

                auto g_yyy_xxyy = primBuffer.data(goff + 150 * idx + 93);

                auto g_yyy_xxyz = primBuffer.data(goff + 150 * idx + 94);

                auto g_yyy_xxzz = primBuffer.data(goff + 150 * idx + 95);

                auto g_yyy_xyyy = primBuffer.data(goff + 150 * idx + 96);

                auto g_yyy_xyyz = primBuffer.data(goff + 150 * idx + 97);

                auto g_yyy_xyzz = primBuffer.data(goff + 150 * idx + 98);

                auto g_yyy_xzzz = primBuffer.data(goff + 150 * idx + 99);

                auto g_yyy_yyyy = primBuffer.data(goff + 150 * idx + 100);

                auto g_yyy_yyyz = primBuffer.data(goff + 150 * idx + 101);

                auto g_yyy_yyzz = primBuffer.data(goff + 150 * idx + 102);

                auto g_yyy_yzzz = primBuffer.data(goff + 150 * idx + 103);

                auto g_yyy_zzzz = primBuffer.data(goff + 150 * idx + 104);

                auto g_yyz_xxxx = primBuffer.data(goff + 150 * idx + 105);

                auto g_yyz_xxxy = primBuffer.data(goff + 150 * idx + 106);

                auto g_yyz_xxxz = primBuffer.data(goff + 150 * idx + 107);

                auto g_yyz_xxyy = primBuffer.data(goff + 150 * idx + 108);

                auto g_yyz_xxyz = primBuffer.data(goff + 150 * idx + 109);

                auto g_yyz_xxzz = primBuffer.data(goff + 150 * idx + 110);

                auto g_yyz_xyyy = primBuffer.data(goff + 150 * idx + 111);

                auto g_yyz_xyyz = primBuffer.data(goff + 150 * idx + 112);

                auto g_yyz_xyzz = primBuffer.data(goff + 150 * idx + 113);

                auto g_yyz_xzzz = primBuffer.data(goff + 150 * idx + 114);

                auto g_yyz_yyyy = primBuffer.data(goff + 150 * idx + 115);

                auto g_yyz_yyyz = primBuffer.data(goff + 150 * idx + 116);

                auto g_yyz_yyzz = primBuffer.data(goff + 150 * idx + 117);

                auto g_yyz_yzzz = primBuffer.data(goff + 150 * idx + 118);

                auto g_yyz_zzzz = primBuffer.data(goff + 150 * idx + 119);

                auto g_yzz_xxxx = primBuffer.data(goff + 150 * idx + 120);

                auto g_yzz_xxxy = primBuffer.data(goff + 150 * idx + 121);

                auto g_yzz_xxxz = primBuffer.data(goff + 150 * idx + 122);

                auto g_yzz_xxyy = primBuffer.data(goff + 150 * idx + 123);

                auto g_yzz_xxyz = primBuffer.data(goff + 150 * idx + 124);

                auto g_yzz_xxzz = primBuffer.data(goff + 150 * idx + 125);

                auto g_yzz_xyyy = primBuffer.data(goff + 150 * idx + 126);

                auto g_yzz_xyyz = primBuffer.data(goff + 150 * idx + 127);

                auto g_yzz_xyzz = primBuffer.data(goff + 150 * idx + 128);

                auto g_yzz_xzzz = primBuffer.data(goff + 150 * idx + 129);

                auto g_yzz_yyyy = primBuffer.data(goff + 150 * idx + 130);

                auto g_yzz_yyyz = primBuffer.data(goff + 150 * idx + 131);

                auto g_yzz_yyzz = primBuffer.data(goff + 150 * idx + 132);

                auto g_yzz_yzzz = primBuffer.data(goff + 150 * idx + 133);

                auto g_yzz_zzzz = primBuffer.data(goff + 150 * idx + 134);

                auto g_zzz_xxxx = primBuffer.data(goff + 150 * idx + 135);

                auto g_zzz_xxxy = primBuffer.data(goff + 150 * idx + 136);

                auto g_zzz_xxxz = primBuffer.data(goff + 150 * idx + 137);

                auto g_zzz_xxyy = primBuffer.data(goff + 150 * idx + 138);

                auto g_zzz_xxyz = primBuffer.data(goff + 150 * idx + 139);

                auto g_zzz_xxzz = primBuffer.data(goff + 150 * idx + 140);

                auto g_zzz_xyyy = primBuffer.data(goff + 150 * idx + 141);

                auto g_zzz_xyyz = primBuffer.data(goff + 150 * idx + 142);

                auto g_zzz_xyzz = primBuffer.data(goff + 150 * idx + 143);

                auto g_zzz_xzzz = primBuffer.data(goff + 150 * idx + 144);

                auto g_zzz_yyyy = primBuffer.data(goff + 150 * idx + 145);

                auto g_zzz_yyyz = primBuffer.data(goff + 150 * idx + 146);

                auto g_zzz_yyzz = primBuffer.data(goff + 150 * idx + 147);

                auto g_zzz_yzzz = primBuffer.data(goff + 150 * idx + 148);

                auto g_zzz_zzzz = primBuffer.data(goff + 150 * idx + 149);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xxx,\
                                         gk_xx_xxy, gk_xx_xxz, gk_xx_xyy, gk_xx_xyz,\
                                         gk_xx_xzz, gk_xx_yyy, gk_xx_yyz, gk_xx_yzz,\
                                         gk_xx_zzz, gk_xy_xxx, gk_xy_xxy, gk_xy_xxz,\
                                         gk_xy_xyy, gk_xy_xyz, gk_xy_xzz, gk_xy_yyy,\
                                         gk_xy_yyz, gk_xy_yzz, gk_xy_zzz, gk_xz_xxx,\
                                         gk_xz_xxy, gk_xz_xxz, gk_xz_xyy, gk_xz_xyz,\
                                         gk_xz_xzz, gk_xz_yyy, gk_xz_yyz, gk_xz_yzz,\
                                         gk_xz_zzz, gk_yy_xxx, gk_yy_xxy, gk_yy_xxz,\
                                         gk_yy_xyy, gk_yy_xyz, gk_yy_xzz, gk_yy_yyy,\
                                         gk_yy_yyz, gk_yy_yzz, gk_yy_zzz, gk_yz_xxx,\
                                         gk_yz_xxy, gk_yz_xxz, gk_yz_xyy, gk_yz_xyz,\
                                         gk_yz_xzz, gk_yz_yyy, gk_yz_yyz, gk_yz_yzz,\
                                         gk_yz_zzz, gk_zz_xxx, gk_zz_xxy, gk_zz_xxz,\
                                         gk_zz_xyy, gk_zz_xyz, gk_zz_xzz, gk_zz_yyy,\
                                         gk_zz_yyz, gk_zz_yzz, gk_zz_zzz, g20_x_xxxx,\
                                         g20_x_xxxy, g20_x_xxxz, g20_x_xxyy, g20_x_xxyz,\
                                         g20_x_xxzz, g20_x_xyyy, g20_x_xyyz, g20_x_xyzz,\
                                         g20_x_xzzz, g20_x_yyyy, g20_x_yyyz, g20_x_yyzz,\
                                         g20_x_yzzz, g20_x_zzzz, g20_y_xxxx, g20_y_xxxy,\
                                         g20_y_xxxz, g20_y_xxyy, g20_y_xxyz, g20_y_xxzz,\
                                         g20_y_xyyy, g20_y_xyyz, g20_y_xyzz, g20_y_xzzz,\
                                         g20_y_yyyy, g20_y_yyyz, g20_y_yyzz, g20_y_yzzz,\
                                         g20_y_zzzz, g20_z_xxxx, g20_z_xxxy, g20_z_xxxz,\
                                         g20_z_xxyy, g20_z_xxyz, g20_z_xxzz, g20_z_xyyy,\
                                         g20_z_xyyz, g20_z_xyzz, g20_z_xzzz, g20_z_yyyy,\
                                         g20_z_yyyz, g20_z_yyzz, g20_z_yzzz, g20_z_zzzz,\
                                         g21_x_xxxx, g21_x_xxxy, g21_x_xxxz, g21_x_xxyy,\
                                         g21_x_xxyz, g21_x_xxzz, g21_x_xyyy, g21_x_xyyz,\
                                         g21_x_xyzz, g21_x_xzzz, g21_x_yyyy, g21_x_yyyz,\
                                         g21_x_yyzz, g21_x_yzzz, g21_x_zzzz, g21_y_xxxx,\
                                         g21_y_xxxy, g21_y_xxxz, g21_y_xxyy, g21_y_xxyz,\
                                         g21_y_xxzz, g21_y_xyyy, g21_y_xyyz, g21_y_xyzz,\
                                         g21_y_xzzz, g21_y_yyyy, g21_y_yyyz, g21_y_yyzz,\
                                         g21_y_yzzz, g21_y_zzzz, g21_z_xxxx, g21_z_xxxy,\
                                         g21_z_xxxz, g21_z_xxyy, g21_z_xxyz, g21_z_xxzz,\
                                         g21_z_xyyy, g21_z_xyyz, g21_z_xyzz, g21_z_xzzz,\
                                         g21_z_yyyy, g21_z_yyyz, g21_z_yyzz, g21_z_yzzz,\
                                         g21_z_zzzz, g11_xx_xxxx, g11_xx_xxxy,\
                                         g11_xx_xxxz, g11_xx_xxyy, g11_xx_xxyz,\
                                         g11_xx_xxzz, g11_xx_xyyy, g11_xx_xyyz,\
                                         g11_xx_xyzz, g11_xx_xzzz, g11_xx_yyyy,\
                                         g11_xx_yyyz, g11_xx_yyzz, g11_xx_yzzz,\
                                         g11_xx_zzzz, g11_xy_xxxx, g11_xy_xxxy,\
                                         g11_xy_xxxz, g11_xy_xxyy, g11_xy_xxyz,\
                                         g11_xy_xxzz, g11_xy_xyyy, g11_xy_xyyz,\
                                         g11_xy_xyzz, g11_xy_xzzz, g11_xy_yyyy,\
                                         g11_xy_yyyz, g11_xy_yyzz, g11_xy_yzzz,\
                                         g11_xy_zzzz, g11_xz_xxxx, g11_xz_xxxy,\
                                         g11_xz_xxxz, g11_xz_xxyy, g11_xz_xxyz,\
                                         g11_xz_xxzz, g11_xz_xyyy, g11_xz_xyyz,\
                                         g11_xz_xyzz, g11_xz_xzzz, g11_xz_yyyy,\
                                         g11_xz_yyyz, g11_xz_yyzz, g11_xz_yzzz,\
                                         g11_xz_zzzz, g11_yy_xxxx, g11_yy_xxxy,\
                                         g11_yy_xxxz, g11_yy_xxyy, g11_yy_xxyz,\
                                         g11_yy_xxzz, g11_yy_xyyy, g11_yy_xyyz,\
                                         g11_yy_xyzz, g11_yy_xzzz, g11_yy_yyyy,\
                                         g11_yy_yyyz, g11_yy_yyzz, g11_yy_yzzz,\
                                         g11_yy_zzzz, g11_yz_xxxx, g11_yz_xxxy,\
                                         g11_yz_xxxz, g11_yz_xxyy, g11_yz_xxyz,\
                                         g11_yz_xxzz, g11_yz_xyyy, g11_yz_xyyz,\
                                         g11_yz_xyzz, g11_yz_xzzz, g11_yz_yyyy,\
                                         g11_yz_yyyz, g11_yz_yyzz, g11_yz_yzzz,\
                                         g11_yz_zzzz, g11_zz_xxxx, g11_zz_xxxy,\
                                         g11_zz_xxxz, g11_zz_xxyy, g11_zz_xxyz,\
                                         g11_zz_xxzz, g11_zz_xyyy, g11_zz_xyyz,\
                                         g11_zz_xyzz, g11_zz_xzzz, g11_zz_yyyy,\
                                         g11_zz_yyyz, g11_zz_yyzz, g11_zz_yzzz,\
                                         g11_zz_zzzz, g_xxx_xxxx, g_xxx_xxxy, g_xxx_xxxz,\
                                         g_xxx_xxyy, g_xxx_xxyz, g_xxx_xxzz, g_xxx_xyyy,\
                                         g_xxx_xyyz, g_xxx_xyzz, g_xxx_xzzz, g_xxx_yyyy,\
                                         g_xxx_yyyz, g_xxx_yyzz, g_xxx_yzzz, g_xxx_zzzz,\
                                         g_xxy_xxxx, g_xxy_xxxy, g_xxy_xxxz, g_xxy_xxyy,\
                                         g_xxy_xxyz, g_xxy_xxzz, g_xxy_xyyy, g_xxy_xyyz,\
                                         g_xxy_xyzz, g_xxy_xzzz, g_xxy_yyyy, g_xxy_yyyz,\
                                         g_xxy_yyzz, g_xxy_yzzz, g_xxy_zzzz, g_xxz_xxxx,\
                                         g_xxz_xxxy, g_xxz_xxxz, g_xxz_xxyy, g_xxz_xxyz,\
                                         g_xxz_xxzz, g_xxz_xyyy, g_xxz_xyyz, g_xxz_xyzz,\
                                         g_xxz_xzzz, g_xxz_yyyy, g_xxz_yyyz, g_xxz_yyzz,\
                                         g_xxz_yzzz, g_xxz_zzzz, g_xyy_xxxx, g_xyy_xxxy,\
                                         g_xyy_xxxz, g_xyy_xxyy, g_xyy_xxyz, g_xyy_xxzz,\
                                         g_xyy_xyyy, g_xyy_xyyz, g_xyy_xyzz, g_xyy_xzzz,\
                                         g_xyy_yyyy, g_xyy_yyyz, g_xyy_yyzz, g_xyy_yzzz,\
                                         g_xyy_zzzz, g_xyz_xxxx, g_xyz_xxxy, g_xyz_xxxz,\
                                         g_xyz_xxyy, g_xyz_xxyz, g_xyz_xxzz, g_xyz_xyyy,\
                                         g_xyz_xyyz, g_xyz_xyzz, g_xyz_xzzz, g_xyz_yyyy,\
                                         g_xyz_yyyz, g_xyz_yyzz, g_xyz_yzzz, g_xyz_zzzz,\
                                         g_xzz_xxxx, g_xzz_xxxy, g_xzz_xxxz, g_xzz_xxyy,\
                                         g_xzz_xxyz, g_xzz_xxzz, g_xzz_xyyy, g_xzz_xyyz,\
                                         g_xzz_xyzz, g_xzz_xzzz, g_xzz_yyyy, g_xzz_yyyz,\
                                         g_xzz_yyzz, g_xzz_yzzz, g_xzz_zzzz, g_yyy_xxxx,\
                                         g_yyy_xxxy, g_yyy_xxxz, g_yyy_xxyy, g_yyy_xxyz,\
                                         g_yyy_xxzz, g_yyy_xyyy, g_yyy_xyyz, g_yyy_xyzz,\
                                         g_yyy_xzzz, g_yyy_yyyy, g_yyy_yyyz, g_yyy_yyzz,\
                                         g_yyy_yzzz, g_yyy_zzzz, g_yyz_xxxx, g_yyz_xxxy,\
                                         g_yyz_xxxz, g_yyz_xxyy, g_yyz_xxyz, g_yyz_xxzz,\
                                         g_yyz_xyyy, g_yyz_xyyz, g_yyz_xyzz, g_yyz_xzzz,\
                                         g_yyz_yyyy, g_yyz_yyyz, g_yyz_yyzz, g_yyz_yzzz,\
                                         g_yyz_zzzz, g_yzz_xxxx, g_yzz_xxxy, g_yzz_xxxz,\
                                         g_yzz_xxyy, g_yzz_xxyz, g_yzz_xxzz, g_yzz_xyyy,\
                                         g_yzz_xyyz, g_yzz_xyzz, g_yzz_xzzz, g_yzz_yyyy,\
                                         g_yzz_yyyz, g_yzz_yyzz, g_yzz_yzzz, g_yzz_zzzz,\
                                         g_zzz_xxxx, g_zzz_xxxy, g_zzz_xxxz, g_zzz_xxyy,\
                                         g_zzz_xxyz, g_zzz_xxzz, g_zzz_xyyy, g_zzz_xyyz,\
                                         g_zzz_xyzz, g_zzz_xzzz, g_zzz_yyyy, g_zzz_yyyz,\
                                         g_zzz_yyzz, g_zzz_yzzz, g_zzz_zzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxxx[k] = fr * g11_xx_xxxx[k] + f2g * (2.0 * g20_x_xxxx[k] - 2.0 * fgz * g21_x_xxxx[k]) + 4.0 * f2t * gk_xx_xxx[k];

                    g_xxx_xxxy[k] = fr * g11_xx_xxxy[k] + f2g * (2.0 * g20_x_xxxy[k] - 2.0 * fgz * g21_x_xxxy[k]) + 3.0 * f2t * gk_xx_xxy[k];

                    g_xxx_xxxz[k] = fr * g11_xx_xxxz[k] + f2g * (2.0 * g20_x_xxxz[k] - 2.0 * fgz * g21_x_xxxz[k]) + 3.0 * f2t * gk_xx_xxz[k];

                    g_xxx_xxyy[k] = fr * g11_xx_xxyy[k] + f2g * (2.0 * g20_x_xxyy[k] - 2.0 * fgz * g21_x_xxyy[k]) + 2.0 * f2t * gk_xx_xyy[k];

                    g_xxx_xxyz[k] = fr * g11_xx_xxyz[k] + f2g * (2.0 * g20_x_xxyz[k] - 2.0 * fgz * g21_x_xxyz[k]) + 2.0 * f2t * gk_xx_xyz[k];

                    g_xxx_xxzz[k] = fr * g11_xx_xxzz[k] + f2g * (2.0 * g20_x_xxzz[k] - 2.0 * fgz * g21_x_xxzz[k]) + 2.0 * f2t * gk_xx_xzz[k];

                    g_xxx_xyyy[k] = fr * g11_xx_xyyy[k] + f2g * (2.0 * g20_x_xyyy[k] - 2.0 * fgz * g21_x_xyyy[k]) + f2t * gk_xx_yyy[k];

                    g_xxx_xyyz[k] = fr * g11_xx_xyyz[k] + f2g * (2.0 * g20_x_xyyz[k] - 2.0 * fgz * g21_x_xyyz[k]) + f2t * gk_xx_yyz[k];

                    g_xxx_xyzz[k] = fr * g11_xx_xyzz[k] + f2g * (2.0 * g20_x_xyzz[k] - 2.0 * fgz * g21_x_xyzz[k]) + f2t * gk_xx_yzz[k];

                    g_xxx_xzzz[k] = fr * g11_xx_xzzz[k] + f2g * (2.0 * g20_x_xzzz[k] - 2.0 * fgz * g21_x_xzzz[k]) + f2t * gk_xx_zzz[k];

                    g_xxx_yyyy[k] = fr * g11_xx_yyyy[k] + f2g * (2.0 * g20_x_yyyy[k] - 2.0 * fgz * g21_x_yyyy[k]);

                    g_xxx_yyyz[k] = fr * g11_xx_yyyz[k] + f2g * (2.0 * g20_x_yyyz[k] - 2.0 * fgz * g21_x_yyyz[k]);

                    g_xxx_yyzz[k] = fr * g11_xx_yyzz[k] + f2g * (2.0 * g20_x_yyzz[k] - 2.0 * fgz * g21_x_yyzz[k]);

                    g_xxx_yzzz[k] = fr * g11_xx_yzzz[k] + f2g * (2.0 * g20_x_yzzz[k] - 2.0 * fgz * g21_x_yzzz[k]);

                    g_xxx_zzzz[k] = fr * g11_xx_zzzz[k] + f2g * (2.0 * g20_x_zzzz[k] - 2.0 * fgz * g21_x_zzzz[k]);

                    g_xxy_xxxx[k] = fr * g11_xy_xxxx[k] + f2g * (g20_y_xxxx[k] - fgz * g21_y_xxxx[k]) + 4.0 * f2t * gk_xy_xxx[k];

                    g_xxy_xxxy[k] = fr * g11_xy_xxxy[k] + f2g * (g20_y_xxxy[k] - fgz * g21_y_xxxy[k]) + 3.0 * f2t * gk_xy_xxy[k];

                    g_xxy_xxxz[k] = fr * g11_xy_xxxz[k] + f2g * (g20_y_xxxz[k] - fgz * g21_y_xxxz[k]) + 3.0 * f2t * gk_xy_xxz[k];

                    g_xxy_xxyy[k] = fr * g11_xy_xxyy[k] + f2g * (g20_y_xxyy[k] - fgz * g21_y_xxyy[k]) + 2.0 * f2t * gk_xy_xyy[k];

                    g_xxy_xxyz[k] = fr * g11_xy_xxyz[k] + f2g * (g20_y_xxyz[k] - fgz * g21_y_xxyz[k]) + 2.0 * f2t * gk_xy_xyz[k];

                    g_xxy_xxzz[k] = fr * g11_xy_xxzz[k] + f2g * (g20_y_xxzz[k] - fgz * g21_y_xxzz[k]) + 2.0 * f2t * gk_xy_xzz[k];

                    g_xxy_xyyy[k] = fr * g11_xy_xyyy[k] + f2g * (g20_y_xyyy[k] - fgz * g21_y_xyyy[k]) + f2t * gk_xy_yyy[k];

                    g_xxy_xyyz[k] = fr * g11_xy_xyyz[k] + f2g * (g20_y_xyyz[k] - fgz * g21_y_xyyz[k]) + f2t * gk_xy_yyz[k];

                    g_xxy_xyzz[k] = fr * g11_xy_xyzz[k] + f2g * (g20_y_xyzz[k] - fgz * g21_y_xyzz[k]) + f2t * gk_xy_yzz[k];

                    g_xxy_xzzz[k] = fr * g11_xy_xzzz[k] + f2g * (g20_y_xzzz[k] - fgz * g21_y_xzzz[k]) + f2t * gk_xy_zzz[k];

                    g_xxy_yyyy[k] = fr * g11_xy_yyyy[k] + f2g * (g20_y_yyyy[k] - fgz * g21_y_yyyy[k]);

                    g_xxy_yyyz[k] = fr * g11_xy_yyyz[k] + f2g * (g20_y_yyyz[k] - fgz * g21_y_yyyz[k]);

                    g_xxy_yyzz[k] = fr * g11_xy_yyzz[k] + f2g * (g20_y_yyzz[k] - fgz * g21_y_yyzz[k]);

                    g_xxy_yzzz[k] = fr * g11_xy_yzzz[k] + f2g * (g20_y_yzzz[k] - fgz * g21_y_yzzz[k]);

                    g_xxy_zzzz[k] = fr * g11_xy_zzzz[k] + f2g * (g20_y_zzzz[k] - fgz * g21_y_zzzz[k]);

                    g_xxz_xxxx[k] = fr * g11_xz_xxxx[k] + f2g * (g20_z_xxxx[k] - fgz * g21_z_xxxx[k]) + 4.0 * f2t * gk_xz_xxx[k];

                    g_xxz_xxxy[k] = fr * g11_xz_xxxy[k] + f2g * (g20_z_xxxy[k] - fgz * g21_z_xxxy[k]) + 3.0 * f2t * gk_xz_xxy[k];

                    g_xxz_xxxz[k] = fr * g11_xz_xxxz[k] + f2g * (g20_z_xxxz[k] - fgz * g21_z_xxxz[k]) + 3.0 * f2t * gk_xz_xxz[k];

                    g_xxz_xxyy[k] = fr * g11_xz_xxyy[k] + f2g * (g20_z_xxyy[k] - fgz * g21_z_xxyy[k]) + 2.0 * f2t * gk_xz_xyy[k];

                    g_xxz_xxyz[k] = fr * g11_xz_xxyz[k] + f2g * (g20_z_xxyz[k] - fgz * g21_z_xxyz[k]) + 2.0 * f2t * gk_xz_xyz[k];

                    g_xxz_xxzz[k] = fr * g11_xz_xxzz[k] + f2g * (g20_z_xxzz[k] - fgz * g21_z_xxzz[k]) + 2.0 * f2t * gk_xz_xzz[k];

                    g_xxz_xyyy[k] = fr * g11_xz_xyyy[k] + f2g * (g20_z_xyyy[k] - fgz * g21_z_xyyy[k]) + f2t * gk_xz_yyy[k];

                    g_xxz_xyyz[k] = fr * g11_xz_xyyz[k] + f2g * (g20_z_xyyz[k] - fgz * g21_z_xyyz[k]) + f2t * gk_xz_yyz[k];

                    g_xxz_xyzz[k] = fr * g11_xz_xyzz[k] + f2g * (g20_z_xyzz[k] - fgz * g21_z_xyzz[k]) + f2t * gk_xz_yzz[k];

                    g_xxz_xzzz[k] = fr * g11_xz_xzzz[k] + f2g * (g20_z_xzzz[k] - fgz * g21_z_xzzz[k]) + f2t * gk_xz_zzz[k];

                    g_xxz_yyyy[k] = fr * g11_xz_yyyy[k] + f2g * (g20_z_yyyy[k] - fgz * g21_z_yyyy[k]);

                    g_xxz_yyyz[k] = fr * g11_xz_yyyz[k] + f2g * (g20_z_yyyz[k] - fgz * g21_z_yyyz[k]);

                    g_xxz_yyzz[k] = fr * g11_xz_yyzz[k] + f2g * (g20_z_yyzz[k] - fgz * g21_z_yyzz[k]);

                    g_xxz_yzzz[k] = fr * g11_xz_yzzz[k] + f2g * (g20_z_yzzz[k] - fgz * g21_z_yzzz[k]);

                    g_xxz_zzzz[k] = fr * g11_xz_zzzz[k] + f2g * (g20_z_zzzz[k] - fgz * g21_z_zzzz[k]);

                    g_xyy_xxxx[k] = fr * g11_yy_xxxx[k] + 4.0 * f2t * gk_yy_xxx[k];

                    g_xyy_xxxy[k] = fr * g11_yy_xxxy[k] + 3.0 * f2t * gk_yy_xxy[k];

                    g_xyy_xxxz[k] = fr * g11_yy_xxxz[k] + 3.0 * f2t * gk_yy_xxz[k];

                    g_xyy_xxyy[k] = fr * g11_yy_xxyy[k] + 2.0 * f2t * gk_yy_xyy[k];

                    g_xyy_xxyz[k] = fr * g11_yy_xxyz[k] + 2.0 * f2t * gk_yy_xyz[k];

                    g_xyy_xxzz[k] = fr * g11_yy_xxzz[k] + 2.0 * f2t * gk_yy_xzz[k];

                    g_xyy_xyyy[k] = fr * g11_yy_xyyy[k] + f2t * gk_yy_yyy[k];

                    g_xyy_xyyz[k] = fr * g11_yy_xyyz[k] + f2t * gk_yy_yyz[k];

                    g_xyy_xyzz[k] = fr * g11_yy_xyzz[k] + f2t * gk_yy_yzz[k];

                    g_xyy_xzzz[k] = fr * g11_yy_xzzz[k] + f2t * gk_yy_zzz[k];

                    g_xyy_yyyy[k] = fr * g11_yy_yyyy[k];

                    g_xyy_yyyz[k] = fr * g11_yy_yyyz[k];

                    g_xyy_yyzz[k] = fr * g11_yy_yyzz[k];

                    g_xyy_yzzz[k] = fr * g11_yy_yzzz[k];

                    g_xyy_zzzz[k] = fr * g11_yy_zzzz[k];

                    g_xyz_xxxx[k] = fr * g11_yz_xxxx[k] + 4.0 * f2t * gk_yz_xxx[k];

                    g_xyz_xxxy[k] = fr * g11_yz_xxxy[k] + 3.0 * f2t * gk_yz_xxy[k];

                    g_xyz_xxxz[k] = fr * g11_yz_xxxz[k] + 3.0 * f2t * gk_yz_xxz[k];

                    g_xyz_xxyy[k] = fr * g11_yz_xxyy[k] + 2.0 * f2t * gk_yz_xyy[k];

                    g_xyz_xxyz[k] = fr * g11_yz_xxyz[k] + 2.0 * f2t * gk_yz_xyz[k];

                    g_xyz_xxzz[k] = fr * g11_yz_xxzz[k] + 2.0 * f2t * gk_yz_xzz[k];

                    g_xyz_xyyy[k] = fr * g11_yz_xyyy[k] + f2t * gk_yz_yyy[k];

                    g_xyz_xyyz[k] = fr * g11_yz_xyyz[k] + f2t * gk_yz_yyz[k];

                    g_xyz_xyzz[k] = fr * g11_yz_xyzz[k] + f2t * gk_yz_yzz[k];

                    g_xyz_xzzz[k] = fr * g11_yz_xzzz[k] + f2t * gk_yz_zzz[k];

                    g_xyz_yyyy[k] = fr * g11_yz_yyyy[k];

                    g_xyz_yyyz[k] = fr * g11_yz_yyyz[k];

                    g_xyz_yyzz[k] = fr * g11_yz_yyzz[k];

                    g_xyz_yzzz[k] = fr * g11_yz_yzzz[k];

                    g_xyz_zzzz[k] = fr * g11_yz_zzzz[k];

                    g_xzz_xxxx[k] = fr * g11_zz_xxxx[k] + 4.0 * f2t * gk_zz_xxx[k];

                    g_xzz_xxxy[k] = fr * g11_zz_xxxy[k] + 3.0 * f2t * gk_zz_xxy[k];

                    g_xzz_xxxz[k] = fr * g11_zz_xxxz[k] + 3.0 * f2t * gk_zz_xxz[k];

                    g_xzz_xxyy[k] = fr * g11_zz_xxyy[k] + 2.0 * f2t * gk_zz_xyy[k];

                    g_xzz_xxyz[k] = fr * g11_zz_xxyz[k] + 2.0 * f2t * gk_zz_xyz[k];

                    g_xzz_xxzz[k] = fr * g11_zz_xxzz[k] + 2.0 * f2t * gk_zz_xzz[k];

                    g_xzz_xyyy[k] = fr * g11_zz_xyyy[k] + f2t * gk_zz_yyy[k];

                    g_xzz_xyyz[k] = fr * g11_zz_xyyz[k] + f2t * gk_zz_yyz[k];

                    g_xzz_xyzz[k] = fr * g11_zz_xyzz[k] + f2t * gk_zz_yzz[k];

                    g_xzz_xzzz[k] = fr * g11_zz_xzzz[k] + f2t * gk_zz_zzz[k];

                    g_xzz_yyyy[k] = fr * g11_zz_yyyy[k];

                    g_xzz_yyyz[k] = fr * g11_zz_yyyz[k];

                    g_xzz_yyzz[k] = fr * g11_zz_yyzz[k];

                    g_xzz_yzzz[k] = fr * g11_zz_yzzz[k];

                    g_xzz_zzzz[k] = fr * g11_zz_zzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxxx[k] = fr * g11_yy_xxxx[k] + f2g * (2.0 * g20_y_xxxx[k] - 2.0 * fgz * g21_y_xxxx[k]);

                    g_yyy_xxxy[k] = fr * g11_yy_xxxy[k] + f2g * (2.0 * g20_y_xxxy[k] - 2.0 * fgz * g21_y_xxxy[k]) + f2t * gk_yy_xxx[k];

                    g_yyy_xxxz[k] = fr * g11_yy_xxxz[k] + f2g * (2.0 * g20_y_xxxz[k] - 2.0 * fgz * g21_y_xxxz[k]);

                    g_yyy_xxyy[k] = fr * g11_yy_xxyy[k] + f2g * (2.0 * g20_y_xxyy[k] - 2.0 * fgz * g21_y_xxyy[k]) + 2.0 * f2t * gk_yy_xxy[k];

                    g_yyy_xxyz[k] = fr * g11_yy_xxyz[k] + f2g * (2.0 * g20_y_xxyz[k] - 2.0 * fgz * g21_y_xxyz[k]) + f2t * gk_yy_xxz[k];

                    g_yyy_xxzz[k] = fr * g11_yy_xxzz[k] + f2g * (2.0 * g20_y_xxzz[k] - 2.0 * fgz * g21_y_xxzz[k]);

                    g_yyy_xyyy[k] = fr * g11_yy_xyyy[k] + f2g * (2.0 * g20_y_xyyy[k] - 2.0 * fgz * g21_y_xyyy[k]) + 3.0 * f2t * gk_yy_xyy[k];

                    g_yyy_xyyz[k] = fr * g11_yy_xyyz[k] + f2g * (2.0 * g20_y_xyyz[k] - 2.0 * fgz * g21_y_xyyz[k]) + 2.0 * f2t * gk_yy_xyz[k];

                    g_yyy_xyzz[k] = fr * g11_yy_xyzz[k] + f2g * (2.0 * g20_y_xyzz[k] - 2.0 * fgz * g21_y_xyzz[k]) + f2t * gk_yy_xzz[k];

                    g_yyy_xzzz[k] = fr * g11_yy_xzzz[k] + f2g * (2.0 * g20_y_xzzz[k] - 2.0 * fgz * g21_y_xzzz[k]);

                    g_yyy_yyyy[k] = fr * g11_yy_yyyy[k] + f2g * (2.0 * g20_y_yyyy[k] - 2.0 * fgz * g21_y_yyyy[k]) + 4.0 * f2t * gk_yy_yyy[k];

                    g_yyy_yyyz[k] = fr * g11_yy_yyyz[k] + f2g * (2.0 * g20_y_yyyz[k] - 2.0 * fgz * g21_y_yyyz[k]) + 3.0 * f2t * gk_yy_yyz[k];

                    g_yyy_yyzz[k] = fr * g11_yy_yyzz[k] + f2g * (2.0 * g20_y_yyzz[k] - 2.0 * fgz * g21_y_yyzz[k]) + 2.0 * f2t * gk_yy_yzz[k];

                    g_yyy_yzzz[k] = fr * g11_yy_yzzz[k] + f2g * (2.0 * g20_y_yzzz[k] - 2.0 * fgz * g21_y_yzzz[k]) + f2t * gk_yy_zzz[k];

                    g_yyy_zzzz[k] = fr * g11_yy_zzzz[k] + f2g * (2.0 * g20_y_zzzz[k] - 2.0 * fgz * g21_y_zzzz[k]);

                    g_yyz_xxxx[k] = fr * g11_yz_xxxx[k] + f2g * (g20_z_xxxx[k] - fgz * g21_z_xxxx[k]);

                    g_yyz_xxxy[k] = fr * g11_yz_xxxy[k] + f2g * (g20_z_xxxy[k] - fgz * g21_z_xxxy[k]) + f2t * gk_yz_xxx[k];

                    g_yyz_xxxz[k] = fr * g11_yz_xxxz[k] + f2g * (g20_z_xxxz[k] - fgz * g21_z_xxxz[k]);

                    g_yyz_xxyy[k] = fr * g11_yz_xxyy[k] + f2g * (g20_z_xxyy[k] - fgz * g21_z_xxyy[k]) + 2.0 * f2t * gk_yz_xxy[k];

                    g_yyz_xxyz[k] = fr * g11_yz_xxyz[k] + f2g * (g20_z_xxyz[k] - fgz * g21_z_xxyz[k]) + f2t * gk_yz_xxz[k];

                    g_yyz_xxzz[k] = fr * g11_yz_xxzz[k] + f2g * (g20_z_xxzz[k] - fgz * g21_z_xxzz[k]);

                    g_yyz_xyyy[k] = fr * g11_yz_xyyy[k] + f2g * (g20_z_xyyy[k] - fgz * g21_z_xyyy[k]) + 3.0 * f2t * gk_yz_xyy[k];

                    g_yyz_xyyz[k] = fr * g11_yz_xyyz[k] + f2g * (g20_z_xyyz[k] - fgz * g21_z_xyyz[k]) + 2.0 * f2t * gk_yz_xyz[k];

                    g_yyz_xyzz[k] = fr * g11_yz_xyzz[k] + f2g * (g20_z_xyzz[k] - fgz * g21_z_xyzz[k]) + f2t * gk_yz_xzz[k];

                    g_yyz_xzzz[k] = fr * g11_yz_xzzz[k] + f2g * (g20_z_xzzz[k] - fgz * g21_z_xzzz[k]);

                    g_yyz_yyyy[k] = fr * g11_yz_yyyy[k] + f2g * (g20_z_yyyy[k] - fgz * g21_z_yyyy[k]) + 4.0 * f2t * gk_yz_yyy[k];

                    g_yyz_yyyz[k] = fr * g11_yz_yyyz[k] + f2g * (g20_z_yyyz[k] - fgz * g21_z_yyyz[k]) + 3.0 * f2t * gk_yz_yyz[k];

                    g_yyz_yyzz[k] = fr * g11_yz_yyzz[k] + f2g * (g20_z_yyzz[k] - fgz * g21_z_yyzz[k]) + 2.0 * f2t * gk_yz_yzz[k];

                    g_yyz_yzzz[k] = fr * g11_yz_yzzz[k] + f2g * (g20_z_yzzz[k] - fgz * g21_z_yzzz[k]) + f2t * gk_yz_zzz[k];

                    g_yyz_zzzz[k] = fr * g11_yz_zzzz[k] + f2g * (g20_z_zzzz[k] - fgz * g21_z_zzzz[k]);

                    g_yzz_xxxx[k] = fr * g11_zz_xxxx[k];

                    g_yzz_xxxy[k] = fr * g11_zz_xxxy[k] + f2t * gk_zz_xxx[k];

                    g_yzz_xxxz[k] = fr * g11_zz_xxxz[k];

                    g_yzz_xxyy[k] = fr * g11_zz_xxyy[k] + 2.0 * f2t * gk_zz_xxy[k];

                    g_yzz_xxyz[k] = fr * g11_zz_xxyz[k] + f2t * gk_zz_xxz[k];

                    g_yzz_xxzz[k] = fr * g11_zz_xxzz[k];

                    g_yzz_xyyy[k] = fr * g11_zz_xyyy[k] + 3.0 * f2t * gk_zz_xyy[k];

                    g_yzz_xyyz[k] = fr * g11_zz_xyyz[k] + 2.0 * f2t * gk_zz_xyz[k];

                    g_yzz_xyzz[k] = fr * g11_zz_xyzz[k] + f2t * gk_zz_xzz[k];

                    g_yzz_xzzz[k] = fr * g11_zz_xzzz[k];

                    g_yzz_yyyy[k] = fr * g11_zz_yyyy[k] + 4.0 * f2t * gk_zz_yyy[k];

                    g_yzz_yyyz[k] = fr * g11_zz_yyyz[k] + 3.0 * f2t * gk_zz_yyz[k];

                    g_yzz_yyzz[k] = fr * g11_zz_yyzz[k] + 2.0 * f2t * gk_zz_yzz[k];

                    g_yzz_yzzz[k] = fr * g11_zz_yzzz[k] + f2t * gk_zz_zzz[k];

                    g_yzz_zzzz[k] = fr * g11_zz_zzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxxx[k] = fr * g11_zz_xxxx[k] + f2g * (2.0 * g20_z_xxxx[k] - 2.0 * fgz * g21_z_xxxx[k]);

                    g_zzz_xxxy[k] = fr * g11_zz_xxxy[k] + f2g * (2.0 * g20_z_xxxy[k] - 2.0 * fgz * g21_z_xxxy[k]);

                    g_zzz_xxxz[k] = fr * g11_zz_xxxz[k] + f2g * (2.0 * g20_z_xxxz[k] - 2.0 * fgz * g21_z_xxxz[k]) + f2t * gk_zz_xxx[k];

                    g_zzz_xxyy[k] = fr * g11_zz_xxyy[k] + f2g * (2.0 * g20_z_xxyy[k] - 2.0 * fgz * g21_z_xxyy[k]);

                    g_zzz_xxyz[k] = fr * g11_zz_xxyz[k] + f2g * (2.0 * g20_z_xxyz[k] - 2.0 * fgz * g21_z_xxyz[k]) + f2t * gk_zz_xxy[k];

                    g_zzz_xxzz[k] = fr * g11_zz_xxzz[k] + f2g * (2.0 * g20_z_xxzz[k] - 2.0 * fgz * g21_z_xxzz[k]) + 2.0 * f2t * gk_zz_xxz[k];

                    g_zzz_xyyy[k] = fr * g11_zz_xyyy[k] + f2g * (2.0 * g20_z_xyyy[k] - 2.0 * fgz * g21_z_xyyy[k]);

                    g_zzz_xyyz[k] = fr * g11_zz_xyyz[k] + f2g * (2.0 * g20_z_xyyz[k] - 2.0 * fgz * g21_z_xyyz[k]) + f2t * gk_zz_xyy[k];

                    g_zzz_xyzz[k] = fr * g11_zz_xyzz[k] + f2g * (2.0 * g20_z_xyzz[k] - 2.0 * fgz * g21_z_xyzz[k]) + 2.0 * f2t * gk_zz_xyz[k];

                    g_zzz_xzzz[k] = fr * g11_zz_xzzz[k] + f2g * (2.0 * g20_z_xzzz[k] - 2.0 * fgz * g21_z_xzzz[k]) + 3.0 * f2t * gk_zz_xzz[k];

                    g_zzz_yyyy[k] = fr * g11_zz_yyyy[k] + f2g * (2.0 * g20_z_yyyy[k] - 2.0 * fgz * g21_z_yyyy[k]);

                    g_zzz_yyyz[k] = fr * g11_zz_yyyz[k] + f2g * (2.0 * g20_z_yyyz[k] - 2.0 * fgz * g21_z_yyyz[k]) + f2t * gk_zz_yyy[k];

                    g_zzz_yyzz[k] = fr * g11_zz_yyzz[k] + f2g * (2.0 * g20_z_yyzz[k] - 2.0 * fgz * g21_z_yyzz[k]) + 2.0 * f2t * gk_zz_yyz[k];

                    g_zzz_yzzz[k] = fr * g11_zz_yzzz[k] + f2g * (2.0 * g20_z_yzzz[k] - 2.0 * fgz * g21_z_yzzz[k]) + 3.0 * f2t * gk_zz_yzz[k];

                    g_zzz_zzzz[k] = fr * g11_zz_zzzz[k] + f2g * (2.0 * g20_z_zzzz[k] - 2.0 * fgz * g21_z_zzzz[k]) + 4.0 * f2t * gk_zz_zzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSF(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 3);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 3, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 3, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 3, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 3, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 2, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SD)^(m+1) integrals

                auto gk_xxx_xx = primBuffer.data(gkoff + 60 * idx);

                auto gk_xxx_xy = primBuffer.data(gkoff + 60 * idx + 1);

                auto gk_xxx_xz = primBuffer.data(gkoff + 60 * idx + 2);

                auto gk_xxx_yy = primBuffer.data(gkoff + 60 * idx + 3);

                auto gk_xxx_yz = primBuffer.data(gkoff + 60 * idx + 4);

                auto gk_xxx_zz = primBuffer.data(gkoff + 60 * idx + 5);

                auto gk_xxy_xx = primBuffer.data(gkoff + 60 * idx + 6);

                auto gk_xxy_xy = primBuffer.data(gkoff + 60 * idx + 7);

                auto gk_xxy_xz = primBuffer.data(gkoff + 60 * idx + 8);

                auto gk_xxy_yy = primBuffer.data(gkoff + 60 * idx + 9);

                auto gk_xxy_yz = primBuffer.data(gkoff + 60 * idx + 10);

                auto gk_xxy_zz = primBuffer.data(gkoff + 60 * idx + 11);

                auto gk_xxz_xx = primBuffer.data(gkoff + 60 * idx + 12);

                auto gk_xxz_xy = primBuffer.data(gkoff + 60 * idx + 13);

                auto gk_xxz_xz = primBuffer.data(gkoff + 60 * idx + 14);

                auto gk_xxz_yy = primBuffer.data(gkoff + 60 * idx + 15);

                auto gk_xxz_yz = primBuffer.data(gkoff + 60 * idx + 16);

                auto gk_xxz_zz = primBuffer.data(gkoff + 60 * idx + 17);

                auto gk_xyy_xx = primBuffer.data(gkoff + 60 * idx + 18);

                auto gk_xyy_xy = primBuffer.data(gkoff + 60 * idx + 19);

                auto gk_xyy_xz = primBuffer.data(gkoff + 60 * idx + 20);

                auto gk_xyy_yy = primBuffer.data(gkoff + 60 * idx + 21);

                auto gk_xyy_yz = primBuffer.data(gkoff + 60 * idx + 22);

                auto gk_xyy_zz = primBuffer.data(gkoff + 60 * idx + 23);

                auto gk_xyz_xx = primBuffer.data(gkoff + 60 * idx + 24);

                auto gk_xyz_xy = primBuffer.data(gkoff + 60 * idx + 25);

                auto gk_xyz_xz = primBuffer.data(gkoff + 60 * idx + 26);

                auto gk_xyz_yy = primBuffer.data(gkoff + 60 * idx + 27);

                auto gk_xyz_yz = primBuffer.data(gkoff + 60 * idx + 28);

                auto gk_xyz_zz = primBuffer.data(gkoff + 60 * idx + 29);

                auto gk_xzz_xx = primBuffer.data(gkoff + 60 * idx + 30);

                auto gk_xzz_xy = primBuffer.data(gkoff + 60 * idx + 31);

                auto gk_xzz_xz = primBuffer.data(gkoff + 60 * idx + 32);

                auto gk_xzz_yy = primBuffer.data(gkoff + 60 * idx + 33);

                auto gk_xzz_yz = primBuffer.data(gkoff + 60 * idx + 34);

                auto gk_xzz_zz = primBuffer.data(gkoff + 60 * idx + 35);

                auto gk_yyy_xx = primBuffer.data(gkoff + 60 * idx + 36);

                auto gk_yyy_xy = primBuffer.data(gkoff + 60 * idx + 37);

                auto gk_yyy_xz = primBuffer.data(gkoff + 60 * idx + 38);

                auto gk_yyy_yy = primBuffer.data(gkoff + 60 * idx + 39);

                auto gk_yyy_yz = primBuffer.data(gkoff + 60 * idx + 40);

                auto gk_yyy_zz = primBuffer.data(gkoff + 60 * idx + 41);

                auto gk_yyz_xx = primBuffer.data(gkoff + 60 * idx + 42);

                auto gk_yyz_xy = primBuffer.data(gkoff + 60 * idx + 43);

                auto gk_yyz_xz = primBuffer.data(gkoff + 60 * idx + 44);

                auto gk_yyz_yy = primBuffer.data(gkoff + 60 * idx + 45);

                auto gk_yyz_yz = primBuffer.data(gkoff + 60 * idx + 46);

                auto gk_yyz_zz = primBuffer.data(gkoff + 60 * idx + 47);

                auto gk_yzz_xx = primBuffer.data(gkoff + 60 * idx + 48);

                auto gk_yzz_xy = primBuffer.data(gkoff + 60 * idx + 49);

                auto gk_yzz_xz = primBuffer.data(gkoff + 60 * idx + 50);

                auto gk_yzz_yy = primBuffer.data(gkoff + 60 * idx + 51);

                auto gk_yzz_yz = primBuffer.data(gkoff + 60 * idx + 52);

                auto gk_yzz_zz = primBuffer.data(gkoff + 60 * idx + 53);

                auto gk_zzz_xx = primBuffer.data(gkoff + 60 * idx + 54);

                auto gk_zzz_xy = primBuffer.data(gkoff + 60 * idx + 55);

                auto gk_zzz_xz = primBuffer.data(gkoff + 60 * idx + 56);

                auto gk_zzz_yy = primBuffer.data(gkoff + 60 * idx + 57);

                auto gk_zzz_yz = primBuffer.data(gkoff + 60 * idx + 58);

                auto gk_zzz_zz = primBuffer.data(gkoff + 60 * idx + 59);

                // set up pointers to (D|g(r,r')|SF)^(m) integrals

                auto g20_xx_xxx = primBuffer.data(g20off + 60 * idx);

                auto g20_xx_xxy = primBuffer.data(g20off + 60 * idx + 1);

                auto g20_xx_xxz = primBuffer.data(g20off + 60 * idx + 2);

                auto g20_xx_xyy = primBuffer.data(g20off + 60 * idx + 3);

                auto g20_xx_xyz = primBuffer.data(g20off + 60 * idx + 4);

                auto g20_xx_xzz = primBuffer.data(g20off + 60 * idx + 5);

                auto g20_xx_yyy = primBuffer.data(g20off + 60 * idx + 6);

                auto g20_xx_yyz = primBuffer.data(g20off + 60 * idx + 7);

                auto g20_xx_yzz = primBuffer.data(g20off + 60 * idx + 8);

                auto g20_xx_zzz = primBuffer.data(g20off + 60 * idx + 9);

                auto g20_xy_xxx = primBuffer.data(g20off + 60 * idx + 10);

                auto g20_xy_xxy = primBuffer.data(g20off + 60 * idx + 11);

                auto g20_xy_xxz = primBuffer.data(g20off + 60 * idx + 12);

                auto g20_xy_xyy = primBuffer.data(g20off + 60 * idx + 13);

                auto g20_xy_xyz = primBuffer.data(g20off + 60 * idx + 14);

                auto g20_xy_xzz = primBuffer.data(g20off + 60 * idx + 15);

                auto g20_xy_yyy = primBuffer.data(g20off + 60 * idx + 16);

                auto g20_xy_yyz = primBuffer.data(g20off + 60 * idx + 17);

                auto g20_xy_yzz = primBuffer.data(g20off + 60 * idx + 18);

                auto g20_xy_zzz = primBuffer.data(g20off + 60 * idx + 19);

                auto g20_xz_xxx = primBuffer.data(g20off + 60 * idx + 20);

                auto g20_xz_xxy = primBuffer.data(g20off + 60 * idx + 21);

                auto g20_xz_xxz = primBuffer.data(g20off + 60 * idx + 22);

                auto g20_xz_xyy = primBuffer.data(g20off + 60 * idx + 23);

                auto g20_xz_xyz = primBuffer.data(g20off + 60 * idx + 24);

                auto g20_xz_xzz = primBuffer.data(g20off + 60 * idx + 25);

                auto g20_xz_yyy = primBuffer.data(g20off + 60 * idx + 26);

                auto g20_xz_yyz = primBuffer.data(g20off + 60 * idx + 27);

                auto g20_xz_yzz = primBuffer.data(g20off + 60 * idx + 28);

                auto g20_xz_zzz = primBuffer.data(g20off + 60 * idx + 29);

                auto g20_yy_xxx = primBuffer.data(g20off + 60 * idx + 30);

                auto g20_yy_xxy = primBuffer.data(g20off + 60 * idx + 31);

                auto g20_yy_xxz = primBuffer.data(g20off + 60 * idx + 32);

                auto g20_yy_xyy = primBuffer.data(g20off + 60 * idx + 33);

                auto g20_yy_xyz = primBuffer.data(g20off + 60 * idx + 34);

                auto g20_yy_xzz = primBuffer.data(g20off + 60 * idx + 35);

                auto g20_yy_yyy = primBuffer.data(g20off + 60 * idx + 36);

                auto g20_yy_yyz = primBuffer.data(g20off + 60 * idx + 37);

                auto g20_yy_yzz = primBuffer.data(g20off + 60 * idx + 38);

                auto g20_yy_zzz = primBuffer.data(g20off + 60 * idx + 39);

                auto g20_yz_xxx = primBuffer.data(g20off + 60 * idx + 40);

                auto g20_yz_xxy = primBuffer.data(g20off + 60 * idx + 41);

                auto g20_yz_xxz = primBuffer.data(g20off + 60 * idx + 42);

                auto g20_yz_xyy = primBuffer.data(g20off + 60 * idx + 43);

                auto g20_yz_xyz = primBuffer.data(g20off + 60 * idx + 44);

                auto g20_yz_xzz = primBuffer.data(g20off + 60 * idx + 45);

                auto g20_yz_yyy = primBuffer.data(g20off + 60 * idx + 46);

                auto g20_yz_yyz = primBuffer.data(g20off + 60 * idx + 47);

                auto g20_yz_yzz = primBuffer.data(g20off + 60 * idx + 48);

                auto g20_yz_zzz = primBuffer.data(g20off + 60 * idx + 49);

                auto g20_zz_xxx = primBuffer.data(g20off + 60 * idx + 50);

                auto g20_zz_xxy = primBuffer.data(g20off + 60 * idx + 51);

                auto g20_zz_xxz = primBuffer.data(g20off + 60 * idx + 52);

                auto g20_zz_xyy = primBuffer.data(g20off + 60 * idx + 53);

                auto g20_zz_xyz = primBuffer.data(g20off + 60 * idx + 54);

                auto g20_zz_xzz = primBuffer.data(g20off + 60 * idx + 55);

                auto g20_zz_yyy = primBuffer.data(g20off + 60 * idx + 56);

                auto g20_zz_yyz = primBuffer.data(g20off + 60 * idx + 57);

                auto g20_zz_yzz = primBuffer.data(g20off + 60 * idx + 58);

                auto g20_zz_zzz = primBuffer.data(g20off + 60 * idx + 59);

                // set up pointers to (D|g(r,r')|SF)^(m+1) integrals

                auto g21_xx_xxx = primBuffer.data(g21off + 60 * idx);

                auto g21_xx_xxy = primBuffer.data(g21off + 60 * idx + 1);

                auto g21_xx_xxz = primBuffer.data(g21off + 60 * idx + 2);

                auto g21_xx_xyy = primBuffer.data(g21off + 60 * idx + 3);

                auto g21_xx_xyz = primBuffer.data(g21off + 60 * idx + 4);

                auto g21_xx_xzz = primBuffer.data(g21off + 60 * idx + 5);

                auto g21_xx_yyy = primBuffer.data(g21off + 60 * idx + 6);

                auto g21_xx_yyz = primBuffer.data(g21off + 60 * idx + 7);

                auto g21_xx_yzz = primBuffer.data(g21off + 60 * idx + 8);

                auto g21_xx_zzz = primBuffer.data(g21off + 60 * idx + 9);

                auto g21_xy_xxx = primBuffer.data(g21off + 60 * idx + 10);

                auto g21_xy_xxy = primBuffer.data(g21off + 60 * idx + 11);

                auto g21_xy_xxz = primBuffer.data(g21off + 60 * idx + 12);

                auto g21_xy_xyy = primBuffer.data(g21off + 60 * idx + 13);

                auto g21_xy_xyz = primBuffer.data(g21off + 60 * idx + 14);

                auto g21_xy_xzz = primBuffer.data(g21off + 60 * idx + 15);

                auto g21_xy_yyy = primBuffer.data(g21off + 60 * idx + 16);

                auto g21_xy_yyz = primBuffer.data(g21off + 60 * idx + 17);

                auto g21_xy_yzz = primBuffer.data(g21off + 60 * idx + 18);

                auto g21_xy_zzz = primBuffer.data(g21off + 60 * idx + 19);

                auto g21_xz_xxx = primBuffer.data(g21off + 60 * idx + 20);

                auto g21_xz_xxy = primBuffer.data(g21off + 60 * idx + 21);

                auto g21_xz_xxz = primBuffer.data(g21off + 60 * idx + 22);

                auto g21_xz_xyy = primBuffer.data(g21off + 60 * idx + 23);

                auto g21_xz_xyz = primBuffer.data(g21off + 60 * idx + 24);

                auto g21_xz_xzz = primBuffer.data(g21off + 60 * idx + 25);

                auto g21_xz_yyy = primBuffer.data(g21off + 60 * idx + 26);

                auto g21_xz_yyz = primBuffer.data(g21off + 60 * idx + 27);

                auto g21_xz_yzz = primBuffer.data(g21off + 60 * idx + 28);

                auto g21_xz_zzz = primBuffer.data(g21off + 60 * idx + 29);

                auto g21_yy_xxx = primBuffer.data(g21off + 60 * idx + 30);

                auto g21_yy_xxy = primBuffer.data(g21off + 60 * idx + 31);

                auto g21_yy_xxz = primBuffer.data(g21off + 60 * idx + 32);

                auto g21_yy_xyy = primBuffer.data(g21off + 60 * idx + 33);

                auto g21_yy_xyz = primBuffer.data(g21off + 60 * idx + 34);

                auto g21_yy_xzz = primBuffer.data(g21off + 60 * idx + 35);

                auto g21_yy_yyy = primBuffer.data(g21off + 60 * idx + 36);

                auto g21_yy_yyz = primBuffer.data(g21off + 60 * idx + 37);

                auto g21_yy_yzz = primBuffer.data(g21off + 60 * idx + 38);

                auto g21_yy_zzz = primBuffer.data(g21off + 60 * idx + 39);

                auto g21_yz_xxx = primBuffer.data(g21off + 60 * idx + 40);

                auto g21_yz_xxy = primBuffer.data(g21off + 60 * idx + 41);

                auto g21_yz_xxz = primBuffer.data(g21off + 60 * idx + 42);

                auto g21_yz_xyy = primBuffer.data(g21off + 60 * idx + 43);

                auto g21_yz_xyz = primBuffer.data(g21off + 60 * idx + 44);

                auto g21_yz_xzz = primBuffer.data(g21off + 60 * idx + 45);

                auto g21_yz_yyy = primBuffer.data(g21off + 60 * idx + 46);

                auto g21_yz_yyz = primBuffer.data(g21off + 60 * idx + 47);

                auto g21_yz_yzz = primBuffer.data(g21off + 60 * idx + 48);

                auto g21_yz_zzz = primBuffer.data(g21off + 60 * idx + 49);

                auto g21_zz_xxx = primBuffer.data(g21off + 60 * idx + 50);

                auto g21_zz_xxy = primBuffer.data(g21off + 60 * idx + 51);

                auto g21_zz_xxz = primBuffer.data(g21off + 60 * idx + 52);

                auto g21_zz_xyy = primBuffer.data(g21off + 60 * idx + 53);

                auto g21_zz_xyz = primBuffer.data(g21off + 60 * idx + 54);

                auto g21_zz_xzz = primBuffer.data(g21off + 60 * idx + 55);

                auto g21_zz_yyy = primBuffer.data(g21off + 60 * idx + 56);

                auto g21_zz_yyz = primBuffer.data(g21off + 60 * idx + 57);

                auto g21_zz_yzz = primBuffer.data(g21off + 60 * idx + 58);

                auto g21_zz_zzz = primBuffer.data(g21off + 60 * idx + 59);

                // set up pointers to (F|g(r,r')|SF)^(m+1) integrals

                auto g11_xxx_xxx = primBuffer.data(g11off + 100 * idx);

                auto g11_xxx_xxy = primBuffer.data(g11off + 100 * idx + 1);

                auto g11_xxx_xxz = primBuffer.data(g11off + 100 * idx + 2);

                auto g11_xxx_xyy = primBuffer.data(g11off + 100 * idx + 3);

                auto g11_xxx_xyz = primBuffer.data(g11off + 100 * idx + 4);

                auto g11_xxx_xzz = primBuffer.data(g11off + 100 * idx + 5);

                auto g11_xxx_yyy = primBuffer.data(g11off + 100 * idx + 6);

                auto g11_xxx_yyz = primBuffer.data(g11off + 100 * idx + 7);

                auto g11_xxx_yzz = primBuffer.data(g11off + 100 * idx + 8);

                auto g11_xxx_zzz = primBuffer.data(g11off + 100 * idx + 9);

                auto g11_xxy_xxx = primBuffer.data(g11off + 100 * idx + 10);

                auto g11_xxy_xxy = primBuffer.data(g11off + 100 * idx + 11);

                auto g11_xxy_xxz = primBuffer.data(g11off + 100 * idx + 12);

                auto g11_xxy_xyy = primBuffer.data(g11off + 100 * idx + 13);

                auto g11_xxy_xyz = primBuffer.data(g11off + 100 * idx + 14);

                auto g11_xxy_xzz = primBuffer.data(g11off + 100 * idx + 15);

                auto g11_xxy_yyy = primBuffer.data(g11off + 100 * idx + 16);

                auto g11_xxy_yyz = primBuffer.data(g11off + 100 * idx + 17);

                auto g11_xxy_yzz = primBuffer.data(g11off + 100 * idx + 18);

                auto g11_xxy_zzz = primBuffer.data(g11off + 100 * idx + 19);

                auto g11_xxz_xxx = primBuffer.data(g11off + 100 * idx + 20);

                auto g11_xxz_xxy = primBuffer.data(g11off + 100 * idx + 21);

                auto g11_xxz_xxz = primBuffer.data(g11off + 100 * idx + 22);

                auto g11_xxz_xyy = primBuffer.data(g11off + 100 * idx + 23);

                auto g11_xxz_xyz = primBuffer.data(g11off + 100 * idx + 24);

                auto g11_xxz_xzz = primBuffer.data(g11off + 100 * idx + 25);

                auto g11_xxz_yyy = primBuffer.data(g11off + 100 * idx + 26);

                auto g11_xxz_yyz = primBuffer.data(g11off + 100 * idx + 27);

                auto g11_xxz_yzz = primBuffer.data(g11off + 100 * idx + 28);

                auto g11_xxz_zzz = primBuffer.data(g11off + 100 * idx + 29);

                auto g11_xyy_xxx = primBuffer.data(g11off + 100 * idx + 30);

                auto g11_xyy_xxy = primBuffer.data(g11off + 100 * idx + 31);

                auto g11_xyy_xxz = primBuffer.data(g11off + 100 * idx + 32);

                auto g11_xyy_xyy = primBuffer.data(g11off + 100 * idx + 33);

                auto g11_xyy_xyz = primBuffer.data(g11off + 100 * idx + 34);

                auto g11_xyy_xzz = primBuffer.data(g11off + 100 * idx + 35);

                auto g11_xyy_yyy = primBuffer.data(g11off + 100 * idx + 36);

                auto g11_xyy_yyz = primBuffer.data(g11off + 100 * idx + 37);

                auto g11_xyy_yzz = primBuffer.data(g11off + 100 * idx + 38);

                auto g11_xyy_zzz = primBuffer.data(g11off + 100 * idx + 39);

                auto g11_xyz_xxx = primBuffer.data(g11off + 100 * idx + 40);

                auto g11_xyz_xxy = primBuffer.data(g11off + 100 * idx + 41);

                auto g11_xyz_xxz = primBuffer.data(g11off + 100 * idx + 42);

                auto g11_xyz_xyy = primBuffer.data(g11off + 100 * idx + 43);

                auto g11_xyz_xyz = primBuffer.data(g11off + 100 * idx + 44);

                auto g11_xyz_xzz = primBuffer.data(g11off + 100 * idx + 45);

                auto g11_xyz_yyy = primBuffer.data(g11off + 100 * idx + 46);

                auto g11_xyz_yyz = primBuffer.data(g11off + 100 * idx + 47);

                auto g11_xyz_yzz = primBuffer.data(g11off + 100 * idx + 48);

                auto g11_xyz_zzz = primBuffer.data(g11off + 100 * idx + 49);

                auto g11_xzz_xxx = primBuffer.data(g11off + 100 * idx + 50);

                auto g11_xzz_xxy = primBuffer.data(g11off + 100 * idx + 51);

                auto g11_xzz_xxz = primBuffer.data(g11off + 100 * idx + 52);

                auto g11_xzz_xyy = primBuffer.data(g11off + 100 * idx + 53);

                auto g11_xzz_xyz = primBuffer.data(g11off + 100 * idx + 54);

                auto g11_xzz_xzz = primBuffer.data(g11off + 100 * idx + 55);

                auto g11_xzz_yyy = primBuffer.data(g11off + 100 * idx + 56);

                auto g11_xzz_yyz = primBuffer.data(g11off + 100 * idx + 57);

                auto g11_xzz_yzz = primBuffer.data(g11off + 100 * idx + 58);

                auto g11_xzz_zzz = primBuffer.data(g11off + 100 * idx + 59);

                auto g11_yyy_xxx = primBuffer.data(g11off + 100 * idx + 60);

                auto g11_yyy_xxy = primBuffer.data(g11off + 100 * idx + 61);

                auto g11_yyy_xxz = primBuffer.data(g11off + 100 * idx + 62);

                auto g11_yyy_xyy = primBuffer.data(g11off + 100 * idx + 63);

                auto g11_yyy_xyz = primBuffer.data(g11off + 100 * idx + 64);

                auto g11_yyy_xzz = primBuffer.data(g11off + 100 * idx + 65);

                auto g11_yyy_yyy = primBuffer.data(g11off + 100 * idx + 66);

                auto g11_yyy_yyz = primBuffer.data(g11off + 100 * idx + 67);

                auto g11_yyy_yzz = primBuffer.data(g11off + 100 * idx + 68);

                auto g11_yyy_zzz = primBuffer.data(g11off + 100 * idx + 69);

                auto g11_yyz_xxx = primBuffer.data(g11off + 100 * idx + 70);

                auto g11_yyz_xxy = primBuffer.data(g11off + 100 * idx + 71);

                auto g11_yyz_xxz = primBuffer.data(g11off + 100 * idx + 72);

                auto g11_yyz_xyy = primBuffer.data(g11off + 100 * idx + 73);

                auto g11_yyz_xyz = primBuffer.data(g11off + 100 * idx + 74);

                auto g11_yyz_xzz = primBuffer.data(g11off + 100 * idx + 75);

                auto g11_yyz_yyy = primBuffer.data(g11off + 100 * idx + 76);

                auto g11_yyz_yyz = primBuffer.data(g11off + 100 * idx + 77);

                auto g11_yyz_yzz = primBuffer.data(g11off + 100 * idx + 78);

                auto g11_yyz_zzz = primBuffer.data(g11off + 100 * idx + 79);

                auto g11_yzz_xxx = primBuffer.data(g11off + 100 * idx + 80);

                auto g11_yzz_xxy = primBuffer.data(g11off + 100 * idx + 81);

                auto g11_yzz_xxz = primBuffer.data(g11off + 100 * idx + 82);

                auto g11_yzz_xyy = primBuffer.data(g11off + 100 * idx + 83);

                auto g11_yzz_xyz = primBuffer.data(g11off + 100 * idx + 84);

                auto g11_yzz_xzz = primBuffer.data(g11off + 100 * idx + 85);

                auto g11_yzz_yyy = primBuffer.data(g11off + 100 * idx + 86);

                auto g11_yzz_yyz = primBuffer.data(g11off + 100 * idx + 87);

                auto g11_yzz_yzz = primBuffer.data(g11off + 100 * idx + 88);

                auto g11_yzz_zzz = primBuffer.data(g11off + 100 * idx + 89);

                auto g11_zzz_xxx = primBuffer.data(g11off + 100 * idx + 90);

                auto g11_zzz_xxy = primBuffer.data(g11off + 100 * idx + 91);

                auto g11_zzz_xxz = primBuffer.data(g11off + 100 * idx + 92);

                auto g11_zzz_xyy = primBuffer.data(g11off + 100 * idx + 93);

                auto g11_zzz_xyz = primBuffer.data(g11off + 100 * idx + 94);

                auto g11_zzz_xzz = primBuffer.data(g11off + 100 * idx + 95);

                auto g11_zzz_yyy = primBuffer.data(g11off + 100 * idx + 96);

                auto g11_zzz_yyz = primBuffer.data(g11off + 100 * idx + 97);

                auto g11_zzz_yzz = primBuffer.data(g11off + 100 * idx + 98);

                auto g11_zzz_zzz = primBuffer.data(g11off + 100 * idx + 99);

                // set up pointers to (G|g(r,r')|SF)^(m) integrals

                auto g_xxxx_xxx = primBuffer.data(goff + 150 * idx);

                auto g_xxxx_xxy = primBuffer.data(goff + 150 * idx + 1);

                auto g_xxxx_xxz = primBuffer.data(goff + 150 * idx + 2);

                auto g_xxxx_xyy = primBuffer.data(goff + 150 * idx + 3);

                auto g_xxxx_xyz = primBuffer.data(goff + 150 * idx + 4);

                auto g_xxxx_xzz = primBuffer.data(goff + 150 * idx + 5);

                auto g_xxxx_yyy = primBuffer.data(goff + 150 * idx + 6);

                auto g_xxxx_yyz = primBuffer.data(goff + 150 * idx + 7);

                auto g_xxxx_yzz = primBuffer.data(goff + 150 * idx + 8);

                auto g_xxxx_zzz = primBuffer.data(goff + 150 * idx + 9);

                auto g_xxxy_xxx = primBuffer.data(goff + 150 * idx + 10);

                auto g_xxxy_xxy = primBuffer.data(goff + 150 * idx + 11);

                auto g_xxxy_xxz = primBuffer.data(goff + 150 * idx + 12);

                auto g_xxxy_xyy = primBuffer.data(goff + 150 * idx + 13);

                auto g_xxxy_xyz = primBuffer.data(goff + 150 * idx + 14);

                auto g_xxxy_xzz = primBuffer.data(goff + 150 * idx + 15);

                auto g_xxxy_yyy = primBuffer.data(goff + 150 * idx + 16);

                auto g_xxxy_yyz = primBuffer.data(goff + 150 * idx + 17);

                auto g_xxxy_yzz = primBuffer.data(goff + 150 * idx + 18);

                auto g_xxxy_zzz = primBuffer.data(goff + 150 * idx + 19);

                auto g_xxxz_xxx = primBuffer.data(goff + 150 * idx + 20);

                auto g_xxxz_xxy = primBuffer.data(goff + 150 * idx + 21);

                auto g_xxxz_xxz = primBuffer.data(goff + 150 * idx + 22);

                auto g_xxxz_xyy = primBuffer.data(goff + 150 * idx + 23);

                auto g_xxxz_xyz = primBuffer.data(goff + 150 * idx + 24);

                auto g_xxxz_xzz = primBuffer.data(goff + 150 * idx + 25);

                auto g_xxxz_yyy = primBuffer.data(goff + 150 * idx + 26);

                auto g_xxxz_yyz = primBuffer.data(goff + 150 * idx + 27);

                auto g_xxxz_yzz = primBuffer.data(goff + 150 * idx + 28);

                auto g_xxxz_zzz = primBuffer.data(goff + 150 * idx + 29);

                auto g_xxyy_xxx = primBuffer.data(goff + 150 * idx + 30);

                auto g_xxyy_xxy = primBuffer.data(goff + 150 * idx + 31);

                auto g_xxyy_xxz = primBuffer.data(goff + 150 * idx + 32);

                auto g_xxyy_xyy = primBuffer.data(goff + 150 * idx + 33);

                auto g_xxyy_xyz = primBuffer.data(goff + 150 * idx + 34);

                auto g_xxyy_xzz = primBuffer.data(goff + 150 * idx + 35);

                auto g_xxyy_yyy = primBuffer.data(goff + 150 * idx + 36);

                auto g_xxyy_yyz = primBuffer.data(goff + 150 * idx + 37);

                auto g_xxyy_yzz = primBuffer.data(goff + 150 * idx + 38);

                auto g_xxyy_zzz = primBuffer.data(goff + 150 * idx + 39);

                auto g_xxyz_xxx = primBuffer.data(goff + 150 * idx + 40);

                auto g_xxyz_xxy = primBuffer.data(goff + 150 * idx + 41);

                auto g_xxyz_xxz = primBuffer.data(goff + 150 * idx + 42);

                auto g_xxyz_xyy = primBuffer.data(goff + 150 * idx + 43);

                auto g_xxyz_xyz = primBuffer.data(goff + 150 * idx + 44);

                auto g_xxyz_xzz = primBuffer.data(goff + 150 * idx + 45);

                auto g_xxyz_yyy = primBuffer.data(goff + 150 * idx + 46);

                auto g_xxyz_yyz = primBuffer.data(goff + 150 * idx + 47);

                auto g_xxyz_yzz = primBuffer.data(goff + 150 * idx + 48);

                auto g_xxyz_zzz = primBuffer.data(goff + 150 * idx + 49);

                auto g_xxzz_xxx = primBuffer.data(goff + 150 * idx + 50);

                auto g_xxzz_xxy = primBuffer.data(goff + 150 * idx + 51);

                auto g_xxzz_xxz = primBuffer.data(goff + 150 * idx + 52);

                auto g_xxzz_xyy = primBuffer.data(goff + 150 * idx + 53);

                auto g_xxzz_xyz = primBuffer.data(goff + 150 * idx + 54);

                auto g_xxzz_xzz = primBuffer.data(goff + 150 * idx + 55);

                auto g_xxzz_yyy = primBuffer.data(goff + 150 * idx + 56);

                auto g_xxzz_yyz = primBuffer.data(goff + 150 * idx + 57);

                auto g_xxzz_yzz = primBuffer.data(goff + 150 * idx + 58);

                auto g_xxzz_zzz = primBuffer.data(goff + 150 * idx + 59);

                auto g_xyyy_xxx = primBuffer.data(goff + 150 * idx + 60);

                auto g_xyyy_xxy = primBuffer.data(goff + 150 * idx + 61);

                auto g_xyyy_xxz = primBuffer.data(goff + 150 * idx + 62);

                auto g_xyyy_xyy = primBuffer.data(goff + 150 * idx + 63);

                auto g_xyyy_xyz = primBuffer.data(goff + 150 * idx + 64);

                auto g_xyyy_xzz = primBuffer.data(goff + 150 * idx + 65);

                auto g_xyyy_yyy = primBuffer.data(goff + 150 * idx + 66);

                auto g_xyyy_yyz = primBuffer.data(goff + 150 * idx + 67);

                auto g_xyyy_yzz = primBuffer.data(goff + 150 * idx + 68);

                auto g_xyyy_zzz = primBuffer.data(goff + 150 * idx + 69);

                auto g_xyyz_xxx = primBuffer.data(goff + 150 * idx + 70);

                auto g_xyyz_xxy = primBuffer.data(goff + 150 * idx + 71);

                auto g_xyyz_xxz = primBuffer.data(goff + 150 * idx + 72);

                auto g_xyyz_xyy = primBuffer.data(goff + 150 * idx + 73);

                auto g_xyyz_xyz = primBuffer.data(goff + 150 * idx + 74);

                auto g_xyyz_xzz = primBuffer.data(goff + 150 * idx + 75);

                auto g_xyyz_yyy = primBuffer.data(goff + 150 * idx + 76);

                auto g_xyyz_yyz = primBuffer.data(goff + 150 * idx + 77);

                auto g_xyyz_yzz = primBuffer.data(goff + 150 * idx + 78);

                auto g_xyyz_zzz = primBuffer.data(goff + 150 * idx + 79);

                auto g_xyzz_xxx = primBuffer.data(goff + 150 * idx + 80);

                auto g_xyzz_xxy = primBuffer.data(goff + 150 * idx + 81);

                auto g_xyzz_xxz = primBuffer.data(goff + 150 * idx + 82);

                auto g_xyzz_xyy = primBuffer.data(goff + 150 * idx + 83);

                auto g_xyzz_xyz = primBuffer.data(goff + 150 * idx + 84);

                auto g_xyzz_xzz = primBuffer.data(goff + 150 * idx + 85);

                auto g_xyzz_yyy = primBuffer.data(goff + 150 * idx + 86);

                auto g_xyzz_yyz = primBuffer.data(goff + 150 * idx + 87);

                auto g_xyzz_yzz = primBuffer.data(goff + 150 * idx + 88);

                auto g_xyzz_zzz = primBuffer.data(goff + 150 * idx + 89);

                auto g_xzzz_xxx = primBuffer.data(goff + 150 * idx + 90);

                auto g_xzzz_xxy = primBuffer.data(goff + 150 * idx + 91);

                auto g_xzzz_xxz = primBuffer.data(goff + 150 * idx + 92);

                auto g_xzzz_xyy = primBuffer.data(goff + 150 * idx + 93);

                auto g_xzzz_xyz = primBuffer.data(goff + 150 * idx + 94);

                auto g_xzzz_xzz = primBuffer.data(goff + 150 * idx + 95);

                auto g_xzzz_yyy = primBuffer.data(goff + 150 * idx + 96);

                auto g_xzzz_yyz = primBuffer.data(goff + 150 * idx + 97);

                auto g_xzzz_yzz = primBuffer.data(goff + 150 * idx + 98);

                auto g_xzzz_zzz = primBuffer.data(goff + 150 * idx + 99);

                auto g_yyyy_xxx = primBuffer.data(goff + 150 * idx + 100);

                auto g_yyyy_xxy = primBuffer.data(goff + 150 * idx + 101);

                auto g_yyyy_xxz = primBuffer.data(goff + 150 * idx + 102);

                auto g_yyyy_xyy = primBuffer.data(goff + 150 * idx + 103);

                auto g_yyyy_xyz = primBuffer.data(goff + 150 * idx + 104);

                auto g_yyyy_xzz = primBuffer.data(goff + 150 * idx + 105);

                auto g_yyyy_yyy = primBuffer.data(goff + 150 * idx + 106);

                auto g_yyyy_yyz = primBuffer.data(goff + 150 * idx + 107);

                auto g_yyyy_yzz = primBuffer.data(goff + 150 * idx + 108);

                auto g_yyyy_zzz = primBuffer.data(goff + 150 * idx + 109);

                auto g_yyyz_xxx = primBuffer.data(goff + 150 * idx + 110);

                auto g_yyyz_xxy = primBuffer.data(goff + 150 * idx + 111);

                auto g_yyyz_xxz = primBuffer.data(goff + 150 * idx + 112);

                auto g_yyyz_xyy = primBuffer.data(goff + 150 * idx + 113);

                auto g_yyyz_xyz = primBuffer.data(goff + 150 * idx + 114);

                auto g_yyyz_xzz = primBuffer.data(goff + 150 * idx + 115);

                auto g_yyyz_yyy = primBuffer.data(goff + 150 * idx + 116);

                auto g_yyyz_yyz = primBuffer.data(goff + 150 * idx + 117);

                auto g_yyyz_yzz = primBuffer.data(goff + 150 * idx + 118);

                auto g_yyyz_zzz = primBuffer.data(goff + 150 * idx + 119);

                auto g_yyzz_xxx = primBuffer.data(goff + 150 * idx + 120);

                auto g_yyzz_xxy = primBuffer.data(goff + 150 * idx + 121);

                auto g_yyzz_xxz = primBuffer.data(goff + 150 * idx + 122);

                auto g_yyzz_xyy = primBuffer.data(goff + 150 * idx + 123);

                auto g_yyzz_xyz = primBuffer.data(goff + 150 * idx + 124);

                auto g_yyzz_xzz = primBuffer.data(goff + 150 * idx + 125);

                auto g_yyzz_yyy = primBuffer.data(goff + 150 * idx + 126);

                auto g_yyzz_yyz = primBuffer.data(goff + 150 * idx + 127);

                auto g_yyzz_yzz = primBuffer.data(goff + 150 * idx + 128);

                auto g_yyzz_zzz = primBuffer.data(goff + 150 * idx + 129);

                auto g_yzzz_xxx = primBuffer.data(goff + 150 * idx + 130);

                auto g_yzzz_xxy = primBuffer.data(goff + 150 * idx + 131);

                auto g_yzzz_xxz = primBuffer.data(goff + 150 * idx + 132);

                auto g_yzzz_xyy = primBuffer.data(goff + 150 * idx + 133);

                auto g_yzzz_xyz = primBuffer.data(goff + 150 * idx + 134);

                auto g_yzzz_xzz = primBuffer.data(goff + 150 * idx + 135);

                auto g_yzzz_yyy = primBuffer.data(goff + 150 * idx + 136);

                auto g_yzzz_yyz = primBuffer.data(goff + 150 * idx + 137);

                auto g_yzzz_yzz = primBuffer.data(goff + 150 * idx + 138);

                auto g_yzzz_zzz = primBuffer.data(goff + 150 * idx + 139);

                auto g_zzzz_xxx = primBuffer.data(goff + 150 * idx + 140);

                auto g_zzzz_xxy = primBuffer.data(goff + 150 * idx + 141);

                auto g_zzzz_xxz = primBuffer.data(goff + 150 * idx + 142);

                auto g_zzzz_xyy = primBuffer.data(goff + 150 * idx + 143);

                auto g_zzzz_xyz = primBuffer.data(goff + 150 * idx + 144);

                auto g_zzzz_xzz = primBuffer.data(goff + 150 * idx + 145);

                auto g_zzzz_yyy = primBuffer.data(goff + 150 * idx + 146);

                auto g_zzzz_yyz = primBuffer.data(goff + 150 * idx + 147);

                auto g_zzzz_yzz = primBuffer.data(goff + 150 * idx + 148);

                auto g_zzzz_zzz = primBuffer.data(goff + 150 * idx + 149);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xx,\
                                         gk_xxx_xy, gk_xxx_xz, gk_xxx_yy, gk_xxx_yz,\
                                         gk_xxx_zz, gk_xxy_xx, gk_xxy_xy, gk_xxy_xz,\
                                         gk_xxy_yy, gk_xxy_yz, gk_xxy_zz, gk_xxz_xx,\
                                         gk_xxz_xy, gk_xxz_xz, gk_xxz_yy, gk_xxz_yz,\
                                         gk_xxz_zz, gk_xyy_xx, gk_xyy_xy, gk_xyy_xz,\
                                         gk_xyy_yy, gk_xyy_yz, gk_xyy_zz, gk_xyz_xx,\
                                         gk_xyz_xy, gk_xyz_xz, gk_xyz_yy, gk_xyz_yz,\
                                         gk_xyz_zz, gk_xzz_xx, gk_xzz_xy, gk_xzz_xz,\
                                         gk_xzz_yy, gk_xzz_yz, gk_xzz_zz, gk_yyy_xx,\
                                         gk_yyy_xy, gk_yyy_xz, gk_yyy_yy, gk_yyy_yz,\
                                         gk_yyy_zz, gk_yyz_xx, gk_yyz_xy, gk_yyz_xz,\
                                         gk_yyz_yy, gk_yyz_yz, gk_yyz_zz, gk_yzz_xx,\
                                         gk_yzz_xy, gk_yzz_xz, gk_yzz_yy, gk_yzz_yz,\
                                         gk_yzz_zz, gk_zzz_xx, gk_zzz_xy, gk_zzz_xz,\
                                         gk_zzz_yy, gk_zzz_yz, gk_zzz_zz, g20_xx_xxx,\
                                         g20_xx_xxy, g20_xx_xxz, g20_xx_xyy, g20_xx_xyz,\
                                         g20_xx_xzz, g20_xx_yyy, g20_xx_yyz, g20_xx_yzz,\
                                         g20_xx_zzz, g20_xy_xxx, g20_xy_xxy, g20_xy_xxz,\
                                         g20_xy_xyy, g20_xy_xyz, g20_xy_xzz, g20_xy_yyy,\
                                         g20_xy_yyz, g20_xy_yzz, g20_xy_zzz, g20_xz_xxx,\
                                         g20_xz_xxy, g20_xz_xxz, g20_xz_xyy, g20_xz_xyz,\
                                         g20_xz_xzz, g20_xz_yyy, g20_xz_yyz, g20_xz_yzz,\
                                         g20_xz_zzz, g20_yy_xxx, g20_yy_xxy, g20_yy_xxz,\
                                         g20_yy_xyy, g20_yy_xyz, g20_yy_xzz, g20_yy_yyy,\
                                         g20_yy_yyz, g20_yy_yzz, g20_yy_zzz, g20_yz_xxx,\
                                         g20_yz_xxy, g20_yz_xxz, g20_yz_xyy, g20_yz_xyz,\
                                         g20_yz_xzz, g20_yz_yyy, g20_yz_yyz, g20_yz_yzz,\
                                         g20_yz_zzz, g20_zz_xxx, g20_zz_xxy, g20_zz_xxz,\
                                         g20_zz_xyy, g20_zz_xyz, g20_zz_xzz, g20_zz_yyy,\
                                         g20_zz_yyz, g20_zz_yzz, g20_zz_zzz, g21_xx_xxx,\
                                         g21_xx_xxy, g21_xx_xxz, g21_xx_xyy, g21_xx_xyz,\
                                         g21_xx_xzz, g21_xx_yyy, g21_xx_yyz, g21_xx_yzz,\
                                         g21_xx_zzz, g21_xy_xxx, g21_xy_xxy, g21_xy_xxz,\
                                         g21_xy_xyy, g21_xy_xyz, g21_xy_xzz, g21_xy_yyy,\
                                         g21_xy_yyz, g21_xy_yzz, g21_xy_zzz, g21_xz_xxx,\
                                         g21_xz_xxy, g21_xz_xxz, g21_xz_xyy, g21_xz_xyz,\
                                         g21_xz_xzz, g21_xz_yyy, g21_xz_yyz, g21_xz_yzz,\
                                         g21_xz_zzz, g21_yy_xxx, g21_yy_xxy, g21_yy_xxz,\
                                         g21_yy_xyy, g21_yy_xyz, g21_yy_xzz, g21_yy_yyy,\
                                         g21_yy_yyz, g21_yy_yzz, g21_yy_zzz, g21_yz_xxx,\
                                         g21_yz_xxy, g21_yz_xxz, g21_yz_xyy, g21_yz_xyz,\
                                         g21_yz_xzz, g21_yz_yyy, g21_yz_yyz, g21_yz_yzz,\
                                         g21_yz_zzz, g21_zz_xxx, g21_zz_xxy, g21_zz_xxz,\
                                         g21_zz_xyy, g21_zz_xyz, g21_zz_xzz, g21_zz_yyy,\
                                         g21_zz_yyz, g21_zz_yzz, g21_zz_zzz, g11_xxx_xxx,\
                                         g11_xxx_xxy, g11_xxx_xxz, g11_xxx_xyy,\
                                         g11_xxx_xyz, g11_xxx_xzz, g11_xxx_yyy,\
                                         g11_xxx_yyz, g11_xxx_yzz, g11_xxx_zzz,\
                                         g11_xxy_xxx, g11_xxy_xxy, g11_xxy_xxz,\
                                         g11_xxy_xyy, g11_xxy_xyz, g11_xxy_xzz,\
                                         g11_xxy_yyy, g11_xxy_yyz, g11_xxy_yzz,\
                                         g11_xxy_zzz, g11_xxz_xxx, g11_xxz_xxy,\
                                         g11_xxz_xxz, g11_xxz_xyy, g11_xxz_xyz,\
                                         g11_xxz_xzz, g11_xxz_yyy, g11_xxz_yyz,\
                                         g11_xxz_yzz, g11_xxz_zzz, g11_xyy_xxx,\
                                         g11_xyy_xxy, g11_xyy_xxz, g11_xyy_xyy,\
                                         g11_xyy_xyz, g11_xyy_xzz, g11_xyy_yyy,\
                                         g11_xyy_yyz, g11_xyy_yzz, g11_xyy_zzz,\
                                         g11_xyz_xxx, g11_xyz_xxy, g11_xyz_xxz,\
                                         g11_xyz_xyy, g11_xyz_xyz, g11_xyz_xzz,\
                                         g11_xyz_yyy, g11_xyz_yyz, g11_xyz_yzz,\
                                         g11_xyz_zzz, g11_xzz_xxx, g11_xzz_xxy,\
                                         g11_xzz_xxz, g11_xzz_xyy, g11_xzz_xyz,\
                                         g11_xzz_xzz, g11_xzz_yyy, g11_xzz_yyz,\
                                         g11_xzz_yzz, g11_xzz_zzz, g11_yyy_xxx,\
                                         g11_yyy_xxy, g11_yyy_xxz, g11_yyy_xyy,\
                                         g11_yyy_xyz, g11_yyy_xzz, g11_yyy_yyy,\
                                         g11_yyy_yyz, g11_yyy_yzz, g11_yyy_zzz,\
                                         g11_yyz_xxx, g11_yyz_xxy, g11_yyz_xxz,\
                                         g11_yyz_xyy, g11_yyz_xyz, g11_yyz_xzz,\
                                         g11_yyz_yyy, g11_yyz_yyz, g11_yyz_yzz,\
                                         g11_yyz_zzz, g11_yzz_xxx, g11_yzz_xxy,\
                                         g11_yzz_xxz, g11_yzz_xyy, g11_yzz_xyz,\
                                         g11_yzz_xzz, g11_yzz_yyy, g11_yzz_yyz,\
                                         g11_yzz_yzz, g11_yzz_zzz, g11_zzz_xxx,\
                                         g11_zzz_xxy, g11_zzz_xxz, g11_zzz_xyy,\
                                         g11_zzz_xyz, g11_zzz_xzz, g11_zzz_yyy,\
                                         g11_zzz_yyz, g11_zzz_yzz, g11_zzz_zzz,\
                                         g_xxxx_xxx, g_xxxx_xxy, g_xxxx_xxz, g_xxxx_xyy,\
                                         g_xxxx_xyz, g_xxxx_xzz, g_xxxx_yyy, g_xxxx_yyz,\
                                         g_xxxx_yzz, g_xxxx_zzz, g_xxxy_xxx, g_xxxy_xxy,\
                                         g_xxxy_xxz, g_xxxy_xyy, g_xxxy_xyz, g_xxxy_xzz,\
                                         g_xxxy_yyy, g_xxxy_yyz, g_xxxy_yzz, g_xxxy_zzz,\
                                         g_xxxz_xxx, g_xxxz_xxy, g_xxxz_xxz, g_xxxz_xyy,\
                                         g_xxxz_xyz, g_xxxz_xzz, g_xxxz_yyy, g_xxxz_yyz,\
                                         g_xxxz_yzz, g_xxxz_zzz, g_xxyy_xxx, g_xxyy_xxy,\
                                         g_xxyy_xxz, g_xxyy_xyy, g_xxyy_xyz, g_xxyy_xzz,\
                                         g_xxyy_yyy, g_xxyy_yyz, g_xxyy_yzz, g_xxyy_zzz,\
                                         g_xxyz_xxx, g_xxyz_xxy, g_xxyz_xxz, g_xxyz_xyy,\
                                         g_xxyz_xyz, g_xxyz_xzz, g_xxyz_yyy, g_xxyz_yyz,\
                                         g_xxyz_yzz, g_xxyz_zzz, g_xxzz_xxx, g_xxzz_xxy,\
                                         g_xxzz_xxz, g_xxzz_xyy, g_xxzz_xyz, g_xxzz_xzz,\
                                         g_xxzz_yyy, g_xxzz_yyz, g_xxzz_yzz, g_xxzz_zzz,\
                                         g_xyyy_xxx, g_xyyy_xxy, g_xyyy_xxz, g_xyyy_xyy,\
                                         g_xyyy_xyz, g_xyyy_xzz, g_xyyy_yyy, g_xyyy_yyz,\
                                         g_xyyy_yzz, g_xyyy_zzz, g_xyyz_xxx, g_xyyz_xxy,\
                                         g_xyyz_xxz, g_xyyz_xyy, g_xyyz_xyz, g_xyyz_xzz,\
                                         g_xyyz_yyy, g_xyyz_yyz, g_xyyz_yzz, g_xyyz_zzz,\
                                         g_xyzz_xxx, g_xyzz_xxy, g_xyzz_xxz, g_xyzz_xyy,\
                                         g_xyzz_xyz, g_xyzz_xzz, g_xyzz_yyy, g_xyzz_yyz,\
                                         g_xyzz_yzz, g_xyzz_zzz, g_xzzz_xxx, g_xzzz_xxy,\
                                         g_xzzz_xxz, g_xzzz_xyy, g_xzzz_xyz, g_xzzz_xzz,\
                                         g_xzzz_yyy, g_xzzz_yyz, g_xzzz_yzz, g_xzzz_zzz,\
                                         g_yyyy_xxx, g_yyyy_xxy, g_yyyy_xxz, g_yyyy_xyy,\
                                         g_yyyy_xyz, g_yyyy_xzz, g_yyyy_yyy, g_yyyy_yyz,\
                                         g_yyyy_yzz, g_yyyy_zzz, g_yyyz_xxx, g_yyyz_xxy,\
                                         g_yyyz_xxz, g_yyyz_xyy, g_yyyz_xyz, g_yyyz_xzz,\
                                         g_yyyz_yyy, g_yyyz_yyz, g_yyyz_yzz, g_yyyz_zzz,\
                                         g_yyzz_xxx, g_yyzz_xxy, g_yyzz_xxz, g_yyzz_xyy,\
                                         g_yyzz_xyz, g_yyzz_xzz, g_yyzz_yyy, g_yyzz_yyz,\
                                         g_yyzz_yzz, g_yyzz_zzz, g_yzzz_xxx, g_yzzz_xxy,\
                                         g_yzzz_xxz, g_yzzz_xyy, g_yzzz_xyz, g_yzzz_xzz,\
                                         g_yzzz_yyy, g_yzzz_yyz, g_yzzz_yzz, g_yzzz_zzz,\
                                         g_zzzz_xxx, g_zzzz_xxy, g_zzzz_xxz, g_zzzz_xyy,\
                                         g_zzzz_xyz, g_zzzz_xzz, g_zzzz_yyy, g_zzzz_yyz,\
                                         g_zzzz_yzz, g_zzzz_zzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxx[k] = fr * g11_xxx_xxx[k] + f2g * (3.0 * g20_xx_xxx[k] - 3.0 * fgz * g21_xx_xxx[k]) + 3.0 * f2t * gk_xxx_xx[k];

                    g_xxxx_xxy[k] = fr * g11_xxx_xxy[k] + f2g * (3.0 * g20_xx_xxy[k] - 3.0 * fgz * g21_xx_xxy[k]) + 2.0 * f2t * gk_xxx_xy[k];

                    g_xxxx_xxz[k] = fr * g11_xxx_xxz[k] + f2g * (3.0 * g20_xx_xxz[k] - 3.0 * fgz * g21_xx_xxz[k]) + 2.0 * f2t * gk_xxx_xz[k];

                    g_xxxx_xyy[k] = fr * g11_xxx_xyy[k] + f2g * (3.0 * g20_xx_xyy[k] - 3.0 * fgz * g21_xx_xyy[k]) + f2t * gk_xxx_yy[k];

                    g_xxxx_xyz[k] = fr * g11_xxx_xyz[k] + f2g * (3.0 * g20_xx_xyz[k] - 3.0 * fgz * g21_xx_xyz[k]) + f2t * gk_xxx_yz[k];

                    g_xxxx_xzz[k] = fr * g11_xxx_xzz[k] + f2g * (3.0 * g20_xx_xzz[k] - 3.0 * fgz * g21_xx_xzz[k]) + f2t * gk_xxx_zz[k];

                    g_xxxx_yyy[k] = fr * g11_xxx_yyy[k] + f2g * (3.0 * g20_xx_yyy[k] - 3.0 * fgz * g21_xx_yyy[k]);

                    g_xxxx_yyz[k] = fr * g11_xxx_yyz[k] + f2g * (3.0 * g20_xx_yyz[k] - 3.0 * fgz * g21_xx_yyz[k]);

                    g_xxxx_yzz[k] = fr * g11_xxx_yzz[k] + f2g * (3.0 * g20_xx_yzz[k] - 3.0 * fgz * g21_xx_yzz[k]);

                    g_xxxx_zzz[k] = fr * g11_xxx_zzz[k] + f2g * (3.0 * g20_xx_zzz[k] - 3.0 * fgz * g21_xx_zzz[k]);

                    g_xxxy_xxx[k] = fr * g11_xxy_xxx[k] + f2g * (2.0 * g20_xy_xxx[k] - 2.0 * fgz * g21_xy_xxx[k]) + 3.0 * f2t * gk_xxy_xx[k];

                    g_xxxy_xxy[k] = fr * g11_xxy_xxy[k] + f2g * (2.0 * g20_xy_xxy[k] - 2.0 * fgz * g21_xy_xxy[k]) + 2.0 * f2t * gk_xxy_xy[k];

                    g_xxxy_xxz[k] = fr * g11_xxy_xxz[k] + f2g * (2.0 * g20_xy_xxz[k] - 2.0 * fgz * g21_xy_xxz[k]) + 2.0 * f2t * gk_xxy_xz[k];

                    g_xxxy_xyy[k] = fr * g11_xxy_xyy[k] + f2g * (2.0 * g20_xy_xyy[k] - 2.0 * fgz * g21_xy_xyy[k]) + f2t * gk_xxy_yy[k];

                    g_xxxy_xyz[k] = fr * g11_xxy_xyz[k] + f2g * (2.0 * g20_xy_xyz[k] - 2.0 * fgz * g21_xy_xyz[k]) + f2t * gk_xxy_yz[k];

                    g_xxxy_xzz[k] = fr * g11_xxy_xzz[k] + f2g * (2.0 * g20_xy_xzz[k] - 2.0 * fgz * g21_xy_xzz[k]) + f2t * gk_xxy_zz[k];

                    g_xxxy_yyy[k] = fr * g11_xxy_yyy[k] + f2g * (2.0 * g20_xy_yyy[k] - 2.0 * fgz * g21_xy_yyy[k]);

                    g_xxxy_yyz[k] = fr * g11_xxy_yyz[k] + f2g * (2.0 * g20_xy_yyz[k] - 2.0 * fgz * g21_xy_yyz[k]);

                    g_xxxy_yzz[k] = fr * g11_xxy_yzz[k] + f2g * (2.0 * g20_xy_yzz[k] - 2.0 * fgz * g21_xy_yzz[k]);

                    g_xxxy_zzz[k] = fr * g11_xxy_zzz[k] + f2g * (2.0 * g20_xy_zzz[k] - 2.0 * fgz * g21_xy_zzz[k]);

                    g_xxxz_xxx[k] = fr * g11_xxz_xxx[k] + f2g * (2.0 * g20_xz_xxx[k] - 2.0 * fgz * g21_xz_xxx[k]) + 3.0 * f2t * gk_xxz_xx[k];

                    g_xxxz_xxy[k] = fr * g11_xxz_xxy[k] + f2g * (2.0 * g20_xz_xxy[k] - 2.0 * fgz * g21_xz_xxy[k]) + 2.0 * f2t * gk_xxz_xy[k];

                    g_xxxz_xxz[k] = fr * g11_xxz_xxz[k] + f2g * (2.0 * g20_xz_xxz[k] - 2.0 * fgz * g21_xz_xxz[k]) + 2.0 * f2t * gk_xxz_xz[k];

                    g_xxxz_xyy[k] = fr * g11_xxz_xyy[k] + f2g * (2.0 * g20_xz_xyy[k] - 2.0 * fgz * g21_xz_xyy[k]) + f2t * gk_xxz_yy[k];

                    g_xxxz_xyz[k] = fr * g11_xxz_xyz[k] + f2g * (2.0 * g20_xz_xyz[k] - 2.0 * fgz * g21_xz_xyz[k]) + f2t * gk_xxz_yz[k];

                    g_xxxz_xzz[k] = fr * g11_xxz_xzz[k] + f2g * (2.0 * g20_xz_xzz[k] - 2.0 * fgz * g21_xz_xzz[k]) + f2t * gk_xxz_zz[k];

                    g_xxxz_yyy[k] = fr * g11_xxz_yyy[k] + f2g * (2.0 * g20_xz_yyy[k] - 2.0 * fgz * g21_xz_yyy[k]);

                    g_xxxz_yyz[k] = fr * g11_xxz_yyz[k] + f2g * (2.0 * g20_xz_yyz[k] - 2.0 * fgz * g21_xz_yyz[k]);

                    g_xxxz_yzz[k] = fr * g11_xxz_yzz[k] + f2g * (2.0 * g20_xz_yzz[k] - 2.0 * fgz * g21_xz_yzz[k]);

                    g_xxxz_zzz[k] = fr * g11_xxz_zzz[k] + f2g * (2.0 * g20_xz_zzz[k] - 2.0 * fgz * g21_xz_zzz[k]);

                    g_xxyy_xxx[k] = fr * g11_xyy_xxx[k] + f2g * (g20_yy_xxx[k] - fgz * g21_yy_xxx[k]) + 3.0 * f2t * gk_xyy_xx[k];

                    g_xxyy_xxy[k] = fr * g11_xyy_xxy[k] + f2g * (g20_yy_xxy[k] - fgz * g21_yy_xxy[k]) + 2.0 * f2t * gk_xyy_xy[k];

                    g_xxyy_xxz[k] = fr * g11_xyy_xxz[k] + f2g * (g20_yy_xxz[k] - fgz * g21_yy_xxz[k]) + 2.0 * f2t * gk_xyy_xz[k];

                    g_xxyy_xyy[k] = fr * g11_xyy_xyy[k] + f2g * (g20_yy_xyy[k] - fgz * g21_yy_xyy[k]) + f2t * gk_xyy_yy[k];

                    g_xxyy_xyz[k] = fr * g11_xyy_xyz[k] + f2g * (g20_yy_xyz[k] - fgz * g21_yy_xyz[k]) + f2t * gk_xyy_yz[k];

                    g_xxyy_xzz[k] = fr * g11_xyy_xzz[k] + f2g * (g20_yy_xzz[k] - fgz * g21_yy_xzz[k]) + f2t * gk_xyy_zz[k];

                    g_xxyy_yyy[k] = fr * g11_xyy_yyy[k] + f2g * (g20_yy_yyy[k] - fgz * g21_yy_yyy[k]);

                    g_xxyy_yyz[k] = fr * g11_xyy_yyz[k] + f2g * (g20_yy_yyz[k] - fgz * g21_yy_yyz[k]);

                    g_xxyy_yzz[k] = fr * g11_xyy_yzz[k] + f2g * (g20_yy_yzz[k] - fgz * g21_yy_yzz[k]);

                    g_xxyy_zzz[k] = fr * g11_xyy_zzz[k] + f2g * (g20_yy_zzz[k] - fgz * g21_yy_zzz[k]);

                    g_xxyz_xxx[k] = fr * g11_xyz_xxx[k] + f2g * (g20_yz_xxx[k] - fgz * g21_yz_xxx[k]) + 3.0 * f2t * gk_xyz_xx[k];

                    g_xxyz_xxy[k] = fr * g11_xyz_xxy[k] + f2g * (g20_yz_xxy[k] - fgz * g21_yz_xxy[k]) + 2.0 * f2t * gk_xyz_xy[k];

                    g_xxyz_xxz[k] = fr * g11_xyz_xxz[k] + f2g * (g20_yz_xxz[k] - fgz * g21_yz_xxz[k]) + 2.0 * f2t * gk_xyz_xz[k];

                    g_xxyz_xyy[k] = fr * g11_xyz_xyy[k] + f2g * (g20_yz_xyy[k] - fgz * g21_yz_xyy[k]) + f2t * gk_xyz_yy[k];

                    g_xxyz_xyz[k] = fr * g11_xyz_xyz[k] + f2g * (g20_yz_xyz[k] - fgz * g21_yz_xyz[k]) + f2t * gk_xyz_yz[k];

                    g_xxyz_xzz[k] = fr * g11_xyz_xzz[k] + f2g * (g20_yz_xzz[k] - fgz * g21_yz_xzz[k]) + f2t * gk_xyz_zz[k];

                    g_xxyz_yyy[k] = fr * g11_xyz_yyy[k] + f2g * (g20_yz_yyy[k] - fgz * g21_yz_yyy[k]);

                    g_xxyz_yyz[k] = fr * g11_xyz_yyz[k] + f2g * (g20_yz_yyz[k] - fgz * g21_yz_yyz[k]);

                    g_xxyz_yzz[k] = fr * g11_xyz_yzz[k] + f2g * (g20_yz_yzz[k] - fgz * g21_yz_yzz[k]);

                    g_xxyz_zzz[k] = fr * g11_xyz_zzz[k] + f2g * (g20_yz_zzz[k] - fgz * g21_yz_zzz[k]);

                    g_xxzz_xxx[k] = fr * g11_xzz_xxx[k] + f2g * (g20_zz_xxx[k] - fgz * g21_zz_xxx[k]) + 3.0 * f2t * gk_xzz_xx[k];

                    g_xxzz_xxy[k] = fr * g11_xzz_xxy[k] + f2g * (g20_zz_xxy[k] - fgz * g21_zz_xxy[k]) + 2.0 * f2t * gk_xzz_xy[k];

                    g_xxzz_xxz[k] = fr * g11_xzz_xxz[k] + f2g * (g20_zz_xxz[k] - fgz * g21_zz_xxz[k]) + 2.0 * f2t * gk_xzz_xz[k];

                    g_xxzz_xyy[k] = fr * g11_xzz_xyy[k] + f2g * (g20_zz_xyy[k] - fgz * g21_zz_xyy[k]) + f2t * gk_xzz_yy[k];

                    g_xxzz_xyz[k] = fr * g11_xzz_xyz[k] + f2g * (g20_zz_xyz[k] - fgz * g21_zz_xyz[k]) + f2t * gk_xzz_yz[k];

                    g_xxzz_xzz[k] = fr * g11_xzz_xzz[k] + f2g * (g20_zz_xzz[k] - fgz * g21_zz_xzz[k]) + f2t * gk_xzz_zz[k];

                    g_xxzz_yyy[k] = fr * g11_xzz_yyy[k] + f2g * (g20_zz_yyy[k] - fgz * g21_zz_yyy[k]);

                    g_xxzz_yyz[k] = fr * g11_xzz_yyz[k] + f2g * (g20_zz_yyz[k] - fgz * g21_zz_yyz[k]);

                    g_xxzz_yzz[k] = fr * g11_xzz_yzz[k] + f2g * (g20_zz_yzz[k] - fgz * g21_zz_yzz[k]);

                    g_xxzz_zzz[k] = fr * g11_xzz_zzz[k] + f2g * (g20_zz_zzz[k] - fgz * g21_zz_zzz[k]);

                    g_xyyy_xxx[k] = fr * g11_yyy_xxx[k] + 3.0 * f2t * gk_yyy_xx[k];

                    g_xyyy_xxy[k] = fr * g11_yyy_xxy[k] + 2.0 * f2t * gk_yyy_xy[k];

                    g_xyyy_xxz[k] = fr * g11_yyy_xxz[k] + 2.0 * f2t * gk_yyy_xz[k];

                    g_xyyy_xyy[k] = fr * g11_yyy_xyy[k] + f2t * gk_yyy_yy[k];

                    g_xyyy_xyz[k] = fr * g11_yyy_xyz[k] + f2t * gk_yyy_yz[k];

                    g_xyyy_xzz[k] = fr * g11_yyy_xzz[k] + f2t * gk_yyy_zz[k];

                    g_xyyy_yyy[k] = fr * g11_yyy_yyy[k];

                    g_xyyy_yyz[k] = fr * g11_yyy_yyz[k];

                    g_xyyy_yzz[k] = fr * g11_yyy_yzz[k];

                    g_xyyy_zzz[k] = fr * g11_yyy_zzz[k];

                    g_xyyz_xxx[k] = fr * g11_yyz_xxx[k] + 3.0 * f2t * gk_yyz_xx[k];

                    g_xyyz_xxy[k] = fr * g11_yyz_xxy[k] + 2.0 * f2t * gk_yyz_xy[k];

                    g_xyyz_xxz[k] = fr * g11_yyz_xxz[k] + 2.0 * f2t * gk_yyz_xz[k];

                    g_xyyz_xyy[k] = fr * g11_yyz_xyy[k] + f2t * gk_yyz_yy[k];

                    g_xyyz_xyz[k] = fr * g11_yyz_xyz[k] + f2t * gk_yyz_yz[k];

                    g_xyyz_xzz[k] = fr * g11_yyz_xzz[k] + f2t * gk_yyz_zz[k];

                    g_xyyz_yyy[k] = fr * g11_yyz_yyy[k];

                    g_xyyz_yyz[k] = fr * g11_yyz_yyz[k];

                    g_xyyz_yzz[k] = fr * g11_yyz_yzz[k];

                    g_xyyz_zzz[k] = fr * g11_yyz_zzz[k];

                    g_xyzz_xxx[k] = fr * g11_yzz_xxx[k] + 3.0 * f2t * gk_yzz_xx[k];

                    g_xyzz_xxy[k] = fr * g11_yzz_xxy[k] + 2.0 * f2t * gk_yzz_xy[k];

                    g_xyzz_xxz[k] = fr * g11_yzz_xxz[k] + 2.0 * f2t * gk_yzz_xz[k];

                    g_xyzz_xyy[k] = fr * g11_yzz_xyy[k] + f2t * gk_yzz_yy[k];

                    g_xyzz_xyz[k] = fr * g11_yzz_xyz[k] + f2t * gk_yzz_yz[k];

                    g_xyzz_xzz[k] = fr * g11_yzz_xzz[k] + f2t * gk_yzz_zz[k];

                    g_xyzz_yyy[k] = fr * g11_yzz_yyy[k];

                    g_xyzz_yyz[k] = fr * g11_yzz_yyz[k];

                    g_xyzz_yzz[k] = fr * g11_yzz_yzz[k];

                    g_xyzz_zzz[k] = fr * g11_yzz_zzz[k];

                    g_xzzz_xxx[k] = fr * g11_zzz_xxx[k] + 3.0 * f2t * gk_zzz_xx[k];

                    g_xzzz_xxy[k] = fr * g11_zzz_xxy[k] + 2.0 * f2t * gk_zzz_xy[k];

                    g_xzzz_xxz[k] = fr * g11_zzz_xxz[k] + 2.0 * f2t * gk_zzz_xz[k];

                    g_xzzz_xyy[k] = fr * g11_zzz_xyy[k] + f2t * gk_zzz_yy[k];

                    g_xzzz_xyz[k] = fr * g11_zzz_xyz[k] + f2t * gk_zzz_yz[k];

                    g_xzzz_xzz[k] = fr * g11_zzz_xzz[k] + f2t * gk_zzz_zz[k];

                    g_xzzz_yyy[k] = fr * g11_zzz_yyy[k];

                    g_xzzz_yyz[k] = fr * g11_zzz_yyz[k];

                    g_xzzz_yzz[k] = fr * g11_zzz_yzz[k];

                    g_xzzz_zzz[k] = fr * g11_zzz_zzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxx[k] = fr * g11_yyy_xxx[k] + f2g * (3.0 * g20_yy_xxx[k] - 3.0 * fgz * g21_yy_xxx[k]);

                    g_yyyy_xxy[k] = fr * g11_yyy_xxy[k] + f2g * (3.0 * g20_yy_xxy[k] - 3.0 * fgz * g21_yy_xxy[k]) + f2t * gk_yyy_xx[k];

                    g_yyyy_xxz[k] = fr * g11_yyy_xxz[k] + f2g * (3.0 * g20_yy_xxz[k] - 3.0 * fgz * g21_yy_xxz[k]);

                    g_yyyy_xyy[k] = fr * g11_yyy_xyy[k] + f2g * (3.0 * g20_yy_xyy[k] - 3.0 * fgz * g21_yy_xyy[k]) + 2.0 * f2t * gk_yyy_xy[k];

                    g_yyyy_xyz[k] = fr * g11_yyy_xyz[k] + f2g * (3.0 * g20_yy_xyz[k] - 3.0 * fgz * g21_yy_xyz[k]) + f2t * gk_yyy_xz[k];

                    g_yyyy_xzz[k] = fr * g11_yyy_xzz[k] + f2g * (3.0 * g20_yy_xzz[k] - 3.0 * fgz * g21_yy_xzz[k]);

                    g_yyyy_yyy[k] = fr * g11_yyy_yyy[k] + f2g * (3.0 * g20_yy_yyy[k] - 3.0 * fgz * g21_yy_yyy[k]) + 3.0 * f2t * gk_yyy_yy[k];

                    g_yyyy_yyz[k] = fr * g11_yyy_yyz[k] + f2g * (3.0 * g20_yy_yyz[k] - 3.0 * fgz * g21_yy_yyz[k]) + 2.0 * f2t * gk_yyy_yz[k];

                    g_yyyy_yzz[k] = fr * g11_yyy_yzz[k] + f2g * (3.0 * g20_yy_yzz[k] - 3.0 * fgz * g21_yy_yzz[k]) + f2t * gk_yyy_zz[k];

                    g_yyyy_zzz[k] = fr * g11_yyy_zzz[k] + f2g * (3.0 * g20_yy_zzz[k] - 3.0 * fgz * g21_yy_zzz[k]);

                    g_yyyz_xxx[k] = fr * g11_yyz_xxx[k] + f2g * (2.0 * g20_yz_xxx[k] - 2.0 * fgz * g21_yz_xxx[k]);

                    g_yyyz_xxy[k] = fr * g11_yyz_xxy[k] + f2g * (2.0 * g20_yz_xxy[k] - 2.0 * fgz * g21_yz_xxy[k]) + f2t * gk_yyz_xx[k];

                    g_yyyz_xxz[k] = fr * g11_yyz_xxz[k] + f2g * (2.0 * g20_yz_xxz[k] - 2.0 * fgz * g21_yz_xxz[k]);

                    g_yyyz_xyy[k] = fr * g11_yyz_xyy[k] + f2g * (2.0 * g20_yz_xyy[k] - 2.0 * fgz * g21_yz_xyy[k]) + 2.0 * f2t * gk_yyz_xy[k];

                    g_yyyz_xyz[k] = fr * g11_yyz_xyz[k] + f2g * (2.0 * g20_yz_xyz[k] - 2.0 * fgz * g21_yz_xyz[k]) + f2t * gk_yyz_xz[k];

                    g_yyyz_xzz[k] = fr * g11_yyz_xzz[k] + f2g * (2.0 * g20_yz_xzz[k] - 2.0 * fgz * g21_yz_xzz[k]);

                    g_yyyz_yyy[k] = fr * g11_yyz_yyy[k] + f2g * (2.0 * g20_yz_yyy[k] - 2.0 * fgz * g21_yz_yyy[k]) + 3.0 * f2t * gk_yyz_yy[k];

                    g_yyyz_yyz[k] = fr * g11_yyz_yyz[k] + f2g * (2.0 * g20_yz_yyz[k] - 2.0 * fgz * g21_yz_yyz[k]) + 2.0 * f2t * gk_yyz_yz[k];

                    g_yyyz_yzz[k] = fr * g11_yyz_yzz[k] + f2g * (2.0 * g20_yz_yzz[k] - 2.0 * fgz * g21_yz_yzz[k]) + f2t * gk_yyz_zz[k];

                    g_yyyz_zzz[k] = fr * g11_yyz_zzz[k] + f2g * (2.0 * g20_yz_zzz[k] - 2.0 * fgz * g21_yz_zzz[k]);

                    g_yyzz_xxx[k] = fr * g11_yzz_xxx[k] + f2g * (g20_zz_xxx[k] - fgz * g21_zz_xxx[k]);

                    g_yyzz_xxy[k] = fr * g11_yzz_xxy[k] + f2g * (g20_zz_xxy[k] - fgz * g21_zz_xxy[k]) + f2t * gk_yzz_xx[k];

                    g_yyzz_xxz[k] = fr * g11_yzz_xxz[k] + f2g * (g20_zz_xxz[k] - fgz * g21_zz_xxz[k]);

                    g_yyzz_xyy[k] = fr * g11_yzz_xyy[k] + f2g * (g20_zz_xyy[k] - fgz * g21_zz_xyy[k]) + 2.0 * f2t * gk_yzz_xy[k];

                    g_yyzz_xyz[k] = fr * g11_yzz_xyz[k] + f2g * (g20_zz_xyz[k] - fgz * g21_zz_xyz[k]) + f2t * gk_yzz_xz[k];

                    g_yyzz_xzz[k] = fr * g11_yzz_xzz[k] + f2g * (g20_zz_xzz[k] - fgz * g21_zz_xzz[k]);

                    g_yyzz_yyy[k] = fr * g11_yzz_yyy[k] + f2g * (g20_zz_yyy[k] - fgz * g21_zz_yyy[k]) + 3.0 * f2t * gk_yzz_yy[k];

                    g_yyzz_yyz[k] = fr * g11_yzz_yyz[k] + f2g * (g20_zz_yyz[k] - fgz * g21_zz_yyz[k]) + 2.0 * f2t * gk_yzz_yz[k];

                    g_yyzz_yzz[k] = fr * g11_yzz_yzz[k] + f2g * (g20_zz_yzz[k] - fgz * g21_zz_yzz[k]) + f2t * gk_yzz_zz[k];

                    g_yyzz_zzz[k] = fr * g11_yzz_zzz[k] + f2g * (g20_zz_zzz[k] - fgz * g21_zz_zzz[k]);

                    g_yzzz_xxx[k] = fr * g11_zzz_xxx[k];

                    g_yzzz_xxy[k] = fr * g11_zzz_xxy[k] + f2t * gk_zzz_xx[k];

                    g_yzzz_xxz[k] = fr * g11_zzz_xxz[k];

                    g_yzzz_xyy[k] = fr * g11_zzz_xyy[k] + 2.0 * f2t * gk_zzz_xy[k];

                    g_yzzz_xyz[k] = fr * g11_zzz_xyz[k] + f2t * gk_zzz_xz[k];

                    g_yzzz_xzz[k] = fr * g11_zzz_xzz[k];

                    g_yzzz_yyy[k] = fr * g11_zzz_yyy[k] + 3.0 * f2t * gk_zzz_yy[k];

                    g_yzzz_yyz[k] = fr * g11_zzz_yyz[k] + 2.0 * f2t * gk_zzz_yz[k];

                    g_yzzz_yzz[k] = fr * g11_zzz_yzz[k] + f2t * gk_zzz_zz[k];

                    g_yzzz_zzz[k] = fr * g11_zzz_zzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxx[k] = fr * g11_zzz_xxx[k] + f2g * (3.0 * g20_zz_xxx[k] - 3.0 * fgz * g21_zz_xxx[k]);

                    g_zzzz_xxy[k] = fr * g11_zzz_xxy[k] + f2g * (3.0 * g20_zz_xxy[k] - 3.0 * fgz * g21_zz_xxy[k]);

                    g_zzzz_xxz[k] = fr * g11_zzz_xxz[k] + f2g * (3.0 * g20_zz_xxz[k] - 3.0 * fgz * g21_zz_xxz[k]) + f2t * gk_zzz_xx[k];

                    g_zzzz_xyy[k] = fr * g11_zzz_xyy[k] + f2g * (3.0 * g20_zz_xyy[k] - 3.0 * fgz * g21_zz_xyy[k]);

                    g_zzzz_xyz[k] = fr * g11_zzz_xyz[k] + f2g * (3.0 * g20_zz_xyz[k] - 3.0 * fgz * g21_zz_xyz[k]) + f2t * gk_zzz_xy[k];

                    g_zzzz_xzz[k] = fr * g11_zzz_xzz[k] + f2g * (3.0 * g20_zz_xzz[k] - 3.0 * fgz * g21_zz_xzz[k]) + 2.0 * f2t * gk_zzz_xz[k];

                    g_zzzz_yyy[k] = fr * g11_zzz_yyy[k] + f2g * (3.0 * g20_zz_yyy[k] - 3.0 * fgz * g21_zz_yyy[k]);

                    g_zzzz_yyz[k] = fr * g11_zzz_yyz[k] + f2g * (3.0 * g20_zz_yyz[k] - 3.0 * fgz * g21_zz_yyz[k]) + f2t * gk_zzz_yy[k];

                    g_zzzz_yzz[k] = fr * g11_zzz_yzz[k] + f2g * (3.0 * g20_zz_yzz[k] - 3.0 * fgz * g21_zz_yzz[k]) + 2.0 * f2t * gk_zzz_yz[k];

                    g_zzzz_zzz[k] = fr * g11_zzz_zzz[k] + f2g * (3.0 * g20_zz_zzz[k] - 3.0 * fgz * g21_zz_zzz[k]) + 3.0 * f2t * gk_zzz_zz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSG(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 4);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 4, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 4, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 4, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 4, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 3, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SF)^(m+1) integrals

                auto gk_xxx_xxx = primBuffer.data(gkoff + 100 * idx);

                auto gk_xxx_xxy = primBuffer.data(gkoff + 100 * idx + 1);

                auto gk_xxx_xxz = primBuffer.data(gkoff + 100 * idx + 2);

                auto gk_xxx_xyy = primBuffer.data(gkoff + 100 * idx + 3);

                auto gk_xxx_xyz = primBuffer.data(gkoff + 100 * idx + 4);

                auto gk_xxx_xzz = primBuffer.data(gkoff + 100 * idx + 5);

                auto gk_xxx_yyy = primBuffer.data(gkoff + 100 * idx + 6);

                auto gk_xxx_yyz = primBuffer.data(gkoff + 100 * idx + 7);

                auto gk_xxx_yzz = primBuffer.data(gkoff + 100 * idx + 8);

                auto gk_xxx_zzz = primBuffer.data(gkoff + 100 * idx + 9);

                auto gk_xxy_xxx = primBuffer.data(gkoff + 100 * idx + 10);

                auto gk_xxy_xxy = primBuffer.data(gkoff + 100 * idx + 11);

                auto gk_xxy_xxz = primBuffer.data(gkoff + 100 * idx + 12);

                auto gk_xxy_xyy = primBuffer.data(gkoff + 100 * idx + 13);

                auto gk_xxy_xyz = primBuffer.data(gkoff + 100 * idx + 14);

                auto gk_xxy_xzz = primBuffer.data(gkoff + 100 * idx + 15);

                auto gk_xxy_yyy = primBuffer.data(gkoff + 100 * idx + 16);

                auto gk_xxy_yyz = primBuffer.data(gkoff + 100 * idx + 17);

                auto gk_xxy_yzz = primBuffer.data(gkoff + 100 * idx + 18);

                auto gk_xxy_zzz = primBuffer.data(gkoff + 100 * idx + 19);

                auto gk_xxz_xxx = primBuffer.data(gkoff + 100 * idx + 20);

                auto gk_xxz_xxy = primBuffer.data(gkoff + 100 * idx + 21);

                auto gk_xxz_xxz = primBuffer.data(gkoff + 100 * idx + 22);

                auto gk_xxz_xyy = primBuffer.data(gkoff + 100 * idx + 23);

                auto gk_xxz_xyz = primBuffer.data(gkoff + 100 * idx + 24);

                auto gk_xxz_xzz = primBuffer.data(gkoff + 100 * idx + 25);

                auto gk_xxz_yyy = primBuffer.data(gkoff + 100 * idx + 26);

                auto gk_xxz_yyz = primBuffer.data(gkoff + 100 * idx + 27);

                auto gk_xxz_yzz = primBuffer.data(gkoff + 100 * idx + 28);

                auto gk_xxz_zzz = primBuffer.data(gkoff + 100 * idx + 29);

                auto gk_xyy_xxx = primBuffer.data(gkoff + 100 * idx + 30);

                auto gk_xyy_xxy = primBuffer.data(gkoff + 100 * idx + 31);

                auto gk_xyy_xxz = primBuffer.data(gkoff + 100 * idx + 32);

                auto gk_xyy_xyy = primBuffer.data(gkoff + 100 * idx + 33);

                auto gk_xyy_xyz = primBuffer.data(gkoff + 100 * idx + 34);

                auto gk_xyy_xzz = primBuffer.data(gkoff + 100 * idx + 35);

                auto gk_xyy_yyy = primBuffer.data(gkoff + 100 * idx + 36);

                auto gk_xyy_yyz = primBuffer.data(gkoff + 100 * idx + 37);

                auto gk_xyy_yzz = primBuffer.data(gkoff + 100 * idx + 38);

                auto gk_xyy_zzz = primBuffer.data(gkoff + 100 * idx + 39);

                auto gk_xyz_xxx = primBuffer.data(gkoff + 100 * idx + 40);

                auto gk_xyz_xxy = primBuffer.data(gkoff + 100 * idx + 41);

                auto gk_xyz_xxz = primBuffer.data(gkoff + 100 * idx + 42);

                auto gk_xyz_xyy = primBuffer.data(gkoff + 100 * idx + 43);

                auto gk_xyz_xyz = primBuffer.data(gkoff + 100 * idx + 44);

                auto gk_xyz_xzz = primBuffer.data(gkoff + 100 * idx + 45);

                auto gk_xyz_yyy = primBuffer.data(gkoff + 100 * idx + 46);

                auto gk_xyz_yyz = primBuffer.data(gkoff + 100 * idx + 47);

                auto gk_xyz_yzz = primBuffer.data(gkoff + 100 * idx + 48);

                auto gk_xyz_zzz = primBuffer.data(gkoff + 100 * idx + 49);

                auto gk_xzz_xxx = primBuffer.data(gkoff + 100 * idx + 50);

                auto gk_xzz_xxy = primBuffer.data(gkoff + 100 * idx + 51);

                auto gk_xzz_xxz = primBuffer.data(gkoff + 100 * idx + 52);

                auto gk_xzz_xyy = primBuffer.data(gkoff + 100 * idx + 53);

                auto gk_xzz_xyz = primBuffer.data(gkoff + 100 * idx + 54);

                auto gk_xzz_xzz = primBuffer.data(gkoff + 100 * idx + 55);

                auto gk_xzz_yyy = primBuffer.data(gkoff + 100 * idx + 56);

                auto gk_xzz_yyz = primBuffer.data(gkoff + 100 * idx + 57);

                auto gk_xzz_yzz = primBuffer.data(gkoff + 100 * idx + 58);

                auto gk_xzz_zzz = primBuffer.data(gkoff + 100 * idx + 59);

                auto gk_yyy_xxx = primBuffer.data(gkoff + 100 * idx + 60);

                auto gk_yyy_xxy = primBuffer.data(gkoff + 100 * idx + 61);

                auto gk_yyy_xxz = primBuffer.data(gkoff + 100 * idx + 62);

                auto gk_yyy_xyy = primBuffer.data(gkoff + 100 * idx + 63);

                auto gk_yyy_xyz = primBuffer.data(gkoff + 100 * idx + 64);

                auto gk_yyy_xzz = primBuffer.data(gkoff + 100 * idx + 65);

                auto gk_yyy_yyy = primBuffer.data(gkoff + 100 * idx + 66);

                auto gk_yyy_yyz = primBuffer.data(gkoff + 100 * idx + 67);

                auto gk_yyy_yzz = primBuffer.data(gkoff + 100 * idx + 68);

                auto gk_yyy_zzz = primBuffer.data(gkoff + 100 * idx + 69);

                auto gk_yyz_xxx = primBuffer.data(gkoff + 100 * idx + 70);

                auto gk_yyz_xxy = primBuffer.data(gkoff + 100 * idx + 71);

                auto gk_yyz_xxz = primBuffer.data(gkoff + 100 * idx + 72);

                auto gk_yyz_xyy = primBuffer.data(gkoff + 100 * idx + 73);

                auto gk_yyz_xyz = primBuffer.data(gkoff + 100 * idx + 74);

                auto gk_yyz_xzz = primBuffer.data(gkoff + 100 * idx + 75);

                auto gk_yyz_yyy = primBuffer.data(gkoff + 100 * idx + 76);

                auto gk_yyz_yyz = primBuffer.data(gkoff + 100 * idx + 77);

                auto gk_yyz_yzz = primBuffer.data(gkoff + 100 * idx + 78);

                auto gk_yyz_zzz = primBuffer.data(gkoff + 100 * idx + 79);

                auto gk_yzz_xxx = primBuffer.data(gkoff + 100 * idx + 80);

                auto gk_yzz_xxy = primBuffer.data(gkoff + 100 * idx + 81);

                auto gk_yzz_xxz = primBuffer.data(gkoff + 100 * idx + 82);

                auto gk_yzz_xyy = primBuffer.data(gkoff + 100 * idx + 83);

                auto gk_yzz_xyz = primBuffer.data(gkoff + 100 * idx + 84);

                auto gk_yzz_xzz = primBuffer.data(gkoff + 100 * idx + 85);

                auto gk_yzz_yyy = primBuffer.data(gkoff + 100 * idx + 86);

                auto gk_yzz_yyz = primBuffer.data(gkoff + 100 * idx + 87);

                auto gk_yzz_yzz = primBuffer.data(gkoff + 100 * idx + 88);

                auto gk_yzz_zzz = primBuffer.data(gkoff + 100 * idx + 89);

                auto gk_zzz_xxx = primBuffer.data(gkoff + 100 * idx + 90);

                auto gk_zzz_xxy = primBuffer.data(gkoff + 100 * idx + 91);

                auto gk_zzz_xxz = primBuffer.data(gkoff + 100 * idx + 92);

                auto gk_zzz_xyy = primBuffer.data(gkoff + 100 * idx + 93);

                auto gk_zzz_xyz = primBuffer.data(gkoff + 100 * idx + 94);

                auto gk_zzz_xzz = primBuffer.data(gkoff + 100 * idx + 95);

                auto gk_zzz_yyy = primBuffer.data(gkoff + 100 * idx + 96);

                auto gk_zzz_yyz = primBuffer.data(gkoff + 100 * idx + 97);

                auto gk_zzz_yzz = primBuffer.data(gkoff + 100 * idx + 98);

                auto gk_zzz_zzz = primBuffer.data(gkoff + 100 * idx + 99);

                // set up pointers to (D|g(r,r')|SG)^(m) integrals

                auto g20_xx_xxxx = primBuffer.data(g20off + 90 * idx);

                auto g20_xx_xxxy = primBuffer.data(g20off + 90 * idx + 1);

                auto g20_xx_xxxz = primBuffer.data(g20off + 90 * idx + 2);

                auto g20_xx_xxyy = primBuffer.data(g20off + 90 * idx + 3);

                auto g20_xx_xxyz = primBuffer.data(g20off + 90 * idx + 4);

                auto g20_xx_xxzz = primBuffer.data(g20off + 90 * idx + 5);

                auto g20_xx_xyyy = primBuffer.data(g20off + 90 * idx + 6);

                auto g20_xx_xyyz = primBuffer.data(g20off + 90 * idx + 7);

                auto g20_xx_xyzz = primBuffer.data(g20off + 90 * idx + 8);

                auto g20_xx_xzzz = primBuffer.data(g20off + 90 * idx + 9);

                auto g20_xx_yyyy = primBuffer.data(g20off + 90 * idx + 10);

                auto g20_xx_yyyz = primBuffer.data(g20off + 90 * idx + 11);

                auto g20_xx_yyzz = primBuffer.data(g20off + 90 * idx + 12);

                auto g20_xx_yzzz = primBuffer.data(g20off + 90 * idx + 13);

                auto g20_xx_zzzz = primBuffer.data(g20off + 90 * idx + 14);

                auto g20_xy_xxxx = primBuffer.data(g20off + 90 * idx + 15);

                auto g20_xy_xxxy = primBuffer.data(g20off + 90 * idx + 16);

                auto g20_xy_xxxz = primBuffer.data(g20off + 90 * idx + 17);

                auto g20_xy_xxyy = primBuffer.data(g20off + 90 * idx + 18);

                auto g20_xy_xxyz = primBuffer.data(g20off + 90 * idx + 19);

                auto g20_xy_xxzz = primBuffer.data(g20off + 90 * idx + 20);

                auto g20_xy_xyyy = primBuffer.data(g20off + 90 * idx + 21);

                auto g20_xy_xyyz = primBuffer.data(g20off + 90 * idx + 22);

                auto g20_xy_xyzz = primBuffer.data(g20off + 90 * idx + 23);

                auto g20_xy_xzzz = primBuffer.data(g20off + 90 * idx + 24);

                auto g20_xy_yyyy = primBuffer.data(g20off + 90 * idx + 25);

                auto g20_xy_yyyz = primBuffer.data(g20off + 90 * idx + 26);

                auto g20_xy_yyzz = primBuffer.data(g20off + 90 * idx + 27);

                auto g20_xy_yzzz = primBuffer.data(g20off + 90 * idx + 28);

                auto g20_xy_zzzz = primBuffer.data(g20off + 90 * idx + 29);

                auto g20_xz_xxxx = primBuffer.data(g20off + 90 * idx + 30);

                auto g20_xz_xxxy = primBuffer.data(g20off + 90 * idx + 31);

                auto g20_xz_xxxz = primBuffer.data(g20off + 90 * idx + 32);

                auto g20_xz_xxyy = primBuffer.data(g20off + 90 * idx + 33);

                auto g20_xz_xxyz = primBuffer.data(g20off + 90 * idx + 34);

                auto g20_xz_xxzz = primBuffer.data(g20off + 90 * idx + 35);

                auto g20_xz_xyyy = primBuffer.data(g20off + 90 * idx + 36);

                auto g20_xz_xyyz = primBuffer.data(g20off + 90 * idx + 37);

                auto g20_xz_xyzz = primBuffer.data(g20off + 90 * idx + 38);

                auto g20_xz_xzzz = primBuffer.data(g20off + 90 * idx + 39);

                auto g20_xz_yyyy = primBuffer.data(g20off + 90 * idx + 40);

                auto g20_xz_yyyz = primBuffer.data(g20off + 90 * idx + 41);

                auto g20_xz_yyzz = primBuffer.data(g20off + 90 * idx + 42);

                auto g20_xz_yzzz = primBuffer.data(g20off + 90 * idx + 43);

                auto g20_xz_zzzz = primBuffer.data(g20off + 90 * idx + 44);

                auto g20_yy_xxxx = primBuffer.data(g20off + 90 * idx + 45);

                auto g20_yy_xxxy = primBuffer.data(g20off + 90 * idx + 46);

                auto g20_yy_xxxz = primBuffer.data(g20off + 90 * idx + 47);

                auto g20_yy_xxyy = primBuffer.data(g20off + 90 * idx + 48);

                auto g20_yy_xxyz = primBuffer.data(g20off + 90 * idx + 49);

                auto g20_yy_xxzz = primBuffer.data(g20off + 90 * idx + 50);

                auto g20_yy_xyyy = primBuffer.data(g20off + 90 * idx + 51);

                auto g20_yy_xyyz = primBuffer.data(g20off + 90 * idx + 52);

                auto g20_yy_xyzz = primBuffer.data(g20off + 90 * idx + 53);

                auto g20_yy_xzzz = primBuffer.data(g20off + 90 * idx + 54);

                auto g20_yy_yyyy = primBuffer.data(g20off + 90 * idx + 55);

                auto g20_yy_yyyz = primBuffer.data(g20off + 90 * idx + 56);

                auto g20_yy_yyzz = primBuffer.data(g20off + 90 * idx + 57);

                auto g20_yy_yzzz = primBuffer.data(g20off + 90 * idx + 58);

                auto g20_yy_zzzz = primBuffer.data(g20off + 90 * idx + 59);

                auto g20_yz_xxxx = primBuffer.data(g20off + 90 * idx + 60);

                auto g20_yz_xxxy = primBuffer.data(g20off + 90 * idx + 61);

                auto g20_yz_xxxz = primBuffer.data(g20off + 90 * idx + 62);

                auto g20_yz_xxyy = primBuffer.data(g20off + 90 * idx + 63);

                auto g20_yz_xxyz = primBuffer.data(g20off + 90 * idx + 64);

                auto g20_yz_xxzz = primBuffer.data(g20off + 90 * idx + 65);

                auto g20_yz_xyyy = primBuffer.data(g20off + 90 * idx + 66);

                auto g20_yz_xyyz = primBuffer.data(g20off + 90 * idx + 67);

                auto g20_yz_xyzz = primBuffer.data(g20off + 90 * idx + 68);

                auto g20_yz_xzzz = primBuffer.data(g20off + 90 * idx + 69);

                auto g20_yz_yyyy = primBuffer.data(g20off + 90 * idx + 70);

                auto g20_yz_yyyz = primBuffer.data(g20off + 90 * idx + 71);

                auto g20_yz_yyzz = primBuffer.data(g20off + 90 * idx + 72);

                auto g20_yz_yzzz = primBuffer.data(g20off + 90 * idx + 73);

                auto g20_yz_zzzz = primBuffer.data(g20off + 90 * idx + 74);

                auto g20_zz_xxxx = primBuffer.data(g20off + 90 * idx + 75);

                auto g20_zz_xxxy = primBuffer.data(g20off + 90 * idx + 76);

                auto g20_zz_xxxz = primBuffer.data(g20off + 90 * idx + 77);

                auto g20_zz_xxyy = primBuffer.data(g20off + 90 * idx + 78);

                auto g20_zz_xxyz = primBuffer.data(g20off + 90 * idx + 79);

                auto g20_zz_xxzz = primBuffer.data(g20off + 90 * idx + 80);

                auto g20_zz_xyyy = primBuffer.data(g20off + 90 * idx + 81);

                auto g20_zz_xyyz = primBuffer.data(g20off + 90 * idx + 82);

                auto g20_zz_xyzz = primBuffer.data(g20off + 90 * idx + 83);

                auto g20_zz_xzzz = primBuffer.data(g20off + 90 * idx + 84);

                auto g20_zz_yyyy = primBuffer.data(g20off + 90 * idx + 85);

                auto g20_zz_yyyz = primBuffer.data(g20off + 90 * idx + 86);

                auto g20_zz_yyzz = primBuffer.data(g20off + 90 * idx + 87);

                auto g20_zz_yzzz = primBuffer.data(g20off + 90 * idx + 88);

                auto g20_zz_zzzz = primBuffer.data(g20off + 90 * idx + 89);

                // set up pointers to (D|g(r,r')|SG)^(m+1) integrals

                auto g21_xx_xxxx = primBuffer.data(g21off + 90 * idx);

                auto g21_xx_xxxy = primBuffer.data(g21off + 90 * idx + 1);

                auto g21_xx_xxxz = primBuffer.data(g21off + 90 * idx + 2);

                auto g21_xx_xxyy = primBuffer.data(g21off + 90 * idx + 3);

                auto g21_xx_xxyz = primBuffer.data(g21off + 90 * idx + 4);

                auto g21_xx_xxzz = primBuffer.data(g21off + 90 * idx + 5);

                auto g21_xx_xyyy = primBuffer.data(g21off + 90 * idx + 6);

                auto g21_xx_xyyz = primBuffer.data(g21off + 90 * idx + 7);

                auto g21_xx_xyzz = primBuffer.data(g21off + 90 * idx + 8);

                auto g21_xx_xzzz = primBuffer.data(g21off + 90 * idx + 9);

                auto g21_xx_yyyy = primBuffer.data(g21off + 90 * idx + 10);

                auto g21_xx_yyyz = primBuffer.data(g21off + 90 * idx + 11);

                auto g21_xx_yyzz = primBuffer.data(g21off + 90 * idx + 12);

                auto g21_xx_yzzz = primBuffer.data(g21off + 90 * idx + 13);

                auto g21_xx_zzzz = primBuffer.data(g21off + 90 * idx + 14);

                auto g21_xy_xxxx = primBuffer.data(g21off + 90 * idx + 15);

                auto g21_xy_xxxy = primBuffer.data(g21off + 90 * idx + 16);

                auto g21_xy_xxxz = primBuffer.data(g21off + 90 * idx + 17);

                auto g21_xy_xxyy = primBuffer.data(g21off + 90 * idx + 18);

                auto g21_xy_xxyz = primBuffer.data(g21off + 90 * idx + 19);

                auto g21_xy_xxzz = primBuffer.data(g21off + 90 * idx + 20);

                auto g21_xy_xyyy = primBuffer.data(g21off + 90 * idx + 21);

                auto g21_xy_xyyz = primBuffer.data(g21off + 90 * idx + 22);

                auto g21_xy_xyzz = primBuffer.data(g21off + 90 * idx + 23);

                auto g21_xy_xzzz = primBuffer.data(g21off + 90 * idx + 24);

                auto g21_xy_yyyy = primBuffer.data(g21off + 90 * idx + 25);

                auto g21_xy_yyyz = primBuffer.data(g21off + 90 * idx + 26);

                auto g21_xy_yyzz = primBuffer.data(g21off + 90 * idx + 27);

                auto g21_xy_yzzz = primBuffer.data(g21off + 90 * idx + 28);

                auto g21_xy_zzzz = primBuffer.data(g21off + 90 * idx + 29);

                auto g21_xz_xxxx = primBuffer.data(g21off + 90 * idx + 30);

                auto g21_xz_xxxy = primBuffer.data(g21off + 90 * idx + 31);

                auto g21_xz_xxxz = primBuffer.data(g21off + 90 * idx + 32);

                auto g21_xz_xxyy = primBuffer.data(g21off + 90 * idx + 33);

                auto g21_xz_xxyz = primBuffer.data(g21off + 90 * idx + 34);

                auto g21_xz_xxzz = primBuffer.data(g21off + 90 * idx + 35);

                auto g21_xz_xyyy = primBuffer.data(g21off + 90 * idx + 36);

                auto g21_xz_xyyz = primBuffer.data(g21off + 90 * idx + 37);

                auto g21_xz_xyzz = primBuffer.data(g21off + 90 * idx + 38);

                auto g21_xz_xzzz = primBuffer.data(g21off + 90 * idx + 39);

                auto g21_xz_yyyy = primBuffer.data(g21off + 90 * idx + 40);

                auto g21_xz_yyyz = primBuffer.data(g21off + 90 * idx + 41);

                auto g21_xz_yyzz = primBuffer.data(g21off + 90 * idx + 42);

                auto g21_xz_yzzz = primBuffer.data(g21off + 90 * idx + 43);

                auto g21_xz_zzzz = primBuffer.data(g21off + 90 * idx + 44);

                auto g21_yy_xxxx = primBuffer.data(g21off + 90 * idx + 45);

                auto g21_yy_xxxy = primBuffer.data(g21off + 90 * idx + 46);

                auto g21_yy_xxxz = primBuffer.data(g21off + 90 * idx + 47);

                auto g21_yy_xxyy = primBuffer.data(g21off + 90 * idx + 48);

                auto g21_yy_xxyz = primBuffer.data(g21off + 90 * idx + 49);

                auto g21_yy_xxzz = primBuffer.data(g21off + 90 * idx + 50);

                auto g21_yy_xyyy = primBuffer.data(g21off + 90 * idx + 51);

                auto g21_yy_xyyz = primBuffer.data(g21off + 90 * idx + 52);

                auto g21_yy_xyzz = primBuffer.data(g21off + 90 * idx + 53);

                auto g21_yy_xzzz = primBuffer.data(g21off + 90 * idx + 54);

                auto g21_yy_yyyy = primBuffer.data(g21off + 90 * idx + 55);

                auto g21_yy_yyyz = primBuffer.data(g21off + 90 * idx + 56);

                auto g21_yy_yyzz = primBuffer.data(g21off + 90 * idx + 57);

                auto g21_yy_yzzz = primBuffer.data(g21off + 90 * idx + 58);

                auto g21_yy_zzzz = primBuffer.data(g21off + 90 * idx + 59);

                auto g21_yz_xxxx = primBuffer.data(g21off + 90 * idx + 60);

                auto g21_yz_xxxy = primBuffer.data(g21off + 90 * idx + 61);

                auto g21_yz_xxxz = primBuffer.data(g21off + 90 * idx + 62);

                auto g21_yz_xxyy = primBuffer.data(g21off + 90 * idx + 63);

                auto g21_yz_xxyz = primBuffer.data(g21off + 90 * idx + 64);

                auto g21_yz_xxzz = primBuffer.data(g21off + 90 * idx + 65);

                auto g21_yz_xyyy = primBuffer.data(g21off + 90 * idx + 66);

                auto g21_yz_xyyz = primBuffer.data(g21off + 90 * idx + 67);

                auto g21_yz_xyzz = primBuffer.data(g21off + 90 * idx + 68);

                auto g21_yz_xzzz = primBuffer.data(g21off + 90 * idx + 69);

                auto g21_yz_yyyy = primBuffer.data(g21off + 90 * idx + 70);

                auto g21_yz_yyyz = primBuffer.data(g21off + 90 * idx + 71);

                auto g21_yz_yyzz = primBuffer.data(g21off + 90 * idx + 72);

                auto g21_yz_yzzz = primBuffer.data(g21off + 90 * idx + 73);

                auto g21_yz_zzzz = primBuffer.data(g21off + 90 * idx + 74);

                auto g21_zz_xxxx = primBuffer.data(g21off + 90 * idx + 75);

                auto g21_zz_xxxy = primBuffer.data(g21off + 90 * idx + 76);

                auto g21_zz_xxxz = primBuffer.data(g21off + 90 * idx + 77);

                auto g21_zz_xxyy = primBuffer.data(g21off + 90 * idx + 78);

                auto g21_zz_xxyz = primBuffer.data(g21off + 90 * idx + 79);

                auto g21_zz_xxzz = primBuffer.data(g21off + 90 * idx + 80);

                auto g21_zz_xyyy = primBuffer.data(g21off + 90 * idx + 81);

                auto g21_zz_xyyz = primBuffer.data(g21off + 90 * idx + 82);

                auto g21_zz_xyzz = primBuffer.data(g21off + 90 * idx + 83);

                auto g21_zz_xzzz = primBuffer.data(g21off + 90 * idx + 84);

                auto g21_zz_yyyy = primBuffer.data(g21off + 90 * idx + 85);

                auto g21_zz_yyyz = primBuffer.data(g21off + 90 * idx + 86);

                auto g21_zz_yyzz = primBuffer.data(g21off + 90 * idx + 87);

                auto g21_zz_yzzz = primBuffer.data(g21off + 90 * idx + 88);

                auto g21_zz_zzzz = primBuffer.data(g21off + 90 * idx + 89);

                // set up pointers to (F|g(r,r')|SG)^(m+1) integrals

                auto g11_xxx_xxxx = primBuffer.data(g11off + 150 * idx);

                auto g11_xxx_xxxy = primBuffer.data(g11off + 150 * idx + 1);

                auto g11_xxx_xxxz = primBuffer.data(g11off + 150 * idx + 2);

                auto g11_xxx_xxyy = primBuffer.data(g11off + 150 * idx + 3);

                auto g11_xxx_xxyz = primBuffer.data(g11off + 150 * idx + 4);

                auto g11_xxx_xxzz = primBuffer.data(g11off + 150 * idx + 5);

                auto g11_xxx_xyyy = primBuffer.data(g11off + 150 * idx + 6);

                auto g11_xxx_xyyz = primBuffer.data(g11off + 150 * idx + 7);

                auto g11_xxx_xyzz = primBuffer.data(g11off + 150 * idx + 8);

                auto g11_xxx_xzzz = primBuffer.data(g11off + 150 * idx + 9);

                auto g11_xxx_yyyy = primBuffer.data(g11off + 150 * idx + 10);

                auto g11_xxx_yyyz = primBuffer.data(g11off + 150 * idx + 11);

                auto g11_xxx_yyzz = primBuffer.data(g11off + 150 * idx + 12);

                auto g11_xxx_yzzz = primBuffer.data(g11off + 150 * idx + 13);

                auto g11_xxx_zzzz = primBuffer.data(g11off + 150 * idx + 14);

                auto g11_xxy_xxxx = primBuffer.data(g11off + 150 * idx + 15);

                auto g11_xxy_xxxy = primBuffer.data(g11off + 150 * idx + 16);

                auto g11_xxy_xxxz = primBuffer.data(g11off + 150 * idx + 17);

                auto g11_xxy_xxyy = primBuffer.data(g11off + 150 * idx + 18);

                auto g11_xxy_xxyz = primBuffer.data(g11off + 150 * idx + 19);

                auto g11_xxy_xxzz = primBuffer.data(g11off + 150 * idx + 20);

                auto g11_xxy_xyyy = primBuffer.data(g11off + 150 * idx + 21);

                auto g11_xxy_xyyz = primBuffer.data(g11off + 150 * idx + 22);

                auto g11_xxy_xyzz = primBuffer.data(g11off + 150 * idx + 23);

                auto g11_xxy_xzzz = primBuffer.data(g11off + 150 * idx + 24);

                auto g11_xxy_yyyy = primBuffer.data(g11off + 150 * idx + 25);

                auto g11_xxy_yyyz = primBuffer.data(g11off + 150 * idx + 26);

                auto g11_xxy_yyzz = primBuffer.data(g11off + 150 * idx + 27);

                auto g11_xxy_yzzz = primBuffer.data(g11off + 150 * idx + 28);

                auto g11_xxy_zzzz = primBuffer.data(g11off + 150 * idx + 29);

                auto g11_xxz_xxxx = primBuffer.data(g11off + 150 * idx + 30);

                auto g11_xxz_xxxy = primBuffer.data(g11off + 150 * idx + 31);

                auto g11_xxz_xxxz = primBuffer.data(g11off + 150 * idx + 32);

                auto g11_xxz_xxyy = primBuffer.data(g11off + 150 * idx + 33);

                auto g11_xxz_xxyz = primBuffer.data(g11off + 150 * idx + 34);

                auto g11_xxz_xxzz = primBuffer.data(g11off + 150 * idx + 35);

                auto g11_xxz_xyyy = primBuffer.data(g11off + 150 * idx + 36);

                auto g11_xxz_xyyz = primBuffer.data(g11off + 150 * idx + 37);

                auto g11_xxz_xyzz = primBuffer.data(g11off + 150 * idx + 38);

                auto g11_xxz_xzzz = primBuffer.data(g11off + 150 * idx + 39);

                auto g11_xxz_yyyy = primBuffer.data(g11off + 150 * idx + 40);

                auto g11_xxz_yyyz = primBuffer.data(g11off + 150 * idx + 41);

                auto g11_xxz_yyzz = primBuffer.data(g11off + 150 * idx + 42);

                auto g11_xxz_yzzz = primBuffer.data(g11off + 150 * idx + 43);

                auto g11_xxz_zzzz = primBuffer.data(g11off + 150 * idx + 44);

                auto g11_xyy_xxxx = primBuffer.data(g11off + 150 * idx + 45);

                auto g11_xyy_xxxy = primBuffer.data(g11off + 150 * idx + 46);

                auto g11_xyy_xxxz = primBuffer.data(g11off + 150 * idx + 47);

                auto g11_xyy_xxyy = primBuffer.data(g11off + 150 * idx + 48);

                auto g11_xyy_xxyz = primBuffer.data(g11off + 150 * idx + 49);

                auto g11_xyy_xxzz = primBuffer.data(g11off + 150 * idx + 50);

                auto g11_xyy_xyyy = primBuffer.data(g11off + 150 * idx + 51);

                auto g11_xyy_xyyz = primBuffer.data(g11off + 150 * idx + 52);

                auto g11_xyy_xyzz = primBuffer.data(g11off + 150 * idx + 53);

                auto g11_xyy_xzzz = primBuffer.data(g11off + 150 * idx + 54);

                auto g11_xyy_yyyy = primBuffer.data(g11off + 150 * idx + 55);

                auto g11_xyy_yyyz = primBuffer.data(g11off + 150 * idx + 56);

                auto g11_xyy_yyzz = primBuffer.data(g11off + 150 * idx + 57);

                auto g11_xyy_yzzz = primBuffer.data(g11off + 150 * idx + 58);

                auto g11_xyy_zzzz = primBuffer.data(g11off + 150 * idx + 59);

                auto g11_xyz_xxxx = primBuffer.data(g11off + 150 * idx + 60);

                auto g11_xyz_xxxy = primBuffer.data(g11off + 150 * idx + 61);

                auto g11_xyz_xxxz = primBuffer.data(g11off + 150 * idx + 62);

                auto g11_xyz_xxyy = primBuffer.data(g11off + 150 * idx + 63);

                auto g11_xyz_xxyz = primBuffer.data(g11off + 150 * idx + 64);

                auto g11_xyz_xxzz = primBuffer.data(g11off + 150 * idx + 65);

                auto g11_xyz_xyyy = primBuffer.data(g11off + 150 * idx + 66);

                auto g11_xyz_xyyz = primBuffer.data(g11off + 150 * idx + 67);

                auto g11_xyz_xyzz = primBuffer.data(g11off + 150 * idx + 68);

                auto g11_xyz_xzzz = primBuffer.data(g11off + 150 * idx + 69);

                auto g11_xyz_yyyy = primBuffer.data(g11off + 150 * idx + 70);

                auto g11_xyz_yyyz = primBuffer.data(g11off + 150 * idx + 71);

                auto g11_xyz_yyzz = primBuffer.data(g11off + 150 * idx + 72);

                auto g11_xyz_yzzz = primBuffer.data(g11off + 150 * idx + 73);

                auto g11_xyz_zzzz = primBuffer.data(g11off + 150 * idx + 74);

                auto g11_xzz_xxxx = primBuffer.data(g11off + 150 * idx + 75);

                auto g11_xzz_xxxy = primBuffer.data(g11off + 150 * idx + 76);

                auto g11_xzz_xxxz = primBuffer.data(g11off + 150 * idx + 77);

                auto g11_xzz_xxyy = primBuffer.data(g11off + 150 * idx + 78);

                auto g11_xzz_xxyz = primBuffer.data(g11off + 150 * idx + 79);

                auto g11_xzz_xxzz = primBuffer.data(g11off + 150 * idx + 80);

                auto g11_xzz_xyyy = primBuffer.data(g11off + 150 * idx + 81);

                auto g11_xzz_xyyz = primBuffer.data(g11off + 150 * idx + 82);

                auto g11_xzz_xyzz = primBuffer.data(g11off + 150 * idx + 83);

                auto g11_xzz_xzzz = primBuffer.data(g11off + 150 * idx + 84);

                auto g11_xzz_yyyy = primBuffer.data(g11off + 150 * idx + 85);

                auto g11_xzz_yyyz = primBuffer.data(g11off + 150 * idx + 86);

                auto g11_xzz_yyzz = primBuffer.data(g11off + 150 * idx + 87);

                auto g11_xzz_yzzz = primBuffer.data(g11off + 150 * idx + 88);

                auto g11_xzz_zzzz = primBuffer.data(g11off + 150 * idx + 89);

                auto g11_yyy_xxxx = primBuffer.data(g11off + 150 * idx + 90);

                auto g11_yyy_xxxy = primBuffer.data(g11off + 150 * idx + 91);

                auto g11_yyy_xxxz = primBuffer.data(g11off + 150 * idx + 92);

                auto g11_yyy_xxyy = primBuffer.data(g11off + 150 * idx + 93);

                auto g11_yyy_xxyz = primBuffer.data(g11off + 150 * idx + 94);

                auto g11_yyy_xxzz = primBuffer.data(g11off + 150 * idx + 95);

                auto g11_yyy_xyyy = primBuffer.data(g11off + 150 * idx + 96);

                auto g11_yyy_xyyz = primBuffer.data(g11off + 150 * idx + 97);

                auto g11_yyy_xyzz = primBuffer.data(g11off + 150 * idx + 98);

                auto g11_yyy_xzzz = primBuffer.data(g11off + 150 * idx + 99);

                auto g11_yyy_yyyy = primBuffer.data(g11off + 150 * idx + 100);

                auto g11_yyy_yyyz = primBuffer.data(g11off + 150 * idx + 101);

                auto g11_yyy_yyzz = primBuffer.data(g11off + 150 * idx + 102);

                auto g11_yyy_yzzz = primBuffer.data(g11off + 150 * idx + 103);

                auto g11_yyy_zzzz = primBuffer.data(g11off + 150 * idx + 104);

                auto g11_yyz_xxxx = primBuffer.data(g11off + 150 * idx + 105);

                auto g11_yyz_xxxy = primBuffer.data(g11off + 150 * idx + 106);

                auto g11_yyz_xxxz = primBuffer.data(g11off + 150 * idx + 107);

                auto g11_yyz_xxyy = primBuffer.data(g11off + 150 * idx + 108);

                auto g11_yyz_xxyz = primBuffer.data(g11off + 150 * idx + 109);

                auto g11_yyz_xxzz = primBuffer.data(g11off + 150 * idx + 110);

                auto g11_yyz_xyyy = primBuffer.data(g11off + 150 * idx + 111);

                auto g11_yyz_xyyz = primBuffer.data(g11off + 150 * idx + 112);

                auto g11_yyz_xyzz = primBuffer.data(g11off + 150 * idx + 113);

                auto g11_yyz_xzzz = primBuffer.data(g11off + 150 * idx + 114);

                auto g11_yyz_yyyy = primBuffer.data(g11off + 150 * idx + 115);

                auto g11_yyz_yyyz = primBuffer.data(g11off + 150 * idx + 116);

                auto g11_yyz_yyzz = primBuffer.data(g11off + 150 * idx + 117);

                auto g11_yyz_yzzz = primBuffer.data(g11off + 150 * idx + 118);

                auto g11_yyz_zzzz = primBuffer.data(g11off + 150 * idx + 119);

                auto g11_yzz_xxxx = primBuffer.data(g11off + 150 * idx + 120);

                auto g11_yzz_xxxy = primBuffer.data(g11off + 150 * idx + 121);

                auto g11_yzz_xxxz = primBuffer.data(g11off + 150 * idx + 122);

                auto g11_yzz_xxyy = primBuffer.data(g11off + 150 * idx + 123);

                auto g11_yzz_xxyz = primBuffer.data(g11off + 150 * idx + 124);

                auto g11_yzz_xxzz = primBuffer.data(g11off + 150 * idx + 125);

                auto g11_yzz_xyyy = primBuffer.data(g11off + 150 * idx + 126);

                auto g11_yzz_xyyz = primBuffer.data(g11off + 150 * idx + 127);

                auto g11_yzz_xyzz = primBuffer.data(g11off + 150 * idx + 128);

                auto g11_yzz_xzzz = primBuffer.data(g11off + 150 * idx + 129);

                auto g11_yzz_yyyy = primBuffer.data(g11off + 150 * idx + 130);

                auto g11_yzz_yyyz = primBuffer.data(g11off + 150 * idx + 131);

                auto g11_yzz_yyzz = primBuffer.data(g11off + 150 * idx + 132);

                auto g11_yzz_yzzz = primBuffer.data(g11off + 150 * idx + 133);

                auto g11_yzz_zzzz = primBuffer.data(g11off + 150 * idx + 134);

                auto g11_zzz_xxxx = primBuffer.data(g11off + 150 * idx + 135);

                auto g11_zzz_xxxy = primBuffer.data(g11off + 150 * idx + 136);

                auto g11_zzz_xxxz = primBuffer.data(g11off + 150 * idx + 137);

                auto g11_zzz_xxyy = primBuffer.data(g11off + 150 * idx + 138);

                auto g11_zzz_xxyz = primBuffer.data(g11off + 150 * idx + 139);

                auto g11_zzz_xxzz = primBuffer.data(g11off + 150 * idx + 140);

                auto g11_zzz_xyyy = primBuffer.data(g11off + 150 * idx + 141);

                auto g11_zzz_xyyz = primBuffer.data(g11off + 150 * idx + 142);

                auto g11_zzz_xyzz = primBuffer.data(g11off + 150 * idx + 143);

                auto g11_zzz_xzzz = primBuffer.data(g11off + 150 * idx + 144);

                auto g11_zzz_yyyy = primBuffer.data(g11off + 150 * idx + 145);

                auto g11_zzz_yyyz = primBuffer.data(g11off + 150 * idx + 146);

                auto g11_zzz_yyzz = primBuffer.data(g11off + 150 * idx + 147);

                auto g11_zzz_yzzz = primBuffer.data(g11off + 150 * idx + 148);

                auto g11_zzz_zzzz = primBuffer.data(g11off + 150 * idx + 149);

                // set up pointers to (G|g(r,r')|SG)^(m) integrals

                auto g_xxxx_xxxx = primBuffer.data(goff + 225 * idx);

                auto g_xxxx_xxxy = primBuffer.data(goff + 225 * idx + 1);

                auto g_xxxx_xxxz = primBuffer.data(goff + 225 * idx + 2);

                auto g_xxxx_xxyy = primBuffer.data(goff + 225 * idx + 3);

                auto g_xxxx_xxyz = primBuffer.data(goff + 225 * idx + 4);

                auto g_xxxx_xxzz = primBuffer.data(goff + 225 * idx + 5);

                auto g_xxxx_xyyy = primBuffer.data(goff + 225 * idx + 6);

                auto g_xxxx_xyyz = primBuffer.data(goff + 225 * idx + 7);

                auto g_xxxx_xyzz = primBuffer.data(goff + 225 * idx + 8);

                auto g_xxxx_xzzz = primBuffer.data(goff + 225 * idx + 9);

                auto g_xxxx_yyyy = primBuffer.data(goff + 225 * idx + 10);

                auto g_xxxx_yyyz = primBuffer.data(goff + 225 * idx + 11);

                auto g_xxxx_yyzz = primBuffer.data(goff + 225 * idx + 12);

                auto g_xxxx_yzzz = primBuffer.data(goff + 225 * idx + 13);

                auto g_xxxx_zzzz = primBuffer.data(goff + 225 * idx + 14);

                auto g_xxxy_xxxx = primBuffer.data(goff + 225 * idx + 15);

                auto g_xxxy_xxxy = primBuffer.data(goff + 225 * idx + 16);

                auto g_xxxy_xxxz = primBuffer.data(goff + 225 * idx + 17);

                auto g_xxxy_xxyy = primBuffer.data(goff + 225 * idx + 18);

                auto g_xxxy_xxyz = primBuffer.data(goff + 225 * idx + 19);

                auto g_xxxy_xxzz = primBuffer.data(goff + 225 * idx + 20);

                auto g_xxxy_xyyy = primBuffer.data(goff + 225 * idx + 21);

                auto g_xxxy_xyyz = primBuffer.data(goff + 225 * idx + 22);

                auto g_xxxy_xyzz = primBuffer.data(goff + 225 * idx + 23);

                auto g_xxxy_xzzz = primBuffer.data(goff + 225 * idx + 24);

                auto g_xxxy_yyyy = primBuffer.data(goff + 225 * idx + 25);

                auto g_xxxy_yyyz = primBuffer.data(goff + 225 * idx + 26);

                auto g_xxxy_yyzz = primBuffer.data(goff + 225 * idx + 27);

                auto g_xxxy_yzzz = primBuffer.data(goff + 225 * idx + 28);

                auto g_xxxy_zzzz = primBuffer.data(goff + 225 * idx + 29);

                auto g_xxxz_xxxx = primBuffer.data(goff + 225 * idx + 30);

                auto g_xxxz_xxxy = primBuffer.data(goff + 225 * idx + 31);

                auto g_xxxz_xxxz = primBuffer.data(goff + 225 * idx + 32);

                auto g_xxxz_xxyy = primBuffer.data(goff + 225 * idx + 33);

                auto g_xxxz_xxyz = primBuffer.data(goff + 225 * idx + 34);

                auto g_xxxz_xxzz = primBuffer.data(goff + 225 * idx + 35);

                auto g_xxxz_xyyy = primBuffer.data(goff + 225 * idx + 36);

                auto g_xxxz_xyyz = primBuffer.data(goff + 225 * idx + 37);

                auto g_xxxz_xyzz = primBuffer.data(goff + 225 * idx + 38);

                auto g_xxxz_xzzz = primBuffer.data(goff + 225 * idx + 39);

                auto g_xxxz_yyyy = primBuffer.data(goff + 225 * idx + 40);

                auto g_xxxz_yyyz = primBuffer.data(goff + 225 * idx + 41);

                auto g_xxxz_yyzz = primBuffer.data(goff + 225 * idx + 42);

                auto g_xxxz_yzzz = primBuffer.data(goff + 225 * idx + 43);

                auto g_xxxz_zzzz = primBuffer.data(goff + 225 * idx + 44);

                auto g_xxyy_xxxx = primBuffer.data(goff + 225 * idx + 45);

                auto g_xxyy_xxxy = primBuffer.data(goff + 225 * idx + 46);

                auto g_xxyy_xxxz = primBuffer.data(goff + 225 * idx + 47);

                auto g_xxyy_xxyy = primBuffer.data(goff + 225 * idx + 48);

                auto g_xxyy_xxyz = primBuffer.data(goff + 225 * idx + 49);

                auto g_xxyy_xxzz = primBuffer.data(goff + 225 * idx + 50);

                auto g_xxyy_xyyy = primBuffer.data(goff + 225 * idx + 51);

                auto g_xxyy_xyyz = primBuffer.data(goff + 225 * idx + 52);

                auto g_xxyy_xyzz = primBuffer.data(goff + 225 * idx + 53);

                auto g_xxyy_xzzz = primBuffer.data(goff + 225 * idx + 54);

                auto g_xxyy_yyyy = primBuffer.data(goff + 225 * idx + 55);

                auto g_xxyy_yyyz = primBuffer.data(goff + 225 * idx + 56);

                auto g_xxyy_yyzz = primBuffer.data(goff + 225 * idx + 57);

                auto g_xxyy_yzzz = primBuffer.data(goff + 225 * idx + 58);

                auto g_xxyy_zzzz = primBuffer.data(goff + 225 * idx + 59);

                auto g_xxyz_xxxx = primBuffer.data(goff + 225 * idx + 60);

                auto g_xxyz_xxxy = primBuffer.data(goff + 225 * idx + 61);

                auto g_xxyz_xxxz = primBuffer.data(goff + 225 * idx + 62);

                auto g_xxyz_xxyy = primBuffer.data(goff + 225 * idx + 63);

                auto g_xxyz_xxyz = primBuffer.data(goff + 225 * idx + 64);

                auto g_xxyz_xxzz = primBuffer.data(goff + 225 * idx + 65);

                auto g_xxyz_xyyy = primBuffer.data(goff + 225 * idx + 66);

                auto g_xxyz_xyyz = primBuffer.data(goff + 225 * idx + 67);

                auto g_xxyz_xyzz = primBuffer.data(goff + 225 * idx + 68);

                auto g_xxyz_xzzz = primBuffer.data(goff + 225 * idx + 69);

                auto g_xxyz_yyyy = primBuffer.data(goff + 225 * idx + 70);

                auto g_xxyz_yyyz = primBuffer.data(goff + 225 * idx + 71);

                auto g_xxyz_yyzz = primBuffer.data(goff + 225 * idx + 72);

                auto g_xxyz_yzzz = primBuffer.data(goff + 225 * idx + 73);

                auto g_xxyz_zzzz = primBuffer.data(goff + 225 * idx + 74);

                auto g_xxzz_xxxx = primBuffer.data(goff + 225 * idx + 75);

                auto g_xxzz_xxxy = primBuffer.data(goff + 225 * idx + 76);

                auto g_xxzz_xxxz = primBuffer.data(goff + 225 * idx + 77);

                auto g_xxzz_xxyy = primBuffer.data(goff + 225 * idx + 78);

                auto g_xxzz_xxyz = primBuffer.data(goff + 225 * idx + 79);

                auto g_xxzz_xxzz = primBuffer.data(goff + 225 * idx + 80);

                auto g_xxzz_xyyy = primBuffer.data(goff + 225 * idx + 81);

                auto g_xxzz_xyyz = primBuffer.data(goff + 225 * idx + 82);

                auto g_xxzz_xyzz = primBuffer.data(goff + 225 * idx + 83);

                auto g_xxzz_xzzz = primBuffer.data(goff + 225 * idx + 84);

                auto g_xxzz_yyyy = primBuffer.data(goff + 225 * idx + 85);

                auto g_xxzz_yyyz = primBuffer.data(goff + 225 * idx + 86);

                auto g_xxzz_yyzz = primBuffer.data(goff + 225 * idx + 87);

                auto g_xxzz_yzzz = primBuffer.data(goff + 225 * idx + 88);

                auto g_xxzz_zzzz = primBuffer.data(goff + 225 * idx + 89);

                auto g_xyyy_xxxx = primBuffer.data(goff + 225 * idx + 90);

                auto g_xyyy_xxxy = primBuffer.data(goff + 225 * idx + 91);

                auto g_xyyy_xxxz = primBuffer.data(goff + 225 * idx + 92);

                auto g_xyyy_xxyy = primBuffer.data(goff + 225 * idx + 93);

                auto g_xyyy_xxyz = primBuffer.data(goff + 225 * idx + 94);

                auto g_xyyy_xxzz = primBuffer.data(goff + 225 * idx + 95);

                auto g_xyyy_xyyy = primBuffer.data(goff + 225 * idx + 96);

                auto g_xyyy_xyyz = primBuffer.data(goff + 225 * idx + 97);

                auto g_xyyy_xyzz = primBuffer.data(goff + 225 * idx + 98);

                auto g_xyyy_xzzz = primBuffer.data(goff + 225 * idx + 99);

                auto g_xyyy_yyyy = primBuffer.data(goff + 225 * idx + 100);

                auto g_xyyy_yyyz = primBuffer.data(goff + 225 * idx + 101);

                auto g_xyyy_yyzz = primBuffer.data(goff + 225 * idx + 102);

                auto g_xyyy_yzzz = primBuffer.data(goff + 225 * idx + 103);

                auto g_xyyy_zzzz = primBuffer.data(goff + 225 * idx + 104);

                auto g_xyyz_xxxx = primBuffer.data(goff + 225 * idx + 105);

                auto g_xyyz_xxxy = primBuffer.data(goff + 225 * idx + 106);

                auto g_xyyz_xxxz = primBuffer.data(goff + 225 * idx + 107);

                auto g_xyyz_xxyy = primBuffer.data(goff + 225 * idx + 108);

                auto g_xyyz_xxyz = primBuffer.data(goff + 225 * idx + 109);

                auto g_xyyz_xxzz = primBuffer.data(goff + 225 * idx + 110);

                auto g_xyyz_xyyy = primBuffer.data(goff + 225 * idx + 111);

                auto g_xyyz_xyyz = primBuffer.data(goff + 225 * idx + 112);

                auto g_xyyz_xyzz = primBuffer.data(goff + 225 * idx + 113);

                auto g_xyyz_xzzz = primBuffer.data(goff + 225 * idx + 114);

                auto g_xyyz_yyyy = primBuffer.data(goff + 225 * idx + 115);

                auto g_xyyz_yyyz = primBuffer.data(goff + 225 * idx + 116);

                auto g_xyyz_yyzz = primBuffer.data(goff + 225 * idx + 117);

                auto g_xyyz_yzzz = primBuffer.data(goff + 225 * idx + 118);

                auto g_xyyz_zzzz = primBuffer.data(goff + 225 * idx + 119);

                auto g_xyzz_xxxx = primBuffer.data(goff + 225 * idx + 120);

                auto g_xyzz_xxxy = primBuffer.data(goff + 225 * idx + 121);

                auto g_xyzz_xxxz = primBuffer.data(goff + 225 * idx + 122);

                auto g_xyzz_xxyy = primBuffer.data(goff + 225 * idx + 123);

                auto g_xyzz_xxyz = primBuffer.data(goff + 225 * idx + 124);

                auto g_xyzz_xxzz = primBuffer.data(goff + 225 * idx + 125);

                auto g_xyzz_xyyy = primBuffer.data(goff + 225 * idx + 126);

                auto g_xyzz_xyyz = primBuffer.data(goff + 225 * idx + 127);

                auto g_xyzz_xyzz = primBuffer.data(goff + 225 * idx + 128);

                auto g_xyzz_xzzz = primBuffer.data(goff + 225 * idx + 129);

                auto g_xyzz_yyyy = primBuffer.data(goff + 225 * idx + 130);

                auto g_xyzz_yyyz = primBuffer.data(goff + 225 * idx + 131);

                auto g_xyzz_yyzz = primBuffer.data(goff + 225 * idx + 132);

                auto g_xyzz_yzzz = primBuffer.data(goff + 225 * idx + 133);

                auto g_xyzz_zzzz = primBuffer.data(goff + 225 * idx + 134);

                auto g_xzzz_xxxx = primBuffer.data(goff + 225 * idx + 135);

                auto g_xzzz_xxxy = primBuffer.data(goff + 225 * idx + 136);

                auto g_xzzz_xxxz = primBuffer.data(goff + 225 * idx + 137);

                auto g_xzzz_xxyy = primBuffer.data(goff + 225 * idx + 138);

                auto g_xzzz_xxyz = primBuffer.data(goff + 225 * idx + 139);

                auto g_xzzz_xxzz = primBuffer.data(goff + 225 * idx + 140);

                auto g_xzzz_xyyy = primBuffer.data(goff + 225 * idx + 141);

                auto g_xzzz_xyyz = primBuffer.data(goff + 225 * idx + 142);

                auto g_xzzz_xyzz = primBuffer.data(goff + 225 * idx + 143);

                auto g_xzzz_xzzz = primBuffer.data(goff + 225 * idx + 144);

                auto g_xzzz_yyyy = primBuffer.data(goff + 225 * idx + 145);

                auto g_xzzz_yyyz = primBuffer.data(goff + 225 * idx + 146);

                auto g_xzzz_yyzz = primBuffer.data(goff + 225 * idx + 147);

                auto g_xzzz_yzzz = primBuffer.data(goff + 225 * idx + 148);

                auto g_xzzz_zzzz = primBuffer.data(goff + 225 * idx + 149);

                auto g_yyyy_xxxx = primBuffer.data(goff + 225 * idx + 150);

                auto g_yyyy_xxxy = primBuffer.data(goff + 225 * idx + 151);

                auto g_yyyy_xxxz = primBuffer.data(goff + 225 * idx + 152);

                auto g_yyyy_xxyy = primBuffer.data(goff + 225 * idx + 153);

                auto g_yyyy_xxyz = primBuffer.data(goff + 225 * idx + 154);

                auto g_yyyy_xxzz = primBuffer.data(goff + 225 * idx + 155);

                auto g_yyyy_xyyy = primBuffer.data(goff + 225 * idx + 156);

                auto g_yyyy_xyyz = primBuffer.data(goff + 225 * idx + 157);

                auto g_yyyy_xyzz = primBuffer.data(goff + 225 * idx + 158);

                auto g_yyyy_xzzz = primBuffer.data(goff + 225 * idx + 159);

                auto g_yyyy_yyyy = primBuffer.data(goff + 225 * idx + 160);

                auto g_yyyy_yyyz = primBuffer.data(goff + 225 * idx + 161);

                auto g_yyyy_yyzz = primBuffer.data(goff + 225 * idx + 162);

                auto g_yyyy_yzzz = primBuffer.data(goff + 225 * idx + 163);

                auto g_yyyy_zzzz = primBuffer.data(goff + 225 * idx + 164);

                auto g_yyyz_xxxx = primBuffer.data(goff + 225 * idx + 165);

                auto g_yyyz_xxxy = primBuffer.data(goff + 225 * idx + 166);

                auto g_yyyz_xxxz = primBuffer.data(goff + 225 * idx + 167);

                auto g_yyyz_xxyy = primBuffer.data(goff + 225 * idx + 168);

                auto g_yyyz_xxyz = primBuffer.data(goff + 225 * idx + 169);

                auto g_yyyz_xxzz = primBuffer.data(goff + 225 * idx + 170);

                auto g_yyyz_xyyy = primBuffer.data(goff + 225 * idx + 171);

                auto g_yyyz_xyyz = primBuffer.data(goff + 225 * idx + 172);

                auto g_yyyz_xyzz = primBuffer.data(goff + 225 * idx + 173);

                auto g_yyyz_xzzz = primBuffer.data(goff + 225 * idx + 174);

                auto g_yyyz_yyyy = primBuffer.data(goff + 225 * idx + 175);

                auto g_yyyz_yyyz = primBuffer.data(goff + 225 * idx + 176);

                auto g_yyyz_yyzz = primBuffer.data(goff + 225 * idx + 177);

                auto g_yyyz_yzzz = primBuffer.data(goff + 225 * idx + 178);

                auto g_yyyz_zzzz = primBuffer.data(goff + 225 * idx + 179);

                auto g_yyzz_xxxx = primBuffer.data(goff + 225 * idx + 180);

                auto g_yyzz_xxxy = primBuffer.data(goff + 225 * idx + 181);

                auto g_yyzz_xxxz = primBuffer.data(goff + 225 * idx + 182);

                auto g_yyzz_xxyy = primBuffer.data(goff + 225 * idx + 183);

                auto g_yyzz_xxyz = primBuffer.data(goff + 225 * idx + 184);

                auto g_yyzz_xxzz = primBuffer.data(goff + 225 * idx + 185);

                auto g_yyzz_xyyy = primBuffer.data(goff + 225 * idx + 186);

                auto g_yyzz_xyyz = primBuffer.data(goff + 225 * idx + 187);

                auto g_yyzz_xyzz = primBuffer.data(goff + 225 * idx + 188);

                auto g_yyzz_xzzz = primBuffer.data(goff + 225 * idx + 189);

                auto g_yyzz_yyyy = primBuffer.data(goff + 225 * idx + 190);

                auto g_yyzz_yyyz = primBuffer.data(goff + 225 * idx + 191);

                auto g_yyzz_yyzz = primBuffer.data(goff + 225 * idx + 192);

                auto g_yyzz_yzzz = primBuffer.data(goff + 225 * idx + 193);

                auto g_yyzz_zzzz = primBuffer.data(goff + 225 * idx + 194);

                auto g_yzzz_xxxx = primBuffer.data(goff + 225 * idx + 195);

                auto g_yzzz_xxxy = primBuffer.data(goff + 225 * idx + 196);

                auto g_yzzz_xxxz = primBuffer.data(goff + 225 * idx + 197);

                auto g_yzzz_xxyy = primBuffer.data(goff + 225 * idx + 198);

                auto g_yzzz_xxyz = primBuffer.data(goff + 225 * idx + 199);

                auto g_yzzz_xxzz = primBuffer.data(goff + 225 * idx + 200);

                auto g_yzzz_xyyy = primBuffer.data(goff + 225 * idx + 201);

                auto g_yzzz_xyyz = primBuffer.data(goff + 225 * idx + 202);

                auto g_yzzz_xyzz = primBuffer.data(goff + 225 * idx + 203);

                auto g_yzzz_xzzz = primBuffer.data(goff + 225 * idx + 204);

                auto g_yzzz_yyyy = primBuffer.data(goff + 225 * idx + 205);

                auto g_yzzz_yyyz = primBuffer.data(goff + 225 * idx + 206);

                auto g_yzzz_yyzz = primBuffer.data(goff + 225 * idx + 207);

                auto g_yzzz_yzzz = primBuffer.data(goff + 225 * idx + 208);

                auto g_yzzz_zzzz = primBuffer.data(goff + 225 * idx + 209);

                auto g_zzzz_xxxx = primBuffer.data(goff + 225 * idx + 210);

                auto g_zzzz_xxxy = primBuffer.data(goff + 225 * idx + 211);

                auto g_zzzz_xxxz = primBuffer.data(goff + 225 * idx + 212);

                auto g_zzzz_xxyy = primBuffer.data(goff + 225 * idx + 213);

                auto g_zzzz_xxyz = primBuffer.data(goff + 225 * idx + 214);

                auto g_zzzz_xxzz = primBuffer.data(goff + 225 * idx + 215);

                auto g_zzzz_xyyy = primBuffer.data(goff + 225 * idx + 216);

                auto g_zzzz_xyyz = primBuffer.data(goff + 225 * idx + 217);

                auto g_zzzz_xyzz = primBuffer.data(goff + 225 * idx + 218);

                auto g_zzzz_xzzz = primBuffer.data(goff + 225 * idx + 219);

                auto g_zzzz_yyyy = primBuffer.data(goff + 225 * idx + 220);

                auto g_zzzz_yyyz = primBuffer.data(goff + 225 * idx + 221);

                auto g_zzzz_yyzz = primBuffer.data(goff + 225 * idx + 222);

                auto g_zzzz_yzzz = primBuffer.data(goff + 225 * idx + 223);

                auto g_zzzz_zzzz = primBuffer.data(goff + 225 * idx + 224);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xxx,\
                                         gk_xxx_xxy, gk_xxx_xxz, gk_xxx_xyy, gk_xxx_xyz,\
                                         gk_xxx_xzz, gk_xxx_yyy, gk_xxx_yyz, gk_xxx_yzz,\
                                         gk_xxx_zzz, gk_xxy_xxx, gk_xxy_xxy, gk_xxy_xxz,\
                                         gk_xxy_xyy, gk_xxy_xyz, gk_xxy_xzz, gk_xxy_yyy,\
                                         gk_xxy_yyz, gk_xxy_yzz, gk_xxy_zzz, gk_xxz_xxx,\
                                         gk_xxz_xxy, gk_xxz_xxz, gk_xxz_xyy, gk_xxz_xyz,\
                                         gk_xxz_xzz, gk_xxz_yyy, gk_xxz_yyz, gk_xxz_yzz,\
                                         gk_xxz_zzz, gk_xyy_xxx, gk_xyy_xxy, gk_xyy_xxz,\
                                         gk_xyy_xyy, gk_xyy_xyz, gk_xyy_xzz, gk_xyy_yyy,\
                                         gk_xyy_yyz, gk_xyy_yzz, gk_xyy_zzz, gk_xyz_xxx,\
                                         gk_xyz_xxy, gk_xyz_xxz, gk_xyz_xyy, gk_xyz_xyz,\
                                         gk_xyz_xzz, gk_xyz_yyy, gk_xyz_yyz, gk_xyz_yzz,\
                                         gk_xyz_zzz, gk_xzz_xxx, gk_xzz_xxy, gk_xzz_xxz,\
                                         gk_xzz_xyy, gk_xzz_xyz, gk_xzz_xzz, gk_xzz_yyy,\
                                         gk_xzz_yyz, gk_xzz_yzz, gk_xzz_zzz, gk_yyy_xxx,\
                                         gk_yyy_xxy, gk_yyy_xxz, gk_yyy_xyy, gk_yyy_xyz,\
                                         gk_yyy_xzz, gk_yyy_yyy, gk_yyy_yyz, gk_yyy_yzz,\
                                         gk_yyy_zzz, gk_yyz_xxx, gk_yyz_xxy, gk_yyz_xxz,\
                                         gk_yyz_xyy, gk_yyz_xyz, gk_yyz_xzz, gk_yyz_yyy,\
                                         gk_yyz_yyz, gk_yyz_yzz, gk_yyz_zzz, gk_yzz_xxx,\
                                         gk_yzz_xxy, gk_yzz_xxz, gk_yzz_xyy, gk_yzz_xyz,\
                                         gk_yzz_xzz, gk_yzz_yyy, gk_yzz_yyz, gk_yzz_yzz,\
                                         gk_yzz_zzz, gk_zzz_xxx, gk_zzz_xxy, gk_zzz_xxz,\
                                         gk_zzz_xyy, gk_zzz_xyz, gk_zzz_xzz, gk_zzz_yyy,\
                                         gk_zzz_yyz, gk_zzz_yzz, gk_zzz_zzz, g20_xx_xxxx,\
                                         g20_xx_xxxy, g20_xx_xxxz, g20_xx_xxyy,\
                                         g20_xx_xxyz, g20_xx_xxzz, g20_xx_xyyy,\
                                         g20_xx_xyyz, g20_xx_xyzz, g20_xx_xzzz,\
                                         g20_xx_yyyy, g20_xx_yyyz, g20_xx_yyzz,\
                                         g20_xx_yzzz, g20_xx_zzzz, g20_xy_xxxx,\
                                         g20_xy_xxxy, g20_xy_xxxz, g20_xy_xxyy,\
                                         g20_xy_xxyz, g20_xy_xxzz, g20_xy_xyyy,\
                                         g20_xy_xyyz, g20_xy_xyzz, g20_xy_xzzz,\
                                         g20_xy_yyyy, g20_xy_yyyz, g20_xy_yyzz,\
                                         g20_xy_yzzz, g20_xy_zzzz, g20_xz_xxxx,\
                                         g20_xz_xxxy, g20_xz_xxxz, g20_xz_xxyy,\
                                         g20_xz_xxyz, g20_xz_xxzz, g20_xz_xyyy,\
                                         g20_xz_xyyz, g20_xz_xyzz, g20_xz_xzzz,\
                                         g20_xz_yyyy, g20_xz_yyyz, g20_xz_yyzz,\
                                         g20_xz_yzzz, g20_xz_zzzz, g20_yy_xxxx,\
                                         g20_yy_xxxy, g20_yy_xxxz, g20_yy_xxyy,\
                                         g20_yy_xxyz, g20_yy_xxzz, g20_yy_xyyy,\
                                         g20_yy_xyyz, g20_yy_xyzz, g20_yy_xzzz,\
                                         g20_yy_yyyy, g20_yy_yyyz, g20_yy_yyzz,\
                                         g20_yy_yzzz, g20_yy_zzzz, g20_yz_xxxx,\
                                         g20_yz_xxxy, g20_yz_xxxz, g20_yz_xxyy,\
                                         g20_yz_xxyz, g20_yz_xxzz, g20_yz_xyyy,\
                                         g20_yz_xyyz, g20_yz_xyzz, g20_yz_xzzz,\
                                         g20_yz_yyyy, g20_yz_yyyz, g20_yz_yyzz,\
                                         g20_yz_yzzz, g20_yz_zzzz, g20_zz_xxxx,\
                                         g20_zz_xxxy, g20_zz_xxxz, g20_zz_xxyy,\
                                         g20_zz_xxyz, g20_zz_xxzz, g20_zz_xyyy,\
                                         g20_zz_xyyz, g20_zz_xyzz, g20_zz_xzzz,\
                                         g20_zz_yyyy, g20_zz_yyyz, g20_zz_yyzz,\
                                         g20_zz_yzzz, g20_zz_zzzz, g21_xx_xxxx,\
                                         g21_xx_xxxy, g21_xx_xxxz, g21_xx_xxyy,\
                                         g21_xx_xxyz, g21_xx_xxzz, g21_xx_xyyy,\
                                         g21_xx_xyyz, g21_xx_xyzz, g21_xx_xzzz,\
                                         g21_xx_yyyy, g21_xx_yyyz, g21_xx_yyzz,\
                                         g21_xx_yzzz, g21_xx_zzzz, g21_xy_xxxx,\
                                         g21_xy_xxxy, g21_xy_xxxz, g21_xy_xxyy,\
                                         g21_xy_xxyz, g21_xy_xxzz, g21_xy_xyyy,\
                                         g21_xy_xyyz, g21_xy_xyzz, g21_xy_xzzz,\
                                         g21_xy_yyyy, g21_xy_yyyz, g21_xy_yyzz,\
                                         g21_xy_yzzz, g21_xy_zzzz, g21_xz_xxxx,\
                                         g21_xz_xxxy, g21_xz_xxxz, g21_xz_xxyy,\
                                         g21_xz_xxyz, g21_xz_xxzz, g21_xz_xyyy,\
                                         g21_xz_xyyz, g21_xz_xyzz, g21_xz_xzzz,\
                                         g21_xz_yyyy, g21_xz_yyyz, g21_xz_yyzz,\
                                         g21_xz_yzzz, g21_xz_zzzz, g21_yy_xxxx,\
                                         g21_yy_xxxy, g21_yy_xxxz, g21_yy_xxyy,\
                                         g21_yy_xxyz, g21_yy_xxzz, g21_yy_xyyy,\
                                         g21_yy_xyyz, g21_yy_xyzz, g21_yy_xzzz,\
                                         g21_yy_yyyy, g21_yy_yyyz, g21_yy_yyzz,\
                                         g21_yy_yzzz, g21_yy_zzzz, g21_yz_xxxx,\
                                         g21_yz_xxxy, g21_yz_xxxz, g21_yz_xxyy,\
                                         g21_yz_xxyz, g21_yz_xxzz, g21_yz_xyyy,\
                                         g21_yz_xyyz, g21_yz_xyzz, g21_yz_xzzz,\
                                         g21_yz_yyyy, g21_yz_yyyz, g21_yz_yyzz,\
                                         g21_yz_yzzz, g21_yz_zzzz, g21_zz_xxxx,\
                                         g21_zz_xxxy, g21_zz_xxxz, g21_zz_xxyy,\
                                         g21_zz_xxyz, g21_zz_xxzz, g21_zz_xyyy,\
                                         g21_zz_xyyz, g21_zz_xyzz, g21_zz_xzzz,\
                                         g21_zz_yyyy, g21_zz_yyyz, g21_zz_yyzz,\
                                         g21_zz_yzzz, g21_zz_zzzz, g11_xxx_xxxx,\
                                         g11_xxx_xxxy, g11_xxx_xxxz, g11_xxx_xxyy,\
                                         g11_xxx_xxyz, g11_xxx_xxzz, g11_xxx_xyyy,\
                                         g11_xxx_xyyz, g11_xxx_xyzz, g11_xxx_xzzz,\
                                         g11_xxx_yyyy, g11_xxx_yyyz, g11_xxx_yyzz,\
                                         g11_xxx_yzzz, g11_xxx_zzzz, g11_xxy_xxxx,\
                                         g11_xxy_xxxy, g11_xxy_xxxz, g11_xxy_xxyy,\
                                         g11_xxy_xxyz, g11_xxy_xxzz, g11_xxy_xyyy,\
                                         g11_xxy_xyyz, g11_xxy_xyzz, g11_xxy_xzzz,\
                                         g11_xxy_yyyy, g11_xxy_yyyz, g11_xxy_yyzz,\
                                         g11_xxy_yzzz, g11_xxy_zzzz, g11_xxz_xxxx,\
                                         g11_xxz_xxxy, g11_xxz_xxxz, g11_xxz_xxyy,\
                                         g11_xxz_xxyz, g11_xxz_xxzz, g11_xxz_xyyy,\
                                         g11_xxz_xyyz, g11_xxz_xyzz, g11_xxz_xzzz,\
                                         g11_xxz_yyyy, g11_xxz_yyyz, g11_xxz_yyzz,\
                                         g11_xxz_yzzz, g11_xxz_zzzz, g11_xyy_xxxx,\
                                         g11_xyy_xxxy, g11_xyy_xxxz, g11_xyy_xxyy,\
                                         g11_xyy_xxyz, g11_xyy_xxzz, g11_xyy_xyyy,\
                                         g11_xyy_xyyz, g11_xyy_xyzz, g11_xyy_xzzz,\
                                         g11_xyy_yyyy, g11_xyy_yyyz, g11_xyy_yyzz,\
                                         g11_xyy_yzzz, g11_xyy_zzzz, g11_xyz_xxxx,\
                                         g11_xyz_xxxy, g11_xyz_xxxz, g11_xyz_xxyy,\
                                         g11_xyz_xxyz, g11_xyz_xxzz, g11_xyz_xyyy,\
                                         g11_xyz_xyyz, g11_xyz_xyzz, g11_xyz_xzzz,\
                                         g11_xyz_yyyy, g11_xyz_yyyz, g11_xyz_yyzz,\
                                         g11_xyz_yzzz, g11_xyz_zzzz, g11_xzz_xxxx,\
                                         g11_xzz_xxxy, g11_xzz_xxxz, g11_xzz_xxyy,\
                                         g11_xzz_xxyz, g11_xzz_xxzz, g11_xzz_xyyy,\
                                         g11_xzz_xyyz, g11_xzz_xyzz, g11_xzz_xzzz,\
                                         g11_xzz_yyyy, g11_xzz_yyyz, g11_xzz_yyzz,\
                                         g11_xzz_yzzz, g11_xzz_zzzz, g11_yyy_xxxx,\
                                         g11_yyy_xxxy, g11_yyy_xxxz, g11_yyy_xxyy,\
                                         g11_yyy_xxyz, g11_yyy_xxzz, g11_yyy_xyyy,\
                                         g11_yyy_xyyz, g11_yyy_xyzz, g11_yyy_xzzz,\
                                         g11_yyy_yyyy, g11_yyy_yyyz, g11_yyy_yyzz,\
                                         g11_yyy_yzzz, g11_yyy_zzzz, g11_yyz_xxxx,\
                                         g11_yyz_xxxy, g11_yyz_xxxz, g11_yyz_xxyy,\
                                         g11_yyz_xxyz, g11_yyz_xxzz, g11_yyz_xyyy,\
                                         g11_yyz_xyyz, g11_yyz_xyzz, g11_yyz_xzzz,\
                                         g11_yyz_yyyy, g11_yyz_yyyz, g11_yyz_yyzz,\
                                         g11_yyz_yzzz, g11_yyz_zzzz, g11_yzz_xxxx,\
                                         g11_yzz_xxxy, g11_yzz_xxxz, g11_yzz_xxyy,\
                                         g11_yzz_xxyz, g11_yzz_xxzz, g11_yzz_xyyy,\
                                         g11_yzz_xyyz, g11_yzz_xyzz, g11_yzz_xzzz,\
                                         g11_yzz_yyyy, g11_yzz_yyyz, g11_yzz_yyzz,\
                                         g11_yzz_yzzz, g11_yzz_zzzz, g11_zzz_xxxx,\
                                         g11_zzz_xxxy, g11_zzz_xxxz, g11_zzz_xxyy,\
                                         g11_zzz_xxyz, g11_zzz_xxzz, g11_zzz_xyyy,\
                                         g11_zzz_xyyz, g11_zzz_xyzz, g11_zzz_xzzz,\
                                         g11_zzz_yyyy, g11_zzz_yyyz, g11_zzz_yyzz,\
                                         g11_zzz_yzzz, g11_zzz_zzzz, g_xxxx_xxxx,\
                                         g_xxxx_xxxy, g_xxxx_xxxz, g_xxxx_xxyy,\
                                         g_xxxx_xxyz, g_xxxx_xxzz, g_xxxx_xyyy,\
                                         g_xxxx_xyyz, g_xxxx_xyzz, g_xxxx_xzzz,\
                                         g_xxxx_yyyy, g_xxxx_yyyz, g_xxxx_yyzz,\
                                         g_xxxx_yzzz, g_xxxx_zzzz, g_xxxy_xxxx,\
                                         g_xxxy_xxxy, g_xxxy_xxxz, g_xxxy_xxyy,\
                                         g_xxxy_xxyz, g_xxxy_xxzz, g_xxxy_xyyy,\
                                         g_xxxy_xyyz, g_xxxy_xyzz, g_xxxy_xzzz,\
                                         g_xxxy_yyyy, g_xxxy_yyyz, g_xxxy_yyzz,\
                                         g_xxxy_yzzz, g_xxxy_zzzz, g_xxxz_xxxx,\
                                         g_xxxz_xxxy, g_xxxz_xxxz, g_xxxz_xxyy,\
                                         g_xxxz_xxyz, g_xxxz_xxzz, g_xxxz_xyyy,\
                                         g_xxxz_xyyz, g_xxxz_xyzz, g_xxxz_xzzz,\
                                         g_xxxz_yyyy, g_xxxz_yyyz, g_xxxz_yyzz,\
                                         g_xxxz_yzzz, g_xxxz_zzzz, g_xxyy_xxxx,\
                                         g_xxyy_xxxy, g_xxyy_xxxz, g_xxyy_xxyy,\
                                         g_xxyy_xxyz, g_xxyy_xxzz, g_xxyy_xyyy,\
                                         g_xxyy_xyyz, g_xxyy_xyzz, g_xxyy_xzzz,\
                                         g_xxyy_yyyy, g_xxyy_yyyz, g_xxyy_yyzz,\
                                         g_xxyy_yzzz, g_xxyy_zzzz, g_xxyz_xxxx,\
                                         g_xxyz_xxxy, g_xxyz_xxxz, g_xxyz_xxyy,\
                                         g_xxyz_xxyz, g_xxyz_xxzz, g_xxyz_xyyy,\
                                         g_xxyz_xyyz, g_xxyz_xyzz, g_xxyz_xzzz,\
                                         g_xxyz_yyyy, g_xxyz_yyyz, g_xxyz_yyzz,\
                                         g_xxyz_yzzz, g_xxyz_zzzz, g_xxzz_xxxx,\
                                         g_xxzz_xxxy, g_xxzz_xxxz, g_xxzz_xxyy,\
                                         g_xxzz_xxyz, g_xxzz_xxzz, g_xxzz_xyyy,\
                                         g_xxzz_xyyz, g_xxzz_xyzz, g_xxzz_xzzz,\
                                         g_xxzz_yyyy, g_xxzz_yyyz, g_xxzz_yyzz,\
                                         g_xxzz_yzzz, g_xxzz_zzzz, g_xyyy_xxxx,\
                                         g_xyyy_xxxy, g_xyyy_xxxz, g_xyyy_xxyy,\
                                         g_xyyy_xxyz, g_xyyy_xxzz, g_xyyy_xyyy,\
                                         g_xyyy_xyyz, g_xyyy_xyzz, g_xyyy_xzzz,\
                                         g_xyyy_yyyy, g_xyyy_yyyz, g_xyyy_yyzz,\
                                         g_xyyy_yzzz, g_xyyy_zzzz, g_xyyz_xxxx,\
                                         g_xyyz_xxxy, g_xyyz_xxxz, g_xyyz_xxyy,\
                                         g_xyyz_xxyz, g_xyyz_xxzz, g_xyyz_xyyy,\
                                         g_xyyz_xyyz, g_xyyz_xyzz, g_xyyz_xzzz,\
                                         g_xyyz_yyyy, g_xyyz_yyyz, g_xyyz_yyzz,\
                                         g_xyyz_yzzz, g_xyyz_zzzz, g_xyzz_xxxx,\
                                         g_xyzz_xxxy, g_xyzz_xxxz, g_xyzz_xxyy,\
                                         g_xyzz_xxyz, g_xyzz_xxzz, g_xyzz_xyyy,\
                                         g_xyzz_xyyz, g_xyzz_xyzz, g_xyzz_xzzz,\
                                         g_xyzz_yyyy, g_xyzz_yyyz, g_xyzz_yyzz,\
                                         g_xyzz_yzzz, g_xyzz_zzzz, g_xzzz_xxxx,\
                                         g_xzzz_xxxy, g_xzzz_xxxz, g_xzzz_xxyy,\
                                         g_xzzz_xxyz, g_xzzz_xxzz, g_xzzz_xyyy,\
                                         g_xzzz_xyyz, g_xzzz_xyzz, g_xzzz_xzzz,\
                                         g_xzzz_yyyy, g_xzzz_yyyz, g_xzzz_yyzz,\
                                         g_xzzz_yzzz, g_xzzz_zzzz, g_yyyy_xxxx,\
                                         g_yyyy_xxxy, g_yyyy_xxxz, g_yyyy_xxyy,\
                                         g_yyyy_xxyz, g_yyyy_xxzz, g_yyyy_xyyy,\
                                         g_yyyy_xyyz, g_yyyy_xyzz, g_yyyy_xzzz,\
                                         g_yyyy_yyyy, g_yyyy_yyyz, g_yyyy_yyzz,\
                                         g_yyyy_yzzz, g_yyyy_zzzz, g_yyyz_xxxx,\
                                         g_yyyz_xxxy, g_yyyz_xxxz, g_yyyz_xxyy,\
                                         g_yyyz_xxyz, g_yyyz_xxzz, g_yyyz_xyyy,\
                                         g_yyyz_xyyz, g_yyyz_xyzz, g_yyyz_xzzz,\
                                         g_yyyz_yyyy, g_yyyz_yyyz, g_yyyz_yyzz,\
                                         g_yyyz_yzzz, g_yyyz_zzzz, g_yyzz_xxxx,\
                                         g_yyzz_xxxy, g_yyzz_xxxz, g_yyzz_xxyy,\
                                         g_yyzz_xxyz, g_yyzz_xxzz, g_yyzz_xyyy,\
                                         g_yyzz_xyyz, g_yyzz_xyzz, g_yyzz_xzzz,\
                                         g_yyzz_yyyy, g_yyzz_yyyz, g_yyzz_yyzz,\
                                         g_yyzz_yzzz, g_yyzz_zzzz, g_yzzz_xxxx,\
                                         g_yzzz_xxxy, g_yzzz_xxxz, g_yzzz_xxyy,\
                                         g_yzzz_xxyz, g_yzzz_xxzz, g_yzzz_xyyy,\
                                         g_yzzz_xyyz, g_yzzz_xyzz, g_yzzz_xzzz,\
                                         g_yzzz_yyyy, g_yzzz_yyyz, g_yzzz_yyzz,\
                                         g_yzzz_yzzz, g_yzzz_zzzz, g_zzzz_xxxx,\
                                         g_zzzz_xxxy, g_zzzz_xxxz, g_zzzz_xxyy,\
                                         g_zzzz_xxyz, g_zzzz_xxzz, g_zzzz_xyyy,\
                                         g_zzzz_xyyz, g_zzzz_xyzz, g_zzzz_xzzz,\
                                         g_zzzz_yyyy, g_zzzz_yyyz, g_zzzz_yyzz,\
                                         g_zzzz_yzzz, g_zzzz_zzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxxx[k] = fr * g11_xxx_xxxx[k] + f2g * (3.0 * g20_xx_xxxx[k] - 3.0 * fgz * g21_xx_xxxx[k]) + 4.0 * f2t * gk_xxx_xxx[k];

                    g_xxxx_xxxy[k] = fr * g11_xxx_xxxy[k] + f2g * (3.0 * g20_xx_xxxy[k] - 3.0 * fgz * g21_xx_xxxy[k]) + 3.0 * f2t * gk_xxx_xxy[k];

                    g_xxxx_xxxz[k] = fr * g11_xxx_xxxz[k] + f2g * (3.0 * g20_xx_xxxz[k] - 3.0 * fgz * g21_xx_xxxz[k]) + 3.0 * f2t * gk_xxx_xxz[k];

                    g_xxxx_xxyy[k] = fr * g11_xxx_xxyy[k] + f2g * (3.0 * g20_xx_xxyy[k] - 3.0 * fgz * g21_xx_xxyy[k]) + 2.0 * f2t * gk_xxx_xyy[k];

                    g_xxxx_xxyz[k] = fr * g11_xxx_xxyz[k] + f2g * (3.0 * g20_xx_xxyz[k] - 3.0 * fgz * g21_xx_xxyz[k]) + 2.0 * f2t * gk_xxx_xyz[k];

                    g_xxxx_xxzz[k] = fr * g11_xxx_xxzz[k] + f2g * (3.0 * g20_xx_xxzz[k] - 3.0 * fgz * g21_xx_xxzz[k]) + 2.0 * f2t * gk_xxx_xzz[k];

                    g_xxxx_xyyy[k] = fr * g11_xxx_xyyy[k] + f2g * (3.0 * g20_xx_xyyy[k] - 3.0 * fgz * g21_xx_xyyy[k]) + f2t * gk_xxx_yyy[k];

                    g_xxxx_xyyz[k] = fr * g11_xxx_xyyz[k] + f2g * (3.0 * g20_xx_xyyz[k] - 3.0 * fgz * g21_xx_xyyz[k]) + f2t * gk_xxx_yyz[k];

                    g_xxxx_xyzz[k] = fr * g11_xxx_xyzz[k] + f2g * (3.0 * g20_xx_xyzz[k] - 3.0 * fgz * g21_xx_xyzz[k]) + f2t * gk_xxx_yzz[k];

                    g_xxxx_xzzz[k] = fr * g11_xxx_xzzz[k] + f2g * (3.0 * g20_xx_xzzz[k] - 3.0 * fgz * g21_xx_xzzz[k]) + f2t * gk_xxx_zzz[k];

                    g_xxxx_yyyy[k] = fr * g11_xxx_yyyy[k] + f2g * (3.0 * g20_xx_yyyy[k] - 3.0 * fgz * g21_xx_yyyy[k]);

                    g_xxxx_yyyz[k] = fr * g11_xxx_yyyz[k] + f2g * (3.0 * g20_xx_yyyz[k] - 3.0 * fgz * g21_xx_yyyz[k]);

                    g_xxxx_yyzz[k] = fr * g11_xxx_yyzz[k] + f2g * (3.0 * g20_xx_yyzz[k] - 3.0 * fgz * g21_xx_yyzz[k]);

                    g_xxxx_yzzz[k] = fr * g11_xxx_yzzz[k] + f2g * (3.0 * g20_xx_yzzz[k] - 3.0 * fgz * g21_xx_yzzz[k]);

                    g_xxxx_zzzz[k] = fr * g11_xxx_zzzz[k] + f2g * (3.0 * g20_xx_zzzz[k] - 3.0 * fgz * g21_xx_zzzz[k]);

                    g_xxxy_xxxx[k] = fr * g11_xxy_xxxx[k] + f2g * (2.0 * g20_xy_xxxx[k] - 2.0 * fgz * g21_xy_xxxx[k]) + 4.0 * f2t * gk_xxy_xxx[k];

                    g_xxxy_xxxy[k] = fr * g11_xxy_xxxy[k] + f2g * (2.0 * g20_xy_xxxy[k] - 2.0 * fgz * g21_xy_xxxy[k]) + 3.0 * f2t * gk_xxy_xxy[k];

                    g_xxxy_xxxz[k] = fr * g11_xxy_xxxz[k] + f2g * (2.0 * g20_xy_xxxz[k] - 2.0 * fgz * g21_xy_xxxz[k]) + 3.0 * f2t * gk_xxy_xxz[k];

                    g_xxxy_xxyy[k] = fr * g11_xxy_xxyy[k] + f2g * (2.0 * g20_xy_xxyy[k] - 2.0 * fgz * g21_xy_xxyy[k]) + 2.0 * f2t * gk_xxy_xyy[k];

                    g_xxxy_xxyz[k] = fr * g11_xxy_xxyz[k] + f2g * (2.0 * g20_xy_xxyz[k] - 2.0 * fgz * g21_xy_xxyz[k]) + 2.0 * f2t * gk_xxy_xyz[k];

                    g_xxxy_xxzz[k] = fr * g11_xxy_xxzz[k] + f2g * (2.0 * g20_xy_xxzz[k] - 2.0 * fgz * g21_xy_xxzz[k]) + 2.0 * f2t * gk_xxy_xzz[k];

                    g_xxxy_xyyy[k] = fr * g11_xxy_xyyy[k] + f2g * (2.0 * g20_xy_xyyy[k] - 2.0 * fgz * g21_xy_xyyy[k]) + f2t * gk_xxy_yyy[k];

                    g_xxxy_xyyz[k] = fr * g11_xxy_xyyz[k] + f2g * (2.0 * g20_xy_xyyz[k] - 2.0 * fgz * g21_xy_xyyz[k]) + f2t * gk_xxy_yyz[k];

                    g_xxxy_xyzz[k] = fr * g11_xxy_xyzz[k] + f2g * (2.0 * g20_xy_xyzz[k] - 2.0 * fgz * g21_xy_xyzz[k]) + f2t * gk_xxy_yzz[k];

                    g_xxxy_xzzz[k] = fr * g11_xxy_xzzz[k] + f2g * (2.0 * g20_xy_xzzz[k] - 2.0 * fgz * g21_xy_xzzz[k]) + f2t * gk_xxy_zzz[k];

                    g_xxxy_yyyy[k] = fr * g11_xxy_yyyy[k] + f2g * (2.0 * g20_xy_yyyy[k] - 2.0 * fgz * g21_xy_yyyy[k]);

                    g_xxxy_yyyz[k] = fr * g11_xxy_yyyz[k] + f2g * (2.0 * g20_xy_yyyz[k] - 2.0 * fgz * g21_xy_yyyz[k]);

                    g_xxxy_yyzz[k] = fr * g11_xxy_yyzz[k] + f2g * (2.0 * g20_xy_yyzz[k] - 2.0 * fgz * g21_xy_yyzz[k]);

                    g_xxxy_yzzz[k] = fr * g11_xxy_yzzz[k] + f2g * (2.0 * g20_xy_yzzz[k] - 2.0 * fgz * g21_xy_yzzz[k]);

                    g_xxxy_zzzz[k] = fr * g11_xxy_zzzz[k] + f2g * (2.0 * g20_xy_zzzz[k] - 2.0 * fgz * g21_xy_zzzz[k]);

                    g_xxxz_xxxx[k] = fr * g11_xxz_xxxx[k] + f2g * (2.0 * g20_xz_xxxx[k] - 2.0 * fgz * g21_xz_xxxx[k]) + 4.0 * f2t * gk_xxz_xxx[k];

                    g_xxxz_xxxy[k] = fr * g11_xxz_xxxy[k] + f2g * (2.0 * g20_xz_xxxy[k] - 2.0 * fgz * g21_xz_xxxy[k]) + 3.0 * f2t * gk_xxz_xxy[k];

                    g_xxxz_xxxz[k] = fr * g11_xxz_xxxz[k] + f2g * (2.0 * g20_xz_xxxz[k] - 2.0 * fgz * g21_xz_xxxz[k]) + 3.0 * f2t * gk_xxz_xxz[k];

                    g_xxxz_xxyy[k] = fr * g11_xxz_xxyy[k] + f2g * (2.0 * g20_xz_xxyy[k] - 2.0 * fgz * g21_xz_xxyy[k]) + 2.0 * f2t * gk_xxz_xyy[k];

                    g_xxxz_xxyz[k] = fr * g11_xxz_xxyz[k] + f2g * (2.0 * g20_xz_xxyz[k] - 2.0 * fgz * g21_xz_xxyz[k]) + 2.0 * f2t * gk_xxz_xyz[k];

                    g_xxxz_xxzz[k] = fr * g11_xxz_xxzz[k] + f2g * (2.0 * g20_xz_xxzz[k] - 2.0 * fgz * g21_xz_xxzz[k]) + 2.0 * f2t * gk_xxz_xzz[k];

                    g_xxxz_xyyy[k] = fr * g11_xxz_xyyy[k] + f2g * (2.0 * g20_xz_xyyy[k] - 2.0 * fgz * g21_xz_xyyy[k]) + f2t * gk_xxz_yyy[k];

                    g_xxxz_xyyz[k] = fr * g11_xxz_xyyz[k] + f2g * (2.0 * g20_xz_xyyz[k] - 2.0 * fgz * g21_xz_xyyz[k]) + f2t * gk_xxz_yyz[k];

                    g_xxxz_xyzz[k] = fr * g11_xxz_xyzz[k] + f2g * (2.0 * g20_xz_xyzz[k] - 2.0 * fgz * g21_xz_xyzz[k]) + f2t * gk_xxz_yzz[k];

                    g_xxxz_xzzz[k] = fr * g11_xxz_xzzz[k] + f2g * (2.0 * g20_xz_xzzz[k] - 2.0 * fgz * g21_xz_xzzz[k]) + f2t * gk_xxz_zzz[k];

                    g_xxxz_yyyy[k] = fr * g11_xxz_yyyy[k] + f2g * (2.0 * g20_xz_yyyy[k] - 2.0 * fgz * g21_xz_yyyy[k]);

                    g_xxxz_yyyz[k] = fr * g11_xxz_yyyz[k] + f2g * (2.0 * g20_xz_yyyz[k] - 2.0 * fgz * g21_xz_yyyz[k]);

                    g_xxxz_yyzz[k] = fr * g11_xxz_yyzz[k] + f2g * (2.0 * g20_xz_yyzz[k] - 2.0 * fgz * g21_xz_yyzz[k]);

                    g_xxxz_yzzz[k] = fr * g11_xxz_yzzz[k] + f2g * (2.0 * g20_xz_yzzz[k] - 2.0 * fgz * g21_xz_yzzz[k]);

                    g_xxxz_zzzz[k] = fr * g11_xxz_zzzz[k] + f2g * (2.0 * g20_xz_zzzz[k] - 2.0 * fgz * g21_xz_zzzz[k]);

                    g_xxyy_xxxx[k] = fr * g11_xyy_xxxx[k] + f2g * (g20_yy_xxxx[k] - fgz * g21_yy_xxxx[k]) + 4.0 * f2t * gk_xyy_xxx[k];

                    g_xxyy_xxxy[k] = fr * g11_xyy_xxxy[k] + f2g * (g20_yy_xxxy[k] - fgz * g21_yy_xxxy[k]) + 3.0 * f2t * gk_xyy_xxy[k];

                    g_xxyy_xxxz[k] = fr * g11_xyy_xxxz[k] + f2g * (g20_yy_xxxz[k] - fgz * g21_yy_xxxz[k]) + 3.0 * f2t * gk_xyy_xxz[k];

                    g_xxyy_xxyy[k] = fr * g11_xyy_xxyy[k] + f2g * (g20_yy_xxyy[k] - fgz * g21_yy_xxyy[k]) + 2.0 * f2t * gk_xyy_xyy[k];

                    g_xxyy_xxyz[k] = fr * g11_xyy_xxyz[k] + f2g * (g20_yy_xxyz[k] - fgz * g21_yy_xxyz[k]) + 2.0 * f2t * gk_xyy_xyz[k];

                    g_xxyy_xxzz[k] = fr * g11_xyy_xxzz[k] + f2g * (g20_yy_xxzz[k] - fgz * g21_yy_xxzz[k]) + 2.0 * f2t * gk_xyy_xzz[k];

                    g_xxyy_xyyy[k] = fr * g11_xyy_xyyy[k] + f2g * (g20_yy_xyyy[k] - fgz * g21_yy_xyyy[k]) + f2t * gk_xyy_yyy[k];

                    g_xxyy_xyyz[k] = fr * g11_xyy_xyyz[k] + f2g * (g20_yy_xyyz[k] - fgz * g21_yy_xyyz[k]) + f2t * gk_xyy_yyz[k];

                    g_xxyy_xyzz[k] = fr * g11_xyy_xyzz[k] + f2g * (g20_yy_xyzz[k] - fgz * g21_yy_xyzz[k]) + f2t * gk_xyy_yzz[k];

                    g_xxyy_xzzz[k] = fr * g11_xyy_xzzz[k] + f2g * (g20_yy_xzzz[k] - fgz * g21_yy_xzzz[k]) + f2t * gk_xyy_zzz[k];

                    g_xxyy_yyyy[k] = fr * g11_xyy_yyyy[k] + f2g * (g20_yy_yyyy[k] - fgz * g21_yy_yyyy[k]);

                    g_xxyy_yyyz[k] = fr * g11_xyy_yyyz[k] + f2g * (g20_yy_yyyz[k] - fgz * g21_yy_yyyz[k]);

                    g_xxyy_yyzz[k] = fr * g11_xyy_yyzz[k] + f2g * (g20_yy_yyzz[k] - fgz * g21_yy_yyzz[k]);

                    g_xxyy_yzzz[k] = fr * g11_xyy_yzzz[k] + f2g * (g20_yy_yzzz[k] - fgz * g21_yy_yzzz[k]);

                    g_xxyy_zzzz[k] = fr * g11_xyy_zzzz[k] + f2g * (g20_yy_zzzz[k] - fgz * g21_yy_zzzz[k]);

                    g_xxyz_xxxx[k] = fr * g11_xyz_xxxx[k] + f2g * (g20_yz_xxxx[k] - fgz * g21_yz_xxxx[k]) + 4.0 * f2t * gk_xyz_xxx[k];

                    g_xxyz_xxxy[k] = fr * g11_xyz_xxxy[k] + f2g * (g20_yz_xxxy[k] - fgz * g21_yz_xxxy[k]) + 3.0 * f2t * gk_xyz_xxy[k];

                    g_xxyz_xxxz[k] = fr * g11_xyz_xxxz[k] + f2g * (g20_yz_xxxz[k] - fgz * g21_yz_xxxz[k]) + 3.0 * f2t * gk_xyz_xxz[k];

                    g_xxyz_xxyy[k] = fr * g11_xyz_xxyy[k] + f2g * (g20_yz_xxyy[k] - fgz * g21_yz_xxyy[k]) + 2.0 * f2t * gk_xyz_xyy[k];

                    g_xxyz_xxyz[k] = fr * g11_xyz_xxyz[k] + f2g * (g20_yz_xxyz[k] - fgz * g21_yz_xxyz[k]) + 2.0 * f2t * gk_xyz_xyz[k];

                    g_xxyz_xxzz[k] = fr * g11_xyz_xxzz[k] + f2g * (g20_yz_xxzz[k] - fgz * g21_yz_xxzz[k]) + 2.0 * f2t * gk_xyz_xzz[k];

                    g_xxyz_xyyy[k] = fr * g11_xyz_xyyy[k] + f2g * (g20_yz_xyyy[k] - fgz * g21_yz_xyyy[k]) + f2t * gk_xyz_yyy[k];

                    g_xxyz_xyyz[k] = fr * g11_xyz_xyyz[k] + f2g * (g20_yz_xyyz[k] - fgz * g21_yz_xyyz[k]) + f2t * gk_xyz_yyz[k];

                    g_xxyz_xyzz[k] = fr * g11_xyz_xyzz[k] + f2g * (g20_yz_xyzz[k] - fgz * g21_yz_xyzz[k]) + f2t * gk_xyz_yzz[k];

                    g_xxyz_xzzz[k] = fr * g11_xyz_xzzz[k] + f2g * (g20_yz_xzzz[k] - fgz * g21_yz_xzzz[k]) + f2t * gk_xyz_zzz[k];

                    g_xxyz_yyyy[k] = fr * g11_xyz_yyyy[k] + f2g * (g20_yz_yyyy[k] - fgz * g21_yz_yyyy[k]);

                    g_xxyz_yyyz[k] = fr * g11_xyz_yyyz[k] + f2g * (g20_yz_yyyz[k] - fgz * g21_yz_yyyz[k]);

                    g_xxyz_yyzz[k] = fr * g11_xyz_yyzz[k] + f2g * (g20_yz_yyzz[k] - fgz * g21_yz_yyzz[k]);

                    g_xxyz_yzzz[k] = fr * g11_xyz_yzzz[k] + f2g * (g20_yz_yzzz[k] - fgz * g21_yz_yzzz[k]);

                    g_xxyz_zzzz[k] = fr * g11_xyz_zzzz[k] + f2g * (g20_yz_zzzz[k] - fgz * g21_yz_zzzz[k]);

                    g_xxzz_xxxx[k] = fr * g11_xzz_xxxx[k] + f2g * (g20_zz_xxxx[k] - fgz * g21_zz_xxxx[k]) + 4.0 * f2t * gk_xzz_xxx[k];

                    g_xxzz_xxxy[k] = fr * g11_xzz_xxxy[k] + f2g * (g20_zz_xxxy[k] - fgz * g21_zz_xxxy[k]) + 3.0 * f2t * gk_xzz_xxy[k];

                    g_xxzz_xxxz[k] = fr * g11_xzz_xxxz[k] + f2g * (g20_zz_xxxz[k] - fgz * g21_zz_xxxz[k]) + 3.0 * f2t * gk_xzz_xxz[k];

                    g_xxzz_xxyy[k] = fr * g11_xzz_xxyy[k] + f2g * (g20_zz_xxyy[k] - fgz * g21_zz_xxyy[k]) + 2.0 * f2t * gk_xzz_xyy[k];

                    g_xxzz_xxyz[k] = fr * g11_xzz_xxyz[k] + f2g * (g20_zz_xxyz[k] - fgz * g21_zz_xxyz[k]) + 2.0 * f2t * gk_xzz_xyz[k];

                    g_xxzz_xxzz[k] = fr * g11_xzz_xxzz[k] + f2g * (g20_zz_xxzz[k] - fgz * g21_zz_xxzz[k]) + 2.0 * f2t * gk_xzz_xzz[k];

                    g_xxzz_xyyy[k] = fr * g11_xzz_xyyy[k] + f2g * (g20_zz_xyyy[k] - fgz * g21_zz_xyyy[k]) + f2t * gk_xzz_yyy[k];

                    g_xxzz_xyyz[k] = fr * g11_xzz_xyyz[k] + f2g * (g20_zz_xyyz[k] - fgz * g21_zz_xyyz[k]) + f2t * gk_xzz_yyz[k];

                    g_xxzz_xyzz[k] = fr * g11_xzz_xyzz[k] + f2g * (g20_zz_xyzz[k] - fgz * g21_zz_xyzz[k]) + f2t * gk_xzz_yzz[k];

                    g_xxzz_xzzz[k] = fr * g11_xzz_xzzz[k] + f2g * (g20_zz_xzzz[k] - fgz * g21_zz_xzzz[k]) + f2t * gk_xzz_zzz[k];

                    g_xxzz_yyyy[k] = fr * g11_xzz_yyyy[k] + f2g * (g20_zz_yyyy[k] - fgz * g21_zz_yyyy[k]);

                    g_xxzz_yyyz[k] = fr * g11_xzz_yyyz[k] + f2g * (g20_zz_yyyz[k] - fgz * g21_zz_yyyz[k]);

                    g_xxzz_yyzz[k] = fr * g11_xzz_yyzz[k] + f2g * (g20_zz_yyzz[k] - fgz * g21_zz_yyzz[k]);

                    g_xxzz_yzzz[k] = fr * g11_xzz_yzzz[k] + f2g * (g20_zz_yzzz[k] - fgz * g21_zz_yzzz[k]);

                    g_xxzz_zzzz[k] = fr * g11_xzz_zzzz[k] + f2g * (g20_zz_zzzz[k] - fgz * g21_zz_zzzz[k]);

                    g_xyyy_xxxx[k] = fr * g11_yyy_xxxx[k] + 4.0 * f2t * gk_yyy_xxx[k];

                    g_xyyy_xxxy[k] = fr * g11_yyy_xxxy[k] + 3.0 * f2t * gk_yyy_xxy[k];

                    g_xyyy_xxxz[k] = fr * g11_yyy_xxxz[k] + 3.0 * f2t * gk_yyy_xxz[k];

                    g_xyyy_xxyy[k] = fr * g11_yyy_xxyy[k] + 2.0 * f2t * gk_yyy_xyy[k];

                    g_xyyy_xxyz[k] = fr * g11_yyy_xxyz[k] + 2.0 * f2t * gk_yyy_xyz[k];

                    g_xyyy_xxzz[k] = fr * g11_yyy_xxzz[k] + 2.0 * f2t * gk_yyy_xzz[k];

                    g_xyyy_xyyy[k] = fr * g11_yyy_xyyy[k] + f2t * gk_yyy_yyy[k];

                    g_xyyy_xyyz[k] = fr * g11_yyy_xyyz[k] + f2t * gk_yyy_yyz[k];

                    g_xyyy_xyzz[k] = fr * g11_yyy_xyzz[k] + f2t * gk_yyy_yzz[k];

                    g_xyyy_xzzz[k] = fr * g11_yyy_xzzz[k] + f2t * gk_yyy_zzz[k];

                    g_xyyy_yyyy[k] = fr * g11_yyy_yyyy[k];

                    g_xyyy_yyyz[k] = fr * g11_yyy_yyyz[k];

                    g_xyyy_yyzz[k] = fr * g11_yyy_yyzz[k];

                    g_xyyy_yzzz[k] = fr * g11_yyy_yzzz[k];

                    g_xyyy_zzzz[k] = fr * g11_yyy_zzzz[k];

                    g_xyyz_xxxx[k] = fr * g11_yyz_xxxx[k] + 4.0 * f2t * gk_yyz_xxx[k];

                    g_xyyz_xxxy[k] = fr * g11_yyz_xxxy[k] + 3.0 * f2t * gk_yyz_xxy[k];

                    g_xyyz_xxxz[k] = fr * g11_yyz_xxxz[k] + 3.0 * f2t * gk_yyz_xxz[k];

                    g_xyyz_xxyy[k] = fr * g11_yyz_xxyy[k] + 2.0 * f2t * gk_yyz_xyy[k];

                    g_xyyz_xxyz[k] = fr * g11_yyz_xxyz[k] + 2.0 * f2t * gk_yyz_xyz[k];

                    g_xyyz_xxzz[k] = fr * g11_yyz_xxzz[k] + 2.0 * f2t * gk_yyz_xzz[k];

                    g_xyyz_xyyy[k] = fr * g11_yyz_xyyy[k] + f2t * gk_yyz_yyy[k];

                    g_xyyz_xyyz[k] = fr * g11_yyz_xyyz[k] + f2t * gk_yyz_yyz[k];

                    g_xyyz_xyzz[k] = fr * g11_yyz_xyzz[k] + f2t * gk_yyz_yzz[k];

                    g_xyyz_xzzz[k] = fr * g11_yyz_xzzz[k] + f2t * gk_yyz_zzz[k];

                    g_xyyz_yyyy[k] = fr * g11_yyz_yyyy[k];

                    g_xyyz_yyyz[k] = fr * g11_yyz_yyyz[k];

                    g_xyyz_yyzz[k] = fr * g11_yyz_yyzz[k];

                    g_xyyz_yzzz[k] = fr * g11_yyz_yzzz[k];

                    g_xyyz_zzzz[k] = fr * g11_yyz_zzzz[k];

                    g_xyzz_xxxx[k] = fr * g11_yzz_xxxx[k] + 4.0 * f2t * gk_yzz_xxx[k];

                    g_xyzz_xxxy[k] = fr * g11_yzz_xxxy[k] + 3.0 * f2t * gk_yzz_xxy[k];

                    g_xyzz_xxxz[k] = fr * g11_yzz_xxxz[k] + 3.0 * f2t * gk_yzz_xxz[k];

                    g_xyzz_xxyy[k] = fr * g11_yzz_xxyy[k] + 2.0 * f2t * gk_yzz_xyy[k];

                    g_xyzz_xxyz[k] = fr * g11_yzz_xxyz[k] + 2.0 * f2t * gk_yzz_xyz[k];

                    g_xyzz_xxzz[k] = fr * g11_yzz_xxzz[k] + 2.0 * f2t * gk_yzz_xzz[k];

                    g_xyzz_xyyy[k] = fr * g11_yzz_xyyy[k] + f2t * gk_yzz_yyy[k];

                    g_xyzz_xyyz[k] = fr * g11_yzz_xyyz[k] + f2t * gk_yzz_yyz[k];

                    g_xyzz_xyzz[k] = fr * g11_yzz_xyzz[k] + f2t * gk_yzz_yzz[k];

                    g_xyzz_xzzz[k] = fr * g11_yzz_xzzz[k] + f2t * gk_yzz_zzz[k];

                    g_xyzz_yyyy[k] = fr * g11_yzz_yyyy[k];

                    g_xyzz_yyyz[k] = fr * g11_yzz_yyyz[k];

                    g_xyzz_yyzz[k] = fr * g11_yzz_yyzz[k];

                    g_xyzz_yzzz[k] = fr * g11_yzz_yzzz[k];

                    g_xyzz_zzzz[k] = fr * g11_yzz_zzzz[k];

                    g_xzzz_xxxx[k] = fr * g11_zzz_xxxx[k] + 4.0 * f2t * gk_zzz_xxx[k];

                    g_xzzz_xxxy[k] = fr * g11_zzz_xxxy[k] + 3.0 * f2t * gk_zzz_xxy[k];

                    g_xzzz_xxxz[k] = fr * g11_zzz_xxxz[k] + 3.0 * f2t * gk_zzz_xxz[k];

                    g_xzzz_xxyy[k] = fr * g11_zzz_xxyy[k] + 2.0 * f2t * gk_zzz_xyy[k];

                    g_xzzz_xxyz[k] = fr * g11_zzz_xxyz[k] + 2.0 * f2t * gk_zzz_xyz[k];

                    g_xzzz_xxzz[k] = fr * g11_zzz_xxzz[k] + 2.0 * f2t * gk_zzz_xzz[k];

                    g_xzzz_xyyy[k] = fr * g11_zzz_xyyy[k] + f2t * gk_zzz_yyy[k];

                    g_xzzz_xyyz[k] = fr * g11_zzz_xyyz[k] + f2t * gk_zzz_yyz[k];

                    g_xzzz_xyzz[k] = fr * g11_zzz_xyzz[k] + f2t * gk_zzz_yzz[k];

                    g_xzzz_xzzz[k] = fr * g11_zzz_xzzz[k] + f2t * gk_zzz_zzz[k];

                    g_xzzz_yyyy[k] = fr * g11_zzz_yyyy[k];

                    g_xzzz_yyyz[k] = fr * g11_zzz_yyyz[k];

                    g_xzzz_yyzz[k] = fr * g11_zzz_yyzz[k];

                    g_xzzz_yzzz[k] = fr * g11_zzz_yzzz[k];

                    g_xzzz_zzzz[k] = fr * g11_zzz_zzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxxx[k] = fr * g11_yyy_xxxx[k] + f2g * (3.0 * g20_yy_xxxx[k] - 3.0 * fgz * g21_yy_xxxx[k]);

                    g_yyyy_xxxy[k] = fr * g11_yyy_xxxy[k] + f2g * (3.0 * g20_yy_xxxy[k] - 3.0 * fgz * g21_yy_xxxy[k]) + f2t * gk_yyy_xxx[k];

                    g_yyyy_xxxz[k] = fr * g11_yyy_xxxz[k] + f2g * (3.0 * g20_yy_xxxz[k] - 3.0 * fgz * g21_yy_xxxz[k]);

                    g_yyyy_xxyy[k] = fr * g11_yyy_xxyy[k] + f2g * (3.0 * g20_yy_xxyy[k] - 3.0 * fgz * g21_yy_xxyy[k]) + 2.0 * f2t * gk_yyy_xxy[k];

                    g_yyyy_xxyz[k] = fr * g11_yyy_xxyz[k] + f2g * (3.0 * g20_yy_xxyz[k] - 3.0 * fgz * g21_yy_xxyz[k]) + f2t * gk_yyy_xxz[k];

                    g_yyyy_xxzz[k] = fr * g11_yyy_xxzz[k] + f2g * (3.0 * g20_yy_xxzz[k] - 3.0 * fgz * g21_yy_xxzz[k]);

                    g_yyyy_xyyy[k] = fr * g11_yyy_xyyy[k] + f2g * (3.0 * g20_yy_xyyy[k] - 3.0 * fgz * g21_yy_xyyy[k]) + 3.0 * f2t * gk_yyy_xyy[k];

                    g_yyyy_xyyz[k] = fr * g11_yyy_xyyz[k] + f2g * (3.0 * g20_yy_xyyz[k] - 3.0 * fgz * g21_yy_xyyz[k]) + 2.0 * f2t * gk_yyy_xyz[k];

                    g_yyyy_xyzz[k] = fr * g11_yyy_xyzz[k] + f2g * (3.0 * g20_yy_xyzz[k] - 3.0 * fgz * g21_yy_xyzz[k]) + f2t * gk_yyy_xzz[k];

                    g_yyyy_xzzz[k] = fr * g11_yyy_xzzz[k] + f2g * (3.0 * g20_yy_xzzz[k] - 3.0 * fgz * g21_yy_xzzz[k]);

                    g_yyyy_yyyy[k] = fr * g11_yyy_yyyy[k] + f2g * (3.0 * g20_yy_yyyy[k] - 3.0 * fgz * g21_yy_yyyy[k]) + 4.0 * f2t * gk_yyy_yyy[k];

                    g_yyyy_yyyz[k] = fr * g11_yyy_yyyz[k] + f2g * (3.0 * g20_yy_yyyz[k] - 3.0 * fgz * g21_yy_yyyz[k]) + 3.0 * f2t * gk_yyy_yyz[k];

                    g_yyyy_yyzz[k] = fr * g11_yyy_yyzz[k] + f2g * (3.0 * g20_yy_yyzz[k] - 3.0 * fgz * g21_yy_yyzz[k]) + 2.0 * f2t * gk_yyy_yzz[k];

                    g_yyyy_yzzz[k] = fr * g11_yyy_yzzz[k] + f2g * (3.0 * g20_yy_yzzz[k] - 3.0 * fgz * g21_yy_yzzz[k]) + f2t * gk_yyy_zzz[k];

                    g_yyyy_zzzz[k] = fr * g11_yyy_zzzz[k] + f2g * (3.0 * g20_yy_zzzz[k] - 3.0 * fgz * g21_yy_zzzz[k]);

                    g_yyyz_xxxx[k] = fr * g11_yyz_xxxx[k] + f2g * (2.0 * g20_yz_xxxx[k] - 2.0 * fgz * g21_yz_xxxx[k]);

                    g_yyyz_xxxy[k] = fr * g11_yyz_xxxy[k] + f2g * (2.0 * g20_yz_xxxy[k] - 2.0 * fgz * g21_yz_xxxy[k]) + f2t * gk_yyz_xxx[k];

                    g_yyyz_xxxz[k] = fr * g11_yyz_xxxz[k] + f2g * (2.0 * g20_yz_xxxz[k] - 2.0 * fgz * g21_yz_xxxz[k]);

                    g_yyyz_xxyy[k] = fr * g11_yyz_xxyy[k] + f2g * (2.0 * g20_yz_xxyy[k] - 2.0 * fgz * g21_yz_xxyy[k]) + 2.0 * f2t * gk_yyz_xxy[k];

                    g_yyyz_xxyz[k] = fr * g11_yyz_xxyz[k] + f2g * (2.0 * g20_yz_xxyz[k] - 2.0 * fgz * g21_yz_xxyz[k]) + f2t * gk_yyz_xxz[k];

                    g_yyyz_xxzz[k] = fr * g11_yyz_xxzz[k] + f2g * (2.0 * g20_yz_xxzz[k] - 2.0 * fgz * g21_yz_xxzz[k]);

                    g_yyyz_xyyy[k] = fr * g11_yyz_xyyy[k] + f2g * (2.0 * g20_yz_xyyy[k] - 2.0 * fgz * g21_yz_xyyy[k]) + 3.0 * f2t * gk_yyz_xyy[k];

                    g_yyyz_xyyz[k] = fr * g11_yyz_xyyz[k] + f2g * (2.0 * g20_yz_xyyz[k] - 2.0 * fgz * g21_yz_xyyz[k]) + 2.0 * f2t * gk_yyz_xyz[k];

                    g_yyyz_xyzz[k] = fr * g11_yyz_xyzz[k] + f2g * (2.0 * g20_yz_xyzz[k] - 2.0 * fgz * g21_yz_xyzz[k]) + f2t * gk_yyz_xzz[k];

                    g_yyyz_xzzz[k] = fr * g11_yyz_xzzz[k] + f2g * (2.0 * g20_yz_xzzz[k] - 2.0 * fgz * g21_yz_xzzz[k]);

                    g_yyyz_yyyy[k] = fr * g11_yyz_yyyy[k] + f2g * (2.0 * g20_yz_yyyy[k] - 2.0 * fgz * g21_yz_yyyy[k]) + 4.0 * f2t * gk_yyz_yyy[k];

                    g_yyyz_yyyz[k] = fr * g11_yyz_yyyz[k] + f2g * (2.0 * g20_yz_yyyz[k] - 2.0 * fgz * g21_yz_yyyz[k]) + 3.0 * f2t * gk_yyz_yyz[k];

                    g_yyyz_yyzz[k] = fr * g11_yyz_yyzz[k] + f2g * (2.0 * g20_yz_yyzz[k] - 2.0 * fgz * g21_yz_yyzz[k]) + 2.0 * f2t * gk_yyz_yzz[k];

                    g_yyyz_yzzz[k] = fr * g11_yyz_yzzz[k] + f2g * (2.0 * g20_yz_yzzz[k] - 2.0 * fgz * g21_yz_yzzz[k]) + f2t * gk_yyz_zzz[k];

                    g_yyyz_zzzz[k] = fr * g11_yyz_zzzz[k] + f2g * (2.0 * g20_yz_zzzz[k] - 2.0 * fgz * g21_yz_zzzz[k]);

                    g_yyzz_xxxx[k] = fr * g11_yzz_xxxx[k] + f2g * (g20_zz_xxxx[k] - fgz * g21_zz_xxxx[k]);

                    g_yyzz_xxxy[k] = fr * g11_yzz_xxxy[k] + f2g * (g20_zz_xxxy[k] - fgz * g21_zz_xxxy[k]) + f2t * gk_yzz_xxx[k];

                    g_yyzz_xxxz[k] = fr * g11_yzz_xxxz[k] + f2g * (g20_zz_xxxz[k] - fgz * g21_zz_xxxz[k]);

                    g_yyzz_xxyy[k] = fr * g11_yzz_xxyy[k] + f2g * (g20_zz_xxyy[k] - fgz * g21_zz_xxyy[k]) + 2.0 * f2t * gk_yzz_xxy[k];

                    g_yyzz_xxyz[k] = fr * g11_yzz_xxyz[k] + f2g * (g20_zz_xxyz[k] - fgz * g21_zz_xxyz[k]) + f2t * gk_yzz_xxz[k];

                    g_yyzz_xxzz[k] = fr * g11_yzz_xxzz[k] + f2g * (g20_zz_xxzz[k] - fgz * g21_zz_xxzz[k]);

                    g_yyzz_xyyy[k] = fr * g11_yzz_xyyy[k] + f2g * (g20_zz_xyyy[k] - fgz * g21_zz_xyyy[k]) + 3.0 * f2t * gk_yzz_xyy[k];

                    g_yyzz_xyyz[k] = fr * g11_yzz_xyyz[k] + f2g * (g20_zz_xyyz[k] - fgz * g21_zz_xyyz[k]) + 2.0 * f2t * gk_yzz_xyz[k];

                    g_yyzz_xyzz[k] = fr * g11_yzz_xyzz[k] + f2g * (g20_zz_xyzz[k] - fgz * g21_zz_xyzz[k]) + f2t * gk_yzz_xzz[k];

                    g_yyzz_xzzz[k] = fr * g11_yzz_xzzz[k] + f2g * (g20_zz_xzzz[k] - fgz * g21_zz_xzzz[k]);

                    g_yyzz_yyyy[k] = fr * g11_yzz_yyyy[k] + f2g * (g20_zz_yyyy[k] - fgz * g21_zz_yyyy[k]) + 4.0 * f2t * gk_yzz_yyy[k];

                    g_yyzz_yyyz[k] = fr * g11_yzz_yyyz[k] + f2g * (g20_zz_yyyz[k] - fgz * g21_zz_yyyz[k]) + 3.0 * f2t * gk_yzz_yyz[k];

                    g_yyzz_yyzz[k] = fr * g11_yzz_yyzz[k] + f2g * (g20_zz_yyzz[k] - fgz * g21_zz_yyzz[k]) + 2.0 * f2t * gk_yzz_yzz[k];

                    g_yyzz_yzzz[k] = fr * g11_yzz_yzzz[k] + f2g * (g20_zz_yzzz[k] - fgz * g21_zz_yzzz[k]) + f2t * gk_yzz_zzz[k];

                    g_yyzz_zzzz[k] = fr * g11_yzz_zzzz[k] + f2g * (g20_zz_zzzz[k] - fgz * g21_zz_zzzz[k]);

                    g_yzzz_xxxx[k] = fr * g11_zzz_xxxx[k];

                    g_yzzz_xxxy[k] = fr * g11_zzz_xxxy[k] + f2t * gk_zzz_xxx[k];

                    g_yzzz_xxxz[k] = fr * g11_zzz_xxxz[k];

                    g_yzzz_xxyy[k] = fr * g11_zzz_xxyy[k] + 2.0 * f2t * gk_zzz_xxy[k];

                    g_yzzz_xxyz[k] = fr * g11_zzz_xxyz[k] + f2t * gk_zzz_xxz[k];

                    g_yzzz_xxzz[k] = fr * g11_zzz_xxzz[k];

                    g_yzzz_xyyy[k] = fr * g11_zzz_xyyy[k] + 3.0 * f2t * gk_zzz_xyy[k];

                    g_yzzz_xyyz[k] = fr * g11_zzz_xyyz[k] + 2.0 * f2t * gk_zzz_xyz[k];

                    g_yzzz_xyzz[k] = fr * g11_zzz_xyzz[k] + f2t * gk_zzz_xzz[k];

                    g_yzzz_xzzz[k] = fr * g11_zzz_xzzz[k];

                    g_yzzz_yyyy[k] = fr * g11_zzz_yyyy[k] + 4.0 * f2t * gk_zzz_yyy[k];

                    g_yzzz_yyyz[k] = fr * g11_zzz_yyyz[k] + 3.0 * f2t * gk_zzz_yyz[k];

                    g_yzzz_yyzz[k] = fr * g11_zzz_yyzz[k] + 2.0 * f2t * gk_zzz_yzz[k];

                    g_yzzz_yzzz[k] = fr * g11_zzz_yzzz[k] + f2t * gk_zzz_zzz[k];

                    g_yzzz_zzzz[k] = fr * g11_zzz_zzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxxx[k] = fr * g11_zzz_xxxx[k] + f2g * (3.0 * g20_zz_xxxx[k] - 3.0 * fgz * g21_zz_xxxx[k]);

                    g_zzzz_xxxy[k] = fr * g11_zzz_xxxy[k] + f2g * (3.0 * g20_zz_xxxy[k] - 3.0 * fgz * g21_zz_xxxy[k]);

                    g_zzzz_xxxz[k] = fr * g11_zzz_xxxz[k] + f2g * (3.0 * g20_zz_xxxz[k] - 3.0 * fgz * g21_zz_xxxz[k]) + f2t * gk_zzz_xxx[k];

                    g_zzzz_xxyy[k] = fr * g11_zzz_xxyy[k] + f2g * (3.0 * g20_zz_xxyy[k] - 3.0 * fgz * g21_zz_xxyy[k]);

                    g_zzzz_xxyz[k] = fr * g11_zzz_xxyz[k] + f2g * (3.0 * g20_zz_xxyz[k] - 3.0 * fgz * g21_zz_xxyz[k]) + f2t * gk_zzz_xxy[k];

                    g_zzzz_xxzz[k] = fr * g11_zzz_xxzz[k] + f2g * (3.0 * g20_zz_xxzz[k] - 3.0 * fgz * g21_zz_xxzz[k]) + 2.0 * f2t * gk_zzz_xxz[k];

                    g_zzzz_xyyy[k] = fr * g11_zzz_xyyy[k] + f2g * (3.0 * g20_zz_xyyy[k] - 3.0 * fgz * g21_zz_xyyy[k]);

                    g_zzzz_xyyz[k] = fr * g11_zzz_xyyz[k] + f2g * (3.0 * g20_zz_xyyz[k] - 3.0 * fgz * g21_zz_xyyz[k]) + f2t * gk_zzz_xyy[k];

                    g_zzzz_xyzz[k] = fr * g11_zzz_xyzz[k] + f2g * (3.0 * g20_zz_xyzz[k] - 3.0 * fgz * g21_zz_xyzz[k]) + 2.0 * f2t * gk_zzz_xyz[k];

                    g_zzzz_xzzz[k] = fr * g11_zzz_xzzz[k] + f2g * (3.0 * g20_zz_xzzz[k] - 3.0 * fgz * g21_zz_xzzz[k]) + 3.0 * f2t * gk_zzz_xzz[k];

                    g_zzzz_yyyy[k] = fr * g11_zzz_yyyy[k] + f2g * (3.0 * g20_zz_yyyy[k] - 3.0 * fgz * g21_zz_yyyy[k]);

                    g_zzzz_yyyz[k] = fr * g11_zzz_yyyz[k] + f2g * (3.0 * g20_zz_yyyz[k] - 3.0 * fgz * g21_zz_yyyz[k]) + f2t * gk_zzz_yyy[k];

                    g_zzzz_yyzz[k] = fr * g11_zzz_yyzz[k] + f2g * (3.0 * g20_zz_yyzz[k] - 3.0 * fgz * g21_zz_yyzz[k]) + 2.0 * f2t * gk_zzz_yyz[k];

                    g_zzzz_yzzz[k] = fr * g11_zzz_yzzz[k] + f2g * (3.0 * g20_zz_yzzz[k] - 3.0 * fgz * g21_zz_yzzz[k]) + 3.0 * f2t * gk_zzz_yzz[k];

                    g_zzzz_zzzz[k] = fr * g11_zzz_zzzz[k] + f2g * (3.0 * g20_zz_zzzz[k] - 3.0 * fgz * g21_zz_zzzz[k]) + 4.0 * f2t * gk_zzz_zzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSH(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 5);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 5, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 3, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SF)^(m) integrals

                auto g20_0_xxx = primBuffer.data(g20off + 10 * idx);

                auto g20_0_xxy = primBuffer.data(g20off + 10 * idx + 1);

                auto g20_0_xxz = primBuffer.data(g20off + 10 * idx + 2);

                auto g20_0_xyy = primBuffer.data(g20off + 10 * idx + 3);

                auto g20_0_xyz = primBuffer.data(g20off + 10 * idx + 4);

                auto g20_0_xzz = primBuffer.data(g20off + 10 * idx + 5);

                auto g20_0_yyy = primBuffer.data(g20off + 10 * idx + 6);

                auto g20_0_yyz = primBuffer.data(g20off + 10 * idx + 7);

                auto g20_0_yzz = primBuffer.data(g20off + 10 * idx + 8);

                auto g20_0_zzz = primBuffer.data(g20off + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SF)^(m+1) integrals

                auto g21_0_xxx = primBuffer.data(g21off + 10 * idx);

                auto g21_0_xxy = primBuffer.data(g21off + 10 * idx + 1);

                auto g21_0_xxz = primBuffer.data(g21off + 10 * idx + 2);

                auto g21_0_xyy = primBuffer.data(g21off + 10 * idx + 3);

                auto g21_0_xyz = primBuffer.data(g21off + 10 * idx + 4);

                auto g21_0_xzz = primBuffer.data(g21off + 10 * idx + 5);

                auto g21_0_yyy = primBuffer.data(g21off + 10 * idx + 6);

                auto g21_0_yyz = primBuffer.data(g21off + 10 * idx + 7);

                auto g21_0_yzz = primBuffer.data(g21off + 10 * idx + 8);

                auto g21_0_zzz = primBuffer.data(g21off + 10 * idx + 9);

                // set up pointers to (S|g(r,r')|SG)^(m) integrals

                auto g10_0_xxxx = primBuffer.data(g10off + 15 * idx);

                auto g10_0_xxxy = primBuffer.data(g10off + 15 * idx + 1);

                auto g10_0_xxxz = primBuffer.data(g10off + 15 * idx + 2);

                auto g10_0_xxyy = primBuffer.data(g10off + 15 * idx + 3);

                auto g10_0_xxyz = primBuffer.data(g10off + 15 * idx + 4);

                auto g10_0_xxzz = primBuffer.data(g10off + 15 * idx + 5);

                auto g10_0_xyyy = primBuffer.data(g10off + 15 * idx + 6);

                auto g10_0_xyyz = primBuffer.data(g10off + 15 * idx + 7);

                auto g10_0_xyzz = primBuffer.data(g10off + 15 * idx + 8);

                auto g10_0_xzzz = primBuffer.data(g10off + 15 * idx + 9);

                auto g10_0_yyyy = primBuffer.data(g10off + 15 * idx + 10);

                auto g10_0_yyyz = primBuffer.data(g10off + 15 * idx + 11);

                auto g10_0_yyzz = primBuffer.data(g10off + 15 * idx + 12);

                auto g10_0_yzzz = primBuffer.data(g10off + 15 * idx + 13);

                auto g10_0_zzzz = primBuffer.data(g10off + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SG)^(m+1) integrals

                auto g11_0_xxxx = primBuffer.data(g11off + 15 * idx);

                auto g11_0_xxxy = primBuffer.data(g11off + 15 * idx + 1);

                auto g11_0_xxxz = primBuffer.data(g11off + 15 * idx + 2);

                auto g11_0_xxyy = primBuffer.data(g11off + 15 * idx + 3);

                auto g11_0_xxyz = primBuffer.data(g11off + 15 * idx + 4);

                auto g11_0_xxzz = primBuffer.data(g11off + 15 * idx + 5);

                auto g11_0_xyyy = primBuffer.data(g11off + 15 * idx + 6);

                auto g11_0_xyyz = primBuffer.data(g11off + 15 * idx + 7);

                auto g11_0_xyzz = primBuffer.data(g11off + 15 * idx + 8);

                auto g11_0_xzzz = primBuffer.data(g11off + 15 * idx + 9);

                auto g11_0_yyyy = primBuffer.data(g11off + 15 * idx + 10);

                auto g11_0_yyyz = primBuffer.data(g11off + 15 * idx + 11);

                auto g11_0_yyzz = primBuffer.data(g11off + 15 * idx + 12);

                auto g11_0_yzzz = primBuffer.data(g11off + 15 * idx + 13);

                auto g11_0_zzzz = primBuffer.data(g11off + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SH)^(m) integrals

                auto g_0_xxxxx = primBuffer.data(goff + 21 * idx);

                auto g_0_xxxxy = primBuffer.data(goff + 21 * idx + 1);

                auto g_0_xxxxz = primBuffer.data(goff + 21 * idx + 2);

                auto g_0_xxxyy = primBuffer.data(goff + 21 * idx + 3);

                auto g_0_xxxyz = primBuffer.data(goff + 21 * idx + 4);

                auto g_0_xxxzz = primBuffer.data(goff + 21 * idx + 5);

                auto g_0_xxyyy = primBuffer.data(goff + 21 * idx + 6);

                auto g_0_xxyyz = primBuffer.data(goff + 21 * idx + 7);

                auto g_0_xxyzz = primBuffer.data(goff + 21 * idx + 8);

                auto g_0_xxzzz = primBuffer.data(goff + 21 * idx + 9);

                auto g_0_xyyyy = primBuffer.data(goff + 21 * idx + 10);

                auto g_0_xyyyz = primBuffer.data(goff + 21 * idx + 11);

                auto g_0_xyyzz = primBuffer.data(goff + 21 * idx + 12);

                auto g_0_xyzzz = primBuffer.data(goff + 21 * idx + 13);

                auto g_0_xzzzz = primBuffer.data(goff + 21 * idx + 14);

                auto g_0_yyyyy = primBuffer.data(goff + 21 * idx + 15);

                auto g_0_yyyyz = primBuffer.data(goff + 21 * idx + 16);

                auto g_0_yyyzz = primBuffer.data(goff + 21 * idx + 17);

                auto g_0_yyzzz = primBuffer.data(goff + 21 * idx + 18);

                auto g_0_yzzzz = primBuffer.data(goff + 21 * idx + 19);

                auto g_0_zzzzz = primBuffer.data(goff + 21 * idx + 20);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_xxx, g20_0_xxy, g20_0_xxz, g20_0_xyy,\
                                         g20_0_xyz, g20_0_xzz, g20_0_yyy, g20_0_yyz,\
                                         g20_0_yzz, g20_0_zzz, g21_0_xxx, g21_0_xxy,\
                                         g21_0_xxz, g21_0_xyy, g21_0_xyz, g21_0_xzz,\
                                         g21_0_yyy, g21_0_yyz, g21_0_yzz, g21_0_zzz,\
                                         g10_0_xxxx, g10_0_xxxy, g10_0_xxxz, g10_0_xxyy,\
                                         g10_0_xxyz, g10_0_xxzz, g10_0_xyyy, g10_0_xyyz,\
                                         g10_0_xyzz, g10_0_xzzz, g10_0_yyyy, g10_0_yyyz,\
                                         g10_0_yyzz, g10_0_yzzz, g10_0_zzzz, g11_0_xxxx,\
                                         g11_0_xxxy, g11_0_xxxz, g11_0_xxyy, g11_0_xxyz,\
                                         g11_0_xxzz, g11_0_xyyy, g11_0_xyyz, g11_0_xyzz,\
                                         g11_0_xzzz, g11_0_yyyy, g11_0_yyyz, g11_0_yyzz,\
                                         g11_0_yzzz, g11_0_zzzz, g_0_xxxxx, g_0_xxxxy,\
                                         g_0_xxxxz, g_0_xxxyy, g_0_xxxyz, g_0_xxxzz,\
                                         g_0_xxyyy, g_0_xxyyz, g_0_xxyzz, g_0_xxzzz,\
                                         g_0_xyyyy, g_0_xyyyz, g_0_xyyzz, g_0_xyzzz,\
                                         g_0_xzzzz, g_0_yyyyy, g_0_yyyyz, g_0_yyyzz,\
                                         g_0_yyzzz, g_0_yzzzz, g_0_zzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxxxx[k] = fra * g10_0_xxxx[k] + frb * g11_0_xxxx[k] + f2g * (4.0 * g20_0_xxx[k] - 4.0 * fgz * g21_0_xxx[k]);

                    g_0_xxxxy[k] = fra * g10_0_xxxy[k] + frb * g11_0_xxxy[k] + f2g * (3.0 * g20_0_xxy[k] - 3.0 * fgz * g21_0_xxy[k]);

                    g_0_xxxxz[k] = fra * g10_0_xxxz[k] + frb * g11_0_xxxz[k] + f2g * (3.0 * g20_0_xxz[k] - 3.0 * fgz * g21_0_xxz[k]);

                    g_0_xxxyy[k] = fra * g10_0_xxyy[k] + frb * g11_0_xxyy[k] + f2g * (2.0 * g20_0_xyy[k] - 2.0 * fgz * g21_0_xyy[k]);

                    g_0_xxxyz[k] = fra * g10_0_xxyz[k] + frb * g11_0_xxyz[k] + f2g * (2.0 * g20_0_xyz[k] - 2.0 * fgz * g21_0_xyz[k]);

                    g_0_xxxzz[k] = fra * g10_0_xxzz[k] + frb * g11_0_xxzz[k] + f2g * (2.0 * g20_0_xzz[k] - 2.0 * fgz * g21_0_xzz[k]);

                    g_0_xxyyy[k] = fra * g10_0_xyyy[k] + frb * g11_0_xyyy[k] + f2g * (g20_0_yyy[k] - fgz * g21_0_yyy[k]);

                    g_0_xxyyz[k] = fra * g10_0_xyyz[k] + frb * g11_0_xyyz[k] + f2g * (g20_0_yyz[k] - fgz * g21_0_yyz[k]);

                    g_0_xxyzz[k] = fra * g10_0_xyzz[k] + frb * g11_0_xyzz[k] + f2g * (g20_0_yzz[k] - fgz * g21_0_yzz[k]);

                    g_0_xxzzz[k] = fra * g10_0_xzzz[k] + frb * g11_0_xzzz[k] + f2g * (g20_0_zzz[k] - fgz * g21_0_zzz[k]);

                    g_0_xyyyy[k] = fra * g10_0_yyyy[k] + frb * g11_0_yyyy[k];

                    g_0_xyyyz[k] = fra * g10_0_yyyz[k] + frb * g11_0_yyyz[k];

                    g_0_xyyzz[k] = fra * g10_0_yyzz[k] + frb * g11_0_yyzz[k];

                    g_0_xyzzz[k] = fra * g10_0_yzzz[k] + frb * g11_0_yzzz[k];

                    g_0_xzzzz[k] = fra * g10_0_zzzz[k] + frb * g11_0_zzzz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyyyy[k] = fra * g10_0_yyyy[k] + frb * g11_0_yyyy[k] + f2g * (4.0 * g20_0_yyy[k] - 4.0 * fgz * g21_0_yyy[k]);

                    g_0_yyyyz[k] = fra * g10_0_yyyz[k] + frb * g11_0_yyyz[k] + f2g * (3.0 * g20_0_yyz[k] - 3.0 * fgz * g21_0_yyz[k]);

                    g_0_yyyzz[k] = fra * g10_0_yyzz[k] + frb * g11_0_yyzz[k] + f2g * (2.0 * g20_0_yzz[k] - 2.0 * fgz * g21_0_yzz[k]);

                    g_0_yyzzz[k] = fra * g10_0_yzzz[k] + frb * g11_0_yzzz[k] + f2g * (g20_0_zzz[k] - fgz * g21_0_zzz[k]);

                    g_0_yzzzz[k] = fra * g10_0_zzzz[k] + frb * g11_0_zzzz[k];

                    // leading z component

                    g_0_zzzzz[k] = qdz[k] * g10_0_zzzz[k] + wqz[k] * g11_0_zzzz[k] + f2g * (4.0 * g20_0_zzz[k] - 4.0 * fgz * g21_0_zzz[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSH(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 5);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 5, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 4, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SG)^(m+1) integrals

                auto gk_0_xxxx = primBuffer.data(gkoff + 15 * idx);

                auto gk_0_xxxy = primBuffer.data(gkoff + 15 * idx + 1);

                auto gk_0_xxxz = primBuffer.data(gkoff + 15 * idx + 2);

                auto gk_0_xxyy = primBuffer.data(gkoff + 15 * idx + 3);

                auto gk_0_xxyz = primBuffer.data(gkoff + 15 * idx + 4);

                auto gk_0_xxzz = primBuffer.data(gkoff + 15 * idx + 5);

                auto gk_0_xyyy = primBuffer.data(gkoff + 15 * idx + 6);

                auto gk_0_xyyz = primBuffer.data(gkoff + 15 * idx + 7);

                auto gk_0_xyzz = primBuffer.data(gkoff + 15 * idx + 8);

                auto gk_0_xzzz = primBuffer.data(gkoff + 15 * idx + 9);

                auto gk_0_yyyy = primBuffer.data(gkoff + 15 * idx + 10);

                auto gk_0_yyyz = primBuffer.data(gkoff + 15 * idx + 11);

                auto gk_0_yyzz = primBuffer.data(gkoff + 15 * idx + 12);

                auto gk_0_yzzz = primBuffer.data(gkoff + 15 * idx + 13);

                auto gk_0_zzzz = primBuffer.data(gkoff + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SH)^(m+1) integrals

                auto g11_0_xxxxx = primBuffer.data(g11off + 21 * idx);

                auto g11_0_xxxxy = primBuffer.data(g11off + 21 * idx + 1);

                auto g11_0_xxxxz = primBuffer.data(g11off + 21 * idx + 2);

                auto g11_0_xxxyy = primBuffer.data(g11off + 21 * idx + 3);

                auto g11_0_xxxyz = primBuffer.data(g11off + 21 * idx + 4);

                auto g11_0_xxxzz = primBuffer.data(g11off + 21 * idx + 5);

                auto g11_0_xxyyy = primBuffer.data(g11off + 21 * idx + 6);

                auto g11_0_xxyyz = primBuffer.data(g11off + 21 * idx + 7);

                auto g11_0_xxyzz = primBuffer.data(g11off + 21 * idx + 8);

                auto g11_0_xxzzz = primBuffer.data(g11off + 21 * idx + 9);

                auto g11_0_xyyyy = primBuffer.data(g11off + 21 * idx + 10);

                auto g11_0_xyyyz = primBuffer.data(g11off + 21 * idx + 11);

                auto g11_0_xyyzz = primBuffer.data(g11off + 21 * idx + 12);

                auto g11_0_xyzzz = primBuffer.data(g11off + 21 * idx + 13);

                auto g11_0_xzzzz = primBuffer.data(g11off + 21 * idx + 14);

                auto g11_0_yyyyy = primBuffer.data(g11off + 21 * idx + 15);

                auto g11_0_yyyyz = primBuffer.data(g11off + 21 * idx + 16);

                auto g11_0_yyyzz = primBuffer.data(g11off + 21 * idx + 17);

                auto g11_0_yyzzz = primBuffer.data(g11off + 21 * idx + 18);

                auto g11_0_yzzzz = primBuffer.data(g11off + 21 * idx + 19);

                auto g11_0_zzzzz = primBuffer.data(g11off + 21 * idx + 20);

                // set up pointers to (P|g(r,r')|SH)^(m) integrals

                auto g_x_xxxxx = primBuffer.data(goff + 63 * idx);

                auto g_x_xxxxy = primBuffer.data(goff + 63 * idx + 1);

                auto g_x_xxxxz = primBuffer.data(goff + 63 * idx + 2);

                auto g_x_xxxyy = primBuffer.data(goff + 63 * idx + 3);

                auto g_x_xxxyz = primBuffer.data(goff + 63 * idx + 4);

                auto g_x_xxxzz = primBuffer.data(goff + 63 * idx + 5);

                auto g_x_xxyyy = primBuffer.data(goff + 63 * idx + 6);

                auto g_x_xxyyz = primBuffer.data(goff + 63 * idx + 7);

                auto g_x_xxyzz = primBuffer.data(goff + 63 * idx + 8);

                auto g_x_xxzzz = primBuffer.data(goff + 63 * idx + 9);

                auto g_x_xyyyy = primBuffer.data(goff + 63 * idx + 10);

                auto g_x_xyyyz = primBuffer.data(goff + 63 * idx + 11);

                auto g_x_xyyzz = primBuffer.data(goff + 63 * idx + 12);

                auto g_x_xyzzz = primBuffer.data(goff + 63 * idx + 13);

                auto g_x_xzzzz = primBuffer.data(goff + 63 * idx + 14);

                auto g_x_yyyyy = primBuffer.data(goff + 63 * idx + 15);

                auto g_x_yyyyz = primBuffer.data(goff + 63 * idx + 16);

                auto g_x_yyyzz = primBuffer.data(goff + 63 * idx + 17);

                auto g_x_yyzzz = primBuffer.data(goff + 63 * idx + 18);

                auto g_x_yzzzz = primBuffer.data(goff + 63 * idx + 19);

                auto g_x_zzzzz = primBuffer.data(goff + 63 * idx + 20);

                auto g_y_xxxxx = primBuffer.data(goff + 63 * idx + 21);

                auto g_y_xxxxy = primBuffer.data(goff + 63 * idx + 22);

                auto g_y_xxxxz = primBuffer.data(goff + 63 * idx + 23);

                auto g_y_xxxyy = primBuffer.data(goff + 63 * idx + 24);

                auto g_y_xxxyz = primBuffer.data(goff + 63 * idx + 25);

                auto g_y_xxxzz = primBuffer.data(goff + 63 * idx + 26);

                auto g_y_xxyyy = primBuffer.data(goff + 63 * idx + 27);

                auto g_y_xxyyz = primBuffer.data(goff + 63 * idx + 28);

                auto g_y_xxyzz = primBuffer.data(goff + 63 * idx + 29);

                auto g_y_xxzzz = primBuffer.data(goff + 63 * idx + 30);

                auto g_y_xyyyy = primBuffer.data(goff + 63 * idx + 31);

                auto g_y_xyyyz = primBuffer.data(goff + 63 * idx + 32);

                auto g_y_xyyzz = primBuffer.data(goff + 63 * idx + 33);

                auto g_y_xyzzz = primBuffer.data(goff + 63 * idx + 34);

                auto g_y_xzzzz = primBuffer.data(goff + 63 * idx + 35);

                auto g_y_yyyyy = primBuffer.data(goff + 63 * idx + 36);

                auto g_y_yyyyz = primBuffer.data(goff + 63 * idx + 37);

                auto g_y_yyyzz = primBuffer.data(goff + 63 * idx + 38);

                auto g_y_yyzzz = primBuffer.data(goff + 63 * idx + 39);

                auto g_y_yzzzz = primBuffer.data(goff + 63 * idx + 40);

                auto g_y_zzzzz = primBuffer.data(goff + 63 * idx + 41);

                auto g_z_xxxxx = primBuffer.data(goff + 63 * idx + 42);

                auto g_z_xxxxy = primBuffer.data(goff + 63 * idx + 43);

                auto g_z_xxxxz = primBuffer.data(goff + 63 * idx + 44);

                auto g_z_xxxyy = primBuffer.data(goff + 63 * idx + 45);

                auto g_z_xxxyz = primBuffer.data(goff + 63 * idx + 46);

                auto g_z_xxxzz = primBuffer.data(goff + 63 * idx + 47);

                auto g_z_xxyyy = primBuffer.data(goff + 63 * idx + 48);

                auto g_z_xxyyz = primBuffer.data(goff + 63 * idx + 49);

                auto g_z_xxyzz = primBuffer.data(goff + 63 * idx + 50);

                auto g_z_xxzzz = primBuffer.data(goff + 63 * idx + 51);

                auto g_z_xyyyy = primBuffer.data(goff + 63 * idx + 52);

                auto g_z_xyyyz = primBuffer.data(goff + 63 * idx + 53);

                auto g_z_xyyzz = primBuffer.data(goff + 63 * idx + 54);

                auto g_z_xyzzz = primBuffer.data(goff + 63 * idx + 55);

                auto g_z_xzzzz = primBuffer.data(goff + 63 * idx + 56);

                auto g_z_yyyyy = primBuffer.data(goff + 63 * idx + 57);

                auto g_z_yyyyz = primBuffer.data(goff + 63 * idx + 58);

                auto g_z_yyyzz = primBuffer.data(goff + 63 * idx + 59);

                auto g_z_yyzzz = primBuffer.data(goff + 63 * idx + 60);

                auto g_z_yzzzz = primBuffer.data(goff + 63 * idx + 61);

                auto g_z_zzzzz = primBuffer.data(goff + 63 * idx + 62);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xxxx, gk_0_xxxy,\
                                         gk_0_xxxz, gk_0_xxyy, gk_0_xxyz, gk_0_xxzz,\
                                         gk_0_xyyy, gk_0_xyyz, gk_0_xyzz, gk_0_xzzz,\
                                         gk_0_yyyy, gk_0_yyyz, gk_0_yyzz, gk_0_yzzz,\
                                         gk_0_zzzz, g11_0_xxxxx, g11_0_xxxxy, g11_0_xxxxz,\
                                         g11_0_xxxyy, g11_0_xxxyz, g11_0_xxxzz,\
                                         g11_0_xxyyy, g11_0_xxyyz, g11_0_xxyzz,\
                                         g11_0_xxzzz, g11_0_xyyyy, g11_0_xyyyz,\
                                         g11_0_xyyzz, g11_0_xyzzz, g11_0_xzzzz,\
                                         g11_0_yyyyy, g11_0_yyyyz, g11_0_yyyzz,\
                                         g11_0_yyzzz, g11_0_yzzzz, g11_0_zzzzz,\
                                         g_x_xxxxx, g_x_xxxxy, g_x_xxxxz, g_x_xxxyy,\
                                         g_x_xxxyz, g_x_xxxzz, g_x_xxyyy, g_x_xxyyz,\
                                         g_x_xxyzz, g_x_xxzzz, g_x_xyyyy, g_x_xyyyz,\
                                         g_x_xyyzz, g_x_xyzzz, g_x_xzzzz, g_x_yyyyy,\
                                         g_x_yyyyz, g_x_yyyzz, g_x_yyzzz, g_x_yzzzz,\
                                         g_x_zzzzz, g_y_xxxxx, g_y_xxxxy, g_y_xxxxz,\
                                         g_y_xxxyy, g_y_xxxyz, g_y_xxxzz, g_y_xxyyy,\
                                         g_y_xxyyz, g_y_xxyzz, g_y_xxzzz, g_y_xyyyy,\
                                         g_y_xyyyz, g_y_xyyzz, g_y_xyzzz, g_y_xzzzz,\
                                         g_y_yyyyy, g_y_yyyyz, g_y_yyyzz, g_y_yyzzz,\
                                         g_y_yzzzz, g_y_zzzzz, g_z_xxxxx, g_z_xxxxy,\
                                         g_z_xxxxz, g_z_xxxyy, g_z_xxxyz, g_z_xxxzz,\
                                         g_z_xxyyy, g_z_xxyyz, g_z_xxyzz, g_z_xxzzz,\
                                         g_z_xyyyy, g_z_xyyyz, g_z_xyyzz, g_z_xyzzz,\
                                         g_z_xzzzz, g_z_yyyyy, g_z_yyyyz, g_z_yyyzz,\
                                         g_z_yyzzz, g_z_yzzzz, g_z_zzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxxxx[k] = fr * g11_0_xxxxx[k] + 5.0 * f2t * gk_0_xxxx[k];

                    g_x_xxxxy[k] = fr * g11_0_xxxxy[k] + 4.0 * f2t * gk_0_xxxy[k];

                    g_x_xxxxz[k] = fr * g11_0_xxxxz[k] + 4.0 * f2t * gk_0_xxxz[k];

                    g_x_xxxyy[k] = fr * g11_0_xxxyy[k] + 3.0 * f2t * gk_0_xxyy[k];

                    g_x_xxxyz[k] = fr * g11_0_xxxyz[k] + 3.0 * f2t * gk_0_xxyz[k];

                    g_x_xxxzz[k] = fr * g11_0_xxxzz[k] + 3.0 * f2t * gk_0_xxzz[k];

                    g_x_xxyyy[k] = fr * g11_0_xxyyy[k] + 2.0 * f2t * gk_0_xyyy[k];

                    g_x_xxyyz[k] = fr * g11_0_xxyyz[k] + 2.0 * f2t * gk_0_xyyz[k];

                    g_x_xxyzz[k] = fr * g11_0_xxyzz[k] + 2.0 * f2t * gk_0_xyzz[k];

                    g_x_xxzzz[k] = fr * g11_0_xxzzz[k] + 2.0 * f2t * gk_0_xzzz[k];

                    g_x_xyyyy[k] = fr * g11_0_xyyyy[k] + f2t * gk_0_yyyy[k];

                    g_x_xyyyz[k] = fr * g11_0_xyyyz[k] + f2t * gk_0_yyyz[k];

                    g_x_xyyzz[k] = fr * g11_0_xyyzz[k] + f2t * gk_0_yyzz[k];

                    g_x_xyzzz[k] = fr * g11_0_xyzzz[k] + f2t * gk_0_yzzz[k];

                    g_x_xzzzz[k] = fr * g11_0_xzzzz[k] + f2t * gk_0_zzzz[k];

                    g_x_yyyyy[k] = fr * g11_0_yyyyy[k];

                    g_x_yyyyz[k] = fr * g11_0_yyyyz[k];

                    g_x_yyyzz[k] = fr * g11_0_yyyzz[k];

                    g_x_yyzzz[k] = fr * g11_0_yyzzz[k];

                    g_x_yzzzz[k] = fr * g11_0_yzzzz[k];

                    g_x_zzzzz[k] = fr * g11_0_zzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxxxx[k] = fr * g11_0_xxxxx[k];

                    g_y_xxxxy[k] = fr * g11_0_xxxxy[k] + f2t * gk_0_xxxx[k];

                    g_y_xxxxz[k] = fr * g11_0_xxxxz[k];

                    g_y_xxxyy[k] = fr * g11_0_xxxyy[k] + 2.0 * f2t * gk_0_xxxy[k];

                    g_y_xxxyz[k] = fr * g11_0_xxxyz[k] + f2t * gk_0_xxxz[k];

                    g_y_xxxzz[k] = fr * g11_0_xxxzz[k];

                    g_y_xxyyy[k] = fr * g11_0_xxyyy[k] + 3.0 * f2t * gk_0_xxyy[k];

                    g_y_xxyyz[k] = fr * g11_0_xxyyz[k] + 2.0 * f2t * gk_0_xxyz[k];

                    g_y_xxyzz[k] = fr * g11_0_xxyzz[k] + f2t * gk_0_xxzz[k];

                    g_y_xxzzz[k] = fr * g11_0_xxzzz[k];

                    g_y_xyyyy[k] = fr * g11_0_xyyyy[k] + 4.0 * f2t * gk_0_xyyy[k];

                    g_y_xyyyz[k] = fr * g11_0_xyyyz[k] + 3.0 * f2t * gk_0_xyyz[k];

                    g_y_xyyzz[k] = fr * g11_0_xyyzz[k] + 2.0 * f2t * gk_0_xyzz[k];

                    g_y_xyzzz[k] = fr * g11_0_xyzzz[k] + f2t * gk_0_xzzz[k];

                    g_y_xzzzz[k] = fr * g11_0_xzzzz[k];

                    g_y_yyyyy[k] = fr * g11_0_yyyyy[k] + 5.0 * f2t * gk_0_yyyy[k];

                    g_y_yyyyz[k] = fr * g11_0_yyyyz[k] + 4.0 * f2t * gk_0_yyyz[k];

                    g_y_yyyzz[k] = fr * g11_0_yyyzz[k] + 3.0 * f2t * gk_0_yyzz[k];

                    g_y_yyzzz[k] = fr * g11_0_yyzzz[k] + 2.0 * f2t * gk_0_yzzz[k];

                    g_y_yzzzz[k] = fr * g11_0_yzzzz[k] + f2t * gk_0_zzzz[k];

                    g_y_zzzzz[k] = fr * g11_0_zzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxxxx[k] = fr * g11_0_xxxxx[k];

                    g_z_xxxxy[k] = fr * g11_0_xxxxy[k];

                    g_z_xxxxz[k] = fr * g11_0_xxxxz[k] + f2t * gk_0_xxxx[k];

                    g_z_xxxyy[k] = fr * g11_0_xxxyy[k];

                    g_z_xxxyz[k] = fr * g11_0_xxxyz[k] + f2t * gk_0_xxxy[k];

                    g_z_xxxzz[k] = fr * g11_0_xxxzz[k] + 2.0 * f2t * gk_0_xxxz[k];

                    g_z_xxyyy[k] = fr * g11_0_xxyyy[k];

                    g_z_xxyyz[k] = fr * g11_0_xxyyz[k] + f2t * gk_0_xxyy[k];

                    g_z_xxyzz[k] = fr * g11_0_xxyzz[k] + 2.0 * f2t * gk_0_xxyz[k];

                    g_z_xxzzz[k] = fr * g11_0_xxzzz[k] + 3.0 * f2t * gk_0_xxzz[k];

                    g_z_xyyyy[k] = fr * g11_0_xyyyy[k];

                    g_z_xyyyz[k] = fr * g11_0_xyyyz[k] + f2t * gk_0_xyyy[k];

                    g_z_xyyzz[k] = fr * g11_0_xyyzz[k] + 2.0 * f2t * gk_0_xyyz[k];

                    g_z_xyzzz[k] = fr * g11_0_xyzzz[k] + 3.0 * f2t * gk_0_xyzz[k];

                    g_z_xzzzz[k] = fr * g11_0_xzzzz[k] + 4.0 * f2t * gk_0_xzzz[k];

                    g_z_yyyyy[k] = fr * g11_0_yyyyy[k];

                    g_z_yyyyz[k] = fr * g11_0_yyyyz[k] + f2t * gk_0_yyyy[k];

                    g_z_yyyzz[k] = fr * g11_0_yyyzz[k] + 2.0 * f2t * gk_0_yyyz[k];

                    g_z_yyzzz[k] = fr * g11_0_yyzzz[k] + 3.0 * f2t * gk_0_yyzz[k];

                    g_z_yzzzz[k] = fr * g11_0_yzzzz[k] + 4.0 * f2t * gk_0_yzzz[k];

                    g_z_zzzzz[k] = fr * g11_0_zzzzz[k] + 5.0 * f2t * gk_0_zzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSH(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 5);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 5, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 5, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 4, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SG)^(m+1) integrals

                auto gk_x_xxxx = primBuffer.data(gkoff + 45 * idx);

                auto gk_x_xxxy = primBuffer.data(gkoff + 45 * idx + 1);

                auto gk_x_xxxz = primBuffer.data(gkoff + 45 * idx + 2);

                auto gk_x_xxyy = primBuffer.data(gkoff + 45 * idx + 3);

                auto gk_x_xxyz = primBuffer.data(gkoff + 45 * idx + 4);

                auto gk_x_xxzz = primBuffer.data(gkoff + 45 * idx + 5);

                auto gk_x_xyyy = primBuffer.data(gkoff + 45 * idx + 6);

                auto gk_x_xyyz = primBuffer.data(gkoff + 45 * idx + 7);

                auto gk_x_xyzz = primBuffer.data(gkoff + 45 * idx + 8);

                auto gk_x_xzzz = primBuffer.data(gkoff + 45 * idx + 9);

                auto gk_x_yyyy = primBuffer.data(gkoff + 45 * idx + 10);

                auto gk_x_yyyz = primBuffer.data(gkoff + 45 * idx + 11);

                auto gk_x_yyzz = primBuffer.data(gkoff + 45 * idx + 12);

                auto gk_x_yzzz = primBuffer.data(gkoff + 45 * idx + 13);

                auto gk_x_zzzz = primBuffer.data(gkoff + 45 * idx + 14);

                auto gk_y_xxxx = primBuffer.data(gkoff + 45 * idx + 15);

                auto gk_y_xxxy = primBuffer.data(gkoff + 45 * idx + 16);

                auto gk_y_xxxz = primBuffer.data(gkoff + 45 * idx + 17);

                auto gk_y_xxyy = primBuffer.data(gkoff + 45 * idx + 18);

                auto gk_y_xxyz = primBuffer.data(gkoff + 45 * idx + 19);

                auto gk_y_xxzz = primBuffer.data(gkoff + 45 * idx + 20);

                auto gk_y_xyyy = primBuffer.data(gkoff + 45 * idx + 21);

                auto gk_y_xyyz = primBuffer.data(gkoff + 45 * idx + 22);

                auto gk_y_xyzz = primBuffer.data(gkoff + 45 * idx + 23);

                auto gk_y_xzzz = primBuffer.data(gkoff + 45 * idx + 24);

                auto gk_y_yyyy = primBuffer.data(gkoff + 45 * idx + 25);

                auto gk_y_yyyz = primBuffer.data(gkoff + 45 * idx + 26);

                auto gk_y_yyzz = primBuffer.data(gkoff + 45 * idx + 27);

                auto gk_y_yzzz = primBuffer.data(gkoff + 45 * idx + 28);

                auto gk_y_zzzz = primBuffer.data(gkoff + 45 * idx + 29);

                auto gk_z_xxxx = primBuffer.data(gkoff + 45 * idx + 30);

                auto gk_z_xxxy = primBuffer.data(gkoff + 45 * idx + 31);

                auto gk_z_xxxz = primBuffer.data(gkoff + 45 * idx + 32);

                auto gk_z_xxyy = primBuffer.data(gkoff + 45 * idx + 33);

                auto gk_z_xxyz = primBuffer.data(gkoff + 45 * idx + 34);

                auto gk_z_xxzz = primBuffer.data(gkoff + 45 * idx + 35);

                auto gk_z_xyyy = primBuffer.data(gkoff + 45 * idx + 36);

                auto gk_z_xyyz = primBuffer.data(gkoff + 45 * idx + 37);

                auto gk_z_xyzz = primBuffer.data(gkoff + 45 * idx + 38);

                auto gk_z_xzzz = primBuffer.data(gkoff + 45 * idx + 39);

                auto gk_z_yyyy = primBuffer.data(gkoff + 45 * idx + 40);

                auto gk_z_yyyz = primBuffer.data(gkoff + 45 * idx + 41);

                auto gk_z_yyzz = primBuffer.data(gkoff + 45 * idx + 42);

                auto gk_z_yzzz = primBuffer.data(gkoff + 45 * idx + 43);

                auto gk_z_zzzz = primBuffer.data(gkoff + 45 * idx + 44);

                // set up pointers to (S|g(r,r')|SH)^(m) integrals

                auto g20_0_xxxxx = primBuffer.data(g20off + 21 * idx);

                auto g20_0_xxxxy = primBuffer.data(g20off + 21 * idx + 1);

                auto g20_0_xxxxz = primBuffer.data(g20off + 21 * idx + 2);

                auto g20_0_xxxyy = primBuffer.data(g20off + 21 * idx + 3);

                auto g20_0_xxxyz = primBuffer.data(g20off + 21 * idx + 4);

                auto g20_0_xxxzz = primBuffer.data(g20off + 21 * idx + 5);

                auto g20_0_xxyyy = primBuffer.data(g20off + 21 * idx + 6);

                auto g20_0_xxyyz = primBuffer.data(g20off + 21 * idx + 7);

                auto g20_0_xxyzz = primBuffer.data(g20off + 21 * idx + 8);

                auto g20_0_xxzzz = primBuffer.data(g20off + 21 * idx + 9);

                auto g20_0_xyyyy = primBuffer.data(g20off + 21 * idx + 10);

                auto g20_0_xyyyz = primBuffer.data(g20off + 21 * idx + 11);

                auto g20_0_xyyzz = primBuffer.data(g20off + 21 * idx + 12);

                auto g20_0_xyzzz = primBuffer.data(g20off + 21 * idx + 13);

                auto g20_0_xzzzz = primBuffer.data(g20off + 21 * idx + 14);

                auto g20_0_yyyyy = primBuffer.data(g20off + 21 * idx + 15);

                auto g20_0_yyyyz = primBuffer.data(g20off + 21 * idx + 16);

                auto g20_0_yyyzz = primBuffer.data(g20off + 21 * idx + 17);

                auto g20_0_yyzzz = primBuffer.data(g20off + 21 * idx + 18);

                auto g20_0_yzzzz = primBuffer.data(g20off + 21 * idx + 19);

                auto g20_0_zzzzz = primBuffer.data(g20off + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SH)^(m+1) integrals

                auto g21_0_xxxxx = primBuffer.data(g21off + 21 * idx);

                auto g21_0_xxxxy = primBuffer.data(g21off + 21 * idx + 1);

                auto g21_0_xxxxz = primBuffer.data(g21off + 21 * idx + 2);

                auto g21_0_xxxyy = primBuffer.data(g21off + 21 * idx + 3);

                auto g21_0_xxxyz = primBuffer.data(g21off + 21 * idx + 4);

                auto g21_0_xxxzz = primBuffer.data(g21off + 21 * idx + 5);

                auto g21_0_xxyyy = primBuffer.data(g21off + 21 * idx + 6);

                auto g21_0_xxyyz = primBuffer.data(g21off + 21 * idx + 7);

                auto g21_0_xxyzz = primBuffer.data(g21off + 21 * idx + 8);

                auto g21_0_xxzzz = primBuffer.data(g21off + 21 * idx + 9);

                auto g21_0_xyyyy = primBuffer.data(g21off + 21 * idx + 10);

                auto g21_0_xyyyz = primBuffer.data(g21off + 21 * idx + 11);

                auto g21_0_xyyzz = primBuffer.data(g21off + 21 * idx + 12);

                auto g21_0_xyzzz = primBuffer.data(g21off + 21 * idx + 13);

                auto g21_0_xzzzz = primBuffer.data(g21off + 21 * idx + 14);

                auto g21_0_yyyyy = primBuffer.data(g21off + 21 * idx + 15);

                auto g21_0_yyyyz = primBuffer.data(g21off + 21 * idx + 16);

                auto g21_0_yyyzz = primBuffer.data(g21off + 21 * idx + 17);

                auto g21_0_yyzzz = primBuffer.data(g21off + 21 * idx + 18);

                auto g21_0_yzzzz = primBuffer.data(g21off + 21 * idx + 19);

                auto g21_0_zzzzz = primBuffer.data(g21off + 21 * idx + 20);

                // set up pointers to (P|g(r,r')|SH)^(m+1) integrals

                auto g11_x_xxxxx = primBuffer.data(g11off + 63 * idx);

                auto g11_x_xxxxy = primBuffer.data(g11off + 63 * idx + 1);

                auto g11_x_xxxxz = primBuffer.data(g11off + 63 * idx + 2);

                auto g11_x_xxxyy = primBuffer.data(g11off + 63 * idx + 3);

                auto g11_x_xxxyz = primBuffer.data(g11off + 63 * idx + 4);

                auto g11_x_xxxzz = primBuffer.data(g11off + 63 * idx + 5);

                auto g11_x_xxyyy = primBuffer.data(g11off + 63 * idx + 6);

                auto g11_x_xxyyz = primBuffer.data(g11off + 63 * idx + 7);

                auto g11_x_xxyzz = primBuffer.data(g11off + 63 * idx + 8);

                auto g11_x_xxzzz = primBuffer.data(g11off + 63 * idx + 9);

                auto g11_x_xyyyy = primBuffer.data(g11off + 63 * idx + 10);

                auto g11_x_xyyyz = primBuffer.data(g11off + 63 * idx + 11);

                auto g11_x_xyyzz = primBuffer.data(g11off + 63 * idx + 12);

                auto g11_x_xyzzz = primBuffer.data(g11off + 63 * idx + 13);

                auto g11_x_xzzzz = primBuffer.data(g11off + 63 * idx + 14);

                auto g11_x_yyyyy = primBuffer.data(g11off + 63 * idx + 15);

                auto g11_x_yyyyz = primBuffer.data(g11off + 63 * idx + 16);

                auto g11_x_yyyzz = primBuffer.data(g11off + 63 * idx + 17);

                auto g11_x_yyzzz = primBuffer.data(g11off + 63 * idx + 18);

                auto g11_x_yzzzz = primBuffer.data(g11off + 63 * idx + 19);

                auto g11_x_zzzzz = primBuffer.data(g11off + 63 * idx + 20);

                auto g11_y_xxxxx = primBuffer.data(g11off + 63 * idx + 21);

                auto g11_y_xxxxy = primBuffer.data(g11off + 63 * idx + 22);

                auto g11_y_xxxxz = primBuffer.data(g11off + 63 * idx + 23);

                auto g11_y_xxxyy = primBuffer.data(g11off + 63 * idx + 24);

                auto g11_y_xxxyz = primBuffer.data(g11off + 63 * idx + 25);

                auto g11_y_xxxzz = primBuffer.data(g11off + 63 * idx + 26);

                auto g11_y_xxyyy = primBuffer.data(g11off + 63 * idx + 27);

                auto g11_y_xxyyz = primBuffer.data(g11off + 63 * idx + 28);

                auto g11_y_xxyzz = primBuffer.data(g11off + 63 * idx + 29);

                auto g11_y_xxzzz = primBuffer.data(g11off + 63 * idx + 30);

                auto g11_y_xyyyy = primBuffer.data(g11off + 63 * idx + 31);

                auto g11_y_xyyyz = primBuffer.data(g11off + 63 * idx + 32);

                auto g11_y_xyyzz = primBuffer.data(g11off + 63 * idx + 33);

                auto g11_y_xyzzz = primBuffer.data(g11off + 63 * idx + 34);

                auto g11_y_xzzzz = primBuffer.data(g11off + 63 * idx + 35);

                auto g11_y_yyyyy = primBuffer.data(g11off + 63 * idx + 36);

                auto g11_y_yyyyz = primBuffer.data(g11off + 63 * idx + 37);

                auto g11_y_yyyzz = primBuffer.data(g11off + 63 * idx + 38);

                auto g11_y_yyzzz = primBuffer.data(g11off + 63 * idx + 39);

                auto g11_y_yzzzz = primBuffer.data(g11off + 63 * idx + 40);

                auto g11_y_zzzzz = primBuffer.data(g11off + 63 * idx + 41);

                auto g11_z_xxxxx = primBuffer.data(g11off + 63 * idx + 42);

                auto g11_z_xxxxy = primBuffer.data(g11off + 63 * idx + 43);

                auto g11_z_xxxxz = primBuffer.data(g11off + 63 * idx + 44);

                auto g11_z_xxxyy = primBuffer.data(g11off + 63 * idx + 45);

                auto g11_z_xxxyz = primBuffer.data(g11off + 63 * idx + 46);

                auto g11_z_xxxzz = primBuffer.data(g11off + 63 * idx + 47);

                auto g11_z_xxyyy = primBuffer.data(g11off + 63 * idx + 48);

                auto g11_z_xxyyz = primBuffer.data(g11off + 63 * idx + 49);

                auto g11_z_xxyzz = primBuffer.data(g11off + 63 * idx + 50);

                auto g11_z_xxzzz = primBuffer.data(g11off + 63 * idx + 51);

                auto g11_z_xyyyy = primBuffer.data(g11off + 63 * idx + 52);

                auto g11_z_xyyyz = primBuffer.data(g11off + 63 * idx + 53);

                auto g11_z_xyyzz = primBuffer.data(g11off + 63 * idx + 54);

                auto g11_z_xyzzz = primBuffer.data(g11off + 63 * idx + 55);

                auto g11_z_xzzzz = primBuffer.data(g11off + 63 * idx + 56);

                auto g11_z_yyyyy = primBuffer.data(g11off + 63 * idx + 57);

                auto g11_z_yyyyz = primBuffer.data(g11off + 63 * idx + 58);

                auto g11_z_yyyzz = primBuffer.data(g11off + 63 * idx + 59);

                auto g11_z_yyzzz = primBuffer.data(g11off + 63 * idx + 60);

                auto g11_z_yzzzz = primBuffer.data(g11off + 63 * idx + 61);

                auto g11_z_zzzzz = primBuffer.data(g11off + 63 * idx + 62);

                // set up pointers to (D|g(r,r')|SH)^(m) integrals

                auto g_xx_xxxxx = primBuffer.data(goff + 126 * idx);

                auto g_xx_xxxxy = primBuffer.data(goff + 126 * idx + 1);

                auto g_xx_xxxxz = primBuffer.data(goff + 126 * idx + 2);

                auto g_xx_xxxyy = primBuffer.data(goff + 126 * idx + 3);

                auto g_xx_xxxyz = primBuffer.data(goff + 126 * idx + 4);

                auto g_xx_xxxzz = primBuffer.data(goff + 126 * idx + 5);

                auto g_xx_xxyyy = primBuffer.data(goff + 126 * idx + 6);

                auto g_xx_xxyyz = primBuffer.data(goff + 126 * idx + 7);

                auto g_xx_xxyzz = primBuffer.data(goff + 126 * idx + 8);

                auto g_xx_xxzzz = primBuffer.data(goff + 126 * idx + 9);

                auto g_xx_xyyyy = primBuffer.data(goff + 126 * idx + 10);

                auto g_xx_xyyyz = primBuffer.data(goff + 126 * idx + 11);

                auto g_xx_xyyzz = primBuffer.data(goff + 126 * idx + 12);

                auto g_xx_xyzzz = primBuffer.data(goff + 126 * idx + 13);

                auto g_xx_xzzzz = primBuffer.data(goff + 126 * idx + 14);

                auto g_xx_yyyyy = primBuffer.data(goff + 126 * idx + 15);

                auto g_xx_yyyyz = primBuffer.data(goff + 126 * idx + 16);

                auto g_xx_yyyzz = primBuffer.data(goff + 126 * idx + 17);

                auto g_xx_yyzzz = primBuffer.data(goff + 126 * idx + 18);

                auto g_xx_yzzzz = primBuffer.data(goff + 126 * idx + 19);

                auto g_xx_zzzzz = primBuffer.data(goff + 126 * idx + 20);

                auto g_xy_xxxxx = primBuffer.data(goff + 126 * idx + 21);

                auto g_xy_xxxxy = primBuffer.data(goff + 126 * idx + 22);

                auto g_xy_xxxxz = primBuffer.data(goff + 126 * idx + 23);

                auto g_xy_xxxyy = primBuffer.data(goff + 126 * idx + 24);

                auto g_xy_xxxyz = primBuffer.data(goff + 126 * idx + 25);

                auto g_xy_xxxzz = primBuffer.data(goff + 126 * idx + 26);

                auto g_xy_xxyyy = primBuffer.data(goff + 126 * idx + 27);

                auto g_xy_xxyyz = primBuffer.data(goff + 126 * idx + 28);

                auto g_xy_xxyzz = primBuffer.data(goff + 126 * idx + 29);

                auto g_xy_xxzzz = primBuffer.data(goff + 126 * idx + 30);

                auto g_xy_xyyyy = primBuffer.data(goff + 126 * idx + 31);

                auto g_xy_xyyyz = primBuffer.data(goff + 126 * idx + 32);

                auto g_xy_xyyzz = primBuffer.data(goff + 126 * idx + 33);

                auto g_xy_xyzzz = primBuffer.data(goff + 126 * idx + 34);

                auto g_xy_xzzzz = primBuffer.data(goff + 126 * idx + 35);

                auto g_xy_yyyyy = primBuffer.data(goff + 126 * idx + 36);

                auto g_xy_yyyyz = primBuffer.data(goff + 126 * idx + 37);

                auto g_xy_yyyzz = primBuffer.data(goff + 126 * idx + 38);

                auto g_xy_yyzzz = primBuffer.data(goff + 126 * idx + 39);

                auto g_xy_yzzzz = primBuffer.data(goff + 126 * idx + 40);

                auto g_xy_zzzzz = primBuffer.data(goff + 126 * idx + 41);

                auto g_xz_xxxxx = primBuffer.data(goff + 126 * idx + 42);

                auto g_xz_xxxxy = primBuffer.data(goff + 126 * idx + 43);

                auto g_xz_xxxxz = primBuffer.data(goff + 126 * idx + 44);

                auto g_xz_xxxyy = primBuffer.data(goff + 126 * idx + 45);

                auto g_xz_xxxyz = primBuffer.data(goff + 126 * idx + 46);

                auto g_xz_xxxzz = primBuffer.data(goff + 126 * idx + 47);

                auto g_xz_xxyyy = primBuffer.data(goff + 126 * idx + 48);

                auto g_xz_xxyyz = primBuffer.data(goff + 126 * idx + 49);

                auto g_xz_xxyzz = primBuffer.data(goff + 126 * idx + 50);

                auto g_xz_xxzzz = primBuffer.data(goff + 126 * idx + 51);

                auto g_xz_xyyyy = primBuffer.data(goff + 126 * idx + 52);

                auto g_xz_xyyyz = primBuffer.data(goff + 126 * idx + 53);

                auto g_xz_xyyzz = primBuffer.data(goff + 126 * idx + 54);

                auto g_xz_xyzzz = primBuffer.data(goff + 126 * idx + 55);

                auto g_xz_xzzzz = primBuffer.data(goff + 126 * idx + 56);

                auto g_xz_yyyyy = primBuffer.data(goff + 126 * idx + 57);

                auto g_xz_yyyyz = primBuffer.data(goff + 126 * idx + 58);

                auto g_xz_yyyzz = primBuffer.data(goff + 126 * idx + 59);

                auto g_xz_yyzzz = primBuffer.data(goff + 126 * idx + 60);

                auto g_xz_yzzzz = primBuffer.data(goff + 126 * idx + 61);

                auto g_xz_zzzzz = primBuffer.data(goff + 126 * idx + 62);

                auto g_yy_xxxxx = primBuffer.data(goff + 126 * idx + 63);

                auto g_yy_xxxxy = primBuffer.data(goff + 126 * idx + 64);

                auto g_yy_xxxxz = primBuffer.data(goff + 126 * idx + 65);

                auto g_yy_xxxyy = primBuffer.data(goff + 126 * idx + 66);

                auto g_yy_xxxyz = primBuffer.data(goff + 126 * idx + 67);

                auto g_yy_xxxzz = primBuffer.data(goff + 126 * idx + 68);

                auto g_yy_xxyyy = primBuffer.data(goff + 126 * idx + 69);

                auto g_yy_xxyyz = primBuffer.data(goff + 126 * idx + 70);

                auto g_yy_xxyzz = primBuffer.data(goff + 126 * idx + 71);

                auto g_yy_xxzzz = primBuffer.data(goff + 126 * idx + 72);

                auto g_yy_xyyyy = primBuffer.data(goff + 126 * idx + 73);

                auto g_yy_xyyyz = primBuffer.data(goff + 126 * idx + 74);

                auto g_yy_xyyzz = primBuffer.data(goff + 126 * idx + 75);

                auto g_yy_xyzzz = primBuffer.data(goff + 126 * idx + 76);

                auto g_yy_xzzzz = primBuffer.data(goff + 126 * idx + 77);

                auto g_yy_yyyyy = primBuffer.data(goff + 126 * idx + 78);

                auto g_yy_yyyyz = primBuffer.data(goff + 126 * idx + 79);

                auto g_yy_yyyzz = primBuffer.data(goff + 126 * idx + 80);

                auto g_yy_yyzzz = primBuffer.data(goff + 126 * idx + 81);

                auto g_yy_yzzzz = primBuffer.data(goff + 126 * idx + 82);

                auto g_yy_zzzzz = primBuffer.data(goff + 126 * idx + 83);

                auto g_yz_xxxxx = primBuffer.data(goff + 126 * idx + 84);

                auto g_yz_xxxxy = primBuffer.data(goff + 126 * idx + 85);

                auto g_yz_xxxxz = primBuffer.data(goff + 126 * idx + 86);

                auto g_yz_xxxyy = primBuffer.data(goff + 126 * idx + 87);

                auto g_yz_xxxyz = primBuffer.data(goff + 126 * idx + 88);

                auto g_yz_xxxzz = primBuffer.data(goff + 126 * idx + 89);

                auto g_yz_xxyyy = primBuffer.data(goff + 126 * idx + 90);

                auto g_yz_xxyyz = primBuffer.data(goff + 126 * idx + 91);

                auto g_yz_xxyzz = primBuffer.data(goff + 126 * idx + 92);

                auto g_yz_xxzzz = primBuffer.data(goff + 126 * idx + 93);

                auto g_yz_xyyyy = primBuffer.data(goff + 126 * idx + 94);

                auto g_yz_xyyyz = primBuffer.data(goff + 126 * idx + 95);

                auto g_yz_xyyzz = primBuffer.data(goff + 126 * idx + 96);

                auto g_yz_xyzzz = primBuffer.data(goff + 126 * idx + 97);

                auto g_yz_xzzzz = primBuffer.data(goff + 126 * idx + 98);

                auto g_yz_yyyyy = primBuffer.data(goff + 126 * idx + 99);

                auto g_yz_yyyyz = primBuffer.data(goff + 126 * idx + 100);

                auto g_yz_yyyzz = primBuffer.data(goff + 126 * idx + 101);

                auto g_yz_yyzzz = primBuffer.data(goff + 126 * idx + 102);

                auto g_yz_yzzzz = primBuffer.data(goff + 126 * idx + 103);

                auto g_yz_zzzzz = primBuffer.data(goff + 126 * idx + 104);

                auto g_zz_xxxxx = primBuffer.data(goff + 126 * idx + 105);

                auto g_zz_xxxxy = primBuffer.data(goff + 126 * idx + 106);

                auto g_zz_xxxxz = primBuffer.data(goff + 126 * idx + 107);

                auto g_zz_xxxyy = primBuffer.data(goff + 126 * idx + 108);

                auto g_zz_xxxyz = primBuffer.data(goff + 126 * idx + 109);

                auto g_zz_xxxzz = primBuffer.data(goff + 126 * idx + 110);

                auto g_zz_xxyyy = primBuffer.data(goff + 126 * idx + 111);

                auto g_zz_xxyyz = primBuffer.data(goff + 126 * idx + 112);

                auto g_zz_xxyzz = primBuffer.data(goff + 126 * idx + 113);

                auto g_zz_xxzzz = primBuffer.data(goff + 126 * idx + 114);

                auto g_zz_xyyyy = primBuffer.data(goff + 126 * idx + 115);

                auto g_zz_xyyyz = primBuffer.data(goff + 126 * idx + 116);

                auto g_zz_xyyzz = primBuffer.data(goff + 126 * idx + 117);

                auto g_zz_xyzzz = primBuffer.data(goff + 126 * idx + 118);

                auto g_zz_xzzzz = primBuffer.data(goff + 126 * idx + 119);

                auto g_zz_yyyyy = primBuffer.data(goff + 126 * idx + 120);

                auto g_zz_yyyyz = primBuffer.data(goff + 126 * idx + 121);

                auto g_zz_yyyzz = primBuffer.data(goff + 126 * idx + 122);

                auto g_zz_yyzzz = primBuffer.data(goff + 126 * idx + 123);

                auto g_zz_yzzzz = primBuffer.data(goff + 126 * idx + 124);

                auto g_zz_zzzzz = primBuffer.data(goff + 126 * idx + 125);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xxxx,\
                                         gk_x_xxxy, gk_x_xxxz, gk_x_xxyy, gk_x_xxyz,\
                                         gk_x_xxzz, gk_x_xyyy, gk_x_xyyz, gk_x_xyzz,\
                                         gk_x_xzzz, gk_x_yyyy, gk_x_yyyz, gk_x_yyzz,\
                                         gk_x_yzzz, gk_x_zzzz, gk_y_xxxx, gk_y_xxxy,\
                                         gk_y_xxxz, gk_y_xxyy, gk_y_xxyz, gk_y_xxzz,\
                                         gk_y_xyyy, gk_y_xyyz, gk_y_xyzz, gk_y_xzzz,\
                                         gk_y_yyyy, gk_y_yyyz, gk_y_yyzz, gk_y_yzzz,\
                                         gk_y_zzzz, gk_z_xxxx, gk_z_xxxy, gk_z_xxxz,\
                                         gk_z_xxyy, gk_z_xxyz, gk_z_xxzz, gk_z_xyyy,\
                                         gk_z_xyyz, gk_z_xyzz, gk_z_xzzz, gk_z_yyyy,\
                                         gk_z_yyyz, gk_z_yyzz, gk_z_yzzz, gk_z_zzzz,\
                                         g20_0_xxxxx, g20_0_xxxxy, g20_0_xxxxz,\
                                         g20_0_xxxyy, g20_0_xxxyz, g20_0_xxxzz,\
                                         g20_0_xxyyy, g20_0_xxyyz, g20_0_xxyzz,\
                                         g20_0_xxzzz, g20_0_xyyyy, g20_0_xyyyz,\
                                         g20_0_xyyzz, g20_0_xyzzz, g20_0_xzzzz,\
                                         g20_0_yyyyy, g20_0_yyyyz, g20_0_yyyzz,\
                                         g20_0_yyzzz, g20_0_yzzzz, g20_0_zzzzz,\
                                         g21_0_xxxxx, g21_0_xxxxy, g21_0_xxxxz,\
                                         g21_0_xxxyy, g21_0_xxxyz, g21_0_xxxzz,\
                                         g21_0_xxyyy, g21_0_xxyyz, g21_0_xxyzz,\
                                         g21_0_xxzzz, g21_0_xyyyy, g21_0_xyyyz,\
                                         g21_0_xyyzz, g21_0_xyzzz, g21_0_xzzzz,\
                                         g21_0_yyyyy, g21_0_yyyyz, g21_0_yyyzz,\
                                         g21_0_yyzzz, g21_0_yzzzz, g21_0_zzzzz,\
                                         g11_x_xxxxx, g11_x_xxxxy, g11_x_xxxxz,\
                                         g11_x_xxxyy, g11_x_xxxyz, g11_x_xxxzz,\
                                         g11_x_xxyyy, g11_x_xxyyz, g11_x_xxyzz,\
                                         g11_x_xxzzz, g11_x_xyyyy, g11_x_xyyyz,\
                                         g11_x_xyyzz, g11_x_xyzzz, g11_x_xzzzz,\
                                         g11_x_yyyyy, g11_x_yyyyz, g11_x_yyyzz,\
                                         g11_x_yyzzz, g11_x_yzzzz, g11_x_zzzzz,\
                                         g11_y_xxxxx, g11_y_xxxxy, g11_y_xxxxz,\
                                         g11_y_xxxyy, g11_y_xxxyz, g11_y_xxxzz,\
                                         g11_y_xxyyy, g11_y_xxyyz, g11_y_xxyzz,\
                                         g11_y_xxzzz, g11_y_xyyyy, g11_y_xyyyz,\
                                         g11_y_xyyzz, g11_y_xyzzz, g11_y_xzzzz,\
                                         g11_y_yyyyy, g11_y_yyyyz, g11_y_yyyzz,\
                                         g11_y_yyzzz, g11_y_yzzzz, g11_y_zzzzz,\
                                         g11_z_xxxxx, g11_z_xxxxy, g11_z_xxxxz,\
                                         g11_z_xxxyy, g11_z_xxxyz, g11_z_xxxzz,\
                                         g11_z_xxyyy, g11_z_xxyyz, g11_z_xxyzz,\
                                         g11_z_xxzzz, g11_z_xyyyy, g11_z_xyyyz,\
                                         g11_z_xyyzz, g11_z_xyzzz, g11_z_xzzzz,\
                                         g11_z_yyyyy, g11_z_yyyyz, g11_z_yyyzz,\
                                         g11_z_yyzzz, g11_z_yzzzz, g11_z_zzzzz,\
                                         g_xx_xxxxx, g_xx_xxxxy, g_xx_xxxxz, g_xx_xxxyy,\
                                         g_xx_xxxyz, g_xx_xxxzz, g_xx_xxyyy, g_xx_xxyyz,\
                                         g_xx_xxyzz, g_xx_xxzzz, g_xx_xyyyy, g_xx_xyyyz,\
                                         g_xx_xyyzz, g_xx_xyzzz, g_xx_xzzzz, g_xx_yyyyy,\
                                         g_xx_yyyyz, g_xx_yyyzz, g_xx_yyzzz, g_xx_yzzzz,\
                                         g_xx_zzzzz, g_xy_xxxxx, g_xy_xxxxy, g_xy_xxxxz,\
                                         g_xy_xxxyy, g_xy_xxxyz, g_xy_xxxzz, g_xy_xxyyy,\
                                         g_xy_xxyyz, g_xy_xxyzz, g_xy_xxzzz, g_xy_xyyyy,\
                                         g_xy_xyyyz, g_xy_xyyzz, g_xy_xyzzz, g_xy_xzzzz,\
                                         g_xy_yyyyy, g_xy_yyyyz, g_xy_yyyzz, g_xy_yyzzz,\
                                         g_xy_yzzzz, g_xy_zzzzz, g_xz_xxxxx, g_xz_xxxxy,\
                                         g_xz_xxxxz, g_xz_xxxyy, g_xz_xxxyz, g_xz_xxxzz,\
                                         g_xz_xxyyy, g_xz_xxyyz, g_xz_xxyzz, g_xz_xxzzz,\
                                         g_xz_xyyyy, g_xz_xyyyz, g_xz_xyyzz, g_xz_xyzzz,\
                                         g_xz_xzzzz, g_xz_yyyyy, g_xz_yyyyz, g_xz_yyyzz,\
                                         g_xz_yyzzz, g_xz_yzzzz, g_xz_zzzzz, g_yy_xxxxx,\
                                         g_yy_xxxxy, g_yy_xxxxz, g_yy_xxxyy, g_yy_xxxyz,\
                                         g_yy_xxxzz, g_yy_xxyyy, g_yy_xxyyz, g_yy_xxyzz,\
                                         g_yy_xxzzz, g_yy_xyyyy, g_yy_xyyyz, g_yy_xyyzz,\
                                         g_yy_xyzzz, g_yy_xzzzz, g_yy_yyyyy, g_yy_yyyyz,\
                                         g_yy_yyyzz, g_yy_yyzzz, g_yy_yzzzz, g_yy_zzzzz,\
                                         g_yz_xxxxx, g_yz_xxxxy, g_yz_xxxxz, g_yz_xxxyy,\
                                         g_yz_xxxyz, g_yz_xxxzz, g_yz_xxyyy, g_yz_xxyyz,\
                                         g_yz_xxyzz, g_yz_xxzzz, g_yz_xyyyy, g_yz_xyyyz,\
                                         g_yz_xyyzz, g_yz_xyzzz, g_yz_xzzzz, g_yz_yyyyy,\
                                         g_yz_yyyyz, g_yz_yyyzz, g_yz_yyzzz, g_yz_yzzzz,\
                                         g_yz_zzzzz, g_zz_xxxxx, g_zz_xxxxy, g_zz_xxxxz,\
                                         g_zz_xxxyy, g_zz_xxxyz, g_zz_xxxzz, g_zz_xxyyy,\
                                         g_zz_xxyyz, g_zz_xxyzz, g_zz_xxzzz, g_zz_xyyyy,\
                                         g_zz_xyyyz, g_zz_xyyzz, g_zz_xyzzz, g_zz_xzzzz,\
                                         g_zz_yyyyy, g_zz_yyyyz, g_zz_yyyzz, g_zz_yyzzz,\
                                         g_zz_yzzzz, g_zz_zzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxxxx[k] = fr * g11_x_xxxxx[k] + f2g * (g20_0_xxxxx[k] - fgz * g21_0_xxxxx[k]) + 5.0 * f2t * gk_x_xxxx[k];

                    g_xx_xxxxy[k] = fr * g11_x_xxxxy[k] + f2g * (g20_0_xxxxy[k] - fgz * g21_0_xxxxy[k]) + 4.0 * f2t * gk_x_xxxy[k];

                    g_xx_xxxxz[k] = fr * g11_x_xxxxz[k] + f2g * (g20_0_xxxxz[k] - fgz * g21_0_xxxxz[k]) + 4.0 * f2t * gk_x_xxxz[k];

                    g_xx_xxxyy[k] = fr * g11_x_xxxyy[k] + f2g * (g20_0_xxxyy[k] - fgz * g21_0_xxxyy[k]) + 3.0 * f2t * gk_x_xxyy[k];

                    g_xx_xxxyz[k] = fr * g11_x_xxxyz[k] + f2g * (g20_0_xxxyz[k] - fgz * g21_0_xxxyz[k]) + 3.0 * f2t * gk_x_xxyz[k];

                    g_xx_xxxzz[k] = fr * g11_x_xxxzz[k] + f2g * (g20_0_xxxzz[k] - fgz * g21_0_xxxzz[k]) + 3.0 * f2t * gk_x_xxzz[k];

                    g_xx_xxyyy[k] = fr * g11_x_xxyyy[k] + f2g * (g20_0_xxyyy[k] - fgz * g21_0_xxyyy[k]) + 2.0 * f2t * gk_x_xyyy[k];

                    g_xx_xxyyz[k] = fr * g11_x_xxyyz[k] + f2g * (g20_0_xxyyz[k] - fgz * g21_0_xxyyz[k]) + 2.0 * f2t * gk_x_xyyz[k];

                    g_xx_xxyzz[k] = fr * g11_x_xxyzz[k] + f2g * (g20_0_xxyzz[k] - fgz * g21_0_xxyzz[k]) + 2.0 * f2t * gk_x_xyzz[k];

                    g_xx_xxzzz[k] = fr * g11_x_xxzzz[k] + f2g * (g20_0_xxzzz[k] - fgz * g21_0_xxzzz[k]) + 2.0 * f2t * gk_x_xzzz[k];

                    g_xx_xyyyy[k] = fr * g11_x_xyyyy[k] + f2g * (g20_0_xyyyy[k] - fgz * g21_0_xyyyy[k]) + f2t * gk_x_yyyy[k];

                    g_xx_xyyyz[k] = fr * g11_x_xyyyz[k] + f2g * (g20_0_xyyyz[k] - fgz * g21_0_xyyyz[k]) + f2t * gk_x_yyyz[k];

                    g_xx_xyyzz[k] = fr * g11_x_xyyzz[k] + f2g * (g20_0_xyyzz[k] - fgz * g21_0_xyyzz[k]) + f2t * gk_x_yyzz[k];

                    g_xx_xyzzz[k] = fr * g11_x_xyzzz[k] + f2g * (g20_0_xyzzz[k] - fgz * g21_0_xyzzz[k]) + f2t * gk_x_yzzz[k];

                    g_xx_xzzzz[k] = fr * g11_x_xzzzz[k] + f2g * (g20_0_xzzzz[k] - fgz * g21_0_xzzzz[k]) + f2t * gk_x_zzzz[k];

                    g_xx_yyyyy[k] = fr * g11_x_yyyyy[k] + f2g * (g20_0_yyyyy[k] - fgz * g21_0_yyyyy[k]);

                    g_xx_yyyyz[k] = fr * g11_x_yyyyz[k] + f2g * (g20_0_yyyyz[k] - fgz * g21_0_yyyyz[k]);

                    g_xx_yyyzz[k] = fr * g11_x_yyyzz[k] + f2g * (g20_0_yyyzz[k] - fgz * g21_0_yyyzz[k]);

                    g_xx_yyzzz[k] = fr * g11_x_yyzzz[k] + f2g * (g20_0_yyzzz[k] - fgz * g21_0_yyzzz[k]);

                    g_xx_yzzzz[k] = fr * g11_x_yzzzz[k] + f2g * (g20_0_yzzzz[k] - fgz * g21_0_yzzzz[k]);

                    g_xx_zzzzz[k] = fr * g11_x_zzzzz[k] + f2g * (g20_0_zzzzz[k] - fgz * g21_0_zzzzz[k]);

                    g_xy_xxxxx[k] = fr * g11_y_xxxxx[k] + 5.0 * f2t * gk_y_xxxx[k];

                    g_xy_xxxxy[k] = fr * g11_y_xxxxy[k] + 4.0 * f2t * gk_y_xxxy[k];

                    g_xy_xxxxz[k] = fr * g11_y_xxxxz[k] + 4.0 * f2t * gk_y_xxxz[k];

                    g_xy_xxxyy[k] = fr * g11_y_xxxyy[k] + 3.0 * f2t * gk_y_xxyy[k];

                    g_xy_xxxyz[k] = fr * g11_y_xxxyz[k] + 3.0 * f2t * gk_y_xxyz[k];

                    g_xy_xxxzz[k] = fr * g11_y_xxxzz[k] + 3.0 * f2t * gk_y_xxzz[k];

                    g_xy_xxyyy[k] = fr * g11_y_xxyyy[k] + 2.0 * f2t * gk_y_xyyy[k];

                    g_xy_xxyyz[k] = fr * g11_y_xxyyz[k] + 2.0 * f2t * gk_y_xyyz[k];

                    g_xy_xxyzz[k] = fr * g11_y_xxyzz[k] + 2.0 * f2t * gk_y_xyzz[k];

                    g_xy_xxzzz[k] = fr * g11_y_xxzzz[k] + 2.0 * f2t * gk_y_xzzz[k];

                    g_xy_xyyyy[k] = fr * g11_y_xyyyy[k] + f2t * gk_y_yyyy[k];

                    g_xy_xyyyz[k] = fr * g11_y_xyyyz[k] + f2t * gk_y_yyyz[k];

                    g_xy_xyyzz[k] = fr * g11_y_xyyzz[k] + f2t * gk_y_yyzz[k];

                    g_xy_xyzzz[k] = fr * g11_y_xyzzz[k] + f2t * gk_y_yzzz[k];

                    g_xy_xzzzz[k] = fr * g11_y_xzzzz[k] + f2t * gk_y_zzzz[k];

                    g_xy_yyyyy[k] = fr * g11_y_yyyyy[k];

                    g_xy_yyyyz[k] = fr * g11_y_yyyyz[k];

                    g_xy_yyyzz[k] = fr * g11_y_yyyzz[k];

                    g_xy_yyzzz[k] = fr * g11_y_yyzzz[k];

                    g_xy_yzzzz[k] = fr * g11_y_yzzzz[k];

                    g_xy_zzzzz[k] = fr * g11_y_zzzzz[k];

                    g_xz_xxxxx[k] = fr * g11_z_xxxxx[k] + 5.0 * f2t * gk_z_xxxx[k];

                    g_xz_xxxxy[k] = fr * g11_z_xxxxy[k] + 4.0 * f2t * gk_z_xxxy[k];

                    g_xz_xxxxz[k] = fr * g11_z_xxxxz[k] + 4.0 * f2t * gk_z_xxxz[k];

                    g_xz_xxxyy[k] = fr * g11_z_xxxyy[k] + 3.0 * f2t * gk_z_xxyy[k];

                    g_xz_xxxyz[k] = fr * g11_z_xxxyz[k] + 3.0 * f2t * gk_z_xxyz[k];

                    g_xz_xxxzz[k] = fr * g11_z_xxxzz[k] + 3.0 * f2t * gk_z_xxzz[k];

                    g_xz_xxyyy[k] = fr * g11_z_xxyyy[k] + 2.0 * f2t * gk_z_xyyy[k];

                    g_xz_xxyyz[k] = fr * g11_z_xxyyz[k] + 2.0 * f2t * gk_z_xyyz[k];

                    g_xz_xxyzz[k] = fr * g11_z_xxyzz[k] + 2.0 * f2t * gk_z_xyzz[k];

                    g_xz_xxzzz[k] = fr * g11_z_xxzzz[k] + 2.0 * f2t * gk_z_xzzz[k];

                    g_xz_xyyyy[k] = fr * g11_z_xyyyy[k] + f2t * gk_z_yyyy[k];

                    g_xz_xyyyz[k] = fr * g11_z_xyyyz[k] + f2t * gk_z_yyyz[k];

                    g_xz_xyyzz[k] = fr * g11_z_xyyzz[k] + f2t * gk_z_yyzz[k];

                    g_xz_xyzzz[k] = fr * g11_z_xyzzz[k] + f2t * gk_z_yzzz[k];

                    g_xz_xzzzz[k] = fr * g11_z_xzzzz[k] + f2t * gk_z_zzzz[k];

                    g_xz_yyyyy[k] = fr * g11_z_yyyyy[k];

                    g_xz_yyyyz[k] = fr * g11_z_yyyyz[k];

                    g_xz_yyyzz[k] = fr * g11_z_yyyzz[k];

                    g_xz_yyzzz[k] = fr * g11_z_yyzzz[k];

                    g_xz_yzzzz[k] = fr * g11_z_yzzzz[k];

                    g_xz_zzzzz[k] = fr * g11_z_zzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxxxx[k] = fr * g11_y_xxxxx[k] + f2g * (g20_0_xxxxx[k] - fgz * g21_0_xxxxx[k]);

                    g_yy_xxxxy[k] = fr * g11_y_xxxxy[k] + f2g * (g20_0_xxxxy[k] - fgz * g21_0_xxxxy[k]) + f2t * gk_y_xxxx[k];

                    g_yy_xxxxz[k] = fr * g11_y_xxxxz[k] + f2g * (g20_0_xxxxz[k] - fgz * g21_0_xxxxz[k]);

                    g_yy_xxxyy[k] = fr * g11_y_xxxyy[k] + f2g * (g20_0_xxxyy[k] - fgz * g21_0_xxxyy[k]) + 2.0 * f2t * gk_y_xxxy[k];

                    g_yy_xxxyz[k] = fr * g11_y_xxxyz[k] + f2g * (g20_0_xxxyz[k] - fgz * g21_0_xxxyz[k]) + f2t * gk_y_xxxz[k];

                    g_yy_xxxzz[k] = fr * g11_y_xxxzz[k] + f2g * (g20_0_xxxzz[k] - fgz * g21_0_xxxzz[k]);

                    g_yy_xxyyy[k] = fr * g11_y_xxyyy[k] + f2g * (g20_0_xxyyy[k] - fgz * g21_0_xxyyy[k]) + 3.0 * f2t * gk_y_xxyy[k];

                    g_yy_xxyyz[k] = fr * g11_y_xxyyz[k] + f2g * (g20_0_xxyyz[k] - fgz * g21_0_xxyyz[k]) + 2.0 * f2t * gk_y_xxyz[k];

                    g_yy_xxyzz[k] = fr * g11_y_xxyzz[k] + f2g * (g20_0_xxyzz[k] - fgz * g21_0_xxyzz[k]) + f2t * gk_y_xxzz[k];

                    g_yy_xxzzz[k] = fr * g11_y_xxzzz[k] + f2g * (g20_0_xxzzz[k] - fgz * g21_0_xxzzz[k]);

                    g_yy_xyyyy[k] = fr * g11_y_xyyyy[k] + f2g * (g20_0_xyyyy[k] - fgz * g21_0_xyyyy[k]) + 4.0 * f2t * gk_y_xyyy[k];

                    g_yy_xyyyz[k] = fr * g11_y_xyyyz[k] + f2g * (g20_0_xyyyz[k] - fgz * g21_0_xyyyz[k]) + 3.0 * f2t * gk_y_xyyz[k];

                    g_yy_xyyzz[k] = fr * g11_y_xyyzz[k] + f2g * (g20_0_xyyzz[k] - fgz * g21_0_xyyzz[k]) + 2.0 * f2t * gk_y_xyzz[k];

                    g_yy_xyzzz[k] = fr * g11_y_xyzzz[k] + f2g * (g20_0_xyzzz[k] - fgz * g21_0_xyzzz[k]) + f2t * gk_y_xzzz[k];

                    g_yy_xzzzz[k] = fr * g11_y_xzzzz[k] + f2g * (g20_0_xzzzz[k] - fgz * g21_0_xzzzz[k]);

                    g_yy_yyyyy[k] = fr * g11_y_yyyyy[k] + f2g * (g20_0_yyyyy[k] - fgz * g21_0_yyyyy[k]) + 5.0 * f2t * gk_y_yyyy[k];

                    g_yy_yyyyz[k] = fr * g11_y_yyyyz[k] + f2g * (g20_0_yyyyz[k] - fgz * g21_0_yyyyz[k]) + 4.0 * f2t * gk_y_yyyz[k];

                    g_yy_yyyzz[k] = fr * g11_y_yyyzz[k] + f2g * (g20_0_yyyzz[k] - fgz * g21_0_yyyzz[k]) + 3.0 * f2t * gk_y_yyzz[k];

                    g_yy_yyzzz[k] = fr * g11_y_yyzzz[k] + f2g * (g20_0_yyzzz[k] - fgz * g21_0_yyzzz[k]) + 2.0 * f2t * gk_y_yzzz[k];

                    g_yy_yzzzz[k] = fr * g11_y_yzzzz[k] + f2g * (g20_0_yzzzz[k] - fgz * g21_0_yzzzz[k]) + f2t * gk_y_zzzz[k];

                    g_yy_zzzzz[k] = fr * g11_y_zzzzz[k] + f2g * (g20_0_zzzzz[k] - fgz * g21_0_zzzzz[k]);

                    g_yz_xxxxx[k] = fr * g11_z_xxxxx[k];

                    g_yz_xxxxy[k] = fr * g11_z_xxxxy[k] + f2t * gk_z_xxxx[k];

                    g_yz_xxxxz[k] = fr * g11_z_xxxxz[k];

                    g_yz_xxxyy[k] = fr * g11_z_xxxyy[k] + 2.0 * f2t * gk_z_xxxy[k];

                    g_yz_xxxyz[k] = fr * g11_z_xxxyz[k] + f2t * gk_z_xxxz[k];

                    g_yz_xxxzz[k] = fr * g11_z_xxxzz[k];

                    g_yz_xxyyy[k] = fr * g11_z_xxyyy[k] + 3.0 * f2t * gk_z_xxyy[k];

                    g_yz_xxyyz[k] = fr * g11_z_xxyyz[k] + 2.0 * f2t * gk_z_xxyz[k];

                    g_yz_xxyzz[k] = fr * g11_z_xxyzz[k] + f2t * gk_z_xxzz[k];

                    g_yz_xxzzz[k] = fr * g11_z_xxzzz[k];

                    g_yz_xyyyy[k] = fr * g11_z_xyyyy[k] + 4.0 * f2t * gk_z_xyyy[k];

                    g_yz_xyyyz[k] = fr * g11_z_xyyyz[k] + 3.0 * f2t * gk_z_xyyz[k];

                    g_yz_xyyzz[k] = fr * g11_z_xyyzz[k] + 2.0 * f2t * gk_z_xyzz[k];

                    g_yz_xyzzz[k] = fr * g11_z_xyzzz[k] + f2t * gk_z_xzzz[k];

                    g_yz_xzzzz[k] = fr * g11_z_xzzzz[k];

                    g_yz_yyyyy[k] = fr * g11_z_yyyyy[k] + 5.0 * f2t * gk_z_yyyy[k];

                    g_yz_yyyyz[k] = fr * g11_z_yyyyz[k] + 4.0 * f2t * gk_z_yyyz[k];

                    g_yz_yyyzz[k] = fr * g11_z_yyyzz[k] + 3.0 * f2t * gk_z_yyzz[k];

                    g_yz_yyzzz[k] = fr * g11_z_yyzzz[k] + 2.0 * f2t * gk_z_yzzz[k];

                    g_yz_yzzzz[k] = fr * g11_z_yzzzz[k] + f2t * gk_z_zzzz[k];

                    g_yz_zzzzz[k] = fr * g11_z_zzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxxxx[k] = fr * g11_z_xxxxx[k] + f2g * (g20_0_xxxxx[k] - fgz * g21_0_xxxxx[k]);

                    g_zz_xxxxy[k] = fr * g11_z_xxxxy[k] + f2g * (g20_0_xxxxy[k] - fgz * g21_0_xxxxy[k]);

                    g_zz_xxxxz[k] = fr * g11_z_xxxxz[k] + f2g * (g20_0_xxxxz[k] - fgz * g21_0_xxxxz[k]) + f2t * gk_z_xxxx[k];

                    g_zz_xxxyy[k] = fr * g11_z_xxxyy[k] + f2g * (g20_0_xxxyy[k] - fgz * g21_0_xxxyy[k]);

                    g_zz_xxxyz[k] = fr * g11_z_xxxyz[k] + f2g * (g20_0_xxxyz[k] - fgz * g21_0_xxxyz[k]) + f2t * gk_z_xxxy[k];

                    g_zz_xxxzz[k] = fr * g11_z_xxxzz[k] + f2g * (g20_0_xxxzz[k] - fgz * g21_0_xxxzz[k]) + 2.0 * f2t * gk_z_xxxz[k];

                    g_zz_xxyyy[k] = fr * g11_z_xxyyy[k] + f2g * (g20_0_xxyyy[k] - fgz * g21_0_xxyyy[k]);

                    g_zz_xxyyz[k] = fr * g11_z_xxyyz[k] + f2g * (g20_0_xxyyz[k] - fgz * g21_0_xxyyz[k]) + f2t * gk_z_xxyy[k];

                    g_zz_xxyzz[k] = fr * g11_z_xxyzz[k] + f2g * (g20_0_xxyzz[k] - fgz * g21_0_xxyzz[k]) + 2.0 * f2t * gk_z_xxyz[k];

                    g_zz_xxzzz[k] = fr * g11_z_xxzzz[k] + f2g * (g20_0_xxzzz[k] - fgz * g21_0_xxzzz[k]) + 3.0 * f2t * gk_z_xxzz[k];

                    g_zz_xyyyy[k] = fr * g11_z_xyyyy[k] + f2g * (g20_0_xyyyy[k] - fgz * g21_0_xyyyy[k]);

                    g_zz_xyyyz[k] = fr * g11_z_xyyyz[k] + f2g * (g20_0_xyyyz[k] - fgz * g21_0_xyyyz[k]) + f2t * gk_z_xyyy[k];

                    g_zz_xyyzz[k] = fr * g11_z_xyyzz[k] + f2g * (g20_0_xyyzz[k] - fgz * g21_0_xyyzz[k]) + 2.0 * f2t * gk_z_xyyz[k];

                    g_zz_xyzzz[k] = fr * g11_z_xyzzz[k] + f2g * (g20_0_xyzzz[k] - fgz * g21_0_xyzzz[k]) + 3.0 * f2t * gk_z_xyzz[k];

                    g_zz_xzzzz[k] = fr * g11_z_xzzzz[k] + f2g * (g20_0_xzzzz[k] - fgz * g21_0_xzzzz[k]) + 4.0 * f2t * gk_z_xzzz[k];

                    g_zz_yyyyy[k] = fr * g11_z_yyyyy[k] + f2g * (g20_0_yyyyy[k] - fgz * g21_0_yyyyy[k]);

                    g_zz_yyyyz[k] = fr * g11_z_yyyyz[k] + f2g * (g20_0_yyyyz[k] - fgz * g21_0_yyyyz[k]) + f2t * gk_z_yyyy[k];

                    g_zz_yyyzz[k] = fr * g11_z_yyyzz[k] + f2g * (g20_0_yyyzz[k] - fgz * g21_0_yyyzz[k]) + 2.0 * f2t * gk_z_yyyz[k];

                    g_zz_yyzzz[k] = fr * g11_z_yyzzz[k] + f2g * (g20_0_yyzzz[k] - fgz * g21_0_yyzzz[k]) + 3.0 * f2t * gk_z_yyzz[k];

                    g_zz_yzzzz[k] = fr * g11_z_yzzzz[k] + f2g * (g20_0_yzzzz[k] - fgz * g21_0_yzzzz[k]) + 4.0 * f2t * gk_z_yzzz[k];

                    g_zz_zzzzz[k] = fr * g11_z_zzzzz[k] + f2g * (g20_0_zzzzz[k] - fgz * g21_0_zzzzz[k]) + 5.0 * f2t * gk_z_zzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSH(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 5);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 5, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 5, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 5, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 5, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 4, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SG)^(m+1) integrals

                auto gk_xx_xxxx = primBuffer.data(gkoff + 90 * idx);

                auto gk_xx_xxxy = primBuffer.data(gkoff + 90 * idx + 1);

                auto gk_xx_xxxz = primBuffer.data(gkoff + 90 * idx + 2);

                auto gk_xx_xxyy = primBuffer.data(gkoff + 90 * idx + 3);

                auto gk_xx_xxyz = primBuffer.data(gkoff + 90 * idx + 4);

                auto gk_xx_xxzz = primBuffer.data(gkoff + 90 * idx + 5);

                auto gk_xx_xyyy = primBuffer.data(gkoff + 90 * idx + 6);

                auto gk_xx_xyyz = primBuffer.data(gkoff + 90 * idx + 7);

                auto gk_xx_xyzz = primBuffer.data(gkoff + 90 * idx + 8);

                auto gk_xx_xzzz = primBuffer.data(gkoff + 90 * idx + 9);

                auto gk_xx_yyyy = primBuffer.data(gkoff + 90 * idx + 10);

                auto gk_xx_yyyz = primBuffer.data(gkoff + 90 * idx + 11);

                auto gk_xx_yyzz = primBuffer.data(gkoff + 90 * idx + 12);

                auto gk_xx_yzzz = primBuffer.data(gkoff + 90 * idx + 13);

                auto gk_xx_zzzz = primBuffer.data(gkoff + 90 * idx + 14);

                auto gk_xy_xxxx = primBuffer.data(gkoff + 90 * idx + 15);

                auto gk_xy_xxxy = primBuffer.data(gkoff + 90 * idx + 16);

                auto gk_xy_xxxz = primBuffer.data(gkoff + 90 * idx + 17);

                auto gk_xy_xxyy = primBuffer.data(gkoff + 90 * idx + 18);

                auto gk_xy_xxyz = primBuffer.data(gkoff + 90 * idx + 19);

                auto gk_xy_xxzz = primBuffer.data(gkoff + 90 * idx + 20);

                auto gk_xy_xyyy = primBuffer.data(gkoff + 90 * idx + 21);

                auto gk_xy_xyyz = primBuffer.data(gkoff + 90 * idx + 22);

                auto gk_xy_xyzz = primBuffer.data(gkoff + 90 * idx + 23);

                auto gk_xy_xzzz = primBuffer.data(gkoff + 90 * idx + 24);

                auto gk_xy_yyyy = primBuffer.data(gkoff + 90 * idx + 25);

                auto gk_xy_yyyz = primBuffer.data(gkoff + 90 * idx + 26);

                auto gk_xy_yyzz = primBuffer.data(gkoff + 90 * idx + 27);

                auto gk_xy_yzzz = primBuffer.data(gkoff + 90 * idx + 28);

                auto gk_xy_zzzz = primBuffer.data(gkoff + 90 * idx + 29);

                auto gk_xz_xxxx = primBuffer.data(gkoff + 90 * idx + 30);

                auto gk_xz_xxxy = primBuffer.data(gkoff + 90 * idx + 31);

                auto gk_xz_xxxz = primBuffer.data(gkoff + 90 * idx + 32);

                auto gk_xz_xxyy = primBuffer.data(gkoff + 90 * idx + 33);

                auto gk_xz_xxyz = primBuffer.data(gkoff + 90 * idx + 34);

                auto gk_xz_xxzz = primBuffer.data(gkoff + 90 * idx + 35);

                auto gk_xz_xyyy = primBuffer.data(gkoff + 90 * idx + 36);

                auto gk_xz_xyyz = primBuffer.data(gkoff + 90 * idx + 37);

                auto gk_xz_xyzz = primBuffer.data(gkoff + 90 * idx + 38);

                auto gk_xz_xzzz = primBuffer.data(gkoff + 90 * idx + 39);

                auto gk_xz_yyyy = primBuffer.data(gkoff + 90 * idx + 40);

                auto gk_xz_yyyz = primBuffer.data(gkoff + 90 * idx + 41);

                auto gk_xz_yyzz = primBuffer.data(gkoff + 90 * idx + 42);

                auto gk_xz_yzzz = primBuffer.data(gkoff + 90 * idx + 43);

                auto gk_xz_zzzz = primBuffer.data(gkoff + 90 * idx + 44);

                auto gk_yy_xxxx = primBuffer.data(gkoff + 90 * idx + 45);

                auto gk_yy_xxxy = primBuffer.data(gkoff + 90 * idx + 46);

                auto gk_yy_xxxz = primBuffer.data(gkoff + 90 * idx + 47);

                auto gk_yy_xxyy = primBuffer.data(gkoff + 90 * idx + 48);

                auto gk_yy_xxyz = primBuffer.data(gkoff + 90 * idx + 49);

                auto gk_yy_xxzz = primBuffer.data(gkoff + 90 * idx + 50);

                auto gk_yy_xyyy = primBuffer.data(gkoff + 90 * idx + 51);

                auto gk_yy_xyyz = primBuffer.data(gkoff + 90 * idx + 52);

                auto gk_yy_xyzz = primBuffer.data(gkoff + 90 * idx + 53);

                auto gk_yy_xzzz = primBuffer.data(gkoff + 90 * idx + 54);

                auto gk_yy_yyyy = primBuffer.data(gkoff + 90 * idx + 55);

                auto gk_yy_yyyz = primBuffer.data(gkoff + 90 * idx + 56);

                auto gk_yy_yyzz = primBuffer.data(gkoff + 90 * idx + 57);

                auto gk_yy_yzzz = primBuffer.data(gkoff + 90 * idx + 58);

                auto gk_yy_zzzz = primBuffer.data(gkoff + 90 * idx + 59);

                auto gk_yz_xxxx = primBuffer.data(gkoff + 90 * idx + 60);

                auto gk_yz_xxxy = primBuffer.data(gkoff + 90 * idx + 61);

                auto gk_yz_xxxz = primBuffer.data(gkoff + 90 * idx + 62);

                auto gk_yz_xxyy = primBuffer.data(gkoff + 90 * idx + 63);

                auto gk_yz_xxyz = primBuffer.data(gkoff + 90 * idx + 64);

                auto gk_yz_xxzz = primBuffer.data(gkoff + 90 * idx + 65);

                auto gk_yz_xyyy = primBuffer.data(gkoff + 90 * idx + 66);

                auto gk_yz_xyyz = primBuffer.data(gkoff + 90 * idx + 67);

                auto gk_yz_xyzz = primBuffer.data(gkoff + 90 * idx + 68);

                auto gk_yz_xzzz = primBuffer.data(gkoff + 90 * idx + 69);

                auto gk_yz_yyyy = primBuffer.data(gkoff + 90 * idx + 70);

                auto gk_yz_yyyz = primBuffer.data(gkoff + 90 * idx + 71);

                auto gk_yz_yyzz = primBuffer.data(gkoff + 90 * idx + 72);

                auto gk_yz_yzzz = primBuffer.data(gkoff + 90 * idx + 73);

                auto gk_yz_zzzz = primBuffer.data(gkoff + 90 * idx + 74);

                auto gk_zz_xxxx = primBuffer.data(gkoff + 90 * idx + 75);

                auto gk_zz_xxxy = primBuffer.data(gkoff + 90 * idx + 76);

                auto gk_zz_xxxz = primBuffer.data(gkoff + 90 * idx + 77);

                auto gk_zz_xxyy = primBuffer.data(gkoff + 90 * idx + 78);

                auto gk_zz_xxyz = primBuffer.data(gkoff + 90 * idx + 79);

                auto gk_zz_xxzz = primBuffer.data(gkoff + 90 * idx + 80);

                auto gk_zz_xyyy = primBuffer.data(gkoff + 90 * idx + 81);

                auto gk_zz_xyyz = primBuffer.data(gkoff + 90 * idx + 82);

                auto gk_zz_xyzz = primBuffer.data(gkoff + 90 * idx + 83);

                auto gk_zz_xzzz = primBuffer.data(gkoff + 90 * idx + 84);

                auto gk_zz_yyyy = primBuffer.data(gkoff + 90 * idx + 85);

                auto gk_zz_yyyz = primBuffer.data(gkoff + 90 * idx + 86);

                auto gk_zz_yyzz = primBuffer.data(gkoff + 90 * idx + 87);

                auto gk_zz_yzzz = primBuffer.data(gkoff + 90 * idx + 88);

                auto gk_zz_zzzz = primBuffer.data(gkoff + 90 * idx + 89);

                // set up pointers to (P|g(r,r')|SH)^(m) integrals

                auto g20_x_xxxxx = primBuffer.data(g20off + 63 * idx);

                auto g20_x_xxxxy = primBuffer.data(g20off + 63 * idx + 1);

                auto g20_x_xxxxz = primBuffer.data(g20off + 63 * idx + 2);

                auto g20_x_xxxyy = primBuffer.data(g20off + 63 * idx + 3);

                auto g20_x_xxxyz = primBuffer.data(g20off + 63 * idx + 4);

                auto g20_x_xxxzz = primBuffer.data(g20off + 63 * idx + 5);

                auto g20_x_xxyyy = primBuffer.data(g20off + 63 * idx + 6);

                auto g20_x_xxyyz = primBuffer.data(g20off + 63 * idx + 7);

                auto g20_x_xxyzz = primBuffer.data(g20off + 63 * idx + 8);

                auto g20_x_xxzzz = primBuffer.data(g20off + 63 * idx + 9);

                auto g20_x_xyyyy = primBuffer.data(g20off + 63 * idx + 10);

                auto g20_x_xyyyz = primBuffer.data(g20off + 63 * idx + 11);

                auto g20_x_xyyzz = primBuffer.data(g20off + 63 * idx + 12);

                auto g20_x_xyzzz = primBuffer.data(g20off + 63 * idx + 13);

                auto g20_x_xzzzz = primBuffer.data(g20off + 63 * idx + 14);

                auto g20_x_yyyyy = primBuffer.data(g20off + 63 * idx + 15);

                auto g20_x_yyyyz = primBuffer.data(g20off + 63 * idx + 16);

                auto g20_x_yyyzz = primBuffer.data(g20off + 63 * idx + 17);

                auto g20_x_yyzzz = primBuffer.data(g20off + 63 * idx + 18);

                auto g20_x_yzzzz = primBuffer.data(g20off + 63 * idx + 19);

                auto g20_x_zzzzz = primBuffer.data(g20off + 63 * idx + 20);

                auto g20_y_xxxxx = primBuffer.data(g20off + 63 * idx + 21);

                auto g20_y_xxxxy = primBuffer.data(g20off + 63 * idx + 22);

                auto g20_y_xxxxz = primBuffer.data(g20off + 63 * idx + 23);

                auto g20_y_xxxyy = primBuffer.data(g20off + 63 * idx + 24);

                auto g20_y_xxxyz = primBuffer.data(g20off + 63 * idx + 25);

                auto g20_y_xxxzz = primBuffer.data(g20off + 63 * idx + 26);

                auto g20_y_xxyyy = primBuffer.data(g20off + 63 * idx + 27);

                auto g20_y_xxyyz = primBuffer.data(g20off + 63 * idx + 28);

                auto g20_y_xxyzz = primBuffer.data(g20off + 63 * idx + 29);

                auto g20_y_xxzzz = primBuffer.data(g20off + 63 * idx + 30);

                auto g20_y_xyyyy = primBuffer.data(g20off + 63 * idx + 31);

                auto g20_y_xyyyz = primBuffer.data(g20off + 63 * idx + 32);

                auto g20_y_xyyzz = primBuffer.data(g20off + 63 * idx + 33);

                auto g20_y_xyzzz = primBuffer.data(g20off + 63 * idx + 34);

                auto g20_y_xzzzz = primBuffer.data(g20off + 63 * idx + 35);

                auto g20_y_yyyyy = primBuffer.data(g20off + 63 * idx + 36);

                auto g20_y_yyyyz = primBuffer.data(g20off + 63 * idx + 37);

                auto g20_y_yyyzz = primBuffer.data(g20off + 63 * idx + 38);

                auto g20_y_yyzzz = primBuffer.data(g20off + 63 * idx + 39);

                auto g20_y_yzzzz = primBuffer.data(g20off + 63 * idx + 40);

                auto g20_y_zzzzz = primBuffer.data(g20off + 63 * idx + 41);

                auto g20_z_xxxxx = primBuffer.data(g20off + 63 * idx + 42);

                auto g20_z_xxxxy = primBuffer.data(g20off + 63 * idx + 43);

                auto g20_z_xxxxz = primBuffer.data(g20off + 63 * idx + 44);

                auto g20_z_xxxyy = primBuffer.data(g20off + 63 * idx + 45);

                auto g20_z_xxxyz = primBuffer.data(g20off + 63 * idx + 46);

                auto g20_z_xxxzz = primBuffer.data(g20off + 63 * idx + 47);

                auto g20_z_xxyyy = primBuffer.data(g20off + 63 * idx + 48);

                auto g20_z_xxyyz = primBuffer.data(g20off + 63 * idx + 49);

                auto g20_z_xxyzz = primBuffer.data(g20off + 63 * idx + 50);

                auto g20_z_xxzzz = primBuffer.data(g20off + 63 * idx + 51);

                auto g20_z_xyyyy = primBuffer.data(g20off + 63 * idx + 52);

                auto g20_z_xyyyz = primBuffer.data(g20off + 63 * idx + 53);

                auto g20_z_xyyzz = primBuffer.data(g20off + 63 * idx + 54);

                auto g20_z_xyzzz = primBuffer.data(g20off + 63 * idx + 55);

                auto g20_z_xzzzz = primBuffer.data(g20off + 63 * idx + 56);

                auto g20_z_yyyyy = primBuffer.data(g20off + 63 * idx + 57);

                auto g20_z_yyyyz = primBuffer.data(g20off + 63 * idx + 58);

                auto g20_z_yyyzz = primBuffer.data(g20off + 63 * idx + 59);

                auto g20_z_yyzzz = primBuffer.data(g20off + 63 * idx + 60);

                auto g20_z_yzzzz = primBuffer.data(g20off + 63 * idx + 61);

                auto g20_z_zzzzz = primBuffer.data(g20off + 63 * idx + 62);

                // set up pointers to (P|g(r,r')|SH)^(m+1) integrals

                auto g21_x_xxxxx = primBuffer.data(g21off + 63 * idx);

                auto g21_x_xxxxy = primBuffer.data(g21off + 63 * idx + 1);

                auto g21_x_xxxxz = primBuffer.data(g21off + 63 * idx + 2);

                auto g21_x_xxxyy = primBuffer.data(g21off + 63 * idx + 3);

                auto g21_x_xxxyz = primBuffer.data(g21off + 63 * idx + 4);

                auto g21_x_xxxzz = primBuffer.data(g21off + 63 * idx + 5);

                auto g21_x_xxyyy = primBuffer.data(g21off + 63 * idx + 6);

                auto g21_x_xxyyz = primBuffer.data(g21off + 63 * idx + 7);

                auto g21_x_xxyzz = primBuffer.data(g21off + 63 * idx + 8);

                auto g21_x_xxzzz = primBuffer.data(g21off + 63 * idx + 9);

                auto g21_x_xyyyy = primBuffer.data(g21off + 63 * idx + 10);

                auto g21_x_xyyyz = primBuffer.data(g21off + 63 * idx + 11);

                auto g21_x_xyyzz = primBuffer.data(g21off + 63 * idx + 12);

                auto g21_x_xyzzz = primBuffer.data(g21off + 63 * idx + 13);

                auto g21_x_xzzzz = primBuffer.data(g21off + 63 * idx + 14);

                auto g21_x_yyyyy = primBuffer.data(g21off + 63 * idx + 15);

                auto g21_x_yyyyz = primBuffer.data(g21off + 63 * idx + 16);

                auto g21_x_yyyzz = primBuffer.data(g21off + 63 * idx + 17);

                auto g21_x_yyzzz = primBuffer.data(g21off + 63 * idx + 18);

                auto g21_x_yzzzz = primBuffer.data(g21off + 63 * idx + 19);

                auto g21_x_zzzzz = primBuffer.data(g21off + 63 * idx + 20);

                auto g21_y_xxxxx = primBuffer.data(g21off + 63 * idx + 21);

                auto g21_y_xxxxy = primBuffer.data(g21off + 63 * idx + 22);

                auto g21_y_xxxxz = primBuffer.data(g21off + 63 * idx + 23);

                auto g21_y_xxxyy = primBuffer.data(g21off + 63 * idx + 24);

                auto g21_y_xxxyz = primBuffer.data(g21off + 63 * idx + 25);

                auto g21_y_xxxzz = primBuffer.data(g21off + 63 * idx + 26);

                auto g21_y_xxyyy = primBuffer.data(g21off + 63 * idx + 27);

                auto g21_y_xxyyz = primBuffer.data(g21off + 63 * idx + 28);

                auto g21_y_xxyzz = primBuffer.data(g21off + 63 * idx + 29);

                auto g21_y_xxzzz = primBuffer.data(g21off + 63 * idx + 30);

                auto g21_y_xyyyy = primBuffer.data(g21off + 63 * idx + 31);

                auto g21_y_xyyyz = primBuffer.data(g21off + 63 * idx + 32);

                auto g21_y_xyyzz = primBuffer.data(g21off + 63 * idx + 33);

                auto g21_y_xyzzz = primBuffer.data(g21off + 63 * idx + 34);

                auto g21_y_xzzzz = primBuffer.data(g21off + 63 * idx + 35);

                auto g21_y_yyyyy = primBuffer.data(g21off + 63 * idx + 36);

                auto g21_y_yyyyz = primBuffer.data(g21off + 63 * idx + 37);

                auto g21_y_yyyzz = primBuffer.data(g21off + 63 * idx + 38);

                auto g21_y_yyzzz = primBuffer.data(g21off + 63 * idx + 39);

                auto g21_y_yzzzz = primBuffer.data(g21off + 63 * idx + 40);

                auto g21_y_zzzzz = primBuffer.data(g21off + 63 * idx + 41);

                auto g21_z_xxxxx = primBuffer.data(g21off + 63 * idx + 42);

                auto g21_z_xxxxy = primBuffer.data(g21off + 63 * idx + 43);

                auto g21_z_xxxxz = primBuffer.data(g21off + 63 * idx + 44);

                auto g21_z_xxxyy = primBuffer.data(g21off + 63 * idx + 45);

                auto g21_z_xxxyz = primBuffer.data(g21off + 63 * idx + 46);

                auto g21_z_xxxzz = primBuffer.data(g21off + 63 * idx + 47);

                auto g21_z_xxyyy = primBuffer.data(g21off + 63 * idx + 48);

                auto g21_z_xxyyz = primBuffer.data(g21off + 63 * idx + 49);

                auto g21_z_xxyzz = primBuffer.data(g21off + 63 * idx + 50);

                auto g21_z_xxzzz = primBuffer.data(g21off + 63 * idx + 51);

                auto g21_z_xyyyy = primBuffer.data(g21off + 63 * idx + 52);

                auto g21_z_xyyyz = primBuffer.data(g21off + 63 * idx + 53);

                auto g21_z_xyyzz = primBuffer.data(g21off + 63 * idx + 54);

                auto g21_z_xyzzz = primBuffer.data(g21off + 63 * idx + 55);

                auto g21_z_xzzzz = primBuffer.data(g21off + 63 * idx + 56);

                auto g21_z_yyyyy = primBuffer.data(g21off + 63 * idx + 57);

                auto g21_z_yyyyz = primBuffer.data(g21off + 63 * idx + 58);

                auto g21_z_yyyzz = primBuffer.data(g21off + 63 * idx + 59);

                auto g21_z_yyzzz = primBuffer.data(g21off + 63 * idx + 60);

                auto g21_z_yzzzz = primBuffer.data(g21off + 63 * idx + 61);

                auto g21_z_zzzzz = primBuffer.data(g21off + 63 * idx + 62);

                // set up pointers to (D|g(r,r')|SH)^(m+1) integrals

                auto g11_xx_xxxxx = primBuffer.data(g11off + 126 * idx);

                auto g11_xx_xxxxy = primBuffer.data(g11off + 126 * idx + 1);

                auto g11_xx_xxxxz = primBuffer.data(g11off + 126 * idx + 2);

                auto g11_xx_xxxyy = primBuffer.data(g11off + 126 * idx + 3);

                auto g11_xx_xxxyz = primBuffer.data(g11off + 126 * idx + 4);

                auto g11_xx_xxxzz = primBuffer.data(g11off + 126 * idx + 5);

                auto g11_xx_xxyyy = primBuffer.data(g11off + 126 * idx + 6);

                auto g11_xx_xxyyz = primBuffer.data(g11off + 126 * idx + 7);

                auto g11_xx_xxyzz = primBuffer.data(g11off + 126 * idx + 8);

                auto g11_xx_xxzzz = primBuffer.data(g11off + 126 * idx + 9);

                auto g11_xx_xyyyy = primBuffer.data(g11off + 126 * idx + 10);

                auto g11_xx_xyyyz = primBuffer.data(g11off + 126 * idx + 11);

                auto g11_xx_xyyzz = primBuffer.data(g11off + 126 * idx + 12);

                auto g11_xx_xyzzz = primBuffer.data(g11off + 126 * idx + 13);

                auto g11_xx_xzzzz = primBuffer.data(g11off + 126 * idx + 14);

                auto g11_xx_yyyyy = primBuffer.data(g11off + 126 * idx + 15);

                auto g11_xx_yyyyz = primBuffer.data(g11off + 126 * idx + 16);

                auto g11_xx_yyyzz = primBuffer.data(g11off + 126 * idx + 17);

                auto g11_xx_yyzzz = primBuffer.data(g11off + 126 * idx + 18);

                auto g11_xx_yzzzz = primBuffer.data(g11off + 126 * idx + 19);

                auto g11_xx_zzzzz = primBuffer.data(g11off + 126 * idx + 20);

                auto g11_xy_xxxxx = primBuffer.data(g11off + 126 * idx + 21);

                auto g11_xy_xxxxy = primBuffer.data(g11off + 126 * idx + 22);

                auto g11_xy_xxxxz = primBuffer.data(g11off + 126 * idx + 23);

                auto g11_xy_xxxyy = primBuffer.data(g11off + 126 * idx + 24);

                auto g11_xy_xxxyz = primBuffer.data(g11off + 126 * idx + 25);

                auto g11_xy_xxxzz = primBuffer.data(g11off + 126 * idx + 26);

                auto g11_xy_xxyyy = primBuffer.data(g11off + 126 * idx + 27);

                auto g11_xy_xxyyz = primBuffer.data(g11off + 126 * idx + 28);

                auto g11_xy_xxyzz = primBuffer.data(g11off + 126 * idx + 29);

                auto g11_xy_xxzzz = primBuffer.data(g11off + 126 * idx + 30);

                auto g11_xy_xyyyy = primBuffer.data(g11off + 126 * idx + 31);

                auto g11_xy_xyyyz = primBuffer.data(g11off + 126 * idx + 32);

                auto g11_xy_xyyzz = primBuffer.data(g11off + 126 * idx + 33);

                auto g11_xy_xyzzz = primBuffer.data(g11off + 126 * idx + 34);

                auto g11_xy_xzzzz = primBuffer.data(g11off + 126 * idx + 35);

                auto g11_xy_yyyyy = primBuffer.data(g11off + 126 * idx + 36);

                auto g11_xy_yyyyz = primBuffer.data(g11off + 126 * idx + 37);

                auto g11_xy_yyyzz = primBuffer.data(g11off + 126 * idx + 38);

                auto g11_xy_yyzzz = primBuffer.data(g11off + 126 * idx + 39);

                auto g11_xy_yzzzz = primBuffer.data(g11off + 126 * idx + 40);

                auto g11_xy_zzzzz = primBuffer.data(g11off + 126 * idx + 41);

                auto g11_xz_xxxxx = primBuffer.data(g11off + 126 * idx + 42);

                auto g11_xz_xxxxy = primBuffer.data(g11off + 126 * idx + 43);

                auto g11_xz_xxxxz = primBuffer.data(g11off + 126 * idx + 44);

                auto g11_xz_xxxyy = primBuffer.data(g11off + 126 * idx + 45);

                auto g11_xz_xxxyz = primBuffer.data(g11off + 126 * idx + 46);

                auto g11_xz_xxxzz = primBuffer.data(g11off + 126 * idx + 47);

                auto g11_xz_xxyyy = primBuffer.data(g11off + 126 * idx + 48);

                auto g11_xz_xxyyz = primBuffer.data(g11off + 126 * idx + 49);

                auto g11_xz_xxyzz = primBuffer.data(g11off + 126 * idx + 50);

                auto g11_xz_xxzzz = primBuffer.data(g11off + 126 * idx + 51);

                auto g11_xz_xyyyy = primBuffer.data(g11off + 126 * idx + 52);

                auto g11_xz_xyyyz = primBuffer.data(g11off + 126 * idx + 53);

                auto g11_xz_xyyzz = primBuffer.data(g11off + 126 * idx + 54);

                auto g11_xz_xyzzz = primBuffer.data(g11off + 126 * idx + 55);

                auto g11_xz_xzzzz = primBuffer.data(g11off + 126 * idx + 56);

                auto g11_xz_yyyyy = primBuffer.data(g11off + 126 * idx + 57);

                auto g11_xz_yyyyz = primBuffer.data(g11off + 126 * idx + 58);

                auto g11_xz_yyyzz = primBuffer.data(g11off + 126 * idx + 59);

                auto g11_xz_yyzzz = primBuffer.data(g11off + 126 * idx + 60);

                auto g11_xz_yzzzz = primBuffer.data(g11off + 126 * idx + 61);

                auto g11_xz_zzzzz = primBuffer.data(g11off + 126 * idx + 62);

                auto g11_yy_xxxxx = primBuffer.data(g11off + 126 * idx + 63);

                auto g11_yy_xxxxy = primBuffer.data(g11off + 126 * idx + 64);

                auto g11_yy_xxxxz = primBuffer.data(g11off + 126 * idx + 65);

                auto g11_yy_xxxyy = primBuffer.data(g11off + 126 * idx + 66);

                auto g11_yy_xxxyz = primBuffer.data(g11off + 126 * idx + 67);

                auto g11_yy_xxxzz = primBuffer.data(g11off + 126 * idx + 68);

                auto g11_yy_xxyyy = primBuffer.data(g11off + 126 * idx + 69);

                auto g11_yy_xxyyz = primBuffer.data(g11off + 126 * idx + 70);

                auto g11_yy_xxyzz = primBuffer.data(g11off + 126 * idx + 71);

                auto g11_yy_xxzzz = primBuffer.data(g11off + 126 * idx + 72);

                auto g11_yy_xyyyy = primBuffer.data(g11off + 126 * idx + 73);

                auto g11_yy_xyyyz = primBuffer.data(g11off + 126 * idx + 74);

                auto g11_yy_xyyzz = primBuffer.data(g11off + 126 * idx + 75);

                auto g11_yy_xyzzz = primBuffer.data(g11off + 126 * idx + 76);

                auto g11_yy_xzzzz = primBuffer.data(g11off + 126 * idx + 77);

                auto g11_yy_yyyyy = primBuffer.data(g11off + 126 * idx + 78);

                auto g11_yy_yyyyz = primBuffer.data(g11off + 126 * idx + 79);

                auto g11_yy_yyyzz = primBuffer.data(g11off + 126 * idx + 80);

                auto g11_yy_yyzzz = primBuffer.data(g11off + 126 * idx + 81);

                auto g11_yy_yzzzz = primBuffer.data(g11off + 126 * idx + 82);

                auto g11_yy_zzzzz = primBuffer.data(g11off + 126 * idx + 83);

                auto g11_yz_xxxxx = primBuffer.data(g11off + 126 * idx + 84);

                auto g11_yz_xxxxy = primBuffer.data(g11off + 126 * idx + 85);

                auto g11_yz_xxxxz = primBuffer.data(g11off + 126 * idx + 86);

                auto g11_yz_xxxyy = primBuffer.data(g11off + 126 * idx + 87);

                auto g11_yz_xxxyz = primBuffer.data(g11off + 126 * idx + 88);

                auto g11_yz_xxxzz = primBuffer.data(g11off + 126 * idx + 89);

                auto g11_yz_xxyyy = primBuffer.data(g11off + 126 * idx + 90);

                auto g11_yz_xxyyz = primBuffer.data(g11off + 126 * idx + 91);

                auto g11_yz_xxyzz = primBuffer.data(g11off + 126 * idx + 92);

                auto g11_yz_xxzzz = primBuffer.data(g11off + 126 * idx + 93);

                auto g11_yz_xyyyy = primBuffer.data(g11off + 126 * idx + 94);

                auto g11_yz_xyyyz = primBuffer.data(g11off + 126 * idx + 95);

                auto g11_yz_xyyzz = primBuffer.data(g11off + 126 * idx + 96);

                auto g11_yz_xyzzz = primBuffer.data(g11off + 126 * idx + 97);

                auto g11_yz_xzzzz = primBuffer.data(g11off + 126 * idx + 98);

                auto g11_yz_yyyyy = primBuffer.data(g11off + 126 * idx + 99);

                auto g11_yz_yyyyz = primBuffer.data(g11off + 126 * idx + 100);

                auto g11_yz_yyyzz = primBuffer.data(g11off + 126 * idx + 101);

                auto g11_yz_yyzzz = primBuffer.data(g11off + 126 * idx + 102);

                auto g11_yz_yzzzz = primBuffer.data(g11off + 126 * idx + 103);

                auto g11_yz_zzzzz = primBuffer.data(g11off + 126 * idx + 104);

                auto g11_zz_xxxxx = primBuffer.data(g11off + 126 * idx + 105);

                auto g11_zz_xxxxy = primBuffer.data(g11off + 126 * idx + 106);

                auto g11_zz_xxxxz = primBuffer.data(g11off + 126 * idx + 107);

                auto g11_zz_xxxyy = primBuffer.data(g11off + 126 * idx + 108);

                auto g11_zz_xxxyz = primBuffer.data(g11off + 126 * idx + 109);

                auto g11_zz_xxxzz = primBuffer.data(g11off + 126 * idx + 110);

                auto g11_zz_xxyyy = primBuffer.data(g11off + 126 * idx + 111);

                auto g11_zz_xxyyz = primBuffer.data(g11off + 126 * idx + 112);

                auto g11_zz_xxyzz = primBuffer.data(g11off + 126 * idx + 113);

                auto g11_zz_xxzzz = primBuffer.data(g11off + 126 * idx + 114);

                auto g11_zz_xyyyy = primBuffer.data(g11off + 126 * idx + 115);

                auto g11_zz_xyyyz = primBuffer.data(g11off + 126 * idx + 116);

                auto g11_zz_xyyzz = primBuffer.data(g11off + 126 * idx + 117);

                auto g11_zz_xyzzz = primBuffer.data(g11off + 126 * idx + 118);

                auto g11_zz_xzzzz = primBuffer.data(g11off + 126 * idx + 119);

                auto g11_zz_yyyyy = primBuffer.data(g11off + 126 * idx + 120);

                auto g11_zz_yyyyz = primBuffer.data(g11off + 126 * idx + 121);

                auto g11_zz_yyyzz = primBuffer.data(g11off + 126 * idx + 122);

                auto g11_zz_yyzzz = primBuffer.data(g11off + 126 * idx + 123);

                auto g11_zz_yzzzz = primBuffer.data(g11off + 126 * idx + 124);

                auto g11_zz_zzzzz = primBuffer.data(g11off + 126 * idx + 125);

                // set up pointers to (F|g(r,r')|SH)^(m) integrals

                auto g_xxx_xxxxx = primBuffer.data(goff + 210 * idx);

                auto g_xxx_xxxxy = primBuffer.data(goff + 210 * idx + 1);

                auto g_xxx_xxxxz = primBuffer.data(goff + 210 * idx + 2);

                auto g_xxx_xxxyy = primBuffer.data(goff + 210 * idx + 3);

                auto g_xxx_xxxyz = primBuffer.data(goff + 210 * idx + 4);

                auto g_xxx_xxxzz = primBuffer.data(goff + 210 * idx + 5);

                auto g_xxx_xxyyy = primBuffer.data(goff + 210 * idx + 6);

                auto g_xxx_xxyyz = primBuffer.data(goff + 210 * idx + 7);

                auto g_xxx_xxyzz = primBuffer.data(goff + 210 * idx + 8);

                auto g_xxx_xxzzz = primBuffer.data(goff + 210 * idx + 9);

                auto g_xxx_xyyyy = primBuffer.data(goff + 210 * idx + 10);

                auto g_xxx_xyyyz = primBuffer.data(goff + 210 * idx + 11);

                auto g_xxx_xyyzz = primBuffer.data(goff + 210 * idx + 12);

                auto g_xxx_xyzzz = primBuffer.data(goff + 210 * idx + 13);

                auto g_xxx_xzzzz = primBuffer.data(goff + 210 * idx + 14);

                auto g_xxx_yyyyy = primBuffer.data(goff + 210 * idx + 15);

                auto g_xxx_yyyyz = primBuffer.data(goff + 210 * idx + 16);

                auto g_xxx_yyyzz = primBuffer.data(goff + 210 * idx + 17);

                auto g_xxx_yyzzz = primBuffer.data(goff + 210 * idx + 18);

                auto g_xxx_yzzzz = primBuffer.data(goff + 210 * idx + 19);

                auto g_xxx_zzzzz = primBuffer.data(goff + 210 * idx + 20);

                auto g_xxy_xxxxx = primBuffer.data(goff + 210 * idx + 21);

                auto g_xxy_xxxxy = primBuffer.data(goff + 210 * idx + 22);

                auto g_xxy_xxxxz = primBuffer.data(goff + 210 * idx + 23);

                auto g_xxy_xxxyy = primBuffer.data(goff + 210 * idx + 24);

                auto g_xxy_xxxyz = primBuffer.data(goff + 210 * idx + 25);

                auto g_xxy_xxxzz = primBuffer.data(goff + 210 * idx + 26);

                auto g_xxy_xxyyy = primBuffer.data(goff + 210 * idx + 27);

                auto g_xxy_xxyyz = primBuffer.data(goff + 210 * idx + 28);

                auto g_xxy_xxyzz = primBuffer.data(goff + 210 * idx + 29);

                auto g_xxy_xxzzz = primBuffer.data(goff + 210 * idx + 30);

                auto g_xxy_xyyyy = primBuffer.data(goff + 210 * idx + 31);

                auto g_xxy_xyyyz = primBuffer.data(goff + 210 * idx + 32);

                auto g_xxy_xyyzz = primBuffer.data(goff + 210 * idx + 33);

                auto g_xxy_xyzzz = primBuffer.data(goff + 210 * idx + 34);

                auto g_xxy_xzzzz = primBuffer.data(goff + 210 * idx + 35);

                auto g_xxy_yyyyy = primBuffer.data(goff + 210 * idx + 36);

                auto g_xxy_yyyyz = primBuffer.data(goff + 210 * idx + 37);

                auto g_xxy_yyyzz = primBuffer.data(goff + 210 * idx + 38);

                auto g_xxy_yyzzz = primBuffer.data(goff + 210 * idx + 39);

                auto g_xxy_yzzzz = primBuffer.data(goff + 210 * idx + 40);

                auto g_xxy_zzzzz = primBuffer.data(goff + 210 * idx + 41);

                auto g_xxz_xxxxx = primBuffer.data(goff + 210 * idx + 42);

                auto g_xxz_xxxxy = primBuffer.data(goff + 210 * idx + 43);

                auto g_xxz_xxxxz = primBuffer.data(goff + 210 * idx + 44);

                auto g_xxz_xxxyy = primBuffer.data(goff + 210 * idx + 45);

                auto g_xxz_xxxyz = primBuffer.data(goff + 210 * idx + 46);

                auto g_xxz_xxxzz = primBuffer.data(goff + 210 * idx + 47);

                auto g_xxz_xxyyy = primBuffer.data(goff + 210 * idx + 48);

                auto g_xxz_xxyyz = primBuffer.data(goff + 210 * idx + 49);

                auto g_xxz_xxyzz = primBuffer.data(goff + 210 * idx + 50);

                auto g_xxz_xxzzz = primBuffer.data(goff + 210 * idx + 51);

                auto g_xxz_xyyyy = primBuffer.data(goff + 210 * idx + 52);

                auto g_xxz_xyyyz = primBuffer.data(goff + 210 * idx + 53);

                auto g_xxz_xyyzz = primBuffer.data(goff + 210 * idx + 54);

                auto g_xxz_xyzzz = primBuffer.data(goff + 210 * idx + 55);

                auto g_xxz_xzzzz = primBuffer.data(goff + 210 * idx + 56);

                auto g_xxz_yyyyy = primBuffer.data(goff + 210 * idx + 57);

                auto g_xxz_yyyyz = primBuffer.data(goff + 210 * idx + 58);

                auto g_xxz_yyyzz = primBuffer.data(goff + 210 * idx + 59);

                auto g_xxz_yyzzz = primBuffer.data(goff + 210 * idx + 60);

                auto g_xxz_yzzzz = primBuffer.data(goff + 210 * idx + 61);

                auto g_xxz_zzzzz = primBuffer.data(goff + 210 * idx + 62);

                auto g_xyy_xxxxx = primBuffer.data(goff + 210 * idx + 63);

                auto g_xyy_xxxxy = primBuffer.data(goff + 210 * idx + 64);

                auto g_xyy_xxxxz = primBuffer.data(goff + 210 * idx + 65);

                auto g_xyy_xxxyy = primBuffer.data(goff + 210 * idx + 66);

                auto g_xyy_xxxyz = primBuffer.data(goff + 210 * idx + 67);

                auto g_xyy_xxxzz = primBuffer.data(goff + 210 * idx + 68);

                auto g_xyy_xxyyy = primBuffer.data(goff + 210 * idx + 69);

                auto g_xyy_xxyyz = primBuffer.data(goff + 210 * idx + 70);

                auto g_xyy_xxyzz = primBuffer.data(goff + 210 * idx + 71);

                auto g_xyy_xxzzz = primBuffer.data(goff + 210 * idx + 72);

                auto g_xyy_xyyyy = primBuffer.data(goff + 210 * idx + 73);

                auto g_xyy_xyyyz = primBuffer.data(goff + 210 * idx + 74);

                auto g_xyy_xyyzz = primBuffer.data(goff + 210 * idx + 75);

                auto g_xyy_xyzzz = primBuffer.data(goff + 210 * idx + 76);

                auto g_xyy_xzzzz = primBuffer.data(goff + 210 * idx + 77);

                auto g_xyy_yyyyy = primBuffer.data(goff + 210 * idx + 78);

                auto g_xyy_yyyyz = primBuffer.data(goff + 210 * idx + 79);

                auto g_xyy_yyyzz = primBuffer.data(goff + 210 * idx + 80);

                auto g_xyy_yyzzz = primBuffer.data(goff + 210 * idx + 81);

                auto g_xyy_yzzzz = primBuffer.data(goff + 210 * idx + 82);

                auto g_xyy_zzzzz = primBuffer.data(goff + 210 * idx + 83);

                auto g_xyz_xxxxx = primBuffer.data(goff + 210 * idx + 84);

                auto g_xyz_xxxxy = primBuffer.data(goff + 210 * idx + 85);

                auto g_xyz_xxxxz = primBuffer.data(goff + 210 * idx + 86);

                auto g_xyz_xxxyy = primBuffer.data(goff + 210 * idx + 87);

                auto g_xyz_xxxyz = primBuffer.data(goff + 210 * idx + 88);

                auto g_xyz_xxxzz = primBuffer.data(goff + 210 * idx + 89);

                auto g_xyz_xxyyy = primBuffer.data(goff + 210 * idx + 90);

                auto g_xyz_xxyyz = primBuffer.data(goff + 210 * idx + 91);

                auto g_xyz_xxyzz = primBuffer.data(goff + 210 * idx + 92);

                auto g_xyz_xxzzz = primBuffer.data(goff + 210 * idx + 93);

                auto g_xyz_xyyyy = primBuffer.data(goff + 210 * idx + 94);

                auto g_xyz_xyyyz = primBuffer.data(goff + 210 * idx + 95);

                auto g_xyz_xyyzz = primBuffer.data(goff + 210 * idx + 96);

                auto g_xyz_xyzzz = primBuffer.data(goff + 210 * idx + 97);

                auto g_xyz_xzzzz = primBuffer.data(goff + 210 * idx + 98);

                auto g_xyz_yyyyy = primBuffer.data(goff + 210 * idx + 99);

                auto g_xyz_yyyyz = primBuffer.data(goff + 210 * idx + 100);

                auto g_xyz_yyyzz = primBuffer.data(goff + 210 * idx + 101);

                auto g_xyz_yyzzz = primBuffer.data(goff + 210 * idx + 102);

                auto g_xyz_yzzzz = primBuffer.data(goff + 210 * idx + 103);

                auto g_xyz_zzzzz = primBuffer.data(goff + 210 * idx + 104);

                auto g_xzz_xxxxx = primBuffer.data(goff + 210 * idx + 105);

                auto g_xzz_xxxxy = primBuffer.data(goff + 210 * idx + 106);

                auto g_xzz_xxxxz = primBuffer.data(goff + 210 * idx + 107);

                auto g_xzz_xxxyy = primBuffer.data(goff + 210 * idx + 108);

                auto g_xzz_xxxyz = primBuffer.data(goff + 210 * idx + 109);

                auto g_xzz_xxxzz = primBuffer.data(goff + 210 * idx + 110);

                auto g_xzz_xxyyy = primBuffer.data(goff + 210 * idx + 111);

                auto g_xzz_xxyyz = primBuffer.data(goff + 210 * idx + 112);

                auto g_xzz_xxyzz = primBuffer.data(goff + 210 * idx + 113);

                auto g_xzz_xxzzz = primBuffer.data(goff + 210 * idx + 114);

                auto g_xzz_xyyyy = primBuffer.data(goff + 210 * idx + 115);

                auto g_xzz_xyyyz = primBuffer.data(goff + 210 * idx + 116);

                auto g_xzz_xyyzz = primBuffer.data(goff + 210 * idx + 117);

                auto g_xzz_xyzzz = primBuffer.data(goff + 210 * idx + 118);

                auto g_xzz_xzzzz = primBuffer.data(goff + 210 * idx + 119);

                auto g_xzz_yyyyy = primBuffer.data(goff + 210 * idx + 120);

                auto g_xzz_yyyyz = primBuffer.data(goff + 210 * idx + 121);

                auto g_xzz_yyyzz = primBuffer.data(goff + 210 * idx + 122);

                auto g_xzz_yyzzz = primBuffer.data(goff + 210 * idx + 123);

                auto g_xzz_yzzzz = primBuffer.data(goff + 210 * idx + 124);

                auto g_xzz_zzzzz = primBuffer.data(goff + 210 * idx + 125);

                auto g_yyy_xxxxx = primBuffer.data(goff + 210 * idx + 126);

                auto g_yyy_xxxxy = primBuffer.data(goff + 210 * idx + 127);

                auto g_yyy_xxxxz = primBuffer.data(goff + 210 * idx + 128);

                auto g_yyy_xxxyy = primBuffer.data(goff + 210 * idx + 129);

                auto g_yyy_xxxyz = primBuffer.data(goff + 210 * idx + 130);

                auto g_yyy_xxxzz = primBuffer.data(goff + 210 * idx + 131);

                auto g_yyy_xxyyy = primBuffer.data(goff + 210 * idx + 132);

                auto g_yyy_xxyyz = primBuffer.data(goff + 210 * idx + 133);

                auto g_yyy_xxyzz = primBuffer.data(goff + 210 * idx + 134);

                auto g_yyy_xxzzz = primBuffer.data(goff + 210 * idx + 135);

                auto g_yyy_xyyyy = primBuffer.data(goff + 210 * idx + 136);

                auto g_yyy_xyyyz = primBuffer.data(goff + 210 * idx + 137);

                auto g_yyy_xyyzz = primBuffer.data(goff + 210 * idx + 138);

                auto g_yyy_xyzzz = primBuffer.data(goff + 210 * idx + 139);

                auto g_yyy_xzzzz = primBuffer.data(goff + 210 * idx + 140);

                auto g_yyy_yyyyy = primBuffer.data(goff + 210 * idx + 141);

                auto g_yyy_yyyyz = primBuffer.data(goff + 210 * idx + 142);

                auto g_yyy_yyyzz = primBuffer.data(goff + 210 * idx + 143);

                auto g_yyy_yyzzz = primBuffer.data(goff + 210 * idx + 144);

                auto g_yyy_yzzzz = primBuffer.data(goff + 210 * idx + 145);

                auto g_yyy_zzzzz = primBuffer.data(goff + 210 * idx + 146);

                auto g_yyz_xxxxx = primBuffer.data(goff + 210 * idx + 147);

                auto g_yyz_xxxxy = primBuffer.data(goff + 210 * idx + 148);

                auto g_yyz_xxxxz = primBuffer.data(goff + 210 * idx + 149);

                auto g_yyz_xxxyy = primBuffer.data(goff + 210 * idx + 150);

                auto g_yyz_xxxyz = primBuffer.data(goff + 210 * idx + 151);

                auto g_yyz_xxxzz = primBuffer.data(goff + 210 * idx + 152);

                auto g_yyz_xxyyy = primBuffer.data(goff + 210 * idx + 153);

                auto g_yyz_xxyyz = primBuffer.data(goff + 210 * idx + 154);

                auto g_yyz_xxyzz = primBuffer.data(goff + 210 * idx + 155);

                auto g_yyz_xxzzz = primBuffer.data(goff + 210 * idx + 156);

                auto g_yyz_xyyyy = primBuffer.data(goff + 210 * idx + 157);

                auto g_yyz_xyyyz = primBuffer.data(goff + 210 * idx + 158);

                auto g_yyz_xyyzz = primBuffer.data(goff + 210 * idx + 159);

                auto g_yyz_xyzzz = primBuffer.data(goff + 210 * idx + 160);

                auto g_yyz_xzzzz = primBuffer.data(goff + 210 * idx + 161);

                auto g_yyz_yyyyy = primBuffer.data(goff + 210 * idx + 162);

                auto g_yyz_yyyyz = primBuffer.data(goff + 210 * idx + 163);

                auto g_yyz_yyyzz = primBuffer.data(goff + 210 * idx + 164);

                auto g_yyz_yyzzz = primBuffer.data(goff + 210 * idx + 165);

                auto g_yyz_yzzzz = primBuffer.data(goff + 210 * idx + 166);

                auto g_yyz_zzzzz = primBuffer.data(goff + 210 * idx + 167);

                auto g_yzz_xxxxx = primBuffer.data(goff + 210 * idx + 168);

                auto g_yzz_xxxxy = primBuffer.data(goff + 210 * idx + 169);

                auto g_yzz_xxxxz = primBuffer.data(goff + 210 * idx + 170);

                auto g_yzz_xxxyy = primBuffer.data(goff + 210 * idx + 171);

                auto g_yzz_xxxyz = primBuffer.data(goff + 210 * idx + 172);

                auto g_yzz_xxxzz = primBuffer.data(goff + 210 * idx + 173);

                auto g_yzz_xxyyy = primBuffer.data(goff + 210 * idx + 174);

                auto g_yzz_xxyyz = primBuffer.data(goff + 210 * idx + 175);

                auto g_yzz_xxyzz = primBuffer.data(goff + 210 * idx + 176);

                auto g_yzz_xxzzz = primBuffer.data(goff + 210 * idx + 177);

                auto g_yzz_xyyyy = primBuffer.data(goff + 210 * idx + 178);

                auto g_yzz_xyyyz = primBuffer.data(goff + 210 * idx + 179);

                auto g_yzz_xyyzz = primBuffer.data(goff + 210 * idx + 180);

                auto g_yzz_xyzzz = primBuffer.data(goff + 210 * idx + 181);

                auto g_yzz_xzzzz = primBuffer.data(goff + 210 * idx + 182);

                auto g_yzz_yyyyy = primBuffer.data(goff + 210 * idx + 183);

                auto g_yzz_yyyyz = primBuffer.data(goff + 210 * idx + 184);

                auto g_yzz_yyyzz = primBuffer.data(goff + 210 * idx + 185);

                auto g_yzz_yyzzz = primBuffer.data(goff + 210 * idx + 186);

                auto g_yzz_yzzzz = primBuffer.data(goff + 210 * idx + 187);

                auto g_yzz_zzzzz = primBuffer.data(goff + 210 * idx + 188);

                auto g_zzz_xxxxx = primBuffer.data(goff + 210 * idx + 189);

                auto g_zzz_xxxxy = primBuffer.data(goff + 210 * idx + 190);

                auto g_zzz_xxxxz = primBuffer.data(goff + 210 * idx + 191);

                auto g_zzz_xxxyy = primBuffer.data(goff + 210 * idx + 192);

                auto g_zzz_xxxyz = primBuffer.data(goff + 210 * idx + 193);

                auto g_zzz_xxxzz = primBuffer.data(goff + 210 * idx + 194);

                auto g_zzz_xxyyy = primBuffer.data(goff + 210 * idx + 195);

                auto g_zzz_xxyyz = primBuffer.data(goff + 210 * idx + 196);

                auto g_zzz_xxyzz = primBuffer.data(goff + 210 * idx + 197);

                auto g_zzz_xxzzz = primBuffer.data(goff + 210 * idx + 198);

                auto g_zzz_xyyyy = primBuffer.data(goff + 210 * idx + 199);

                auto g_zzz_xyyyz = primBuffer.data(goff + 210 * idx + 200);

                auto g_zzz_xyyzz = primBuffer.data(goff + 210 * idx + 201);

                auto g_zzz_xyzzz = primBuffer.data(goff + 210 * idx + 202);

                auto g_zzz_xzzzz = primBuffer.data(goff + 210 * idx + 203);

                auto g_zzz_yyyyy = primBuffer.data(goff + 210 * idx + 204);

                auto g_zzz_yyyyz = primBuffer.data(goff + 210 * idx + 205);

                auto g_zzz_yyyzz = primBuffer.data(goff + 210 * idx + 206);

                auto g_zzz_yyzzz = primBuffer.data(goff + 210 * idx + 207);

                auto g_zzz_yzzzz = primBuffer.data(goff + 210 * idx + 208);

                auto g_zzz_zzzzz = primBuffer.data(goff + 210 * idx + 209);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xxxx,\
                                         gk_xx_xxxy, gk_xx_xxxz, gk_xx_xxyy, gk_xx_xxyz,\
                                         gk_xx_xxzz, gk_xx_xyyy, gk_xx_xyyz, gk_xx_xyzz,\
                                         gk_xx_xzzz, gk_xx_yyyy, gk_xx_yyyz, gk_xx_yyzz,\
                                         gk_xx_yzzz, gk_xx_zzzz, gk_xy_xxxx, gk_xy_xxxy,\
                                         gk_xy_xxxz, gk_xy_xxyy, gk_xy_xxyz, gk_xy_xxzz,\
                                         gk_xy_xyyy, gk_xy_xyyz, gk_xy_xyzz, gk_xy_xzzz,\
                                         gk_xy_yyyy, gk_xy_yyyz, gk_xy_yyzz, gk_xy_yzzz,\
                                         gk_xy_zzzz, gk_xz_xxxx, gk_xz_xxxy, gk_xz_xxxz,\
                                         gk_xz_xxyy, gk_xz_xxyz, gk_xz_xxzz, gk_xz_xyyy,\
                                         gk_xz_xyyz, gk_xz_xyzz, gk_xz_xzzz, gk_xz_yyyy,\
                                         gk_xz_yyyz, gk_xz_yyzz, gk_xz_yzzz, gk_xz_zzzz,\
                                         gk_yy_xxxx, gk_yy_xxxy, gk_yy_xxxz, gk_yy_xxyy,\
                                         gk_yy_xxyz, gk_yy_xxzz, gk_yy_xyyy, gk_yy_xyyz,\
                                         gk_yy_xyzz, gk_yy_xzzz, gk_yy_yyyy, gk_yy_yyyz,\
                                         gk_yy_yyzz, gk_yy_yzzz, gk_yy_zzzz, gk_yz_xxxx,\
                                         gk_yz_xxxy, gk_yz_xxxz, gk_yz_xxyy, gk_yz_xxyz,\
                                         gk_yz_xxzz, gk_yz_xyyy, gk_yz_xyyz, gk_yz_xyzz,\
                                         gk_yz_xzzz, gk_yz_yyyy, gk_yz_yyyz, gk_yz_yyzz,\
                                         gk_yz_yzzz, gk_yz_zzzz, gk_zz_xxxx, gk_zz_xxxy,\
                                         gk_zz_xxxz, gk_zz_xxyy, gk_zz_xxyz, gk_zz_xxzz,\
                                         gk_zz_xyyy, gk_zz_xyyz, gk_zz_xyzz, gk_zz_xzzz,\
                                         gk_zz_yyyy, gk_zz_yyyz, gk_zz_yyzz, gk_zz_yzzz,\
                                         gk_zz_zzzz, g20_x_xxxxx, g20_x_xxxxy,\
                                         g20_x_xxxxz, g20_x_xxxyy, g20_x_xxxyz,\
                                         g20_x_xxxzz, g20_x_xxyyy, g20_x_xxyyz,\
                                         g20_x_xxyzz, g20_x_xxzzz, g20_x_xyyyy,\
                                         g20_x_xyyyz, g20_x_xyyzz, g20_x_xyzzz,\
                                         g20_x_xzzzz, g20_x_yyyyy, g20_x_yyyyz,\
                                         g20_x_yyyzz, g20_x_yyzzz, g20_x_yzzzz,\
                                         g20_x_zzzzz, g20_y_xxxxx, g20_y_xxxxy,\
                                         g20_y_xxxxz, g20_y_xxxyy, g20_y_xxxyz,\
                                         g20_y_xxxzz, g20_y_xxyyy, g20_y_xxyyz,\
                                         g20_y_xxyzz, g20_y_xxzzz, g20_y_xyyyy,\
                                         g20_y_xyyyz, g20_y_xyyzz, g20_y_xyzzz,\
                                         g20_y_xzzzz, g20_y_yyyyy, g20_y_yyyyz,\
                                         g20_y_yyyzz, g20_y_yyzzz, g20_y_yzzzz,\
                                         g20_y_zzzzz, g20_z_xxxxx, g20_z_xxxxy,\
                                         g20_z_xxxxz, g20_z_xxxyy, g20_z_xxxyz,\
                                         g20_z_xxxzz, g20_z_xxyyy, g20_z_xxyyz,\
                                         g20_z_xxyzz, g20_z_xxzzz, g20_z_xyyyy,\
                                         g20_z_xyyyz, g20_z_xyyzz, g20_z_xyzzz,\
                                         g20_z_xzzzz, g20_z_yyyyy, g20_z_yyyyz,\
                                         g20_z_yyyzz, g20_z_yyzzz, g20_z_yzzzz,\
                                         g20_z_zzzzz, g21_x_xxxxx, g21_x_xxxxy,\
                                         g21_x_xxxxz, g21_x_xxxyy, g21_x_xxxyz,\
                                         g21_x_xxxzz, g21_x_xxyyy, g21_x_xxyyz,\
                                         g21_x_xxyzz, g21_x_xxzzz, g21_x_xyyyy,\
                                         g21_x_xyyyz, g21_x_xyyzz, g21_x_xyzzz,\
                                         g21_x_xzzzz, g21_x_yyyyy, g21_x_yyyyz,\
                                         g21_x_yyyzz, g21_x_yyzzz, g21_x_yzzzz,\
                                         g21_x_zzzzz, g21_y_xxxxx, g21_y_xxxxy,\
                                         g21_y_xxxxz, g21_y_xxxyy, g21_y_xxxyz,\
                                         g21_y_xxxzz, g21_y_xxyyy, g21_y_xxyyz,\
                                         g21_y_xxyzz, g21_y_xxzzz, g21_y_xyyyy,\
                                         g21_y_xyyyz, g21_y_xyyzz, g21_y_xyzzz,\
                                         g21_y_xzzzz, g21_y_yyyyy, g21_y_yyyyz,\
                                         g21_y_yyyzz, g21_y_yyzzz, g21_y_yzzzz,\
                                         g21_y_zzzzz, g21_z_xxxxx, g21_z_xxxxy,\
                                         g21_z_xxxxz, g21_z_xxxyy, g21_z_xxxyz,\
                                         g21_z_xxxzz, g21_z_xxyyy, g21_z_xxyyz,\
                                         g21_z_xxyzz, g21_z_xxzzz, g21_z_xyyyy,\
                                         g21_z_xyyyz, g21_z_xyyzz, g21_z_xyzzz,\
                                         g21_z_xzzzz, g21_z_yyyyy, g21_z_yyyyz,\
                                         g21_z_yyyzz, g21_z_yyzzz, g21_z_yzzzz,\
                                         g21_z_zzzzz, g11_xx_xxxxx, g11_xx_xxxxy,\
                                         g11_xx_xxxxz, g11_xx_xxxyy, g11_xx_xxxyz,\
                                         g11_xx_xxxzz, g11_xx_xxyyy, g11_xx_xxyyz,\
                                         g11_xx_xxyzz, g11_xx_xxzzz, g11_xx_xyyyy,\
                                         g11_xx_xyyyz, g11_xx_xyyzz, g11_xx_xyzzz,\
                                         g11_xx_xzzzz, g11_xx_yyyyy, g11_xx_yyyyz,\
                                         g11_xx_yyyzz, g11_xx_yyzzz, g11_xx_yzzzz,\
                                         g11_xx_zzzzz, g11_xy_xxxxx, g11_xy_xxxxy,\
                                         g11_xy_xxxxz, g11_xy_xxxyy, g11_xy_xxxyz,\
                                         g11_xy_xxxzz, g11_xy_xxyyy, g11_xy_xxyyz,\
                                         g11_xy_xxyzz, g11_xy_xxzzz, g11_xy_xyyyy,\
                                         g11_xy_xyyyz, g11_xy_xyyzz, g11_xy_xyzzz,\
                                         g11_xy_xzzzz, g11_xy_yyyyy, g11_xy_yyyyz,\
                                         g11_xy_yyyzz, g11_xy_yyzzz, g11_xy_yzzzz,\
                                         g11_xy_zzzzz, g11_xz_xxxxx, g11_xz_xxxxy,\
                                         g11_xz_xxxxz, g11_xz_xxxyy, g11_xz_xxxyz,\
                                         g11_xz_xxxzz, g11_xz_xxyyy, g11_xz_xxyyz,\
                                         g11_xz_xxyzz, g11_xz_xxzzz, g11_xz_xyyyy,\
                                         g11_xz_xyyyz, g11_xz_xyyzz, g11_xz_xyzzz,\
                                         g11_xz_xzzzz, g11_xz_yyyyy, g11_xz_yyyyz,\
                                         g11_xz_yyyzz, g11_xz_yyzzz, g11_xz_yzzzz,\
                                         g11_xz_zzzzz, g11_yy_xxxxx, g11_yy_xxxxy,\
                                         g11_yy_xxxxz, g11_yy_xxxyy, g11_yy_xxxyz,\
                                         g11_yy_xxxzz, g11_yy_xxyyy, g11_yy_xxyyz,\
                                         g11_yy_xxyzz, g11_yy_xxzzz, g11_yy_xyyyy,\
                                         g11_yy_xyyyz, g11_yy_xyyzz, g11_yy_xyzzz,\
                                         g11_yy_xzzzz, g11_yy_yyyyy, g11_yy_yyyyz,\
                                         g11_yy_yyyzz, g11_yy_yyzzz, g11_yy_yzzzz,\
                                         g11_yy_zzzzz, g11_yz_xxxxx, g11_yz_xxxxy,\
                                         g11_yz_xxxxz, g11_yz_xxxyy, g11_yz_xxxyz,\
                                         g11_yz_xxxzz, g11_yz_xxyyy, g11_yz_xxyyz,\
                                         g11_yz_xxyzz, g11_yz_xxzzz, g11_yz_xyyyy,\
                                         g11_yz_xyyyz, g11_yz_xyyzz, g11_yz_xyzzz,\
                                         g11_yz_xzzzz, g11_yz_yyyyy, g11_yz_yyyyz,\
                                         g11_yz_yyyzz, g11_yz_yyzzz, g11_yz_yzzzz,\
                                         g11_yz_zzzzz, g11_zz_xxxxx, g11_zz_xxxxy,\
                                         g11_zz_xxxxz, g11_zz_xxxyy, g11_zz_xxxyz,\
                                         g11_zz_xxxzz, g11_zz_xxyyy, g11_zz_xxyyz,\
                                         g11_zz_xxyzz, g11_zz_xxzzz, g11_zz_xyyyy,\
                                         g11_zz_xyyyz, g11_zz_xyyzz, g11_zz_xyzzz,\
                                         g11_zz_xzzzz, g11_zz_yyyyy, g11_zz_yyyyz,\
                                         g11_zz_yyyzz, g11_zz_yyzzz, g11_zz_yzzzz,\
                                         g11_zz_zzzzz, g_xxx_xxxxx, g_xxx_xxxxy,\
                                         g_xxx_xxxxz, g_xxx_xxxyy, g_xxx_xxxyz,\
                                         g_xxx_xxxzz, g_xxx_xxyyy, g_xxx_xxyyz,\
                                         g_xxx_xxyzz, g_xxx_xxzzz, g_xxx_xyyyy,\
                                         g_xxx_xyyyz, g_xxx_xyyzz, g_xxx_xyzzz,\
                                         g_xxx_xzzzz, g_xxx_yyyyy, g_xxx_yyyyz,\
                                         g_xxx_yyyzz, g_xxx_yyzzz, g_xxx_yzzzz,\
                                         g_xxx_zzzzz, g_xxy_xxxxx, g_xxy_xxxxy,\
                                         g_xxy_xxxxz, g_xxy_xxxyy, g_xxy_xxxyz,\
                                         g_xxy_xxxzz, g_xxy_xxyyy, g_xxy_xxyyz,\
                                         g_xxy_xxyzz, g_xxy_xxzzz, g_xxy_xyyyy,\
                                         g_xxy_xyyyz, g_xxy_xyyzz, g_xxy_xyzzz,\
                                         g_xxy_xzzzz, g_xxy_yyyyy, g_xxy_yyyyz,\
                                         g_xxy_yyyzz, g_xxy_yyzzz, g_xxy_yzzzz,\
                                         g_xxy_zzzzz, g_xxz_xxxxx, g_xxz_xxxxy,\
                                         g_xxz_xxxxz, g_xxz_xxxyy, g_xxz_xxxyz,\
                                         g_xxz_xxxzz, g_xxz_xxyyy, g_xxz_xxyyz,\
                                         g_xxz_xxyzz, g_xxz_xxzzz, g_xxz_xyyyy,\
                                         g_xxz_xyyyz, g_xxz_xyyzz, g_xxz_xyzzz,\
                                         g_xxz_xzzzz, g_xxz_yyyyy, g_xxz_yyyyz,\
                                         g_xxz_yyyzz, g_xxz_yyzzz, g_xxz_yzzzz,\
                                         g_xxz_zzzzz, g_xyy_xxxxx, g_xyy_xxxxy,\
                                         g_xyy_xxxxz, g_xyy_xxxyy, g_xyy_xxxyz,\
                                         g_xyy_xxxzz, g_xyy_xxyyy, g_xyy_xxyyz,\
                                         g_xyy_xxyzz, g_xyy_xxzzz, g_xyy_xyyyy,\
                                         g_xyy_xyyyz, g_xyy_xyyzz, g_xyy_xyzzz,\
                                         g_xyy_xzzzz, g_xyy_yyyyy, g_xyy_yyyyz,\
                                         g_xyy_yyyzz, g_xyy_yyzzz, g_xyy_yzzzz,\
                                         g_xyy_zzzzz, g_xyz_xxxxx, g_xyz_xxxxy,\
                                         g_xyz_xxxxz, g_xyz_xxxyy, g_xyz_xxxyz,\
                                         g_xyz_xxxzz, g_xyz_xxyyy, g_xyz_xxyyz,\
                                         g_xyz_xxyzz, g_xyz_xxzzz, g_xyz_xyyyy,\
                                         g_xyz_xyyyz, g_xyz_xyyzz, g_xyz_xyzzz,\
                                         g_xyz_xzzzz, g_xyz_yyyyy, g_xyz_yyyyz,\
                                         g_xyz_yyyzz, g_xyz_yyzzz, g_xyz_yzzzz,\
                                         g_xyz_zzzzz, g_xzz_xxxxx, g_xzz_xxxxy,\
                                         g_xzz_xxxxz, g_xzz_xxxyy, g_xzz_xxxyz,\
                                         g_xzz_xxxzz, g_xzz_xxyyy, g_xzz_xxyyz,\
                                         g_xzz_xxyzz, g_xzz_xxzzz, g_xzz_xyyyy,\
                                         g_xzz_xyyyz, g_xzz_xyyzz, g_xzz_xyzzz,\
                                         g_xzz_xzzzz, g_xzz_yyyyy, g_xzz_yyyyz,\
                                         g_xzz_yyyzz, g_xzz_yyzzz, g_xzz_yzzzz,\
                                         g_xzz_zzzzz, g_yyy_xxxxx, g_yyy_xxxxy,\
                                         g_yyy_xxxxz, g_yyy_xxxyy, g_yyy_xxxyz,\
                                         g_yyy_xxxzz, g_yyy_xxyyy, g_yyy_xxyyz,\
                                         g_yyy_xxyzz, g_yyy_xxzzz, g_yyy_xyyyy,\
                                         g_yyy_xyyyz, g_yyy_xyyzz, g_yyy_xyzzz,\
                                         g_yyy_xzzzz, g_yyy_yyyyy, g_yyy_yyyyz,\
                                         g_yyy_yyyzz, g_yyy_yyzzz, g_yyy_yzzzz,\
                                         g_yyy_zzzzz, g_yyz_xxxxx, g_yyz_xxxxy,\
                                         g_yyz_xxxxz, g_yyz_xxxyy, g_yyz_xxxyz,\
                                         g_yyz_xxxzz, g_yyz_xxyyy, g_yyz_xxyyz,\
                                         g_yyz_xxyzz, g_yyz_xxzzz, g_yyz_xyyyy,\
                                         g_yyz_xyyyz, g_yyz_xyyzz, g_yyz_xyzzz,\
                                         g_yyz_xzzzz, g_yyz_yyyyy, g_yyz_yyyyz,\
                                         g_yyz_yyyzz, g_yyz_yyzzz, g_yyz_yzzzz,\
                                         g_yyz_zzzzz, g_yzz_xxxxx, g_yzz_xxxxy,\
                                         g_yzz_xxxxz, g_yzz_xxxyy, g_yzz_xxxyz,\
                                         g_yzz_xxxzz, g_yzz_xxyyy, g_yzz_xxyyz,\
                                         g_yzz_xxyzz, g_yzz_xxzzz, g_yzz_xyyyy,\
                                         g_yzz_xyyyz, g_yzz_xyyzz, g_yzz_xyzzz,\
                                         g_yzz_xzzzz, g_yzz_yyyyy, g_yzz_yyyyz,\
                                         g_yzz_yyyzz, g_yzz_yyzzz, g_yzz_yzzzz,\
                                         g_yzz_zzzzz, g_zzz_xxxxx, g_zzz_xxxxy,\
                                         g_zzz_xxxxz, g_zzz_xxxyy, g_zzz_xxxyz,\
                                         g_zzz_xxxzz, g_zzz_xxyyy, g_zzz_xxyyz,\
                                         g_zzz_xxyzz, g_zzz_xxzzz, g_zzz_xyyyy,\
                                         g_zzz_xyyyz, g_zzz_xyyzz, g_zzz_xyzzz,\
                                         g_zzz_xzzzz, g_zzz_yyyyy, g_zzz_yyyyz,\
                                         g_zzz_yyyzz, g_zzz_yyzzz, g_zzz_yzzzz,\
                                         g_zzz_zzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxxxx[k] = fr * g11_xx_xxxxx[k] + f2g * (2.0 * g20_x_xxxxx[k] - 2.0 * fgz * g21_x_xxxxx[k]) + 5.0 * f2t * gk_xx_xxxx[k];

                    g_xxx_xxxxy[k] = fr * g11_xx_xxxxy[k] + f2g * (2.0 * g20_x_xxxxy[k] - 2.0 * fgz * g21_x_xxxxy[k]) + 4.0 * f2t * gk_xx_xxxy[k];

                    g_xxx_xxxxz[k] = fr * g11_xx_xxxxz[k] + f2g * (2.0 * g20_x_xxxxz[k] - 2.0 * fgz * g21_x_xxxxz[k]) + 4.0 * f2t * gk_xx_xxxz[k];

                    g_xxx_xxxyy[k] = fr * g11_xx_xxxyy[k] + f2g * (2.0 * g20_x_xxxyy[k] - 2.0 * fgz * g21_x_xxxyy[k]) + 3.0 * f2t * gk_xx_xxyy[k];

                    g_xxx_xxxyz[k] = fr * g11_xx_xxxyz[k] + f2g * (2.0 * g20_x_xxxyz[k] - 2.0 * fgz * g21_x_xxxyz[k]) + 3.0 * f2t * gk_xx_xxyz[k];

                    g_xxx_xxxzz[k] = fr * g11_xx_xxxzz[k] + f2g * (2.0 * g20_x_xxxzz[k] - 2.0 * fgz * g21_x_xxxzz[k]) + 3.0 * f2t * gk_xx_xxzz[k];

                    g_xxx_xxyyy[k] = fr * g11_xx_xxyyy[k] + f2g * (2.0 * g20_x_xxyyy[k] - 2.0 * fgz * g21_x_xxyyy[k]) + 2.0 * f2t * gk_xx_xyyy[k];

                    g_xxx_xxyyz[k] = fr * g11_xx_xxyyz[k] + f2g * (2.0 * g20_x_xxyyz[k] - 2.0 * fgz * g21_x_xxyyz[k]) + 2.0 * f2t * gk_xx_xyyz[k];

                    g_xxx_xxyzz[k] = fr * g11_xx_xxyzz[k] + f2g * (2.0 * g20_x_xxyzz[k] - 2.0 * fgz * g21_x_xxyzz[k]) + 2.0 * f2t * gk_xx_xyzz[k];

                    g_xxx_xxzzz[k] = fr * g11_xx_xxzzz[k] + f2g * (2.0 * g20_x_xxzzz[k] - 2.0 * fgz * g21_x_xxzzz[k]) + 2.0 * f2t * gk_xx_xzzz[k];

                    g_xxx_xyyyy[k] = fr * g11_xx_xyyyy[k] + f2g * (2.0 * g20_x_xyyyy[k] - 2.0 * fgz * g21_x_xyyyy[k]) + f2t * gk_xx_yyyy[k];

                    g_xxx_xyyyz[k] = fr * g11_xx_xyyyz[k] + f2g * (2.0 * g20_x_xyyyz[k] - 2.0 * fgz * g21_x_xyyyz[k]) + f2t * gk_xx_yyyz[k];

                    g_xxx_xyyzz[k] = fr * g11_xx_xyyzz[k] + f2g * (2.0 * g20_x_xyyzz[k] - 2.0 * fgz * g21_x_xyyzz[k]) + f2t * gk_xx_yyzz[k];

                    g_xxx_xyzzz[k] = fr * g11_xx_xyzzz[k] + f2g * (2.0 * g20_x_xyzzz[k] - 2.0 * fgz * g21_x_xyzzz[k]) + f2t * gk_xx_yzzz[k];

                    g_xxx_xzzzz[k] = fr * g11_xx_xzzzz[k] + f2g * (2.0 * g20_x_xzzzz[k] - 2.0 * fgz * g21_x_xzzzz[k]) + f2t * gk_xx_zzzz[k];

                    g_xxx_yyyyy[k] = fr * g11_xx_yyyyy[k] + f2g * (2.0 * g20_x_yyyyy[k] - 2.0 * fgz * g21_x_yyyyy[k]);

                    g_xxx_yyyyz[k] = fr * g11_xx_yyyyz[k] + f2g * (2.0 * g20_x_yyyyz[k] - 2.0 * fgz * g21_x_yyyyz[k]);

                    g_xxx_yyyzz[k] = fr * g11_xx_yyyzz[k] + f2g * (2.0 * g20_x_yyyzz[k] - 2.0 * fgz * g21_x_yyyzz[k]);

                    g_xxx_yyzzz[k] = fr * g11_xx_yyzzz[k] + f2g * (2.0 * g20_x_yyzzz[k] - 2.0 * fgz * g21_x_yyzzz[k]);

                    g_xxx_yzzzz[k] = fr * g11_xx_yzzzz[k] + f2g * (2.0 * g20_x_yzzzz[k] - 2.0 * fgz * g21_x_yzzzz[k]);

                    g_xxx_zzzzz[k] = fr * g11_xx_zzzzz[k] + f2g * (2.0 * g20_x_zzzzz[k] - 2.0 * fgz * g21_x_zzzzz[k]);

                    g_xxy_xxxxx[k] = fr * g11_xy_xxxxx[k] + f2g * (g20_y_xxxxx[k] - fgz * g21_y_xxxxx[k]) + 5.0 * f2t * gk_xy_xxxx[k];

                    g_xxy_xxxxy[k] = fr * g11_xy_xxxxy[k] + f2g * (g20_y_xxxxy[k] - fgz * g21_y_xxxxy[k]) + 4.0 * f2t * gk_xy_xxxy[k];

                    g_xxy_xxxxz[k] = fr * g11_xy_xxxxz[k] + f2g * (g20_y_xxxxz[k] - fgz * g21_y_xxxxz[k]) + 4.0 * f2t * gk_xy_xxxz[k];

                    g_xxy_xxxyy[k] = fr * g11_xy_xxxyy[k] + f2g * (g20_y_xxxyy[k] - fgz * g21_y_xxxyy[k]) + 3.0 * f2t * gk_xy_xxyy[k];

                    g_xxy_xxxyz[k] = fr * g11_xy_xxxyz[k] + f2g * (g20_y_xxxyz[k] - fgz * g21_y_xxxyz[k]) + 3.0 * f2t * gk_xy_xxyz[k];

                    g_xxy_xxxzz[k] = fr * g11_xy_xxxzz[k] + f2g * (g20_y_xxxzz[k] - fgz * g21_y_xxxzz[k]) + 3.0 * f2t * gk_xy_xxzz[k];

                    g_xxy_xxyyy[k] = fr * g11_xy_xxyyy[k] + f2g * (g20_y_xxyyy[k] - fgz * g21_y_xxyyy[k]) + 2.0 * f2t * gk_xy_xyyy[k];

                    g_xxy_xxyyz[k] = fr * g11_xy_xxyyz[k] + f2g * (g20_y_xxyyz[k] - fgz * g21_y_xxyyz[k]) + 2.0 * f2t * gk_xy_xyyz[k];

                    g_xxy_xxyzz[k] = fr * g11_xy_xxyzz[k] + f2g * (g20_y_xxyzz[k] - fgz * g21_y_xxyzz[k]) + 2.0 * f2t * gk_xy_xyzz[k];

                    g_xxy_xxzzz[k] = fr * g11_xy_xxzzz[k] + f2g * (g20_y_xxzzz[k] - fgz * g21_y_xxzzz[k]) + 2.0 * f2t * gk_xy_xzzz[k];

                    g_xxy_xyyyy[k] = fr * g11_xy_xyyyy[k] + f2g * (g20_y_xyyyy[k] - fgz * g21_y_xyyyy[k]) + f2t * gk_xy_yyyy[k];

                    g_xxy_xyyyz[k] = fr * g11_xy_xyyyz[k] + f2g * (g20_y_xyyyz[k] - fgz * g21_y_xyyyz[k]) + f2t * gk_xy_yyyz[k];

                    g_xxy_xyyzz[k] = fr * g11_xy_xyyzz[k] + f2g * (g20_y_xyyzz[k] - fgz * g21_y_xyyzz[k]) + f2t * gk_xy_yyzz[k];

                    g_xxy_xyzzz[k] = fr * g11_xy_xyzzz[k] + f2g * (g20_y_xyzzz[k] - fgz * g21_y_xyzzz[k]) + f2t * gk_xy_yzzz[k];

                    g_xxy_xzzzz[k] = fr * g11_xy_xzzzz[k] + f2g * (g20_y_xzzzz[k] - fgz * g21_y_xzzzz[k]) + f2t * gk_xy_zzzz[k];

                    g_xxy_yyyyy[k] = fr * g11_xy_yyyyy[k] + f2g * (g20_y_yyyyy[k] - fgz * g21_y_yyyyy[k]);

                    g_xxy_yyyyz[k] = fr * g11_xy_yyyyz[k] + f2g * (g20_y_yyyyz[k] - fgz * g21_y_yyyyz[k]);

                    g_xxy_yyyzz[k] = fr * g11_xy_yyyzz[k] + f2g * (g20_y_yyyzz[k] - fgz * g21_y_yyyzz[k]);

                    g_xxy_yyzzz[k] = fr * g11_xy_yyzzz[k] + f2g * (g20_y_yyzzz[k] - fgz * g21_y_yyzzz[k]);

                    g_xxy_yzzzz[k] = fr * g11_xy_yzzzz[k] + f2g * (g20_y_yzzzz[k] - fgz * g21_y_yzzzz[k]);

                    g_xxy_zzzzz[k] = fr * g11_xy_zzzzz[k] + f2g * (g20_y_zzzzz[k] - fgz * g21_y_zzzzz[k]);

                    g_xxz_xxxxx[k] = fr * g11_xz_xxxxx[k] + f2g * (g20_z_xxxxx[k] - fgz * g21_z_xxxxx[k]) + 5.0 * f2t * gk_xz_xxxx[k];

                    g_xxz_xxxxy[k] = fr * g11_xz_xxxxy[k] + f2g * (g20_z_xxxxy[k] - fgz * g21_z_xxxxy[k]) + 4.0 * f2t * gk_xz_xxxy[k];

                    g_xxz_xxxxz[k] = fr * g11_xz_xxxxz[k] + f2g * (g20_z_xxxxz[k] - fgz * g21_z_xxxxz[k]) + 4.0 * f2t * gk_xz_xxxz[k];

                    g_xxz_xxxyy[k] = fr * g11_xz_xxxyy[k] + f2g * (g20_z_xxxyy[k] - fgz * g21_z_xxxyy[k]) + 3.0 * f2t * gk_xz_xxyy[k];

                    g_xxz_xxxyz[k] = fr * g11_xz_xxxyz[k] + f2g * (g20_z_xxxyz[k] - fgz * g21_z_xxxyz[k]) + 3.0 * f2t * gk_xz_xxyz[k];

                    g_xxz_xxxzz[k] = fr * g11_xz_xxxzz[k] + f2g * (g20_z_xxxzz[k] - fgz * g21_z_xxxzz[k]) + 3.0 * f2t * gk_xz_xxzz[k];

                    g_xxz_xxyyy[k] = fr * g11_xz_xxyyy[k] + f2g * (g20_z_xxyyy[k] - fgz * g21_z_xxyyy[k]) + 2.0 * f2t * gk_xz_xyyy[k];

                    g_xxz_xxyyz[k] = fr * g11_xz_xxyyz[k] + f2g * (g20_z_xxyyz[k] - fgz * g21_z_xxyyz[k]) + 2.0 * f2t * gk_xz_xyyz[k];

                    g_xxz_xxyzz[k] = fr * g11_xz_xxyzz[k] + f2g * (g20_z_xxyzz[k] - fgz * g21_z_xxyzz[k]) + 2.0 * f2t * gk_xz_xyzz[k];

                    g_xxz_xxzzz[k] = fr * g11_xz_xxzzz[k] + f2g * (g20_z_xxzzz[k] - fgz * g21_z_xxzzz[k]) + 2.0 * f2t * gk_xz_xzzz[k];

                    g_xxz_xyyyy[k] = fr * g11_xz_xyyyy[k] + f2g * (g20_z_xyyyy[k] - fgz * g21_z_xyyyy[k]) + f2t * gk_xz_yyyy[k];

                    g_xxz_xyyyz[k] = fr * g11_xz_xyyyz[k] + f2g * (g20_z_xyyyz[k] - fgz * g21_z_xyyyz[k]) + f2t * gk_xz_yyyz[k];

                    g_xxz_xyyzz[k] = fr * g11_xz_xyyzz[k] + f2g * (g20_z_xyyzz[k] - fgz * g21_z_xyyzz[k]) + f2t * gk_xz_yyzz[k];

                    g_xxz_xyzzz[k] = fr * g11_xz_xyzzz[k] + f2g * (g20_z_xyzzz[k] - fgz * g21_z_xyzzz[k]) + f2t * gk_xz_yzzz[k];

                    g_xxz_xzzzz[k] = fr * g11_xz_xzzzz[k] + f2g * (g20_z_xzzzz[k] - fgz * g21_z_xzzzz[k]) + f2t * gk_xz_zzzz[k];

                    g_xxz_yyyyy[k] = fr * g11_xz_yyyyy[k] + f2g * (g20_z_yyyyy[k] - fgz * g21_z_yyyyy[k]);

                    g_xxz_yyyyz[k] = fr * g11_xz_yyyyz[k] + f2g * (g20_z_yyyyz[k] - fgz * g21_z_yyyyz[k]);

                    g_xxz_yyyzz[k] = fr * g11_xz_yyyzz[k] + f2g * (g20_z_yyyzz[k] - fgz * g21_z_yyyzz[k]);

                    g_xxz_yyzzz[k] = fr * g11_xz_yyzzz[k] + f2g * (g20_z_yyzzz[k] - fgz * g21_z_yyzzz[k]);

                    g_xxz_yzzzz[k] = fr * g11_xz_yzzzz[k] + f2g * (g20_z_yzzzz[k] - fgz * g21_z_yzzzz[k]);

                    g_xxz_zzzzz[k] = fr * g11_xz_zzzzz[k] + f2g * (g20_z_zzzzz[k] - fgz * g21_z_zzzzz[k]);

                    g_xyy_xxxxx[k] = fr * g11_yy_xxxxx[k] + 5.0 * f2t * gk_yy_xxxx[k];

                    g_xyy_xxxxy[k] = fr * g11_yy_xxxxy[k] + 4.0 * f2t * gk_yy_xxxy[k];

                    g_xyy_xxxxz[k] = fr * g11_yy_xxxxz[k] + 4.0 * f2t * gk_yy_xxxz[k];

                    g_xyy_xxxyy[k] = fr * g11_yy_xxxyy[k] + 3.0 * f2t * gk_yy_xxyy[k];

                    g_xyy_xxxyz[k] = fr * g11_yy_xxxyz[k] + 3.0 * f2t * gk_yy_xxyz[k];

                    g_xyy_xxxzz[k] = fr * g11_yy_xxxzz[k] + 3.0 * f2t * gk_yy_xxzz[k];

                    g_xyy_xxyyy[k] = fr * g11_yy_xxyyy[k] + 2.0 * f2t * gk_yy_xyyy[k];

                    g_xyy_xxyyz[k] = fr * g11_yy_xxyyz[k] + 2.0 * f2t * gk_yy_xyyz[k];

                    g_xyy_xxyzz[k] = fr * g11_yy_xxyzz[k] + 2.0 * f2t * gk_yy_xyzz[k];

                    g_xyy_xxzzz[k] = fr * g11_yy_xxzzz[k] + 2.0 * f2t * gk_yy_xzzz[k];

                    g_xyy_xyyyy[k] = fr * g11_yy_xyyyy[k] + f2t * gk_yy_yyyy[k];

                    g_xyy_xyyyz[k] = fr * g11_yy_xyyyz[k] + f2t * gk_yy_yyyz[k];

                    g_xyy_xyyzz[k] = fr * g11_yy_xyyzz[k] + f2t * gk_yy_yyzz[k];

                    g_xyy_xyzzz[k] = fr * g11_yy_xyzzz[k] + f2t * gk_yy_yzzz[k];

                    g_xyy_xzzzz[k] = fr * g11_yy_xzzzz[k] + f2t * gk_yy_zzzz[k];

                    g_xyy_yyyyy[k] = fr * g11_yy_yyyyy[k];

                    g_xyy_yyyyz[k] = fr * g11_yy_yyyyz[k];

                    g_xyy_yyyzz[k] = fr * g11_yy_yyyzz[k];

                    g_xyy_yyzzz[k] = fr * g11_yy_yyzzz[k];

                    g_xyy_yzzzz[k] = fr * g11_yy_yzzzz[k];

                    g_xyy_zzzzz[k] = fr * g11_yy_zzzzz[k];

                    g_xyz_xxxxx[k] = fr * g11_yz_xxxxx[k] + 5.0 * f2t * gk_yz_xxxx[k];

                    g_xyz_xxxxy[k] = fr * g11_yz_xxxxy[k] + 4.0 * f2t * gk_yz_xxxy[k];

                    g_xyz_xxxxz[k] = fr * g11_yz_xxxxz[k] + 4.0 * f2t * gk_yz_xxxz[k];

                    g_xyz_xxxyy[k] = fr * g11_yz_xxxyy[k] + 3.0 * f2t * gk_yz_xxyy[k];

                    g_xyz_xxxyz[k] = fr * g11_yz_xxxyz[k] + 3.0 * f2t * gk_yz_xxyz[k];

                    g_xyz_xxxzz[k] = fr * g11_yz_xxxzz[k] + 3.0 * f2t * gk_yz_xxzz[k];

                    g_xyz_xxyyy[k] = fr * g11_yz_xxyyy[k] + 2.0 * f2t * gk_yz_xyyy[k];

                    g_xyz_xxyyz[k] = fr * g11_yz_xxyyz[k] + 2.0 * f2t * gk_yz_xyyz[k];

                    g_xyz_xxyzz[k] = fr * g11_yz_xxyzz[k] + 2.0 * f2t * gk_yz_xyzz[k];

                    g_xyz_xxzzz[k] = fr * g11_yz_xxzzz[k] + 2.0 * f2t * gk_yz_xzzz[k];

                    g_xyz_xyyyy[k] = fr * g11_yz_xyyyy[k] + f2t * gk_yz_yyyy[k];

                    g_xyz_xyyyz[k] = fr * g11_yz_xyyyz[k] + f2t * gk_yz_yyyz[k];

                    g_xyz_xyyzz[k] = fr * g11_yz_xyyzz[k] + f2t * gk_yz_yyzz[k];

                    g_xyz_xyzzz[k] = fr * g11_yz_xyzzz[k] + f2t * gk_yz_yzzz[k];

                    g_xyz_xzzzz[k] = fr * g11_yz_xzzzz[k] + f2t * gk_yz_zzzz[k];

                    g_xyz_yyyyy[k] = fr * g11_yz_yyyyy[k];

                    g_xyz_yyyyz[k] = fr * g11_yz_yyyyz[k];

                    g_xyz_yyyzz[k] = fr * g11_yz_yyyzz[k];

                    g_xyz_yyzzz[k] = fr * g11_yz_yyzzz[k];

                    g_xyz_yzzzz[k] = fr * g11_yz_yzzzz[k];

                    g_xyz_zzzzz[k] = fr * g11_yz_zzzzz[k];

                    g_xzz_xxxxx[k] = fr * g11_zz_xxxxx[k] + 5.0 * f2t * gk_zz_xxxx[k];

                    g_xzz_xxxxy[k] = fr * g11_zz_xxxxy[k] + 4.0 * f2t * gk_zz_xxxy[k];

                    g_xzz_xxxxz[k] = fr * g11_zz_xxxxz[k] + 4.0 * f2t * gk_zz_xxxz[k];

                    g_xzz_xxxyy[k] = fr * g11_zz_xxxyy[k] + 3.0 * f2t * gk_zz_xxyy[k];

                    g_xzz_xxxyz[k] = fr * g11_zz_xxxyz[k] + 3.0 * f2t * gk_zz_xxyz[k];

                    g_xzz_xxxzz[k] = fr * g11_zz_xxxzz[k] + 3.0 * f2t * gk_zz_xxzz[k];

                    g_xzz_xxyyy[k] = fr * g11_zz_xxyyy[k] + 2.0 * f2t * gk_zz_xyyy[k];

                    g_xzz_xxyyz[k] = fr * g11_zz_xxyyz[k] + 2.0 * f2t * gk_zz_xyyz[k];

                    g_xzz_xxyzz[k] = fr * g11_zz_xxyzz[k] + 2.0 * f2t * gk_zz_xyzz[k];

                    g_xzz_xxzzz[k] = fr * g11_zz_xxzzz[k] + 2.0 * f2t * gk_zz_xzzz[k];

                    g_xzz_xyyyy[k] = fr * g11_zz_xyyyy[k] + f2t * gk_zz_yyyy[k];

                    g_xzz_xyyyz[k] = fr * g11_zz_xyyyz[k] + f2t * gk_zz_yyyz[k];

                    g_xzz_xyyzz[k] = fr * g11_zz_xyyzz[k] + f2t * gk_zz_yyzz[k];

                    g_xzz_xyzzz[k] = fr * g11_zz_xyzzz[k] + f2t * gk_zz_yzzz[k];

                    g_xzz_xzzzz[k] = fr * g11_zz_xzzzz[k] + f2t * gk_zz_zzzz[k];

                    g_xzz_yyyyy[k] = fr * g11_zz_yyyyy[k];

                    g_xzz_yyyyz[k] = fr * g11_zz_yyyyz[k];

                    g_xzz_yyyzz[k] = fr * g11_zz_yyyzz[k];

                    g_xzz_yyzzz[k] = fr * g11_zz_yyzzz[k];

                    g_xzz_yzzzz[k] = fr * g11_zz_yzzzz[k];

                    g_xzz_zzzzz[k] = fr * g11_zz_zzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxxxx[k] = fr * g11_yy_xxxxx[k] + f2g * (2.0 * g20_y_xxxxx[k] - 2.0 * fgz * g21_y_xxxxx[k]);

                    g_yyy_xxxxy[k] = fr * g11_yy_xxxxy[k] + f2g * (2.0 * g20_y_xxxxy[k] - 2.0 * fgz * g21_y_xxxxy[k]) + f2t * gk_yy_xxxx[k];

                    g_yyy_xxxxz[k] = fr * g11_yy_xxxxz[k] + f2g * (2.0 * g20_y_xxxxz[k] - 2.0 * fgz * g21_y_xxxxz[k]);

                    g_yyy_xxxyy[k] = fr * g11_yy_xxxyy[k] + f2g * (2.0 * g20_y_xxxyy[k] - 2.0 * fgz * g21_y_xxxyy[k]) + 2.0 * f2t * gk_yy_xxxy[k];

                    g_yyy_xxxyz[k] = fr * g11_yy_xxxyz[k] + f2g * (2.0 * g20_y_xxxyz[k] - 2.0 * fgz * g21_y_xxxyz[k]) + f2t * gk_yy_xxxz[k];

                    g_yyy_xxxzz[k] = fr * g11_yy_xxxzz[k] + f2g * (2.0 * g20_y_xxxzz[k] - 2.0 * fgz * g21_y_xxxzz[k]);

                    g_yyy_xxyyy[k] = fr * g11_yy_xxyyy[k] + f2g * (2.0 * g20_y_xxyyy[k] - 2.0 * fgz * g21_y_xxyyy[k]) + 3.0 * f2t * gk_yy_xxyy[k];

                    g_yyy_xxyyz[k] = fr * g11_yy_xxyyz[k] + f2g * (2.0 * g20_y_xxyyz[k] - 2.0 * fgz * g21_y_xxyyz[k]) + 2.0 * f2t * gk_yy_xxyz[k];

                    g_yyy_xxyzz[k] = fr * g11_yy_xxyzz[k] + f2g * (2.0 * g20_y_xxyzz[k] - 2.0 * fgz * g21_y_xxyzz[k]) + f2t * gk_yy_xxzz[k];

                    g_yyy_xxzzz[k] = fr * g11_yy_xxzzz[k] + f2g * (2.0 * g20_y_xxzzz[k] - 2.0 * fgz * g21_y_xxzzz[k]);

                    g_yyy_xyyyy[k] = fr * g11_yy_xyyyy[k] + f2g * (2.0 * g20_y_xyyyy[k] - 2.0 * fgz * g21_y_xyyyy[k]) + 4.0 * f2t * gk_yy_xyyy[k];

                    g_yyy_xyyyz[k] = fr * g11_yy_xyyyz[k] + f2g * (2.0 * g20_y_xyyyz[k] - 2.0 * fgz * g21_y_xyyyz[k]) + 3.0 * f2t * gk_yy_xyyz[k];

                    g_yyy_xyyzz[k] = fr * g11_yy_xyyzz[k] + f2g * (2.0 * g20_y_xyyzz[k] - 2.0 * fgz * g21_y_xyyzz[k]) + 2.0 * f2t * gk_yy_xyzz[k];

                    g_yyy_xyzzz[k] = fr * g11_yy_xyzzz[k] + f2g * (2.0 * g20_y_xyzzz[k] - 2.0 * fgz * g21_y_xyzzz[k]) + f2t * gk_yy_xzzz[k];

                    g_yyy_xzzzz[k] = fr * g11_yy_xzzzz[k] + f2g * (2.0 * g20_y_xzzzz[k] - 2.0 * fgz * g21_y_xzzzz[k]);

                    g_yyy_yyyyy[k] = fr * g11_yy_yyyyy[k] + f2g * (2.0 * g20_y_yyyyy[k] - 2.0 * fgz * g21_y_yyyyy[k]) + 5.0 * f2t * gk_yy_yyyy[k];

                    g_yyy_yyyyz[k] = fr * g11_yy_yyyyz[k] + f2g * (2.0 * g20_y_yyyyz[k] - 2.0 * fgz * g21_y_yyyyz[k]) + 4.0 * f2t * gk_yy_yyyz[k];

                    g_yyy_yyyzz[k] = fr * g11_yy_yyyzz[k] + f2g * (2.0 * g20_y_yyyzz[k] - 2.0 * fgz * g21_y_yyyzz[k]) + 3.0 * f2t * gk_yy_yyzz[k];

                    g_yyy_yyzzz[k] = fr * g11_yy_yyzzz[k] + f2g * (2.0 * g20_y_yyzzz[k] - 2.0 * fgz * g21_y_yyzzz[k]) + 2.0 * f2t * gk_yy_yzzz[k];

                    g_yyy_yzzzz[k] = fr * g11_yy_yzzzz[k] + f2g * (2.0 * g20_y_yzzzz[k] - 2.0 * fgz * g21_y_yzzzz[k]) + f2t * gk_yy_zzzz[k];

                    g_yyy_zzzzz[k] = fr * g11_yy_zzzzz[k] + f2g * (2.0 * g20_y_zzzzz[k] - 2.0 * fgz * g21_y_zzzzz[k]);

                    g_yyz_xxxxx[k] = fr * g11_yz_xxxxx[k] + f2g * (g20_z_xxxxx[k] - fgz * g21_z_xxxxx[k]);

                    g_yyz_xxxxy[k] = fr * g11_yz_xxxxy[k] + f2g * (g20_z_xxxxy[k] - fgz * g21_z_xxxxy[k]) + f2t * gk_yz_xxxx[k];

                    g_yyz_xxxxz[k] = fr * g11_yz_xxxxz[k] + f2g * (g20_z_xxxxz[k] - fgz * g21_z_xxxxz[k]);

                    g_yyz_xxxyy[k] = fr * g11_yz_xxxyy[k] + f2g * (g20_z_xxxyy[k] - fgz * g21_z_xxxyy[k]) + 2.0 * f2t * gk_yz_xxxy[k];

                    g_yyz_xxxyz[k] = fr * g11_yz_xxxyz[k] + f2g * (g20_z_xxxyz[k] - fgz * g21_z_xxxyz[k]) + f2t * gk_yz_xxxz[k];

                    g_yyz_xxxzz[k] = fr * g11_yz_xxxzz[k] + f2g * (g20_z_xxxzz[k] - fgz * g21_z_xxxzz[k]);

                    g_yyz_xxyyy[k] = fr * g11_yz_xxyyy[k] + f2g * (g20_z_xxyyy[k] - fgz * g21_z_xxyyy[k]) + 3.0 * f2t * gk_yz_xxyy[k];

                    g_yyz_xxyyz[k] = fr * g11_yz_xxyyz[k] + f2g * (g20_z_xxyyz[k] - fgz * g21_z_xxyyz[k]) + 2.0 * f2t * gk_yz_xxyz[k];

                    g_yyz_xxyzz[k] = fr * g11_yz_xxyzz[k] + f2g * (g20_z_xxyzz[k] - fgz * g21_z_xxyzz[k]) + f2t * gk_yz_xxzz[k];

                    g_yyz_xxzzz[k] = fr * g11_yz_xxzzz[k] + f2g * (g20_z_xxzzz[k] - fgz * g21_z_xxzzz[k]);

                    g_yyz_xyyyy[k] = fr * g11_yz_xyyyy[k] + f2g * (g20_z_xyyyy[k] - fgz * g21_z_xyyyy[k]) + 4.0 * f2t * gk_yz_xyyy[k];

                    g_yyz_xyyyz[k] = fr * g11_yz_xyyyz[k] + f2g * (g20_z_xyyyz[k] - fgz * g21_z_xyyyz[k]) + 3.0 * f2t * gk_yz_xyyz[k];

                    g_yyz_xyyzz[k] = fr * g11_yz_xyyzz[k] + f2g * (g20_z_xyyzz[k] - fgz * g21_z_xyyzz[k]) + 2.0 * f2t * gk_yz_xyzz[k];

                    g_yyz_xyzzz[k] = fr * g11_yz_xyzzz[k] + f2g * (g20_z_xyzzz[k] - fgz * g21_z_xyzzz[k]) + f2t * gk_yz_xzzz[k];

                    g_yyz_xzzzz[k] = fr * g11_yz_xzzzz[k] + f2g * (g20_z_xzzzz[k] - fgz * g21_z_xzzzz[k]);

                    g_yyz_yyyyy[k] = fr * g11_yz_yyyyy[k] + f2g * (g20_z_yyyyy[k] - fgz * g21_z_yyyyy[k]) + 5.0 * f2t * gk_yz_yyyy[k];

                    g_yyz_yyyyz[k] = fr * g11_yz_yyyyz[k] + f2g * (g20_z_yyyyz[k] - fgz * g21_z_yyyyz[k]) + 4.0 * f2t * gk_yz_yyyz[k];

                    g_yyz_yyyzz[k] = fr * g11_yz_yyyzz[k] + f2g * (g20_z_yyyzz[k] - fgz * g21_z_yyyzz[k]) + 3.0 * f2t * gk_yz_yyzz[k];

                    g_yyz_yyzzz[k] = fr * g11_yz_yyzzz[k] + f2g * (g20_z_yyzzz[k] - fgz * g21_z_yyzzz[k]) + 2.0 * f2t * gk_yz_yzzz[k];

                    g_yyz_yzzzz[k] = fr * g11_yz_yzzzz[k] + f2g * (g20_z_yzzzz[k] - fgz * g21_z_yzzzz[k]) + f2t * gk_yz_zzzz[k];

                    g_yyz_zzzzz[k] = fr * g11_yz_zzzzz[k] + f2g * (g20_z_zzzzz[k] - fgz * g21_z_zzzzz[k]);

                    g_yzz_xxxxx[k] = fr * g11_zz_xxxxx[k];

                    g_yzz_xxxxy[k] = fr * g11_zz_xxxxy[k] + f2t * gk_zz_xxxx[k];

                    g_yzz_xxxxz[k] = fr * g11_zz_xxxxz[k];

                    g_yzz_xxxyy[k] = fr * g11_zz_xxxyy[k] + 2.0 * f2t * gk_zz_xxxy[k];

                    g_yzz_xxxyz[k] = fr * g11_zz_xxxyz[k] + f2t * gk_zz_xxxz[k];

                    g_yzz_xxxzz[k] = fr * g11_zz_xxxzz[k];

                    g_yzz_xxyyy[k] = fr * g11_zz_xxyyy[k] + 3.0 * f2t * gk_zz_xxyy[k];

                    g_yzz_xxyyz[k] = fr * g11_zz_xxyyz[k] + 2.0 * f2t * gk_zz_xxyz[k];

                    g_yzz_xxyzz[k] = fr * g11_zz_xxyzz[k] + f2t * gk_zz_xxzz[k];

                    g_yzz_xxzzz[k] = fr * g11_zz_xxzzz[k];

                    g_yzz_xyyyy[k] = fr * g11_zz_xyyyy[k] + 4.0 * f2t * gk_zz_xyyy[k];

                    g_yzz_xyyyz[k] = fr * g11_zz_xyyyz[k] + 3.0 * f2t * gk_zz_xyyz[k];

                    g_yzz_xyyzz[k] = fr * g11_zz_xyyzz[k] + 2.0 * f2t * gk_zz_xyzz[k];

                    g_yzz_xyzzz[k] = fr * g11_zz_xyzzz[k] + f2t * gk_zz_xzzz[k];

                    g_yzz_xzzzz[k] = fr * g11_zz_xzzzz[k];

                    g_yzz_yyyyy[k] = fr * g11_zz_yyyyy[k] + 5.0 * f2t * gk_zz_yyyy[k];

                    g_yzz_yyyyz[k] = fr * g11_zz_yyyyz[k] + 4.0 * f2t * gk_zz_yyyz[k];

                    g_yzz_yyyzz[k] = fr * g11_zz_yyyzz[k] + 3.0 * f2t * gk_zz_yyzz[k];

                    g_yzz_yyzzz[k] = fr * g11_zz_yyzzz[k] + 2.0 * f2t * gk_zz_yzzz[k];

                    g_yzz_yzzzz[k] = fr * g11_zz_yzzzz[k] + f2t * gk_zz_zzzz[k];

                    g_yzz_zzzzz[k] = fr * g11_zz_zzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxxxx[k] = fr * g11_zz_xxxxx[k] + f2g * (2.0 * g20_z_xxxxx[k] - 2.0 * fgz * g21_z_xxxxx[k]);

                    g_zzz_xxxxy[k] = fr * g11_zz_xxxxy[k] + f2g * (2.0 * g20_z_xxxxy[k] - 2.0 * fgz * g21_z_xxxxy[k]);

                    g_zzz_xxxxz[k] = fr * g11_zz_xxxxz[k] + f2g * (2.0 * g20_z_xxxxz[k] - 2.0 * fgz * g21_z_xxxxz[k]) + f2t * gk_zz_xxxx[k];

                    g_zzz_xxxyy[k] = fr * g11_zz_xxxyy[k] + f2g * (2.0 * g20_z_xxxyy[k] - 2.0 * fgz * g21_z_xxxyy[k]);

                    g_zzz_xxxyz[k] = fr * g11_zz_xxxyz[k] + f2g * (2.0 * g20_z_xxxyz[k] - 2.0 * fgz * g21_z_xxxyz[k]) + f2t * gk_zz_xxxy[k];

                    g_zzz_xxxzz[k] = fr * g11_zz_xxxzz[k] + f2g * (2.0 * g20_z_xxxzz[k] - 2.0 * fgz * g21_z_xxxzz[k]) + 2.0 * f2t * gk_zz_xxxz[k];

                    g_zzz_xxyyy[k] = fr * g11_zz_xxyyy[k] + f2g * (2.0 * g20_z_xxyyy[k] - 2.0 * fgz * g21_z_xxyyy[k]);

                    g_zzz_xxyyz[k] = fr * g11_zz_xxyyz[k] + f2g * (2.0 * g20_z_xxyyz[k] - 2.0 * fgz * g21_z_xxyyz[k]) + f2t * gk_zz_xxyy[k];

                    g_zzz_xxyzz[k] = fr * g11_zz_xxyzz[k] + f2g * (2.0 * g20_z_xxyzz[k] - 2.0 * fgz * g21_z_xxyzz[k]) + 2.0 * f2t * gk_zz_xxyz[k];

                    g_zzz_xxzzz[k] = fr * g11_zz_xxzzz[k] + f2g * (2.0 * g20_z_xxzzz[k] - 2.0 * fgz * g21_z_xxzzz[k]) + 3.0 * f2t * gk_zz_xxzz[k];

                    g_zzz_xyyyy[k] = fr * g11_zz_xyyyy[k] + f2g * (2.0 * g20_z_xyyyy[k] - 2.0 * fgz * g21_z_xyyyy[k]);

                    g_zzz_xyyyz[k] = fr * g11_zz_xyyyz[k] + f2g * (2.0 * g20_z_xyyyz[k] - 2.0 * fgz * g21_z_xyyyz[k]) + f2t * gk_zz_xyyy[k];

                    g_zzz_xyyzz[k] = fr * g11_zz_xyyzz[k] + f2g * (2.0 * g20_z_xyyzz[k] - 2.0 * fgz * g21_z_xyyzz[k]) + 2.0 * f2t * gk_zz_xyyz[k];

                    g_zzz_xyzzz[k] = fr * g11_zz_xyzzz[k] + f2g * (2.0 * g20_z_xyzzz[k] - 2.0 * fgz * g21_z_xyzzz[k]) + 3.0 * f2t * gk_zz_xyzz[k];

                    g_zzz_xzzzz[k] = fr * g11_zz_xzzzz[k] + f2g * (2.0 * g20_z_xzzzz[k] - 2.0 * fgz * g21_z_xzzzz[k]) + 4.0 * f2t * gk_zz_xzzz[k];

                    g_zzz_yyyyy[k] = fr * g11_zz_yyyyy[k] + f2g * (2.0 * g20_z_yyyyy[k] - 2.0 * fgz * g21_z_yyyyy[k]);

                    g_zzz_yyyyz[k] = fr * g11_zz_yyyyz[k] + f2g * (2.0 * g20_z_yyyyz[k] - 2.0 * fgz * g21_z_yyyyz[k]) + f2t * gk_zz_yyyy[k];

                    g_zzz_yyyzz[k] = fr * g11_zz_yyyzz[k] + f2g * (2.0 * g20_z_yyyzz[k] - 2.0 * fgz * g21_z_yyyzz[k]) + 2.0 * f2t * gk_zz_yyyz[k];

                    g_zzz_yyzzz[k] = fr * g11_zz_yyzzz[k] + f2g * (2.0 * g20_z_yyzzz[k] - 2.0 * fgz * g21_z_yyzzz[k]) + 3.0 * f2t * gk_zz_yyzz[k];

                    g_zzz_yzzzz[k] = fr * g11_zz_yzzzz[k] + f2g * (2.0 * g20_z_yzzzz[k] - 2.0 * fgz * g21_z_yzzzz[k]) + 4.0 * f2t * gk_zz_yzzz[k];

                    g_zzz_zzzzz[k] = fr * g11_zz_zzzzz[k] + f2g * (2.0 * g20_z_zzzzz[k] - 2.0 * fgz * g21_z_zzzzz[k]) + 5.0 * f2t * gk_zz_zzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSH(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 5);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 5, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 5, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 5, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 5, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 4, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SG)^(m+1) integrals

                auto gk_xxx_xxxx = primBuffer.data(gkoff + 150 * idx);

                auto gk_xxx_xxxy = primBuffer.data(gkoff + 150 * idx + 1);

                auto gk_xxx_xxxz = primBuffer.data(gkoff + 150 * idx + 2);

                auto gk_xxx_xxyy = primBuffer.data(gkoff + 150 * idx + 3);

                auto gk_xxx_xxyz = primBuffer.data(gkoff + 150 * idx + 4);

                auto gk_xxx_xxzz = primBuffer.data(gkoff + 150 * idx + 5);

                auto gk_xxx_xyyy = primBuffer.data(gkoff + 150 * idx + 6);

                auto gk_xxx_xyyz = primBuffer.data(gkoff + 150 * idx + 7);

                auto gk_xxx_xyzz = primBuffer.data(gkoff + 150 * idx + 8);

                auto gk_xxx_xzzz = primBuffer.data(gkoff + 150 * idx + 9);

                auto gk_xxx_yyyy = primBuffer.data(gkoff + 150 * idx + 10);

                auto gk_xxx_yyyz = primBuffer.data(gkoff + 150 * idx + 11);

                auto gk_xxx_yyzz = primBuffer.data(gkoff + 150 * idx + 12);

                auto gk_xxx_yzzz = primBuffer.data(gkoff + 150 * idx + 13);

                auto gk_xxx_zzzz = primBuffer.data(gkoff + 150 * idx + 14);

                auto gk_xxy_xxxx = primBuffer.data(gkoff + 150 * idx + 15);

                auto gk_xxy_xxxy = primBuffer.data(gkoff + 150 * idx + 16);

                auto gk_xxy_xxxz = primBuffer.data(gkoff + 150 * idx + 17);

                auto gk_xxy_xxyy = primBuffer.data(gkoff + 150 * idx + 18);

                auto gk_xxy_xxyz = primBuffer.data(gkoff + 150 * idx + 19);

                auto gk_xxy_xxzz = primBuffer.data(gkoff + 150 * idx + 20);

                auto gk_xxy_xyyy = primBuffer.data(gkoff + 150 * idx + 21);

                auto gk_xxy_xyyz = primBuffer.data(gkoff + 150 * idx + 22);

                auto gk_xxy_xyzz = primBuffer.data(gkoff + 150 * idx + 23);

                auto gk_xxy_xzzz = primBuffer.data(gkoff + 150 * idx + 24);

                auto gk_xxy_yyyy = primBuffer.data(gkoff + 150 * idx + 25);

                auto gk_xxy_yyyz = primBuffer.data(gkoff + 150 * idx + 26);

                auto gk_xxy_yyzz = primBuffer.data(gkoff + 150 * idx + 27);

                auto gk_xxy_yzzz = primBuffer.data(gkoff + 150 * idx + 28);

                auto gk_xxy_zzzz = primBuffer.data(gkoff + 150 * idx + 29);

                auto gk_xxz_xxxx = primBuffer.data(gkoff + 150 * idx + 30);

                auto gk_xxz_xxxy = primBuffer.data(gkoff + 150 * idx + 31);

                auto gk_xxz_xxxz = primBuffer.data(gkoff + 150 * idx + 32);

                auto gk_xxz_xxyy = primBuffer.data(gkoff + 150 * idx + 33);

                auto gk_xxz_xxyz = primBuffer.data(gkoff + 150 * idx + 34);

                auto gk_xxz_xxzz = primBuffer.data(gkoff + 150 * idx + 35);

                auto gk_xxz_xyyy = primBuffer.data(gkoff + 150 * idx + 36);

                auto gk_xxz_xyyz = primBuffer.data(gkoff + 150 * idx + 37);

                auto gk_xxz_xyzz = primBuffer.data(gkoff + 150 * idx + 38);

                auto gk_xxz_xzzz = primBuffer.data(gkoff + 150 * idx + 39);

                auto gk_xxz_yyyy = primBuffer.data(gkoff + 150 * idx + 40);

                auto gk_xxz_yyyz = primBuffer.data(gkoff + 150 * idx + 41);

                auto gk_xxz_yyzz = primBuffer.data(gkoff + 150 * idx + 42);

                auto gk_xxz_yzzz = primBuffer.data(gkoff + 150 * idx + 43);

                auto gk_xxz_zzzz = primBuffer.data(gkoff + 150 * idx + 44);

                auto gk_xyy_xxxx = primBuffer.data(gkoff + 150 * idx + 45);

                auto gk_xyy_xxxy = primBuffer.data(gkoff + 150 * idx + 46);

                auto gk_xyy_xxxz = primBuffer.data(gkoff + 150 * idx + 47);

                auto gk_xyy_xxyy = primBuffer.data(gkoff + 150 * idx + 48);

                auto gk_xyy_xxyz = primBuffer.data(gkoff + 150 * idx + 49);

                auto gk_xyy_xxzz = primBuffer.data(gkoff + 150 * idx + 50);

                auto gk_xyy_xyyy = primBuffer.data(gkoff + 150 * idx + 51);

                auto gk_xyy_xyyz = primBuffer.data(gkoff + 150 * idx + 52);

                auto gk_xyy_xyzz = primBuffer.data(gkoff + 150 * idx + 53);

                auto gk_xyy_xzzz = primBuffer.data(gkoff + 150 * idx + 54);

                auto gk_xyy_yyyy = primBuffer.data(gkoff + 150 * idx + 55);

                auto gk_xyy_yyyz = primBuffer.data(gkoff + 150 * idx + 56);

                auto gk_xyy_yyzz = primBuffer.data(gkoff + 150 * idx + 57);

                auto gk_xyy_yzzz = primBuffer.data(gkoff + 150 * idx + 58);

                auto gk_xyy_zzzz = primBuffer.data(gkoff + 150 * idx + 59);

                auto gk_xyz_xxxx = primBuffer.data(gkoff + 150 * idx + 60);

                auto gk_xyz_xxxy = primBuffer.data(gkoff + 150 * idx + 61);

                auto gk_xyz_xxxz = primBuffer.data(gkoff + 150 * idx + 62);

                auto gk_xyz_xxyy = primBuffer.data(gkoff + 150 * idx + 63);

                auto gk_xyz_xxyz = primBuffer.data(gkoff + 150 * idx + 64);

                auto gk_xyz_xxzz = primBuffer.data(gkoff + 150 * idx + 65);

                auto gk_xyz_xyyy = primBuffer.data(gkoff + 150 * idx + 66);

                auto gk_xyz_xyyz = primBuffer.data(gkoff + 150 * idx + 67);

                auto gk_xyz_xyzz = primBuffer.data(gkoff + 150 * idx + 68);

                auto gk_xyz_xzzz = primBuffer.data(gkoff + 150 * idx + 69);

                auto gk_xyz_yyyy = primBuffer.data(gkoff + 150 * idx + 70);

                auto gk_xyz_yyyz = primBuffer.data(gkoff + 150 * idx + 71);

                auto gk_xyz_yyzz = primBuffer.data(gkoff + 150 * idx + 72);

                auto gk_xyz_yzzz = primBuffer.data(gkoff + 150 * idx + 73);

                auto gk_xyz_zzzz = primBuffer.data(gkoff + 150 * idx + 74);

                auto gk_xzz_xxxx = primBuffer.data(gkoff + 150 * idx + 75);

                auto gk_xzz_xxxy = primBuffer.data(gkoff + 150 * idx + 76);

                auto gk_xzz_xxxz = primBuffer.data(gkoff + 150 * idx + 77);

                auto gk_xzz_xxyy = primBuffer.data(gkoff + 150 * idx + 78);

                auto gk_xzz_xxyz = primBuffer.data(gkoff + 150 * idx + 79);

                auto gk_xzz_xxzz = primBuffer.data(gkoff + 150 * idx + 80);

                auto gk_xzz_xyyy = primBuffer.data(gkoff + 150 * idx + 81);

                auto gk_xzz_xyyz = primBuffer.data(gkoff + 150 * idx + 82);

                auto gk_xzz_xyzz = primBuffer.data(gkoff + 150 * idx + 83);

                auto gk_xzz_xzzz = primBuffer.data(gkoff + 150 * idx + 84);

                auto gk_xzz_yyyy = primBuffer.data(gkoff + 150 * idx + 85);

                auto gk_xzz_yyyz = primBuffer.data(gkoff + 150 * idx + 86);

                auto gk_xzz_yyzz = primBuffer.data(gkoff + 150 * idx + 87);

                auto gk_xzz_yzzz = primBuffer.data(gkoff + 150 * idx + 88);

                auto gk_xzz_zzzz = primBuffer.data(gkoff + 150 * idx + 89);

                auto gk_yyy_xxxx = primBuffer.data(gkoff + 150 * idx + 90);

                auto gk_yyy_xxxy = primBuffer.data(gkoff + 150 * idx + 91);

                auto gk_yyy_xxxz = primBuffer.data(gkoff + 150 * idx + 92);

                auto gk_yyy_xxyy = primBuffer.data(gkoff + 150 * idx + 93);

                auto gk_yyy_xxyz = primBuffer.data(gkoff + 150 * idx + 94);

                auto gk_yyy_xxzz = primBuffer.data(gkoff + 150 * idx + 95);

                auto gk_yyy_xyyy = primBuffer.data(gkoff + 150 * idx + 96);

                auto gk_yyy_xyyz = primBuffer.data(gkoff + 150 * idx + 97);

                auto gk_yyy_xyzz = primBuffer.data(gkoff + 150 * idx + 98);

                auto gk_yyy_xzzz = primBuffer.data(gkoff + 150 * idx + 99);

                auto gk_yyy_yyyy = primBuffer.data(gkoff + 150 * idx + 100);

                auto gk_yyy_yyyz = primBuffer.data(gkoff + 150 * idx + 101);

                auto gk_yyy_yyzz = primBuffer.data(gkoff + 150 * idx + 102);

                auto gk_yyy_yzzz = primBuffer.data(gkoff + 150 * idx + 103);

                auto gk_yyy_zzzz = primBuffer.data(gkoff + 150 * idx + 104);

                auto gk_yyz_xxxx = primBuffer.data(gkoff + 150 * idx + 105);

                auto gk_yyz_xxxy = primBuffer.data(gkoff + 150 * idx + 106);

                auto gk_yyz_xxxz = primBuffer.data(gkoff + 150 * idx + 107);

                auto gk_yyz_xxyy = primBuffer.data(gkoff + 150 * idx + 108);

                auto gk_yyz_xxyz = primBuffer.data(gkoff + 150 * idx + 109);

                auto gk_yyz_xxzz = primBuffer.data(gkoff + 150 * idx + 110);

                auto gk_yyz_xyyy = primBuffer.data(gkoff + 150 * idx + 111);

                auto gk_yyz_xyyz = primBuffer.data(gkoff + 150 * idx + 112);

                auto gk_yyz_xyzz = primBuffer.data(gkoff + 150 * idx + 113);

                auto gk_yyz_xzzz = primBuffer.data(gkoff + 150 * idx + 114);

                auto gk_yyz_yyyy = primBuffer.data(gkoff + 150 * idx + 115);

                auto gk_yyz_yyyz = primBuffer.data(gkoff + 150 * idx + 116);

                auto gk_yyz_yyzz = primBuffer.data(gkoff + 150 * idx + 117);

                auto gk_yyz_yzzz = primBuffer.data(gkoff + 150 * idx + 118);

                auto gk_yyz_zzzz = primBuffer.data(gkoff + 150 * idx + 119);

                auto gk_yzz_xxxx = primBuffer.data(gkoff + 150 * idx + 120);

                auto gk_yzz_xxxy = primBuffer.data(gkoff + 150 * idx + 121);

                auto gk_yzz_xxxz = primBuffer.data(gkoff + 150 * idx + 122);

                auto gk_yzz_xxyy = primBuffer.data(gkoff + 150 * idx + 123);

                auto gk_yzz_xxyz = primBuffer.data(gkoff + 150 * idx + 124);

                auto gk_yzz_xxzz = primBuffer.data(gkoff + 150 * idx + 125);

                auto gk_yzz_xyyy = primBuffer.data(gkoff + 150 * idx + 126);

                auto gk_yzz_xyyz = primBuffer.data(gkoff + 150 * idx + 127);

                auto gk_yzz_xyzz = primBuffer.data(gkoff + 150 * idx + 128);

                auto gk_yzz_xzzz = primBuffer.data(gkoff + 150 * idx + 129);

                auto gk_yzz_yyyy = primBuffer.data(gkoff + 150 * idx + 130);

                auto gk_yzz_yyyz = primBuffer.data(gkoff + 150 * idx + 131);

                auto gk_yzz_yyzz = primBuffer.data(gkoff + 150 * idx + 132);

                auto gk_yzz_yzzz = primBuffer.data(gkoff + 150 * idx + 133);

                auto gk_yzz_zzzz = primBuffer.data(gkoff + 150 * idx + 134);

                auto gk_zzz_xxxx = primBuffer.data(gkoff + 150 * idx + 135);

                auto gk_zzz_xxxy = primBuffer.data(gkoff + 150 * idx + 136);

                auto gk_zzz_xxxz = primBuffer.data(gkoff + 150 * idx + 137);

                auto gk_zzz_xxyy = primBuffer.data(gkoff + 150 * idx + 138);

                auto gk_zzz_xxyz = primBuffer.data(gkoff + 150 * idx + 139);

                auto gk_zzz_xxzz = primBuffer.data(gkoff + 150 * idx + 140);

                auto gk_zzz_xyyy = primBuffer.data(gkoff + 150 * idx + 141);

                auto gk_zzz_xyyz = primBuffer.data(gkoff + 150 * idx + 142);

                auto gk_zzz_xyzz = primBuffer.data(gkoff + 150 * idx + 143);

                auto gk_zzz_xzzz = primBuffer.data(gkoff + 150 * idx + 144);

                auto gk_zzz_yyyy = primBuffer.data(gkoff + 150 * idx + 145);

                auto gk_zzz_yyyz = primBuffer.data(gkoff + 150 * idx + 146);

                auto gk_zzz_yyzz = primBuffer.data(gkoff + 150 * idx + 147);

                auto gk_zzz_yzzz = primBuffer.data(gkoff + 150 * idx + 148);

                auto gk_zzz_zzzz = primBuffer.data(gkoff + 150 * idx + 149);

                // set up pointers to (D|g(r,r')|SH)^(m) integrals

                auto g20_xx_xxxxx = primBuffer.data(g20off + 126 * idx);

                auto g20_xx_xxxxy = primBuffer.data(g20off + 126 * idx + 1);

                auto g20_xx_xxxxz = primBuffer.data(g20off + 126 * idx + 2);

                auto g20_xx_xxxyy = primBuffer.data(g20off + 126 * idx + 3);

                auto g20_xx_xxxyz = primBuffer.data(g20off + 126 * idx + 4);

                auto g20_xx_xxxzz = primBuffer.data(g20off + 126 * idx + 5);

                auto g20_xx_xxyyy = primBuffer.data(g20off + 126 * idx + 6);

                auto g20_xx_xxyyz = primBuffer.data(g20off + 126 * idx + 7);

                auto g20_xx_xxyzz = primBuffer.data(g20off + 126 * idx + 8);

                auto g20_xx_xxzzz = primBuffer.data(g20off + 126 * idx + 9);

                auto g20_xx_xyyyy = primBuffer.data(g20off + 126 * idx + 10);

                auto g20_xx_xyyyz = primBuffer.data(g20off + 126 * idx + 11);

                auto g20_xx_xyyzz = primBuffer.data(g20off + 126 * idx + 12);

                auto g20_xx_xyzzz = primBuffer.data(g20off + 126 * idx + 13);

                auto g20_xx_xzzzz = primBuffer.data(g20off + 126 * idx + 14);

                auto g20_xx_yyyyy = primBuffer.data(g20off + 126 * idx + 15);

                auto g20_xx_yyyyz = primBuffer.data(g20off + 126 * idx + 16);

                auto g20_xx_yyyzz = primBuffer.data(g20off + 126 * idx + 17);

                auto g20_xx_yyzzz = primBuffer.data(g20off + 126 * idx + 18);

                auto g20_xx_yzzzz = primBuffer.data(g20off + 126 * idx + 19);

                auto g20_xx_zzzzz = primBuffer.data(g20off + 126 * idx + 20);

                auto g20_xy_xxxxx = primBuffer.data(g20off + 126 * idx + 21);

                auto g20_xy_xxxxy = primBuffer.data(g20off + 126 * idx + 22);

                auto g20_xy_xxxxz = primBuffer.data(g20off + 126 * idx + 23);

                auto g20_xy_xxxyy = primBuffer.data(g20off + 126 * idx + 24);

                auto g20_xy_xxxyz = primBuffer.data(g20off + 126 * idx + 25);

                auto g20_xy_xxxzz = primBuffer.data(g20off + 126 * idx + 26);

                auto g20_xy_xxyyy = primBuffer.data(g20off + 126 * idx + 27);

                auto g20_xy_xxyyz = primBuffer.data(g20off + 126 * idx + 28);

                auto g20_xy_xxyzz = primBuffer.data(g20off + 126 * idx + 29);

                auto g20_xy_xxzzz = primBuffer.data(g20off + 126 * idx + 30);

                auto g20_xy_xyyyy = primBuffer.data(g20off + 126 * idx + 31);

                auto g20_xy_xyyyz = primBuffer.data(g20off + 126 * idx + 32);

                auto g20_xy_xyyzz = primBuffer.data(g20off + 126 * idx + 33);

                auto g20_xy_xyzzz = primBuffer.data(g20off + 126 * idx + 34);

                auto g20_xy_xzzzz = primBuffer.data(g20off + 126 * idx + 35);

                auto g20_xy_yyyyy = primBuffer.data(g20off + 126 * idx + 36);

                auto g20_xy_yyyyz = primBuffer.data(g20off + 126 * idx + 37);

                auto g20_xy_yyyzz = primBuffer.data(g20off + 126 * idx + 38);

                auto g20_xy_yyzzz = primBuffer.data(g20off + 126 * idx + 39);

                auto g20_xy_yzzzz = primBuffer.data(g20off + 126 * idx + 40);

                auto g20_xy_zzzzz = primBuffer.data(g20off + 126 * idx + 41);

                auto g20_xz_xxxxx = primBuffer.data(g20off + 126 * idx + 42);

                auto g20_xz_xxxxy = primBuffer.data(g20off + 126 * idx + 43);

                auto g20_xz_xxxxz = primBuffer.data(g20off + 126 * idx + 44);

                auto g20_xz_xxxyy = primBuffer.data(g20off + 126 * idx + 45);

                auto g20_xz_xxxyz = primBuffer.data(g20off + 126 * idx + 46);

                auto g20_xz_xxxzz = primBuffer.data(g20off + 126 * idx + 47);

                auto g20_xz_xxyyy = primBuffer.data(g20off + 126 * idx + 48);

                auto g20_xz_xxyyz = primBuffer.data(g20off + 126 * idx + 49);

                auto g20_xz_xxyzz = primBuffer.data(g20off + 126 * idx + 50);

                auto g20_xz_xxzzz = primBuffer.data(g20off + 126 * idx + 51);

                auto g20_xz_xyyyy = primBuffer.data(g20off + 126 * idx + 52);

                auto g20_xz_xyyyz = primBuffer.data(g20off + 126 * idx + 53);

                auto g20_xz_xyyzz = primBuffer.data(g20off + 126 * idx + 54);

                auto g20_xz_xyzzz = primBuffer.data(g20off + 126 * idx + 55);

                auto g20_xz_xzzzz = primBuffer.data(g20off + 126 * idx + 56);

                auto g20_xz_yyyyy = primBuffer.data(g20off + 126 * idx + 57);

                auto g20_xz_yyyyz = primBuffer.data(g20off + 126 * idx + 58);

                auto g20_xz_yyyzz = primBuffer.data(g20off + 126 * idx + 59);

                auto g20_xz_yyzzz = primBuffer.data(g20off + 126 * idx + 60);

                auto g20_xz_yzzzz = primBuffer.data(g20off + 126 * idx + 61);

                auto g20_xz_zzzzz = primBuffer.data(g20off + 126 * idx + 62);

                auto g20_yy_xxxxx = primBuffer.data(g20off + 126 * idx + 63);

                auto g20_yy_xxxxy = primBuffer.data(g20off + 126 * idx + 64);

                auto g20_yy_xxxxz = primBuffer.data(g20off + 126 * idx + 65);

                auto g20_yy_xxxyy = primBuffer.data(g20off + 126 * idx + 66);

                auto g20_yy_xxxyz = primBuffer.data(g20off + 126 * idx + 67);

                auto g20_yy_xxxzz = primBuffer.data(g20off + 126 * idx + 68);

                auto g20_yy_xxyyy = primBuffer.data(g20off + 126 * idx + 69);

                auto g20_yy_xxyyz = primBuffer.data(g20off + 126 * idx + 70);

                auto g20_yy_xxyzz = primBuffer.data(g20off + 126 * idx + 71);

                auto g20_yy_xxzzz = primBuffer.data(g20off + 126 * idx + 72);

                auto g20_yy_xyyyy = primBuffer.data(g20off + 126 * idx + 73);

                auto g20_yy_xyyyz = primBuffer.data(g20off + 126 * idx + 74);

                auto g20_yy_xyyzz = primBuffer.data(g20off + 126 * idx + 75);

                auto g20_yy_xyzzz = primBuffer.data(g20off + 126 * idx + 76);

                auto g20_yy_xzzzz = primBuffer.data(g20off + 126 * idx + 77);

                auto g20_yy_yyyyy = primBuffer.data(g20off + 126 * idx + 78);

                auto g20_yy_yyyyz = primBuffer.data(g20off + 126 * idx + 79);

                auto g20_yy_yyyzz = primBuffer.data(g20off + 126 * idx + 80);

                auto g20_yy_yyzzz = primBuffer.data(g20off + 126 * idx + 81);

                auto g20_yy_yzzzz = primBuffer.data(g20off + 126 * idx + 82);

                auto g20_yy_zzzzz = primBuffer.data(g20off + 126 * idx + 83);

                auto g20_yz_xxxxx = primBuffer.data(g20off + 126 * idx + 84);

                auto g20_yz_xxxxy = primBuffer.data(g20off + 126 * idx + 85);

                auto g20_yz_xxxxz = primBuffer.data(g20off + 126 * idx + 86);

                auto g20_yz_xxxyy = primBuffer.data(g20off + 126 * idx + 87);

                auto g20_yz_xxxyz = primBuffer.data(g20off + 126 * idx + 88);

                auto g20_yz_xxxzz = primBuffer.data(g20off + 126 * idx + 89);

                auto g20_yz_xxyyy = primBuffer.data(g20off + 126 * idx + 90);

                auto g20_yz_xxyyz = primBuffer.data(g20off + 126 * idx + 91);

                auto g20_yz_xxyzz = primBuffer.data(g20off + 126 * idx + 92);

                auto g20_yz_xxzzz = primBuffer.data(g20off + 126 * idx + 93);

                auto g20_yz_xyyyy = primBuffer.data(g20off + 126 * idx + 94);

                auto g20_yz_xyyyz = primBuffer.data(g20off + 126 * idx + 95);

                auto g20_yz_xyyzz = primBuffer.data(g20off + 126 * idx + 96);

                auto g20_yz_xyzzz = primBuffer.data(g20off + 126 * idx + 97);

                auto g20_yz_xzzzz = primBuffer.data(g20off + 126 * idx + 98);

                auto g20_yz_yyyyy = primBuffer.data(g20off + 126 * idx + 99);

                auto g20_yz_yyyyz = primBuffer.data(g20off + 126 * idx + 100);

                auto g20_yz_yyyzz = primBuffer.data(g20off + 126 * idx + 101);

                auto g20_yz_yyzzz = primBuffer.data(g20off + 126 * idx + 102);

                auto g20_yz_yzzzz = primBuffer.data(g20off + 126 * idx + 103);

                auto g20_yz_zzzzz = primBuffer.data(g20off + 126 * idx + 104);

                auto g20_zz_xxxxx = primBuffer.data(g20off + 126 * idx + 105);

                auto g20_zz_xxxxy = primBuffer.data(g20off + 126 * idx + 106);

                auto g20_zz_xxxxz = primBuffer.data(g20off + 126 * idx + 107);

                auto g20_zz_xxxyy = primBuffer.data(g20off + 126 * idx + 108);

                auto g20_zz_xxxyz = primBuffer.data(g20off + 126 * idx + 109);

                auto g20_zz_xxxzz = primBuffer.data(g20off + 126 * idx + 110);

                auto g20_zz_xxyyy = primBuffer.data(g20off + 126 * idx + 111);

                auto g20_zz_xxyyz = primBuffer.data(g20off + 126 * idx + 112);

                auto g20_zz_xxyzz = primBuffer.data(g20off + 126 * idx + 113);

                auto g20_zz_xxzzz = primBuffer.data(g20off + 126 * idx + 114);

                auto g20_zz_xyyyy = primBuffer.data(g20off + 126 * idx + 115);

                auto g20_zz_xyyyz = primBuffer.data(g20off + 126 * idx + 116);

                auto g20_zz_xyyzz = primBuffer.data(g20off + 126 * idx + 117);

                auto g20_zz_xyzzz = primBuffer.data(g20off + 126 * idx + 118);

                auto g20_zz_xzzzz = primBuffer.data(g20off + 126 * idx + 119);

                auto g20_zz_yyyyy = primBuffer.data(g20off + 126 * idx + 120);

                auto g20_zz_yyyyz = primBuffer.data(g20off + 126 * idx + 121);

                auto g20_zz_yyyzz = primBuffer.data(g20off + 126 * idx + 122);

                auto g20_zz_yyzzz = primBuffer.data(g20off + 126 * idx + 123);

                auto g20_zz_yzzzz = primBuffer.data(g20off + 126 * idx + 124);

                auto g20_zz_zzzzz = primBuffer.data(g20off + 126 * idx + 125);

                // set up pointers to (D|g(r,r')|SH)^(m+1) integrals

                auto g21_xx_xxxxx = primBuffer.data(g21off + 126 * idx);

                auto g21_xx_xxxxy = primBuffer.data(g21off + 126 * idx + 1);

                auto g21_xx_xxxxz = primBuffer.data(g21off + 126 * idx + 2);

                auto g21_xx_xxxyy = primBuffer.data(g21off + 126 * idx + 3);

                auto g21_xx_xxxyz = primBuffer.data(g21off + 126 * idx + 4);

                auto g21_xx_xxxzz = primBuffer.data(g21off + 126 * idx + 5);

                auto g21_xx_xxyyy = primBuffer.data(g21off + 126 * idx + 6);

                auto g21_xx_xxyyz = primBuffer.data(g21off + 126 * idx + 7);

                auto g21_xx_xxyzz = primBuffer.data(g21off + 126 * idx + 8);

                auto g21_xx_xxzzz = primBuffer.data(g21off + 126 * idx + 9);

                auto g21_xx_xyyyy = primBuffer.data(g21off + 126 * idx + 10);

                auto g21_xx_xyyyz = primBuffer.data(g21off + 126 * idx + 11);

                auto g21_xx_xyyzz = primBuffer.data(g21off + 126 * idx + 12);

                auto g21_xx_xyzzz = primBuffer.data(g21off + 126 * idx + 13);

                auto g21_xx_xzzzz = primBuffer.data(g21off + 126 * idx + 14);

                auto g21_xx_yyyyy = primBuffer.data(g21off + 126 * idx + 15);

                auto g21_xx_yyyyz = primBuffer.data(g21off + 126 * idx + 16);

                auto g21_xx_yyyzz = primBuffer.data(g21off + 126 * idx + 17);

                auto g21_xx_yyzzz = primBuffer.data(g21off + 126 * idx + 18);

                auto g21_xx_yzzzz = primBuffer.data(g21off + 126 * idx + 19);

                auto g21_xx_zzzzz = primBuffer.data(g21off + 126 * idx + 20);

                auto g21_xy_xxxxx = primBuffer.data(g21off + 126 * idx + 21);

                auto g21_xy_xxxxy = primBuffer.data(g21off + 126 * idx + 22);

                auto g21_xy_xxxxz = primBuffer.data(g21off + 126 * idx + 23);

                auto g21_xy_xxxyy = primBuffer.data(g21off + 126 * idx + 24);

                auto g21_xy_xxxyz = primBuffer.data(g21off + 126 * idx + 25);

                auto g21_xy_xxxzz = primBuffer.data(g21off + 126 * idx + 26);

                auto g21_xy_xxyyy = primBuffer.data(g21off + 126 * idx + 27);

                auto g21_xy_xxyyz = primBuffer.data(g21off + 126 * idx + 28);

                auto g21_xy_xxyzz = primBuffer.data(g21off + 126 * idx + 29);

                auto g21_xy_xxzzz = primBuffer.data(g21off + 126 * idx + 30);

                auto g21_xy_xyyyy = primBuffer.data(g21off + 126 * idx + 31);

                auto g21_xy_xyyyz = primBuffer.data(g21off + 126 * idx + 32);

                auto g21_xy_xyyzz = primBuffer.data(g21off + 126 * idx + 33);

                auto g21_xy_xyzzz = primBuffer.data(g21off + 126 * idx + 34);

                auto g21_xy_xzzzz = primBuffer.data(g21off + 126 * idx + 35);

                auto g21_xy_yyyyy = primBuffer.data(g21off + 126 * idx + 36);

                auto g21_xy_yyyyz = primBuffer.data(g21off + 126 * idx + 37);

                auto g21_xy_yyyzz = primBuffer.data(g21off + 126 * idx + 38);

                auto g21_xy_yyzzz = primBuffer.data(g21off + 126 * idx + 39);

                auto g21_xy_yzzzz = primBuffer.data(g21off + 126 * idx + 40);

                auto g21_xy_zzzzz = primBuffer.data(g21off + 126 * idx + 41);

                auto g21_xz_xxxxx = primBuffer.data(g21off + 126 * idx + 42);

                auto g21_xz_xxxxy = primBuffer.data(g21off + 126 * idx + 43);

                auto g21_xz_xxxxz = primBuffer.data(g21off + 126 * idx + 44);

                auto g21_xz_xxxyy = primBuffer.data(g21off + 126 * idx + 45);

                auto g21_xz_xxxyz = primBuffer.data(g21off + 126 * idx + 46);

                auto g21_xz_xxxzz = primBuffer.data(g21off + 126 * idx + 47);

                auto g21_xz_xxyyy = primBuffer.data(g21off + 126 * idx + 48);

                auto g21_xz_xxyyz = primBuffer.data(g21off + 126 * idx + 49);

                auto g21_xz_xxyzz = primBuffer.data(g21off + 126 * idx + 50);

                auto g21_xz_xxzzz = primBuffer.data(g21off + 126 * idx + 51);

                auto g21_xz_xyyyy = primBuffer.data(g21off + 126 * idx + 52);

                auto g21_xz_xyyyz = primBuffer.data(g21off + 126 * idx + 53);

                auto g21_xz_xyyzz = primBuffer.data(g21off + 126 * idx + 54);

                auto g21_xz_xyzzz = primBuffer.data(g21off + 126 * idx + 55);

                auto g21_xz_xzzzz = primBuffer.data(g21off + 126 * idx + 56);

                auto g21_xz_yyyyy = primBuffer.data(g21off + 126 * idx + 57);

                auto g21_xz_yyyyz = primBuffer.data(g21off + 126 * idx + 58);

                auto g21_xz_yyyzz = primBuffer.data(g21off + 126 * idx + 59);

                auto g21_xz_yyzzz = primBuffer.data(g21off + 126 * idx + 60);

                auto g21_xz_yzzzz = primBuffer.data(g21off + 126 * idx + 61);

                auto g21_xz_zzzzz = primBuffer.data(g21off + 126 * idx + 62);

                auto g21_yy_xxxxx = primBuffer.data(g21off + 126 * idx + 63);

                auto g21_yy_xxxxy = primBuffer.data(g21off + 126 * idx + 64);

                auto g21_yy_xxxxz = primBuffer.data(g21off + 126 * idx + 65);

                auto g21_yy_xxxyy = primBuffer.data(g21off + 126 * idx + 66);

                auto g21_yy_xxxyz = primBuffer.data(g21off + 126 * idx + 67);

                auto g21_yy_xxxzz = primBuffer.data(g21off + 126 * idx + 68);

                auto g21_yy_xxyyy = primBuffer.data(g21off + 126 * idx + 69);

                auto g21_yy_xxyyz = primBuffer.data(g21off + 126 * idx + 70);

                auto g21_yy_xxyzz = primBuffer.data(g21off + 126 * idx + 71);

                auto g21_yy_xxzzz = primBuffer.data(g21off + 126 * idx + 72);

                auto g21_yy_xyyyy = primBuffer.data(g21off + 126 * idx + 73);

                auto g21_yy_xyyyz = primBuffer.data(g21off + 126 * idx + 74);

                auto g21_yy_xyyzz = primBuffer.data(g21off + 126 * idx + 75);

                auto g21_yy_xyzzz = primBuffer.data(g21off + 126 * idx + 76);

                auto g21_yy_xzzzz = primBuffer.data(g21off + 126 * idx + 77);

                auto g21_yy_yyyyy = primBuffer.data(g21off + 126 * idx + 78);

                auto g21_yy_yyyyz = primBuffer.data(g21off + 126 * idx + 79);

                auto g21_yy_yyyzz = primBuffer.data(g21off + 126 * idx + 80);

                auto g21_yy_yyzzz = primBuffer.data(g21off + 126 * idx + 81);

                auto g21_yy_yzzzz = primBuffer.data(g21off + 126 * idx + 82);

                auto g21_yy_zzzzz = primBuffer.data(g21off + 126 * idx + 83);

                auto g21_yz_xxxxx = primBuffer.data(g21off + 126 * idx + 84);

                auto g21_yz_xxxxy = primBuffer.data(g21off + 126 * idx + 85);

                auto g21_yz_xxxxz = primBuffer.data(g21off + 126 * idx + 86);

                auto g21_yz_xxxyy = primBuffer.data(g21off + 126 * idx + 87);

                auto g21_yz_xxxyz = primBuffer.data(g21off + 126 * idx + 88);

                auto g21_yz_xxxzz = primBuffer.data(g21off + 126 * idx + 89);

                auto g21_yz_xxyyy = primBuffer.data(g21off + 126 * idx + 90);

                auto g21_yz_xxyyz = primBuffer.data(g21off + 126 * idx + 91);

                auto g21_yz_xxyzz = primBuffer.data(g21off + 126 * idx + 92);

                auto g21_yz_xxzzz = primBuffer.data(g21off + 126 * idx + 93);

                auto g21_yz_xyyyy = primBuffer.data(g21off + 126 * idx + 94);

                auto g21_yz_xyyyz = primBuffer.data(g21off + 126 * idx + 95);

                auto g21_yz_xyyzz = primBuffer.data(g21off + 126 * idx + 96);

                auto g21_yz_xyzzz = primBuffer.data(g21off + 126 * idx + 97);

                auto g21_yz_xzzzz = primBuffer.data(g21off + 126 * idx + 98);

                auto g21_yz_yyyyy = primBuffer.data(g21off + 126 * idx + 99);

                auto g21_yz_yyyyz = primBuffer.data(g21off + 126 * idx + 100);

                auto g21_yz_yyyzz = primBuffer.data(g21off + 126 * idx + 101);

                auto g21_yz_yyzzz = primBuffer.data(g21off + 126 * idx + 102);

                auto g21_yz_yzzzz = primBuffer.data(g21off + 126 * idx + 103);

                auto g21_yz_zzzzz = primBuffer.data(g21off + 126 * idx + 104);

                auto g21_zz_xxxxx = primBuffer.data(g21off + 126 * idx + 105);

                auto g21_zz_xxxxy = primBuffer.data(g21off + 126 * idx + 106);

                auto g21_zz_xxxxz = primBuffer.data(g21off + 126 * idx + 107);

                auto g21_zz_xxxyy = primBuffer.data(g21off + 126 * idx + 108);

                auto g21_zz_xxxyz = primBuffer.data(g21off + 126 * idx + 109);

                auto g21_zz_xxxzz = primBuffer.data(g21off + 126 * idx + 110);

                auto g21_zz_xxyyy = primBuffer.data(g21off + 126 * idx + 111);

                auto g21_zz_xxyyz = primBuffer.data(g21off + 126 * idx + 112);

                auto g21_zz_xxyzz = primBuffer.data(g21off + 126 * idx + 113);

                auto g21_zz_xxzzz = primBuffer.data(g21off + 126 * idx + 114);

                auto g21_zz_xyyyy = primBuffer.data(g21off + 126 * idx + 115);

                auto g21_zz_xyyyz = primBuffer.data(g21off + 126 * idx + 116);

                auto g21_zz_xyyzz = primBuffer.data(g21off + 126 * idx + 117);

                auto g21_zz_xyzzz = primBuffer.data(g21off + 126 * idx + 118);

                auto g21_zz_xzzzz = primBuffer.data(g21off + 126 * idx + 119);

                auto g21_zz_yyyyy = primBuffer.data(g21off + 126 * idx + 120);

                auto g21_zz_yyyyz = primBuffer.data(g21off + 126 * idx + 121);

                auto g21_zz_yyyzz = primBuffer.data(g21off + 126 * idx + 122);

                auto g21_zz_yyzzz = primBuffer.data(g21off + 126 * idx + 123);

                auto g21_zz_yzzzz = primBuffer.data(g21off + 126 * idx + 124);

                auto g21_zz_zzzzz = primBuffer.data(g21off + 126 * idx + 125);

                // set up pointers to (F|g(r,r')|SH)^(m+1) integrals

                auto g11_xxx_xxxxx = primBuffer.data(g11off + 210 * idx);

                auto g11_xxx_xxxxy = primBuffer.data(g11off + 210 * idx + 1);

                auto g11_xxx_xxxxz = primBuffer.data(g11off + 210 * idx + 2);

                auto g11_xxx_xxxyy = primBuffer.data(g11off + 210 * idx + 3);

                auto g11_xxx_xxxyz = primBuffer.data(g11off + 210 * idx + 4);

                auto g11_xxx_xxxzz = primBuffer.data(g11off + 210 * idx + 5);

                auto g11_xxx_xxyyy = primBuffer.data(g11off + 210 * idx + 6);

                auto g11_xxx_xxyyz = primBuffer.data(g11off + 210 * idx + 7);

                auto g11_xxx_xxyzz = primBuffer.data(g11off + 210 * idx + 8);

                auto g11_xxx_xxzzz = primBuffer.data(g11off + 210 * idx + 9);

                auto g11_xxx_xyyyy = primBuffer.data(g11off + 210 * idx + 10);

                auto g11_xxx_xyyyz = primBuffer.data(g11off + 210 * idx + 11);

                auto g11_xxx_xyyzz = primBuffer.data(g11off + 210 * idx + 12);

                auto g11_xxx_xyzzz = primBuffer.data(g11off + 210 * idx + 13);

                auto g11_xxx_xzzzz = primBuffer.data(g11off + 210 * idx + 14);

                auto g11_xxx_yyyyy = primBuffer.data(g11off + 210 * idx + 15);

                auto g11_xxx_yyyyz = primBuffer.data(g11off + 210 * idx + 16);

                auto g11_xxx_yyyzz = primBuffer.data(g11off + 210 * idx + 17);

                auto g11_xxx_yyzzz = primBuffer.data(g11off + 210 * idx + 18);

                auto g11_xxx_yzzzz = primBuffer.data(g11off + 210 * idx + 19);

                auto g11_xxx_zzzzz = primBuffer.data(g11off + 210 * idx + 20);

                auto g11_xxy_xxxxx = primBuffer.data(g11off + 210 * idx + 21);

                auto g11_xxy_xxxxy = primBuffer.data(g11off + 210 * idx + 22);

                auto g11_xxy_xxxxz = primBuffer.data(g11off + 210 * idx + 23);

                auto g11_xxy_xxxyy = primBuffer.data(g11off + 210 * idx + 24);

                auto g11_xxy_xxxyz = primBuffer.data(g11off + 210 * idx + 25);

                auto g11_xxy_xxxzz = primBuffer.data(g11off + 210 * idx + 26);

                auto g11_xxy_xxyyy = primBuffer.data(g11off + 210 * idx + 27);

                auto g11_xxy_xxyyz = primBuffer.data(g11off + 210 * idx + 28);

                auto g11_xxy_xxyzz = primBuffer.data(g11off + 210 * idx + 29);

                auto g11_xxy_xxzzz = primBuffer.data(g11off + 210 * idx + 30);

                auto g11_xxy_xyyyy = primBuffer.data(g11off + 210 * idx + 31);

                auto g11_xxy_xyyyz = primBuffer.data(g11off + 210 * idx + 32);

                auto g11_xxy_xyyzz = primBuffer.data(g11off + 210 * idx + 33);

                auto g11_xxy_xyzzz = primBuffer.data(g11off + 210 * idx + 34);

                auto g11_xxy_xzzzz = primBuffer.data(g11off + 210 * idx + 35);

                auto g11_xxy_yyyyy = primBuffer.data(g11off + 210 * idx + 36);

                auto g11_xxy_yyyyz = primBuffer.data(g11off + 210 * idx + 37);

                auto g11_xxy_yyyzz = primBuffer.data(g11off + 210 * idx + 38);

                auto g11_xxy_yyzzz = primBuffer.data(g11off + 210 * idx + 39);

                auto g11_xxy_yzzzz = primBuffer.data(g11off + 210 * idx + 40);

                auto g11_xxy_zzzzz = primBuffer.data(g11off + 210 * idx + 41);

                auto g11_xxz_xxxxx = primBuffer.data(g11off + 210 * idx + 42);

                auto g11_xxz_xxxxy = primBuffer.data(g11off + 210 * idx + 43);

                auto g11_xxz_xxxxz = primBuffer.data(g11off + 210 * idx + 44);

                auto g11_xxz_xxxyy = primBuffer.data(g11off + 210 * idx + 45);

                auto g11_xxz_xxxyz = primBuffer.data(g11off + 210 * idx + 46);

                auto g11_xxz_xxxzz = primBuffer.data(g11off + 210 * idx + 47);

                auto g11_xxz_xxyyy = primBuffer.data(g11off + 210 * idx + 48);

                auto g11_xxz_xxyyz = primBuffer.data(g11off + 210 * idx + 49);

                auto g11_xxz_xxyzz = primBuffer.data(g11off + 210 * idx + 50);

                auto g11_xxz_xxzzz = primBuffer.data(g11off + 210 * idx + 51);

                auto g11_xxz_xyyyy = primBuffer.data(g11off + 210 * idx + 52);

                auto g11_xxz_xyyyz = primBuffer.data(g11off + 210 * idx + 53);

                auto g11_xxz_xyyzz = primBuffer.data(g11off + 210 * idx + 54);

                auto g11_xxz_xyzzz = primBuffer.data(g11off + 210 * idx + 55);

                auto g11_xxz_xzzzz = primBuffer.data(g11off + 210 * idx + 56);

                auto g11_xxz_yyyyy = primBuffer.data(g11off + 210 * idx + 57);

                auto g11_xxz_yyyyz = primBuffer.data(g11off + 210 * idx + 58);

                auto g11_xxz_yyyzz = primBuffer.data(g11off + 210 * idx + 59);

                auto g11_xxz_yyzzz = primBuffer.data(g11off + 210 * idx + 60);

                auto g11_xxz_yzzzz = primBuffer.data(g11off + 210 * idx + 61);

                auto g11_xxz_zzzzz = primBuffer.data(g11off + 210 * idx + 62);

                auto g11_xyy_xxxxx = primBuffer.data(g11off + 210 * idx + 63);

                auto g11_xyy_xxxxy = primBuffer.data(g11off + 210 * idx + 64);

                auto g11_xyy_xxxxz = primBuffer.data(g11off + 210 * idx + 65);

                auto g11_xyy_xxxyy = primBuffer.data(g11off + 210 * idx + 66);

                auto g11_xyy_xxxyz = primBuffer.data(g11off + 210 * idx + 67);

                auto g11_xyy_xxxzz = primBuffer.data(g11off + 210 * idx + 68);

                auto g11_xyy_xxyyy = primBuffer.data(g11off + 210 * idx + 69);

                auto g11_xyy_xxyyz = primBuffer.data(g11off + 210 * idx + 70);

                auto g11_xyy_xxyzz = primBuffer.data(g11off + 210 * idx + 71);

                auto g11_xyy_xxzzz = primBuffer.data(g11off + 210 * idx + 72);

                auto g11_xyy_xyyyy = primBuffer.data(g11off + 210 * idx + 73);

                auto g11_xyy_xyyyz = primBuffer.data(g11off + 210 * idx + 74);

                auto g11_xyy_xyyzz = primBuffer.data(g11off + 210 * idx + 75);

                auto g11_xyy_xyzzz = primBuffer.data(g11off + 210 * idx + 76);

                auto g11_xyy_xzzzz = primBuffer.data(g11off + 210 * idx + 77);

                auto g11_xyy_yyyyy = primBuffer.data(g11off + 210 * idx + 78);

                auto g11_xyy_yyyyz = primBuffer.data(g11off + 210 * idx + 79);

                auto g11_xyy_yyyzz = primBuffer.data(g11off + 210 * idx + 80);

                auto g11_xyy_yyzzz = primBuffer.data(g11off + 210 * idx + 81);

                auto g11_xyy_yzzzz = primBuffer.data(g11off + 210 * idx + 82);

                auto g11_xyy_zzzzz = primBuffer.data(g11off + 210 * idx + 83);

                auto g11_xyz_xxxxx = primBuffer.data(g11off + 210 * idx + 84);

                auto g11_xyz_xxxxy = primBuffer.data(g11off + 210 * idx + 85);

                auto g11_xyz_xxxxz = primBuffer.data(g11off + 210 * idx + 86);

                auto g11_xyz_xxxyy = primBuffer.data(g11off + 210 * idx + 87);

                auto g11_xyz_xxxyz = primBuffer.data(g11off + 210 * idx + 88);

                auto g11_xyz_xxxzz = primBuffer.data(g11off + 210 * idx + 89);

                auto g11_xyz_xxyyy = primBuffer.data(g11off + 210 * idx + 90);

                auto g11_xyz_xxyyz = primBuffer.data(g11off + 210 * idx + 91);

                auto g11_xyz_xxyzz = primBuffer.data(g11off + 210 * idx + 92);

                auto g11_xyz_xxzzz = primBuffer.data(g11off + 210 * idx + 93);

                auto g11_xyz_xyyyy = primBuffer.data(g11off + 210 * idx + 94);

                auto g11_xyz_xyyyz = primBuffer.data(g11off + 210 * idx + 95);

                auto g11_xyz_xyyzz = primBuffer.data(g11off + 210 * idx + 96);

                auto g11_xyz_xyzzz = primBuffer.data(g11off + 210 * idx + 97);

                auto g11_xyz_xzzzz = primBuffer.data(g11off + 210 * idx + 98);

                auto g11_xyz_yyyyy = primBuffer.data(g11off + 210 * idx + 99);

                auto g11_xyz_yyyyz = primBuffer.data(g11off + 210 * idx + 100);

                auto g11_xyz_yyyzz = primBuffer.data(g11off + 210 * idx + 101);

                auto g11_xyz_yyzzz = primBuffer.data(g11off + 210 * idx + 102);

                auto g11_xyz_yzzzz = primBuffer.data(g11off + 210 * idx + 103);

                auto g11_xyz_zzzzz = primBuffer.data(g11off + 210 * idx + 104);

                auto g11_xzz_xxxxx = primBuffer.data(g11off + 210 * idx + 105);

                auto g11_xzz_xxxxy = primBuffer.data(g11off + 210 * idx + 106);

                auto g11_xzz_xxxxz = primBuffer.data(g11off + 210 * idx + 107);

                auto g11_xzz_xxxyy = primBuffer.data(g11off + 210 * idx + 108);

                auto g11_xzz_xxxyz = primBuffer.data(g11off + 210 * idx + 109);

                auto g11_xzz_xxxzz = primBuffer.data(g11off + 210 * idx + 110);

                auto g11_xzz_xxyyy = primBuffer.data(g11off + 210 * idx + 111);

                auto g11_xzz_xxyyz = primBuffer.data(g11off + 210 * idx + 112);

                auto g11_xzz_xxyzz = primBuffer.data(g11off + 210 * idx + 113);

                auto g11_xzz_xxzzz = primBuffer.data(g11off + 210 * idx + 114);

                auto g11_xzz_xyyyy = primBuffer.data(g11off + 210 * idx + 115);

                auto g11_xzz_xyyyz = primBuffer.data(g11off + 210 * idx + 116);

                auto g11_xzz_xyyzz = primBuffer.data(g11off + 210 * idx + 117);

                auto g11_xzz_xyzzz = primBuffer.data(g11off + 210 * idx + 118);

                auto g11_xzz_xzzzz = primBuffer.data(g11off + 210 * idx + 119);

                auto g11_xzz_yyyyy = primBuffer.data(g11off + 210 * idx + 120);

                auto g11_xzz_yyyyz = primBuffer.data(g11off + 210 * idx + 121);

                auto g11_xzz_yyyzz = primBuffer.data(g11off + 210 * idx + 122);

                auto g11_xzz_yyzzz = primBuffer.data(g11off + 210 * idx + 123);

                auto g11_xzz_yzzzz = primBuffer.data(g11off + 210 * idx + 124);

                auto g11_xzz_zzzzz = primBuffer.data(g11off + 210 * idx + 125);

                auto g11_yyy_xxxxx = primBuffer.data(g11off + 210 * idx + 126);

                auto g11_yyy_xxxxy = primBuffer.data(g11off + 210 * idx + 127);

                auto g11_yyy_xxxxz = primBuffer.data(g11off + 210 * idx + 128);

                auto g11_yyy_xxxyy = primBuffer.data(g11off + 210 * idx + 129);

                auto g11_yyy_xxxyz = primBuffer.data(g11off + 210 * idx + 130);

                auto g11_yyy_xxxzz = primBuffer.data(g11off + 210 * idx + 131);

                auto g11_yyy_xxyyy = primBuffer.data(g11off + 210 * idx + 132);

                auto g11_yyy_xxyyz = primBuffer.data(g11off + 210 * idx + 133);

                auto g11_yyy_xxyzz = primBuffer.data(g11off + 210 * idx + 134);

                auto g11_yyy_xxzzz = primBuffer.data(g11off + 210 * idx + 135);

                auto g11_yyy_xyyyy = primBuffer.data(g11off + 210 * idx + 136);

                auto g11_yyy_xyyyz = primBuffer.data(g11off + 210 * idx + 137);

                auto g11_yyy_xyyzz = primBuffer.data(g11off + 210 * idx + 138);

                auto g11_yyy_xyzzz = primBuffer.data(g11off + 210 * idx + 139);

                auto g11_yyy_xzzzz = primBuffer.data(g11off + 210 * idx + 140);

                auto g11_yyy_yyyyy = primBuffer.data(g11off + 210 * idx + 141);

                auto g11_yyy_yyyyz = primBuffer.data(g11off + 210 * idx + 142);

                auto g11_yyy_yyyzz = primBuffer.data(g11off + 210 * idx + 143);

                auto g11_yyy_yyzzz = primBuffer.data(g11off + 210 * idx + 144);

                auto g11_yyy_yzzzz = primBuffer.data(g11off + 210 * idx + 145);

                auto g11_yyy_zzzzz = primBuffer.data(g11off + 210 * idx + 146);

                auto g11_yyz_xxxxx = primBuffer.data(g11off + 210 * idx + 147);

                auto g11_yyz_xxxxy = primBuffer.data(g11off + 210 * idx + 148);

                auto g11_yyz_xxxxz = primBuffer.data(g11off + 210 * idx + 149);

                auto g11_yyz_xxxyy = primBuffer.data(g11off + 210 * idx + 150);

                auto g11_yyz_xxxyz = primBuffer.data(g11off + 210 * idx + 151);

                auto g11_yyz_xxxzz = primBuffer.data(g11off + 210 * idx + 152);

                auto g11_yyz_xxyyy = primBuffer.data(g11off + 210 * idx + 153);

                auto g11_yyz_xxyyz = primBuffer.data(g11off + 210 * idx + 154);

                auto g11_yyz_xxyzz = primBuffer.data(g11off + 210 * idx + 155);

                auto g11_yyz_xxzzz = primBuffer.data(g11off + 210 * idx + 156);

                auto g11_yyz_xyyyy = primBuffer.data(g11off + 210 * idx + 157);

                auto g11_yyz_xyyyz = primBuffer.data(g11off + 210 * idx + 158);

                auto g11_yyz_xyyzz = primBuffer.data(g11off + 210 * idx + 159);

                auto g11_yyz_xyzzz = primBuffer.data(g11off + 210 * idx + 160);

                auto g11_yyz_xzzzz = primBuffer.data(g11off + 210 * idx + 161);

                auto g11_yyz_yyyyy = primBuffer.data(g11off + 210 * idx + 162);

                auto g11_yyz_yyyyz = primBuffer.data(g11off + 210 * idx + 163);

                auto g11_yyz_yyyzz = primBuffer.data(g11off + 210 * idx + 164);

                auto g11_yyz_yyzzz = primBuffer.data(g11off + 210 * idx + 165);

                auto g11_yyz_yzzzz = primBuffer.data(g11off + 210 * idx + 166);

                auto g11_yyz_zzzzz = primBuffer.data(g11off + 210 * idx + 167);

                auto g11_yzz_xxxxx = primBuffer.data(g11off + 210 * idx + 168);

                auto g11_yzz_xxxxy = primBuffer.data(g11off + 210 * idx + 169);

                auto g11_yzz_xxxxz = primBuffer.data(g11off + 210 * idx + 170);

                auto g11_yzz_xxxyy = primBuffer.data(g11off + 210 * idx + 171);

                auto g11_yzz_xxxyz = primBuffer.data(g11off + 210 * idx + 172);

                auto g11_yzz_xxxzz = primBuffer.data(g11off + 210 * idx + 173);

                auto g11_yzz_xxyyy = primBuffer.data(g11off + 210 * idx + 174);

                auto g11_yzz_xxyyz = primBuffer.data(g11off + 210 * idx + 175);

                auto g11_yzz_xxyzz = primBuffer.data(g11off + 210 * idx + 176);

                auto g11_yzz_xxzzz = primBuffer.data(g11off + 210 * idx + 177);

                auto g11_yzz_xyyyy = primBuffer.data(g11off + 210 * idx + 178);

                auto g11_yzz_xyyyz = primBuffer.data(g11off + 210 * idx + 179);

                auto g11_yzz_xyyzz = primBuffer.data(g11off + 210 * idx + 180);

                auto g11_yzz_xyzzz = primBuffer.data(g11off + 210 * idx + 181);

                auto g11_yzz_xzzzz = primBuffer.data(g11off + 210 * idx + 182);

                auto g11_yzz_yyyyy = primBuffer.data(g11off + 210 * idx + 183);

                auto g11_yzz_yyyyz = primBuffer.data(g11off + 210 * idx + 184);

                auto g11_yzz_yyyzz = primBuffer.data(g11off + 210 * idx + 185);

                auto g11_yzz_yyzzz = primBuffer.data(g11off + 210 * idx + 186);

                auto g11_yzz_yzzzz = primBuffer.data(g11off + 210 * idx + 187);

                auto g11_yzz_zzzzz = primBuffer.data(g11off + 210 * idx + 188);

                auto g11_zzz_xxxxx = primBuffer.data(g11off + 210 * idx + 189);

                auto g11_zzz_xxxxy = primBuffer.data(g11off + 210 * idx + 190);

                auto g11_zzz_xxxxz = primBuffer.data(g11off + 210 * idx + 191);

                auto g11_zzz_xxxyy = primBuffer.data(g11off + 210 * idx + 192);

                auto g11_zzz_xxxyz = primBuffer.data(g11off + 210 * idx + 193);

                auto g11_zzz_xxxzz = primBuffer.data(g11off + 210 * idx + 194);

                auto g11_zzz_xxyyy = primBuffer.data(g11off + 210 * idx + 195);

                auto g11_zzz_xxyyz = primBuffer.data(g11off + 210 * idx + 196);

                auto g11_zzz_xxyzz = primBuffer.data(g11off + 210 * idx + 197);

                auto g11_zzz_xxzzz = primBuffer.data(g11off + 210 * idx + 198);

                auto g11_zzz_xyyyy = primBuffer.data(g11off + 210 * idx + 199);

                auto g11_zzz_xyyyz = primBuffer.data(g11off + 210 * idx + 200);

                auto g11_zzz_xyyzz = primBuffer.data(g11off + 210 * idx + 201);

                auto g11_zzz_xyzzz = primBuffer.data(g11off + 210 * idx + 202);

                auto g11_zzz_xzzzz = primBuffer.data(g11off + 210 * idx + 203);

                auto g11_zzz_yyyyy = primBuffer.data(g11off + 210 * idx + 204);

                auto g11_zzz_yyyyz = primBuffer.data(g11off + 210 * idx + 205);

                auto g11_zzz_yyyzz = primBuffer.data(g11off + 210 * idx + 206);

                auto g11_zzz_yyzzz = primBuffer.data(g11off + 210 * idx + 207);

                auto g11_zzz_yzzzz = primBuffer.data(g11off + 210 * idx + 208);

                auto g11_zzz_zzzzz = primBuffer.data(g11off + 210 * idx + 209);

                // set up pointers to (G|g(r,r')|SH)^(m) integrals

                auto g_xxxx_xxxxx = primBuffer.data(goff + 315 * idx);

                auto g_xxxx_xxxxy = primBuffer.data(goff + 315 * idx + 1);

                auto g_xxxx_xxxxz = primBuffer.data(goff + 315 * idx + 2);

                auto g_xxxx_xxxyy = primBuffer.data(goff + 315 * idx + 3);

                auto g_xxxx_xxxyz = primBuffer.data(goff + 315 * idx + 4);

                auto g_xxxx_xxxzz = primBuffer.data(goff + 315 * idx + 5);

                auto g_xxxx_xxyyy = primBuffer.data(goff + 315 * idx + 6);

                auto g_xxxx_xxyyz = primBuffer.data(goff + 315 * idx + 7);

                auto g_xxxx_xxyzz = primBuffer.data(goff + 315 * idx + 8);

                auto g_xxxx_xxzzz = primBuffer.data(goff + 315 * idx + 9);

                auto g_xxxx_xyyyy = primBuffer.data(goff + 315 * idx + 10);

                auto g_xxxx_xyyyz = primBuffer.data(goff + 315 * idx + 11);

                auto g_xxxx_xyyzz = primBuffer.data(goff + 315 * idx + 12);

                auto g_xxxx_xyzzz = primBuffer.data(goff + 315 * idx + 13);

                auto g_xxxx_xzzzz = primBuffer.data(goff + 315 * idx + 14);

                auto g_xxxx_yyyyy = primBuffer.data(goff + 315 * idx + 15);

                auto g_xxxx_yyyyz = primBuffer.data(goff + 315 * idx + 16);

                auto g_xxxx_yyyzz = primBuffer.data(goff + 315 * idx + 17);

                auto g_xxxx_yyzzz = primBuffer.data(goff + 315 * idx + 18);

                auto g_xxxx_yzzzz = primBuffer.data(goff + 315 * idx + 19);

                auto g_xxxx_zzzzz = primBuffer.data(goff + 315 * idx + 20);

                auto g_xxxy_xxxxx = primBuffer.data(goff + 315 * idx + 21);

                auto g_xxxy_xxxxy = primBuffer.data(goff + 315 * idx + 22);

                auto g_xxxy_xxxxz = primBuffer.data(goff + 315 * idx + 23);

                auto g_xxxy_xxxyy = primBuffer.data(goff + 315 * idx + 24);

                auto g_xxxy_xxxyz = primBuffer.data(goff + 315 * idx + 25);

                auto g_xxxy_xxxzz = primBuffer.data(goff + 315 * idx + 26);

                auto g_xxxy_xxyyy = primBuffer.data(goff + 315 * idx + 27);

                auto g_xxxy_xxyyz = primBuffer.data(goff + 315 * idx + 28);

                auto g_xxxy_xxyzz = primBuffer.data(goff + 315 * idx + 29);

                auto g_xxxy_xxzzz = primBuffer.data(goff + 315 * idx + 30);

                auto g_xxxy_xyyyy = primBuffer.data(goff + 315 * idx + 31);

                auto g_xxxy_xyyyz = primBuffer.data(goff + 315 * idx + 32);

                auto g_xxxy_xyyzz = primBuffer.data(goff + 315 * idx + 33);

                auto g_xxxy_xyzzz = primBuffer.data(goff + 315 * idx + 34);

                auto g_xxxy_xzzzz = primBuffer.data(goff + 315 * idx + 35);

                auto g_xxxy_yyyyy = primBuffer.data(goff + 315 * idx + 36);

                auto g_xxxy_yyyyz = primBuffer.data(goff + 315 * idx + 37);

                auto g_xxxy_yyyzz = primBuffer.data(goff + 315 * idx + 38);

                auto g_xxxy_yyzzz = primBuffer.data(goff + 315 * idx + 39);

                auto g_xxxy_yzzzz = primBuffer.data(goff + 315 * idx + 40);

                auto g_xxxy_zzzzz = primBuffer.data(goff + 315 * idx + 41);

                auto g_xxxz_xxxxx = primBuffer.data(goff + 315 * idx + 42);

                auto g_xxxz_xxxxy = primBuffer.data(goff + 315 * idx + 43);

                auto g_xxxz_xxxxz = primBuffer.data(goff + 315 * idx + 44);

                auto g_xxxz_xxxyy = primBuffer.data(goff + 315 * idx + 45);

                auto g_xxxz_xxxyz = primBuffer.data(goff + 315 * idx + 46);

                auto g_xxxz_xxxzz = primBuffer.data(goff + 315 * idx + 47);

                auto g_xxxz_xxyyy = primBuffer.data(goff + 315 * idx + 48);

                auto g_xxxz_xxyyz = primBuffer.data(goff + 315 * idx + 49);

                auto g_xxxz_xxyzz = primBuffer.data(goff + 315 * idx + 50);

                auto g_xxxz_xxzzz = primBuffer.data(goff + 315 * idx + 51);

                auto g_xxxz_xyyyy = primBuffer.data(goff + 315 * idx + 52);

                auto g_xxxz_xyyyz = primBuffer.data(goff + 315 * idx + 53);

                auto g_xxxz_xyyzz = primBuffer.data(goff + 315 * idx + 54);

                auto g_xxxz_xyzzz = primBuffer.data(goff + 315 * idx + 55);

                auto g_xxxz_xzzzz = primBuffer.data(goff + 315 * idx + 56);

                auto g_xxxz_yyyyy = primBuffer.data(goff + 315 * idx + 57);

                auto g_xxxz_yyyyz = primBuffer.data(goff + 315 * idx + 58);

                auto g_xxxz_yyyzz = primBuffer.data(goff + 315 * idx + 59);

                auto g_xxxz_yyzzz = primBuffer.data(goff + 315 * idx + 60);

                auto g_xxxz_yzzzz = primBuffer.data(goff + 315 * idx + 61);

                auto g_xxxz_zzzzz = primBuffer.data(goff + 315 * idx + 62);

                auto g_xxyy_xxxxx = primBuffer.data(goff + 315 * idx + 63);

                auto g_xxyy_xxxxy = primBuffer.data(goff + 315 * idx + 64);

                auto g_xxyy_xxxxz = primBuffer.data(goff + 315 * idx + 65);

                auto g_xxyy_xxxyy = primBuffer.data(goff + 315 * idx + 66);

                auto g_xxyy_xxxyz = primBuffer.data(goff + 315 * idx + 67);

                auto g_xxyy_xxxzz = primBuffer.data(goff + 315 * idx + 68);

                auto g_xxyy_xxyyy = primBuffer.data(goff + 315 * idx + 69);

                auto g_xxyy_xxyyz = primBuffer.data(goff + 315 * idx + 70);

                auto g_xxyy_xxyzz = primBuffer.data(goff + 315 * idx + 71);

                auto g_xxyy_xxzzz = primBuffer.data(goff + 315 * idx + 72);

                auto g_xxyy_xyyyy = primBuffer.data(goff + 315 * idx + 73);

                auto g_xxyy_xyyyz = primBuffer.data(goff + 315 * idx + 74);

                auto g_xxyy_xyyzz = primBuffer.data(goff + 315 * idx + 75);

                auto g_xxyy_xyzzz = primBuffer.data(goff + 315 * idx + 76);

                auto g_xxyy_xzzzz = primBuffer.data(goff + 315 * idx + 77);

                auto g_xxyy_yyyyy = primBuffer.data(goff + 315 * idx + 78);

                auto g_xxyy_yyyyz = primBuffer.data(goff + 315 * idx + 79);

                auto g_xxyy_yyyzz = primBuffer.data(goff + 315 * idx + 80);

                auto g_xxyy_yyzzz = primBuffer.data(goff + 315 * idx + 81);

                auto g_xxyy_yzzzz = primBuffer.data(goff + 315 * idx + 82);

                auto g_xxyy_zzzzz = primBuffer.data(goff + 315 * idx + 83);

                auto g_xxyz_xxxxx = primBuffer.data(goff + 315 * idx + 84);

                auto g_xxyz_xxxxy = primBuffer.data(goff + 315 * idx + 85);

                auto g_xxyz_xxxxz = primBuffer.data(goff + 315 * idx + 86);

                auto g_xxyz_xxxyy = primBuffer.data(goff + 315 * idx + 87);

                auto g_xxyz_xxxyz = primBuffer.data(goff + 315 * idx + 88);

                auto g_xxyz_xxxzz = primBuffer.data(goff + 315 * idx + 89);

                auto g_xxyz_xxyyy = primBuffer.data(goff + 315 * idx + 90);

                auto g_xxyz_xxyyz = primBuffer.data(goff + 315 * idx + 91);

                auto g_xxyz_xxyzz = primBuffer.data(goff + 315 * idx + 92);

                auto g_xxyz_xxzzz = primBuffer.data(goff + 315 * idx + 93);

                auto g_xxyz_xyyyy = primBuffer.data(goff + 315 * idx + 94);

                auto g_xxyz_xyyyz = primBuffer.data(goff + 315 * idx + 95);

                auto g_xxyz_xyyzz = primBuffer.data(goff + 315 * idx + 96);

                auto g_xxyz_xyzzz = primBuffer.data(goff + 315 * idx + 97);

                auto g_xxyz_xzzzz = primBuffer.data(goff + 315 * idx + 98);

                auto g_xxyz_yyyyy = primBuffer.data(goff + 315 * idx + 99);

                auto g_xxyz_yyyyz = primBuffer.data(goff + 315 * idx + 100);

                auto g_xxyz_yyyzz = primBuffer.data(goff + 315 * idx + 101);

                auto g_xxyz_yyzzz = primBuffer.data(goff + 315 * idx + 102);

                auto g_xxyz_yzzzz = primBuffer.data(goff + 315 * idx + 103);

                auto g_xxyz_zzzzz = primBuffer.data(goff + 315 * idx + 104);

                auto g_xxzz_xxxxx = primBuffer.data(goff + 315 * idx + 105);

                auto g_xxzz_xxxxy = primBuffer.data(goff + 315 * idx + 106);

                auto g_xxzz_xxxxz = primBuffer.data(goff + 315 * idx + 107);

                auto g_xxzz_xxxyy = primBuffer.data(goff + 315 * idx + 108);

                auto g_xxzz_xxxyz = primBuffer.data(goff + 315 * idx + 109);

                auto g_xxzz_xxxzz = primBuffer.data(goff + 315 * idx + 110);

                auto g_xxzz_xxyyy = primBuffer.data(goff + 315 * idx + 111);

                auto g_xxzz_xxyyz = primBuffer.data(goff + 315 * idx + 112);

                auto g_xxzz_xxyzz = primBuffer.data(goff + 315 * idx + 113);

                auto g_xxzz_xxzzz = primBuffer.data(goff + 315 * idx + 114);

                auto g_xxzz_xyyyy = primBuffer.data(goff + 315 * idx + 115);

                auto g_xxzz_xyyyz = primBuffer.data(goff + 315 * idx + 116);

                auto g_xxzz_xyyzz = primBuffer.data(goff + 315 * idx + 117);

                auto g_xxzz_xyzzz = primBuffer.data(goff + 315 * idx + 118);

                auto g_xxzz_xzzzz = primBuffer.data(goff + 315 * idx + 119);

                auto g_xxzz_yyyyy = primBuffer.data(goff + 315 * idx + 120);

                auto g_xxzz_yyyyz = primBuffer.data(goff + 315 * idx + 121);

                auto g_xxzz_yyyzz = primBuffer.data(goff + 315 * idx + 122);

                auto g_xxzz_yyzzz = primBuffer.data(goff + 315 * idx + 123);

                auto g_xxzz_yzzzz = primBuffer.data(goff + 315 * idx + 124);

                auto g_xxzz_zzzzz = primBuffer.data(goff + 315 * idx + 125);

                auto g_xyyy_xxxxx = primBuffer.data(goff + 315 * idx + 126);

                auto g_xyyy_xxxxy = primBuffer.data(goff + 315 * idx + 127);

                auto g_xyyy_xxxxz = primBuffer.data(goff + 315 * idx + 128);

                auto g_xyyy_xxxyy = primBuffer.data(goff + 315 * idx + 129);

                auto g_xyyy_xxxyz = primBuffer.data(goff + 315 * idx + 130);

                auto g_xyyy_xxxzz = primBuffer.data(goff + 315 * idx + 131);

                auto g_xyyy_xxyyy = primBuffer.data(goff + 315 * idx + 132);

                auto g_xyyy_xxyyz = primBuffer.data(goff + 315 * idx + 133);

                auto g_xyyy_xxyzz = primBuffer.data(goff + 315 * idx + 134);

                auto g_xyyy_xxzzz = primBuffer.data(goff + 315 * idx + 135);

                auto g_xyyy_xyyyy = primBuffer.data(goff + 315 * idx + 136);

                auto g_xyyy_xyyyz = primBuffer.data(goff + 315 * idx + 137);

                auto g_xyyy_xyyzz = primBuffer.data(goff + 315 * idx + 138);

                auto g_xyyy_xyzzz = primBuffer.data(goff + 315 * idx + 139);

                auto g_xyyy_xzzzz = primBuffer.data(goff + 315 * idx + 140);

                auto g_xyyy_yyyyy = primBuffer.data(goff + 315 * idx + 141);

                auto g_xyyy_yyyyz = primBuffer.data(goff + 315 * idx + 142);

                auto g_xyyy_yyyzz = primBuffer.data(goff + 315 * idx + 143);

                auto g_xyyy_yyzzz = primBuffer.data(goff + 315 * idx + 144);

                auto g_xyyy_yzzzz = primBuffer.data(goff + 315 * idx + 145);

                auto g_xyyy_zzzzz = primBuffer.data(goff + 315 * idx + 146);

                auto g_xyyz_xxxxx = primBuffer.data(goff + 315 * idx + 147);

                auto g_xyyz_xxxxy = primBuffer.data(goff + 315 * idx + 148);

                auto g_xyyz_xxxxz = primBuffer.data(goff + 315 * idx + 149);

                auto g_xyyz_xxxyy = primBuffer.data(goff + 315 * idx + 150);

                auto g_xyyz_xxxyz = primBuffer.data(goff + 315 * idx + 151);

                auto g_xyyz_xxxzz = primBuffer.data(goff + 315 * idx + 152);

                auto g_xyyz_xxyyy = primBuffer.data(goff + 315 * idx + 153);

                auto g_xyyz_xxyyz = primBuffer.data(goff + 315 * idx + 154);

                auto g_xyyz_xxyzz = primBuffer.data(goff + 315 * idx + 155);

                auto g_xyyz_xxzzz = primBuffer.data(goff + 315 * idx + 156);

                auto g_xyyz_xyyyy = primBuffer.data(goff + 315 * idx + 157);

                auto g_xyyz_xyyyz = primBuffer.data(goff + 315 * idx + 158);

                auto g_xyyz_xyyzz = primBuffer.data(goff + 315 * idx + 159);

                auto g_xyyz_xyzzz = primBuffer.data(goff + 315 * idx + 160);

                auto g_xyyz_xzzzz = primBuffer.data(goff + 315 * idx + 161);

                auto g_xyyz_yyyyy = primBuffer.data(goff + 315 * idx + 162);

                auto g_xyyz_yyyyz = primBuffer.data(goff + 315 * idx + 163);

                auto g_xyyz_yyyzz = primBuffer.data(goff + 315 * idx + 164);

                auto g_xyyz_yyzzz = primBuffer.data(goff + 315 * idx + 165);

                auto g_xyyz_yzzzz = primBuffer.data(goff + 315 * idx + 166);

                auto g_xyyz_zzzzz = primBuffer.data(goff + 315 * idx + 167);

                auto g_xyzz_xxxxx = primBuffer.data(goff + 315 * idx + 168);

                auto g_xyzz_xxxxy = primBuffer.data(goff + 315 * idx + 169);

                auto g_xyzz_xxxxz = primBuffer.data(goff + 315 * idx + 170);

                auto g_xyzz_xxxyy = primBuffer.data(goff + 315 * idx + 171);

                auto g_xyzz_xxxyz = primBuffer.data(goff + 315 * idx + 172);

                auto g_xyzz_xxxzz = primBuffer.data(goff + 315 * idx + 173);

                auto g_xyzz_xxyyy = primBuffer.data(goff + 315 * idx + 174);

                auto g_xyzz_xxyyz = primBuffer.data(goff + 315 * idx + 175);

                auto g_xyzz_xxyzz = primBuffer.data(goff + 315 * idx + 176);

                auto g_xyzz_xxzzz = primBuffer.data(goff + 315 * idx + 177);

                auto g_xyzz_xyyyy = primBuffer.data(goff + 315 * idx + 178);

                auto g_xyzz_xyyyz = primBuffer.data(goff + 315 * idx + 179);

                auto g_xyzz_xyyzz = primBuffer.data(goff + 315 * idx + 180);

                auto g_xyzz_xyzzz = primBuffer.data(goff + 315 * idx + 181);

                auto g_xyzz_xzzzz = primBuffer.data(goff + 315 * idx + 182);

                auto g_xyzz_yyyyy = primBuffer.data(goff + 315 * idx + 183);

                auto g_xyzz_yyyyz = primBuffer.data(goff + 315 * idx + 184);

                auto g_xyzz_yyyzz = primBuffer.data(goff + 315 * idx + 185);

                auto g_xyzz_yyzzz = primBuffer.data(goff + 315 * idx + 186);

                auto g_xyzz_yzzzz = primBuffer.data(goff + 315 * idx + 187);

                auto g_xyzz_zzzzz = primBuffer.data(goff + 315 * idx + 188);

                auto g_xzzz_xxxxx = primBuffer.data(goff + 315 * idx + 189);

                auto g_xzzz_xxxxy = primBuffer.data(goff + 315 * idx + 190);

                auto g_xzzz_xxxxz = primBuffer.data(goff + 315 * idx + 191);

                auto g_xzzz_xxxyy = primBuffer.data(goff + 315 * idx + 192);

                auto g_xzzz_xxxyz = primBuffer.data(goff + 315 * idx + 193);

                auto g_xzzz_xxxzz = primBuffer.data(goff + 315 * idx + 194);

                auto g_xzzz_xxyyy = primBuffer.data(goff + 315 * idx + 195);

                auto g_xzzz_xxyyz = primBuffer.data(goff + 315 * idx + 196);

                auto g_xzzz_xxyzz = primBuffer.data(goff + 315 * idx + 197);

                auto g_xzzz_xxzzz = primBuffer.data(goff + 315 * idx + 198);

                auto g_xzzz_xyyyy = primBuffer.data(goff + 315 * idx + 199);

                auto g_xzzz_xyyyz = primBuffer.data(goff + 315 * idx + 200);

                auto g_xzzz_xyyzz = primBuffer.data(goff + 315 * idx + 201);

                auto g_xzzz_xyzzz = primBuffer.data(goff + 315 * idx + 202);

                auto g_xzzz_xzzzz = primBuffer.data(goff + 315 * idx + 203);

                auto g_xzzz_yyyyy = primBuffer.data(goff + 315 * idx + 204);

                auto g_xzzz_yyyyz = primBuffer.data(goff + 315 * idx + 205);

                auto g_xzzz_yyyzz = primBuffer.data(goff + 315 * idx + 206);

                auto g_xzzz_yyzzz = primBuffer.data(goff + 315 * idx + 207);

                auto g_xzzz_yzzzz = primBuffer.data(goff + 315 * idx + 208);

                auto g_xzzz_zzzzz = primBuffer.data(goff + 315 * idx + 209);

                auto g_yyyy_xxxxx = primBuffer.data(goff + 315 * idx + 210);

                auto g_yyyy_xxxxy = primBuffer.data(goff + 315 * idx + 211);

                auto g_yyyy_xxxxz = primBuffer.data(goff + 315 * idx + 212);

                auto g_yyyy_xxxyy = primBuffer.data(goff + 315 * idx + 213);

                auto g_yyyy_xxxyz = primBuffer.data(goff + 315 * idx + 214);

                auto g_yyyy_xxxzz = primBuffer.data(goff + 315 * idx + 215);

                auto g_yyyy_xxyyy = primBuffer.data(goff + 315 * idx + 216);

                auto g_yyyy_xxyyz = primBuffer.data(goff + 315 * idx + 217);

                auto g_yyyy_xxyzz = primBuffer.data(goff + 315 * idx + 218);

                auto g_yyyy_xxzzz = primBuffer.data(goff + 315 * idx + 219);

                auto g_yyyy_xyyyy = primBuffer.data(goff + 315 * idx + 220);

                auto g_yyyy_xyyyz = primBuffer.data(goff + 315 * idx + 221);

                auto g_yyyy_xyyzz = primBuffer.data(goff + 315 * idx + 222);

                auto g_yyyy_xyzzz = primBuffer.data(goff + 315 * idx + 223);

                auto g_yyyy_xzzzz = primBuffer.data(goff + 315 * idx + 224);

                auto g_yyyy_yyyyy = primBuffer.data(goff + 315 * idx + 225);

                auto g_yyyy_yyyyz = primBuffer.data(goff + 315 * idx + 226);

                auto g_yyyy_yyyzz = primBuffer.data(goff + 315 * idx + 227);

                auto g_yyyy_yyzzz = primBuffer.data(goff + 315 * idx + 228);

                auto g_yyyy_yzzzz = primBuffer.data(goff + 315 * idx + 229);

                auto g_yyyy_zzzzz = primBuffer.data(goff + 315 * idx + 230);

                auto g_yyyz_xxxxx = primBuffer.data(goff + 315 * idx + 231);

                auto g_yyyz_xxxxy = primBuffer.data(goff + 315 * idx + 232);

                auto g_yyyz_xxxxz = primBuffer.data(goff + 315 * idx + 233);

                auto g_yyyz_xxxyy = primBuffer.data(goff + 315 * idx + 234);

                auto g_yyyz_xxxyz = primBuffer.data(goff + 315 * idx + 235);

                auto g_yyyz_xxxzz = primBuffer.data(goff + 315 * idx + 236);

                auto g_yyyz_xxyyy = primBuffer.data(goff + 315 * idx + 237);

                auto g_yyyz_xxyyz = primBuffer.data(goff + 315 * idx + 238);

                auto g_yyyz_xxyzz = primBuffer.data(goff + 315 * idx + 239);

                auto g_yyyz_xxzzz = primBuffer.data(goff + 315 * idx + 240);

                auto g_yyyz_xyyyy = primBuffer.data(goff + 315 * idx + 241);

                auto g_yyyz_xyyyz = primBuffer.data(goff + 315 * idx + 242);

                auto g_yyyz_xyyzz = primBuffer.data(goff + 315 * idx + 243);

                auto g_yyyz_xyzzz = primBuffer.data(goff + 315 * idx + 244);

                auto g_yyyz_xzzzz = primBuffer.data(goff + 315 * idx + 245);

                auto g_yyyz_yyyyy = primBuffer.data(goff + 315 * idx + 246);

                auto g_yyyz_yyyyz = primBuffer.data(goff + 315 * idx + 247);

                auto g_yyyz_yyyzz = primBuffer.data(goff + 315 * idx + 248);

                auto g_yyyz_yyzzz = primBuffer.data(goff + 315 * idx + 249);

                auto g_yyyz_yzzzz = primBuffer.data(goff + 315 * idx + 250);

                auto g_yyyz_zzzzz = primBuffer.data(goff + 315 * idx + 251);

                auto g_yyzz_xxxxx = primBuffer.data(goff + 315 * idx + 252);

                auto g_yyzz_xxxxy = primBuffer.data(goff + 315 * idx + 253);

                auto g_yyzz_xxxxz = primBuffer.data(goff + 315 * idx + 254);

                auto g_yyzz_xxxyy = primBuffer.data(goff + 315 * idx + 255);

                auto g_yyzz_xxxyz = primBuffer.data(goff + 315 * idx + 256);

                auto g_yyzz_xxxzz = primBuffer.data(goff + 315 * idx + 257);

                auto g_yyzz_xxyyy = primBuffer.data(goff + 315 * idx + 258);

                auto g_yyzz_xxyyz = primBuffer.data(goff + 315 * idx + 259);

                auto g_yyzz_xxyzz = primBuffer.data(goff + 315 * idx + 260);

                auto g_yyzz_xxzzz = primBuffer.data(goff + 315 * idx + 261);

                auto g_yyzz_xyyyy = primBuffer.data(goff + 315 * idx + 262);

                auto g_yyzz_xyyyz = primBuffer.data(goff + 315 * idx + 263);

                auto g_yyzz_xyyzz = primBuffer.data(goff + 315 * idx + 264);

                auto g_yyzz_xyzzz = primBuffer.data(goff + 315 * idx + 265);

                auto g_yyzz_xzzzz = primBuffer.data(goff + 315 * idx + 266);

                auto g_yyzz_yyyyy = primBuffer.data(goff + 315 * idx + 267);

                auto g_yyzz_yyyyz = primBuffer.data(goff + 315 * idx + 268);

                auto g_yyzz_yyyzz = primBuffer.data(goff + 315 * idx + 269);

                auto g_yyzz_yyzzz = primBuffer.data(goff + 315 * idx + 270);

                auto g_yyzz_yzzzz = primBuffer.data(goff + 315 * idx + 271);

                auto g_yyzz_zzzzz = primBuffer.data(goff + 315 * idx + 272);

                auto g_yzzz_xxxxx = primBuffer.data(goff + 315 * idx + 273);

                auto g_yzzz_xxxxy = primBuffer.data(goff + 315 * idx + 274);

                auto g_yzzz_xxxxz = primBuffer.data(goff + 315 * idx + 275);

                auto g_yzzz_xxxyy = primBuffer.data(goff + 315 * idx + 276);

                auto g_yzzz_xxxyz = primBuffer.data(goff + 315 * idx + 277);

                auto g_yzzz_xxxzz = primBuffer.data(goff + 315 * idx + 278);

                auto g_yzzz_xxyyy = primBuffer.data(goff + 315 * idx + 279);

                auto g_yzzz_xxyyz = primBuffer.data(goff + 315 * idx + 280);

                auto g_yzzz_xxyzz = primBuffer.data(goff + 315 * idx + 281);

                auto g_yzzz_xxzzz = primBuffer.data(goff + 315 * idx + 282);

                auto g_yzzz_xyyyy = primBuffer.data(goff + 315 * idx + 283);

                auto g_yzzz_xyyyz = primBuffer.data(goff + 315 * idx + 284);

                auto g_yzzz_xyyzz = primBuffer.data(goff + 315 * idx + 285);

                auto g_yzzz_xyzzz = primBuffer.data(goff + 315 * idx + 286);

                auto g_yzzz_xzzzz = primBuffer.data(goff + 315 * idx + 287);

                auto g_yzzz_yyyyy = primBuffer.data(goff + 315 * idx + 288);

                auto g_yzzz_yyyyz = primBuffer.data(goff + 315 * idx + 289);

                auto g_yzzz_yyyzz = primBuffer.data(goff + 315 * idx + 290);

                auto g_yzzz_yyzzz = primBuffer.data(goff + 315 * idx + 291);

                auto g_yzzz_yzzzz = primBuffer.data(goff + 315 * idx + 292);

                auto g_yzzz_zzzzz = primBuffer.data(goff + 315 * idx + 293);

                auto g_zzzz_xxxxx = primBuffer.data(goff + 315 * idx + 294);

                auto g_zzzz_xxxxy = primBuffer.data(goff + 315 * idx + 295);

                auto g_zzzz_xxxxz = primBuffer.data(goff + 315 * idx + 296);

                auto g_zzzz_xxxyy = primBuffer.data(goff + 315 * idx + 297);

                auto g_zzzz_xxxyz = primBuffer.data(goff + 315 * idx + 298);

                auto g_zzzz_xxxzz = primBuffer.data(goff + 315 * idx + 299);

                auto g_zzzz_xxyyy = primBuffer.data(goff + 315 * idx + 300);

                auto g_zzzz_xxyyz = primBuffer.data(goff + 315 * idx + 301);

                auto g_zzzz_xxyzz = primBuffer.data(goff + 315 * idx + 302);

                auto g_zzzz_xxzzz = primBuffer.data(goff + 315 * idx + 303);

                auto g_zzzz_xyyyy = primBuffer.data(goff + 315 * idx + 304);

                auto g_zzzz_xyyyz = primBuffer.data(goff + 315 * idx + 305);

                auto g_zzzz_xyyzz = primBuffer.data(goff + 315 * idx + 306);

                auto g_zzzz_xyzzz = primBuffer.data(goff + 315 * idx + 307);

                auto g_zzzz_xzzzz = primBuffer.data(goff + 315 * idx + 308);

                auto g_zzzz_yyyyy = primBuffer.data(goff + 315 * idx + 309);

                auto g_zzzz_yyyyz = primBuffer.data(goff + 315 * idx + 310);

                auto g_zzzz_yyyzz = primBuffer.data(goff + 315 * idx + 311);

                auto g_zzzz_yyzzz = primBuffer.data(goff + 315 * idx + 312);

                auto g_zzzz_yzzzz = primBuffer.data(goff + 315 * idx + 313);

                auto g_zzzz_zzzzz = primBuffer.data(goff + 315 * idx + 314);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xxxx,\
                                         gk_xxx_xxxy, gk_xxx_xxxz, gk_xxx_xxyy,\
                                         gk_xxx_xxyz, gk_xxx_xxzz, gk_xxx_xyyy,\
                                         gk_xxx_xyyz, gk_xxx_xyzz, gk_xxx_xzzz,\
                                         gk_xxx_yyyy, gk_xxx_yyyz, gk_xxx_yyzz,\
                                         gk_xxx_yzzz, gk_xxx_zzzz, gk_xxy_xxxx,\
                                         gk_xxy_xxxy, gk_xxy_xxxz, gk_xxy_xxyy,\
                                         gk_xxy_xxyz, gk_xxy_xxzz, gk_xxy_xyyy,\
                                         gk_xxy_xyyz, gk_xxy_xyzz, gk_xxy_xzzz,\
                                         gk_xxy_yyyy, gk_xxy_yyyz, gk_xxy_yyzz,\
                                         gk_xxy_yzzz, gk_xxy_zzzz, gk_xxz_xxxx,\
                                         gk_xxz_xxxy, gk_xxz_xxxz, gk_xxz_xxyy,\
                                         gk_xxz_xxyz, gk_xxz_xxzz, gk_xxz_xyyy,\
                                         gk_xxz_xyyz, gk_xxz_xyzz, gk_xxz_xzzz,\
                                         gk_xxz_yyyy, gk_xxz_yyyz, gk_xxz_yyzz,\
                                         gk_xxz_yzzz, gk_xxz_zzzz, gk_xyy_xxxx,\
                                         gk_xyy_xxxy, gk_xyy_xxxz, gk_xyy_xxyy,\
                                         gk_xyy_xxyz, gk_xyy_xxzz, gk_xyy_xyyy,\
                                         gk_xyy_xyyz, gk_xyy_xyzz, gk_xyy_xzzz,\
                                         gk_xyy_yyyy, gk_xyy_yyyz, gk_xyy_yyzz,\
                                         gk_xyy_yzzz, gk_xyy_zzzz, gk_xyz_xxxx,\
                                         gk_xyz_xxxy, gk_xyz_xxxz, gk_xyz_xxyy,\
                                         gk_xyz_xxyz, gk_xyz_xxzz, gk_xyz_xyyy,\
                                         gk_xyz_xyyz, gk_xyz_xyzz, gk_xyz_xzzz,\
                                         gk_xyz_yyyy, gk_xyz_yyyz, gk_xyz_yyzz,\
                                         gk_xyz_yzzz, gk_xyz_zzzz, gk_xzz_xxxx,\
                                         gk_xzz_xxxy, gk_xzz_xxxz, gk_xzz_xxyy,\
                                         gk_xzz_xxyz, gk_xzz_xxzz, gk_xzz_xyyy,\
                                         gk_xzz_xyyz, gk_xzz_xyzz, gk_xzz_xzzz,\
                                         gk_xzz_yyyy, gk_xzz_yyyz, gk_xzz_yyzz,\
                                         gk_xzz_yzzz, gk_xzz_zzzz, gk_yyy_xxxx,\
                                         gk_yyy_xxxy, gk_yyy_xxxz, gk_yyy_xxyy,\
                                         gk_yyy_xxyz, gk_yyy_xxzz, gk_yyy_xyyy,\
                                         gk_yyy_xyyz, gk_yyy_xyzz, gk_yyy_xzzz,\
                                         gk_yyy_yyyy, gk_yyy_yyyz, gk_yyy_yyzz,\
                                         gk_yyy_yzzz, gk_yyy_zzzz, gk_yyz_xxxx,\
                                         gk_yyz_xxxy, gk_yyz_xxxz, gk_yyz_xxyy,\
                                         gk_yyz_xxyz, gk_yyz_xxzz, gk_yyz_xyyy,\
                                         gk_yyz_xyyz, gk_yyz_xyzz, gk_yyz_xzzz,\
                                         gk_yyz_yyyy, gk_yyz_yyyz, gk_yyz_yyzz,\
                                         gk_yyz_yzzz, gk_yyz_zzzz, gk_yzz_xxxx,\
                                         gk_yzz_xxxy, gk_yzz_xxxz, gk_yzz_xxyy,\
                                         gk_yzz_xxyz, gk_yzz_xxzz, gk_yzz_xyyy,\
                                         gk_yzz_xyyz, gk_yzz_xyzz, gk_yzz_xzzz,\
                                         gk_yzz_yyyy, gk_yzz_yyyz, gk_yzz_yyzz,\
                                         gk_yzz_yzzz, gk_yzz_zzzz, gk_zzz_xxxx,\
                                         gk_zzz_xxxy, gk_zzz_xxxz, gk_zzz_xxyy,\
                                         gk_zzz_xxyz, gk_zzz_xxzz, gk_zzz_xyyy,\
                                         gk_zzz_xyyz, gk_zzz_xyzz, gk_zzz_xzzz,\
                                         gk_zzz_yyyy, gk_zzz_yyyz, gk_zzz_yyzz,\
                                         gk_zzz_yzzz, gk_zzz_zzzz, g20_xx_xxxxx,\
                                         g20_xx_xxxxy, g20_xx_xxxxz, g20_xx_xxxyy,\
                                         g20_xx_xxxyz, g20_xx_xxxzz, g20_xx_xxyyy,\
                                         g20_xx_xxyyz, g20_xx_xxyzz, g20_xx_xxzzz,\
                                         g20_xx_xyyyy, g20_xx_xyyyz, g20_xx_xyyzz,\
                                         g20_xx_xyzzz, g20_xx_xzzzz, g20_xx_yyyyy,\
                                         g20_xx_yyyyz, g20_xx_yyyzz, g20_xx_yyzzz,\
                                         g20_xx_yzzzz, g20_xx_zzzzz, g20_xy_xxxxx,\
                                         g20_xy_xxxxy, g20_xy_xxxxz, g20_xy_xxxyy,\
                                         g20_xy_xxxyz, g20_xy_xxxzz, g20_xy_xxyyy,\
                                         g20_xy_xxyyz, g20_xy_xxyzz, g20_xy_xxzzz,\
                                         g20_xy_xyyyy, g20_xy_xyyyz, g20_xy_xyyzz,\
                                         g20_xy_xyzzz, g20_xy_xzzzz, g20_xy_yyyyy,\
                                         g20_xy_yyyyz, g20_xy_yyyzz, g20_xy_yyzzz,\
                                         g20_xy_yzzzz, g20_xy_zzzzz, g20_xz_xxxxx,\
                                         g20_xz_xxxxy, g20_xz_xxxxz, g20_xz_xxxyy,\
                                         g20_xz_xxxyz, g20_xz_xxxzz, g20_xz_xxyyy,\
                                         g20_xz_xxyyz, g20_xz_xxyzz, g20_xz_xxzzz,\
                                         g20_xz_xyyyy, g20_xz_xyyyz, g20_xz_xyyzz,\
                                         g20_xz_xyzzz, g20_xz_xzzzz, g20_xz_yyyyy,\
                                         g20_xz_yyyyz, g20_xz_yyyzz, g20_xz_yyzzz,\
                                         g20_xz_yzzzz, g20_xz_zzzzz, g20_yy_xxxxx,\
                                         g20_yy_xxxxy, g20_yy_xxxxz, g20_yy_xxxyy,\
                                         g20_yy_xxxyz, g20_yy_xxxzz, g20_yy_xxyyy,\
                                         g20_yy_xxyyz, g20_yy_xxyzz, g20_yy_xxzzz,\
                                         g20_yy_xyyyy, g20_yy_xyyyz, g20_yy_xyyzz,\
                                         g20_yy_xyzzz, g20_yy_xzzzz, g20_yy_yyyyy,\
                                         g20_yy_yyyyz, g20_yy_yyyzz, g20_yy_yyzzz,\
                                         g20_yy_yzzzz, g20_yy_zzzzz, g20_yz_xxxxx,\
                                         g20_yz_xxxxy, g20_yz_xxxxz, g20_yz_xxxyy,\
                                         g20_yz_xxxyz, g20_yz_xxxzz, g20_yz_xxyyy,\
                                         g20_yz_xxyyz, g20_yz_xxyzz, g20_yz_xxzzz,\
                                         g20_yz_xyyyy, g20_yz_xyyyz, g20_yz_xyyzz,\
                                         g20_yz_xyzzz, g20_yz_xzzzz, g20_yz_yyyyy,\
                                         g20_yz_yyyyz, g20_yz_yyyzz, g20_yz_yyzzz,\
                                         g20_yz_yzzzz, g20_yz_zzzzz, g20_zz_xxxxx,\
                                         g20_zz_xxxxy, g20_zz_xxxxz, g20_zz_xxxyy,\
                                         g20_zz_xxxyz, g20_zz_xxxzz, g20_zz_xxyyy,\
                                         g20_zz_xxyyz, g20_zz_xxyzz, g20_zz_xxzzz,\
                                         g20_zz_xyyyy, g20_zz_xyyyz, g20_zz_xyyzz,\
                                         g20_zz_xyzzz, g20_zz_xzzzz, g20_zz_yyyyy,\
                                         g20_zz_yyyyz, g20_zz_yyyzz, g20_zz_yyzzz,\
                                         g20_zz_yzzzz, g20_zz_zzzzz, g21_xx_xxxxx,\
                                         g21_xx_xxxxy, g21_xx_xxxxz, g21_xx_xxxyy,\
                                         g21_xx_xxxyz, g21_xx_xxxzz, g21_xx_xxyyy,\
                                         g21_xx_xxyyz, g21_xx_xxyzz, g21_xx_xxzzz,\
                                         g21_xx_xyyyy, g21_xx_xyyyz, g21_xx_xyyzz,\
                                         g21_xx_xyzzz, g21_xx_xzzzz, g21_xx_yyyyy,\
                                         g21_xx_yyyyz, g21_xx_yyyzz, g21_xx_yyzzz,\
                                         g21_xx_yzzzz, g21_xx_zzzzz, g21_xy_xxxxx,\
                                         g21_xy_xxxxy, g21_xy_xxxxz, g21_xy_xxxyy,\
                                         g21_xy_xxxyz, g21_xy_xxxzz, g21_xy_xxyyy,\
                                         g21_xy_xxyyz, g21_xy_xxyzz, g21_xy_xxzzz,\
                                         g21_xy_xyyyy, g21_xy_xyyyz, g21_xy_xyyzz,\
                                         g21_xy_xyzzz, g21_xy_xzzzz, g21_xy_yyyyy,\
                                         g21_xy_yyyyz, g21_xy_yyyzz, g21_xy_yyzzz,\
                                         g21_xy_yzzzz, g21_xy_zzzzz, g21_xz_xxxxx,\
                                         g21_xz_xxxxy, g21_xz_xxxxz, g21_xz_xxxyy,\
                                         g21_xz_xxxyz, g21_xz_xxxzz, g21_xz_xxyyy,\
                                         g21_xz_xxyyz, g21_xz_xxyzz, g21_xz_xxzzz,\
                                         g21_xz_xyyyy, g21_xz_xyyyz, g21_xz_xyyzz,\
                                         g21_xz_xyzzz, g21_xz_xzzzz, g21_xz_yyyyy,\
                                         g21_xz_yyyyz, g21_xz_yyyzz, g21_xz_yyzzz,\
                                         g21_xz_yzzzz, g21_xz_zzzzz, g21_yy_xxxxx,\
                                         g21_yy_xxxxy, g21_yy_xxxxz, g21_yy_xxxyy,\
                                         g21_yy_xxxyz, g21_yy_xxxzz, g21_yy_xxyyy,\
                                         g21_yy_xxyyz, g21_yy_xxyzz, g21_yy_xxzzz,\
                                         g21_yy_xyyyy, g21_yy_xyyyz, g21_yy_xyyzz,\
                                         g21_yy_xyzzz, g21_yy_xzzzz, g21_yy_yyyyy,\
                                         g21_yy_yyyyz, g21_yy_yyyzz, g21_yy_yyzzz,\
                                         g21_yy_yzzzz, g21_yy_zzzzz, g21_yz_xxxxx,\
                                         g21_yz_xxxxy, g21_yz_xxxxz, g21_yz_xxxyy,\
                                         g21_yz_xxxyz, g21_yz_xxxzz, g21_yz_xxyyy,\
                                         g21_yz_xxyyz, g21_yz_xxyzz, g21_yz_xxzzz,\
                                         g21_yz_xyyyy, g21_yz_xyyyz, g21_yz_xyyzz,\
                                         g21_yz_xyzzz, g21_yz_xzzzz, g21_yz_yyyyy,\
                                         g21_yz_yyyyz, g21_yz_yyyzz, g21_yz_yyzzz,\
                                         g21_yz_yzzzz, g21_yz_zzzzz, g21_zz_xxxxx,\
                                         g21_zz_xxxxy, g21_zz_xxxxz, g21_zz_xxxyy,\
                                         g21_zz_xxxyz, g21_zz_xxxzz, g21_zz_xxyyy,\
                                         g21_zz_xxyyz, g21_zz_xxyzz, g21_zz_xxzzz,\
                                         g21_zz_xyyyy, g21_zz_xyyyz, g21_zz_xyyzz,\
                                         g21_zz_xyzzz, g21_zz_xzzzz, g21_zz_yyyyy,\
                                         g21_zz_yyyyz, g21_zz_yyyzz, g21_zz_yyzzz,\
                                         g21_zz_yzzzz, g21_zz_zzzzz, g11_xxx_xxxxx,\
                                         g11_xxx_xxxxy, g11_xxx_xxxxz, g11_xxx_xxxyy,\
                                         g11_xxx_xxxyz, g11_xxx_xxxzz, g11_xxx_xxyyy,\
                                         g11_xxx_xxyyz, g11_xxx_xxyzz, g11_xxx_xxzzz,\
                                         g11_xxx_xyyyy, g11_xxx_xyyyz, g11_xxx_xyyzz,\
                                         g11_xxx_xyzzz, g11_xxx_xzzzz, g11_xxx_yyyyy,\
                                         g11_xxx_yyyyz, g11_xxx_yyyzz, g11_xxx_yyzzz,\
                                         g11_xxx_yzzzz, g11_xxx_zzzzz, g11_xxy_xxxxx,\
                                         g11_xxy_xxxxy, g11_xxy_xxxxz, g11_xxy_xxxyy,\
                                         g11_xxy_xxxyz, g11_xxy_xxxzz, g11_xxy_xxyyy,\
                                         g11_xxy_xxyyz, g11_xxy_xxyzz, g11_xxy_xxzzz,\
                                         g11_xxy_xyyyy, g11_xxy_xyyyz, g11_xxy_xyyzz,\
                                         g11_xxy_xyzzz, g11_xxy_xzzzz, g11_xxy_yyyyy,\
                                         g11_xxy_yyyyz, g11_xxy_yyyzz, g11_xxy_yyzzz,\
                                         g11_xxy_yzzzz, g11_xxy_zzzzz, g11_xxz_xxxxx,\
                                         g11_xxz_xxxxy, g11_xxz_xxxxz, g11_xxz_xxxyy,\
                                         g11_xxz_xxxyz, g11_xxz_xxxzz, g11_xxz_xxyyy,\
                                         g11_xxz_xxyyz, g11_xxz_xxyzz, g11_xxz_xxzzz,\
                                         g11_xxz_xyyyy, g11_xxz_xyyyz, g11_xxz_xyyzz,\
                                         g11_xxz_xyzzz, g11_xxz_xzzzz, g11_xxz_yyyyy,\
                                         g11_xxz_yyyyz, g11_xxz_yyyzz, g11_xxz_yyzzz,\
                                         g11_xxz_yzzzz, g11_xxz_zzzzz, g11_xyy_xxxxx,\
                                         g11_xyy_xxxxy, g11_xyy_xxxxz, g11_xyy_xxxyy,\
                                         g11_xyy_xxxyz, g11_xyy_xxxzz, g11_xyy_xxyyy,\
                                         g11_xyy_xxyyz, g11_xyy_xxyzz, g11_xyy_xxzzz,\
                                         g11_xyy_xyyyy, g11_xyy_xyyyz, g11_xyy_xyyzz,\
                                         g11_xyy_xyzzz, g11_xyy_xzzzz, g11_xyy_yyyyy,\
                                         g11_xyy_yyyyz, g11_xyy_yyyzz, g11_xyy_yyzzz,\
                                         g11_xyy_yzzzz, g11_xyy_zzzzz, g11_xyz_xxxxx,\
                                         g11_xyz_xxxxy, g11_xyz_xxxxz, g11_xyz_xxxyy,\
                                         g11_xyz_xxxyz, g11_xyz_xxxzz, g11_xyz_xxyyy,\
                                         g11_xyz_xxyyz, g11_xyz_xxyzz, g11_xyz_xxzzz,\
                                         g11_xyz_xyyyy, g11_xyz_xyyyz, g11_xyz_xyyzz,\
                                         g11_xyz_xyzzz, g11_xyz_xzzzz, g11_xyz_yyyyy,\
                                         g11_xyz_yyyyz, g11_xyz_yyyzz, g11_xyz_yyzzz,\
                                         g11_xyz_yzzzz, g11_xyz_zzzzz, g11_xzz_xxxxx,\
                                         g11_xzz_xxxxy, g11_xzz_xxxxz, g11_xzz_xxxyy,\
                                         g11_xzz_xxxyz, g11_xzz_xxxzz, g11_xzz_xxyyy,\
                                         g11_xzz_xxyyz, g11_xzz_xxyzz, g11_xzz_xxzzz,\
                                         g11_xzz_xyyyy, g11_xzz_xyyyz, g11_xzz_xyyzz,\
                                         g11_xzz_xyzzz, g11_xzz_xzzzz, g11_xzz_yyyyy,\
                                         g11_xzz_yyyyz, g11_xzz_yyyzz, g11_xzz_yyzzz,\
                                         g11_xzz_yzzzz, g11_xzz_zzzzz, g11_yyy_xxxxx,\
                                         g11_yyy_xxxxy, g11_yyy_xxxxz, g11_yyy_xxxyy,\
                                         g11_yyy_xxxyz, g11_yyy_xxxzz, g11_yyy_xxyyy,\
                                         g11_yyy_xxyyz, g11_yyy_xxyzz, g11_yyy_xxzzz,\
                                         g11_yyy_xyyyy, g11_yyy_xyyyz, g11_yyy_xyyzz,\
                                         g11_yyy_xyzzz, g11_yyy_xzzzz, g11_yyy_yyyyy,\
                                         g11_yyy_yyyyz, g11_yyy_yyyzz, g11_yyy_yyzzz,\
                                         g11_yyy_yzzzz, g11_yyy_zzzzz, g11_yyz_xxxxx,\
                                         g11_yyz_xxxxy, g11_yyz_xxxxz, g11_yyz_xxxyy,\
                                         g11_yyz_xxxyz, g11_yyz_xxxzz, g11_yyz_xxyyy,\
                                         g11_yyz_xxyyz, g11_yyz_xxyzz, g11_yyz_xxzzz,\
                                         g11_yyz_xyyyy, g11_yyz_xyyyz, g11_yyz_xyyzz,\
                                         g11_yyz_xyzzz, g11_yyz_xzzzz, g11_yyz_yyyyy,\
                                         g11_yyz_yyyyz, g11_yyz_yyyzz, g11_yyz_yyzzz,\
                                         g11_yyz_yzzzz, g11_yyz_zzzzz, g11_yzz_xxxxx,\
                                         g11_yzz_xxxxy, g11_yzz_xxxxz, g11_yzz_xxxyy,\
                                         g11_yzz_xxxyz, g11_yzz_xxxzz, g11_yzz_xxyyy,\
                                         g11_yzz_xxyyz, g11_yzz_xxyzz, g11_yzz_xxzzz,\
                                         g11_yzz_xyyyy, g11_yzz_xyyyz, g11_yzz_xyyzz,\
                                         g11_yzz_xyzzz, g11_yzz_xzzzz, g11_yzz_yyyyy,\
                                         g11_yzz_yyyyz, g11_yzz_yyyzz, g11_yzz_yyzzz,\
                                         g11_yzz_yzzzz, g11_yzz_zzzzz, g11_zzz_xxxxx,\
                                         g11_zzz_xxxxy, g11_zzz_xxxxz, g11_zzz_xxxyy,\
                                         g11_zzz_xxxyz, g11_zzz_xxxzz, g11_zzz_xxyyy,\
                                         g11_zzz_xxyyz, g11_zzz_xxyzz, g11_zzz_xxzzz,\
                                         g11_zzz_xyyyy, g11_zzz_xyyyz, g11_zzz_xyyzz,\
                                         g11_zzz_xyzzz, g11_zzz_xzzzz, g11_zzz_yyyyy,\
                                         g11_zzz_yyyyz, g11_zzz_yyyzz, g11_zzz_yyzzz,\
                                         g11_zzz_yzzzz, g11_zzz_zzzzz, g_xxxx_xxxxx,\
                                         g_xxxx_xxxxy, g_xxxx_xxxxz, g_xxxx_xxxyy,\
                                         g_xxxx_xxxyz, g_xxxx_xxxzz, g_xxxx_xxyyy,\
                                         g_xxxx_xxyyz, g_xxxx_xxyzz, g_xxxx_xxzzz,\
                                         g_xxxx_xyyyy, g_xxxx_xyyyz, g_xxxx_xyyzz,\
                                         g_xxxx_xyzzz, g_xxxx_xzzzz, g_xxxx_yyyyy,\
                                         g_xxxx_yyyyz, g_xxxx_yyyzz, g_xxxx_yyzzz,\
                                         g_xxxx_yzzzz, g_xxxx_zzzzz, g_xxxy_xxxxx,\
                                         g_xxxy_xxxxy, g_xxxy_xxxxz, g_xxxy_xxxyy,\
                                         g_xxxy_xxxyz, g_xxxy_xxxzz, g_xxxy_xxyyy,\
                                         g_xxxy_xxyyz, g_xxxy_xxyzz, g_xxxy_xxzzz,\
                                         g_xxxy_xyyyy, g_xxxy_xyyyz, g_xxxy_xyyzz,\
                                         g_xxxy_xyzzz, g_xxxy_xzzzz, g_xxxy_yyyyy,\
                                         g_xxxy_yyyyz, g_xxxy_yyyzz, g_xxxy_yyzzz,\
                                         g_xxxy_yzzzz, g_xxxy_zzzzz, g_xxxz_xxxxx,\
                                         g_xxxz_xxxxy, g_xxxz_xxxxz, g_xxxz_xxxyy,\
                                         g_xxxz_xxxyz, g_xxxz_xxxzz, g_xxxz_xxyyy,\
                                         g_xxxz_xxyyz, g_xxxz_xxyzz, g_xxxz_xxzzz,\
                                         g_xxxz_xyyyy, g_xxxz_xyyyz, g_xxxz_xyyzz,\
                                         g_xxxz_xyzzz, g_xxxz_xzzzz, g_xxxz_yyyyy,\
                                         g_xxxz_yyyyz, g_xxxz_yyyzz, g_xxxz_yyzzz,\
                                         g_xxxz_yzzzz, g_xxxz_zzzzz, g_xxyy_xxxxx,\
                                         g_xxyy_xxxxy, g_xxyy_xxxxz, g_xxyy_xxxyy,\
                                         g_xxyy_xxxyz, g_xxyy_xxxzz, g_xxyy_xxyyy,\
                                         g_xxyy_xxyyz, g_xxyy_xxyzz, g_xxyy_xxzzz,\
                                         g_xxyy_xyyyy, g_xxyy_xyyyz, g_xxyy_xyyzz,\
                                         g_xxyy_xyzzz, g_xxyy_xzzzz, g_xxyy_yyyyy,\
                                         g_xxyy_yyyyz, g_xxyy_yyyzz, g_xxyy_yyzzz,\
                                         g_xxyy_yzzzz, g_xxyy_zzzzz, g_xxyz_xxxxx,\
                                         g_xxyz_xxxxy, g_xxyz_xxxxz, g_xxyz_xxxyy,\
                                         g_xxyz_xxxyz, g_xxyz_xxxzz, g_xxyz_xxyyy,\
                                         g_xxyz_xxyyz, g_xxyz_xxyzz, g_xxyz_xxzzz,\
                                         g_xxyz_xyyyy, g_xxyz_xyyyz, g_xxyz_xyyzz,\
                                         g_xxyz_xyzzz, g_xxyz_xzzzz, g_xxyz_yyyyy,\
                                         g_xxyz_yyyyz, g_xxyz_yyyzz, g_xxyz_yyzzz,\
                                         g_xxyz_yzzzz, g_xxyz_zzzzz, g_xxzz_xxxxx,\
                                         g_xxzz_xxxxy, g_xxzz_xxxxz, g_xxzz_xxxyy,\
                                         g_xxzz_xxxyz, g_xxzz_xxxzz, g_xxzz_xxyyy,\
                                         g_xxzz_xxyyz, g_xxzz_xxyzz, g_xxzz_xxzzz,\
                                         g_xxzz_xyyyy, g_xxzz_xyyyz, g_xxzz_xyyzz,\
                                         g_xxzz_xyzzz, g_xxzz_xzzzz, g_xxzz_yyyyy,\
                                         g_xxzz_yyyyz, g_xxzz_yyyzz, g_xxzz_yyzzz,\
                                         g_xxzz_yzzzz, g_xxzz_zzzzz, g_xyyy_xxxxx,\
                                         g_xyyy_xxxxy, g_xyyy_xxxxz, g_xyyy_xxxyy,\
                                         g_xyyy_xxxyz, g_xyyy_xxxzz, g_xyyy_xxyyy,\
                                         g_xyyy_xxyyz, g_xyyy_xxyzz, g_xyyy_xxzzz,\
                                         g_xyyy_xyyyy, g_xyyy_xyyyz, g_xyyy_xyyzz,\
                                         g_xyyy_xyzzz, g_xyyy_xzzzz, g_xyyy_yyyyy,\
                                         g_xyyy_yyyyz, g_xyyy_yyyzz, g_xyyy_yyzzz,\
                                         g_xyyy_yzzzz, g_xyyy_zzzzz, g_xyyz_xxxxx,\
                                         g_xyyz_xxxxy, g_xyyz_xxxxz, g_xyyz_xxxyy,\
                                         g_xyyz_xxxyz, g_xyyz_xxxzz, g_xyyz_xxyyy,\
                                         g_xyyz_xxyyz, g_xyyz_xxyzz, g_xyyz_xxzzz,\
                                         g_xyyz_xyyyy, g_xyyz_xyyyz, g_xyyz_xyyzz,\
                                         g_xyyz_xyzzz, g_xyyz_xzzzz, g_xyyz_yyyyy,\
                                         g_xyyz_yyyyz, g_xyyz_yyyzz, g_xyyz_yyzzz,\
                                         g_xyyz_yzzzz, g_xyyz_zzzzz, g_xyzz_xxxxx,\
                                         g_xyzz_xxxxy, g_xyzz_xxxxz, g_xyzz_xxxyy,\
                                         g_xyzz_xxxyz, g_xyzz_xxxzz, g_xyzz_xxyyy,\
                                         g_xyzz_xxyyz, g_xyzz_xxyzz, g_xyzz_xxzzz,\
                                         g_xyzz_xyyyy, g_xyzz_xyyyz, g_xyzz_xyyzz,\
                                         g_xyzz_xyzzz, g_xyzz_xzzzz, g_xyzz_yyyyy,\
                                         g_xyzz_yyyyz, g_xyzz_yyyzz, g_xyzz_yyzzz,\
                                         g_xyzz_yzzzz, g_xyzz_zzzzz, g_xzzz_xxxxx,\
                                         g_xzzz_xxxxy, g_xzzz_xxxxz, g_xzzz_xxxyy,\
                                         g_xzzz_xxxyz, g_xzzz_xxxzz, g_xzzz_xxyyy,\
                                         g_xzzz_xxyyz, g_xzzz_xxyzz, g_xzzz_xxzzz,\
                                         g_xzzz_xyyyy, g_xzzz_xyyyz, g_xzzz_xyyzz,\
                                         g_xzzz_xyzzz, g_xzzz_xzzzz, g_xzzz_yyyyy,\
                                         g_xzzz_yyyyz, g_xzzz_yyyzz, g_xzzz_yyzzz,\
                                         g_xzzz_yzzzz, g_xzzz_zzzzz, g_yyyy_xxxxx,\
                                         g_yyyy_xxxxy, g_yyyy_xxxxz, g_yyyy_xxxyy,\
                                         g_yyyy_xxxyz, g_yyyy_xxxzz, g_yyyy_xxyyy,\
                                         g_yyyy_xxyyz, g_yyyy_xxyzz, g_yyyy_xxzzz,\
                                         g_yyyy_xyyyy, g_yyyy_xyyyz, g_yyyy_xyyzz,\
                                         g_yyyy_xyzzz, g_yyyy_xzzzz, g_yyyy_yyyyy,\
                                         g_yyyy_yyyyz, g_yyyy_yyyzz, g_yyyy_yyzzz,\
                                         g_yyyy_yzzzz, g_yyyy_zzzzz, g_yyyz_xxxxx,\
                                         g_yyyz_xxxxy, g_yyyz_xxxxz, g_yyyz_xxxyy,\
                                         g_yyyz_xxxyz, g_yyyz_xxxzz, g_yyyz_xxyyy,\
                                         g_yyyz_xxyyz, g_yyyz_xxyzz, g_yyyz_xxzzz,\
                                         g_yyyz_xyyyy, g_yyyz_xyyyz, g_yyyz_xyyzz,\
                                         g_yyyz_xyzzz, g_yyyz_xzzzz, g_yyyz_yyyyy,\
                                         g_yyyz_yyyyz, g_yyyz_yyyzz, g_yyyz_yyzzz,\
                                         g_yyyz_yzzzz, g_yyyz_zzzzz, g_yyzz_xxxxx,\
                                         g_yyzz_xxxxy, g_yyzz_xxxxz, g_yyzz_xxxyy,\
                                         g_yyzz_xxxyz, g_yyzz_xxxzz, g_yyzz_xxyyy,\
                                         g_yyzz_xxyyz, g_yyzz_xxyzz, g_yyzz_xxzzz,\
                                         g_yyzz_xyyyy, g_yyzz_xyyyz, g_yyzz_xyyzz,\
                                         g_yyzz_xyzzz, g_yyzz_xzzzz, g_yyzz_yyyyy,\
                                         g_yyzz_yyyyz, g_yyzz_yyyzz, g_yyzz_yyzzz,\
                                         g_yyzz_yzzzz, g_yyzz_zzzzz, g_yzzz_xxxxx,\
                                         g_yzzz_xxxxy, g_yzzz_xxxxz, g_yzzz_xxxyy,\
                                         g_yzzz_xxxyz, g_yzzz_xxxzz, g_yzzz_xxyyy,\
                                         g_yzzz_xxyyz, g_yzzz_xxyzz, g_yzzz_xxzzz,\
                                         g_yzzz_xyyyy, g_yzzz_xyyyz, g_yzzz_xyyzz,\
                                         g_yzzz_xyzzz, g_yzzz_xzzzz, g_yzzz_yyyyy,\
                                         g_yzzz_yyyyz, g_yzzz_yyyzz, g_yzzz_yyzzz,\
                                         g_yzzz_yzzzz, g_yzzz_zzzzz, g_zzzz_xxxxx,\
                                         g_zzzz_xxxxy, g_zzzz_xxxxz, g_zzzz_xxxyy,\
                                         g_zzzz_xxxyz, g_zzzz_xxxzz, g_zzzz_xxyyy,\
                                         g_zzzz_xxyyz, g_zzzz_xxyzz, g_zzzz_xxzzz,\
                                         g_zzzz_xyyyy, g_zzzz_xyyyz, g_zzzz_xyyzz,\
                                         g_zzzz_xyzzz, g_zzzz_xzzzz, g_zzzz_yyyyy,\
                                         g_zzzz_yyyyz, g_zzzz_yyyzz, g_zzzz_yyzzz,\
                                         g_zzzz_yzzzz, g_zzzz_zzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxxxx[k] = fr * g11_xxx_xxxxx[k] + f2g * (3.0 * g20_xx_xxxxx[k] - 3.0 * fgz * g21_xx_xxxxx[k]) + 5.0 * f2t * gk_xxx_xxxx[k];

                    g_xxxx_xxxxy[k] = fr * g11_xxx_xxxxy[k] + f2g * (3.0 * g20_xx_xxxxy[k] - 3.0 * fgz * g21_xx_xxxxy[k]) + 4.0 * f2t * gk_xxx_xxxy[k];

                    g_xxxx_xxxxz[k] = fr * g11_xxx_xxxxz[k] + f2g * (3.0 * g20_xx_xxxxz[k] - 3.0 * fgz * g21_xx_xxxxz[k]) + 4.0 * f2t * gk_xxx_xxxz[k];

                    g_xxxx_xxxyy[k] = fr * g11_xxx_xxxyy[k] + f2g * (3.0 * g20_xx_xxxyy[k] - 3.0 * fgz * g21_xx_xxxyy[k]) + 3.0 * f2t * gk_xxx_xxyy[k];

                    g_xxxx_xxxyz[k] = fr * g11_xxx_xxxyz[k] + f2g * (3.0 * g20_xx_xxxyz[k] - 3.0 * fgz * g21_xx_xxxyz[k]) + 3.0 * f2t * gk_xxx_xxyz[k];

                    g_xxxx_xxxzz[k] = fr * g11_xxx_xxxzz[k] + f2g * (3.0 * g20_xx_xxxzz[k] - 3.0 * fgz * g21_xx_xxxzz[k]) + 3.0 * f2t * gk_xxx_xxzz[k];

                    g_xxxx_xxyyy[k] = fr * g11_xxx_xxyyy[k] + f2g * (3.0 * g20_xx_xxyyy[k] - 3.0 * fgz * g21_xx_xxyyy[k]) + 2.0 * f2t * gk_xxx_xyyy[k];

                    g_xxxx_xxyyz[k] = fr * g11_xxx_xxyyz[k] + f2g * (3.0 * g20_xx_xxyyz[k] - 3.0 * fgz * g21_xx_xxyyz[k]) + 2.0 * f2t * gk_xxx_xyyz[k];

                    g_xxxx_xxyzz[k] = fr * g11_xxx_xxyzz[k] + f2g * (3.0 * g20_xx_xxyzz[k] - 3.0 * fgz * g21_xx_xxyzz[k]) + 2.0 * f2t * gk_xxx_xyzz[k];

                    g_xxxx_xxzzz[k] = fr * g11_xxx_xxzzz[k] + f2g * (3.0 * g20_xx_xxzzz[k] - 3.0 * fgz * g21_xx_xxzzz[k]) + 2.0 * f2t * gk_xxx_xzzz[k];

                    g_xxxx_xyyyy[k] = fr * g11_xxx_xyyyy[k] + f2g * (3.0 * g20_xx_xyyyy[k] - 3.0 * fgz * g21_xx_xyyyy[k]) + f2t * gk_xxx_yyyy[k];

                    g_xxxx_xyyyz[k] = fr * g11_xxx_xyyyz[k] + f2g * (3.0 * g20_xx_xyyyz[k] - 3.0 * fgz * g21_xx_xyyyz[k]) + f2t * gk_xxx_yyyz[k];

                    g_xxxx_xyyzz[k] = fr * g11_xxx_xyyzz[k] + f2g * (3.0 * g20_xx_xyyzz[k] - 3.0 * fgz * g21_xx_xyyzz[k]) + f2t * gk_xxx_yyzz[k];

                    g_xxxx_xyzzz[k] = fr * g11_xxx_xyzzz[k] + f2g * (3.0 * g20_xx_xyzzz[k] - 3.0 * fgz * g21_xx_xyzzz[k]) + f2t * gk_xxx_yzzz[k];

                    g_xxxx_xzzzz[k] = fr * g11_xxx_xzzzz[k] + f2g * (3.0 * g20_xx_xzzzz[k] - 3.0 * fgz * g21_xx_xzzzz[k]) + f2t * gk_xxx_zzzz[k];

                    g_xxxx_yyyyy[k] = fr * g11_xxx_yyyyy[k] + f2g * (3.0 * g20_xx_yyyyy[k] - 3.0 * fgz * g21_xx_yyyyy[k]);

                    g_xxxx_yyyyz[k] = fr * g11_xxx_yyyyz[k] + f2g * (3.0 * g20_xx_yyyyz[k] - 3.0 * fgz * g21_xx_yyyyz[k]);

                    g_xxxx_yyyzz[k] = fr * g11_xxx_yyyzz[k] + f2g * (3.0 * g20_xx_yyyzz[k] - 3.0 * fgz * g21_xx_yyyzz[k]);

                    g_xxxx_yyzzz[k] = fr * g11_xxx_yyzzz[k] + f2g * (3.0 * g20_xx_yyzzz[k] - 3.0 * fgz * g21_xx_yyzzz[k]);

                    g_xxxx_yzzzz[k] = fr * g11_xxx_yzzzz[k] + f2g * (3.0 * g20_xx_yzzzz[k] - 3.0 * fgz * g21_xx_yzzzz[k]);

                    g_xxxx_zzzzz[k] = fr * g11_xxx_zzzzz[k] + f2g * (3.0 * g20_xx_zzzzz[k] - 3.0 * fgz * g21_xx_zzzzz[k]);

                    g_xxxy_xxxxx[k] = fr * g11_xxy_xxxxx[k] + f2g * (2.0 * g20_xy_xxxxx[k] - 2.0 * fgz * g21_xy_xxxxx[k]) + 5.0 * f2t * gk_xxy_xxxx[k];

                    g_xxxy_xxxxy[k] = fr * g11_xxy_xxxxy[k] + f2g * (2.0 * g20_xy_xxxxy[k] - 2.0 * fgz * g21_xy_xxxxy[k]) + 4.0 * f2t * gk_xxy_xxxy[k];

                    g_xxxy_xxxxz[k] = fr * g11_xxy_xxxxz[k] + f2g * (2.0 * g20_xy_xxxxz[k] - 2.0 * fgz * g21_xy_xxxxz[k]) + 4.0 * f2t * gk_xxy_xxxz[k];

                    g_xxxy_xxxyy[k] = fr * g11_xxy_xxxyy[k] + f2g * (2.0 * g20_xy_xxxyy[k] - 2.0 * fgz * g21_xy_xxxyy[k]) + 3.0 * f2t * gk_xxy_xxyy[k];

                    g_xxxy_xxxyz[k] = fr * g11_xxy_xxxyz[k] + f2g * (2.0 * g20_xy_xxxyz[k] - 2.0 * fgz * g21_xy_xxxyz[k]) + 3.0 * f2t * gk_xxy_xxyz[k];

                    g_xxxy_xxxzz[k] = fr * g11_xxy_xxxzz[k] + f2g * (2.0 * g20_xy_xxxzz[k] - 2.0 * fgz * g21_xy_xxxzz[k]) + 3.0 * f2t * gk_xxy_xxzz[k];

                    g_xxxy_xxyyy[k] = fr * g11_xxy_xxyyy[k] + f2g * (2.0 * g20_xy_xxyyy[k] - 2.0 * fgz * g21_xy_xxyyy[k]) + 2.0 * f2t * gk_xxy_xyyy[k];

                    g_xxxy_xxyyz[k] = fr * g11_xxy_xxyyz[k] + f2g * (2.0 * g20_xy_xxyyz[k] - 2.0 * fgz * g21_xy_xxyyz[k]) + 2.0 * f2t * gk_xxy_xyyz[k];

                    g_xxxy_xxyzz[k] = fr * g11_xxy_xxyzz[k] + f2g * (2.0 * g20_xy_xxyzz[k] - 2.0 * fgz * g21_xy_xxyzz[k]) + 2.0 * f2t * gk_xxy_xyzz[k];

                    g_xxxy_xxzzz[k] = fr * g11_xxy_xxzzz[k] + f2g * (2.0 * g20_xy_xxzzz[k] - 2.0 * fgz * g21_xy_xxzzz[k]) + 2.0 * f2t * gk_xxy_xzzz[k];

                    g_xxxy_xyyyy[k] = fr * g11_xxy_xyyyy[k] + f2g * (2.0 * g20_xy_xyyyy[k] - 2.0 * fgz * g21_xy_xyyyy[k]) + f2t * gk_xxy_yyyy[k];

                    g_xxxy_xyyyz[k] = fr * g11_xxy_xyyyz[k] + f2g * (2.0 * g20_xy_xyyyz[k] - 2.0 * fgz * g21_xy_xyyyz[k]) + f2t * gk_xxy_yyyz[k];

                    g_xxxy_xyyzz[k] = fr * g11_xxy_xyyzz[k] + f2g * (2.0 * g20_xy_xyyzz[k] - 2.0 * fgz * g21_xy_xyyzz[k]) + f2t * gk_xxy_yyzz[k];

                    g_xxxy_xyzzz[k] = fr * g11_xxy_xyzzz[k] + f2g * (2.0 * g20_xy_xyzzz[k] - 2.0 * fgz * g21_xy_xyzzz[k]) + f2t * gk_xxy_yzzz[k];

                    g_xxxy_xzzzz[k] = fr * g11_xxy_xzzzz[k] + f2g * (2.0 * g20_xy_xzzzz[k] - 2.0 * fgz * g21_xy_xzzzz[k]) + f2t * gk_xxy_zzzz[k];

                    g_xxxy_yyyyy[k] = fr * g11_xxy_yyyyy[k] + f2g * (2.0 * g20_xy_yyyyy[k] - 2.0 * fgz * g21_xy_yyyyy[k]);

                    g_xxxy_yyyyz[k] = fr * g11_xxy_yyyyz[k] + f2g * (2.0 * g20_xy_yyyyz[k] - 2.0 * fgz * g21_xy_yyyyz[k]);

                    g_xxxy_yyyzz[k] = fr * g11_xxy_yyyzz[k] + f2g * (2.0 * g20_xy_yyyzz[k] - 2.0 * fgz * g21_xy_yyyzz[k]);

                    g_xxxy_yyzzz[k] = fr * g11_xxy_yyzzz[k] + f2g * (2.0 * g20_xy_yyzzz[k] - 2.0 * fgz * g21_xy_yyzzz[k]);

                    g_xxxy_yzzzz[k] = fr * g11_xxy_yzzzz[k] + f2g * (2.0 * g20_xy_yzzzz[k] - 2.0 * fgz * g21_xy_yzzzz[k]);

                    g_xxxy_zzzzz[k] = fr * g11_xxy_zzzzz[k] + f2g * (2.0 * g20_xy_zzzzz[k] - 2.0 * fgz * g21_xy_zzzzz[k]);

                    g_xxxz_xxxxx[k] = fr * g11_xxz_xxxxx[k] + f2g * (2.0 * g20_xz_xxxxx[k] - 2.0 * fgz * g21_xz_xxxxx[k]) + 5.0 * f2t * gk_xxz_xxxx[k];

                    g_xxxz_xxxxy[k] = fr * g11_xxz_xxxxy[k] + f2g * (2.0 * g20_xz_xxxxy[k] - 2.0 * fgz * g21_xz_xxxxy[k]) + 4.0 * f2t * gk_xxz_xxxy[k];

                    g_xxxz_xxxxz[k] = fr * g11_xxz_xxxxz[k] + f2g * (2.0 * g20_xz_xxxxz[k] - 2.0 * fgz * g21_xz_xxxxz[k]) + 4.0 * f2t * gk_xxz_xxxz[k];

                    g_xxxz_xxxyy[k] = fr * g11_xxz_xxxyy[k] + f2g * (2.0 * g20_xz_xxxyy[k] - 2.0 * fgz * g21_xz_xxxyy[k]) + 3.0 * f2t * gk_xxz_xxyy[k];

                    g_xxxz_xxxyz[k] = fr * g11_xxz_xxxyz[k] + f2g * (2.0 * g20_xz_xxxyz[k] - 2.0 * fgz * g21_xz_xxxyz[k]) + 3.0 * f2t * gk_xxz_xxyz[k];

                    g_xxxz_xxxzz[k] = fr * g11_xxz_xxxzz[k] + f2g * (2.0 * g20_xz_xxxzz[k] - 2.0 * fgz * g21_xz_xxxzz[k]) + 3.0 * f2t * gk_xxz_xxzz[k];

                    g_xxxz_xxyyy[k] = fr * g11_xxz_xxyyy[k] + f2g * (2.0 * g20_xz_xxyyy[k] - 2.0 * fgz * g21_xz_xxyyy[k]) + 2.0 * f2t * gk_xxz_xyyy[k];

                    g_xxxz_xxyyz[k] = fr * g11_xxz_xxyyz[k] + f2g * (2.0 * g20_xz_xxyyz[k] - 2.0 * fgz * g21_xz_xxyyz[k]) + 2.0 * f2t * gk_xxz_xyyz[k];

                    g_xxxz_xxyzz[k] = fr * g11_xxz_xxyzz[k] + f2g * (2.0 * g20_xz_xxyzz[k] - 2.0 * fgz * g21_xz_xxyzz[k]) + 2.0 * f2t * gk_xxz_xyzz[k];

                    g_xxxz_xxzzz[k] = fr * g11_xxz_xxzzz[k] + f2g * (2.0 * g20_xz_xxzzz[k] - 2.0 * fgz * g21_xz_xxzzz[k]) + 2.0 * f2t * gk_xxz_xzzz[k];

                    g_xxxz_xyyyy[k] = fr * g11_xxz_xyyyy[k] + f2g * (2.0 * g20_xz_xyyyy[k] - 2.0 * fgz * g21_xz_xyyyy[k]) + f2t * gk_xxz_yyyy[k];

                    g_xxxz_xyyyz[k] = fr * g11_xxz_xyyyz[k] + f2g * (2.0 * g20_xz_xyyyz[k] - 2.0 * fgz * g21_xz_xyyyz[k]) + f2t * gk_xxz_yyyz[k];

                    g_xxxz_xyyzz[k] = fr * g11_xxz_xyyzz[k] + f2g * (2.0 * g20_xz_xyyzz[k] - 2.0 * fgz * g21_xz_xyyzz[k]) + f2t * gk_xxz_yyzz[k];

                    g_xxxz_xyzzz[k] = fr * g11_xxz_xyzzz[k] + f2g * (2.0 * g20_xz_xyzzz[k] - 2.0 * fgz * g21_xz_xyzzz[k]) + f2t * gk_xxz_yzzz[k];

                    g_xxxz_xzzzz[k] = fr * g11_xxz_xzzzz[k] + f2g * (2.0 * g20_xz_xzzzz[k] - 2.0 * fgz * g21_xz_xzzzz[k]) + f2t * gk_xxz_zzzz[k];

                    g_xxxz_yyyyy[k] = fr * g11_xxz_yyyyy[k] + f2g * (2.0 * g20_xz_yyyyy[k] - 2.0 * fgz * g21_xz_yyyyy[k]);

                    g_xxxz_yyyyz[k] = fr * g11_xxz_yyyyz[k] + f2g * (2.0 * g20_xz_yyyyz[k] - 2.0 * fgz * g21_xz_yyyyz[k]);

                    g_xxxz_yyyzz[k] = fr * g11_xxz_yyyzz[k] + f2g * (2.0 * g20_xz_yyyzz[k] - 2.0 * fgz * g21_xz_yyyzz[k]);

                    g_xxxz_yyzzz[k] = fr * g11_xxz_yyzzz[k] + f2g * (2.0 * g20_xz_yyzzz[k] - 2.0 * fgz * g21_xz_yyzzz[k]);

                    g_xxxz_yzzzz[k] = fr * g11_xxz_yzzzz[k] + f2g * (2.0 * g20_xz_yzzzz[k] - 2.0 * fgz * g21_xz_yzzzz[k]);

                    g_xxxz_zzzzz[k] = fr * g11_xxz_zzzzz[k] + f2g * (2.0 * g20_xz_zzzzz[k] - 2.0 * fgz * g21_xz_zzzzz[k]);

                    g_xxyy_xxxxx[k] = fr * g11_xyy_xxxxx[k] + f2g * (g20_yy_xxxxx[k] - fgz * g21_yy_xxxxx[k]) + 5.0 * f2t * gk_xyy_xxxx[k];

                    g_xxyy_xxxxy[k] = fr * g11_xyy_xxxxy[k] + f2g * (g20_yy_xxxxy[k] - fgz * g21_yy_xxxxy[k]) + 4.0 * f2t * gk_xyy_xxxy[k];

                    g_xxyy_xxxxz[k] = fr * g11_xyy_xxxxz[k] + f2g * (g20_yy_xxxxz[k] - fgz * g21_yy_xxxxz[k]) + 4.0 * f2t * gk_xyy_xxxz[k];

                    g_xxyy_xxxyy[k] = fr * g11_xyy_xxxyy[k] + f2g * (g20_yy_xxxyy[k] - fgz * g21_yy_xxxyy[k]) + 3.0 * f2t * gk_xyy_xxyy[k];

                    g_xxyy_xxxyz[k] = fr * g11_xyy_xxxyz[k] + f2g * (g20_yy_xxxyz[k] - fgz * g21_yy_xxxyz[k]) + 3.0 * f2t * gk_xyy_xxyz[k];

                    g_xxyy_xxxzz[k] = fr * g11_xyy_xxxzz[k] + f2g * (g20_yy_xxxzz[k] - fgz * g21_yy_xxxzz[k]) + 3.0 * f2t * gk_xyy_xxzz[k];

                    g_xxyy_xxyyy[k] = fr * g11_xyy_xxyyy[k] + f2g * (g20_yy_xxyyy[k] - fgz * g21_yy_xxyyy[k]) + 2.0 * f2t * gk_xyy_xyyy[k];

                    g_xxyy_xxyyz[k] = fr * g11_xyy_xxyyz[k] + f2g * (g20_yy_xxyyz[k] - fgz * g21_yy_xxyyz[k]) + 2.0 * f2t * gk_xyy_xyyz[k];

                    g_xxyy_xxyzz[k] = fr * g11_xyy_xxyzz[k] + f2g * (g20_yy_xxyzz[k] - fgz * g21_yy_xxyzz[k]) + 2.0 * f2t * gk_xyy_xyzz[k];

                    g_xxyy_xxzzz[k] = fr * g11_xyy_xxzzz[k] + f2g * (g20_yy_xxzzz[k] - fgz * g21_yy_xxzzz[k]) + 2.0 * f2t * gk_xyy_xzzz[k];

                    g_xxyy_xyyyy[k] = fr * g11_xyy_xyyyy[k] + f2g * (g20_yy_xyyyy[k] - fgz * g21_yy_xyyyy[k]) + f2t * gk_xyy_yyyy[k];

                    g_xxyy_xyyyz[k] = fr * g11_xyy_xyyyz[k] + f2g * (g20_yy_xyyyz[k] - fgz * g21_yy_xyyyz[k]) + f2t * gk_xyy_yyyz[k];

                    g_xxyy_xyyzz[k] = fr * g11_xyy_xyyzz[k] + f2g * (g20_yy_xyyzz[k] - fgz * g21_yy_xyyzz[k]) + f2t * gk_xyy_yyzz[k];

                    g_xxyy_xyzzz[k] = fr * g11_xyy_xyzzz[k] + f2g * (g20_yy_xyzzz[k] - fgz * g21_yy_xyzzz[k]) + f2t * gk_xyy_yzzz[k];

                    g_xxyy_xzzzz[k] = fr * g11_xyy_xzzzz[k] + f2g * (g20_yy_xzzzz[k] - fgz * g21_yy_xzzzz[k]) + f2t * gk_xyy_zzzz[k];

                    g_xxyy_yyyyy[k] = fr * g11_xyy_yyyyy[k] + f2g * (g20_yy_yyyyy[k] - fgz * g21_yy_yyyyy[k]);

                    g_xxyy_yyyyz[k] = fr * g11_xyy_yyyyz[k] + f2g * (g20_yy_yyyyz[k] - fgz * g21_yy_yyyyz[k]);

                    g_xxyy_yyyzz[k] = fr * g11_xyy_yyyzz[k] + f2g * (g20_yy_yyyzz[k] - fgz * g21_yy_yyyzz[k]);

                    g_xxyy_yyzzz[k] = fr * g11_xyy_yyzzz[k] + f2g * (g20_yy_yyzzz[k] - fgz * g21_yy_yyzzz[k]);

                    g_xxyy_yzzzz[k] = fr * g11_xyy_yzzzz[k] + f2g * (g20_yy_yzzzz[k] - fgz * g21_yy_yzzzz[k]);

                    g_xxyy_zzzzz[k] = fr * g11_xyy_zzzzz[k] + f2g * (g20_yy_zzzzz[k] - fgz * g21_yy_zzzzz[k]);

                    g_xxyz_xxxxx[k] = fr * g11_xyz_xxxxx[k] + f2g * (g20_yz_xxxxx[k] - fgz * g21_yz_xxxxx[k]) + 5.0 * f2t * gk_xyz_xxxx[k];

                    g_xxyz_xxxxy[k] = fr * g11_xyz_xxxxy[k] + f2g * (g20_yz_xxxxy[k] - fgz * g21_yz_xxxxy[k]) + 4.0 * f2t * gk_xyz_xxxy[k];

                    g_xxyz_xxxxz[k] = fr * g11_xyz_xxxxz[k] + f2g * (g20_yz_xxxxz[k] - fgz * g21_yz_xxxxz[k]) + 4.0 * f2t * gk_xyz_xxxz[k];

                    g_xxyz_xxxyy[k] = fr * g11_xyz_xxxyy[k] + f2g * (g20_yz_xxxyy[k] - fgz * g21_yz_xxxyy[k]) + 3.0 * f2t * gk_xyz_xxyy[k];

                    g_xxyz_xxxyz[k] = fr * g11_xyz_xxxyz[k] + f2g * (g20_yz_xxxyz[k] - fgz * g21_yz_xxxyz[k]) + 3.0 * f2t * gk_xyz_xxyz[k];

                    g_xxyz_xxxzz[k] = fr * g11_xyz_xxxzz[k] + f2g * (g20_yz_xxxzz[k] - fgz * g21_yz_xxxzz[k]) + 3.0 * f2t * gk_xyz_xxzz[k];

                    g_xxyz_xxyyy[k] = fr * g11_xyz_xxyyy[k] + f2g * (g20_yz_xxyyy[k] - fgz * g21_yz_xxyyy[k]) + 2.0 * f2t * gk_xyz_xyyy[k];

                    g_xxyz_xxyyz[k] = fr * g11_xyz_xxyyz[k] + f2g * (g20_yz_xxyyz[k] - fgz * g21_yz_xxyyz[k]) + 2.0 * f2t * gk_xyz_xyyz[k];

                    g_xxyz_xxyzz[k] = fr * g11_xyz_xxyzz[k] + f2g * (g20_yz_xxyzz[k] - fgz * g21_yz_xxyzz[k]) + 2.0 * f2t * gk_xyz_xyzz[k];

                    g_xxyz_xxzzz[k] = fr * g11_xyz_xxzzz[k] + f2g * (g20_yz_xxzzz[k] - fgz * g21_yz_xxzzz[k]) + 2.0 * f2t * gk_xyz_xzzz[k];

                    g_xxyz_xyyyy[k] = fr * g11_xyz_xyyyy[k] + f2g * (g20_yz_xyyyy[k] - fgz * g21_yz_xyyyy[k]) + f2t * gk_xyz_yyyy[k];

                    g_xxyz_xyyyz[k] = fr * g11_xyz_xyyyz[k] + f2g * (g20_yz_xyyyz[k] - fgz * g21_yz_xyyyz[k]) + f2t * gk_xyz_yyyz[k];

                    g_xxyz_xyyzz[k] = fr * g11_xyz_xyyzz[k] + f2g * (g20_yz_xyyzz[k] - fgz * g21_yz_xyyzz[k]) + f2t * gk_xyz_yyzz[k];

                    g_xxyz_xyzzz[k] = fr * g11_xyz_xyzzz[k] + f2g * (g20_yz_xyzzz[k] - fgz * g21_yz_xyzzz[k]) + f2t * gk_xyz_yzzz[k];

                    g_xxyz_xzzzz[k] = fr * g11_xyz_xzzzz[k] + f2g * (g20_yz_xzzzz[k] - fgz * g21_yz_xzzzz[k]) + f2t * gk_xyz_zzzz[k];

                    g_xxyz_yyyyy[k] = fr * g11_xyz_yyyyy[k] + f2g * (g20_yz_yyyyy[k] - fgz * g21_yz_yyyyy[k]);

                    g_xxyz_yyyyz[k] = fr * g11_xyz_yyyyz[k] + f2g * (g20_yz_yyyyz[k] - fgz * g21_yz_yyyyz[k]);

                    g_xxyz_yyyzz[k] = fr * g11_xyz_yyyzz[k] + f2g * (g20_yz_yyyzz[k] - fgz * g21_yz_yyyzz[k]);

                    g_xxyz_yyzzz[k] = fr * g11_xyz_yyzzz[k] + f2g * (g20_yz_yyzzz[k] - fgz * g21_yz_yyzzz[k]);

                    g_xxyz_yzzzz[k] = fr * g11_xyz_yzzzz[k] + f2g * (g20_yz_yzzzz[k] - fgz * g21_yz_yzzzz[k]);

                    g_xxyz_zzzzz[k] = fr * g11_xyz_zzzzz[k] + f2g * (g20_yz_zzzzz[k] - fgz * g21_yz_zzzzz[k]);

                    g_xxzz_xxxxx[k] = fr * g11_xzz_xxxxx[k] + f2g * (g20_zz_xxxxx[k] - fgz * g21_zz_xxxxx[k]) + 5.0 * f2t * gk_xzz_xxxx[k];

                    g_xxzz_xxxxy[k] = fr * g11_xzz_xxxxy[k] + f2g * (g20_zz_xxxxy[k] - fgz * g21_zz_xxxxy[k]) + 4.0 * f2t * gk_xzz_xxxy[k];

                    g_xxzz_xxxxz[k] = fr * g11_xzz_xxxxz[k] + f2g * (g20_zz_xxxxz[k] - fgz * g21_zz_xxxxz[k]) + 4.0 * f2t * gk_xzz_xxxz[k];

                    g_xxzz_xxxyy[k] = fr * g11_xzz_xxxyy[k] + f2g * (g20_zz_xxxyy[k] - fgz * g21_zz_xxxyy[k]) + 3.0 * f2t * gk_xzz_xxyy[k];

                    g_xxzz_xxxyz[k] = fr * g11_xzz_xxxyz[k] + f2g * (g20_zz_xxxyz[k] - fgz * g21_zz_xxxyz[k]) + 3.0 * f2t * gk_xzz_xxyz[k];

                    g_xxzz_xxxzz[k] = fr * g11_xzz_xxxzz[k] + f2g * (g20_zz_xxxzz[k] - fgz * g21_zz_xxxzz[k]) + 3.0 * f2t * gk_xzz_xxzz[k];

                    g_xxzz_xxyyy[k] = fr * g11_xzz_xxyyy[k] + f2g * (g20_zz_xxyyy[k] - fgz * g21_zz_xxyyy[k]) + 2.0 * f2t * gk_xzz_xyyy[k];

                    g_xxzz_xxyyz[k] = fr * g11_xzz_xxyyz[k] + f2g * (g20_zz_xxyyz[k] - fgz * g21_zz_xxyyz[k]) + 2.0 * f2t * gk_xzz_xyyz[k];

                    g_xxzz_xxyzz[k] = fr * g11_xzz_xxyzz[k] + f2g * (g20_zz_xxyzz[k] - fgz * g21_zz_xxyzz[k]) + 2.0 * f2t * gk_xzz_xyzz[k];

                    g_xxzz_xxzzz[k] = fr * g11_xzz_xxzzz[k] + f2g * (g20_zz_xxzzz[k] - fgz * g21_zz_xxzzz[k]) + 2.0 * f2t * gk_xzz_xzzz[k];

                    g_xxzz_xyyyy[k] = fr * g11_xzz_xyyyy[k] + f2g * (g20_zz_xyyyy[k] - fgz * g21_zz_xyyyy[k]) + f2t * gk_xzz_yyyy[k];

                    g_xxzz_xyyyz[k] = fr * g11_xzz_xyyyz[k] + f2g * (g20_zz_xyyyz[k] - fgz * g21_zz_xyyyz[k]) + f2t * gk_xzz_yyyz[k];

                    g_xxzz_xyyzz[k] = fr * g11_xzz_xyyzz[k] + f2g * (g20_zz_xyyzz[k] - fgz * g21_zz_xyyzz[k]) + f2t * gk_xzz_yyzz[k];

                    g_xxzz_xyzzz[k] = fr * g11_xzz_xyzzz[k] + f2g * (g20_zz_xyzzz[k] - fgz * g21_zz_xyzzz[k]) + f2t * gk_xzz_yzzz[k];

                    g_xxzz_xzzzz[k] = fr * g11_xzz_xzzzz[k] + f2g * (g20_zz_xzzzz[k] - fgz * g21_zz_xzzzz[k]) + f2t * gk_xzz_zzzz[k];

                    g_xxzz_yyyyy[k] = fr * g11_xzz_yyyyy[k] + f2g * (g20_zz_yyyyy[k] - fgz * g21_zz_yyyyy[k]);

                    g_xxzz_yyyyz[k] = fr * g11_xzz_yyyyz[k] + f2g * (g20_zz_yyyyz[k] - fgz * g21_zz_yyyyz[k]);

                    g_xxzz_yyyzz[k] = fr * g11_xzz_yyyzz[k] + f2g * (g20_zz_yyyzz[k] - fgz * g21_zz_yyyzz[k]);

                    g_xxzz_yyzzz[k] = fr * g11_xzz_yyzzz[k] + f2g * (g20_zz_yyzzz[k] - fgz * g21_zz_yyzzz[k]);

                    g_xxzz_yzzzz[k] = fr * g11_xzz_yzzzz[k] + f2g * (g20_zz_yzzzz[k] - fgz * g21_zz_yzzzz[k]);

                    g_xxzz_zzzzz[k] = fr * g11_xzz_zzzzz[k] + f2g * (g20_zz_zzzzz[k] - fgz * g21_zz_zzzzz[k]);

                    g_xyyy_xxxxx[k] = fr * g11_yyy_xxxxx[k] + 5.0 * f2t * gk_yyy_xxxx[k];

                    g_xyyy_xxxxy[k] = fr * g11_yyy_xxxxy[k] + 4.0 * f2t * gk_yyy_xxxy[k];

                    g_xyyy_xxxxz[k] = fr * g11_yyy_xxxxz[k] + 4.0 * f2t * gk_yyy_xxxz[k];

                    g_xyyy_xxxyy[k] = fr * g11_yyy_xxxyy[k] + 3.0 * f2t * gk_yyy_xxyy[k];

                    g_xyyy_xxxyz[k] = fr * g11_yyy_xxxyz[k] + 3.0 * f2t * gk_yyy_xxyz[k];

                    g_xyyy_xxxzz[k] = fr * g11_yyy_xxxzz[k] + 3.0 * f2t * gk_yyy_xxzz[k];

                    g_xyyy_xxyyy[k] = fr * g11_yyy_xxyyy[k] + 2.0 * f2t * gk_yyy_xyyy[k];

                    g_xyyy_xxyyz[k] = fr * g11_yyy_xxyyz[k] + 2.0 * f2t * gk_yyy_xyyz[k];

                    g_xyyy_xxyzz[k] = fr * g11_yyy_xxyzz[k] + 2.0 * f2t * gk_yyy_xyzz[k];

                    g_xyyy_xxzzz[k] = fr * g11_yyy_xxzzz[k] + 2.0 * f2t * gk_yyy_xzzz[k];

                    g_xyyy_xyyyy[k] = fr * g11_yyy_xyyyy[k] + f2t * gk_yyy_yyyy[k];

                    g_xyyy_xyyyz[k] = fr * g11_yyy_xyyyz[k] + f2t * gk_yyy_yyyz[k];

                    g_xyyy_xyyzz[k] = fr * g11_yyy_xyyzz[k] + f2t * gk_yyy_yyzz[k];

                    g_xyyy_xyzzz[k] = fr * g11_yyy_xyzzz[k] + f2t * gk_yyy_yzzz[k];

                    g_xyyy_xzzzz[k] = fr * g11_yyy_xzzzz[k] + f2t * gk_yyy_zzzz[k];

                    g_xyyy_yyyyy[k] = fr * g11_yyy_yyyyy[k];

                    g_xyyy_yyyyz[k] = fr * g11_yyy_yyyyz[k];

                    g_xyyy_yyyzz[k] = fr * g11_yyy_yyyzz[k];

                    g_xyyy_yyzzz[k] = fr * g11_yyy_yyzzz[k];

                    g_xyyy_yzzzz[k] = fr * g11_yyy_yzzzz[k];

                    g_xyyy_zzzzz[k] = fr * g11_yyy_zzzzz[k];

                    g_xyyz_xxxxx[k] = fr * g11_yyz_xxxxx[k] + 5.0 * f2t * gk_yyz_xxxx[k];

                    g_xyyz_xxxxy[k] = fr * g11_yyz_xxxxy[k] + 4.0 * f2t * gk_yyz_xxxy[k];

                    g_xyyz_xxxxz[k] = fr * g11_yyz_xxxxz[k] + 4.0 * f2t * gk_yyz_xxxz[k];

                    g_xyyz_xxxyy[k] = fr * g11_yyz_xxxyy[k] + 3.0 * f2t * gk_yyz_xxyy[k];

                    g_xyyz_xxxyz[k] = fr * g11_yyz_xxxyz[k] + 3.0 * f2t * gk_yyz_xxyz[k];

                    g_xyyz_xxxzz[k] = fr * g11_yyz_xxxzz[k] + 3.0 * f2t * gk_yyz_xxzz[k];

                    g_xyyz_xxyyy[k] = fr * g11_yyz_xxyyy[k] + 2.0 * f2t * gk_yyz_xyyy[k];

                    g_xyyz_xxyyz[k] = fr * g11_yyz_xxyyz[k] + 2.0 * f2t * gk_yyz_xyyz[k];

                    g_xyyz_xxyzz[k] = fr * g11_yyz_xxyzz[k] + 2.0 * f2t * gk_yyz_xyzz[k];

                    g_xyyz_xxzzz[k] = fr * g11_yyz_xxzzz[k] + 2.0 * f2t * gk_yyz_xzzz[k];

                    g_xyyz_xyyyy[k] = fr * g11_yyz_xyyyy[k] + f2t * gk_yyz_yyyy[k];

                    g_xyyz_xyyyz[k] = fr * g11_yyz_xyyyz[k] + f2t * gk_yyz_yyyz[k];

                    g_xyyz_xyyzz[k] = fr * g11_yyz_xyyzz[k] + f2t * gk_yyz_yyzz[k];

                    g_xyyz_xyzzz[k] = fr * g11_yyz_xyzzz[k] + f2t * gk_yyz_yzzz[k];

                    g_xyyz_xzzzz[k] = fr * g11_yyz_xzzzz[k] + f2t * gk_yyz_zzzz[k];

                    g_xyyz_yyyyy[k] = fr * g11_yyz_yyyyy[k];

                    g_xyyz_yyyyz[k] = fr * g11_yyz_yyyyz[k];

                    g_xyyz_yyyzz[k] = fr * g11_yyz_yyyzz[k];

                    g_xyyz_yyzzz[k] = fr * g11_yyz_yyzzz[k];

                    g_xyyz_yzzzz[k] = fr * g11_yyz_yzzzz[k];

                    g_xyyz_zzzzz[k] = fr * g11_yyz_zzzzz[k];

                    g_xyzz_xxxxx[k] = fr * g11_yzz_xxxxx[k] + 5.0 * f2t * gk_yzz_xxxx[k];

                    g_xyzz_xxxxy[k] = fr * g11_yzz_xxxxy[k] + 4.0 * f2t * gk_yzz_xxxy[k];

                    g_xyzz_xxxxz[k] = fr * g11_yzz_xxxxz[k] + 4.0 * f2t * gk_yzz_xxxz[k];

                    g_xyzz_xxxyy[k] = fr * g11_yzz_xxxyy[k] + 3.0 * f2t * gk_yzz_xxyy[k];

                    g_xyzz_xxxyz[k] = fr * g11_yzz_xxxyz[k] + 3.0 * f2t * gk_yzz_xxyz[k];

                    g_xyzz_xxxzz[k] = fr * g11_yzz_xxxzz[k] + 3.0 * f2t * gk_yzz_xxzz[k];

                    g_xyzz_xxyyy[k] = fr * g11_yzz_xxyyy[k] + 2.0 * f2t * gk_yzz_xyyy[k];

                    g_xyzz_xxyyz[k] = fr * g11_yzz_xxyyz[k] + 2.0 * f2t * gk_yzz_xyyz[k];

                    g_xyzz_xxyzz[k] = fr * g11_yzz_xxyzz[k] + 2.0 * f2t * gk_yzz_xyzz[k];

                    g_xyzz_xxzzz[k] = fr * g11_yzz_xxzzz[k] + 2.0 * f2t * gk_yzz_xzzz[k];

                    g_xyzz_xyyyy[k] = fr * g11_yzz_xyyyy[k] + f2t * gk_yzz_yyyy[k];

                    g_xyzz_xyyyz[k] = fr * g11_yzz_xyyyz[k] + f2t * gk_yzz_yyyz[k];

                    g_xyzz_xyyzz[k] = fr * g11_yzz_xyyzz[k] + f2t * gk_yzz_yyzz[k];

                    g_xyzz_xyzzz[k] = fr * g11_yzz_xyzzz[k] + f2t * gk_yzz_yzzz[k];

                    g_xyzz_xzzzz[k] = fr * g11_yzz_xzzzz[k] + f2t * gk_yzz_zzzz[k];

                    g_xyzz_yyyyy[k] = fr * g11_yzz_yyyyy[k];

                    g_xyzz_yyyyz[k] = fr * g11_yzz_yyyyz[k];

                    g_xyzz_yyyzz[k] = fr * g11_yzz_yyyzz[k];

                    g_xyzz_yyzzz[k] = fr * g11_yzz_yyzzz[k];

                    g_xyzz_yzzzz[k] = fr * g11_yzz_yzzzz[k];

                    g_xyzz_zzzzz[k] = fr * g11_yzz_zzzzz[k];

                    g_xzzz_xxxxx[k] = fr * g11_zzz_xxxxx[k] + 5.0 * f2t * gk_zzz_xxxx[k];

                    g_xzzz_xxxxy[k] = fr * g11_zzz_xxxxy[k] + 4.0 * f2t * gk_zzz_xxxy[k];

                    g_xzzz_xxxxz[k] = fr * g11_zzz_xxxxz[k] + 4.0 * f2t * gk_zzz_xxxz[k];

                    g_xzzz_xxxyy[k] = fr * g11_zzz_xxxyy[k] + 3.0 * f2t * gk_zzz_xxyy[k];

                    g_xzzz_xxxyz[k] = fr * g11_zzz_xxxyz[k] + 3.0 * f2t * gk_zzz_xxyz[k];

                    g_xzzz_xxxzz[k] = fr * g11_zzz_xxxzz[k] + 3.0 * f2t * gk_zzz_xxzz[k];

                    g_xzzz_xxyyy[k] = fr * g11_zzz_xxyyy[k] + 2.0 * f2t * gk_zzz_xyyy[k];

                    g_xzzz_xxyyz[k] = fr * g11_zzz_xxyyz[k] + 2.0 * f2t * gk_zzz_xyyz[k];

                    g_xzzz_xxyzz[k] = fr * g11_zzz_xxyzz[k] + 2.0 * f2t * gk_zzz_xyzz[k];

                    g_xzzz_xxzzz[k] = fr * g11_zzz_xxzzz[k] + 2.0 * f2t * gk_zzz_xzzz[k];

                    g_xzzz_xyyyy[k] = fr * g11_zzz_xyyyy[k] + f2t * gk_zzz_yyyy[k];

                    g_xzzz_xyyyz[k] = fr * g11_zzz_xyyyz[k] + f2t * gk_zzz_yyyz[k];

                    g_xzzz_xyyzz[k] = fr * g11_zzz_xyyzz[k] + f2t * gk_zzz_yyzz[k];

                    g_xzzz_xyzzz[k] = fr * g11_zzz_xyzzz[k] + f2t * gk_zzz_yzzz[k];

                    g_xzzz_xzzzz[k] = fr * g11_zzz_xzzzz[k] + f2t * gk_zzz_zzzz[k];

                    g_xzzz_yyyyy[k] = fr * g11_zzz_yyyyy[k];

                    g_xzzz_yyyyz[k] = fr * g11_zzz_yyyyz[k];

                    g_xzzz_yyyzz[k] = fr * g11_zzz_yyyzz[k];

                    g_xzzz_yyzzz[k] = fr * g11_zzz_yyzzz[k];

                    g_xzzz_yzzzz[k] = fr * g11_zzz_yzzzz[k];

                    g_xzzz_zzzzz[k] = fr * g11_zzz_zzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxxxx[k] = fr * g11_yyy_xxxxx[k] + f2g * (3.0 * g20_yy_xxxxx[k] - 3.0 * fgz * g21_yy_xxxxx[k]);

                    g_yyyy_xxxxy[k] = fr * g11_yyy_xxxxy[k] + f2g * (3.0 * g20_yy_xxxxy[k] - 3.0 * fgz * g21_yy_xxxxy[k]) + f2t * gk_yyy_xxxx[k];

                    g_yyyy_xxxxz[k] = fr * g11_yyy_xxxxz[k] + f2g * (3.0 * g20_yy_xxxxz[k] - 3.0 * fgz * g21_yy_xxxxz[k]);

                    g_yyyy_xxxyy[k] = fr * g11_yyy_xxxyy[k] + f2g * (3.0 * g20_yy_xxxyy[k] - 3.0 * fgz * g21_yy_xxxyy[k]) + 2.0 * f2t * gk_yyy_xxxy[k];

                    g_yyyy_xxxyz[k] = fr * g11_yyy_xxxyz[k] + f2g * (3.0 * g20_yy_xxxyz[k] - 3.0 * fgz * g21_yy_xxxyz[k]) + f2t * gk_yyy_xxxz[k];

                    g_yyyy_xxxzz[k] = fr * g11_yyy_xxxzz[k] + f2g * (3.0 * g20_yy_xxxzz[k] - 3.0 * fgz * g21_yy_xxxzz[k]);

                    g_yyyy_xxyyy[k] = fr * g11_yyy_xxyyy[k] + f2g * (3.0 * g20_yy_xxyyy[k] - 3.0 * fgz * g21_yy_xxyyy[k]) + 3.0 * f2t * gk_yyy_xxyy[k];

                    g_yyyy_xxyyz[k] = fr * g11_yyy_xxyyz[k] + f2g * (3.0 * g20_yy_xxyyz[k] - 3.0 * fgz * g21_yy_xxyyz[k]) + 2.0 * f2t * gk_yyy_xxyz[k];

                    g_yyyy_xxyzz[k] = fr * g11_yyy_xxyzz[k] + f2g * (3.0 * g20_yy_xxyzz[k] - 3.0 * fgz * g21_yy_xxyzz[k]) + f2t * gk_yyy_xxzz[k];

                    g_yyyy_xxzzz[k] = fr * g11_yyy_xxzzz[k] + f2g * (3.0 * g20_yy_xxzzz[k] - 3.0 * fgz * g21_yy_xxzzz[k]);

                    g_yyyy_xyyyy[k] = fr * g11_yyy_xyyyy[k] + f2g * (3.0 * g20_yy_xyyyy[k] - 3.0 * fgz * g21_yy_xyyyy[k]) + 4.0 * f2t * gk_yyy_xyyy[k];

                    g_yyyy_xyyyz[k] = fr * g11_yyy_xyyyz[k] + f2g * (3.0 * g20_yy_xyyyz[k] - 3.0 * fgz * g21_yy_xyyyz[k]) + 3.0 * f2t * gk_yyy_xyyz[k];

                    g_yyyy_xyyzz[k] = fr * g11_yyy_xyyzz[k] + f2g * (3.0 * g20_yy_xyyzz[k] - 3.0 * fgz * g21_yy_xyyzz[k]) + 2.0 * f2t * gk_yyy_xyzz[k];

                    g_yyyy_xyzzz[k] = fr * g11_yyy_xyzzz[k] + f2g * (3.0 * g20_yy_xyzzz[k] - 3.0 * fgz * g21_yy_xyzzz[k]) + f2t * gk_yyy_xzzz[k];

                    g_yyyy_xzzzz[k] = fr * g11_yyy_xzzzz[k] + f2g * (3.0 * g20_yy_xzzzz[k] - 3.0 * fgz * g21_yy_xzzzz[k]);

                    g_yyyy_yyyyy[k] = fr * g11_yyy_yyyyy[k] + f2g * (3.0 * g20_yy_yyyyy[k] - 3.0 * fgz * g21_yy_yyyyy[k]) + 5.0 * f2t * gk_yyy_yyyy[k];

                    g_yyyy_yyyyz[k] = fr * g11_yyy_yyyyz[k] + f2g * (3.0 * g20_yy_yyyyz[k] - 3.0 * fgz * g21_yy_yyyyz[k]) + 4.0 * f2t * gk_yyy_yyyz[k];

                    g_yyyy_yyyzz[k] = fr * g11_yyy_yyyzz[k] + f2g * (3.0 * g20_yy_yyyzz[k] - 3.0 * fgz * g21_yy_yyyzz[k]) + 3.0 * f2t * gk_yyy_yyzz[k];

                    g_yyyy_yyzzz[k] = fr * g11_yyy_yyzzz[k] + f2g * (3.0 * g20_yy_yyzzz[k] - 3.0 * fgz * g21_yy_yyzzz[k]) + 2.0 * f2t * gk_yyy_yzzz[k];

                    g_yyyy_yzzzz[k] = fr * g11_yyy_yzzzz[k] + f2g * (3.0 * g20_yy_yzzzz[k] - 3.0 * fgz * g21_yy_yzzzz[k]) + f2t * gk_yyy_zzzz[k];

                    g_yyyy_zzzzz[k] = fr * g11_yyy_zzzzz[k] + f2g * (3.0 * g20_yy_zzzzz[k] - 3.0 * fgz * g21_yy_zzzzz[k]);

                    g_yyyz_xxxxx[k] = fr * g11_yyz_xxxxx[k] + f2g * (2.0 * g20_yz_xxxxx[k] - 2.0 * fgz * g21_yz_xxxxx[k]);

                    g_yyyz_xxxxy[k] = fr * g11_yyz_xxxxy[k] + f2g * (2.0 * g20_yz_xxxxy[k] - 2.0 * fgz * g21_yz_xxxxy[k]) + f2t * gk_yyz_xxxx[k];

                    g_yyyz_xxxxz[k] = fr * g11_yyz_xxxxz[k] + f2g * (2.0 * g20_yz_xxxxz[k] - 2.0 * fgz * g21_yz_xxxxz[k]);

                    g_yyyz_xxxyy[k] = fr * g11_yyz_xxxyy[k] + f2g * (2.0 * g20_yz_xxxyy[k] - 2.0 * fgz * g21_yz_xxxyy[k]) + 2.0 * f2t * gk_yyz_xxxy[k];

                    g_yyyz_xxxyz[k] = fr * g11_yyz_xxxyz[k] + f2g * (2.0 * g20_yz_xxxyz[k] - 2.0 * fgz * g21_yz_xxxyz[k]) + f2t * gk_yyz_xxxz[k];

                    g_yyyz_xxxzz[k] = fr * g11_yyz_xxxzz[k] + f2g * (2.0 * g20_yz_xxxzz[k] - 2.0 * fgz * g21_yz_xxxzz[k]);

                    g_yyyz_xxyyy[k] = fr * g11_yyz_xxyyy[k] + f2g * (2.0 * g20_yz_xxyyy[k] - 2.0 * fgz * g21_yz_xxyyy[k]) + 3.0 * f2t * gk_yyz_xxyy[k];

                    g_yyyz_xxyyz[k] = fr * g11_yyz_xxyyz[k] + f2g * (2.0 * g20_yz_xxyyz[k] - 2.0 * fgz * g21_yz_xxyyz[k]) + 2.0 * f2t * gk_yyz_xxyz[k];

                    g_yyyz_xxyzz[k] = fr * g11_yyz_xxyzz[k] + f2g * (2.0 * g20_yz_xxyzz[k] - 2.0 * fgz * g21_yz_xxyzz[k]) + f2t * gk_yyz_xxzz[k];

                    g_yyyz_xxzzz[k] = fr * g11_yyz_xxzzz[k] + f2g * (2.0 * g20_yz_xxzzz[k] - 2.0 * fgz * g21_yz_xxzzz[k]);

                    g_yyyz_xyyyy[k] = fr * g11_yyz_xyyyy[k] + f2g * (2.0 * g20_yz_xyyyy[k] - 2.0 * fgz * g21_yz_xyyyy[k]) + 4.0 * f2t * gk_yyz_xyyy[k];

                    g_yyyz_xyyyz[k] = fr * g11_yyz_xyyyz[k] + f2g * (2.0 * g20_yz_xyyyz[k] - 2.0 * fgz * g21_yz_xyyyz[k]) + 3.0 * f2t * gk_yyz_xyyz[k];

                    g_yyyz_xyyzz[k] = fr * g11_yyz_xyyzz[k] + f2g * (2.0 * g20_yz_xyyzz[k] - 2.0 * fgz * g21_yz_xyyzz[k]) + 2.0 * f2t * gk_yyz_xyzz[k];

                    g_yyyz_xyzzz[k] = fr * g11_yyz_xyzzz[k] + f2g * (2.0 * g20_yz_xyzzz[k] - 2.0 * fgz * g21_yz_xyzzz[k]) + f2t * gk_yyz_xzzz[k];

                    g_yyyz_xzzzz[k] = fr * g11_yyz_xzzzz[k] + f2g * (2.0 * g20_yz_xzzzz[k] - 2.0 * fgz * g21_yz_xzzzz[k]);

                    g_yyyz_yyyyy[k] = fr * g11_yyz_yyyyy[k] + f2g * (2.0 * g20_yz_yyyyy[k] - 2.0 * fgz * g21_yz_yyyyy[k]) + 5.0 * f2t * gk_yyz_yyyy[k];

                    g_yyyz_yyyyz[k] = fr * g11_yyz_yyyyz[k] + f2g * (2.0 * g20_yz_yyyyz[k] - 2.0 * fgz * g21_yz_yyyyz[k]) + 4.0 * f2t * gk_yyz_yyyz[k];

                    g_yyyz_yyyzz[k] = fr * g11_yyz_yyyzz[k] + f2g * (2.0 * g20_yz_yyyzz[k] - 2.0 * fgz * g21_yz_yyyzz[k]) + 3.0 * f2t * gk_yyz_yyzz[k];

                    g_yyyz_yyzzz[k] = fr * g11_yyz_yyzzz[k] + f2g * (2.0 * g20_yz_yyzzz[k] - 2.0 * fgz * g21_yz_yyzzz[k]) + 2.0 * f2t * gk_yyz_yzzz[k];

                    g_yyyz_yzzzz[k] = fr * g11_yyz_yzzzz[k] + f2g * (2.0 * g20_yz_yzzzz[k] - 2.0 * fgz * g21_yz_yzzzz[k]) + f2t * gk_yyz_zzzz[k];

                    g_yyyz_zzzzz[k] = fr * g11_yyz_zzzzz[k] + f2g * (2.0 * g20_yz_zzzzz[k] - 2.0 * fgz * g21_yz_zzzzz[k]);

                    g_yyzz_xxxxx[k] = fr * g11_yzz_xxxxx[k] + f2g * (g20_zz_xxxxx[k] - fgz * g21_zz_xxxxx[k]);

                    g_yyzz_xxxxy[k] = fr * g11_yzz_xxxxy[k] + f2g * (g20_zz_xxxxy[k] - fgz * g21_zz_xxxxy[k]) + f2t * gk_yzz_xxxx[k];

                    g_yyzz_xxxxz[k] = fr * g11_yzz_xxxxz[k] + f2g * (g20_zz_xxxxz[k] - fgz * g21_zz_xxxxz[k]);

                    g_yyzz_xxxyy[k] = fr * g11_yzz_xxxyy[k] + f2g * (g20_zz_xxxyy[k] - fgz * g21_zz_xxxyy[k]) + 2.0 * f2t * gk_yzz_xxxy[k];

                    g_yyzz_xxxyz[k] = fr * g11_yzz_xxxyz[k] + f2g * (g20_zz_xxxyz[k] - fgz * g21_zz_xxxyz[k]) + f2t * gk_yzz_xxxz[k];

                    g_yyzz_xxxzz[k] = fr * g11_yzz_xxxzz[k] + f2g * (g20_zz_xxxzz[k] - fgz * g21_zz_xxxzz[k]);

                    g_yyzz_xxyyy[k] = fr * g11_yzz_xxyyy[k] + f2g * (g20_zz_xxyyy[k] - fgz * g21_zz_xxyyy[k]) + 3.0 * f2t * gk_yzz_xxyy[k];

                    g_yyzz_xxyyz[k] = fr * g11_yzz_xxyyz[k] + f2g * (g20_zz_xxyyz[k] - fgz * g21_zz_xxyyz[k]) + 2.0 * f2t * gk_yzz_xxyz[k];

                    g_yyzz_xxyzz[k] = fr * g11_yzz_xxyzz[k] + f2g * (g20_zz_xxyzz[k] - fgz * g21_zz_xxyzz[k]) + f2t * gk_yzz_xxzz[k];

                    g_yyzz_xxzzz[k] = fr * g11_yzz_xxzzz[k] + f2g * (g20_zz_xxzzz[k] - fgz * g21_zz_xxzzz[k]);

                    g_yyzz_xyyyy[k] = fr * g11_yzz_xyyyy[k] + f2g * (g20_zz_xyyyy[k] - fgz * g21_zz_xyyyy[k]) + 4.0 * f2t * gk_yzz_xyyy[k];

                    g_yyzz_xyyyz[k] = fr * g11_yzz_xyyyz[k] + f2g * (g20_zz_xyyyz[k] - fgz * g21_zz_xyyyz[k]) + 3.0 * f2t * gk_yzz_xyyz[k];

                    g_yyzz_xyyzz[k] = fr * g11_yzz_xyyzz[k] + f2g * (g20_zz_xyyzz[k] - fgz * g21_zz_xyyzz[k]) + 2.0 * f2t * gk_yzz_xyzz[k];

                    g_yyzz_xyzzz[k] = fr * g11_yzz_xyzzz[k] + f2g * (g20_zz_xyzzz[k] - fgz * g21_zz_xyzzz[k]) + f2t * gk_yzz_xzzz[k];

                    g_yyzz_xzzzz[k] = fr * g11_yzz_xzzzz[k] + f2g * (g20_zz_xzzzz[k] - fgz * g21_zz_xzzzz[k]);

                    g_yyzz_yyyyy[k] = fr * g11_yzz_yyyyy[k] + f2g * (g20_zz_yyyyy[k] - fgz * g21_zz_yyyyy[k]) + 5.0 * f2t * gk_yzz_yyyy[k];

                    g_yyzz_yyyyz[k] = fr * g11_yzz_yyyyz[k] + f2g * (g20_zz_yyyyz[k] - fgz * g21_zz_yyyyz[k]) + 4.0 * f2t * gk_yzz_yyyz[k];

                    g_yyzz_yyyzz[k] = fr * g11_yzz_yyyzz[k] + f2g * (g20_zz_yyyzz[k] - fgz * g21_zz_yyyzz[k]) + 3.0 * f2t * gk_yzz_yyzz[k];

                    g_yyzz_yyzzz[k] = fr * g11_yzz_yyzzz[k] + f2g * (g20_zz_yyzzz[k] - fgz * g21_zz_yyzzz[k]) + 2.0 * f2t * gk_yzz_yzzz[k];

                    g_yyzz_yzzzz[k] = fr * g11_yzz_yzzzz[k] + f2g * (g20_zz_yzzzz[k] - fgz * g21_zz_yzzzz[k]) + f2t * gk_yzz_zzzz[k];

                    g_yyzz_zzzzz[k] = fr * g11_yzz_zzzzz[k] + f2g * (g20_zz_zzzzz[k] - fgz * g21_zz_zzzzz[k]);

                    g_yzzz_xxxxx[k] = fr * g11_zzz_xxxxx[k];

                    g_yzzz_xxxxy[k] = fr * g11_zzz_xxxxy[k] + f2t * gk_zzz_xxxx[k];

                    g_yzzz_xxxxz[k] = fr * g11_zzz_xxxxz[k];

                    g_yzzz_xxxyy[k] = fr * g11_zzz_xxxyy[k] + 2.0 * f2t * gk_zzz_xxxy[k];

                    g_yzzz_xxxyz[k] = fr * g11_zzz_xxxyz[k] + f2t * gk_zzz_xxxz[k];

                    g_yzzz_xxxzz[k] = fr * g11_zzz_xxxzz[k];

                    g_yzzz_xxyyy[k] = fr * g11_zzz_xxyyy[k] + 3.0 * f2t * gk_zzz_xxyy[k];

                    g_yzzz_xxyyz[k] = fr * g11_zzz_xxyyz[k] + 2.0 * f2t * gk_zzz_xxyz[k];

                    g_yzzz_xxyzz[k] = fr * g11_zzz_xxyzz[k] + f2t * gk_zzz_xxzz[k];

                    g_yzzz_xxzzz[k] = fr * g11_zzz_xxzzz[k];

                    g_yzzz_xyyyy[k] = fr * g11_zzz_xyyyy[k] + 4.0 * f2t * gk_zzz_xyyy[k];

                    g_yzzz_xyyyz[k] = fr * g11_zzz_xyyyz[k] + 3.0 * f2t * gk_zzz_xyyz[k];

                    g_yzzz_xyyzz[k] = fr * g11_zzz_xyyzz[k] + 2.0 * f2t * gk_zzz_xyzz[k];

                    g_yzzz_xyzzz[k] = fr * g11_zzz_xyzzz[k] + f2t * gk_zzz_xzzz[k];

                    g_yzzz_xzzzz[k] = fr * g11_zzz_xzzzz[k];

                    g_yzzz_yyyyy[k] = fr * g11_zzz_yyyyy[k] + 5.0 * f2t * gk_zzz_yyyy[k];

                    g_yzzz_yyyyz[k] = fr * g11_zzz_yyyyz[k] + 4.0 * f2t * gk_zzz_yyyz[k];

                    g_yzzz_yyyzz[k] = fr * g11_zzz_yyyzz[k] + 3.0 * f2t * gk_zzz_yyzz[k];

                    g_yzzz_yyzzz[k] = fr * g11_zzz_yyzzz[k] + 2.0 * f2t * gk_zzz_yzzz[k];

                    g_yzzz_yzzzz[k] = fr * g11_zzz_yzzzz[k] + f2t * gk_zzz_zzzz[k];

                    g_yzzz_zzzzz[k] = fr * g11_zzz_zzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxxxx[k] = fr * g11_zzz_xxxxx[k] + f2g * (3.0 * g20_zz_xxxxx[k] - 3.0 * fgz * g21_zz_xxxxx[k]);

                    g_zzzz_xxxxy[k] = fr * g11_zzz_xxxxy[k] + f2g * (3.0 * g20_zz_xxxxy[k] - 3.0 * fgz * g21_zz_xxxxy[k]);

                    g_zzzz_xxxxz[k] = fr * g11_zzz_xxxxz[k] + f2g * (3.0 * g20_zz_xxxxz[k] - 3.0 * fgz * g21_zz_xxxxz[k]) + f2t * gk_zzz_xxxx[k];

                    g_zzzz_xxxyy[k] = fr * g11_zzz_xxxyy[k] + f2g * (3.0 * g20_zz_xxxyy[k] - 3.0 * fgz * g21_zz_xxxyy[k]);

                    g_zzzz_xxxyz[k] = fr * g11_zzz_xxxyz[k] + f2g * (3.0 * g20_zz_xxxyz[k] - 3.0 * fgz * g21_zz_xxxyz[k]) + f2t * gk_zzz_xxxy[k];

                    g_zzzz_xxxzz[k] = fr * g11_zzz_xxxzz[k] + f2g * (3.0 * g20_zz_xxxzz[k] - 3.0 * fgz * g21_zz_xxxzz[k]) + 2.0 * f2t * gk_zzz_xxxz[k];

                    g_zzzz_xxyyy[k] = fr * g11_zzz_xxyyy[k] + f2g * (3.0 * g20_zz_xxyyy[k] - 3.0 * fgz * g21_zz_xxyyy[k]);

                    g_zzzz_xxyyz[k] = fr * g11_zzz_xxyyz[k] + f2g * (3.0 * g20_zz_xxyyz[k] - 3.0 * fgz * g21_zz_xxyyz[k]) + f2t * gk_zzz_xxyy[k];

                    g_zzzz_xxyzz[k] = fr * g11_zzz_xxyzz[k] + f2g * (3.0 * g20_zz_xxyzz[k] - 3.0 * fgz * g21_zz_xxyzz[k]) + 2.0 * f2t * gk_zzz_xxyz[k];

                    g_zzzz_xxzzz[k] = fr * g11_zzz_xxzzz[k] + f2g * (3.0 * g20_zz_xxzzz[k] - 3.0 * fgz * g21_zz_xxzzz[k]) + 3.0 * f2t * gk_zzz_xxzz[k];

                    g_zzzz_xyyyy[k] = fr * g11_zzz_xyyyy[k] + f2g * (3.0 * g20_zz_xyyyy[k] - 3.0 * fgz * g21_zz_xyyyy[k]);

                    g_zzzz_xyyyz[k] = fr * g11_zzz_xyyyz[k] + f2g * (3.0 * g20_zz_xyyyz[k] - 3.0 * fgz * g21_zz_xyyyz[k]) + f2t * gk_zzz_xyyy[k];

                    g_zzzz_xyyzz[k] = fr * g11_zzz_xyyzz[k] + f2g * (3.0 * g20_zz_xyyzz[k] - 3.0 * fgz * g21_zz_xyyzz[k]) + 2.0 * f2t * gk_zzz_xyyz[k];

                    g_zzzz_xyzzz[k] = fr * g11_zzz_xyzzz[k] + f2g * (3.0 * g20_zz_xyzzz[k] - 3.0 * fgz * g21_zz_xyzzz[k]) + 3.0 * f2t * gk_zzz_xyzz[k];

                    g_zzzz_xzzzz[k] = fr * g11_zzz_xzzzz[k] + f2g * (3.0 * g20_zz_xzzzz[k] - 3.0 * fgz * g21_zz_xzzzz[k]) + 4.0 * f2t * gk_zzz_xzzz[k];

                    g_zzzz_yyyyy[k] = fr * g11_zzz_yyyyy[k] + f2g * (3.0 * g20_zz_yyyyy[k] - 3.0 * fgz * g21_zz_yyyyy[k]);

                    g_zzzz_yyyyz[k] = fr * g11_zzz_yyyyz[k] + f2g * (3.0 * g20_zz_yyyyz[k] - 3.0 * fgz * g21_zz_yyyyz[k]) + f2t * gk_zzz_yyyy[k];

                    g_zzzz_yyyzz[k] = fr * g11_zzz_yyyzz[k] + f2g * (3.0 * g20_zz_yyyzz[k] - 3.0 * fgz * g21_zz_yyyzz[k]) + 2.0 * f2t * gk_zzz_yyyz[k];

                    g_zzzz_yyzzz[k] = fr * g11_zzz_yyzzz[k] + f2g * (3.0 * g20_zz_yyzzz[k] - 3.0 * fgz * g21_zz_yyzzz[k]) + 3.0 * f2t * gk_zzz_yyzz[k];

                    g_zzzz_yzzzz[k] = fr * g11_zzz_yzzzz[k] + f2g * (3.0 * g20_zz_yzzzz[k] - 3.0 * fgz * g21_zz_yzzzz[k]) + 4.0 * f2t * gk_zzz_yzzz[k];

                    g_zzzz_zzzzz[k] = fr * g11_zzz_zzzzz[k] + f2g * (3.0 * g20_zz_zzzzz[k] - 3.0 * fgz * g21_zz_zzzzz[k]) + 5.0 * f2t * gk_zzz_zzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSI(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 6);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 6, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 4, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SG)^(m) integrals

                auto g20_0_xxxx = primBuffer.data(g20off + 15 * idx);

                auto g20_0_xxxy = primBuffer.data(g20off + 15 * idx + 1);

                auto g20_0_xxxz = primBuffer.data(g20off + 15 * idx + 2);

                auto g20_0_xxyy = primBuffer.data(g20off + 15 * idx + 3);

                auto g20_0_xxyz = primBuffer.data(g20off + 15 * idx + 4);

                auto g20_0_xxzz = primBuffer.data(g20off + 15 * idx + 5);

                auto g20_0_xyyy = primBuffer.data(g20off + 15 * idx + 6);

                auto g20_0_xyyz = primBuffer.data(g20off + 15 * idx + 7);

                auto g20_0_xyzz = primBuffer.data(g20off + 15 * idx + 8);

                auto g20_0_xzzz = primBuffer.data(g20off + 15 * idx + 9);

                auto g20_0_yyyy = primBuffer.data(g20off + 15 * idx + 10);

                auto g20_0_yyyz = primBuffer.data(g20off + 15 * idx + 11);

                auto g20_0_yyzz = primBuffer.data(g20off + 15 * idx + 12);

                auto g20_0_yzzz = primBuffer.data(g20off + 15 * idx + 13);

                auto g20_0_zzzz = primBuffer.data(g20off + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SG)^(m+1) integrals

                auto g21_0_xxxx = primBuffer.data(g21off + 15 * idx);

                auto g21_0_xxxy = primBuffer.data(g21off + 15 * idx + 1);

                auto g21_0_xxxz = primBuffer.data(g21off + 15 * idx + 2);

                auto g21_0_xxyy = primBuffer.data(g21off + 15 * idx + 3);

                auto g21_0_xxyz = primBuffer.data(g21off + 15 * idx + 4);

                auto g21_0_xxzz = primBuffer.data(g21off + 15 * idx + 5);

                auto g21_0_xyyy = primBuffer.data(g21off + 15 * idx + 6);

                auto g21_0_xyyz = primBuffer.data(g21off + 15 * idx + 7);

                auto g21_0_xyzz = primBuffer.data(g21off + 15 * idx + 8);

                auto g21_0_xzzz = primBuffer.data(g21off + 15 * idx + 9);

                auto g21_0_yyyy = primBuffer.data(g21off + 15 * idx + 10);

                auto g21_0_yyyz = primBuffer.data(g21off + 15 * idx + 11);

                auto g21_0_yyzz = primBuffer.data(g21off + 15 * idx + 12);

                auto g21_0_yzzz = primBuffer.data(g21off + 15 * idx + 13);

                auto g21_0_zzzz = primBuffer.data(g21off + 15 * idx + 14);

                // set up pointers to (S|g(r,r')|SH)^(m) integrals

                auto g10_0_xxxxx = primBuffer.data(g10off + 21 * idx);

                auto g10_0_xxxxy = primBuffer.data(g10off + 21 * idx + 1);

                auto g10_0_xxxxz = primBuffer.data(g10off + 21 * idx + 2);

                auto g10_0_xxxyy = primBuffer.data(g10off + 21 * idx + 3);

                auto g10_0_xxxyz = primBuffer.data(g10off + 21 * idx + 4);

                auto g10_0_xxxzz = primBuffer.data(g10off + 21 * idx + 5);

                auto g10_0_xxyyy = primBuffer.data(g10off + 21 * idx + 6);

                auto g10_0_xxyyz = primBuffer.data(g10off + 21 * idx + 7);

                auto g10_0_xxyzz = primBuffer.data(g10off + 21 * idx + 8);

                auto g10_0_xxzzz = primBuffer.data(g10off + 21 * idx + 9);

                auto g10_0_xyyyy = primBuffer.data(g10off + 21 * idx + 10);

                auto g10_0_xyyyz = primBuffer.data(g10off + 21 * idx + 11);

                auto g10_0_xyyzz = primBuffer.data(g10off + 21 * idx + 12);

                auto g10_0_xyzzz = primBuffer.data(g10off + 21 * idx + 13);

                auto g10_0_xzzzz = primBuffer.data(g10off + 21 * idx + 14);

                auto g10_0_yyyyy = primBuffer.data(g10off + 21 * idx + 15);

                auto g10_0_yyyyz = primBuffer.data(g10off + 21 * idx + 16);

                auto g10_0_yyyzz = primBuffer.data(g10off + 21 * idx + 17);

                auto g10_0_yyzzz = primBuffer.data(g10off + 21 * idx + 18);

                auto g10_0_yzzzz = primBuffer.data(g10off + 21 * idx + 19);

                auto g10_0_zzzzz = primBuffer.data(g10off + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SH)^(m+1) integrals

                auto g11_0_xxxxx = primBuffer.data(g11off + 21 * idx);

                auto g11_0_xxxxy = primBuffer.data(g11off + 21 * idx + 1);

                auto g11_0_xxxxz = primBuffer.data(g11off + 21 * idx + 2);

                auto g11_0_xxxyy = primBuffer.data(g11off + 21 * idx + 3);

                auto g11_0_xxxyz = primBuffer.data(g11off + 21 * idx + 4);

                auto g11_0_xxxzz = primBuffer.data(g11off + 21 * idx + 5);

                auto g11_0_xxyyy = primBuffer.data(g11off + 21 * idx + 6);

                auto g11_0_xxyyz = primBuffer.data(g11off + 21 * idx + 7);

                auto g11_0_xxyzz = primBuffer.data(g11off + 21 * idx + 8);

                auto g11_0_xxzzz = primBuffer.data(g11off + 21 * idx + 9);

                auto g11_0_xyyyy = primBuffer.data(g11off + 21 * idx + 10);

                auto g11_0_xyyyz = primBuffer.data(g11off + 21 * idx + 11);

                auto g11_0_xyyzz = primBuffer.data(g11off + 21 * idx + 12);

                auto g11_0_xyzzz = primBuffer.data(g11off + 21 * idx + 13);

                auto g11_0_xzzzz = primBuffer.data(g11off + 21 * idx + 14);

                auto g11_0_yyyyy = primBuffer.data(g11off + 21 * idx + 15);

                auto g11_0_yyyyz = primBuffer.data(g11off + 21 * idx + 16);

                auto g11_0_yyyzz = primBuffer.data(g11off + 21 * idx + 17);

                auto g11_0_yyzzz = primBuffer.data(g11off + 21 * idx + 18);

                auto g11_0_yzzzz = primBuffer.data(g11off + 21 * idx + 19);

                auto g11_0_zzzzz = primBuffer.data(g11off + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SI)^(m) integrals

                auto g_0_xxxxxx = primBuffer.data(goff + 28 * idx);

                auto g_0_xxxxxy = primBuffer.data(goff + 28 * idx + 1);

                auto g_0_xxxxxz = primBuffer.data(goff + 28 * idx + 2);

                auto g_0_xxxxyy = primBuffer.data(goff + 28 * idx + 3);

                auto g_0_xxxxyz = primBuffer.data(goff + 28 * idx + 4);

                auto g_0_xxxxzz = primBuffer.data(goff + 28 * idx + 5);

                auto g_0_xxxyyy = primBuffer.data(goff + 28 * idx + 6);

                auto g_0_xxxyyz = primBuffer.data(goff + 28 * idx + 7);

                auto g_0_xxxyzz = primBuffer.data(goff + 28 * idx + 8);

                auto g_0_xxxzzz = primBuffer.data(goff + 28 * idx + 9);

                auto g_0_xxyyyy = primBuffer.data(goff + 28 * idx + 10);

                auto g_0_xxyyyz = primBuffer.data(goff + 28 * idx + 11);

                auto g_0_xxyyzz = primBuffer.data(goff + 28 * idx + 12);

                auto g_0_xxyzzz = primBuffer.data(goff + 28 * idx + 13);

                auto g_0_xxzzzz = primBuffer.data(goff + 28 * idx + 14);

                auto g_0_xyyyyy = primBuffer.data(goff + 28 * idx + 15);

                auto g_0_xyyyyz = primBuffer.data(goff + 28 * idx + 16);

                auto g_0_xyyyzz = primBuffer.data(goff + 28 * idx + 17);

                auto g_0_xyyzzz = primBuffer.data(goff + 28 * idx + 18);

                auto g_0_xyzzzz = primBuffer.data(goff + 28 * idx + 19);

                auto g_0_xzzzzz = primBuffer.data(goff + 28 * idx + 20);

                auto g_0_yyyyyy = primBuffer.data(goff + 28 * idx + 21);

                auto g_0_yyyyyz = primBuffer.data(goff + 28 * idx + 22);

                auto g_0_yyyyzz = primBuffer.data(goff + 28 * idx + 23);

                auto g_0_yyyzzz = primBuffer.data(goff + 28 * idx + 24);

                auto g_0_yyzzzz = primBuffer.data(goff + 28 * idx + 25);

                auto g_0_yzzzzz = primBuffer.data(goff + 28 * idx + 26);

                auto g_0_zzzzzz = primBuffer.data(goff + 28 * idx + 27);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_xxxx, g20_0_xxxy, g20_0_xxxz, g20_0_xxyy,\
                                         g20_0_xxyz, g20_0_xxzz, g20_0_xyyy, g20_0_xyyz,\
                                         g20_0_xyzz, g20_0_xzzz, g20_0_yyyy, g20_0_yyyz,\
                                         g20_0_yyzz, g20_0_yzzz, g20_0_zzzz, g21_0_xxxx,\
                                         g21_0_xxxy, g21_0_xxxz, g21_0_xxyy, g21_0_xxyz,\
                                         g21_0_xxzz, g21_0_xyyy, g21_0_xyyz, g21_0_xyzz,\
                                         g21_0_xzzz, g21_0_yyyy, g21_0_yyyz, g21_0_yyzz,\
                                         g21_0_yzzz, g21_0_zzzz, g10_0_xxxxx, g10_0_xxxxy,\
                                         g10_0_xxxxz, g10_0_xxxyy, g10_0_xxxyz,\
                                         g10_0_xxxzz, g10_0_xxyyy, g10_0_xxyyz,\
                                         g10_0_xxyzz, g10_0_xxzzz, g10_0_xyyyy,\
                                         g10_0_xyyyz, g10_0_xyyzz, g10_0_xyzzz,\
                                         g10_0_xzzzz, g10_0_yyyyy, g10_0_yyyyz,\
                                         g10_0_yyyzz, g10_0_yyzzz, g10_0_yzzzz,\
                                         g10_0_zzzzz, g11_0_xxxxx, g11_0_xxxxy,\
                                         g11_0_xxxxz, g11_0_xxxyy, g11_0_xxxyz,\
                                         g11_0_xxxzz, g11_0_xxyyy, g11_0_xxyyz,\
                                         g11_0_xxyzz, g11_0_xxzzz, g11_0_xyyyy,\
                                         g11_0_xyyyz, g11_0_xyyzz, g11_0_xyzzz,\
                                         g11_0_xzzzz, g11_0_yyyyy, g11_0_yyyyz,\
                                         g11_0_yyyzz, g11_0_yyzzz, g11_0_yzzzz,\
                                         g11_0_zzzzz, g_0_xxxxxx, g_0_xxxxxy, g_0_xxxxxz,\
                                         g_0_xxxxyy, g_0_xxxxyz, g_0_xxxxzz, g_0_xxxyyy,\
                                         g_0_xxxyyz, g_0_xxxyzz, g_0_xxxzzz, g_0_xxyyyy,\
                                         g_0_xxyyyz, g_0_xxyyzz, g_0_xxyzzz, g_0_xxzzzz,\
                                         g_0_xyyyyy, g_0_xyyyyz, g_0_xyyyzz, g_0_xyyzzz,\
                                         g_0_xyzzzz, g_0_xzzzzz, g_0_yyyyyy, g_0_yyyyyz,\
                                         g_0_yyyyzz, g_0_yyyzzz, g_0_yyzzzz, g_0_yzzzzz,\
                                         g_0_zzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxxxxx[k] = fra * g10_0_xxxxx[k] + frb * g11_0_xxxxx[k] + f2g * (5.0 * g20_0_xxxx[k] - 5.0 * fgz * g21_0_xxxx[k]);

                    g_0_xxxxxy[k] = fra * g10_0_xxxxy[k] + frb * g11_0_xxxxy[k] + f2g * (4.0 * g20_0_xxxy[k] - 4.0 * fgz * g21_0_xxxy[k]);

                    g_0_xxxxxz[k] = fra * g10_0_xxxxz[k] + frb * g11_0_xxxxz[k] + f2g * (4.0 * g20_0_xxxz[k] - 4.0 * fgz * g21_0_xxxz[k]);

                    g_0_xxxxyy[k] = fra * g10_0_xxxyy[k] + frb * g11_0_xxxyy[k] + f2g * (3.0 * g20_0_xxyy[k] - 3.0 * fgz * g21_0_xxyy[k]);

                    g_0_xxxxyz[k] = fra * g10_0_xxxyz[k] + frb * g11_0_xxxyz[k] + f2g * (3.0 * g20_0_xxyz[k] - 3.0 * fgz * g21_0_xxyz[k]);

                    g_0_xxxxzz[k] = fra * g10_0_xxxzz[k] + frb * g11_0_xxxzz[k] + f2g * (3.0 * g20_0_xxzz[k] - 3.0 * fgz * g21_0_xxzz[k]);

                    g_0_xxxyyy[k] = fra * g10_0_xxyyy[k] + frb * g11_0_xxyyy[k] + f2g * (2.0 * g20_0_xyyy[k] - 2.0 * fgz * g21_0_xyyy[k]);

                    g_0_xxxyyz[k] = fra * g10_0_xxyyz[k] + frb * g11_0_xxyyz[k] + f2g * (2.0 * g20_0_xyyz[k] - 2.0 * fgz * g21_0_xyyz[k]);

                    g_0_xxxyzz[k] = fra * g10_0_xxyzz[k] + frb * g11_0_xxyzz[k] + f2g * (2.0 * g20_0_xyzz[k] - 2.0 * fgz * g21_0_xyzz[k]);

                    g_0_xxxzzz[k] = fra * g10_0_xxzzz[k] + frb * g11_0_xxzzz[k] + f2g * (2.0 * g20_0_xzzz[k] - 2.0 * fgz * g21_0_xzzz[k]);

                    g_0_xxyyyy[k] = fra * g10_0_xyyyy[k] + frb * g11_0_xyyyy[k] + f2g * (g20_0_yyyy[k] - fgz * g21_0_yyyy[k]);

                    g_0_xxyyyz[k] = fra * g10_0_xyyyz[k] + frb * g11_0_xyyyz[k] + f2g * (g20_0_yyyz[k] - fgz * g21_0_yyyz[k]);

                    g_0_xxyyzz[k] = fra * g10_0_xyyzz[k] + frb * g11_0_xyyzz[k] + f2g * (g20_0_yyzz[k] - fgz * g21_0_yyzz[k]);

                    g_0_xxyzzz[k] = fra * g10_0_xyzzz[k] + frb * g11_0_xyzzz[k] + f2g * (g20_0_yzzz[k] - fgz * g21_0_yzzz[k]);

                    g_0_xxzzzz[k] = fra * g10_0_xzzzz[k] + frb * g11_0_xzzzz[k] + f2g * (g20_0_zzzz[k] - fgz * g21_0_zzzz[k]);

                    g_0_xyyyyy[k] = fra * g10_0_yyyyy[k] + frb * g11_0_yyyyy[k];

                    g_0_xyyyyz[k] = fra * g10_0_yyyyz[k] + frb * g11_0_yyyyz[k];

                    g_0_xyyyzz[k] = fra * g10_0_yyyzz[k] + frb * g11_0_yyyzz[k];

                    g_0_xyyzzz[k] = fra * g10_0_yyzzz[k] + frb * g11_0_yyzzz[k];

                    g_0_xyzzzz[k] = fra * g10_0_yzzzz[k] + frb * g11_0_yzzzz[k];

                    g_0_xzzzzz[k] = fra * g10_0_zzzzz[k] + frb * g11_0_zzzzz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyyyyy[k] = fra * g10_0_yyyyy[k] + frb * g11_0_yyyyy[k] + f2g * (5.0 * g20_0_yyyy[k] - 5.0 * fgz * g21_0_yyyy[k]);

                    g_0_yyyyyz[k] = fra * g10_0_yyyyz[k] + frb * g11_0_yyyyz[k] + f2g * (4.0 * g20_0_yyyz[k] - 4.0 * fgz * g21_0_yyyz[k]);

                    g_0_yyyyzz[k] = fra * g10_0_yyyzz[k] + frb * g11_0_yyyzz[k] + f2g * (3.0 * g20_0_yyzz[k] - 3.0 * fgz * g21_0_yyzz[k]);

                    g_0_yyyzzz[k] = fra * g10_0_yyzzz[k] + frb * g11_0_yyzzz[k] + f2g * (2.0 * g20_0_yzzz[k] - 2.0 * fgz * g21_0_yzzz[k]);

                    g_0_yyzzzz[k] = fra * g10_0_yzzzz[k] + frb * g11_0_yzzzz[k] + f2g * (g20_0_zzzz[k] - fgz * g21_0_zzzz[k]);

                    g_0_yzzzzz[k] = fra * g10_0_zzzzz[k] + frb * g11_0_zzzzz[k];

                    // leading z component

                    g_0_zzzzzz[k] = qdz[k] * g10_0_zzzzz[k] + wqz[k] * g11_0_zzzzz[k] + f2g * (5.0 * g20_0_zzzz[k] - 5.0 * fgz * g21_0_zzzz[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSI(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 6);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 6, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 5, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SH)^(m+1) integrals

                auto gk_0_xxxxx = primBuffer.data(gkoff + 21 * idx);

                auto gk_0_xxxxy = primBuffer.data(gkoff + 21 * idx + 1);

                auto gk_0_xxxxz = primBuffer.data(gkoff + 21 * idx + 2);

                auto gk_0_xxxyy = primBuffer.data(gkoff + 21 * idx + 3);

                auto gk_0_xxxyz = primBuffer.data(gkoff + 21 * idx + 4);

                auto gk_0_xxxzz = primBuffer.data(gkoff + 21 * idx + 5);

                auto gk_0_xxyyy = primBuffer.data(gkoff + 21 * idx + 6);

                auto gk_0_xxyyz = primBuffer.data(gkoff + 21 * idx + 7);

                auto gk_0_xxyzz = primBuffer.data(gkoff + 21 * idx + 8);

                auto gk_0_xxzzz = primBuffer.data(gkoff + 21 * idx + 9);

                auto gk_0_xyyyy = primBuffer.data(gkoff + 21 * idx + 10);

                auto gk_0_xyyyz = primBuffer.data(gkoff + 21 * idx + 11);

                auto gk_0_xyyzz = primBuffer.data(gkoff + 21 * idx + 12);

                auto gk_0_xyzzz = primBuffer.data(gkoff + 21 * idx + 13);

                auto gk_0_xzzzz = primBuffer.data(gkoff + 21 * idx + 14);

                auto gk_0_yyyyy = primBuffer.data(gkoff + 21 * idx + 15);

                auto gk_0_yyyyz = primBuffer.data(gkoff + 21 * idx + 16);

                auto gk_0_yyyzz = primBuffer.data(gkoff + 21 * idx + 17);

                auto gk_0_yyzzz = primBuffer.data(gkoff + 21 * idx + 18);

                auto gk_0_yzzzz = primBuffer.data(gkoff + 21 * idx + 19);

                auto gk_0_zzzzz = primBuffer.data(gkoff + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SI)^(m+1) integrals

                auto g11_0_xxxxxx = primBuffer.data(g11off + 28 * idx);

                auto g11_0_xxxxxy = primBuffer.data(g11off + 28 * idx + 1);

                auto g11_0_xxxxxz = primBuffer.data(g11off + 28 * idx + 2);

                auto g11_0_xxxxyy = primBuffer.data(g11off + 28 * idx + 3);

                auto g11_0_xxxxyz = primBuffer.data(g11off + 28 * idx + 4);

                auto g11_0_xxxxzz = primBuffer.data(g11off + 28 * idx + 5);

                auto g11_0_xxxyyy = primBuffer.data(g11off + 28 * idx + 6);

                auto g11_0_xxxyyz = primBuffer.data(g11off + 28 * idx + 7);

                auto g11_0_xxxyzz = primBuffer.data(g11off + 28 * idx + 8);

                auto g11_0_xxxzzz = primBuffer.data(g11off + 28 * idx + 9);

                auto g11_0_xxyyyy = primBuffer.data(g11off + 28 * idx + 10);

                auto g11_0_xxyyyz = primBuffer.data(g11off + 28 * idx + 11);

                auto g11_0_xxyyzz = primBuffer.data(g11off + 28 * idx + 12);

                auto g11_0_xxyzzz = primBuffer.data(g11off + 28 * idx + 13);

                auto g11_0_xxzzzz = primBuffer.data(g11off + 28 * idx + 14);

                auto g11_0_xyyyyy = primBuffer.data(g11off + 28 * idx + 15);

                auto g11_0_xyyyyz = primBuffer.data(g11off + 28 * idx + 16);

                auto g11_0_xyyyzz = primBuffer.data(g11off + 28 * idx + 17);

                auto g11_0_xyyzzz = primBuffer.data(g11off + 28 * idx + 18);

                auto g11_0_xyzzzz = primBuffer.data(g11off + 28 * idx + 19);

                auto g11_0_xzzzzz = primBuffer.data(g11off + 28 * idx + 20);

                auto g11_0_yyyyyy = primBuffer.data(g11off + 28 * idx + 21);

                auto g11_0_yyyyyz = primBuffer.data(g11off + 28 * idx + 22);

                auto g11_0_yyyyzz = primBuffer.data(g11off + 28 * idx + 23);

                auto g11_0_yyyzzz = primBuffer.data(g11off + 28 * idx + 24);

                auto g11_0_yyzzzz = primBuffer.data(g11off + 28 * idx + 25);

                auto g11_0_yzzzzz = primBuffer.data(g11off + 28 * idx + 26);

                auto g11_0_zzzzzz = primBuffer.data(g11off + 28 * idx + 27);

                // set up pointers to (P|g(r,r')|SI)^(m) integrals

                auto g_x_xxxxxx = primBuffer.data(goff + 84 * idx);

                auto g_x_xxxxxy = primBuffer.data(goff + 84 * idx + 1);

                auto g_x_xxxxxz = primBuffer.data(goff + 84 * idx + 2);

                auto g_x_xxxxyy = primBuffer.data(goff + 84 * idx + 3);

                auto g_x_xxxxyz = primBuffer.data(goff + 84 * idx + 4);

                auto g_x_xxxxzz = primBuffer.data(goff + 84 * idx + 5);

                auto g_x_xxxyyy = primBuffer.data(goff + 84 * idx + 6);

                auto g_x_xxxyyz = primBuffer.data(goff + 84 * idx + 7);

                auto g_x_xxxyzz = primBuffer.data(goff + 84 * idx + 8);

                auto g_x_xxxzzz = primBuffer.data(goff + 84 * idx + 9);

                auto g_x_xxyyyy = primBuffer.data(goff + 84 * idx + 10);

                auto g_x_xxyyyz = primBuffer.data(goff + 84 * idx + 11);

                auto g_x_xxyyzz = primBuffer.data(goff + 84 * idx + 12);

                auto g_x_xxyzzz = primBuffer.data(goff + 84 * idx + 13);

                auto g_x_xxzzzz = primBuffer.data(goff + 84 * idx + 14);

                auto g_x_xyyyyy = primBuffer.data(goff + 84 * idx + 15);

                auto g_x_xyyyyz = primBuffer.data(goff + 84 * idx + 16);

                auto g_x_xyyyzz = primBuffer.data(goff + 84 * idx + 17);

                auto g_x_xyyzzz = primBuffer.data(goff + 84 * idx + 18);

                auto g_x_xyzzzz = primBuffer.data(goff + 84 * idx + 19);

                auto g_x_xzzzzz = primBuffer.data(goff + 84 * idx + 20);

                auto g_x_yyyyyy = primBuffer.data(goff + 84 * idx + 21);

                auto g_x_yyyyyz = primBuffer.data(goff + 84 * idx + 22);

                auto g_x_yyyyzz = primBuffer.data(goff + 84 * idx + 23);

                auto g_x_yyyzzz = primBuffer.data(goff + 84 * idx + 24);

                auto g_x_yyzzzz = primBuffer.data(goff + 84 * idx + 25);

                auto g_x_yzzzzz = primBuffer.data(goff + 84 * idx + 26);

                auto g_x_zzzzzz = primBuffer.data(goff + 84 * idx + 27);

                auto g_y_xxxxxx = primBuffer.data(goff + 84 * idx + 28);

                auto g_y_xxxxxy = primBuffer.data(goff + 84 * idx + 29);

                auto g_y_xxxxxz = primBuffer.data(goff + 84 * idx + 30);

                auto g_y_xxxxyy = primBuffer.data(goff + 84 * idx + 31);

                auto g_y_xxxxyz = primBuffer.data(goff + 84 * idx + 32);

                auto g_y_xxxxzz = primBuffer.data(goff + 84 * idx + 33);

                auto g_y_xxxyyy = primBuffer.data(goff + 84 * idx + 34);

                auto g_y_xxxyyz = primBuffer.data(goff + 84 * idx + 35);

                auto g_y_xxxyzz = primBuffer.data(goff + 84 * idx + 36);

                auto g_y_xxxzzz = primBuffer.data(goff + 84 * idx + 37);

                auto g_y_xxyyyy = primBuffer.data(goff + 84 * idx + 38);

                auto g_y_xxyyyz = primBuffer.data(goff + 84 * idx + 39);

                auto g_y_xxyyzz = primBuffer.data(goff + 84 * idx + 40);

                auto g_y_xxyzzz = primBuffer.data(goff + 84 * idx + 41);

                auto g_y_xxzzzz = primBuffer.data(goff + 84 * idx + 42);

                auto g_y_xyyyyy = primBuffer.data(goff + 84 * idx + 43);

                auto g_y_xyyyyz = primBuffer.data(goff + 84 * idx + 44);

                auto g_y_xyyyzz = primBuffer.data(goff + 84 * idx + 45);

                auto g_y_xyyzzz = primBuffer.data(goff + 84 * idx + 46);

                auto g_y_xyzzzz = primBuffer.data(goff + 84 * idx + 47);

                auto g_y_xzzzzz = primBuffer.data(goff + 84 * idx + 48);

                auto g_y_yyyyyy = primBuffer.data(goff + 84 * idx + 49);

                auto g_y_yyyyyz = primBuffer.data(goff + 84 * idx + 50);

                auto g_y_yyyyzz = primBuffer.data(goff + 84 * idx + 51);

                auto g_y_yyyzzz = primBuffer.data(goff + 84 * idx + 52);

                auto g_y_yyzzzz = primBuffer.data(goff + 84 * idx + 53);

                auto g_y_yzzzzz = primBuffer.data(goff + 84 * idx + 54);

                auto g_y_zzzzzz = primBuffer.data(goff + 84 * idx + 55);

                auto g_z_xxxxxx = primBuffer.data(goff + 84 * idx + 56);

                auto g_z_xxxxxy = primBuffer.data(goff + 84 * idx + 57);

                auto g_z_xxxxxz = primBuffer.data(goff + 84 * idx + 58);

                auto g_z_xxxxyy = primBuffer.data(goff + 84 * idx + 59);

                auto g_z_xxxxyz = primBuffer.data(goff + 84 * idx + 60);

                auto g_z_xxxxzz = primBuffer.data(goff + 84 * idx + 61);

                auto g_z_xxxyyy = primBuffer.data(goff + 84 * idx + 62);

                auto g_z_xxxyyz = primBuffer.data(goff + 84 * idx + 63);

                auto g_z_xxxyzz = primBuffer.data(goff + 84 * idx + 64);

                auto g_z_xxxzzz = primBuffer.data(goff + 84 * idx + 65);

                auto g_z_xxyyyy = primBuffer.data(goff + 84 * idx + 66);

                auto g_z_xxyyyz = primBuffer.data(goff + 84 * idx + 67);

                auto g_z_xxyyzz = primBuffer.data(goff + 84 * idx + 68);

                auto g_z_xxyzzz = primBuffer.data(goff + 84 * idx + 69);

                auto g_z_xxzzzz = primBuffer.data(goff + 84 * idx + 70);

                auto g_z_xyyyyy = primBuffer.data(goff + 84 * idx + 71);

                auto g_z_xyyyyz = primBuffer.data(goff + 84 * idx + 72);

                auto g_z_xyyyzz = primBuffer.data(goff + 84 * idx + 73);

                auto g_z_xyyzzz = primBuffer.data(goff + 84 * idx + 74);

                auto g_z_xyzzzz = primBuffer.data(goff + 84 * idx + 75);

                auto g_z_xzzzzz = primBuffer.data(goff + 84 * idx + 76);

                auto g_z_yyyyyy = primBuffer.data(goff + 84 * idx + 77);

                auto g_z_yyyyyz = primBuffer.data(goff + 84 * idx + 78);

                auto g_z_yyyyzz = primBuffer.data(goff + 84 * idx + 79);

                auto g_z_yyyzzz = primBuffer.data(goff + 84 * idx + 80);

                auto g_z_yyzzzz = primBuffer.data(goff + 84 * idx + 81);

                auto g_z_yzzzzz = primBuffer.data(goff + 84 * idx + 82);

                auto g_z_zzzzzz = primBuffer.data(goff + 84 * idx + 83);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xxxxx, gk_0_xxxxy,\
                                         gk_0_xxxxz, gk_0_xxxyy, gk_0_xxxyz, gk_0_xxxzz,\
                                         gk_0_xxyyy, gk_0_xxyyz, gk_0_xxyzz, gk_0_xxzzz,\
                                         gk_0_xyyyy, gk_0_xyyyz, gk_0_xyyzz, gk_0_xyzzz,\
                                         gk_0_xzzzz, gk_0_yyyyy, gk_0_yyyyz, gk_0_yyyzz,\
                                         gk_0_yyzzz, gk_0_yzzzz, gk_0_zzzzz, g11_0_xxxxxx,\
                                         g11_0_xxxxxy, g11_0_xxxxxz, g11_0_xxxxyy,\
                                         g11_0_xxxxyz, g11_0_xxxxzz, g11_0_xxxyyy,\
                                         g11_0_xxxyyz, g11_0_xxxyzz, g11_0_xxxzzz,\
                                         g11_0_xxyyyy, g11_0_xxyyyz, g11_0_xxyyzz,\
                                         g11_0_xxyzzz, g11_0_xxzzzz, g11_0_xyyyyy,\
                                         g11_0_xyyyyz, g11_0_xyyyzz, g11_0_xyyzzz,\
                                         g11_0_xyzzzz, g11_0_xzzzzz, g11_0_yyyyyy,\
                                         g11_0_yyyyyz, g11_0_yyyyzz, g11_0_yyyzzz,\
                                         g11_0_yyzzzz, g11_0_yzzzzz, g11_0_zzzzzz,\
                                         g_x_xxxxxx, g_x_xxxxxy, g_x_xxxxxz, g_x_xxxxyy,\
                                         g_x_xxxxyz, g_x_xxxxzz, g_x_xxxyyy, g_x_xxxyyz,\
                                         g_x_xxxyzz, g_x_xxxzzz, g_x_xxyyyy, g_x_xxyyyz,\
                                         g_x_xxyyzz, g_x_xxyzzz, g_x_xxzzzz, g_x_xyyyyy,\
                                         g_x_xyyyyz, g_x_xyyyzz, g_x_xyyzzz, g_x_xyzzzz,\
                                         g_x_xzzzzz, g_x_yyyyyy, g_x_yyyyyz, g_x_yyyyzz,\
                                         g_x_yyyzzz, g_x_yyzzzz, g_x_yzzzzz, g_x_zzzzzz,\
                                         g_y_xxxxxx, g_y_xxxxxy, g_y_xxxxxz, g_y_xxxxyy,\
                                         g_y_xxxxyz, g_y_xxxxzz, g_y_xxxyyy, g_y_xxxyyz,\
                                         g_y_xxxyzz, g_y_xxxzzz, g_y_xxyyyy, g_y_xxyyyz,\
                                         g_y_xxyyzz, g_y_xxyzzz, g_y_xxzzzz, g_y_xyyyyy,\
                                         g_y_xyyyyz, g_y_xyyyzz, g_y_xyyzzz, g_y_xyzzzz,\
                                         g_y_xzzzzz, g_y_yyyyyy, g_y_yyyyyz, g_y_yyyyzz,\
                                         g_y_yyyzzz, g_y_yyzzzz, g_y_yzzzzz, g_y_zzzzzz,\
                                         g_z_xxxxxx, g_z_xxxxxy, g_z_xxxxxz, g_z_xxxxyy,\
                                         g_z_xxxxyz, g_z_xxxxzz, g_z_xxxyyy, g_z_xxxyyz,\
                                         g_z_xxxyzz, g_z_xxxzzz, g_z_xxyyyy, g_z_xxyyyz,\
                                         g_z_xxyyzz, g_z_xxyzzz, g_z_xxzzzz, g_z_xyyyyy,\
                                         g_z_xyyyyz, g_z_xyyyzz, g_z_xyyzzz, g_z_xyzzzz,\
                                         g_z_xzzzzz, g_z_yyyyyy, g_z_yyyyyz, g_z_yyyyzz,\
                                         g_z_yyyzzz, g_z_yyzzzz, g_z_yzzzzz, g_z_zzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxxxxx[k] = fr * g11_0_xxxxxx[k] + 6.0 * f2t * gk_0_xxxxx[k];

                    g_x_xxxxxy[k] = fr * g11_0_xxxxxy[k] + 5.0 * f2t * gk_0_xxxxy[k];

                    g_x_xxxxxz[k] = fr * g11_0_xxxxxz[k] + 5.0 * f2t * gk_0_xxxxz[k];

                    g_x_xxxxyy[k] = fr * g11_0_xxxxyy[k] + 4.0 * f2t * gk_0_xxxyy[k];

                    g_x_xxxxyz[k] = fr * g11_0_xxxxyz[k] + 4.0 * f2t * gk_0_xxxyz[k];

                    g_x_xxxxzz[k] = fr * g11_0_xxxxzz[k] + 4.0 * f2t * gk_0_xxxzz[k];

                    g_x_xxxyyy[k] = fr * g11_0_xxxyyy[k] + 3.0 * f2t * gk_0_xxyyy[k];

                    g_x_xxxyyz[k] = fr * g11_0_xxxyyz[k] + 3.0 * f2t * gk_0_xxyyz[k];

                    g_x_xxxyzz[k] = fr * g11_0_xxxyzz[k] + 3.0 * f2t * gk_0_xxyzz[k];

                    g_x_xxxzzz[k] = fr * g11_0_xxxzzz[k] + 3.0 * f2t * gk_0_xxzzz[k];

                    g_x_xxyyyy[k] = fr * g11_0_xxyyyy[k] + 2.0 * f2t * gk_0_xyyyy[k];

                    g_x_xxyyyz[k] = fr * g11_0_xxyyyz[k] + 2.0 * f2t * gk_0_xyyyz[k];

                    g_x_xxyyzz[k] = fr * g11_0_xxyyzz[k] + 2.0 * f2t * gk_0_xyyzz[k];

                    g_x_xxyzzz[k] = fr * g11_0_xxyzzz[k] + 2.0 * f2t * gk_0_xyzzz[k];

                    g_x_xxzzzz[k] = fr * g11_0_xxzzzz[k] + 2.0 * f2t * gk_0_xzzzz[k];

                    g_x_xyyyyy[k] = fr * g11_0_xyyyyy[k] + f2t * gk_0_yyyyy[k];

                    g_x_xyyyyz[k] = fr * g11_0_xyyyyz[k] + f2t * gk_0_yyyyz[k];

                    g_x_xyyyzz[k] = fr * g11_0_xyyyzz[k] + f2t * gk_0_yyyzz[k];

                    g_x_xyyzzz[k] = fr * g11_0_xyyzzz[k] + f2t * gk_0_yyzzz[k];

                    g_x_xyzzzz[k] = fr * g11_0_xyzzzz[k] + f2t * gk_0_yzzzz[k];

                    g_x_xzzzzz[k] = fr * g11_0_xzzzzz[k] + f2t * gk_0_zzzzz[k];

                    g_x_yyyyyy[k] = fr * g11_0_yyyyyy[k];

                    g_x_yyyyyz[k] = fr * g11_0_yyyyyz[k];

                    g_x_yyyyzz[k] = fr * g11_0_yyyyzz[k];

                    g_x_yyyzzz[k] = fr * g11_0_yyyzzz[k];

                    g_x_yyzzzz[k] = fr * g11_0_yyzzzz[k];

                    g_x_yzzzzz[k] = fr * g11_0_yzzzzz[k];

                    g_x_zzzzzz[k] = fr * g11_0_zzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxxxxx[k] = fr * g11_0_xxxxxx[k];

                    g_y_xxxxxy[k] = fr * g11_0_xxxxxy[k] + f2t * gk_0_xxxxx[k];

                    g_y_xxxxxz[k] = fr * g11_0_xxxxxz[k];

                    g_y_xxxxyy[k] = fr * g11_0_xxxxyy[k] + 2.0 * f2t * gk_0_xxxxy[k];

                    g_y_xxxxyz[k] = fr * g11_0_xxxxyz[k] + f2t * gk_0_xxxxz[k];

                    g_y_xxxxzz[k] = fr * g11_0_xxxxzz[k];

                    g_y_xxxyyy[k] = fr * g11_0_xxxyyy[k] + 3.0 * f2t * gk_0_xxxyy[k];

                    g_y_xxxyyz[k] = fr * g11_0_xxxyyz[k] + 2.0 * f2t * gk_0_xxxyz[k];

                    g_y_xxxyzz[k] = fr * g11_0_xxxyzz[k] + f2t * gk_0_xxxzz[k];

                    g_y_xxxzzz[k] = fr * g11_0_xxxzzz[k];

                    g_y_xxyyyy[k] = fr * g11_0_xxyyyy[k] + 4.0 * f2t * gk_0_xxyyy[k];

                    g_y_xxyyyz[k] = fr * g11_0_xxyyyz[k] + 3.0 * f2t * gk_0_xxyyz[k];

                    g_y_xxyyzz[k] = fr * g11_0_xxyyzz[k] + 2.0 * f2t * gk_0_xxyzz[k];

                    g_y_xxyzzz[k] = fr * g11_0_xxyzzz[k] + f2t * gk_0_xxzzz[k];

                    g_y_xxzzzz[k] = fr * g11_0_xxzzzz[k];

                    g_y_xyyyyy[k] = fr * g11_0_xyyyyy[k] + 5.0 * f2t * gk_0_xyyyy[k];

                    g_y_xyyyyz[k] = fr * g11_0_xyyyyz[k] + 4.0 * f2t * gk_0_xyyyz[k];

                    g_y_xyyyzz[k] = fr * g11_0_xyyyzz[k] + 3.0 * f2t * gk_0_xyyzz[k];

                    g_y_xyyzzz[k] = fr * g11_0_xyyzzz[k] + 2.0 * f2t * gk_0_xyzzz[k];

                    g_y_xyzzzz[k] = fr * g11_0_xyzzzz[k] + f2t * gk_0_xzzzz[k];

                    g_y_xzzzzz[k] = fr * g11_0_xzzzzz[k];

                    g_y_yyyyyy[k] = fr * g11_0_yyyyyy[k] + 6.0 * f2t * gk_0_yyyyy[k];

                    g_y_yyyyyz[k] = fr * g11_0_yyyyyz[k] + 5.0 * f2t * gk_0_yyyyz[k];

                    g_y_yyyyzz[k] = fr * g11_0_yyyyzz[k] + 4.0 * f2t * gk_0_yyyzz[k];

                    g_y_yyyzzz[k] = fr * g11_0_yyyzzz[k] + 3.0 * f2t * gk_0_yyzzz[k];

                    g_y_yyzzzz[k] = fr * g11_0_yyzzzz[k] + 2.0 * f2t * gk_0_yzzzz[k];

                    g_y_yzzzzz[k] = fr * g11_0_yzzzzz[k] + f2t * gk_0_zzzzz[k];

                    g_y_zzzzzz[k] = fr * g11_0_zzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxxxxx[k] = fr * g11_0_xxxxxx[k];

                    g_z_xxxxxy[k] = fr * g11_0_xxxxxy[k];

                    g_z_xxxxxz[k] = fr * g11_0_xxxxxz[k] + f2t * gk_0_xxxxx[k];

                    g_z_xxxxyy[k] = fr * g11_0_xxxxyy[k];

                    g_z_xxxxyz[k] = fr * g11_0_xxxxyz[k] + f2t * gk_0_xxxxy[k];

                    g_z_xxxxzz[k] = fr * g11_0_xxxxzz[k] + 2.0 * f2t * gk_0_xxxxz[k];

                    g_z_xxxyyy[k] = fr * g11_0_xxxyyy[k];

                    g_z_xxxyyz[k] = fr * g11_0_xxxyyz[k] + f2t * gk_0_xxxyy[k];

                    g_z_xxxyzz[k] = fr * g11_0_xxxyzz[k] + 2.0 * f2t * gk_0_xxxyz[k];

                    g_z_xxxzzz[k] = fr * g11_0_xxxzzz[k] + 3.0 * f2t * gk_0_xxxzz[k];

                    g_z_xxyyyy[k] = fr * g11_0_xxyyyy[k];

                    g_z_xxyyyz[k] = fr * g11_0_xxyyyz[k] + f2t * gk_0_xxyyy[k];

                    g_z_xxyyzz[k] = fr * g11_0_xxyyzz[k] + 2.0 * f2t * gk_0_xxyyz[k];

                    g_z_xxyzzz[k] = fr * g11_0_xxyzzz[k] + 3.0 * f2t * gk_0_xxyzz[k];

                    g_z_xxzzzz[k] = fr * g11_0_xxzzzz[k] + 4.0 * f2t * gk_0_xxzzz[k];

                    g_z_xyyyyy[k] = fr * g11_0_xyyyyy[k];

                    g_z_xyyyyz[k] = fr * g11_0_xyyyyz[k] + f2t * gk_0_xyyyy[k];

                    g_z_xyyyzz[k] = fr * g11_0_xyyyzz[k] + 2.0 * f2t * gk_0_xyyyz[k];

                    g_z_xyyzzz[k] = fr * g11_0_xyyzzz[k] + 3.0 * f2t * gk_0_xyyzz[k];

                    g_z_xyzzzz[k] = fr * g11_0_xyzzzz[k] + 4.0 * f2t * gk_0_xyzzz[k];

                    g_z_xzzzzz[k] = fr * g11_0_xzzzzz[k] + 5.0 * f2t * gk_0_xzzzz[k];

                    g_z_yyyyyy[k] = fr * g11_0_yyyyyy[k];

                    g_z_yyyyyz[k] = fr * g11_0_yyyyyz[k] + f2t * gk_0_yyyyy[k];

                    g_z_yyyyzz[k] = fr * g11_0_yyyyzz[k] + 2.0 * f2t * gk_0_yyyyz[k];

                    g_z_yyyzzz[k] = fr * g11_0_yyyzzz[k] + 3.0 * f2t * gk_0_yyyzz[k];

                    g_z_yyzzzz[k] = fr * g11_0_yyzzzz[k] + 4.0 * f2t * gk_0_yyzzz[k];

                    g_z_yzzzzz[k] = fr * g11_0_yzzzzz[k] + 5.0 * f2t * gk_0_yzzzz[k];

                    g_z_zzzzzz[k] = fr * g11_0_zzzzzz[k] + 6.0 * f2t * gk_0_zzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSI(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 6);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 6, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 6, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 5, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SH)^(m+1) integrals

                auto gk_x_xxxxx = primBuffer.data(gkoff + 63 * idx);

                auto gk_x_xxxxy = primBuffer.data(gkoff + 63 * idx + 1);

                auto gk_x_xxxxz = primBuffer.data(gkoff + 63 * idx + 2);

                auto gk_x_xxxyy = primBuffer.data(gkoff + 63 * idx + 3);

                auto gk_x_xxxyz = primBuffer.data(gkoff + 63 * idx + 4);

                auto gk_x_xxxzz = primBuffer.data(gkoff + 63 * idx + 5);

                auto gk_x_xxyyy = primBuffer.data(gkoff + 63 * idx + 6);

                auto gk_x_xxyyz = primBuffer.data(gkoff + 63 * idx + 7);

                auto gk_x_xxyzz = primBuffer.data(gkoff + 63 * idx + 8);

                auto gk_x_xxzzz = primBuffer.data(gkoff + 63 * idx + 9);

                auto gk_x_xyyyy = primBuffer.data(gkoff + 63 * idx + 10);

                auto gk_x_xyyyz = primBuffer.data(gkoff + 63 * idx + 11);

                auto gk_x_xyyzz = primBuffer.data(gkoff + 63 * idx + 12);

                auto gk_x_xyzzz = primBuffer.data(gkoff + 63 * idx + 13);

                auto gk_x_xzzzz = primBuffer.data(gkoff + 63 * idx + 14);

                auto gk_x_yyyyy = primBuffer.data(gkoff + 63 * idx + 15);

                auto gk_x_yyyyz = primBuffer.data(gkoff + 63 * idx + 16);

                auto gk_x_yyyzz = primBuffer.data(gkoff + 63 * idx + 17);

                auto gk_x_yyzzz = primBuffer.data(gkoff + 63 * idx + 18);

                auto gk_x_yzzzz = primBuffer.data(gkoff + 63 * idx + 19);

                auto gk_x_zzzzz = primBuffer.data(gkoff + 63 * idx + 20);

                auto gk_y_xxxxx = primBuffer.data(gkoff + 63 * idx + 21);

                auto gk_y_xxxxy = primBuffer.data(gkoff + 63 * idx + 22);

                auto gk_y_xxxxz = primBuffer.data(gkoff + 63 * idx + 23);

                auto gk_y_xxxyy = primBuffer.data(gkoff + 63 * idx + 24);

                auto gk_y_xxxyz = primBuffer.data(gkoff + 63 * idx + 25);

                auto gk_y_xxxzz = primBuffer.data(gkoff + 63 * idx + 26);

                auto gk_y_xxyyy = primBuffer.data(gkoff + 63 * idx + 27);

                auto gk_y_xxyyz = primBuffer.data(gkoff + 63 * idx + 28);

                auto gk_y_xxyzz = primBuffer.data(gkoff + 63 * idx + 29);

                auto gk_y_xxzzz = primBuffer.data(gkoff + 63 * idx + 30);

                auto gk_y_xyyyy = primBuffer.data(gkoff + 63 * idx + 31);

                auto gk_y_xyyyz = primBuffer.data(gkoff + 63 * idx + 32);

                auto gk_y_xyyzz = primBuffer.data(gkoff + 63 * idx + 33);

                auto gk_y_xyzzz = primBuffer.data(gkoff + 63 * idx + 34);

                auto gk_y_xzzzz = primBuffer.data(gkoff + 63 * idx + 35);

                auto gk_y_yyyyy = primBuffer.data(gkoff + 63 * idx + 36);

                auto gk_y_yyyyz = primBuffer.data(gkoff + 63 * idx + 37);

                auto gk_y_yyyzz = primBuffer.data(gkoff + 63 * idx + 38);

                auto gk_y_yyzzz = primBuffer.data(gkoff + 63 * idx + 39);

                auto gk_y_yzzzz = primBuffer.data(gkoff + 63 * idx + 40);

                auto gk_y_zzzzz = primBuffer.data(gkoff + 63 * idx + 41);

                auto gk_z_xxxxx = primBuffer.data(gkoff + 63 * idx + 42);

                auto gk_z_xxxxy = primBuffer.data(gkoff + 63 * idx + 43);

                auto gk_z_xxxxz = primBuffer.data(gkoff + 63 * idx + 44);

                auto gk_z_xxxyy = primBuffer.data(gkoff + 63 * idx + 45);

                auto gk_z_xxxyz = primBuffer.data(gkoff + 63 * idx + 46);

                auto gk_z_xxxzz = primBuffer.data(gkoff + 63 * idx + 47);

                auto gk_z_xxyyy = primBuffer.data(gkoff + 63 * idx + 48);

                auto gk_z_xxyyz = primBuffer.data(gkoff + 63 * idx + 49);

                auto gk_z_xxyzz = primBuffer.data(gkoff + 63 * idx + 50);

                auto gk_z_xxzzz = primBuffer.data(gkoff + 63 * idx + 51);

                auto gk_z_xyyyy = primBuffer.data(gkoff + 63 * idx + 52);

                auto gk_z_xyyyz = primBuffer.data(gkoff + 63 * idx + 53);

                auto gk_z_xyyzz = primBuffer.data(gkoff + 63 * idx + 54);

                auto gk_z_xyzzz = primBuffer.data(gkoff + 63 * idx + 55);

                auto gk_z_xzzzz = primBuffer.data(gkoff + 63 * idx + 56);

                auto gk_z_yyyyy = primBuffer.data(gkoff + 63 * idx + 57);

                auto gk_z_yyyyz = primBuffer.data(gkoff + 63 * idx + 58);

                auto gk_z_yyyzz = primBuffer.data(gkoff + 63 * idx + 59);

                auto gk_z_yyzzz = primBuffer.data(gkoff + 63 * idx + 60);

                auto gk_z_yzzzz = primBuffer.data(gkoff + 63 * idx + 61);

                auto gk_z_zzzzz = primBuffer.data(gkoff + 63 * idx + 62);

                // set up pointers to (S|g(r,r')|SI)^(m) integrals

                auto g20_0_xxxxxx = primBuffer.data(g20off + 28 * idx);

                auto g20_0_xxxxxy = primBuffer.data(g20off + 28 * idx + 1);

                auto g20_0_xxxxxz = primBuffer.data(g20off + 28 * idx + 2);

                auto g20_0_xxxxyy = primBuffer.data(g20off + 28 * idx + 3);

                auto g20_0_xxxxyz = primBuffer.data(g20off + 28 * idx + 4);

                auto g20_0_xxxxzz = primBuffer.data(g20off + 28 * idx + 5);

                auto g20_0_xxxyyy = primBuffer.data(g20off + 28 * idx + 6);

                auto g20_0_xxxyyz = primBuffer.data(g20off + 28 * idx + 7);

                auto g20_0_xxxyzz = primBuffer.data(g20off + 28 * idx + 8);

                auto g20_0_xxxzzz = primBuffer.data(g20off + 28 * idx + 9);

                auto g20_0_xxyyyy = primBuffer.data(g20off + 28 * idx + 10);

                auto g20_0_xxyyyz = primBuffer.data(g20off + 28 * idx + 11);

                auto g20_0_xxyyzz = primBuffer.data(g20off + 28 * idx + 12);

                auto g20_0_xxyzzz = primBuffer.data(g20off + 28 * idx + 13);

                auto g20_0_xxzzzz = primBuffer.data(g20off + 28 * idx + 14);

                auto g20_0_xyyyyy = primBuffer.data(g20off + 28 * idx + 15);

                auto g20_0_xyyyyz = primBuffer.data(g20off + 28 * idx + 16);

                auto g20_0_xyyyzz = primBuffer.data(g20off + 28 * idx + 17);

                auto g20_0_xyyzzz = primBuffer.data(g20off + 28 * idx + 18);

                auto g20_0_xyzzzz = primBuffer.data(g20off + 28 * idx + 19);

                auto g20_0_xzzzzz = primBuffer.data(g20off + 28 * idx + 20);

                auto g20_0_yyyyyy = primBuffer.data(g20off + 28 * idx + 21);

                auto g20_0_yyyyyz = primBuffer.data(g20off + 28 * idx + 22);

                auto g20_0_yyyyzz = primBuffer.data(g20off + 28 * idx + 23);

                auto g20_0_yyyzzz = primBuffer.data(g20off + 28 * idx + 24);

                auto g20_0_yyzzzz = primBuffer.data(g20off + 28 * idx + 25);

                auto g20_0_yzzzzz = primBuffer.data(g20off + 28 * idx + 26);

                auto g20_0_zzzzzz = primBuffer.data(g20off + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SI)^(m+1) integrals

                auto g21_0_xxxxxx = primBuffer.data(g21off + 28 * idx);

                auto g21_0_xxxxxy = primBuffer.data(g21off + 28 * idx + 1);

                auto g21_0_xxxxxz = primBuffer.data(g21off + 28 * idx + 2);

                auto g21_0_xxxxyy = primBuffer.data(g21off + 28 * idx + 3);

                auto g21_0_xxxxyz = primBuffer.data(g21off + 28 * idx + 4);

                auto g21_0_xxxxzz = primBuffer.data(g21off + 28 * idx + 5);

                auto g21_0_xxxyyy = primBuffer.data(g21off + 28 * idx + 6);

                auto g21_0_xxxyyz = primBuffer.data(g21off + 28 * idx + 7);

                auto g21_0_xxxyzz = primBuffer.data(g21off + 28 * idx + 8);

                auto g21_0_xxxzzz = primBuffer.data(g21off + 28 * idx + 9);

                auto g21_0_xxyyyy = primBuffer.data(g21off + 28 * idx + 10);

                auto g21_0_xxyyyz = primBuffer.data(g21off + 28 * idx + 11);

                auto g21_0_xxyyzz = primBuffer.data(g21off + 28 * idx + 12);

                auto g21_0_xxyzzz = primBuffer.data(g21off + 28 * idx + 13);

                auto g21_0_xxzzzz = primBuffer.data(g21off + 28 * idx + 14);

                auto g21_0_xyyyyy = primBuffer.data(g21off + 28 * idx + 15);

                auto g21_0_xyyyyz = primBuffer.data(g21off + 28 * idx + 16);

                auto g21_0_xyyyzz = primBuffer.data(g21off + 28 * idx + 17);

                auto g21_0_xyyzzz = primBuffer.data(g21off + 28 * idx + 18);

                auto g21_0_xyzzzz = primBuffer.data(g21off + 28 * idx + 19);

                auto g21_0_xzzzzz = primBuffer.data(g21off + 28 * idx + 20);

                auto g21_0_yyyyyy = primBuffer.data(g21off + 28 * idx + 21);

                auto g21_0_yyyyyz = primBuffer.data(g21off + 28 * idx + 22);

                auto g21_0_yyyyzz = primBuffer.data(g21off + 28 * idx + 23);

                auto g21_0_yyyzzz = primBuffer.data(g21off + 28 * idx + 24);

                auto g21_0_yyzzzz = primBuffer.data(g21off + 28 * idx + 25);

                auto g21_0_yzzzzz = primBuffer.data(g21off + 28 * idx + 26);

                auto g21_0_zzzzzz = primBuffer.data(g21off + 28 * idx + 27);

                // set up pointers to (P|g(r,r')|SI)^(m+1) integrals

                auto g11_x_xxxxxx = primBuffer.data(g11off + 84 * idx);

                auto g11_x_xxxxxy = primBuffer.data(g11off + 84 * idx + 1);

                auto g11_x_xxxxxz = primBuffer.data(g11off + 84 * idx + 2);

                auto g11_x_xxxxyy = primBuffer.data(g11off + 84 * idx + 3);

                auto g11_x_xxxxyz = primBuffer.data(g11off + 84 * idx + 4);

                auto g11_x_xxxxzz = primBuffer.data(g11off + 84 * idx + 5);

                auto g11_x_xxxyyy = primBuffer.data(g11off + 84 * idx + 6);

                auto g11_x_xxxyyz = primBuffer.data(g11off + 84 * idx + 7);

                auto g11_x_xxxyzz = primBuffer.data(g11off + 84 * idx + 8);

                auto g11_x_xxxzzz = primBuffer.data(g11off + 84 * idx + 9);

                auto g11_x_xxyyyy = primBuffer.data(g11off + 84 * idx + 10);

                auto g11_x_xxyyyz = primBuffer.data(g11off + 84 * idx + 11);

                auto g11_x_xxyyzz = primBuffer.data(g11off + 84 * idx + 12);

                auto g11_x_xxyzzz = primBuffer.data(g11off + 84 * idx + 13);

                auto g11_x_xxzzzz = primBuffer.data(g11off + 84 * idx + 14);

                auto g11_x_xyyyyy = primBuffer.data(g11off + 84 * idx + 15);

                auto g11_x_xyyyyz = primBuffer.data(g11off + 84 * idx + 16);

                auto g11_x_xyyyzz = primBuffer.data(g11off + 84 * idx + 17);

                auto g11_x_xyyzzz = primBuffer.data(g11off + 84 * idx + 18);

                auto g11_x_xyzzzz = primBuffer.data(g11off + 84 * idx + 19);

                auto g11_x_xzzzzz = primBuffer.data(g11off + 84 * idx + 20);

                auto g11_x_yyyyyy = primBuffer.data(g11off + 84 * idx + 21);

                auto g11_x_yyyyyz = primBuffer.data(g11off + 84 * idx + 22);

                auto g11_x_yyyyzz = primBuffer.data(g11off + 84 * idx + 23);

                auto g11_x_yyyzzz = primBuffer.data(g11off + 84 * idx + 24);

                auto g11_x_yyzzzz = primBuffer.data(g11off + 84 * idx + 25);

                auto g11_x_yzzzzz = primBuffer.data(g11off + 84 * idx + 26);

                auto g11_x_zzzzzz = primBuffer.data(g11off + 84 * idx + 27);

                auto g11_y_xxxxxx = primBuffer.data(g11off + 84 * idx + 28);

                auto g11_y_xxxxxy = primBuffer.data(g11off + 84 * idx + 29);

                auto g11_y_xxxxxz = primBuffer.data(g11off + 84 * idx + 30);

                auto g11_y_xxxxyy = primBuffer.data(g11off + 84 * idx + 31);

                auto g11_y_xxxxyz = primBuffer.data(g11off + 84 * idx + 32);

                auto g11_y_xxxxzz = primBuffer.data(g11off + 84 * idx + 33);

                auto g11_y_xxxyyy = primBuffer.data(g11off + 84 * idx + 34);

                auto g11_y_xxxyyz = primBuffer.data(g11off + 84 * idx + 35);

                auto g11_y_xxxyzz = primBuffer.data(g11off + 84 * idx + 36);

                auto g11_y_xxxzzz = primBuffer.data(g11off + 84 * idx + 37);

                auto g11_y_xxyyyy = primBuffer.data(g11off + 84 * idx + 38);

                auto g11_y_xxyyyz = primBuffer.data(g11off + 84 * idx + 39);

                auto g11_y_xxyyzz = primBuffer.data(g11off + 84 * idx + 40);

                auto g11_y_xxyzzz = primBuffer.data(g11off + 84 * idx + 41);

                auto g11_y_xxzzzz = primBuffer.data(g11off + 84 * idx + 42);

                auto g11_y_xyyyyy = primBuffer.data(g11off + 84 * idx + 43);

                auto g11_y_xyyyyz = primBuffer.data(g11off + 84 * idx + 44);

                auto g11_y_xyyyzz = primBuffer.data(g11off + 84 * idx + 45);

                auto g11_y_xyyzzz = primBuffer.data(g11off + 84 * idx + 46);

                auto g11_y_xyzzzz = primBuffer.data(g11off + 84 * idx + 47);

                auto g11_y_xzzzzz = primBuffer.data(g11off + 84 * idx + 48);

                auto g11_y_yyyyyy = primBuffer.data(g11off + 84 * idx + 49);

                auto g11_y_yyyyyz = primBuffer.data(g11off + 84 * idx + 50);

                auto g11_y_yyyyzz = primBuffer.data(g11off + 84 * idx + 51);

                auto g11_y_yyyzzz = primBuffer.data(g11off + 84 * idx + 52);

                auto g11_y_yyzzzz = primBuffer.data(g11off + 84 * idx + 53);

                auto g11_y_yzzzzz = primBuffer.data(g11off + 84 * idx + 54);

                auto g11_y_zzzzzz = primBuffer.data(g11off + 84 * idx + 55);

                auto g11_z_xxxxxx = primBuffer.data(g11off + 84 * idx + 56);

                auto g11_z_xxxxxy = primBuffer.data(g11off + 84 * idx + 57);

                auto g11_z_xxxxxz = primBuffer.data(g11off + 84 * idx + 58);

                auto g11_z_xxxxyy = primBuffer.data(g11off + 84 * idx + 59);

                auto g11_z_xxxxyz = primBuffer.data(g11off + 84 * idx + 60);

                auto g11_z_xxxxzz = primBuffer.data(g11off + 84 * idx + 61);

                auto g11_z_xxxyyy = primBuffer.data(g11off + 84 * idx + 62);

                auto g11_z_xxxyyz = primBuffer.data(g11off + 84 * idx + 63);

                auto g11_z_xxxyzz = primBuffer.data(g11off + 84 * idx + 64);

                auto g11_z_xxxzzz = primBuffer.data(g11off + 84 * idx + 65);

                auto g11_z_xxyyyy = primBuffer.data(g11off + 84 * idx + 66);

                auto g11_z_xxyyyz = primBuffer.data(g11off + 84 * idx + 67);

                auto g11_z_xxyyzz = primBuffer.data(g11off + 84 * idx + 68);

                auto g11_z_xxyzzz = primBuffer.data(g11off + 84 * idx + 69);

                auto g11_z_xxzzzz = primBuffer.data(g11off + 84 * idx + 70);

                auto g11_z_xyyyyy = primBuffer.data(g11off + 84 * idx + 71);

                auto g11_z_xyyyyz = primBuffer.data(g11off + 84 * idx + 72);

                auto g11_z_xyyyzz = primBuffer.data(g11off + 84 * idx + 73);

                auto g11_z_xyyzzz = primBuffer.data(g11off + 84 * idx + 74);

                auto g11_z_xyzzzz = primBuffer.data(g11off + 84 * idx + 75);

                auto g11_z_xzzzzz = primBuffer.data(g11off + 84 * idx + 76);

                auto g11_z_yyyyyy = primBuffer.data(g11off + 84 * idx + 77);

                auto g11_z_yyyyyz = primBuffer.data(g11off + 84 * idx + 78);

                auto g11_z_yyyyzz = primBuffer.data(g11off + 84 * idx + 79);

                auto g11_z_yyyzzz = primBuffer.data(g11off + 84 * idx + 80);

                auto g11_z_yyzzzz = primBuffer.data(g11off + 84 * idx + 81);

                auto g11_z_yzzzzz = primBuffer.data(g11off + 84 * idx + 82);

                auto g11_z_zzzzzz = primBuffer.data(g11off + 84 * idx + 83);

                // set up pointers to (D|g(r,r')|SI)^(m) integrals

                auto g_xx_xxxxxx = primBuffer.data(goff + 168 * idx);

                auto g_xx_xxxxxy = primBuffer.data(goff + 168 * idx + 1);

                auto g_xx_xxxxxz = primBuffer.data(goff + 168 * idx + 2);

                auto g_xx_xxxxyy = primBuffer.data(goff + 168 * idx + 3);

                auto g_xx_xxxxyz = primBuffer.data(goff + 168 * idx + 4);

                auto g_xx_xxxxzz = primBuffer.data(goff + 168 * idx + 5);

                auto g_xx_xxxyyy = primBuffer.data(goff + 168 * idx + 6);

                auto g_xx_xxxyyz = primBuffer.data(goff + 168 * idx + 7);

                auto g_xx_xxxyzz = primBuffer.data(goff + 168 * idx + 8);

                auto g_xx_xxxzzz = primBuffer.data(goff + 168 * idx + 9);

                auto g_xx_xxyyyy = primBuffer.data(goff + 168 * idx + 10);

                auto g_xx_xxyyyz = primBuffer.data(goff + 168 * idx + 11);

                auto g_xx_xxyyzz = primBuffer.data(goff + 168 * idx + 12);

                auto g_xx_xxyzzz = primBuffer.data(goff + 168 * idx + 13);

                auto g_xx_xxzzzz = primBuffer.data(goff + 168 * idx + 14);

                auto g_xx_xyyyyy = primBuffer.data(goff + 168 * idx + 15);

                auto g_xx_xyyyyz = primBuffer.data(goff + 168 * idx + 16);

                auto g_xx_xyyyzz = primBuffer.data(goff + 168 * idx + 17);

                auto g_xx_xyyzzz = primBuffer.data(goff + 168 * idx + 18);

                auto g_xx_xyzzzz = primBuffer.data(goff + 168 * idx + 19);

                auto g_xx_xzzzzz = primBuffer.data(goff + 168 * idx + 20);

                auto g_xx_yyyyyy = primBuffer.data(goff + 168 * idx + 21);

                auto g_xx_yyyyyz = primBuffer.data(goff + 168 * idx + 22);

                auto g_xx_yyyyzz = primBuffer.data(goff + 168 * idx + 23);

                auto g_xx_yyyzzz = primBuffer.data(goff + 168 * idx + 24);

                auto g_xx_yyzzzz = primBuffer.data(goff + 168 * idx + 25);

                auto g_xx_yzzzzz = primBuffer.data(goff + 168 * idx + 26);

                auto g_xx_zzzzzz = primBuffer.data(goff + 168 * idx + 27);

                auto g_xy_xxxxxx = primBuffer.data(goff + 168 * idx + 28);

                auto g_xy_xxxxxy = primBuffer.data(goff + 168 * idx + 29);

                auto g_xy_xxxxxz = primBuffer.data(goff + 168 * idx + 30);

                auto g_xy_xxxxyy = primBuffer.data(goff + 168 * idx + 31);

                auto g_xy_xxxxyz = primBuffer.data(goff + 168 * idx + 32);

                auto g_xy_xxxxzz = primBuffer.data(goff + 168 * idx + 33);

                auto g_xy_xxxyyy = primBuffer.data(goff + 168 * idx + 34);

                auto g_xy_xxxyyz = primBuffer.data(goff + 168 * idx + 35);

                auto g_xy_xxxyzz = primBuffer.data(goff + 168 * idx + 36);

                auto g_xy_xxxzzz = primBuffer.data(goff + 168 * idx + 37);

                auto g_xy_xxyyyy = primBuffer.data(goff + 168 * idx + 38);

                auto g_xy_xxyyyz = primBuffer.data(goff + 168 * idx + 39);

                auto g_xy_xxyyzz = primBuffer.data(goff + 168 * idx + 40);

                auto g_xy_xxyzzz = primBuffer.data(goff + 168 * idx + 41);

                auto g_xy_xxzzzz = primBuffer.data(goff + 168 * idx + 42);

                auto g_xy_xyyyyy = primBuffer.data(goff + 168 * idx + 43);

                auto g_xy_xyyyyz = primBuffer.data(goff + 168 * idx + 44);

                auto g_xy_xyyyzz = primBuffer.data(goff + 168 * idx + 45);

                auto g_xy_xyyzzz = primBuffer.data(goff + 168 * idx + 46);

                auto g_xy_xyzzzz = primBuffer.data(goff + 168 * idx + 47);

                auto g_xy_xzzzzz = primBuffer.data(goff + 168 * idx + 48);

                auto g_xy_yyyyyy = primBuffer.data(goff + 168 * idx + 49);

                auto g_xy_yyyyyz = primBuffer.data(goff + 168 * idx + 50);

                auto g_xy_yyyyzz = primBuffer.data(goff + 168 * idx + 51);

                auto g_xy_yyyzzz = primBuffer.data(goff + 168 * idx + 52);

                auto g_xy_yyzzzz = primBuffer.data(goff + 168 * idx + 53);

                auto g_xy_yzzzzz = primBuffer.data(goff + 168 * idx + 54);

                auto g_xy_zzzzzz = primBuffer.data(goff + 168 * idx + 55);

                auto g_xz_xxxxxx = primBuffer.data(goff + 168 * idx + 56);

                auto g_xz_xxxxxy = primBuffer.data(goff + 168 * idx + 57);

                auto g_xz_xxxxxz = primBuffer.data(goff + 168 * idx + 58);

                auto g_xz_xxxxyy = primBuffer.data(goff + 168 * idx + 59);

                auto g_xz_xxxxyz = primBuffer.data(goff + 168 * idx + 60);

                auto g_xz_xxxxzz = primBuffer.data(goff + 168 * idx + 61);

                auto g_xz_xxxyyy = primBuffer.data(goff + 168 * idx + 62);

                auto g_xz_xxxyyz = primBuffer.data(goff + 168 * idx + 63);

                auto g_xz_xxxyzz = primBuffer.data(goff + 168 * idx + 64);

                auto g_xz_xxxzzz = primBuffer.data(goff + 168 * idx + 65);

                auto g_xz_xxyyyy = primBuffer.data(goff + 168 * idx + 66);

                auto g_xz_xxyyyz = primBuffer.data(goff + 168 * idx + 67);

                auto g_xz_xxyyzz = primBuffer.data(goff + 168 * idx + 68);

                auto g_xz_xxyzzz = primBuffer.data(goff + 168 * idx + 69);

                auto g_xz_xxzzzz = primBuffer.data(goff + 168 * idx + 70);

                auto g_xz_xyyyyy = primBuffer.data(goff + 168 * idx + 71);

                auto g_xz_xyyyyz = primBuffer.data(goff + 168 * idx + 72);

                auto g_xz_xyyyzz = primBuffer.data(goff + 168 * idx + 73);

                auto g_xz_xyyzzz = primBuffer.data(goff + 168 * idx + 74);

                auto g_xz_xyzzzz = primBuffer.data(goff + 168 * idx + 75);

                auto g_xz_xzzzzz = primBuffer.data(goff + 168 * idx + 76);

                auto g_xz_yyyyyy = primBuffer.data(goff + 168 * idx + 77);

                auto g_xz_yyyyyz = primBuffer.data(goff + 168 * idx + 78);

                auto g_xz_yyyyzz = primBuffer.data(goff + 168 * idx + 79);

                auto g_xz_yyyzzz = primBuffer.data(goff + 168 * idx + 80);

                auto g_xz_yyzzzz = primBuffer.data(goff + 168 * idx + 81);

                auto g_xz_yzzzzz = primBuffer.data(goff + 168 * idx + 82);

                auto g_xz_zzzzzz = primBuffer.data(goff + 168 * idx + 83);

                auto g_yy_xxxxxx = primBuffer.data(goff + 168 * idx + 84);

                auto g_yy_xxxxxy = primBuffer.data(goff + 168 * idx + 85);

                auto g_yy_xxxxxz = primBuffer.data(goff + 168 * idx + 86);

                auto g_yy_xxxxyy = primBuffer.data(goff + 168 * idx + 87);

                auto g_yy_xxxxyz = primBuffer.data(goff + 168 * idx + 88);

                auto g_yy_xxxxzz = primBuffer.data(goff + 168 * idx + 89);

                auto g_yy_xxxyyy = primBuffer.data(goff + 168 * idx + 90);

                auto g_yy_xxxyyz = primBuffer.data(goff + 168 * idx + 91);

                auto g_yy_xxxyzz = primBuffer.data(goff + 168 * idx + 92);

                auto g_yy_xxxzzz = primBuffer.data(goff + 168 * idx + 93);

                auto g_yy_xxyyyy = primBuffer.data(goff + 168 * idx + 94);

                auto g_yy_xxyyyz = primBuffer.data(goff + 168 * idx + 95);

                auto g_yy_xxyyzz = primBuffer.data(goff + 168 * idx + 96);

                auto g_yy_xxyzzz = primBuffer.data(goff + 168 * idx + 97);

                auto g_yy_xxzzzz = primBuffer.data(goff + 168 * idx + 98);

                auto g_yy_xyyyyy = primBuffer.data(goff + 168 * idx + 99);

                auto g_yy_xyyyyz = primBuffer.data(goff + 168 * idx + 100);

                auto g_yy_xyyyzz = primBuffer.data(goff + 168 * idx + 101);

                auto g_yy_xyyzzz = primBuffer.data(goff + 168 * idx + 102);

                auto g_yy_xyzzzz = primBuffer.data(goff + 168 * idx + 103);

                auto g_yy_xzzzzz = primBuffer.data(goff + 168 * idx + 104);

                auto g_yy_yyyyyy = primBuffer.data(goff + 168 * idx + 105);

                auto g_yy_yyyyyz = primBuffer.data(goff + 168 * idx + 106);

                auto g_yy_yyyyzz = primBuffer.data(goff + 168 * idx + 107);

                auto g_yy_yyyzzz = primBuffer.data(goff + 168 * idx + 108);

                auto g_yy_yyzzzz = primBuffer.data(goff + 168 * idx + 109);

                auto g_yy_yzzzzz = primBuffer.data(goff + 168 * idx + 110);

                auto g_yy_zzzzzz = primBuffer.data(goff + 168 * idx + 111);

                auto g_yz_xxxxxx = primBuffer.data(goff + 168 * idx + 112);

                auto g_yz_xxxxxy = primBuffer.data(goff + 168 * idx + 113);

                auto g_yz_xxxxxz = primBuffer.data(goff + 168 * idx + 114);

                auto g_yz_xxxxyy = primBuffer.data(goff + 168 * idx + 115);

                auto g_yz_xxxxyz = primBuffer.data(goff + 168 * idx + 116);

                auto g_yz_xxxxzz = primBuffer.data(goff + 168 * idx + 117);

                auto g_yz_xxxyyy = primBuffer.data(goff + 168 * idx + 118);

                auto g_yz_xxxyyz = primBuffer.data(goff + 168 * idx + 119);

                auto g_yz_xxxyzz = primBuffer.data(goff + 168 * idx + 120);

                auto g_yz_xxxzzz = primBuffer.data(goff + 168 * idx + 121);

                auto g_yz_xxyyyy = primBuffer.data(goff + 168 * idx + 122);

                auto g_yz_xxyyyz = primBuffer.data(goff + 168 * idx + 123);

                auto g_yz_xxyyzz = primBuffer.data(goff + 168 * idx + 124);

                auto g_yz_xxyzzz = primBuffer.data(goff + 168 * idx + 125);

                auto g_yz_xxzzzz = primBuffer.data(goff + 168 * idx + 126);

                auto g_yz_xyyyyy = primBuffer.data(goff + 168 * idx + 127);

                auto g_yz_xyyyyz = primBuffer.data(goff + 168 * idx + 128);

                auto g_yz_xyyyzz = primBuffer.data(goff + 168 * idx + 129);

                auto g_yz_xyyzzz = primBuffer.data(goff + 168 * idx + 130);

                auto g_yz_xyzzzz = primBuffer.data(goff + 168 * idx + 131);

                auto g_yz_xzzzzz = primBuffer.data(goff + 168 * idx + 132);

                auto g_yz_yyyyyy = primBuffer.data(goff + 168 * idx + 133);

                auto g_yz_yyyyyz = primBuffer.data(goff + 168 * idx + 134);

                auto g_yz_yyyyzz = primBuffer.data(goff + 168 * idx + 135);

                auto g_yz_yyyzzz = primBuffer.data(goff + 168 * idx + 136);

                auto g_yz_yyzzzz = primBuffer.data(goff + 168 * idx + 137);

                auto g_yz_yzzzzz = primBuffer.data(goff + 168 * idx + 138);

                auto g_yz_zzzzzz = primBuffer.data(goff + 168 * idx + 139);

                auto g_zz_xxxxxx = primBuffer.data(goff + 168 * idx + 140);

                auto g_zz_xxxxxy = primBuffer.data(goff + 168 * idx + 141);

                auto g_zz_xxxxxz = primBuffer.data(goff + 168 * idx + 142);

                auto g_zz_xxxxyy = primBuffer.data(goff + 168 * idx + 143);

                auto g_zz_xxxxyz = primBuffer.data(goff + 168 * idx + 144);

                auto g_zz_xxxxzz = primBuffer.data(goff + 168 * idx + 145);

                auto g_zz_xxxyyy = primBuffer.data(goff + 168 * idx + 146);

                auto g_zz_xxxyyz = primBuffer.data(goff + 168 * idx + 147);

                auto g_zz_xxxyzz = primBuffer.data(goff + 168 * idx + 148);

                auto g_zz_xxxzzz = primBuffer.data(goff + 168 * idx + 149);

                auto g_zz_xxyyyy = primBuffer.data(goff + 168 * idx + 150);

                auto g_zz_xxyyyz = primBuffer.data(goff + 168 * idx + 151);

                auto g_zz_xxyyzz = primBuffer.data(goff + 168 * idx + 152);

                auto g_zz_xxyzzz = primBuffer.data(goff + 168 * idx + 153);

                auto g_zz_xxzzzz = primBuffer.data(goff + 168 * idx + 154);

                auto g_zz_xyyyyy = primBuffer.data(goff + 168 * idx + 155);

                auto g_zz_xyyyyz = primBuffer.data(goff + 168 * idx + 156);

                auto g_zz_xyyyzz = primBuffer.data(goff + 168 * idx + 157);

                auto g_zz_xyyzzz = primBuffer.data(goff + 168 * idx + 158);

                auto g_zz_xyzzzz = primBuffer.data(goff + 168 * idx + 159);

                auto g_zz_xzzzzz = primBuffer.data(goff + 168 * idx + 160);

                auto g_zz_yyyyyy = primBuffer.data(goff + 168 * idx + 161);

                auto g_zz_yyyyyz = primBuffer.data(goff + 168 * idx + 162);

                auto g_zz_yyyyzz = primBuffer.data(goff + 168 * idx + 163);

                auto g_zz_yyyzzz = primBuffer.data(goff + 168 * idx + 164);

                auto g_zz_yyzzzz = primBuffer.data(goff + 168 * idx + 165);

                auto g_zz_yzzzzz = primBuffer.data(goff + 168 * idx + 166);

                auto g_zz_zzzzzz = primBuffer.data(goff + 168 * idx + 167);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xxxxx,\
                                         gk_x_xxxxy, gk_x_xxxxz, gk_x_xxxyy, gk_x_xxxyz,\
                                         gk_x_xxxzz, gk_x_xxyyy, gk_x_xxyyz, gk_x_xxyzz,\
                                         gk_x_xxzzz, gk_x_xyyyy, gk_x_xyyyz, gk_x_xyyzz,\
                                         gk_x_xyzzz, gk_x_xzzzz, gk_x_yyyyy, gk_x_yyyyz,\
                                         gk_x_yyyzz, gk_x_yyzzz, gk_x_yzzzz, gk_x_zzzzz,\
                                         gk_y_xxxxx, gk_y_xxxxy, gk_y_xxxxz, gk_y_xxxyy,\
                                         gk_y_xxxyz, gk_y_xxxzz, gk_y_xxyyy, gk_y_xxyyz,\
                                         gk_y_xxyzz, gk_y_xxzzz, gk_y_xyyyy, gk_y_xyyyz,\
                                         gk_y_xyyzz, gk_y_xyzzz, gk_y_xzzzz, gk_y_yyyyy,\
                                         gk_y_yyyyz, gk_y_yyyzz, gk_y_yyzzz, gk_y_yzzzz,\
                                         gk_y_zzzzz, gk_z_xxxxx, gk_z_xxxxy, gk_z_xxxxz,\
                                         gk_z_xxxyy, gk_z_xxxyz, gk_z_xxxzz, gk_z_xxyyy,\
                                         gk_z_xxyyz, gk_z_xxyzz, gk_z_xxzzz, gk_z_xyyyy,\
                                         gk_z_xyyyz, gk_z_xyyzz, gk_z_xyzzz, gk_z_xzzzz,\
                                         gk_z_yyyyy, gk_z_yyyyz, gk_z_yyyzz, gk_z_yyzzz,\
                                         gk_z_yzzzz, gk_z_zzzzz, g20_0_xxxxxx,\
                                         g20_0_xxxxxy, g20_0_xxxxxz, g20_0_xxxxyy,\
                                         g20_0_xxxxyz, g20_0_xxxxzz, g20_0_xxxyyy,\
                                         g20_0_xxxyyz, g20_0_xxxyzz, g20_0_xxxzzz,\
                                         g20_0_xxyyyy, g20_0_xxyyyz, g20_0_xxyyzz,\
                                         g20_0_xxyzzz, g20_0_xxzzzz, g20_0_xyyyyy,\
                                         g20_0_xyyyyz, g20_0_xyyyzz, g20_0_xyyzzz,\
                                         g20_0_xyzzzz, g20_0_xzzzzz, g20_0_yyyyyy,\
                                         g20_0_yyyyyz, g20_0_yyyyzz, g20_0_yyyzzz,\
                                         g20_0_yyzzzz, g20_0_yzzzzz, g20_0_zzzzzz,\
                                         g21_0_xxxxxx, g21_0_xxxxxy, g21_0_xxxxxz,\
                                         g21_0_xxxxyy, g21_0_xxxxyz, g21_0_xxxxzz,\
                                         g21_0_xxxyyy, g21_0_xxxyyz, g21_0_xxxyzz,\
                                         g21_0_xxxzzz, g21_0_xxyyyy, g21_0_xxyyyz,\
                                         g21_0_xxyyzz, g21_0_xxyzzz, g21_0_xxzzzz,\
                                         g21_0_xyyyyy, g21_0_xyyyyz, g21_0_xyyyzz,\
                                         g21_0_xyyzzz, g21_0_xyzzzz, g21_0_xzzzzz,\
                                         g21_0_yyyyyy, g21_0_yyyyyz, g21_0_yyyyzz,\
                                         g21_0_yyyzzz, g21_0_yyzzzz, g21_0_yzzzzz,\
                                         g21_0_zzzzzz, g11_x_xxxxxx, g11_x_xxxxxy,\
                                         g11_x_xxxxxz, g11_x_xxxxyy, g11_x_xxxxyz,\
                                         g11_x_xxxxzz, g11_x_xxxyyy, g11_x_xxxyyz,\
                                         g11_x_xxxyzz, g11_x_xxxzzz, g11_x_xxyyyy,\
                                         g11_x_xxyyyz, g11_x_xxyyzz, g11_x_xxyzzz,\
                                         g11_x_xxzzzz, g11_x_xyyyyy, g11_x_xyyyyz,\
                                         g11_x_xyyyzz, g11_x_xyyzzz, g11_x_xyzzzz,\
                                         g11_x_xzzzzz, g11_x_yyyyyy, g11_x_yyyyyz,\
                                         g11_x_yyyyzz, g11_x_yyyzzz, g11_x_yyzzzz,\
                                         g11_x_yzzzzz, g11_x_zzzzzz, g11_y_xxxxxx,\
                                         g11_y_xxxxxy, g11_y_xxxxxz, g11_y_xxxxyy,\
                                         g11_y_xxxxyz, g11_y_xxxxzz, g11_y_xxxyyy,\
                                         g11_y_xxxyyz, g11_y_xxxyzz, g11_y_xxxzzz,\
                                         g11_y_xxyyyy, g11_y_xxyyyz, g11_y_xxyyzz,\
                                         g11_y_xxyzzz, g11_y_xxzzzz, g11_y_xyyyyy,\
                                         g11_y_xyyyyz, g11_y_xyyyzz, g11_y_xyyzzz,\
                                         g11_y_xyzzzz, g11_y_xzzzzz, g11_y_yyyyyy,\
                                         g11_y_yyyyyz, g11_y_yyyyzz, g11_y_yyyzzz,\
                                         g11_y_yyzzzz, g11_y_yzzzzz, g11_y_zzzzzz,\
                                         g11_z_xxxxxx, g11_z_xxxxxy, g11_z_xxxxxz,\
                                         g11_z_xxxxyy, g11_z_xxxxyz, g11_z_xxxxzz,\
                                         g11_z_xxxyyy, g11_z_xxxyyz, g11_z_xxxyzz,\
                                         g11_z_xxxzzz, g11_z_xxyyyy, g11_z_xxyyyz,\
                                         g11_z_xxyyzz, g11_z_xxyzzz, g11_z_xxzzzz,\
                                         g11_z_xyyyyy, g11_z_xyyyyz, g11_z_xyyyzz,\
                                         g11_z_xyyzzz, g11_z_xyzzzz, g11_z_xzzzzz,\
                                         g11_z_yyyyyy, g11_z_yyyyyz, g11_z_yyyyzz,\
                                         g11_z_yyyzzz, g11_z_yyzzzz, g11_z_yzzzzz,\
                                         g11_z_zzzzzz, g_xx_xxxxxx, g_xx_xxxxxy,\
                                         g_xx_xxxxxz, g_xx_xxxxyy, g_xx_xxxxyz,\
                                         g_xx_xxxxzz, g_xx_xxxyyy, g_xx_xxxyyz,\
                                         g_xx_xxxyzz, g_xx_xxxzzz, g_xx_xxyyyy,\
                                         g_xx_xxyyyz, g_xx_xxyyzz, g_xx_xxyzzz,\
                                         g_xx_xxzzzz, g_xx_xyyyyy, g_xx_xyyyyz,\
                                         g_xx_xyyyzz, g_xx_xyyzzz, g_xx_xyzzzz,\
                                         g_xx_xzzzzz, g_xx_yyyyyy, g_xx_yyyyyz,\
                                         g_xx_yyyyzz, g_xx_yyyzzz, g_xx_yyzzzz,\
                                         g_xx_yzzzzz, g_xx_zzzzzz, g_xy_xxxxxx,\
                                         g_xy_xxxxxy, g_xy_xxxxxz, g_xy_xxxxyy,\
                                         g_xy_xxxxyz, g_xy_xxxxzz, g_xy_xxxyyy,\
                                         g_xy_xxxyyz, g_xy_xxxyzz, g_xy_xxxzzz,\
                                         g_xy_xxyyyy, g_xy_xxyyyz, g_xy_xxyyzz,\
                                         g_xy_xxyzzz, g_xy_xxzzzz, g_xy_xyyyyy,\
                                         g_xy_xyyyyz, g_xy_xyyyzz, g_xy_xyyzzz,\
                                         g_xy_xyzzzz, g_xy_xzzzzz, g_xy_yyyyyy,\
                                         g_xy_yyyyyz, g_xy_yyyyzz, g_xy_yyyzzz,\
                                         g_xy_yyzzzz, g_xy_yzzzzz, g_xy_zzzzzz,\
                                         g_xz_xxxxxx, g_xz_xxxxxy, g_xz_xxxxxz,\
                                         g_xz_xxxxyy, g_xz_xxxxyz, g_xz_xxxxzz,\
                                         g_xz_xxxyyy, g_xz_xxxyyz, g_xz_xxxyzz,\
                                         g_xz_xxxzzz, g_xz_xxyyyy, g_xz_xxyyyz,\
                                         g_xz_xxyyzz, g_xz_xxyzzz, g_xz_xxzzzz,\
                                         g_xz_xyyyyy, g_xz_xyyyyz, g_xz_xyyyzz,\
                                         g_xz_xyyzzz, g_xz_xyzzzz, g_xz_xzzzzz,\
                                         g_xz_yyyyyy, g_xz_yyyyyz, g_xz_yyyyzz,\
                                         g_xz_yyyzzz, g_xz_yyzzzz, g_xz_yzzzzz,\
                                         g_xz_zzzzzz, g_yy_xxxxxx, g_yy_xxxxxy,\
                                         g_yy_xxxxxz, g_yy_xxxxyy, g_yy_xxxxyz,\
                                         g_yy_xxxxzz, g_yy_xxxyyy, g_yy_xxxyyz,\
                                         g_yy_xxxyzz, g_yy_xxxzzz, g_yy_xxyyyy,\
                                         g_yy_xxyyyz, g_yy_xxyyzz, g_yy_xxyzzz,\
                                         g_yy_xxzzzz, g_yy_xyyyyy, g_yy_xyyyyz,\
                                         g_yy_xyyyzz, g_yy_xyyzzz, g_yy_xyzzzz,\
                                         g_yy_xzzzzz, g_yy_yyyyyy, g_yy_yyyyyz,\
                                         g_yy_yyyyzz, g_yy_yyyzzz, g_yy_yyzzzz,\
                                         g_yy_yzzzzz, g_yy_zzzzzz, g_yz_xxxxxx,\
                                         g_yz_xxxxxy, g_yz_xxxxxz, g_yz_xxxxyy,\
                                         g_yz_xxxxyz, g_yz_xxxxzz, g_yz_xxxyyy,\
                                         g_yz_xxxyyz, g_yz_xxxyzz, g_yz_xxxzzz,\
                                         g_yz_xxyyyy, g_yz_xxyyyz, g_yz_xxyyzz,\
                                         g_yz_xxyzzz, g_yz_xxzzzz, g_yz_xyyyyy,\
                                         g_yz_xyyyyz, g_yz_xyyyzz, g_yz_xyyzzz,\
                                         g_yz_xyzzzz, g_yz_xzzzzz, g_yz_yyyyyy,\
                                         g_yz_yyyyyz, g_yz_yyyyzz, g_yz_yyyzzz,\
                                         g_yz_yyzzzz, g_yz_yzzzzz, g_yz_zzzzzz,\
                                         g_zz_xxxxxx, g_zz_xxxxxy, g_zz_xxxxxz,\
                                         g_zz_xxxxyy, g_zz_xxxxyz, g_zz_xxxxzz,\
                                         g_zz_xxxyyy, g_zz_xxxyyz, g_zz_xxxyzz,\
                                         g_zz_xxxzzz, g_zz_xxyyyy, g_zz_xxyyyz,\
                                         g_zz_xxyyzz, g_zz_xxyzzz, g_zz_xxzzzz,\
                                         g_zz_xyyyyy, g_zz_xyyyyz, g_zz_xyyyzz,\
                                         g_zz_xyyzzz, g_zz_xyzzzz, g_zz_xzzzzz,\
                                         g_zz_yyyyyy, g_zz_yyyyyz, g_zz_yyyyzz,\
                                         g_zz_yyyzzz, g_zz_yyzzzz, g_zz_yzzzzz,\
                                         g_zz_zzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxxxxx[k] = fr * g11_x_xxxxxx[k] + f2g * (g20_0_xxxxxx[k] - fgz * g21_0_xxxxxx[k]) + 6.0 * f2t * gk_x_xxxxx[k];

                    g_xx_xxxxxy[k] = fr * g11_x_xxxxxy[k] + f2g * (g20_0_xxxxxy[k] - fgz * g21_0_xxxxxy[k]) + 5.0 * f2t * gk_x_xxxxy[k];

                    g_xx_xxxxxz[k] = fr * g11_x_xxxxxz[k] + f2g * (g20_0_xxxxxz[k] - fgz * g21_0_xxxxxz[k]) + 5.0 * f2t * gk_x_xxxxz[k];

                    g_xx_xxxxyy[k] = fr * g11_x_xxxxyy[k] + f2g * (g20_0_xxxxyy[k] - fgz * g21_0_xxxxyy[k]) + 4.0 * f2t * gk_x_xxxyy[k];

                    g_xx_xxxxyz[k] = fr * g11_x_xxxxyz[k] + f2g * (g20_0_xxxxyz[k] - fgz * g21_0_xxxxyz[k]) + 4.0 * f2t * gk_x_xxxyz[k];

                    g_xx_xxxxzz[k] = fr * g11_x_xxxxzz[k] + f2g * (g20_0_xxxxzz[k] - fgz * g21_0_xxxxzz[k]) + 4.0 * f2t * gk_x_xxxzz[k];

                    g_xx_xxxyyy[k] = fr * g11_x_xxxyyy[k] + f2g * (g20_0_xxxyyy[k] - fgz * g21_0_xxxyyy[k]) + 3.0 * f2t * gk_x_xxyyy[k];

                    g_xx_xxxyyz[k] = fr * g11_x_xxxyyz[k] + f2g * (g20_0_xxxyyz[k] - fgz * g21_0_xxxyyz[k]) + 3.0 * f2t * gk_x_xxyyz[k];

                    g_xx_xxxyzz[k] = fr * g11_x_xxxyzz[k] + f2g * (g20_0_xxxyzz[k] - fgz * g21_0_xxxyzz[k]) + 3.0 * f2t * gk_x_xxyzz[k];

                    g_xx_xxxzzz[k] = fr * g11_x_xxxzzz[k] + f2g * (g20_0_xxxzzz[k] - fgz * g21_0_xxxzzz[k]) + 3.0 * f2t * gk_x_xxzzz[k];

                    g_xx_xxyyyy[k] = fr * g11_x_xxyyyy[k] + f2g * (g20_0_xxyyyy[k] - fgz * g21_0_xxyyyy[k]) + 2.0 * f2t * gk_x_xyyyy[k];

                    g_xx_xxyyyz[k] = fr * g11_x_xxyyyz[k] + f2g * (g20_0_xxyyyz[k] - fgz * g21_0_xxyyyz[k]) + 2.0 * f2t * gk_x_xyyyz[k];

                    g_xx_xxyyzz[k] = fr * g11_x_xxyyzz[k] + f2g * (g20_0_xxyyzz[k] - fgz * g21_0_xxyyzz[k]) + 2.0 * f2t * gk_x_xyyzz[k];

                    g_xx_xxyzzz[k] = fr * g11_x_xxyzzz[k] + f2g * (g20_0_xxyzzz[k] - fgz * g21_0_xxyzzz[k]) + 2.0 * f2t * gk_x_xyzzz[k];

                    g_xx_xxzzzz[k] = fr * g11_x_xxzzzz[k] + f2g * (g20_0_xxzzzz[k] - fgz * g21_0_xxzzzz[k]) + 2.0 * f2t * gk_x_xzzzz[k];

                    g_xx_xyyyyy[k] = fr * g11_x_xyyyyy[k] + f2g * (g20_0_xyyyyy[k] - fgz * g21_0_xyyyyy[k]) + f2t * gk_x_yyyyy[k];

                    g_xx_xyyyyz[k] = fr * g11_x_xyyyyz[k] + f2g * (g20_0_xyyyyz[k] - fgz * g21_0_xyyyyz[k]) + f2t * gk_x_yyyyz[k];

                    g_xx_xyyyzz[k] = fr * g11_x_xyyyzz[k] + f2g * (g20_0_xyyyzz[k] - fgz * g21_0_xyyyzz[k]) + f2t * gk_x_yyyzz[k];

                    g_xx_xyyzzz[k] = fr * g11_x_xyyzzz[k] + f2g * (g20_0_xyyzzz[k] - fgz * g21_0_xyyzzz[k]) + f2t * gk_x_yyzzz[k];

                    g_xx_xyzzzz[k] = fr * g11_x_xyzzzz[k] + f2g * (g20_0_xyzzzz[k] - fgz * g21_0_xyzzzz[k]) + f2t * gk_x_yzzzz[k];

                    g_xx_xzzzzz[k] = fr * g11_x_xzzzzz[k] + f2g * (g20_0_xzzzzz[k] - fgz * g21_0_xzzzzz[k]) + f2t * gk_x_zzzzz[k];

                    g_xx_yyyyyy[k] = fr * g11_x_yyyyyy[k] + f2g * (g20_0_yyyyyy[k] - fgz * g21_0_yyyyyy[k]);

                    g_xx_yyyyyz[k] = fr * g11_x_yyyyyz[k] + f2g * (g20_0_yyyyyz[k] - fgz * g21_0_yyyyyz[k]);

                    g_xx_yyyyzz[k] = fr * g11_x_yyyyzz[k] + f2g * (g20_0_yyyyzz[k] - fgz * g21_0_yyyyzz[k]);

                    g_xx_yyyzzz[k] = fr * g11_x_yyyzzz[k] + f2g * (g20_0_yyyzzz[k] - fgz * g21_0_yyyzzz[k]);

                    g_xx_yyzzzz[k] = fr * g11_x_yyzzzz[k] + f2g * (g20_0_yyzzzz[k] - fgz * g21_0_yyzzzz[k]);

                    g_xx_yzzzzz[k] = fr * g11_x_yzzzzz[k] + f2g * (g20_0_yzzzzz[k] - fgz * g21_0_yzzzzz[k]);

                    g_xx_zzzzzz[k] = fr * g11_x_zzzzzz[k] + f2g * (g20_0_zzzzzz[k] - fgz * g21_0_zzzzzz[k]);

                    g_xy_xxxxxx[k] = fr * g11_y_xxxxxx[k] + 6.0 * f2t * gk_y_xxxxx[k];

                    g_xy_xxxxxy[k] = fr * g11_y_xxxxxy[k] + 5.0 * f2t * gk_y_xxxxy[k];

                    g_xy_xxxxxz[k] = fr * g11_y_xxxxxz[k] + 5.0 * f2t * gk_y_xxxxz[k];

                    g_xy_xxxxyy[k] = fr * g11_y_xxxxyy[k] + 4.0 * f2t * gk_y_xxxyy[k];

                    g_xy_xxxxyz[k] = fr * g11_y_xxxxyz[k] + 4.0 * f2t * gk_y_xxxyz[k];

                    g_xy_xxxxzz[k] = fr * g11_y_xxxxzz[k] + 4.0 * f2t * gk_y_xxxzz[k];

                    g_xy_xxxyyy[k] = fr * g11_y_xxxyyy[k] + 3.0 * f2t * gk_y_xxyyy[k];

                    g_xy_xxxyyz[k] = fr * g11_y_xxxyyz[k] + 3.0 * f2t * gk_y_xxyyz[k];

                    g_xy_xxxyzz[k] = fr * g11_y_xxxyzz[k] + 3.0 * f2t * gk_y_xxyzz[k];

                    g_xy_xxxzzz[k] = fr * g11_y_xxxzzz[k] + 3.0 * f2t * gk_y_xxzzz[k];

                    g_xy_xxyyyy[k] = fr * g11_y_xxyyyy[k] + 2.0 * f2t * gk_y_xyyyy[k];

                    g_xy_xxyyyz[k] = fr * g11_y_xxyyyz[k] + 2.0 * f2t * gk_y_xyyyz[k];

                    g_xy_xxyyzz[k] = fr * g11_y_xxyyzz[k] + 2.0 * f2t * gk_y_xyyzz[k];

                    g_xy_xxyzzz[k] = fr * g11_y_xxyzzz[k] + 2.0 * f2t * gk_y_xyzzz[k];

                    g_xy_xxzzzz[k] = fr * g11_y_xxzzzz[k] + 2.0 * f2t * gk_y_xzzzz[k];

                    g_xy_xyyyyy[k] = fr * g11_y_xyyyyy[k] + f2t * gk_y_yyyyy[k];

                    g_xy_xyyyyz[k] = fr * g11_y_xyyyyz[k] + f2t * gk_y_yyyyz[k];

                    g_xy_xyyyzz[k] = fr * g11_y_xyyyzz[k] + f2t * gk_y_yyyzz[k];

                    g_xy_xyyzzz[k] = fr * g11_y_xyyzzz[k] + f2t * gk_y_yyzzz[k];

                    g_xy_xyzzzz[k] = fr * g11_y_xyzzzz[k] + f2t * gk_y_yzzzz[k];

                    g_xy_xzzzzz[k] = fr * g11_y_xzzzzz[k] + f2t * gk_y_zzzzz[k];

                    g_xy_yyyyyy[k] = fr * g11_y_yyyyyy[k];

                    g_xy_yyyyyz[k] = fr * g11_y_yyyyyz[k];

                    g_xy_yyyyzz[k] = fr * g11_y_yyyyzz[k];

                    g_xy_yyyzzz[k] = fr * g11_y_yyyzzz[k];

                    g_xy_yyzzzz[k] = fr * g11_y_yyzzzz[k];

                    g_xy_yzzzzz[k] = fr * g11_y_yzzzzz[k];

                    g_xy_zzzzzz[k] = fr * g11_y_zzzzzz[k];

                    g_xz_xxxxxx[k] = fr * g11_z_xxxxxx[k] + 6.0 * f2t * gk_z_xxxxx[k];

                    g_xz_xxxxxy[k] = fr * g11_z_xxxxxy[k] + 5.0 * f2t * gk_z_xxxxy[k];

                    g_xz_xxxxxz[k] = fr * g11_z_xxxxxz[k] + 5.0 * f2t * gk_z_xxxxz[k];

                    g_xz_xxxxyy[k] = fr * g11_z_xxxxyy[k] + 4.0 * f2t * gk_z_xxxyy[k];

                    g_xz_xxxxyz[k] = fr * g11_z_xxxxyz[k] + 4.0 * f2t * gk_z_xxxyz[k];

                    g_xz_xxxxzz[k] = fr * g11_z_xxxxzz[k] + 4.0 * f2t * gk_z_xxxzz[k];

                    g_xz_xxxyyy[k] = fr * g11_z_xxxyyy[k] + 3.0 * f2t * gk_z_xxyyy[k];

                    g_xz_xxxyyz[k] = fr * g11_z_xxxyyz[k] + 3.0 * f2t * gk_z_xxyyz[k];

                    g_xz_xxxyzz[k] = fr * g11_z_xxxyzz[k] + 3.0 * f2t * gk_z_xxyzz[k];

                    g_xz_xxxzzz[k] = fr * g11_z_xxxzzz[k] + 3.0 * f2t * gk_z_xxzzz[k];

                    g_xz_xxyyyy[k] = fr * g11_z_xxyyyy[k] + 2.0 * f2t * gk_z_xyyyy[k];

                    g_xz_xxyyyz[k] = fr * g11_z_xxyyyz[k] + 2.0 * f2t * gk_z_xyyyz[k];

                    g_xz_xxyyzz[k] = fr * g11_z_xxyyzz[k] + 2.0 * f2t * gk_z_xyyzz[k];

                    g_xz_xxyzzz[k] = fr * g11_z_xxyzzz[k] + 2.0 * f2t * gk_z_xyzzz[k];

                    g_xz_xxzzzz[k] = fr * g11_z_xxzzzz[k] + 2.0 * f2t * gk_z_xzzzz[k];

                    g_xz_xyyyyy[k] = fr * g11_z_xyyyyy[k] + f2t * gk_z_yyyyy[k];

                    g_xz_xyyyyz[k] = fr * g11_z_xyyyyz[k] + f2t * gk_z_yyyyz[k];

                    g_xz_xyyyzz[k] = fr * g11_z_xyyyzz[k] + f2t * gk_z_yyyzz[k];

                    g_xz_xyyzzz[k] = fr * g11_z_xyyzzz[k] + f2t * gk_z_yyzzz[k];

                    g_xz_xyzzzz[k] = fr * g11_z_xyzzzz[k] + f2t * gk_z_yzzzz[k];

                    g_xz_xzzzzz[k] = fr * g11_z_xzzzzz[k] + f2t * gk_z_zzzzz[k];

                    g_xz_yyyyyy[k] = fr * g11_z_yyyyyy[k];

                    g_xz_yyyyyz[k] = fr * g11_z_yyyyyz[k];

                    g_xz_yyyyzz[k] = fr * g11_z_yyyyzz[k];

                    g_xz_yyyzzz[k] = fr * g11_z_yyyzzz[k];

                    g_xz_yyzzzz[k] = fr * g11_z_yyzzzz[k];

                    g_xz_yzzzzz[k] = fr * g11_z_yzzzzz[k];

                    g_xz_zzzzzz[k] = fr * g11_z_zzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxxxxx[k] = fr * g11_y_xxxxxx[k] + f2g * (g20_0_xxxxxx[k] - fgz * g21_0_xxxxxx[k]);

                    g_yy_xxxxxy[k] = fr * g11_y_xxxxxy[k] + f2g * (g20_0_xxxxxy[k] - fgz * g21_0_xxxxxy[k]) + f2t * gk_y_xxxxx[k];

                    g_yy_xxxxxz[k] = fr * g11_y_xxxxxz[k] + f2g * (g20_0_xxxxxz[k] - fgz * g21_0_xxxxxz[k]);

                    g_yy_xxxxyy[k] = fr * g11_y_xxxxyy[k] + f2g * (g20_0_xxxxyy[k] - fgz * g21_0_xxxxyy[k]) + 2.0 * f2t * gk_y_xxxxy[k];

                    g_yy_xxxxyz[k] = fr * g11_y_xxxxyz[k] + f2g * (g20_0_xxxxyz[k] - fgz * g21_0_xxxxyz[k]) + f2t * gk_y_xxxxz[k];

                    g_yy_xxxxzz[k] = fr * g11_y_xxxxzz[k] + f2g * (g20_0_xxxxzz[k] - fgz * g21_0_xxxxzz[k]);

                    g_yy_xxxyyy[k] = fr * g11_y_xxxyyy[k] + f2g * (g20_0_xxxyyy[k] - fgz * g21_0_xxxyyy[k]) + 3.0 * f2t * gk_y_xxxyy[k];

                    g_yy_xxxyyz[k] = fr * g11_y_xxxyyz[k] + f2g * (g20_0_xxxyyz[k] - fgz * g21_0_xxxyyz[k]) + 2.0 * f2t * gk_y_xxxyz[k];

                    g_yy_xxxyzz[k] = fr * g11_y_xxxyzz[k] + f2g * (g20_0_xxxyzz[k] - fgz * g21_0_xxxyzz[k]) + f2t * gk_y_xxxzz[k];

                    g_yy_xxxzzz[k] = fr * g11_y_xxxzzz[k] + f2g * (g20_0_xxxzzz[k] - fgz * g21_0_xxxzzz[k]);

                    g_yy_xxyyyy[k] = fr * g11_y_xxyyyy[k] + f2g * (g20_0_xxyyyy[k] - fgz * g21_0_xxyyyy[k]) + 4.0 * f2t * gk_y_xxyyy[k];

                    g_yy_xxyyyz[k] = fr * g11_y_xxyyyz[k] + f2g * (g20_0_xxyyyz[k] - fgz * g21_0_xxyyyz[k]) + 3.0 * f2t * gk_y_xxyyz[k];

                    g_yy_xxyyzz[k] = fr * g11_y_xxyyzz[k] + f2g * (g20_0_xxyyzz[k] - fgz * g21_0_xxyyzz[k]) + 2.0 * f2t * gk_y_xxyzz[k];

                    g_yy_xxyzzz[k] = fr * g11_y_xxyzzz[k] + f2g * (g20_0_xxyzzz[k] - fgz * g21_0_xxyzzz[k]) + f2t * gk_y_xxzzz[k];

                    g_yy_xxzzzz[k] = fr * g11_y_xxzzzz[k] + f2g * (g20_0_xxzzzz[k] - fgz * g21_0_xxzzzz[k]);

                    g_yy_xyyyyy[k] = fr * g11_y_xyyyyy[k] + f2g * (g20_0_xyyyyy[k] - fgz * g21_0_xyyyyy[k]) + 5.0 * f2t * gk_y_xyyyy[k];

                    g_yy_xyyyyz[k] = fr * g11_y_xyyyyz[k] + f2g * (g20_0_xyyyyz[k] - fgz * g21_0_xyyyyz[k]) + 4.0 * f2t * gk_y_xyyyz[k];

                    g_yy_xyyyzz[k] = fr * g11_y_xyyyzz[k] + f2g * (g20_0_xyyyzz[k] - fgz * g21_0_xyyyzz[k]) + 3.0 * f2t * gk_y_xyyzz[k];

                    g_yy_xyyzzz[k] = fr * g11_y_xyyzzz[k] + f2g * (g20_0_xyyzzz[k] - fgz * g21_0_xyyzzz[k]) + 2.0 * f2t * gk_y_xyzzz[k];

                    g_yy_xyzzzz[k] = fr * g11_y_xyzzzz[k] + f2g * (g20_0_xyzzzz[k] - fgz * g21_0_xyzzzz[k]) + f2t * gk_y_xzzzz[k];

                    g_yy_xzzzzz[k] = fr * g11_y_xzzzzz[k] + f2g * (g20_0_xzzzzz[k] - fgz * g21_0_xzzzzz[k]);

                    g_yy_yyyyyy[k] = fr * g11_y_yyyyyy[k] + f2g * (g20_0_yyyyyy[k] - fgz * g21_0_yyyyyy[k]) + 6.0 * f2t * gk_y_yyyyy[k];

                    g_yy_yyyyyz[k] = fr * g11_y_yyyyyz[k] + f2g * (g20_0_yyyyyz[k] - fgz * g21_0_yyyyyz[k]) + 5.0 * f2t * gk_y_yyyyz[k];

                    g_yy_yyyyzz[k] = fr * g11_y_yyyyzz[k] + f2g * (g20_0_yyyyzz[k] - fgz * g21_0_yyyyzz[k]) + 4.0 * f2t * gk_y_yyyzz[k];

                    g_yy_yyyzzz[k] = fr * g11_y_yyyzzz[k] + f2g * (g20_0_yyyzzz[k] - fgz * g21_0_yyyzzz[k]) + 3.0 * f2t * gk_y_yyzzz[k];

                    g_yy_yyzzzz[k] = fr * g11_y_yyzzzz[k] + f2g * (g20_0_yyzzzz[k] - fgz * g21_0_yyzzzz[k]) + 2.0 * f2t * gk_y_yzzzz[k];

                    g_yy_yzzzzz[k] = fr * g11_y_yzzzzz[k] + f2g * (g20_0_yzzzzz[k] - fgz * g21_0_yzzzzz[k]) + f2t * gk_y_zzzzz[k];

                    g_yy_zzzzzz[k] = fr * g11_y_zzzzzz[k] + f2g * (g20_0_zzzzzz[k] - fgz * g21_0_zzzzzz[k]);

                    g_yz_xxxxxx[k] = fr * g11_z_xxxxxx[k];

                    g_yz_xxxxxy[k] = fr * g11_z_xxxxxy[k] + f2t * gk_z_xxxxx[k];

                    g_yz_xxxxxz[k] = fr * g11_z_xxxxxz[k];

                    g_yz_xxxxyy[k] = fr * g11_z_xxxxyy[k] + 2.0 * f2t * gk_z_xxxxy[k];

                    g_yz_xxxxyz[k] = fr * g11_z_xxxxyz[k] + f2t * gk_z_xxxxz[k];

                    g_yz_xxxxzz[k] = fr * g11_z_xxxxzz[k];

                    g_yz_xxxyyy[k] = fr * g11_z_xxxyyy[k] + 3.0 * f2t * gk_z_xxxyy[k];

                    g_yz_xxxyyz[k] = fr * g11_z_xxxyyz[k] + 2.0 * f2t * gk_z_xxxyz[k];

                    g_yz_xxxyzz[k] = fr * g11_z_xxxyzz[k] + f2t * gk_z_xxxzz[k];

                    g_yz_xxxzzz[k] = fr * g11_z_xxxzzz[k];

                    g_yz_xxyyyy[k] = fr * g11_z_xxyyyy[k] + 4.0 * f2t * gk_z_xxyyy[k];

                    g_yz_xxyyyz[k] = fr * g11_z_xxyyyz[k] + 3.0 * f2t * gk_z_xxyyz[k];

                    g_yz_xxyyzz[k] = fr * g11_z_xxyyzz[k] + 2.0 * f2t * gk_z_xxyzz[k];

                    g_yz_xxyzzz[k] = fr * g11_z_xxyzzz[k] + f2t * gk_z_xxzzz[k];

                    g_yz_xxzzzz[k] = fr * g11_z_xxzzzz[k];

                    g_yz_xyyyyy[k] = fr * g11_z_xyyyyy[k] + 5.0 * f2t * gk_z_xyyyy[k];

                    g_yz_xyyyyz[k] = fr * g11_z_xyyyyz[k] + 4.0 * f2t * gk_z_xyyyz[k];

                    g_yz_xyyyzz[k] = fr * g11_z_xyyyzz[k] + 3.0 * f2t * gk_z_xyyzz[k];

                    g_yz_xyyzzz[k] = fr * g11_z_xyyzzz[k] + 2.0 * f2t * gk_z_xyzzz[k];

                    g_yz_xyzzzz[k] = fr * g11_z_xyzzzz[k] + f2t * gk_z_xzzzz[k];

                    g_yz_xzzzzz[k] = fr * g11_z_xzzzzz[k];

                    g_yz_yyyyyy[k] = fr * g11_z_yyyyyy[k] + 6.0 * f2t * gk_z_yyyyy[k];

                    g_yz_yyyyyz[k] = fr * g11_z_yyyyyz[k] + 5.0 * f2t * gk_z_yyyyz[k];

                    g_yz_yyyyzz[k] = fr * g11_z_yyyyzz[k] + 4.0 * f2t * gk_z_yyyzz[k];

                    g_yz_yyyzzz[k] = fr * g11_z_yyyzzz[k] + 3.0 * f2t * gk_z_yyzzz[k];

                    g_yz_yyzzzz[k] = fr * g11_z_yyzzzz[k] + 2.0 * f2t * gk_z_yzzzz[k];

                    g_yz_yzzzzz[k] = fr * g11_z_yzzzzz[k] + f2t * gk_z_zzzzz[k];

                    g_yz_zzzzzz[k] = fr * g11_z_zzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxxxxx[k] = fr * g11_z_xxxxxx[k] + f2g * (g20_0_xxxxxx[k] - fgz * g21_0_xxxxxx[k]);

                    g_zz_xxxxxy[k] = fr * g11_z_xxxxxy[k] + f2g * (g20_0_xxxxxy[k] - fgz * g21_0_xxxxxy[k]);

                    g_zz_xxxxxz[k] = fr * g11_z_xxxxxz[k] + f2g * (g20_0_xxxxxz[k] - fgz * g21_0_xxxxxz[k]) + f2t * gk_z_xxxxx[k];

                    g_zz_xxxxyy[k] = fr * g11_z_xxxxyy[k] + f2g * (g20_0_xxxxyy[k] - fgz * g21_0_xxxxyy[k]);

                    g_zz_xxxxyz[k] = fr * g11_z_xxxxyz[k] + f2g * (g20_0_xxxxyz[k] - fgz * g21_0_xxxxyz[k]) + f2t * gk_z_xxxxy[k];

                    g_zz_xxxxzz[k] = fr * g11_z_xxxxzz[k] + f2g * (g20_0_xxxxzz[k] - fgz * g21_0_xxxxzz[k]) + 2.0 * f2t * gk_z_xxxxz[k];

                    g_zz_xxxyyy[k] = fr * g11_z_xxxyyy[k] + f2g * (g20_0_xxxyyy[k] - fgz * g21_0_xxxyyy[k]);

                    g_zz_xxxyyz[k] = fr * g11_z_xxxyyz[k] + f2g * (g20_0_xxxyyz[k] - fgz * g21_0_xxxyyz[k]) + f2t * gk_z_xxxyy[k];

                    g_zz_xxxyzz[k] = fr * g11_z_xxxyzz[k] + f2g * (g20_0_xxxyzz[k] - fgz * g21_0_xxxyzz[k]) + 2.0 * f2t * gk_z_xxxyz[k];

                    g_zz_xxxzzz[k] = fr * g11_z_xxxzzz[k] + f2g * (g20_0_xxxzzz[k] - fgz * g21_0_xxxzzz[k]) + 3.0 * f2t * gk_z_xxxzz[k];

                    g_zz_xxyyyy[k] = fr * g11_z_xxyyyy[k] + f2g * (g20_0_xxyyyy[k] - fgz * g21_0_xxyyyy[k]);

                    g_zz_xxyyyz[k] = fr * g11_z_xxyyyz[k] + f2g * (g20_0_xxyyyz[k] - fgz * g21_0_xxyyyz[k]) + f2t * gk_z_xxyyy[k];

                    g_zz_xxyyzz[k] = fr * g11_z_xxyyzz[k] + f2g * (g20_0_xxyyzz[k] - fgz * g21_0_xxyyzz[k]) + 2.0 * f2t * gk_z_xxyyz[k];

                    g_zz_xxyzzz[k] = fr * g11_z_xxyzzz[k] + f2g * (g20_0_xxyzzz[k] - fgz * g21_0_xxyzzz[k]) + 3.0 * f2t * gk_z_xxyzz[k];

                    g_zz_xxzzzz[k] = fr * g11_z_xxzzzz[k] + f2g * (g20_0_xxzzzz[k] - fgz * g21_0_xxzzzz[k]) + 4.0 * f2t * gk_z_xxzzz[k];

                    g_zz_xyyyyy[k] = fr * g11_z_xyyyyy[k] + f2g * (g20_0_xyyyyy[k] - fgz * g21_0_xyyyyy[k]);

                    g_zz_xyyyyz[k] = fr * g11_z_xyyyyz[k] + f2g * (g20_0_xyyyyz[k] - fgz * g21_0_xyyyyz[k]) + f2t * gk_z_xyyyy[k];

                    g_zz_xyyyzz[k] = fr * g11_z_xyyyzz[k] + f2g * (g20_0_xyyyzz[k] - fgz * g21_0_xyyyzz[k]) + 2.0 * f2t * gk_z_xyyyz[k];

                    g_zz_xyyzzz[k] = fr * g11_z_xyyzzz[k] + f2g * (g20_0_xyyzzz[k] - fgz * g21_0_xyyzzz[k]) + 3.0 * f2t * gk_z_xyyzz[k];

                    g_zz_xyzzzz[k] = fr * g11_z_xyzzzz[k] + f2g * (g20_0_xyzzzz[k] - fgz * g21_0_xyzzzz[k]) + 4.0 * f2t * gk_z_xyzzz[k];

                    g_zz_xzzzzz[k] = fr * g11_z_xzzzzz[k] + f2g * (g20_0_xzzzzz[k] - fgz * g21_0_xzzzzz[k]) + 5.0 * f2t * gk_z_xzzzz[k];

                    g_zz_yyyyyy[k] = fr * g11_z_yyyyyy[k] + f2g * (g20_0_yyyyyy[k] - fgz * g21_0_yyyyyy[k]);

                    g_zz_yyyyyz[k] = fr * g11_z_yyyyyz[k] + f2g * (g20_0_yyyyyz[k] - fgz * g21_0_yyyyyz[k]) + f2t * gk_z_yyyyy[k];

                    g_zz_yyyyzz[k] = fr * g11_z_yyyyzz[k] + f2g * (g20_0_yyyyzz[k] - fgz * g21_0_yyyyzz[k]) + 2.0 * f2t * gk_z_yyyyz[k];

                    g_zz_yyyzzz[k] = fr * g11_z_yyyzzz[k] + f2g * (g20_0_yyyzzz[k] - fgz * g21_0_yyyzzz[k]) + 3.0 * f2t * gk_z_yyyzz[k];

                    g_zz_yyzzzz[k] = fr * g11_z_yyzzzz[k] + f2g * (g20_0_yyzzzz[k] - fgz * g21_0_yyzzzz[k]) + 4.0 * f2t * gk_z_yyzzz[k];

                    g_zz_yzzzzz[k] = fr * g11_z_yzzzzz[k] + f2g * (g20_0_yzzzzz[k] - fgz * g21_0_yzzzzz[k]) + 5.0 * f2t * gk_z_yzzzz[k];

                    g_zz_zzzzzz[k] = fr * g11_z_zzzzzz[k] + f2g * (g20_0_zzzzzz[k] - fgz * g21_0_zzzzzz[k]) + 6.0 * f2t * gk_z_zzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSI(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 6);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 6, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 6, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 6, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 6, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 5, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SH)^(m+1) integrals

                auto gk_xx_xxxxx = primBuffer.data(gkoff + 126 * idx);

                auto gk_xx_xxxxy = primBuffer.data(gkoff + 126 * idx + 1);

                auto gk_xx_xxxxz = primBuffer.data(gkoff + 126 * idx + 2);

                auto gk_xx_xxxyy = primBuffer.data(gkoff + 126 * idx + 3);

                auto gk_xx_xxxyz = primBuffer.data(gkoff + 126 * idx + 4);

                auto gk_xx_xxxzz = primBuffer.data(gkoff + 126 * idx + 5);

                auto gk_xx_xxyyy = primBuffer.data(gkoff + 126 * idx + 6);

                auto gk_xx_xxyyz = primBuffer.data(gkoff + 126 * idx + 7);

                auto gk_xx_xxyzz = primBuffer.data(gkoff + 126 * idx + 8);

                auto gk_xx_xxzzz = primBuffer.data(gkoff + 126 * idx + 9);

                auto gk_xx_xyyyy = primBuffer.data(gkoff + 126 * idx + 10);

                auto gk_xx_xyyyz = primBuffer.data(gkoff + 126 * idx + 11);

                auto gk_xx_xyyzz = primBuffer.data(gkoff + 126 * idx + 12);

                auto gk_xx_xyzzz = primBuffer.data(gkoff + 126 * idx + 13);

                auto gk_xx_xzzzz = primBuffer.data(gkoff + 126 * idx + 14);

                auto gk_xx_yyyyy = primBuffer.data(gkoff + 126 * idx + 15);

                auto gk_xx_yyyyz = primBuffer.data(gkoff + 126 * idx + 16);

                auto gk_xx_yyyzz = primBuffer.data(gkoff + 126 * idx + 17);

                auto gk_xx_yyzzz = primBuffer.data(gkoff + 126 * idx + 18);

                auto gk_xx_yzzzz = primBuffer.data(gkoff + 126 * idx + 19);

                auto gk_xx_zzzzz = primBuffer.data(gkoff + 126 * idx + 20);

                auto gk_xy_xxxxx = primBuffer.data(gkoff + 126 * idx + 21);

                auto gk_xy_xxxxy = primBuffer.data(gkoff + 126 * idx + 22);

                auto gk_xy_xxxxz = primBuffer.data(gkoff + 126 * idx + 23);

                auto gk_xy_xxxyy = primBuffer.data(gkoff + 126 * idx + 24);

                auto gk_xy_xxxyz = primBuffer.data(gkoff + 126 * idx + 25);

                auto gk_xy_xxxzz = primBuffer.data(gkoff + 126 * idx + 26);

                auto gk_xy_xxyyy = primBuffer.data(gkoff + 126 * idx + 27);

                auto gk_xy_xxyyz = primBuffer.data(gkoff + 126 * idx + 28);

                auto gk_xy_xxyzz = primBuffer.data(gkoff + 126 * idx + 29);

                auto gk_xy_xxzzz = primBuffer.data(gkoff + 126 * idx + 30);

                auto gk_xy_xyyyy = primBuffer.data(gkoff + 126 * idx + 31);

                auto gk_xy_xyyyz = primBuffer.data(gkoff + 126 * idx + 32);

                auto gk_xy_xyyzz = primBuffer.data(gkoff + 126 * idx + 33);

                auto gk_xy_xyzzz = primBuffer.data(gkoff + 126 * idx + 34);

                auto gk_xy_xzzzz = primBuffer.data(gkoff + 126 * idx + 35);

                auto gk_xy_yyyyy = primBuffer.data(gkoff + 126 * idx + 36);

                auto gk_xy_yyyyz = primBuffer.data(gkoff + 126 * idx + 37);

                auto gk_xy_yyyzz = primBuffer.data(gkoff + 126 * idx + 38);

                auto gk_xy_yyzzz = primBuffer.data(gkoff + 126 * idx + 39);

                auto gk_xy_yzzzz = primBuffer.data(gkoff + 126 * idx + 40);

                auto gk_xy_zzzzz = primBuffer.data(gkoff + 126 * idx + 41);

                auto gk_xz_xxxxx = primBuffer.data(gkoff + 126 * idx + 42);

                auto gk_xz_xxxxy = primBuffer.data(gkoff + 126 * idx + 43);

                auto gk_xz_xxxxz = primBuffer.data(gkoff + 126 * idx + 44);

                auto gk_xz_xxxyy = primBuffer.data(gkoff + 126 * idx + 45);

                auto gk_xz_xxxyz = primBuffer.data(gkoff + 126 * idx + 46);

                auto gk_xz_xxxzz = primBuffer.data(gkoff + 126 * idx + 47);

                auto gk_xz_xxyyy = primBuffer.data(gkoff + 126 * idx + 48);

                auto gk_xz_xxyyz = primBuffer.data(gkoff + 126 * idx + 49);

                auto gk_xz_xxyzz = primBuffer.data(gkoff + 126 * idx + 50);

                auto gk_xz_xxzzz = primBuffer.data(gkoff + 126 * idx + 51);

                auto gk_xz_xyyyy = primBuffer.data(gkoff + 126 * idx + 52);

                auto gk_xz_xyyyz = primBuffer.data(gkoff + 126 * idx + 53);

                auto gk_xz_xyyzz = primBuffer.data(gkoff + 126 * idx + 54);

                auto gk_xz_xyzzz = primBuffer.data(gkoff + 126 * idx + 55);

                auto gk_xz_xzzzz = primBuffer.data(gkoff + 126 * idx + 56);

                auto gk_xz_yyyyy = primBuffer.data(gkoff + 126 * idx + 57);

                auto gk_xz_yyyyz = primBuffer.data(gkoff + 126 * idx + 58);

                auto gk_xz_yyyzz = primBuffer.data(gkoff + 126 * idx + 59);

                auto gk_xz_yyzzz = primBuffer.data(gkoff + 126 * idx + 60);

                auto gk_xz_yzzzz = primBuffer.data(gkoff + 126 * idx + 61);

                auto gk_xz_zzzzz = primBuffer.data(gkoff + 126 * idx + 62);

                auto gk_yy_xxxxx = primBuffer.data(gkoff + 126 * idx + 63);

                auto gk_yy_xxxxy = primBuffer.data(gkoff + 126 * idx + 64);

                auto gk_yy_xxxxz = primBuffer.data(gkoff + 126 * idx + 65);

                auto gk_yy_xxxyy = primBuffer.data(gkoff + 126 * idx + 66);

                auto gk_yy_xxxyz = primBuffer.data(gkoff + 126 * idx + 67);

                auto gk_yy_xxxzz = primBuffer.data(gkoff + 126 * idx + 68);

                auto gk_yy_xxyyy = primBuffer.data(gkoff + 126 * idx + 69);

                auto gk_yy_xxyyz = primBuffer.data(gkoff + 126 * idx + 70);

                auto gk_yy_xxyzz = primBuffer.data(gkoff + 126 * idx + 71);

                auto gk_yy_xxzzz = primBuffer.data(gkoff + 126 * idx + 72);

                auto gk_yy_xyyyy = primBuffer.data(gkoff + 126 * idx + 73);

                auto gk_yy_xyyyz = primBuffer.data(gkoff + 126 * idx + 74);

                auto gk_yy_xyyzz = primBuffer.data(gkoff + 126 * idx + 75);

                auto gk_yy_xyzzz = primBuffer.data(gkoff + 126 * idx + 76);

                auto gk_yy_xzzzz = primBuffer.data(gkoff + 126 * idx + 77);

                auto gk_yy_yyyyy = primBuffer.data(gkoff + 126 * idx + 78);

                auto gk_yy_yyyyz = primBuffer.data(gkoff + 126 * idx + 79);

                auto gk_yy_yyyzz = primBuffer.data(gkoff + 126 * idx + 80);

                auto gk_yy_yyzzz = primBuffer.data(gkoff + 126 * idx + 81);

                auto gk_yy_yzzzz = primBuffer.data(gkoff + 126 * idx + 82);

                auto gk_yy_zzzzz = primBuffer.data(gkoff + 126 * idx + 83);

                auto gk_yz_xxxxx = primBuffer.data(gkoff + 126 * idx + 84);

                auto gk_yz_xxxxy = primBuffer.data(gkoff + 126 * idx + 85);

                auto gk_yz_xxxxz = primBuffer.data(gkoff + 126 * idx + 86);

                auto gk_yz_xxxyy = primBuffer.data(gkoff + 126 * idx + 87);

                auto gk_yz_xxxyz = primBuffer.data(gkoff + 126 * idx + 88);

                auto gk_yz_xxxzz = primBuffer.data(gkoff + 126 * idx + 89);

                auto gk_yz_xxyyy = primBuffer.data(gkoff + 126 * idx + 90);

                auto gk_yz_xxyyz = primBuffer.data(gkoff + 126 * idx + 91);

                auto gk_yz_xxyzz = primBuffer.data(gkoff + 126 * idx + 92);

                auto gk_yz_xxzzz = primBuffer.data(gkoff + 126 * idx + 93);

                auto gk_yz_xyyyy = primBuffer.data(gkoff + 126 * idx + 94);

                auto gk_yz_xyyyz = primBuffer.data(gkoff + 126 * idx + 95);

                auto gk_yz_xyyzz = primBuffer.data(gkoff + 126 * idx + 96);

                auto gk_yz_xyzzz = primBuffer.data(gkoff + 126 * idx + 97);

                auto gk_yz_xzzzz = primBuffer.data(gkoff + 126 * idx + 98);

                auto gk_yz_yyyyy = primBuffer.data(gkoff + 126 * idx + 99);

                auto gk_yz_yyyyz = primBuffer.data(gkoff + 126 * idx + 100);

                auto gk_yz_yyyzz = primBuffer.data(gkoff + 126 * idx + 101);

                auto gk_yz_yyzzz = primBuffer.data(gkoff + 126 * idx + 102);

                auto gk_yz_yzzzz = primBuffer.data(gkoff + 126 * idx + 103);

                auto gk_yz_zzzzz = primBuffer.data(gkoff + 126 * idx + 104);

                auto gk_zz_xxxxx = primBuffer.data(gkoff + 126 * idx + 105);

                auto gk_zz_xxxxy = primBuffer.data(gkoff + 126 * idx + 106);

                auto gk_zz_xxxxz = primBuffer.data(gkoff + 126 * idx + 107);

                auto gk_zz_xxxyy = primBuffer.data(gkoff + 126 * idx + 108);

                auto gk_zz_xxxyz = primBuffer.data(gkoff + 126 * idx + 109);

                auto gk_zz_xxxzz = primBuffer.data(gkoff + 126 * idx + 110);

                auto gk_zz_xxyyy = primBuffer.data(gkoff + 126 * idx + 111);

                auto gk_zz_xxyyz = primBuffer.data(gkoff + 126 * idx + 112);

                auto gk_zz_xxyzz = primBuffer.data(gkoff + 126 * idx + 113);

                auto gk_zz_xxzzz = primBuffer.data(gkoff + 126 * idx + 114);

                auto gk_zz_xyyyy = primBuffer.data(gkoff + 126 * idx + 115);

                auto gk_zz_xyyyz = primBuffer.data(gkoff + 126 * idx + 116);

                auto gk_zz_xyyzz = primBuffer.data(gkoff + 126 * idx + 117);

                auto gk_zz_xyzzz = primBuffer.data(gkoff + 126 * idx + 118);

                auto gk_zz_xzzzz = primBuffer.data(gkoff + 126 * idx + 119);

                auto gk_zz_yyyyy = primBuffer.data(gkoff + 126 * idx + 120);

                auto gk_zz_yyyyz = primBuffer.data(gkoff + 126 * idx + 121);

                auto gk_zz_yyyzz = primBuffer.data(gkoff + 126 * idx + 122);

                auto gk_zz_yyzzz = primBuffer.data(gkoff + 126 * idx + 123);

                auto gk_zz_yzzzz = primBuffer.data(gkoff + 126 * idx + 124);

                auto gk_zz_zzzzz = primBuffer.data(gkoff + 126 * idx + 125);

                // set up pointers to (P|g(r,r')|SI)^(m) integrals

                auto g20_x_xxxxxx = primBuffer.data(g20off + 84 * idx);

                auto g20_x_xxxxxy = primBuffer.data(g20off + 84 * idx + 1);

                auto g20_x_xxxxxz = primBuffer.data(g20off + 84 * idx + 2);

                auto g20_x_xxxxyy = primBuffer.data(g20off + 84 * idx + 3);

                auto g20_x_xxxxyz = primBuffer.data(g20off + 84 * idx + 4);

                auto g20_x_xxxxzz = primBuffer.data(g20off + 84 * idx + 5);

                auto g20_x_xxxyyy = primBuffer.data(g20off + 84 * idx + 6);

                auto g20_x_xxxyyz = primBuffer.data(g20off + 84 * idx + 7);

                auto g20_x_xxxyzz = primBuffer.data(g20off + 84 * idx + 8);

                auto g20_x_xxxzzz = primBuffer.data(g20off + 84 * idx + 9);

                auto g20_x_xxyyyy = primBuffer.data(g20off + 84 * idx + 10);

                auto g20_x_xxyyyz = primBuffer.data(g20off + 84 * idx + 11);

                auto g20_x_xxyyzz = primBuffer.data(g20off + 84 * idx + 12);

                auto g20_x_xxyzzz = primBuffer.data(g20off + 84 * idx + 13);

                auto g20_x_xxzzzz = primBuffer.data(g20off + 84 * idx + 14);

                auto g20_x_xyyyyy = primBuffer.data(g20off + 84 * idx + 15);

                auto g20_x_xyyyyz = primBuffer.data(g20off + 84 * idx + 16);

                auto g20_x_xyyyzz = primBuffer.data(g20off + 84 * idx + 17);

                auto g20_x_xyyzzz = primBuffer.data(g20off + 84 * idx + 18);

                auto g20_x_xyzzzz = primBuffer.data(g20off + 84 * idx + 19);

                auto g20_x_xzzzzz = primBuffer.data(g20off + 84 * idx + 20);

                auto g20_x_yyyyyy = primBuffer.data(g20off + 84 * idx + 21);

                auto g20_x_yyyyyz = primBuffer.data(g20off + 84 * idx + 22);

                auto g20_x_yyyyzz = primBuffer.data(g20off + 84 * idx + 23);

                auto g20_x_yyyzzz = primBuffer.data(g20off + 84 * idx + 24);

                auto g20_x_yyzzzz = primBuffer.data(g20off + 84 * idx + 25);

                auto g20_x_yzzzzz = primBuffer.data(g20off + 84 * idx + 26);

                auto g20_x_zzzzzz = primBuffer.data(g20off + 84 * idx + 27);

                auto g20_y_xxxxxx = primBuffer.data(g20off + 84 * idx + 28);

                auto g20_y_xxxxxy = primBuffer.data(g20off + 84 * idx + 29);

                auto g20_y_xxxxxz = primBuffer.data(g20off + 84 * idx + 30);

                auto g20_y_xxxxyy = primBuffer.data(g20off + 84 * idx + 31);

                auto g20_y_xxxxyz = primBuffer.data(g20off + 84 * idx + 32);

                auto g20_y_xxxxzz = primBuffer.data(g20off + 84 * idx + 33);

                auto g20_y_xxxyyy = primBuffer.data(g20off + 84 * idx + 34);

                auto g20_y_xxxyyz = primBuffer.data(g20off + 84 * idx + 35);

                auto g20_y_xxxyzz = primBuffer.data(g20off + 84 * idx + 36);

                auto g20_y_xxxzzz = primBuffer.data(g20off + 84 * idx + 37);

                auto g20_y_xxyyyy = primBuffer.data(g20off + 84 * idx + 38);

                auto g20_y_xxyyyz = primBuffer.data(g20off + 84 * idx + 39);

                auto g20_y_xxyyzz = primBuffer.data(g20off + 84 * idx + 40);

                auto g20_y_xxyzzz = primBuffer.data(g20off + 84 * idx + 41);

                auto g20_y_xxzzzz = primBuffer.data(g20off + 84 * idx + 42);

                auto g20_y_xyyyyy = primBuffer.data(g20off + 84 * idx + 43);

                auto g20_y_xyyyyz = primBuffer.data(g20off + 84 * idx + 44);

                auto g20_y_xyyyzz = primBuffer.data(g20off + 84 * idx + 45);

                auto g20_y_xyyzzz = primBuffer.data(g20off + 84 * idx + 46);

                auto g20_y_xyzzzz = primBuffer.data(g20off + 84 * idx + 47);

                auto g20_y_xzzzzz = primBuffer.data(g20off + 84 * idx + 48);

                auto g20_y_yyyyyy = primBuffer.data(g20off + 84 * idx + 49);

                auto g20_y_yyyyyz = primBuffer.data(g20off + 84 * idx + 50);

                auto g20_y_yyyyzz = primBuffer.data(g20off + 84 * idx + 51);

                auto g20_y_yyyzzz = primBuffer.data(g20off + 84 * idx + 52);

                auto g20_y_yyzzzz = primBuffer.data(g20off + 84 * idx + 53);

                auto g20_y_yzzzzz = primBuffer.data(g20off + 84 * idx + 54);

                auto g20_y_zzzzzz = primBuffer.data(g20off + 84 * idx + 55);

                auto g20_z_xxxxxx = primBuffer.data(g20off + 84 * idx + 56);

                auto g20_z_xxxxxy = primBuffer.data(g20off + 84 * idx + 57);

                auto g20_z_xxxxxz = primBuffer.data(g20off + 84 * idx + 58);

                auto g20_z_xxxxyy = primBuffer.data(g20off + 84 * idx + 59);

                auto g20_z_xxxxyz = primBuffer.data(g20off + 84 * idx + 60);

                auto g20_z_xxxxzz = primBuffer.data(g20off + 84 * idx + 61);

                auto g20_z_xxxyyy = primBuffer.data(g20off + 84 * idx + 62);

                auto g20_z_xxxyyz = primBuffer.data(g20off + 84 * idx + 63);

                auto g20_z_xxxyzz = primBuffer.data(g20off + 84 * idx + 64);

                auto g20_z_xxxzzz = primBuffer.data(g20off + 84 * idx + 65);

                auto g20_z_xxyyyy = primBuffer.data(g20off + 84 * idx + 66);

                auto g20_z_xxyyyz = primBuffer.data(g20off + 84 * idx + 67);

                auto g20_z_xxyyzz = primBuffer.data(g20off + 84 * idx + 68);

                auto g20_z_xxyzzz = primBuffer.data(g20off + 84 * idx + 69);

                auto g20_z_xxzzzz = primBuffer.data(g20off + 84 * idx + 70);

                auto g20_z_xyyyyy = primBuffer.data(g20off + 84 * idx + 71);

                auto g20_z_xyyyyz = primBuffer.data(g20off + 84 * idx + 72);

                auto g20_z_xyyyzz = primBuffer.data(g20off + 84 * idx + 73);

                auto g20_z_xyyzzz = primBuffer.data(g20off + 84 * idx + 74);

                auto g20_z_xyzzzz = primBuffer.data(g20off + 84 * idx + 75);

                auto g20_z_xzzzzz = primBuffer.data(g20off + 84 * idx + 76);

                auto g20_z_yyyyyy = primBuffer.data(g20off + 84 * idx + 77);

                auto g20_z_yyyyyz = primBuffer.data(g20off + 84 * idx + 78);

                auto g20_z_yyyyzz = primBuffer.data(g20off + 84 * idx + 79);

                auto g20_z_yyyzzz = primBuffer.data(g20off + 84 * idx + 80);

                auto g20_z_yyzzzz = primBuffer.data(g20off + 84 * idx + 81);

                auto g20_z_yzzzzz = primBuffer.data(g20off + 84 * idx + 82);

                auto g20_z_zzzzzz = primBuffer.data(g20off + 84 * idx + 83);

                // set up pointers to (P|g(r,r')|SI)^(m+1) integrals

                auto g21_x_xxxxxx = primBuffer.data(g21off + 84 * idx);

                auto g21_x_xxxxxy = primBuffer.data(g21off + 84 * idx + 1);

                auto g21_x_xxxxxz = primBuffer.data(g21off + 84 * idx + 2);

                auto g21_x_xxxxyy = primBuffer.data(g21off + 84 * idx + 3);

                auto g21_x_xxxxyz = primBuffer.data(g21off + 84 * idx + 4);

                auto g21_x_xxxxzz = primBuffer.data(g21off + 84 * idx + 5);

                auto g21_x_xxxyyy = primBuffer.data(g21off + 84 * idx + 6);

                auto g21_x_xxxyyz = primBuffer.data(g21off + 84 * idx + 7);

                auto g21_x_xxxyzz = primBuffer.data(g21off + 84 * idx + 8);

                auto g21_x_xxxzzz = primBuffer.data(g21off + 84 * idx + 9);

                auto g21_x_xxyyyy = primBuffer.data(g21off + 84 * idx + 10);

                auto g21_x_xxyyyz = primBuffer.data(g21off + 84 * idx + 11);

                auto g21_x_xxyyzz = primBuffer.data(g21off + 84 * idx + 12);

                auto g21_x_xxyzzz = primBuffer.data(g21off + 84 * idx + 13);

                auto g21_x_xxzzzz = primBuffer.data(g21off + 84 * idx + 14);

                auto g21_x_xyyyyy = primBuffer.data(g21off + 84 * idx + 15);

                auto g21_x_xyyyyz = primBuffer.data(g21off + 84 * idx + 16);

                auto g21_x_xyyyzz = primBuffer.data(g21off + 84 * idx + 17);

                auto g21_x_xyyzzz = primBuffer.data(g21off + 84 * idx + 18);

                auto g21_x_xyzzzz = primBuffer.data(g21off + 84 * idx + 19);

                auto g21_x_xzzzzz = primBuffer.data(g21off + 84 * idx + 20);

                auto g21_x_yyyyyy = primBuffer.data(g21off + 84 * idx + 21);

                auto g21_x_yyyyyz = primBuffer.data(g21off + 84 * idx + 22);

                auto g21_x_yyyyzz = primBuffer.data(g21off + 84 * idx + 23);

                auto g21_x_yyyzzz = primBuffer.data(g21off + 84 * idx + 24);

                auto g21_x_yyzzzz = primBuffer.data(g21off + 84 * idx + 25);

                auto g21_x_yzzzzz = primBuffer.data(g21off + 84 * idx + 26);

                auto g21_x_zzzzzz = primBuffer.data(g21off + 84 * idx + 27);

                auto g21_y_xxxxxx = primBuffer.data(g21off + 84 * idx + 28);

                auto g21_y_xxxxxy = primBuffer.data(g21off + 84 * idx + 29);

                auto g21_y_xxxxxz = primBuffer.data(g21off + 84 * idx + 30);

                auto g21_y_xxxxyy = primBuffer.data(g21off + 84 * idx + 31);

                auto g21_y_xxxxyz = primBuffer.data(g21off + 84 * idx + 32);

                auto g21_y_xxxxzz = primBuffer.data(g21off + 84 * idx + 33);

                auto g21_y_xxxyyy = primBuffer.data(g21off + 84 * idx + 34);

                auto g21_y_xxxyyz = primBuffer.data(g21off + 84 * idx + 35);

                auto g21_y_xxxyzz = primBuffer.data(g21off + 84 * idx + 36);

                auto g21_y_xxxzzz = primBuffer.data(g21off + 84 * idx + 37);

                auto g21_y_xxyyyy = primBuffer.data(g21off + 84 * idx + 38);

                auto g21_y_xxyyyz = primBuffer.data(g21off + 84 * idx + 39);

                auto g21_y_xxyyzz = primBuffer.data(g21off + 84 * idx + 40);

                auto g21_y_xxyzzz = primBuffer.data(g21off + 84 * idx + 41);

                auto g21_y_xxzzzz = primBuffer.data(g21off + 84 * idx + 42);

                auto g21_y_xyyyyy = primBuffer.data(g21off + 84 * idx + 43);

                auto g21_y_xyyyyz = primBuffer.data(g21off + 84 * idx + 44);

                auto g21_y_xyyyzz = primBuffer.data(g21off + 84 * idx + 45);

                auto g21_y_xyyzzz = primBuffer.data(g21off + 84 * idx + 46);

                auto g21_y_xyzzzz = primBuffer.data(g21off + 84 * idx + 47);

                auto g21_y_xzzzzz = primBuffer.data(g21off + 84 * idx + 48);

                auto g21_y_yyyyyy = primBuffer.data(g21off + 84 * idx + 49);

                auto g21_y_yyyyyz = primBuffer.data(g21off + 84 * idx + 50);

                auto g21_y_yyyyzz = primBuffer.data(g21off + 84 * idx + 51);

                auto g21_y_yyyzzz = primBuffer.data(g21off + 84 * idx + 52);

                auto g21_y_yyzzzz = primBuffer.data(g21off + 84 * idx + 53);

                auto g21_y_yzzzzz = primBuffer.data(g21off + 84 * idx + 54);

                auto g21_y_zzzzzz = primBuffer.data(g21off + 84 * idx + 55);

                auto g21_z_xxxxxx = primBuffer.data(g21off + 84 * idx + 56);

                auto g21_z_xxxxxy = primBuffer.data(g21off + 84 * idx + 57);

                auto g21_z_xxxxxz = primBuffer.data(g21off + 84 * idx + 58);

                auto g21_z_xxxxyy = primBuffer.data(g21off + 84 * idx + 59);

                auto g21_z_xxxxyz = primBuffer.data(g21off + 84 * idx + 60);

                auto g21_z_xxxxzz = primBuffer.data(g21off + 84 * idx + 61);

                auto g21_z_xxxyyy = primBuffer.data(g21off + 84 * idx + 62);

                auto g21_z_xxxyyz = primBuffer.data(g21off + 84 * idx + 63);

                auto g21_z_xxxyzz = primBuffer.data(g21off + 84 * idx + 64);

                auto g21_z_xxxzzz = primBuffer.data(g21off + 84 * idx + 65);

                auto g21_z_xxyyyy = primBuffer.data(g21off + 84 * idx + 66);

                auto g21_z_xxyyyz = primBuffer.data(g21off + 84 * idx + 67);

                auto g21_z_xxyyzz = primBuffer.data(g21off + 84 * idx + 68);

                auto g21_z_xxyzzz = primBuffer.data(g21off + 84 * idx + 69);

                auto g21_z_xxzzzz = primBuffer.data(g21off + 84 * idx + 70);

                auto g21_z_xyyyyy = primBuffer.data(g21off + 84 * idx + 71);

                auto g21_z_xyyyyz = primBuffer.data(g21off + 84 * idx + 72);

                auto g21_z_xyyyzz = primBuffer.data(g21off + 84 * idx + 73);

                auto g21_z_xyyzzz = primBuffer.data(g21off + 84 * idx + 74);

                auto g21_z_xyzzzz = primBuffer.data(g21off + 84 * idx + 75);

                auto g21_z_xzzzzz = primBuffer.data(g21off + 84 * idx + 76);

                auto g21_z_yyyyyy = primBuffer.data(g21off + 84 * idx + 77);

                auto g21_z_yyyyyz = primBuffer.data(g21off + 84 * idx + 78);

                auto g21_z_yyyyzz = primBuffer.data(g21off + 84 * idx + 79);

                auto g21_z_yyyzzz = primBuffer.data(g21off + 84 * idx + 80);

                auto g21_z_yyzzzz = primBuffer.data(g21off + 84 * idx + 81);

                auto g21_z_yzzzzz = primBuffer.data(g21off + 84 * idx + 82);

                auto g21_z_zzzzzz = primBuffer.data(g21off + 84 * idx + 83);

                // set up pointers to (D|g(r,r')|SI)^(m+1) integrals

                auto g11_xx_xxxxxx = primBuffer.data(g11off + 168 * idx);

                auto g11_xx_xxxxxy = primBuffer.data(g11off + 168 * idx + 1);

                auto g11_xx_xxxxxz = primBuffer.data(g11off + 168 * idx + 2);

                auto g11_xx_xxxxyy = primBuffer.data(g11off + 168 * idx + 3);

                auto g11_xx_xxxxyz = primBuffer.data(g11off + 168 * idx + 4);

                auto g11_xx_xxxxzz = primBuffer.data(g11off + 168 * idx + 5);

                auto g11_xx_xxxyyy = primBuffer.data(g11off + 168 * idx + 6);

                auto g11_xx_xxxyyz = primBuffer.data(g11off + 168 * idx + 7);

                auto g11_xx_xxxyzz = primBuffer.data(g11off + 168 * idx + 8);

                auto g11_xx_xxxzzz = primBuffer.data(g11off + 168 * idx + 9);

                auto g11_xx_xxyyyy = primBuffer.data(g11off + 168 * idx + 10);

                auto g11_xx_xxyyyz = primBuffer.data(g11off + 168 * idx + 11);

                auto g11_xx_xxyyzz = primBuffer.data(g11off + 168 * idx + 12);

                auto g11_xx_xxyzzz = primBuffer.data(g11off + 168 * idx + 13);

                auto g11_xx_xxzzzz = primBuffer.data(g11off + 168 * idx + 14);

                auto g11_xx_xyyyyy = primBuffer.data(g11off + 168 * idx + 15);

                auto g11_xx_xyyyyz = primBuffer.data(g11off + 168 * idx + 16);

                auto g11_xx_xyyyzz = primBuffer.data(g11off + 168 * idx + 17);

                auto g11_xx_xyyzzz = primBuffer.data(g11off + 168 * idx + 18);

                auto g11_xx_xyzzzz = primBuffer.data(g11off + 168 * idx + 19);

                auto g11_xx_xzzzzz = primBuffer.data(g11off + 168 * idx + 20);

                auto g11_xx_yyyyyy = primBuffer.data(g11off + 168 * idx + 21);

                auto g11_xx_yyyyyz = primBuffer.data(g11off + 168 * idx + 22);

                auto g11_xx_yyyyzz = primBuffer.data(g11off + 168 * idx + 23);

                auto g11_xx_yyyzzz = primBuffer.data(g11off + 168 * idx + 24);

                auto g11_xx_yyzzzz = primBuffer.data(g11off + 168 * idx + 25);

                auto g11_xx_yzzzzz = primBuffer.data(g11off + 168 * idx + 26);

                auto g11_xx_zzzzzz = primBuffer.data(g11off + 168 * idx + 27);

                auto g11_xy_xxxxxx = primBuffer.data(g11off + 168 * idx + 28);

                auto g11_xy_xxxxxy = primBuffer.data(g11off + 168 * idx + 29);

                auto g11_xy_xxxxxz = primBuffer.data(g11off + 168 * idx + 30);

                auto g11_xy_xxxxyy = primBuffer.data(g11off + 168 * idx + 31);

                auto g11_xy_xxxxyz = primBuffer.data(g11off + 168 * idx + 32);

                auto g11_xy_xxxxzz = primBuffer.data(g11off + 168 * idx + 33);

                auto g11_xy_xxxyyy = primBuffer.data(g11off + 168 * idx + 34);

                auto g11_xy_xxxyyz = primBuffer.data(g11off + 168 * idx + 35);

                auto g11_xy_xxxyzz = primBuffer.data(g11off + 168 * idx + 36);

                auto g11_xy_xxxzzz = primBuffer.data(g11off + 168 * idx + 37);

                auto g11_xy_xxyyyy = primBuffer.data(g11off + 168 * idx + 38);

                auto g11_xy_xxyyyz = primBuffer.data(g11off + 168 * idx + 39);

                auto g11_xy_xxyyzz = primBuffer.data(g11off + 168 * idx + 40);

                auto g11_xy_xxyzzz = primBuffer.data(g11off + 168 * idx + 41);

                auto g11_xy_xxzzzz = primBuffer.data(g11off + 168 * idx + 42);

                auto g11_xy_xyyyyy = primBuffer.data(g11off + 168 * idx + 43);

                auto g11_xy_xyyyyz = primBuffer.data(g11off + 168 * idx + 44);

                auto g11_xy_xyyyzz = primBuffer.data(g11off + 168 * idx + 45);

                auto g11_xy_xyyzzz = primBuffer.data(g11off + 168 * idx + 46);

                auto g11_xy_xyzzzz = primBuffer.data(g11off + 168 * idx + 47);

                auto g11_xy_xzzzzz = primBuffer.data(g11off + 168 * idx + 48);

                auto g11_xy_yyyyyy = primBuffer.data(g11off + 168 * idx + 49);

                auto g11_xy_yyyyyz = primBuffer.data(g11off + 168 * idx + 50);

                auto g11_xy_yyyyzz = primBuffer.data(g11off + 168 * idx + 51);

                auto g11_xy_yyyzzz = primBuffer.data(g11off + 168 * idx + 52);

                auto g11_xy_yyzzzz = primBuffer.data(g11off + 168 * idx + 53);

                auto g11_xy_yzzzzz = primBuffer.data(g11off + 168 * idx + 54);

                auto g11_xy_zzzzzz = primBuffer.data(g11off + 168 * idx + 55);

                auto g11_xz_xxxxxx = primBuffer.data(g11off + 168 * idx + 56);

                auto g11_xz_xxxxxy = primBuffer.data(g11off + 168 * idx + 57);

                auto g11_xz_xxxxxz = primBuffer.data(g11off + 168 * idx + 58);

                auto g11_xz_xxxxyy = primBuffer.data(g11off + 168 * idx + 59);

                auto g11_xz_xxxxyz = primBuffer.data(g11off + 168 * idx + 60);

                auto g11_xz_xxxxzz = primBuffer.data(g11off + 168 * idx + 61);

                auto g11_xz_xxxyyy = primBuffer.data(g11off + 168 * idx + 62);

                auto g11_xz_xxxyyz = primBuffer.data(g11off + 168 * idx + 63);

                auto g11_xz_xxxyzz = primBuffer.data(g11off + 168 * idx + 64);

                auto g11_xz_xxxzzz = primBuffer.data(g11off + 168 * idx + 65);

                auto g11_xz_xxyyyy = primBuffer.data(g11off + 168 * idx + 66);

                auto g11_xz_xxyyyz = primBuffer.data(g11off + 168 * idx + 67);

                auto g11_xz_xxyyzz = primBuffer.data(g11off + 168 * idx + 68);

                auto g11_xz_xxyzzz = primBuffer.data(g11off + 168 * idx + 69);

                auto g11_xz_xxzzzz = primBuffer.data(g11off + 168 * idx + 70);

                auto g11_xz_xyyyyy = primBuffer.data(g11off + 168 * idx + 71);

                auto g11_xz_xyyyyz = primBuffer.data(g11off + 168 * idx + 72);

                auto g11_xz_xyyyzz = primBuffer.data(g11off + 168 * idx + 73);

                auto g11_xz_xyyzzz = primBuffer.data(g11off + 168 * idx + 74);

                auto g11_xz_xyzzzz = primBuffer.data(g11off + 168 * idx + 75);

                auto g11_xz_xzzzzz = primBuffer.data(g11off + 168 * idx + 76);

                auto g11_xz_yyyyyy = primBuffer.data(g11off + 168 * idx + 77);

                auto g11_xz_yyyyyz = primBuffer.data(g11off + 168 * idx + 78);

                auto g11_xz_yyyyzz = primBuffer.data(g11off + 168 * idx + 79);

                auto g11_xz_yyyzzz = primBuffer.data(g11off + 168 * idx + 80);

                auto g11_xz_yyzzzz = primBuffer.data(g11off + 168 * idx + 81);

                auto g11_xz_yzzzzz = primBuffer.data(g11off + 168 * idx + 82);

                auto g11_xz_zzzzzz = primBuffer.data(g11off + 168 * idx + 83);

                auto g11_yy_xxxxxx = primBuffer.data(g11off + 168 * idx + 84);

                auto g11_yy_xxxxxy = primBuffer.data(g11off + 168 * idx + 85);

                auto g11_yy_xxxxxz = primBuffer.data(g11off + 168 * idx + 86);

                auto g11_yy_xxxxyy = primBuffer.data(g11off + 168 * idx + 87);

                auto g11_yy_xxxxyz = primBuffer.data(g11off + 168 * idx + 88);

                auto g11_yy_xxxxzz = primBuffer.data(g11off + 168 * idx + 89);

                auto g11_yy_xxxyyy = primBuffer.data(g11off + 168 * idx + 90);

                auto g11_yy_xxxyyz = primBuffer.data(g11off + 168 * idx + 91);

                auto g11_yy_xxxyzz = primBuffer.data(g11off + 168 * idx + 92);

                auto g11_yy_xxxzzz = primBuffer.data(g11off + 168 * idx + 93);

                auto g11_yy_xxyyyy = primBuffer.data(g11off + 168 * idx + 94);

                auto g11_yy_xxyyyz = primBuffer.data(g11off + 168 * idx + 95);

                auto g11_yy_xxyyzz = primBuffer.data(g11off + 168 * idx + 96);

                auto g11_yy_xxyzzz = primBuffer.data(g11off + 168 * idx + 97);

                auto g11_yy_xxzzzz = primBuffer.data(g11off + 168 * idx + 98);

                auto g11_yy_xyyyyy = primBuffer.data(g11off + 168 * idx + 99);

                auto g11_yy_xyyyyz = primBuffer.data(g11off + 168 * idx + 100);

                auto g11_yy_xyyyzz = primBuffer.data(g11off + 168 * idx + 101);

                auto g11_yy_xyyzzz = primBuffer.data(g11off + 168 * idx + 102);

                auto g11_yy_xyzzzz = primBuffer.data(g11off + 168 * idx + 103);

                auto g11_yy_xzzzzz = primBuffer.data(g11off + 168 * idx + 104);

                auto g11_yy_yyyyyy = primBuffer.data(g11off + 168 * idx + 105);

                auto g11_yy_yyyyyz = primBuffer.data(g11off + 168 * idx + 106);

                auto g11_yy_yyyyzz = primBuffer.data(g11off + 168 * idx + 107);

                auto g11_yy_yyyzzz = primBuffer.data(g11off + 168 * idx + 108);

                auto g11_yy_yyzzzz = primBuffer.data(g11off + 168 * idx + 109);

                auto g11_yy_yzzzzz = primBuffer.data(g11off + 168 * idx + 110);

                auto g11_yy_zzzzzz = primBuffer.data(g11off + 168 * idx + 111);

                auto g11_yz_xxxxxx = primBuffer.data(g11off + 168 * idx + 112);

                auto g11_yz_xxxxxy = primBuffer.data(g11off + 168 * idx + 113);

                auto g11_yz_xxxxxz = primBuffer.data(g11off + 168 * idx + 114);

                auto g11_yz_xxxxyy = primBuffer.data(g11off + 168 * idx + 115);

                auto g11_yz_xxxxyz = primBuffer.data(g11off + 168 * idx + 116);

                auto g11_yz_xxxxzz = primBuffer.data(g11off + 168 * idx + 117);

                auto g11_yz_xxxyyy = primBuffer.data(g11off + 168 * idx + 118);

                auto g11_yz_xxxyyz = primBuffer.data(g11off + 168 * idx + 119);

                auto g11_yz_xxxyzz = primBuffer.data(g11off + 168 * idx + 120);

                auto g11_yz_xxxzzz = primBuffer.data(g11off + 168 * idx + 121);

                auto g11_yz_xxyyyy = primBuffer.data(g11off + 168 * idx + 122);

                auto g11_yz_xxyyyz = primBuffer.data(g11off + 168 * idx + 123);

                auto g11_yz_xxyyzz = primBuffer.data(g11off + 168 * idx + 124);

                auto g11_yz_xxyzzz = primBuffer.data(g11off + 168 * idx + 125);

                auto g11_yz_xxzzzz = primBuffer.data(g11off + 168 * idx + 126);

                auto g11_yz_xyyyyy = primBuffer.data(g11off + 168 * idx + 127);

                auto g11_yz_xyyyyz = primBuffer.data(g11off + 168 * idx + 128);

                auto g11_yz_xyyyzz = primBuffer.data(g11off + 168 * idx + 129);

                auto g11_yz_xyyzzz = primBuffer.data(g11off + 168 * idx + 130);

                auto g11_yz_xyzzzz = primBuffer.data(g11off + 168 * idx + 131);

                auto g11_yz_xzzzzz = primBuffer.data(g11off + 168 * idx + 132);

                auto g11_yz_yyyyyy = primBuffer.data(g11off + 168 * idx + 133);

                auto g11_yz_yyyyyz = primBuffer.data(g11off + 168 * idx + 134);

                auto g11_yz_yyyyzz = primBuffer.data(g11off + 168 * idx + 135);

                auto g11_yz_yyyzzz = primBuffer.data(g11off + 168 * idx + 136);

                auto g11_yz_yyzzzz = primBuffer.data(g11off + 168 * idx + 137);

                auto g11_yz_yzzzzz = primBuffer.data(g11off + 168 * idx + 138);

                auto g11_yz_zzzzzz = primBuffer.data(g11off + 168 * idx + 139);

                auto g11_zz_xxxxxx = primBuffer.data(g11off + 168 * idx + 140);

                auto g11_zz_xxxxxy = primBuffer.data(g11off + 168 * idx + 141);

                auto g11_zz_xxxxxz = primBuffer.data(g11off + 168 * idx + 142);

                auto g11_zz_xxxxyy = primBuffer.data(g11off + 168 * idx + 143);

                auto g11_zz_xxxxyz = primBuffer.data(g11off + 168 * idx + 144);

                auto g11_zz_xxxxzz = primBuffer.data(g11off + 168 * idx + 145);

                auto g11_zz_xxxyyy = primBuffer.data(g11off + 168 * idx + 146);

                auto g11_zz_xxxyyz = primBuffer.data(g11off + 168 * idx + 147);

                auto g11_zz_xxxyzz = primBuffer.data(g11off + 168 * idx + 148);

                auto g11_zz_xxxzzz = primBuffer.data(g11off + 168 * idx + 149);

                auto g11_zz_xxyyyy = primBuffer.data(g11off + 168 * idx + 150);

                auto g11_zz_xxyyyz = primBuffer.data(g11off + 168 * idx + 151);

                auto g11_zz_xxyyzz = primBuffer.data(g11off + 168 * idx + 152);

                auto g11_zz_xxyzzz = primBuffer.data(g11off + 168 * idx + 153);

                auto g11_zz_xxzzzz = primBuffer.data(g11off + 168 * idx + 154);

                auto g11_zz_xyyyyy = primBuffer.data(g11off + 168 * idx + 155);

                auto g11_zz_xyyyyz = primBuffer.data(g11off + 168 * idx + 156);

                auto g11_zz_xyyyzz = primBuffer.data(g11off + 168 * idx + 157);

                auto g11_zz_xyyzzz = primBuffer.data(g11off + 168 * idx + 158);

                auto g11_zz_xyzzzz = primBuffer.data(g11off + 168 * idx + 159);

                auto g11_zz_xzzzzz = primBuffer.data(g11off + 168 * idx + 160);

                auto g11_zz_yyyyyy = primBuffer.data(g11off + 168 * idx + 161);

                auto g11_zz_yyyyyz = primBuffer.data(g11off + 168 * idx + 162);

                auto g11_zz_yyyyzz = primBuffer.data(g11off + 168 * idx + 163);

                auto g11_zz_yyyzzz = primBuffer.data(g11off + 168 * idx + 164);

                auto g11_zz_yyzzzz = primBuffer.data(g11off + 168 * idx + 165);

                auto g11_zz_yzzzzz = primBuffer.data(g11off + 168 * idx + 166);

                auto g11_zz_zzzzzz = primBuffer.data(g11off + 168 * idx + 167);

                // set up pointers to (F|g(r,r')|SI)^(m) integrals

                auto g_xxx_xxxxxx = primBuffer.data(goff + 280 * idx);

                auto g_xxx_xxxxxy = primBuffer.data(goff + 280 * idx + 1);

                auto g_xxx_xxxxxz = primBuffer.data(goff + 280 * idx + 2);

                auto g_xxx_xxxxyy = primBuffer.data(goff + 280 * idx + 3);

                auto g_xxx_xxxxyz = primBuffer.data(goff + 280 * idx + 4);

                auto g_xxx_xxxxzz = primBuffer.data(goff + 280 * idx + 5);

                auto g_xxx_xxxyyy = primBuffer.data(goff + 280 * idx + 6);

                auto g_xxx_xxxyyz = primBuffer.data(goff + 280 * idx + 7);

                auto g_xxx_xxxyzz = primBuffer.data(goff + 280 * idx + 8);

                auto g_xxx_xxxzzz = primBuffer.data(goff + 280 * idx + 9);

                auto g_xxx_xxyyyy = primBuffer.data(goff + 280 * idx + 10);

                auto g_xxx_xxyyyz = primBuffer.data(goff + 280 * idx + 11);

                auto g_xxx_xxyyzz = primBuffer.data(goff + 280 * idx + 12);

                auto g_xxx_xxyzzz = primBuffer.data(goff + 280 * idx + 13);

                auto g_xxx_xxzzzz = primBuffer.data(goff + 280 * idx + 14);

                auto g_xxx_xyyyyy = primBuffer.data(goff + 280 * idx + 15);

                auto g_xxx_xyyyyz = primBuffer.data(goff + 280 * idx + 16);

                auto g_xxx_xyyyzz = primBuffer.data(goff + 280 * idx + 17);

                auto g_xxx_xyyzzz = primBuffer.data(goff + 280 * idx + 18);

                auto g_xxx_xyzzzz = primBuffer.data(goff + 280 * idx + 19);

                auto g_xxx_xzzzzz = primBuffer.data(goff + 280 * idx + 20);

                auto g_xxx_yyyyyy = primBuffer.data(goff + 280 * idx + 21);

                auto g_xxx_yyyyyz = primBuffer.data(goff + 280 * idx + 22);

                auto g_xxx_yyyyzz = primBuffer.data(goff + 280 * idx + 23);

                auto g_xxx_yyyzzz = primBuffer.data(goff + 280 * idx + 24);

                auto g_xxx_yyzzzz = primBuffer.data(goff + 280 * idx + 25);

                auto g_xxx_yzzzzz = primBuffer.data(goff + 280 * idx + 26);

                auto g_xxx_zzzzzz = primBuffer.data(goff + 280 * idx + 27);

                auto g_xxy_xxxxxx = primBuffer.data(goff + 280 * idx + 28);

                auto g_xxy_xxxxxy = primBuffer.data(goff + 280 * idx + 29);

                auto g_xxy_xxxxxz = primBuffer.data(goff + 280 * idx + 30);

                auto g_xxy_xxxxyy = primBuffer.data(goff + 280 * idx + 31);

                auto g_xxy_xxxxyz = primBuffer.data(goff + 280 * idx + 32);

                auto g_xxy_xxxxzz = primBuffer.data(goff + 280 * idx + 33);

                auto g_xxy_xxxyyy = primBuffer.data(goff + 280 * idx + 34);

                auto g_xxy_xxxyyz = primBuffer.data(goff + 280 * idx + 35);

                auto g_xxy_xxxyzz = primBuffer.data(goff + 280 * idx + 36);

                auto g_xxy_xxxzzz = primBuffer.data(goff + 280 * idx + 37);

                auto g_xxy_xxyyyy = primBuffer.data(goff + 280 * idx + 38);

                auto g_xxy_xxyyyz = primBuffer.data(goff + 280 * idx + 39);

                auto g_xxy_xxyyzz = primBuffer.data(goff + 280 * idx + 40);

                auto g_xxy_xxyzzz = primBuffer.data(goff + 280 * idx + 41);

                auto g_xxy_xxzzzz = primBuffer.data(goff + 280 * idx + 42);

                auto g_xxy_xyyyyy = primBuffer.data(goff + 280 * idx + 43);

                auto g_xxy_xyyyyz = primBuffer.data(goff + 280 * idx + 44);

                auto g_xxy_xyyyzz = primBuffer.data(goff + 280 * idx + 45);

                auto g_xxy_xyyzzz = primBuffer.data(goff + 280 * idx + 46);

                auto g_xxy_xyzzzz = primBuffer.data(goff + 280 * idx + 47);

                auto g_xxy_xzzzzz = primBuffer.data(goff + 280 * idx + 48);

                auto g_xxy_yyyyyy = primBuffer.data(goff + 280 * idx + 49);

                auto g_xxy_yyyyyz = primBuffer.data(goff + 280 * idx + 50);

                auto g_xxy_yyyyzz = primBuffer.data(goff + 280 * idx + 51);

                auto g_xxy_yyyzzz = primBuffer.data(goff + 280 * idx + 52);

                auto g_xxy_yyzzzz = primBuffer.data(goff + 280 * idx + 53);

                auto g_xxy_yzzzzz = primBuffer.data(goff + 280 * idx + 54);

                auto g_xxy_zzzzzz = primBuffer.data(goff + 280 * idx + 55);

                auto g_xxz_xxxxxx = primBuffer.data(goff + 280 * idx + 56);

                auto g_xxz_xxxxxy = primBuffer.data(goff + 280 * idx + 57);

                auto g_xxz_xxxxxz = primBuffer.data(goff + 280 * idx + 58);

                auto g_xxz_xxxxyy = primBuffer.data(goff + 280 * idx + 59);

                auto g_xxz_xxxxyz = primBuffer.data(goff + 280 * idx + 60);

                auto g_xxz_xxxxzz = primBuffer.data(goff + 280 * idx + 61);

                auto g_xxz_xxxyyy = primBuffer.data(goff + 280 * idx + 62);

                auto g_xxz_xxxyyz = primBuffer.data(goff + 280 * idx + 63);

                auto g_xxz_xxxyzz = primBuffer.data(goff + 280 * idx + 64);

                auto g_xxz_xxxzzz = primBuffer.data(goff + 280 * idx + 65);

                auto g_xxz_xxyyyy = primBuffer.data(goff + 280 * idx + 66);

                auto g_xxz_xxyyyz = primBuffer.data(goff + 280 * idx + 67);

                auto g_xxz_xxyyzz = primBuffer.data(goff + 280 * idx + 68);

                auto g_xxz_xxyzzz = primBuffer.data(goff + 280 * idx + 69);

                auto g_xxz_xxzzzz = primBuffer.data(goff + 280 * idx + 70);

                auto g_xxz_xyyyyy = primBuffer.data(goff + 280 * idx + 71);

                auto g_xxz_xyyyyz = primBuffer.data(goff + 280 * idx + 72);

                auto g_xxz_xyyyzz = primBuffer.data(goff + 280 * idx + 73);

                auto g_xxz_xyyzzz = primBuffer.data(goff + 280 * idx + 74);

                auto g_xxz_xyzzzz = primBuffer.data(goff + 280 * idx + 75);

                auto g_xxz_xzzzzz = primBuffer.data(goff + 280 * idx + 76);

                auto g_xxz_yyyyyy = primBuffer.data(goff + 280 * idx + 77);

                auto g_xxz_yyyyyz = primBuffer.data(goff + 280 * idx + 78);

                auto g_xxz_yyyyzz = primBuffer.data(goff + 280 * idx + 79);

                auto g_xxz_yyyzzz = primBuffer.data(goff + 280 * idx + 80);

                auto g_xxz_yyzzzz = primBuffer.data(goff + 280 * idx + 81);

                auto g_xxz_yzzzzz = primBuffer.data(goff + 280 * idx + 82);

                auto g_xxz_zzzzzz = primBuffer.data(goff + 280 * idx + 83);

                auto g_xyy_xxxxxx = primBuffer.data(goff + 280 * idx + 84);

                auto g_xyy_xxxxxy = primBuffer.data(goff + 280 * idx + 85);

                auto g_xyy_xxxxxz = primBuffer.data(goff + 280 * idx + 86);

                auto g_xyy_xxxxyy = primBuffer.data(goff + 280 * idx + 87);

                auto g_xyy_xxxxyz = primBuffer.data(goff + 280 * idx + 88);

                auto g_xyy_xxxxzz = primBuffer.data(goff + 280 * idx + 89);

                auto g_xyy_xxxyyy = primBuffer.data(goff + 280 * idx + 90);

                auto g_xyy_xxxyyz = primBuffer.data(goff + 280 * idx + 91);

                auto g_xyy_xxxyzz = primBuffer.data(goff + 280 * idx + 92);

                auto g_xyy_xxxzzz = primBuffer.data(goff + 280 * idx + 93);

                auto g_xyy_xxyyyy = primBuffer.data(goff + 280 * idx + 94);

                auto g_xyy_xxyyyz = primBuffer.data(goff + 280 * idx + 95);

                auto g_xyy_xxyyzz = primBuffer.data(goff + 280 * idx + 96);

                auto g_xyy_xxyzzz = primBuffer.data(goff + 280 * idx + 97);

                auto g_xyy_xxzzzz = primBuffer.data(goff + 280 * idx + 98);

                auto g_xyy_xyyyyy = primBuffer.data(goff + 280 * idx + 99);

                auto g_xyy_xyyyyz = primBuffer.data(goff + 280 * idx + 100);

                auto g_xyy_xyyyzz = primBuffer.data(goff + 280 * idx + 101);

                auto g_xyy_xyyzzz = primBuffer.data(goff + 280 * idx + 102);

                auto g_xyy_xyzzzz = primBuffer.data(goff + 280 * idx + 103);

                auto g_xyy_xzzzzz = primBuffer.data(goff + 280 * idx + 104);

                auto g_xyy_yyyyyy = primBuffer.data(goff + 280 * idx + 105);

                auto g_xyy_yyyyyz = primBuffer.data(goff + 280 * idx + 106);

                auto g_xyy_yyyyzz = primBuffer.data(goff + 280 * idx + 107);

                auto g_xyy_yyyzzz = primBuffer.data(goff + 280 * idx + 108);

                auto g_xyy_yyzzzz = primBuffer.data(goff + 280 * idx + 109);

                auto g_xyy_yzzzzz = primBuffer.data(goff + 280 * idx + 110);

                auto g_xyy_zzzzzz = primBuffer.data(goff + 280 * idx + 111);

                auto g_xyz_xxxxxx = primBuffer.data(goff + 280 * idx + 112);

                auto g_xyz_xxxxxy = primBuffer.data(goff + 280 * idx + 113);

                auto g_xyz_xxxxxz = primBuffer.data(goff + 280 * idx + 114);

                auto g_xyz_xxxxyy = primBuffer.data(goff + 280 * idx + 115);

                auto g_xyz_xxxxyz = primBuffer.data(goff + 280 * idx + 116);

                auto g_xyz_xxxxzz = primBuffer.data(goff + 280 * idx + 117);

                auto g_xyz_xxxyyy = primBuffer.data(goff + 280 * idx + 118);

                auto g_xyz_xxxyyz = primBuffer.data(goff + 280 * idx + 119);

                auto g_xyz_xxxyzz = primBuffer.data(goff + 280 * idx + 120);

                auto g_xyz_xxxzzz = primBuffer.data(goff + 280 * idx + 121);

                auto g_xyz_xxyyyy = primBuffer.data(goff + 280 * idx + 122);

                auto g_xyz_xxyyyz = primBuffer.data(goff + 280 * idx + 123);

                auto g_xyz_xxyyzz = primBuffer.data(goff + 280 * idx + 124);

                auto g_xyz_xxyzzz = primBuffer.data(goff + 280 * idx + 125);

                auto g_xyz_xxzzzz = primBuffer.data(goff + 280 * idx + 126);

                auto g_xyz_xyyyyy = primBuffer.data(goff + 280 * idx + 127);

                auto g_xyz_xyyyyz = primBuffer.data(goff + 280 * idx + 128);

                auto g_xyz_xyyyzz = primBuffer.data(goff + 280 * idx + 129);

                auto g_xyz_xyyzzz = primBuffer.data(goff + 280 * idx + 130);

                auto g_xyz_xyzzzz = primBuffer.data(goff + 280 * idx + 131);

                auto g_xyz_xzzzzz = primBuffer.data(goff + 280 * idx + 132);

                auto g_xyz_yyyyyy = primBuffer.data(goff + 280 * idx + 133);

                auto g_xyz_yyyyyz = primBuffer.data(goff + 280 * idx + 134);

                auto g_xyz_yyyyzz = primBuffer.data(goff + 280 * idx + 135);

                auto g_xyz_yyyzzz = primBuffer.data(goff + 280 * idx + 136);

                auto g_xyz_yyzzzz = primBuffer.data(goff + 280 * idx + 137);

                auto g_xyz_yzzzzz = primBuffer.data(goff + 280 * idx + 138);

                auto g_xyz_zzzzzz = primBuffer.data(goff + 280 * idx + 139);

                auto g_xzz_xxxxxx = primBuffer.data(goff + 280 * idx + 140);

                auto g_xzz_xxxxxy = primBuffer.data(goff + 280 * idx + 141);

                auto g_xzz_xxxxxz = primBuffer.data(goff + 280 * idx + 142);

                auto g_xzz_xxxxyy = primBuffer.data(goff + 280 * idx + 143);

                auto g_xzz_xxxxyz = primBuffer.data(goff + 280 * idx + 144);

                auto g_xzz_xxxxzz = primBuffer.data(goff + 280 * idx + 145);

                auto g_xzz_xxxyyy = primBuffer.data(goff + 280 * idx + 146);

                auto g_xzz_xxxyyz = primBuffer.data(goff + 280 * idx + 147);

                auto g_xzz_xxxyzz = primBuffer.data(goff + 280 * idx + 148);

                auto g_xzz_xxxzzz = primBuffer.data(goff + 280 * idx + 149);

                auto g_xzz_xxyyyy = primBuffer.data(goff + 280 * idx + 150);

                auto g_xzz_xxyyyz = primBuffer.data(goff + 280 * idx + 151);

                auto g_xzz_xxyyzz = primBuffer.data(goff + 280 * idx + 152);

                auto g_xzz_xxyzzz = primBuffer.data(goff + 280 * idx + 153);

                auto g_xzz_xxzzzz = primBuffer.data(goff + 280 * idx + 154);

                auto g_xzz_xyyyyy = primBuffer.data(goff + 280 * idx + 155);

                auto g_xzz_xyyyyz = primBuffer.data(goff + 280 * idx + 156);

                auto g_xzz_xyyyzz = primBuffer.data(goff + 280 * idx + 157);

                auto g_xzz_xyyzzz = primBuffer.data(goff + 280 * idx + 158);

                auto g_xzz_xyzzzz = primBuffer.data(goff + 280 * idx + 159);

                auto g_xzz_xzzzzz = primBuffer.data(goff + 280 * idx + 160);

                auto g_xzz_yyyyyy = primBuffer.data(goff + 280 * idx + 161);

                auto g_xzz_yyyyyz = primBuffer.data(goff + 280 * idx + 162);

                auto g_xzz_yyyyzz = primBuffer.data(goff + 280 * idx + 163);

                auto g_xzz_yyyzzz = primBuffer.data(goff + 280 * idx + 164);

                auto g_xzz_yyzzzz = primBuffer.data(goff + 280 * idx + 165);

                auto g_xzz_yzzzzz = primBuffer.data(goff + 280 * idx + 166);

                auto g_xzz_zzzzzz = primBuffer.data(goff + 280 * idx + 167);

                auto g_yyy_xxxxxx = primBuffer.data(goff + 280 * idx + 168);

                auto g_yyy_xxxxxy = primBuffer.data(goff + 280 * idx + 169);

                auto g_yyy_xxxxxz = primBuffer.data(goff + 280 * idx + 170);

                auto g_yyy_xxxxyy = primBuffer.data(goff + 280 * idx + 171);

                auto g_yyy_xxxxyz = primBuffer.data(goff + 280 * idx + 172);

                auto g_yyy_xxxxzz = primBuffer.data(goff + 280 * idx + 173);

                auto g_yyy_xxxyyy = primBuffer.data(goff + 280 * idx + 174);

                auto g_yyy_xxxyyz = primBuffer.data(goff + 280 * idx + 175);

                auto g_yyy_xxxyzz = primBuffer.data(goff + 280 * idx + 176);

                auto g_yyy_xxxzzz = primBuffer.data(goff + 280 * idx + 177);

                auto g_yyy_xxyyyy = primBuffer.data(goff + 280 * idx + 178);

                auto g_yyy_xxyyyz = primBuffer.data(goff + 280 * idx + 179);

                auto g_yyy_xxyyzz = primBuffer.data(goff + 280 * idx + 180);

                auto g_yyy_xxyzzz = primBuffer.data(goff + 280 * idx + 181);

                auto g_yyy_xxzzzz = primBuffer.data(goff + 280 * idx + 182);

                auto g_yyy_xyyyyy = primBuffer.data(goff + 280 * idx + 183);

                auto g_yyy_xyyyyz = primBuffer.data(goff + 280 * idx + 184);

                auto g_yyy_xyyyzz = primBuffer.data(goff + 280 * idx + 185);

                auto g_yyy_xyyzzz = primBuffer.data(goff + 280 * idx + 186);

                auto g_yyy_xyzzzz = primBuffer.data(goff + 280 * idx + 187);

                auto g_yyy_xzzzzz = primBuffer.data(goff + 280 * idx + 188);

                auto g_yyy_yyyyyy = primBuffer.data(goff + 280 * idx + 189);

                auto g_yyy_yyyyyz = primBuffer.data(goff + 280 * idx + 190);

                auto g_yyy_yyyyzz = primBuffer.data(goff + 280 * idx + 191);

                auto g_yyy_yyyzzz = primBuffer.data(goff + 280 * idx + 192);

                auto g_yyy_yyzzzz = primBuffer.data(goff + 280 * idx + 193);

                auto g_yyy_yzzzzz = primBuffer.data(goff + 280 * idx + 194);

                auto g_yyy_zzzzzz = primBuffer.data(goff + 280 * idx + 195);

                auto g_yyz_xxxxxx = primBuffer.data(goff + 280 * idx + 196);

                auto g_yyz_xxxxxy = primBuffer.data(goff + 280 * idx + 197);

                auto g_yyz_xxxxxz = primBuffer.data(goff + 280 * idx + 198);

                auto g_yyz_xxxxyy = primBuffer.data(goff + 280 * idx + 199);

                auto g_yyz_xxxxyz = primBuffer.data(goff + 280 * idx + 200);

                auto g_yyz_xxxxzz = primBuffer.data(goff + 280 * idx + 201);

                auto g_yyz_xxxyyy = primBuffer.data(goff + 280 * idx + 202);

                auto g_yyz_xxxyyz = primBuffer.data(goff + 280 * idx + 203);

                auto g_yyz_xxxyzz = primBuffer.data(goff + 280 * idx + 204);

                auto g_yyz_xxxzzz = primBuffer.data(goff + 280 * idx + 205);

                auto g_yyz_xxyyyy = primBuffer.data(goff + 280 * idx + 206);

                auto g_yyz_xxyyyz = primBuffer.data(goff + 280 * idx + 207);

                auto g_yyz_xxyyzz = primBuffer.data(goff + 280 * idx + 208);

                auto g_yyz_xxyzzz = primBuffer.data(goff + 280 * idx + 209);

                auto g_yyz_xxzzzz = primBuffer.data(goff + 280 * idx + 210);

                auto g_yyz_xyyyyy = primBuffer.data(goff + 280 * idx + 211);

                auto g_yyz_xyyyyz = primBuffer.data(goff + 280 * idx + 212);

                auto g_yyz_xyyyzz = primBuffer.data(goff + 280 * idx + 213);

                auto g_yyz_xyyzzz = primBuffer.data(goff + 280 * idx + 214);

                auto g_yyz_xyzzzz = primBuffer.data(goff + 280 * idx + 215);

                auto g_yyz_xzzzzz = primBuffer.data(goff + 280 * idx + 216);

                auto g_yyz_yyyyyy = primBuffer.data(goff + 280 * idx + 217);

                auto g_yyz_yyyyyz = primBuffer.data(goff + 280 * idx + 218);

                auto g_yyz_yyyyzz = primBuffer.data(goff + 280 * idx + 219);

                auto g_yyz_yyyzzz = primBuffer.data(goff + 280 * idx + 220);

                auto g_yyz_yyzzzz = primBuffer.data(goff + 280 * idx + 221);

                auto g_yyz_yzzzzz = primBuffer.data(goff + 280 * idx + 222);

                auto g_yyz_zzzzzz = primBuffer.data(goff + 280 * idx + 223);

                auto g_yzz_xxxxxx = primBuffer.data(goff + 280 * idx + 224);

                auto g_yzz_xxxxxy = primBuffer.data(goff + 280 * idx + 225);

                auto g_yzz_xxxxxz = primBuffer.data(goff + 280 * idx + 226);

                auto g_yzz_xxxxyy = primBuffer.data(goff + 280 * idx + 227);

                auto g_yzz_xxxxyz = primBuffer.data(goff + 280 * idx + 228);

                auto g_yzz_xxxxzz = primBuffer.data(goff + 280 * idx + 229);

                auto g_yzz_xxxyyy = primBuffer.data(goff + 280 * idx + 230);

                auto g_yzz_xxxyyz = primBuffer.data(goff + 280 * idx + 231);

                auto g_yzz_xxxyzz = primBuffer.data(goff + 280 * idx + 232);

                auto g_yzz_xxxzzz = primBuffer.data(goff + 280 * idx + 233);

                auto g_yzz_xxyyyy = primBuffer.data(goff + 280 * idx + 234);

                auto g_yzz_xxyyyz = primBuffer.data(goff + 280 * idx + 235);

                auto g_yzz_xxyyzz = primBuffer.data(goff + 280 * idx + 236);

                auto g_yzz_xxyzzz = primBuffer.data(goff + 280 * idx + 237);

                auto g_yzz_xxzzzz = primBuffer.data(goff + 280 * idx + 238);

                auto g_yzz_xyyyyy = primBuffer.data(goff + 280 * idx + 239);

                auto g_yzz_xyyyyz = primBuffer.data(goff + 280 * idx + 240);

                auto g_yzz_xyyyzz = primBuffer.data(goff + 280 * idx + 241);

                auto g_yzz_xyyzzz = primBuffer.data(goff + 280 * idx + 242);

                auto g_yzz_xyzzzz = primBuffer.data(goff + 280 * idx + 243);

                auto g_yzz_xzzzzz = primBuffer.data(goff + 280 * idx + 244);

                auto g_yzz_yyyyyy = primBuffer.data(goff + 280 * idx + 245);

                auto g_yzz_yyyyyz = primBuffer.data(goff + 280 * idx + 246);

                auto g_yzz_yyyyzz = primBuffer.data(goff + 280 * idx + 247);

                auto g_yzz_yyyzzz = primBuffer.data(goff + 280 * idx + 248);

                auto g_yzz_yyzzzz = primBuffer.data(goff + 280 * idx + 249);

                auto g_yzz_yzzzzz = primBuffer.data(goff + 280 * idx + 250);

                auto g_yzz_zzzzzz = primBuffer.data(goff + 280 * idx + 251);

                auto g_zzz_xxxxxx = primBuffer.data(goff + 280 * idx + 252);

                auto g_zzz_xxxxxy = primBuffer.data(goff + 280 * idx + 253);

                auto g_zzz_xxxxxz = primBuffer.data(goff + 280 * idx + 254);

                auto g_zzz_xxxxyy = primBuffer.data(goff + 280 * idx + 255);

                auto g_zzz_xxxxyz = primBuffer.data(goff + 280 * idx + 256);

                auto g_zzz_xxxxzz = primBuffer.data(goff + 280 * idx + 257);

                auto g_zzz_xxxyyy = primBuffer.data(goff + 280 * idx + 258);

                auto g_zzz_xxxyyz = primBuffer.data(goff + 280 * idx + 259);

                auto g_zzz_xxxyzz = primBuffer.data(goff + 280 * idx + 260);

                auto g_zzz_xxxzzz = primBuffer.data(goff + 280 * idx + 261);

                auto g_zzz_xxyyyy = primBuffer.data(goff + 280 * idx + 262);

                auto g_zzz_xxyyyz = primBuffer.data(goff + 280 * idx + 263);

                auto g_zzz_xxyyzz = primBuffer.data(goff + 280 * idx + 264);

                auto g_zzz_xxyzzz = primBuffer.data(goff + 280 * idx + 265);

                auto g_zzz_xxzzzz = primBuffer.data(goff + 280 * idx + 266);

                auto g_zzz_xyyyyy = primBuffer.data(goff + 280 * idx + 267);

                auto g_zzz_xyyyyz = primBuffer.data(goff + 280 * idx + 268);

                auto g_zzz_xyyyzz = primBuffer.data(goff + 280 * idx + 269);

                auto g_zzz_xyyzzz = primBuffer.data(goff + 280 * idx + 270);

                auto g_zzz_xyzzzz = primBuffer.data(goff + 280 * idx + 271);

                auto g_zzz_xzzzzz = primBuffer.data(goff + 280 * idx + 272);

                auto g_zzz_yyyyyy = primBuffer.data(goff + 280 * idx + 273);

                auto g_zzz_yyyyyz = primBuffer.data(goff + 280 * idx + 274);

                auto g_zzz_yyyyzz = primBuffer.data(goff + 280 * idx + 275);

                auto g_zzz_yyyzzz = primBuffer.data(goff + 280 * idx + 276);

                auto g_zzz_yyzzzz = primBuffer.data(goff + 280 * idx + 277);

                auto g_zzz_yzzzzz = primBuffer.data(goff + 280 * idx + 278);

                auto g_zzz_zzzzzz = primBuffer.data(goff + 280 * idx + 279);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xxxxx,\
                                         gk_xx_xxxxy, gk_xx_xxxxz, gk_xx_xxxyy,\
                                         gk_xx_xxxyz, gk_xx_xxxzz, gk_xx_xxyyy,\
                                         gk_xx_xxyyz, gk_xx_xxyzz, gk_xx_xxzzz,\
                                         gk_xx_xyyyy, gk_xx_xyyyz, gk_xx_xyyzz,\
                                         gk_xx_xyzzz, gk_xx_xzzzz, gk_xx_yyyyy,\
                                         gk_xx_yyyyz, gk_xx_yyyzz, gk_xx_yyzzz,\
                                         gk_xx_yzzzz, gk_xx_zzzzz, gk_xy_xxxxx,\
                                         gk_xy_xxxxy, gk_xy_xxxxz, gk_xy_xxxyy,\
                                         gk_xy_xxxyz, gk_xy_xxxzz, gk_xy_xxyyy,\
                                         gk_xy_xxyyz, gk_xy_xxyzz, gk_xy_xxzzz,\
                                         gk_xy_xyyyy, gk_xy_xyyyz, gk_xy_xyyzz,\
                                         gk_xy_xyzzz, gk_xy_xzzzz, gk_xy_yyyyy,\
                                         gk_xy_yyyyz, gk_xy_yyyzz, gk_xy_yyzzz,\
                                         gk_xy_yzzzz, gk_xy_zzzzz, gk_xz_xxxxx,\
                                         gk_xz_xxxxy, gk_xz_xxxxz, gk_xz_xxxyy,\
                                         gk_xz_xxxyz, gk_xz_xxxzz, gk_xz_xxyyy,\
                                         gk_xz_xxyyz, gk_xz_xxyzz, gk_xz_xxzzz,\
                                         gk_xz_xyyyy, gk_xz_xyyyz, gk_xz_xyyzz,\
                                         gk_xz_xyzzz, gk_xz_xzzzz, gk_xz_yyyyy,\
                                         gk_xz_yyyyz, gk_xz_yyyzz, gk_xz_yyzzz,\
                                         gk_xz_yzzzz, gk_xz_zzzzz, gk_yy_xxxxx,\
                                         gk_yy_xxxxy, gk_yy_xxxxz, gk_yy_xxxyy,\
                                         gk_yy_xxxyz, gk_yy_xxxzz, gk_yy_xxyyy,\
                                         gk_yy_xxyyz, gk_yy_xxyzz, gk_yy_xxzzz,\
                                         gk_yy_xyyyy, gk_yy_xyyyz, gk_yy_xyyzz,\
                                         gk_yy_xyzzz, gk_yy_xzzzz, gk_yy_yyyyy,\
                                         gk_yy_yyyyz, gk_yy_yyyzz, gk_yy_yyzzz,\
                                         gk_yy_yzzzz, gk_yy_zzzzz, gk_yz_xxxxx,\
                                         gk_yz_xxxxy, gk_yz_xxxxz, gk_yz_xxxyy,\
                                         gk_yz_xxxyz, gk_yz_xxxzz, gk_yz_xxyyy,\
                                         gk_yz_xxyyz, gk_yz_xxyzz, gk_yz_xxzzz,\
                                         gk_yz_xyyyy, gk_yz_xyyyz, gk_yz_xyyzz,\
                                         gk_yz_xyzzz, gk_yz_xzzzz, gk_yz_yyyyy,\
                                         gk_yz_yyyyz, gk_yz_yyyzz, gk_yz_yyzzz,\
                                         gk_yz_yzzzz, gk_yz_zzzzz, gk_zz_xxxxx,\
                                         gk_zz_xxxxy, gk_zz_xxxxz, gk_zz_xxxyy,\
                                         gk_zz_xxxyz, gk_zz_xxxzz, gk_zz_xxyyy,\
                                         gk_zz_xxyyz, gk_zz_xxyzz, gk_zz_xxzzz,\
                                         gk_zz_xyyyy, gk_zz_xyyyz, gk_zz_xyyzz,\
                                         gk_zz_xyzzz, gk_zz_xzzzz, gk_zz_yyyyy,\
                                         gk_zz_yyyyz, gk_zz_yyyzz, gk_zz_yyzzz,\
                                         gk_zz_yzzzz, gk_zz_zzzzz, g20_x_xxxxxx,\
                                         g20_x_xxxxxy, g20_x_xxxxxz, g20_x_xxxxyy,\
                                         g20_x_xxxxyz, g20_x_xxxxzz, g20_x_xxxyyy,\
                                         g20_x_xxxyyz, g20_x_xxxyzz, g20_x_xxxzzz,\
                                         g20_x_xxyyyy, g20_x_xxyyyz, g20_x_xxyyzz,\
                                         g20_x_xxyzzz, g20_x_xxzzzz, g20_x_xyyyyy,\
                                         g20_x_xyyyyz, g20_x_xyyyzz, g20_x_xyyzzz,\
                                         g20_x_xyzzzz, g20_x_xzzzzz, g20_x_yyyyyy,\
                                         g20_x_yyyyyz, g20_x_yyyyzz, g20_x_yyyzzz,\
                                         g20_x_yyzzzz, g20_x_yzzzzz, g20_x_zzzzzz,\
                                         g20_y_xxxxxx, g20_y_xxxxxy, g20_y_xxxxxz,\
                                         g20_y_xxxxyy, g20_y_xxxxyz, g20_y_xxxxzz,\
                                         g20_y_xxxyyy, g20_y_xxxyyz, g20_y_xxxyzz,\
                                         g20_y_xxxzzz, g20_y_xxyyyy, g20_y_xxyyyz,\
                                         g20_y_xxyyzz, g20_y_xxyzzz, g20_y_xxzzzz,\
                                         g20_y_xyyyyy, g20_y_xyyyyz, g20_y_xyyyzz,\
                                         g20_y_xyyzzz, g20_y_xyzzzz, g20_y_xzzzzz,\
                                         g20_y_yyyyyy, g20_y_yyyyyz, g20_y_yyyyzz,\
                                         g20_y_yyyzzz, g20_y_yyzzzz, g20_y_yzzzzz,\
                                         g20_y_zzzzzz, g20_z_xxxxxx, g20_z_xxxxxy,\
                                         g20_z_xxxxxz, g20_z_xxxxyy, g20_z_xxxxyz,\
                                         g20_z_xxxxzz, g20_z_xxxyyy, g20_z_xxxyyz,\
                                         g20_z_xxxyzz, g20_z_xxxzzz, g20_z_xxyyyy,\
                                         g20_z_xxyyyz, g20_z_xxyyzz, g20_z_xxyzzz,\
                                         g20_z_xxzzzz, g20_z_xyyyyy, g20_z_xyyyyz,\
                                         g20_z_xyyyzz, g20_z_xyyzzz, g20_z_xyzzzz,\
                                         g20_z_xzzzzz, g20_z_yyyyyy, g20_z_yyyyyz,\
                                         g20_z_yyyyzz, g20_z_yyyzzz, g20_z_yyzzzz,\
                                         g20_z_yzzzzz, g20_z_zzzzzz, g21_x_xxxxxx,\
                                         g21_x_xxxxxy, g21_x_xxxxxz, g21_x_xxxxyy,\
                                         g21_x_xxxxyz, g21_x_xxxxzz, g21_x_xxxyyy,\
                                         g21_x_xxxyyz, g21_x_xxxyzz, g21_x_xxxzzz,\
                                         g21_x_xxyyyy, g21_x_xxyyyz, g21_x_xxyyzz,\
                                         g21_x_xxyzzz, g21_x_xxzzzz, g21_x_xyyyyy,\
                                         g21_x_xyyyyz, g21_x_xyyyzz, g21_x_xyyzzz,\
                                         g21_x_xyzzzz, g21_x_xzzzzz, g21_x_yyyyyy,\
                                         g21_x_yyyyyz, g21_x_yyyyzz, g21_x_yyyzzz,\
                                         g21_x_yyzzzz, g21_x_yzzzzz, g21_x_zzzzzz,\
                                         g21_y_xxxxxx, g21_y_xxxxxy, g21_y_xxxxxz,\
                                         g21_y_xxxxyy, g21_y_xxxxyz, g21_y_xxxxzz,\
                                         g21_y_xxxyyy, g21_y_xxxyyz, g21_y_xxxyzz,\
                                         g21_y_xxxzzz, g21_y_xxyyyy, g21_y_xxyyyz,\
                                         g21_y_xxyyzz, g21_y_xxyzzz, g21_y_xxzzzz,\
                                         g21_y_xyyyyy, g21_y_xyyyyz, g21_y_xyyyzz,\
                                         g21_y_xyyzzz, g21_y_xyzzzz, g21_y_xzzzzz,\
                                         g21_y_yyyyyy, g21_y_yyyyyz, g21_y_yyyyzz,\
                                         g21_y_yyyzzz, g21_y_yyzzzz, g21_y_yzzzzz,\
                                         g21_y_zzzzzz, g21_z_xxxxxx, g21_z_xxxxxy,\
                                         g21_z_xxxxxz, g21_z_xxxxyy, g21_z_xxxxyz,\
                                         g21_z_xxxxzz, g21_z_xxxyyy, g21_z_xxxyyz,\
                                         g21_z_xxxyzz, g21_z_xxxzzz, g21_z_xxyyyy,\
                                         g21_z_xxyyyz, g21_z_xxyyzz, g21_z_xxyzzz,\
                                         g21_z_xxzzzz, g21_z_xyyyyy, g21_z_xyyyyz,\
                                         g21_z_xyyyzz, g21_z_xyyzzz, g21_z_xyzzzz,\
                                         g21_z_xzzzzz, g21_z_yyyyyy, g21_z_yyyyyz,\
                                         g21_z_yyyyzz, g21_z_yyyzzz, g21_z_yyzzzz,\
                                         g21_z_yzzzzz, g21_z_zzzzzz, g11_xx_xxxxxx,\
                                         g11_xx_xxxxxy, g11_xx_xxxxxz, g11_xx_xxxxyy,\
                                         g11_xx_xxxxyz, g11_xx_xxxxzz, g11_xx_xxxyyy,\
                                         g11_xx_xxxyyz, g11_xx_xxxyzz, g11_xx_xxxzzz,\
                                         g11_xx_xxyyyy, g11_xx_xxyyyz, g11_xx_xxyyzz,\
                                         g11_xx_xxyzzz, g11_xx_xxzzzz, g11_xx_xyyyyy,\
                                         g11_xx_xyyyyz, g11_xx_xyyyzz, g11_xx_xyyzzz,\
                                         g11_xx_xyzzzz, g11_xx_xzzzzz, g11_xx_yyyyyy,\
                                         g11_xx_yyyyyz, g11_xx_yyyyzz, g11_xx_yyyzzz,\
                                         g11_xx_yyzzzz, g11_xx_yzzzzz, g11_xx_zzzzzz,\
                                         g11_xy_xxxxxx, g11_xy_xxxxxy, g11_xy_xxxxxz,\
                                         g11_xy_xxxxyy, g11_xy_xxxxyz, g11_xy_xxxxzz,\
                                         g11_xy_xxxyyy, g11_xy_xxxyyz, g11_xy_xxxyzz,\
                                         g11_xy_xxxzzz, g11_xy_xxyyyy, g11_xy_xxyyyz,\
                                         g11_xy_xxyyzz, g11_xy_xxyzzz, g11_xy_xxzzzz,\
                                         g11_xy_xyyyyy, g11_xy_xyyyyz, g11_xy_xyyyzz,\
                                         g11_xy_xyyzzz, g11_xy_xyzzzz, g11_xy_xzzzzz,\
                                         g11_xy_yyyyyy, g11_xy_yyyyyz, g11_xy_yyyyzz,\
                                         g11_xy_yyyzzz, g11_xy_yyzzzz, g11_xy_yzzzzz,\
                                         g11_xy_zzzzzz, g11_xz_xxxxxx, g11_xz_xxxxxy,\
                                         g11_xz_xxxxxz, g11_xz_xxxxyy, g11_xz_xxxxyz,\
                                         g11_xz_xxxxzz, g11_xz_xxxyyy, g11_xz_xxxyyz,\
                                         g11_xz_xxxyzz, g11_xz_xxxzzz, g11_xz_xxyyyy,\
                                         g11_xz_xxyyyz, g11_xz_xxyyzz, g11_xz_xxyzzz,\
                                         g11_xz_xxzzzz, g11_xz_xyyyyy, g11_xz_xyyyyz,\
                                         g11_xz_xyyyzz, g11_xz_xyyzzz, g11_xz_xyzzzz,\
                                         g11_xz_xzzzzz, g11_xz_yyyyyy, g11_xz_yyyyyz,\
                                         g11_xz_yyyyzz, g11_xz_yyyzzz, g11_xz_yyzzzz,\
                                         g11_xz_yzzzzz, g11_xz_zzzzzz, g11_yy_xxxxxx,\
                                         g11_yy_xxxxxy, g11_yy_xxxxxz, g11_yy_xxxxyy,\
                                         g11_yy_xxxxyz, g11_yy_xxxxzz, g11_yy_xxxyyy,\
                                         g11_yy_xxxyyz, g11_yy_xxxyzz, g11_yy_xxxzzz,\
                                         g11_yy_xxyyyy, g11_yy_xxyyyz, g11_yy_xxyyzz,\
                                         g11_yy_xxyzzz, g11_yy_xxzzzz, g11_yy_xyyyyy,\
                                         g11_yy_xyyyyz, g11_yy_xyyyzz, g11_yy_xyyzzz,\
                                         g11_yy_xyzzzz, g11_yy_xzzzzz, g11_yy_yyyyyy,\
                                         g11_yy_yyyyyz, g11_yy_yyyyzz, g11_yy_yyyzzz,\
                                         g11_yy_yyzzzz, g11_yy_yzzzzz, g11_yy_zzzzzz,\
                                         g11_yz_xxxxxx, g11_yz_xxxxxy, g11_yz_xxxxxz,\
                                         g11_yz_xxxxyy, g11_yz_xxxxyz, g11_yz_xxxxzz,\
                                         g11_yz_xxxyyy, g11_yz_xxxyyz, g11_yz_xxxyzz,\
                                         g11_yz_xxxzzz, g11_yz_xxyyyy, g11_yz_xxyyyz,\
                                         g11_yz_xxyyzz, g11_yz_xxyzzz, g11_yz_xxzzzz,\
                                         g11_yz_xyyyyy, g11_yz_xyyyyz, g11_yz_xyyyzz,\
                                         g11_yz_xyyzzz, g11_yz_xyzzzz, g11_yz_xzzzzz,\
                                         g11_yz_yyyyyy, g11_yz_yyyyyz, g11_yz_yyyyzz,\
                                         g11_yz_yyyzzz, g11_yz_yyzzzz, g11_yz_yzzzzz,\
                                         g11_yz_zzzzzz, g11_zz_xxxxxx, g11_zz_xxxxxy,\
                                         g11_zz_xxxxxz, g11_zz_xxxxyy, g11_zz_xxxxyz,\
                                         g11_zz_xxxxzz, g11_zz_xxxyyy, g11_zz_xxxyyz,\
                                         g11_zz_xxxyzz, g11_zz_xxxzzz, g11_zz_xxyyyy,\
                                         g11_zz_xxyyyz, g11_zz_xxyyzz, g11_zz_xxyzzz,\
                                         g11_zz_xxzzzz, g11_zz_xyyyyy, g11_zz_xyyyyz,\
                                         g11_zz_xyyyzz, g11_zz_xyyzzz, g11_zz_xyzzzz,\
                                         g11_zz_xzzzzz, g11_zz_yyyyyy, g11_zz_yyyyyz,\
                                         g11_zz_yyyyzz, g11_zz_yyyzzz, g11_zz_yyzzzz,\
                                         g11_zz_yzzzzz, g11_zz_zzzzzz, g_xxx_xxxxxx,\
                                         g_xxx_xxxxxy, g_xxx_xxxxxz, g_xxx_xxxxyy,\
                                         g_xxx_xxxxyz, g_xxx_xxxxzz, g_xxx_xxxyyy,\
                                         g_xxx_xxxyyz, g_xxx_xxxyzz, g_xxx_xxxzzz,\
                                         g_xxx_xxyyyy, g_xxx_xxyyyz, g_xxx_xxyyzz,\
                                         g_xxx_xxyzzz, g_xxx_xxzzzz, g_xxx_xyyyyy,\
                                         g_xxx_xyyyyz, g_xxx_xyyyzz, g_xxx_xyyzzz,\
                                         g_xxx_xyzzzz, g_xxx_xzzzzz, g_xxx_yyyyyy,\
                                         g_xxx_yyyyyz, g_xxx_yyyyzz, g_xxx_yyyzzz,\
                                         g_xxx_yyzzzz, g_xxx_yzzzzz, g_xxx_zzzzzz,\
                                         g_xxy_xxxxxx, g_xxy_xxxxxy, g_xxy_xxxxxz,\
                                         g_xxy_xxxxyy, g_xxy_xxxxyz, g_xxy_xxxxzz,\
                                         g_xxy_xxxyyy, g_xxy_xxxyyz, g_xxy_xxxyzz,\
                                         g_xxy_xxxzzz, g_xxy_xxyyyy, g_xxy_xxyyyz,\
                                         g_xxy_xxyyzz, g_xxy_xxyzzz, g_xxy_xxzzzz,\
                                         g_xxy_xyyyyy, g_xxy_xyyyyz, g_xxy_xyyyzz,\
                                         g_xxy_xyyzzz, g_xxy_xyzzzz, g_xxy_xzzzzz,\
                                         g_xxy_yyyyyy, g_xxy_yyyyyz, g_xxy_yyyyzz,\
                                         g_xxy_yyyzzz, g_xxy_yyzzzz, g_xxy_yzzzzz,\
                                         g_xxy_zzzzzz, g_xxz_xxxxxx, g_xxz_xxxxxy,\
                                         g_xxz_xxxxxz, g_xxz_xxxxyy, g_xxz_xxxxyz,\
                                         g_xxz_xxxxzz, g_xxz_xxxyyy, g_xxz_xxxyyz,\
                                         g_xxz_xxxyzz, g_xxz_xxxzzz, g_xxz_xxyyyy,\
                                         g_xxz_xxyyyz, g_xxz_xxyyzz, g_xxz_xxyzzz,\
                                         g_xxz_xxzzzz, g_xxz_xyyyyy, g_xxz_xyyyyz,\
                                         g_xxz_xyyyzz, g_xxz_xyyzzz, g_xxz_xyzzzz,\
                                         g_xxz_xzzzzz, g_xxz_yyyyyy, g_xxz_yyyyyz,\
                                         g_xxz_yyyyzz, g_xxz_yyyzzz, g_xxz_yyzzzz,\
                                         g_xxz_yzzzzz, g_xxz_zzzzzz, g_xyy_xxxxxx,\
                                         g_xyy_xxxxxy, g_xyy_xxxxxz, g_xyy_xxxxyy,\
                                         g_xyy_xxxxyz, g_xyy_xxxxzz, g_xyy_xxxyyy,\
                                         g_xyy_xxxyyz, g_xyy_xxxyzz, g_xyy_xxxzzz,\
                                         g_xyy_xxyyyy, g_xyy_xxyyyz, g_xyy_xxyyzz,\
                                         g_xyy_xxyzzz, g_xyy_xxzzzz, g_xyy_xyyyyy,\
                                         g_xyy_xyyyyz, g_xyy_xyyyzz, g_xyy_xyyzzz,\
                                         g_xyy_xyzzzz, g_xyy_xzzzzz, g_xyy_yyyyyy,\
                                         g_xyy_yyyyyz, g_xyy_yyyyzz, g_xyy_yyyzzz,\
                                         g_xyy_yyzzzz, g_xyy_yzzzzz, g_xyy_zzzzzz,\
                                         g_xyz_xxxxxx, g_xyz_xxxxxy, g_xyz_xxxxxz,\
                                         g_xyz_xxxxyy, g_xyz_xxxxyz, g_xyz_xxxxzz,\
                                         g_xyz_xxxyyy, g_xyz_xxxyyz, g_xyz_xxxyzz,\
                                         g_xyz_xxxzzz, g_xyz_xxyyyy, g_xyz_xxyyyz,\
                                         g_xyz_xxyyzz, g_xyz_xxyzzz, g_xyz_xxzzzz,\
                                         g_xyz_xyyyyy, g_xyz_xyyyyz, g_xyz_xyyyzz,\
                                         g_xyz_xyyzzz, g_xyz_xyzzzz, g_xyz_xzzzzz,\
                                         g_xyz_yyyyyy, g_xyz_yyyyyz, g_xyz_yyyyzz,\
                                         g_xyz_yyyzzz, g_xyz_yyzzzz, g_xyz_yzzzzz,\
                                         g_xyz_zzzzzz, g_xzz_xxxxxx, g_xzz_xxxxxy,\
                                         g_xzz_xxxxxz, g_xzz_xxxxyy, g_xzz_xxxxyz,\
                                         g_xzz_xxxxzz, g_xzz_xxxyyy, g_xzz_xxxyyz,\
                                         g_xzz_xxxyzz, g_xzz_xxxzzz, g_xzz_xxyyyy,\
                                         g_xzz_xxyyyz, g_xzz_xxyyzz, g_xzz_xxyzzz,\
                                         g_xzz_xxzzzz, g_xzz_xyyyyy, g_xzz_xyyyyz,\
                                         g_xzz_xyyyzz, g_xzz_xyyzzz, g_xzz_xyzzzz,\
                                         g_xzz_xzzzzz, g_xzz_yyyyyy, g_xzz_yyyyyz,\
                                         g_xzz_yyyyzz, g_xzz_yyyzzz, g_xzz_yyzzzz,\
                                         g_xzz_yzzzzz, g_xzz_zzzzzz, g_yyy_xxxxxx,\
                                         g_yyy_xxxxxy, g_yyy_xxxxxz, g_yyy_xxxxyy,\
                                         g_yyy_xxxxyz, g_yyy_xxxxzz, g_yyy_xxxyyy,\
                                         g_yyy_xxxyyz, g_yyy_xxxyzz, g_yyy_xxxzzz,\
                                         g_yyy_xxyyyy, g_yyy_xxyyyz, g_yyy_xxyyzz,\
                                         g_yyy_xxyzzz, g_yyy_xxzzzz, g_yyy_xyyyyy,\
                                         g_yyy_xyyyyz, g_yyy_xyyyzz, g_yyy_xyyzzz,\
                                         g_yyy_xyzzzz, g_yyy_xzzzzz, g_yyy_yyyyyy,\
                                         g_yyy_yyyyyz, g_yyy_yyyyzz, g_yyy_yyyzzz,\
                                         g_yyy_yyzzzz, g_yyy_yzzzzz, g_yyy_zzzzzz,\
                                         g_yyz_xxxxxx, g_yyz_xxxxxy, g_yyz_xxxxxz,\
                                         g_yyz_xxxxyy, g_yyz_xxxxyz, g_yyz_xxxxzz,\
                                         g_yyz_xxxyyy, g_yyz_xxxyyz, g_yyz_xxxyzz,\
                                         g_yyz_xxxzzz, g_yyz_xxyyyy, g_yyz_xxyyyz,\
                                         g_yyz_xxyyzz, g_yyz_xxyzzz, g_yyz_xxzzzz,\
                                         g_yyz_xyyyyy, g_yyz_xyyyyz, g_yyz_xyyyzz,\
                                         g_yyz_xyyzzz, g_yyz_xyzzzz, g_yyz_xzzzzz,\
                                         g_yyz_yyyyyy, g_yyz_yyyyyz, g_yyz_yyyyzz,\
                                         g_yyz_yyyzzz, g_yyz_yyzzzz, g_yyz_yzzzzz,\
                                         g_yyz_zzzzzz, g_yzz_xxxxxx, g_yzz_xxxxxy,\
                                         g_yzz_xxxxxz, g_yzz_xxxxyy, g_yzz_xxxxyz,\
                                         g_yzz_xxxxzz, g_yzz_xxxyyy, g_yzz_xxxyyz,\
                                         g_yzz_xxxyzz, g_yzz_xxxzzz, g_yzz_xxyyyy,\
                                         g_yzz_xxyyyz, g_yzz_xxyyzz, g_yzz_xxyzzz,\
                                         g_yzz_xxzzzz, g_yzz_xyyyyy, g_yzz_xyyyyz,\
                                         g_yzz_xyyyzz, g_yzz_xyyzzz, g_yzz_xyzzzz,\
                                         g_yzz_xzzzzz, g_yzz_yyyyyy, g_yzz_yyyyyz,\
                                         g_yzz_yyyyzz, g_yzz_yyyzzz, g_yzz_yyzzzz,\
                                         g_yzz_yzzzzz, g_yzz_zzzzzz, g_zzz_xxxxxx,\
                                         g_zzz_xxxxxy, g_zzz_xxxxxz, g_zzz_xxxxyy,\
                                         g_zzz_xxxxyz, g_zzz_xxxxzz, g_zzz_xxxyyy,\
                                         g_zzz_xxxyyz, g_zzz_xxxyzz, g_zzz_xxxzzz,\
                                         g_zzz_xxyyyy, g_zzz_xxyyyz, g_zzz_xxyyzz,\
                                         g_zzz_xxyzzz, g_zzz_xxzzzz, g_zzz_xyyyyy,\
                                         g_zzz_xyyyyz, g_zzz_xyyyzz, g_zzz_xyyzzz,\
                                         g_zzz_xyzzzz, g_zzz_xzzzzz, g_zzz_yyyyyy,\
                                         g_zzz_yyyyyz, g_zzz_yyyyzz, g_zzz_yyyzzz,\
                                         g_zzz_yyzzzz, g_zzz_yzzzzz, g_zzz_zzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxxxxx[k] = fr * g11_xx_xxxxxx[k] + f2g * (2.0 * g20_x_xxxxxx[k] - 2.0 * fgz * g21_x_xxxxxx[k]) + 6.0 * f2t * gk_xx_xxxxx[k];

                    g_xxx_xxxxxy[k] = fr * g11_xx_xxxxxy[k] + f2g * (2.0 * g20_x_xxxxxy[k] - 2.0 * fgz * g21_x_xxxxxy[k]) + 5.0 * f2t * gk_xx_xxxxy[k];

                    g_xxx_xxxxxz[k] = fr * g11_xx_xxxxxz[k] + f2g * (2.0 * g20_x_xxxxxz[k] - 2.0 * fgz * g21_x_xxxxxz[k]) + 5.0 * f2t * gk_xx_xxxxz[k];

                    g_xxx_xxxxyy[k] = fr * g11_xx_xxxxyy[k] + f2g * (2.0 * g20_x_xxxxyy[k] - 2.0 * fgz * g21_x_xxxxyy[k]) + 4.0 * f2t * gk_xx_xxxyy[k];

                    g_xxx_xxxxyz[k] = fr * g11_xx_xxxxyz[k] + f2g * (2.0 * g20_x_xxxxyz[k] - 2.0 * fgz * g21_x_xxxxyz[k]) + 4.0 * f2t * gk_xx_xxxyz[k];

                    g_xxx_xxxxzz[k] = fr * g11_xx_xxxxzz[k] + f2g * (2.0 * g20_x_xxxxzz[k] - 2.0 * fgz * g21_x_xxxxzz[k]) + 4.0 * f2t * gk_xx_xxxzz[k];

                    g_xxx_xxxyyy[k] = fr * g11_xx_xxxyyy[k] + f2g * (2.0 * g20_x_xxxyyy[k] - 2.0 * fgz * g21_x_xxxyyy[k]) + 3.0 * f2t * gk_xx_xxyyy[k];

                    g_xxx_xxxyyz[k] = fr * g11_xx_xxxyyz[k] + f2g * (2.0 * g20_x_xxxyyz[k] - 2.0 * fgz * g21_x_xxxyyz[k]) + 3.0 * f2t * gk_xx_xxyyz[k];

                    g_xxx_xxxyzz[k] = fr * g11_xx_xxxyzz[k] + f2g * (2.0 * g20_x_xxxyzz[k] - 2.0 * fgz * g21_x_xxxyzz[k]) + 3.0 * f2t * gk_xx_xxyzz[k];

                    g_xxx_xxxzzz[k] = fr * g11_xx_xxxzzz[k] + f2g * (2.0 * g20_x_xxxzzz[k] - 2.0 * fgz * g21_x_xxxzzz[k]) + 3.0 * f2t * gk_xx_xxzzz[k];

                    g_xxx_xxyyyy[k] = fr * g11_xx_xxyyyy[k] + f2g * (2.0 * g20_x_xxyyyy[k] - 2.0 * fgz * g21_x_xxyyyy[k]) + 2.0 * f2t * gk_xx_xyyyy[k];

                    g_xxx_xxyyyz[k] = fr * g11_xx_xxyyyz[k] + f2g * (2.0 * g20_x_xxyyyz[k] - 2.0 * fgz * g21_x_xxyyyz[k]) + 2.0 * f2t * gk_xx_xyyyz[k];

                    g_xxx_xxyyzz[k] = fr * g11_xx_xxyyzz[k] + f2g * (2.0 * g20_x_xxyyzz[k] - 2.0 * fgz * g21_x_xxyyzz[k]) + 2.0 * f2t * gk_xx_xyyzz[k];

                    g_xxx_xxyzzz[k] = fr * g11_xx_xxyzzz[k] + f2g * (2.0 * g20_x_xxyzzz[k] - 2.0 * fgz * g21_x_xxyzzz[k]) + 2.0 * f2t * gk_xx_xyzzz[k];

                    g_xxx_xxzzzz[k] = fr * g11_xx_xxzzzz[k] + f2g * (2.0 * g20_x_xxzzzz[k] - 2.0 * fgz * g21_x_xxzzzz[k]) + 2.0 * f2t * gk_xx_xzzzz[k];

                    g_xxx_xyyyyy[k] = fr * g11_xx_xyyyyy[k] + f2g * (2.0 * g20_x_xyyyyy[k] - 2.0 * fgz * g21_x_xyyyyy[k]) + f2t * gk_xx_yyyyy[k];

                    g_xxx_xyyyyz[k] = fr * g11_xx_xyyyyz[k] + f2g * (2.0 * g20_x_xyyyyz[k] - 2.0 * fgz * g21_x_xyyyyz[k]) + f2t * gk_xx_yyyyz[k];

                    g_xxx_xyyyzz[k] = fr * g11_xx_xyyyzz[k] + f2g * (2.0 * g20_x_xyyyzz[k] - 2.0 * fgz * g21_x_xyyyzz[k]) + f2t * gk_xx_yyyzz[k];

                    g_xxx_xyyzzz[k] = fr * g11_xx_xyyzzz[k] + f2g * (2.0 * g20_x_xyyzzz[k] - 2.0 * fgz * g21_x_xyyzzz[k]) + f2t * gk_xx_yyzzz[k];

                    g_xxx_xyzzzz[k] = fr * g11_xx_xyzzzz[k] + f2g * (2.0 * g20_x_xyzzzz[k] - 2.0 * fgz * g21_x_xyzzzz[k]) + f2t * gk_xx_yzzzz[k];

                    g_xxx_xzzzzz[k] = fr * g11_xx_xzzzzz[k] + f2g * (2.0 * g20_x_xzzzzz[k] - 2.0 * fgz * g21_x_xzzzzz[k]) + f2t * gk_xx_zzzzz[k];

                    g_xxx_yyyyyy[k] = fr * g11_xx_yyyyyy[k] + f2g * (2.0 * g20_x_yyyyyy[k] - 2.0 * fgz * g21_x_yyyyyy[k]);

                    g_xxx_yyyyyz[k] = fr * g11_xx_yyyyyz[k] + f2g * (2.0 * g20_x_yyyyyz[k] - 2.0 * fgz * g21_x_yyyyyz[k]);

                    g_xxx_yyyyzz[k] = fr * g11_xx_yyyyzz[k] + f2g * (2.0 * g20_x_yyyyzz[k] - 2.0 * fgz * g21_x_yyyyzz[k]);

                    g_xxx_yyyzzz[k] = fr * g11_xx_yyyzzz[k] + f2g * (2.0 * g20_x_yyyzzz[k] - 2.0 * fgz * g21_x_yyyzzz[k]);

                    g_xxx_yyzzzz[k] = fr * g11_xx_yyzzzz[k] + f2g * (2.0 * g20_x_yyzzzz[k] - 2.0 * fgz * g21_x_yyzzzz[k]);

                    g_xxx_yzzzzz[k] = fr * g11_xx_yzzzzz[k] + f2g * (2.0 * g20_x_yzzzzz[k] - 2.0 * fgz * g21_x_yzzzzz[k]);

                    g_xxx_zzzzzz[k] = fr * g11_xx_zzzzzz[k] + f2g * (2.0 * g20_x_zzzzzz[k] - 2.0 * fgz * g21_x_zzzzzz[k]);

                    g_xxy_xxxxxx[k] = fr * g11_xy_xxxxxx[k] + f2g * (g20_y_xxxxxx[k] - fgz * g21_y_xxxxxx[k]) + 6.0 * f2t * gk_xy_xxxxx[k];

                    g_xxy_xxxxxy[k] = fr * g11_xy_xxxxxy[k] + f2g * (g20_y_xxxxxy[k] - fgz * g21_y_xxxxxy[k]) + 5.0 * f2t * gk_xy_xxxxy[k];

                    g_xxy_xxxxxz[k] = fr * g11_xy_xxxxxz[k] + f2g * (g20_y_xxxxxz[k] - fgz * g21_y_xxxxxz[k]) + 5.0 * f2t * gk_xy_xxxxz[k];

                    g_xxy_xxxxyy[k] = fr * g11_xy_xxxxyy[k] + f2g * (g20_y_xxxxyy[k] - fgz * g21_y_xxxxyy[k]) + 4.0 * f2t * gk_xy_xxxyy[k];

                    g_xxy_xxxxyz[k] = fr * g11_xy_xxxxyz[k] + f2g * (g20_y_xxxxyz[k] - fgz * g21_y_xxxxyz[k]) + 4.0 * f2t * gk_xy_xxxyz[k];

                    g_xxy_xxxxzz[k] = fr * g11_xy_xxxxzz[k] + f2g * (g20_y_xxxxzz[k] - fgz * g21_y_xxxxzz[k]) + 4.0 * f2t * gk_xy_xxxzz[k];

                    g_xxy_xxxyyy[k] = fr * g11_xy_xxxyyy[k] + f2g * (g20_y_xxxyyy[k] - fgz * g21_y_xxxyyy[k]) + 3.0 * f2t * gk_xy_xxyyy[k];

                    g_xxy_xxxyyz[k] = fr * g11_xy_xxxyyz[k] + f2g * (g20_y_xxxyyz[k] - fgz * g21_y_xxxyyz[k]) + 3.0 * f2t * gk_xy_xxyyz[k];

                    g_xxy_xxxyzz[k] = fr * g11_xy_xxxyzz[k] + f2g * (g20_y_xxxyzz[k] - fgz * g21_y_xxxyzz[k]) + 3.0 * f2t * gk_xy_xxyzz[k];

                    g_xxy_xxxzzz[k] = fr * g11_xy_xxxzzz[k] + f2g * (g20_y_xxxzzz[k] - fgz * g21_y_xxxzzz[k]) + 3.0 * f2t * gk_xy_xxzzz[k];

                    g_xxy_xxyyyy[k] = fr * g11_xy_xxyyyy[k] + f2g * (g20_y_xxyyyy[k] - fgz * g21_y_xxyyyy[k]) + 2.0 * f2t * gk_xy_xyyyy[k];

                    g_xxy_xxyyyz[k] = fr * g11_xy_xxyyyz[k] + f2g * (g20_y_xxyyyz[k] - fgz * g21_y_xxyyyz[k]) + 2.0 * f2t * gk_xy_xyyyz[k];

                    g_xxy_xxyyzz[k] = fr * g11_xy_xxyyzz[k] + f2g * (g20_y_xxyyzz[k] - fgz * g21_y_xxyyzz[k]) + 2.0 * f2t * gk_xy_xyyzz[k];

                    g_xxy_xxyzzz[k] = fr * g11_xy_xxyzzz[k] + f2g * (g20_y_xxyzzz[k] - fgz * g21_y_xxyzzz[k]) + 2.0 * f2t * gk_xy_xyzzz[k];

                    g_xxy_xxzzzz[k] = fr * g11_xy_xxzzzz[k] + f2g * (g20_y_xxzzzz[k] - fgz * g21_y_xxzzzz[k]) + 2.0 * f2t * gk_xy_xzzzz[k];

                    g_xxy_xyyyyy[k] = fr * g11_xy_xyyyyy[k] + f2g * (g20_y_xyyyyy[k] - fgz * g21_y_xyyyyy[k]) + f2t * gk_xy_yyyyy[k];

                    g_xxy_xyyyyz[k] = fr * g11_xy_xyyyyz[k] + f2g * (g20_y_xyyyyz[k] - fgz * g21_y_xyyyyz[k]) + f2t * gk_xy_yyyyz[k];

                    g_xxy_xyyyzz[k] = fr * g11_xy_xyyyzz[k] + f2g * (g20_y_xyyyzz[k] - fgz * g21_y_xyyyzz[k]) + f2t * gk_xy_yyyzz[k];

                    g_xxy_xyyzzz[k] = fr * g11_xy_xyyzzz[k] + f2g * (g20_y_xyyzzz[k] - fgz * g21_y_xyyzzz[k]) + f2t * gk_xy_yyzzz[k];

                    g_xxy_xyzzzz[k] = fr * g11_xy_xyzzzz[k] + f2g * (g20_y_xyzzzz[k] - fgz * g21_y_xyzzzz[k]) + f2t * gk_xy_yzzzz[k];

                    g_xxy_xzzzzz[k] = fr * g11_xy_xzzzzz[k] + f2g * (g20_y_xzzzzz[k] - fgz * g21_y_xzzzzz[k]) + f2t * gk_xy_zzzzz[k];

                    g_xxy_yyyyyy[k] = fr * g11_xy_yyyyyy[k] + f2g * (g20_y_yyyyyy[k] - fgz * g21_y_yyyyyy[k]);

                    g_xxy_yyyyyz[k] = fr * g11_xy_yyyyyz[k] + f2g * (g20_y_yyyyyz[k] - fgz * g21_y_yyyyyz[k]);

                    g_xxy_yyyyzz[k] = fr * g11_xy_yyyyzz[k] + f2g * (g20_y_yyyyzz[k] - fgz * g21_y_yyyyzz[k]);

                    g_xxy_yyyzzz[k] = fr * g11_xy_yyyzzz[k] + f2g * (g20_y_yyyzzz[k] - fgz * g21_y_yyyzzz[k]);

                    g_xxy_yyzzzz[k] = fr * g11_xy_yyzzzz[k] + f2g * (g20_y_yyzzzz[k] - fgz * g21_y_yyzzzz[k]);

                    g_xxy_yzzzzz[k] = fr * g11_xy_yzzzzz[k] + f2g * (g20_y_yzzzzz[k] - fgz * g21_y_yzzzzz[k]);

                    g_xxy_zzzzzz[k] = fr * g11_xy_zzzzzz[k] + f2g * (g20_y_zzzzzz[k] - fgz * g21_y_zzzzzz[k]);

                    g_xxz_xxxxxx[k] = fr * g11_xz_xxxxxx[k] + f2g * (g20_z_xxxxxx[k] - fgz * g21_z_xxxxxx[k]) + 6.0 * f2t * gk_xz_xxxxx[k];

                    g_xxz_xxxxxy[k] = fr * g11_xz_xxxxxy[k] + f2g * (g20_z_xxxxxy[k] - fgz * g21_z_xxxxxy[k]) + 5.0 * f2t * gk_xz_xxxxy[k];

                    g_xxz_xxxxxz[k] = fr * g11_xz_xxxxxz[k] + f2g * (g20_z_xxxxxz[k] - fgz * g21_z_xxxxxz[k]) + 5.0 * f2t * gk_xz_xxxxz[k];

                    g_xxz_xxxxyy[k] = fr * g11_xz_xxxxyy[k] + f2g * (g20_z_xxxxyy[k] - fgz * g21_z_xxxxyy[k]) + 4.0 * f2t * gk_xz_xxxyy[k];

                    g_xxz_xxxxyz[k] = fr * g11_xz_xxxxyz[k] + f2g * (g20_z_xxxxyz[k] - fgz * g21_z_xxxxyz[k]) + 4.0 * f2t * gk_xz_xxxyz[k];

                    g_xxz_xxxxzz[k] = fr * g11_xz_xxxxzz[k] + f2g * (g20_z_xxxxzz[k] - fgz * g21_z_xxxxzz[k]) + 4.0 * f2t * gk_xz_xxxzz[k];

                    g_xxz_xxxyyy[k] = fr * g11_xz_xxxyyy[k] + f2g * (g20_z_xxxyyy[k] - fgz * g21_z_xxxyyy[k]) + 3.0 * f2t * gk_xz_xxyyy[k];

                    g_xxz_xxxyyz[k] = fr * g11_xz_xxxyyz[k] + f2g * (g20_z_xxxyyz[k] - fgz * g21_z_xxxyyz[k]) + 3.0 * f2t * gk_xz_xxyyz[k];

                    g_xxz_xxxyzz[k] = fr * g11_xz_xxxyzz[k] + f2g * (g20_z_xxxyzz[k] - fgz * g21_z_xxxyzz[k]) + 3.0 * f2t * gk_xz_xxyzz[k];

                    g_xxz_xxxzzz[k] = fr * g11_xz_xxxzzz[k] + f2g * (g20_z_xxxzzz[k] - fgz * g21_z_xxxzzz[k]) + 3.0 * f2t * gk_xz_xxzzz[k];

                    g_xxz_xxyyyy[k] = fr * g11_xz_xxyyyy[k] + f2g * (g20_z_xxyyyy[k] - fgz * g21_z_xxyyyy[k]) + 2.0 * f2t * gk_xz_xyyyy[k];

                    g_xxz_xxyyyz[k] = fr * g11_xz_xxyyyz[k] + f2g * (g20_z_xxyyyz[k] - fgz * g21_z_xxyyyz[k]) + 2.0 * f2t * gk_xz_xyyyz[k];

                    g_xxz_xxyyzz[k] = fr * g11_xz_xxyyzz[k] + f2g * (g20_z_xxyyzz[k] - fgz * g21_z_xxyyzz[k]) + 2.0 * f2t * gk_xz_xyyzz[k];

                    g_xxz_xxyzzz[k] = fr * g11_xz_xxyzzz[k] + f2g * (g20_z_xxyzzz[k] - fgz * g21_z_xxyzzz[k]) + 2.0 * f2t * gk_xz_xyzzz[k];

                    g_xxz_xxzzzz[k] = fr * g11_xz_xxzzzz[k] + f2g * (g20_z_xxzzzz[k] - fgz * g21_z_xxzzzz[k]) + 2.0 * f2t * gk_xz_xzzzz[k];

                    g_xxz_xyyyyy[k] = fr * g11_xz_xyyyyy[k] + f2g * (g20_z_xyyyyy[k] - fgz * g21_z_xyyyyy[k]) + f2t * gk_xz_yyyyy[k];

                    g_xxz_xyyyyz[k] = fr * g11_xz_xyyyyz[k] + f2g * (g20_z_xyyyyz[k] - fgz * g21_z_xyyyyz[k]) + f2t * gk_xz_yyyyz[k];

                    g_xxz_xyyyzz[k] = fr * g11_xz_xyyyzz[k] + f2g * (g20_z_xyyyzz[k] - fgz * g21_z_xyyyzz[k]) + f2t * gk_xz_yyyzz[k];

                    g_xxz_xyyzzz[k] = fr * g11_xz_xyyzzz[k] + f2g * (g20_z_xyyzzz[k] - fgz * g21_z_xyyzzz[k]) + f2t * gk_xz_yyzzz[k];

                    g_xxz_xyzzzz[k] = fr * g11_xz_xyzzzz[k] + f2g * (g20_z_xyzzzz[k] - fgz * g21_z_xyzzzz[k]) + f2t * gk_xz_yzzzz[k];

                    g_xxz_xzzzzz[k] = fr * g11_xz_xzzzzz[k] + f2g * (g20_z_xzzzzz[k] - fgz * g21_z_xzzzzz[k]) + f2t * gk_xz_zzzzz[k];

                    g_xxz_yyyyyy[k] = fr * g11_xz_yyyyyy[k] + f2g * (g20_z_yyyyyy[k] - fgz * g21_z_yyyyyy[k]);

                    g_xxz_yyyyyz[k] = fr * g11_xz_yyyyyz[k] + f2g * (g20_z_yyyyyz[k] - fgz * g21_z_yyyyyz[k]);

                    g_xxz_yyyyzz[k] = fr * g11_xz_yyyyzz[k] + f2g * (g20_z_yyyyzz[k] - fgz * g21_z_yyyyzz[k]);

                    g_xxz_yyyzzz[k] = fr * g11_xz_yyyzzz[k] + f2g * (g20_z_yyyzzz[k] - fgz * g21_z_yyyzzz[k]);

                    g_xxz_yyzzzz[k] = fr * g11_xz_yyzzzz[k] + f2g * (g20_z_yyzzzz[k] - fgz * g21_z_yyzzzz[k]);

                    g_xxz_yzzzzz[k] = fr * g11_xz_yzzzzz[k] + f2g * (g20_z_yzzzzz[k] - fgz * g21_z_yzzzzz[k]);

                    g_xxz_zzzzzz[k] = fr * g11_xz_zzzzzz[k] + f2g * (g20_z_zzzzzz[k] - fgz * g21_z_zzzzzz[k]);

                    g_xyy_xxxxxx[k] = fr * g11_yy_xxxxxx[k] + 6.0 * f2t * gk_yy_xxxxx[k];

                    g_xyy_xxxxxy[k] = fr * g11_yy_xxxxxy[k] + 5.0 * f2t * gk_yy_xxxxy[k];

                    g_xyy_xxxxxz[k] = fr * g11_yy_xxxxxz[k] + 5.0 * f2t * gk_yy_xxxxz[k];

                    g_xyy_xxxxyy[k] = fr * g11_yy_xxxxyy[k] + 4.0 * f2t * gk_yy_xxxyy[k];

                    g_xyy_xxxxyz[k] = fr * g11_yy_xxxxyz[k] + 4.0 * f2t * gk_yy_xxxyz[k];

                    g_xyy_xxxxzz[k] = fr * g11_yy_xxxxzz[k] + 4.0 * f2t * gk_yy_xxxzz[k];

                    g_xyy_xxxyyy[k] = fr * g11_yy_xxxyyy[k] + 3.0 * f2t * gk_yy_xxyyy[k];

                    g_xyy_xxxyyz[k] = fr * g11_yy_xxxyyz[k] + 3.0 * f2t * gk_yy_xxyyz[k];

                    g_xyy_xxxyzz[k] = fr * g11_yy_xxxyzz[k] + 3.0 * f2t * gk_yy_xxyzz[k];

                    g_xyy_xxxzzz[k] = fr * g11_yy_xxxzzz[k] + 3.0 * f2t * gk_yy_xxzzz[k];

                    g_xyy_xxyyyy[k] = fr * g11_yy_xxyyyy[k] + 2.0 * f2t * gk_yy_xyyyy[k];

                    g_xyy_xxyyyz[k] = fr * g11_yy_xxyyyz[k] + 2.0 * f2t * gk_yy_xyyyz[k];

                    g_xyy_xxyyzz[k] = fr * g11_yy_xxyyzz[k] + 2.0 * f2t * gk_yy_xyyzz[k];

                    g_xyy_xxyzzz[k] = fr * g11_yy_xxyzzz[k] + 2.0 * f2t * gk_yy_xyzzz[k];

                    g_xyy_xxzzzz[k] = fr * g11_yy_xxzzzz[k] + 2.0 * f2t * gk_yy_xzzzz[k];

                    g_xyy_xyyyyy[k] = fr * g11_yy_xyyyyy[k] + f2t * gk_yy_yyyyy[k];

                    g_xyy_xyyyyz[k] = fr * g11_yy_xyyyyz[k] + f2t * gk_yy_yyyyz[k];

                    g_xyy_xyyyzz[k] = fr * g11_yy_xyyyzz[k] + f2t * gk_yy_yyyzz[k];

                    g_xyy_xyyzzz[k] = fr * g11_yy_xyyzzz[k] + f2t * gk_yy_yyzzz[k];

                    g_xyy_xyzzzz[k] = fr * g11_yy_xyzzzz[k] + f2t * gk_yy_yzzzz[k];

                    g_xyy_xzzzzz[k] = fr * g11_yy_xzzzzz[k] + f2t * gk_yy_zzzzz[k];

                    g_xyy_yyyyyy[k] = fr * g11_yy_yyyyyy[k];

                    g_xyy_yyyyyz[k] = fr * g11_yy_yyyyyz[k];

                    g_xyy_yyyyzz[k] = fr * g11_yy_yyyyzz[k];

                    g_xyy_yyyzzz[k] = fr * g11_yy_yyyzzz[k];

                    g_xyy_yyzzzz[k] = fr * g11_yy_yyzzzz[k];

                    g_xyy_yzzzzz[k] = fr * g11_yy_yzzzzz[k];

                    g_xyy_zzzzzz[k] = fr * g11_yy_zzzzzz[k];

                    g_xyz_xxxxxx[k] = fr * g11_yz_xxxxxx[k] + 6.0 * f2t * gk_yz_xxxxx[k];

                    g_xyz_xxxxxy[k] = fr * g11_yz_xxxxxy[k] + 5.0 * f2t * gk_yz_xxxxy[k];

                    g_xyz_xxxxxz[k] = fr * g11_yz_xxxxxz[k] + 5.0 * f2t * gk_yz_xxxxz[k];

                    g_xyz_xxxxyy[k] = fr * g11_yz_xxxxyy[k] + 4.0 * f2t * gk_yz_xxxyy[k];

                    g_xyz_xxxxyz[k] = fr * g11_yz_xxxxyz[k] + 4.0 * f2t * gk_yz_xxxyz[k];

                    g_xyz_xxxxzz[k] = fr * g11_yz_xxxxzz[k] + 4.0 * f2t * gk_yz_xxxzz[k];

                    g_xyz_xxxyyy[k] = fr * g11_yz_xxxyyy[k] + 3.0 * f2t * gk_yz_xxyyy[k];

                    g_xyz_xxxyyz[k] = fr * g11_yz_xxxyyz[k] + 3.0 * f2t * gk_yz_xxyyz[k];

                    g_xyz_xxxyzz[k] = fr * g11_yz_xxxyzz[k] + 3.0 * f2t * gk_yz_xxyzz[k];

                    g_xyz_xxxzzz[k] = fr * g11_yz_xxxzzz[k] + 3.0 * f2t * gk_yz_xxzzz[k];

                    g_xyz_xxyyyy[k] = fr * g11_yz_xxyyyy[k] + 2.0 * f2t * gk_yz_xyyyy[k];

                    g_xyz_xxyyyz[k] = fr * g11_yz_xxyyyz[k] + 2.0 * f2t * gk_yz_xyyyz[k];

                    g_xyz_xxyyzz[k] = fr * g11_yz_xxyyzz[k] + 2.0 * f2t * gk_yz_xyyzz[k];

                    g_xyz_xxyzzz[k] = fr * g11_yz_xxyzzz[k] + 2.0 * f2t * gk_yz_xyzzz[k];

                    g_xyz_xxzzzz[k] = fr * g11_yz_xxzzzz[k] + 2.0 * f2t * gk_yz_xzzzz[k];

                    g_xyz_xyyyyy[k] = fr * g11_yz_xyyyyy[k] + f2t * gk_yz_yyyyy[k];

                    g_xyz_xyyyyz[k] = fr * g11_yz_xyyyyz[k] + f2t * gk_yz_yyyyz[k];

                    g_xyz_xyyyzz[k] = fr * g11_yz_xyyyzz[k] + f2t * gk_yz_yyyzz[k];

                    g_xyz_xyyzzz[k] = fr * g11_yz_xyyzzz[k] + f2t * gk_yz_yyzzz[k];

                    g_xyz_xyzzzz[k] = fr * g11_yz_xyzzzz[k] + f2t * gk_yz_yzzzz[k];

                    g_xyz_xzzzzz[k] = fr * g11_yz_xzzzzz[k] + f2t * gk_yz_zzzzz[k];

                    g_xyz_yyyyyy[k] = fr * g11_yz_yyyyyy[k];

                    g_xyz_yyyyyz[k] = fr * g11_yz_yyyyyz[k];

                    g_xyz_yyyyzz[k] = fr * g11_yz_yyyyzz[k];

                    g_xyz_yyyzzz[k] = fr * g11_yz_yyyzzz[k];

                    g_xyz_yyzzzz[k] = fr * g11_yz_yyzzzz[k];

                    g_xyz_yzzzzz[k] = fr * g11_yz_yzzzzz[k];

                    g_xyz_zzzzzz[k] = fr * g11_yz_zzzzzz[k];

                    g_xzz_xxxxxx[k] = fr * g11_zz_xxxxxx[k] + 6.0 * f2t * gk_zz_xxxxx[k];

                    g_xzz_xxxxxy[k] = fr * g11_zz_xxxxxy[k] + 5.0 * f2t * gk_zz_xxxxy[k];

                    g_xzz_xxxxxz[k] = fr * g11_zz_xxxxxz[k] + 5.0 * f2t * gk_zz_xxxxz[k];

                    g_xzz_xxxxyy[k] = fr * g11_zz_xxxxyy[k] + 4.0 * f2t * gk_zz_xxxyy[k];

                    g_xzz_xxxxyz[k] = fr * g11_zz_xxxxyz[k] + 4.0 * f2t * gk_zz_xxxyz[k];

                    g_xzz_xxxxzz[k] = fr * g11_zz_xxxxzz[k] + 4.0 * f2t * gk_zz_xxxzz[k];

                    g_xzz_xxxyyy[k] = fr * g11_zz_xxxyyy[k] + 3.0 * f2t * gk_zz_xxyyy[k];

                    g_xzz_xxxyyz[k] = fr * g11_zz_xxxyyz[k] + 3.0 * f2t * gk_zz_xxyyz[k];

                    g_xzz_xxxyzz[k] = fr * g11_zz_xxxyzz[k] + 3.0 * f2t * gk_zz_xxyzz[k];

                    g_xzz_xxxzzz[k] = fr * g11_zz_xxxzzz[k] + 3.0 * f2t * gk_zz_xxzzz[k];

                    g_xzz_xxyyyy[k] = fr * g11_zz_xxyyyy[k] + 2.0 * f2t * gk_zz_xyyyy[k];

                    g_xzz_xxyyyz[k] = fr * g11_zz_xxyyyz[k] + 2.0 * f2t * gk_zz_xyyyz[k];

                    g_xzz_xxyyzz[k] = fr * g11_zz_xxyyzz[k] + 2.0 * f2t * gk_zz_xyyzz[k];

                    g_xzz_xxyzzz[k] = fr * g11_zz_xxyzzz[k] + 2.0 * f2t * gk_zz_xyzzz[k];

                    g_xzz_xxzzzz[k] = fr * g11_zz_xxzzzz[k] + 2.0 * f2t * gk_zz_xzzzz[k];

                    g_xzz_xyyyyy[k] = fr * g11_zz_xyyyyy[k] + f2t * gk_zz_yyyyy[k];

                    g_xzz_xyyyyz[k] = fr * g11_zz_xyyyyz[k] + f2t * gk_zz_yyyyz[k];

                    g_xzz_xyyyzz[k] = fr * g11_zz_xyyyzz[k] + f2t * gk_zz_yyyzz[k];

                    g_xzz_xyyzzz[k] = fr * g11_zz_xyyzzz[k] + f2t * gk_zz_yyzzz[k];

                    g_xzz_xyzzzz[k] = fr * g11_zz_xyzzzz[k] + f2t * gk_zz_yzzzz[k];

                    g_xzz_xzzzzz[k] = fr * g11_zz_xzzzzz[k] + f2t * gk_zz_zzzzz[k];

                    g_xzz_yyyyyy[k] = fr * g11_zz_yyyyyy[k];

                    g_xzz_yyyyyz[k] = fr * g11_zz_yyyyyz[k];

                    g_xzz_yyyyzz[k] = fr * g11_zz_yyyyzz[k];

                    g_xzz_yyyzzz[k] = fr * g11_zz_yyyzzz[k];

                    g_xzz_yyzzzz[k] = fr * g11_zz_yyzzzz[k];

                    g_xzz_yzzzzz[k] = fr * g11_zz_yzzzzz[k];

                    g_xzz_zzzzzz[k] = fr * g11_zz_zzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxxxxx[k] = fr * g11_yy_xxxxxx[k] + f2g * (2.0 * g20_y_xxxxxx[k] - 2.0 * fgz * g21_y_xxxxxx[k]);

                    g_yyy_xxxxxy[k] = fr * g11_yy_xxxxxy[k] + f2g * (2.0 * g20_y_xxxxxy[k] - 2.0 * fgz * g21_y_xxxxxy[k]) + f2t * gk_yy_xxxxx[k];

                    g_yyy_xxxxxz[k] = fr * g11_yy_xxxxxz[k] + f2g * (2.0 * g20_y_xxxxxz[k] - 2.0 * fgz * g21_y_xxxxxz[k]);

                    g_yyy_xxxxyy[k] = fr * g11_yy_xxxxyy[k] + f2g * (2.0 * g20_y_xxxxyy[k] - 2.0 * fgz * g21_y_xxxxyy[k]) + 2.0 * f2t * gk_yy_xxxxy[k];

                    g_yyy_xxxxyz[k] = fr * g11_yy_xxxxyz[k] + f2g * (2.0 * g20_y_xxxxyz[k] - 2.0 * fgz * g21_y_xxxxyz[k]) + f2t * gk_yy_xxxxz[k];

                    g_yyy_xxxxzz[k] = fr * g11_yy_xxxxzz[k] + f2g * (2.0 * g20_y_xxxxzz[k] - 2.0 * fgz * g21_y_xxxxzz[k]);

                    g_yyy_xxxyyy[k] = fr * g11_yy_xxxyyy[k] + f2g * (2.0 * g20_y_xxxyyy[k] - 2.0 * fgz * g21_y_xxxyyy[k]) + 3.0 * f2t * gk_yy_xxxyy[k];

                    g_yyy_xxxyyz[k] = fr * g11_yy_xxxyyz[k] + f2g * (2.0 * g20_y_xxxyyz[k] - 2.0 * fgz * g21_y_xxxyyz[k]) + 2.0 * f2t * gk_yy_xxxyz[k];

                    g_yyy_xxxyzz[k] = fr * g11_yy_xxxyzz[k] + f2g * (2.0 * g20_y_xxxyzz[k] - 2.0 * fgz * g21_y_xxxyzz[k]) + f2t * gk_yy_xxxzz[k];

                    g_yyy_xxxzzz[k] = fr * g11_yy_xxxzzz[k] + f2g * (2.0 * g20_y_xxxzzz[k] - 2.0 * fgz * g21_y_xxxzzz[k]);

                    g_yyy_xxyyyy[k] = fr * g11_yy_xxyyyy[k] + f2g * (2.0 * g20_y_xxyyyy[k] - 2.0 * fgz * g21_y_xxyyyy[k]) + 4.0 * f2t * gk_yy_xxyyy[k];

                    g_yyy_xxyyyz[k] = fr * g11_yy_xxyyyz[k] + f2g * (2.0 * g20_y_xxyyyz[k] - 2.0 * fgz * g21_y_xxyyyz[k]) + 3.0 * f2t * gk_yy_xxyyz[k];

                    g_yyy_xxyyzz[k] = fr * g11_yy_xxyyzz[k] + f2g * (2.0 * g20_y_xxyyzz[k] - 2.0 * fgz * g21_y_xxyyzz[k]) + 2.0 * f2t * gk_yy_xxyzz[k];

                    g_yyy_xxyzzz[k] = fr * g11_yy_xxyzzz[k] + f2g * (2.0 * g20_y_xxyzzz[k] - 2.0 * fgz * g21_y_xxyzzz[k]) + f2t * gk_yy_xxzzz[k];

                    g_yyy_xxzzzz[k] = fr * g11_yy_xxzzzz[k] + f2g * (2.0 * g20_y_xxzzzz[k] - 2.0 * fgz * g21_y_xxzzzz[k]);

                    g_yyy_xyyyyy[k] = fr * g11_yy_xyyyyy[k] + f2g * (2.0 * g20_y_xyyyyy[k] - 2.0 * fgz * g21_y_xyyyyy[k]) + 5.0 * f2t * gk_yy_xyyyy[k];

                    g_yyy_xyyyyz[k] = fr * g11_yy_xyyyyz[k] + f2g * (2.0 * g20_y_xyyyyz[k] - 2.0 * fgz * g21_y_xyyyyz[k]) + 4.0 * f2t * gk_yy_xyyyz[k];

                    g_yyy_xyyyzz[k] = fr * g11_yy_xyyyzz[k] + f2g * (2.0 * g20_y_xyyyzz[k] - 2.0 * fgz * g21_y_xyyyzz[k]) + 3.0 * f2t * gk_yy_xyyzz[k];

                    g_yyy_xyyzzz[k] = fr * g11_yy_xyyzzz[k] + f2g * (2.0 * g20_y_xyyzzz[k] - 2.0 * fgz * g21_y_xyyzzz[k]) + 2.0 * f2t * gk_yy_xyzzz[k];

                    g_yyy_xyzzzz[k] = fr * g11_yy_xyzzzz[k] + f2g * (2.0 * g20_y_xyzzzz[k] - 2.0 * fgz * g21_y_xyzzzz[k]) + f2t * gk_yy_xzzzz[k];

                    g_yyy_xzzzzz[k] = fr * g11_yy_xzzzzz[k] + f2g * (2.0 * g20_y_xzzzzz[k] - 2.0 * fgz * g21_y_xzzzzz[k]);

                    g_yyy_yyyyyy[k] = fr * g11_yy_yyyyyy[k] + f2g * (2.0 * g20_y_yyyyyy[k] - 2.0 * fgz * g21_y_yyyyyy[k]) + 6.0 * f2t * gk_yy_yyyyy[k];

                    g_yyy_yyyyyz[k] = fr * g11_yy_yyyyyz[k] + f2g * (2.0 * g20_y_yyyyyz[k] - 2.0 * fgz * g21_y_yyyyyz[k]) + 5.0 * f2t * gk_yy_yyyyz[k];

                    g_yyy_yyyyzz[k] = fr * g11_yy_yyyyzz[k] + f2g * (2.0 * g20_y_yyyyzz[k] - 2.0 * fgz * g21_y_yyyyzz[k]) + 4.0 * f2t * gk_yy_yyyzz[k];

                    g_yyy_yyyzzz[k] = fr * g11_yy_yyyzzz[k] + f2g * (2.0 * g20_y_yyyzzz[k] - 2.0 * fgz * g21_y_yyyzzz[k]) + 3.0 * f2t * gk_yy_yyzzz[k];

                    g_yyy_yyzzzz[k] = fr * g11_yy_yyzzzz[k] + f2g * (2.0 * g20_y_yyzzzz[k] - 2.0 * fgz * g21_y_yyzzzz[k]) + 2.0 * f2t * gk_yy_yzzzz[k];

                    g_yyy_yzzzzz[k] = fr * g11_yy_yzzzzz[k] + f2g * (2.0 * g20_y_yzzzzz[k] - 2.0 * fgz * g21_y_yzzzzz[k]) + f2t * gk_yy_zzzzz[k];

                    g_yyy_zzzzzz[k] = fr * g11_yy_zzzzzz[k] + f2g * (2.0 * g20_y_zzzzzz[k] - 2.0 * fgz * g21_y_zzzzzz[k]);

                    g_yyz_xxxxxx[k] = fr * g11_yz_xxxxxx[k] + f2g * (g20_z_xxxxxx[k] - fgz * g21_z_xxxxxx[k]);

                    g_yyz_xxxxxy[k] = fr * g11_yz_xxxxxy[k] + f2g * (g20_z_xxxxxy[k] - fgz * g21_z_xxxxxy[k]) + f2t * gk_yz_xxxxx[k];

                    g_yyz_xxxxxz[k] = fr * g11_yz_xxxxxz[k] + f2g * (g20_z_xxxxxz[k] - fgz * g21_z_xxxxxz[k]);

                    g_yyz_xxxxyy[k] = fr * g11_yz_xxxxyy[k] + f2g * (g20_z_xxxxyy[k] - fgz * g21_z_xxxxyy[k]) + 2.0 * f2t * gk_yz_xxxxy[k];

                    g_yyz_xxxxyz[k] = fr * g11_yz_xxxxyz[k] + f2g * (g20_z_xxxxyz[k] - fgz * g21_z_xxxxyz[k]) + f2t * gk_yz_xxxxz[k];

                    g_yyz_xxxxzz[k] = fr * g11_yz_xxxxzz[k] + f2g * (g20_z_xxxxzz[k] - fgz * g21_z_xxxxzz[k]);

                    g_yyz_xxxyyy[k] = fr * g11_yz_xxxyyy[k] + f2g * (g20_z_xxxyyy[k] - fgz * g21_z_xxxyyy[k]) + 3.0 * f2t * gk_yz_xxxyy[k];

                    g_yyz_xxxyyz[k] = fr * g11_yz_xxxyyz[k] + f2g * (g20_z_xxxyyz[k] - fgz * g21_z_xxxyyz[k]) + 2.0 * f2t * gk_yz_xxxyz[k];

                    g_yyz_xxxyzz[k] = fr * g11_yz_xxxyzz[k] + f2g * (g20_z_xxxyzz[k] - fgz * g21_z_xxxyzz[k]) + f2t * gk_yz_xxxzz[k];

                    g_yyz_xxxzzz[k] = fr * g11_yz_xxxzzz[k] + f2g * (g20_z_xxxzzz[k] - fgz * g21_z_xxxzzz[k]);

                    g_yyz_xxyyyy[k] = fr * g11_yz_xxyyyy[k] + f2g * (g20_z_xxyyyy[k] - fgz * g21_z_xxyyyy[k]) + 4.0 * f2t * gk_yz_xxyyy[k];

                    g_yyz_xxyyyz[k] = fr * g11_yz_xxyyyz[k] + f2g * (g20_z_xxyyyz[k] - fgz * g21_z_xxyyyz[k]) + 3.0 * f2t * gk_yz_xxyyz[k];

                    g_yyz_xxyyzz[k] = fr * g11_yz_xxyyzz[k] + f2g * (g20_z_xxyyzz[k] - fgz * g21_z_xxyyzz[k]) + 2.0 * f2t * gk_yz_xxyzz[k];

                    g_yyz_xxyzzz[k] = fr * g11_yz_xxyzzz[k] + f2g * (g20_z_xxyzzz[k] - fgz * g21_z_xxyzzz[k]) + f2t * gk_yz_xxzzz[k];

                    g_yyz_xxzzzz[k] = fr * g11_yz_xxzzzz[k] + f2g * (g20_z_xxzzzz[k] - fgz * g21_z_xxzzzz[k]);

                    g_yyz_xyyyyy[k] = fr * g11_yz_xyyyyy[k] + f2g * (g20_z_xyyyyy[k] - fgz * g21_z_xyyyyy[k]) + 5.0 * f2t * gk_yz_xyyyy[k];

                    g_yyz_xyyyyz[k] = fr * g11_yz_xyyyyz[k] + f2g * (g20_z_xyyyyz[k] - fgz * g21_z_xyyyyz[k]) + 4.0 * f2t * gk_yz_xyyyz[k];

                    g_yyz_xyyyzz[k] = fr * g11_yz_xyyyzz[k] + f2g * (g20_z_xyyyzz[k] - fgz * g21_z_xyyyzz[k]) + 3.0 * f2t * gk_yz_xyyzz[k];

                    g_yyz_xyyzzz[k] = fr * g11_yz_xyyzzz[k] + f2g * (g20_z_xyyzzz[k] - fgz * g21_z_xyyzzz[k]) + 2.0 * f2t * gk_yz_xyzzz[k];

                    g_yyz_xyzzzz[k] = fr * g11_yz_xyzzzz[k] + f2g * (g20_z_xyzzzz[k] - fgz * g21_z_xyzzzz[k]) + f2t * gk_yz_xzzzz[k];

                    g_yyz_xzzzzz[k] = fr * g11_yz_xzzzzz[k] + f2g * (g20_z_xzzzzz[k] - fgz * g21_z_xzzzzz[k]);

                    g_yyz_yyyyyy[k] = fr * g11_yz_yyyyyy[k] + f2g * (g20_z_yyyyyy[k] - fgz * g21_z_yyyyyy[k]) + 6.0 * f2t * gk_yz_yyyyy[k];

                    g_yyz_yyyyyz[k] = fr * g11_yz_yyyyyz[k] + f2g * (g20_z_yyyyyz[k] - fgz * g21_z_yyyyyz[k]) + 5.0 * f2t * gk_yz_yyyyz[k];

                    g_yyz_yyyyzz[k] = fr * g11_yz_yyyyzz[k] + f2g * (g20_z_yyyyzz[k] - fgz * g21_z_yyyyzz[k]) + 4.0 * f2t * gk_yz_yyyzz[k];

                    g_yyz_yyyzzz[k] = fr * g11_yz_yyyzzz[k] + f2g * (g20_z_yyyzzz[k] - fgz * g21_z_yyyzzz[k]) + 3.0 * f2t * gk_yz_yyzzz[k];

                    g_yyz_yyzzzz[k] = fr * g11_yz_yyzzzz[k] + f2g * (g20_z_yyzzzz[k] - fgz * g21_z_yyzzzz[k]) + 2.0 * f2t * gk_yz_yzzzz[k];

                    g_yyz_yzzzzz[k] = fr * g11_yz_yzzzzz[k] + f2g * (g20_z_yzzzzz[k] - fgz * g21_z_yzzzzz[k]) + f2t * gk_yz_zzzzz[k];

                    g_yyz_zzzzzz[k] = fr * g11_yz_zzzzzz[k] + f2g * (g20_z_zzzzzz[k] - fgz * g21_z_zzzzzz[k]);

                    g_yzz_xxxxxx[k] = fr * g11_zz_xxxxxx[k];

                    g_yzz_xxxxxy[k] = fr * g11_zz_xxxxxy[k] + f2t * gk_zz_xxxxx[k];

                    g_yzz_xxxxxz[k] = fr * g11_zz_xxxxxz[k];

                    g_yzz_xxxxyy[k] = fr * g11_zz_xxxxyy[k] + 2.0 * f2t * gk_zz_xxxxy[k];

                    g_yzz_xxxxyz[k] = fr * g11_zz_xxxxyz[k] + f2t * gk_zz_xxxxz[k];

                    g_yzz_xxxxzz[k] = fr * g11_zz_xxxxzz[k];

                    g_yzz_xxxyyy[k] = fr * g11_zz_xxxyyy[k] + 3.0 * f2t * gk_zz_xxxyy[k];

                    g_yzz_xxxyyz[k] = fr * g11_zz_xxxyyz[k] + 2.0 * f2t * gk_zz_xxxyz[k];

                    g_yzz_xxxyzz[k] = fr * g11_zz_xxxyzz[k] + f2t * gk_zz_xxxzz[k];

                    g_yzz_xxxzzz[k] = fr * g11_zz_xxxzzz[k];

                    g_yzz_xxyyyy[k] = fr * g11_zz_xxyyyy[k] + 4.0 * f2t * gk_zz_xxyyy[k];

                    g_yzz_xxyyyz[k] = fr * g11_zz_xxyyyz[k] + 3.0 * f2t * gk_zz_xxyyz[k];

                    g_yzz_xxyyzz[k] = fr * g11_zz_xxyyzz[k] + 2.0 * f2t * gk_zz_xxyzz[k];

                    g_yzz_xxyzzz[k] = fr * g11_zz_xxyzzz[k] + f2t * gk_zz_xxzzz[k];

                    g_yzz_xxzzzz[k] = fr * g11_zz_xxzzzz[k];

                    g_yzz_xyyyyy[k] = fr * g11_zz_xyyyyy[k] + 5.0 * f2t * gk_zz_xyyyy[k];

                    g_yzz_xyyyyz[k] = fr * g11_zz_xyyyyz[k] + 4.0 * f2t * gk_zz_xyyyz[k];

                    g_yzz_xyyyzz[k] = fr * g11_zz_xyyyzz[k] + 3.0 * f2t * gk_zz_xyyzz[k];

                    g_yzz_xyyzzz[k] = fr * g11_zz_xyyzzz[k] + 2.0 * f2t * gk_zz_xyzzz[k];

                    g_yzz_xyzzzz[k] = fr * g11_zz_xyzzzz[k] + f2t * gk_zz_xzzzz[k];

                    g_yzz_xzzzzz[k] = fr * g11_zz_xzzzzz[k];

                    g_yzz_yyyyyy[k] = fr * g11_zz_yyyyyy[k] + 6.0 * f2t * gk_zz_yyyyy[k];

                    g_yzz_yyyyyz[k] = fr * g11_zz_yyyyyz[k] + 5.0 * f2t * gk_zz_yyyyz[k];

                    g_yzz_yyyyzz[k] = fr * g11_zz_yyyyzz[k] + 4.0 * f2t * gk_zz_yyyzz[k];

                    g_yzz_yyyzzz[k] = fr * g11_zz_yyyzzz[k] + 3.0 * f2t * gk_zz_yyzzz[k];

                    g_yzz_yyzzzz[k] = fr * g11_zz_yyzzzz[k] + 2.0 * f2t * gk_zz_yzzzz[k];

                    g_yzz_yzzzzz[k] = fr * g11_zz_yzzzzz[k] + f2t * gk_zz_zzzzz[k];

                    g_yzz_zzzzzz[k] = fr * g11_zz_zzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxxxxx[k] = fr * g11_zz_xxxxxx[k] + f2g * (2.0 * g20_z_xxxxxx[k] - 2.0 * fgz * g21_z_xxxxxx[k]);

                    g_zzz_xxxxxy[k] = fr * g11_zz_xxxxxy[k] + f2g * (2.0 * g20_z_xxxxxy[k] - 2.0 * fgz * g21_z_xxxxxy[k]);

                    g_zzz_xxxxxz[k] = fr * g11_zz_xxxxxz[k] + f2g * (2.0 * g20_z_xxxxxz[k] - 2.0 * fgz * g21_z_xxxxxz[k]) + f2t * gk_zz_xxxxx[k];

                    g_zzz_xxxxyy[k] = fr * g11_zz_xxxxyy[k] + f2g * (2.0 * g20_z_xxxxyy[k] - 2.0 * fgz * g21_z_xxxxyy[k]);

                    g_zzz_xxxxyz[k] = fr * g11_zz_xxxxyz[k] + f2g * (2.0 * g20_z_xxxxyz[k] - 2.0 * fgz * g21_z_xxxxyz[k]) + f2t * gk_zz_xxxxy[k];

                    g_zzz_xxxxzz[k] = fr * g11_zz_xxxxzz[k] + f2g * (2.0 * g20_z_xxxxzz[k] - 2.0 * fgz * g21_z_xxxxzz[k]) + 2.0 * f2t * gk_zz_xxxxz[k];

                    g_zzz_xxxyyy[k] = fr * g11_zz_xxxyyy[k] + f2g * (2.0 * g20_z_xxxyyy[k] - 2.0 * fgz * g21_z_xxxyyy[k]);

                    g_zzz_xxxyyz[k] = fr * g11_zz_xxxyyz[k] + f2g * (2.0 * g20_z_xxxyyz[k] - 2.0 * fgz * g21_z_xxxyyz[k]) + f2t * gk_zz_xxxyy[k];

                    g_zzz_xxxyzz[k] = fr * g11_zz_xxxyzz[k] + f2g * (2.0 * g20_z_xxxyzz[k] - 2.0 * fgz * g21_z_xxxyzz[k]) + 2.0 * f2t * gk_zz_xxxyz[k];

                    g_zzz_xxxzzz[k] = fr * g11_zz_xxxzzz[k] + f2g * (2.0 * g20_z_xxxzzz[k] - 2.0 * fgz * g21_z_xxxzzz[k]) + 3.0 * f2t * gk_zz_xxxzz[k];

                    g_zzz_xxyyyy[k] = fr * g11_zz_xxyyyy[k] + f2g * (2.0 * g20_z_xxyyyy[k] - 2.0 * fgz * g21_z_xxyyyy[k]);

                    g_zzz_xxyyyz[k] = fr * g11_zz_xxyyyz[k] + f2g * (2.0 * g20_z_xxyyyz[k] - 2.0 * fgz * g21_z_xxyyyz[k]) + f2t * gk_zz_xxyyy[k];

                    g_zzz_xxyyzz[k] = fr * g11_zz_xxyyzz[k] + f2g * (2.0 * g20_z_xxyyzz[k] - 2.0 * fgz * g21_z_xxyyzz[k]) + 2.0 * f2t * gk_zz_xxyyz[k];

                    g_zzz_xxyzzz[k] = fr * g11_zz_xxyzzz[k] + f2g * (2.0 * g20_z_xxyzzz[k] - 2.0 * fgz * g21_z_xxyzzz[k]) + 3.0 * f2t * gk_zz_xxyzz[k];

                    g_zzz_xxzzzz[k] = fr * g11_zz_xxzzzz[k] + f2g * (2.0 * g20_z_xxzzzz[k] - 2.0 * fgz * g21_z_xxzzzz[k]) + 4.0 * f2t * gk_zz_xxzzz[k];

                    g_zzz_xyyyyy[k] = fr * g11_zz_xyyyyy[k] + f2g * (2.0 * g20_z_xyyyyy[k] - 2.0 * fgz * g21_z_xyyyyy[k]);

                    g_zzz_xyyyyz[k] = fr * g11_zz_xyyyyz[k] + f2g * (2.0 * g20_z_xyyyyz[k] - 2.0 * fgz * g21_z_xyyyyz[k]) + f2t * gk_zz_xyyyy[k];

                    g_zzz_xyyyzz[k] = fr * g11_zz_xyyyzz[k] + f2g * (2.0 * g20_z_xyyyzz[k] - 2.0 * fgz * g21_z_xyyyzz[k]) + 2.0 * f2t * gk_zz_xyyyz[k];

                    g_zzz_xyyzzz[k] = fr * g11_zz_xyyzzz[k] + f2g * (2.0 * g20_z_xyyzzz[k] - 2.0 * fgz * g21_z_xyyzzz[k]) + 3.0 * f2t * gk_zz_xyyzz[k];

                    g_zzz_xyzzzz[k] = fr * g11_zz_xyzzzz[k] + f2g * (2.0 * g20_z_xyzzzz[k] - 2.0 * fgz * g21_z_xyzzzz[k]) + 4.0 * f2t * gk_zz_xyzzz[k];

                    g_zzz_xzzzzz[k] = fr * g11_zz_xzzzzz[k] + f2g * (2.0 * g20_z_xzzzzz[k] - 2.0 * fgz * g21_z_xzzzzz[k]) + 5.0 * f2t * gk_zz_xzzzz[k];

                    g_zzz_yyyyyy[k] = fr * g11_zz_yyyyyy[k] + f2g * (2.0 * g20_z_yyyyyy[k] - 2.0 * fgz * g21_z_yyyyyy[k]);

                    g_zzz_yyyyyz[k] = fr * g11_zz_yyyyyz[k] + f2g * (2.0 * g20_z_yyyyyz[k] - 2.0 * fgz * g21_z_yyyyyz[k]) + f2t * gk_zz_yyyyy[k];

                    g_zzz_yyyyzz[k] = fr * g11_zz_yyyyzz[k] + f2g * (2.0 * g20_z_yyyyzz[k] - 2.0 * fgz * g21_z_yyyyzz[k]) + 2.0 * f2t * gk_zz_yyyyz[k];

                    g_zzz_yyyzzz[k] = fr * g11_zz_yyyzzz[k] + f2g * (2.0 * g20_z_yyyzzz[k] - 2.0 * fgz * g21_z_yyyzzz[k]) + 3.0 * f2t * gk_zz_yyyzz[k];

                    g_zzz_yyzzzz[k] = fr * g11_zz_yyzzzz[k] + f2g * (2.0 * g20_z_yyzzzz[k] - 2.0 * fgz * g21_z_yyzzzz[k]) + 4.0 * f2t * gk_zz_yyzzz[k];

                    g_zzz_yzzzzz[k] = fr * g11_zz_yzzzzz[k] + f2g * (2.0 * g20_z_yzzzzz[k] - 2.0 * fgz * g21_z_yzzzzz[k]) + 5.0 * f2t * gk_zz_yzzzz[k];

                    g_zzz_zzzzzz[k] = fr * g11_zz_zzzzzz[k] + f2g * (2.0 * g20_z_zzzzzz[k] - 2.0 * fgz * g21_z_zzzzzz[k]) + 6.0 * f2t * gk_zz_zzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSI(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 6);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 6, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 6, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 6, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 6, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 5, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SH)^(m+1) integrals

                auto gk_xxx_xxxxx = primBuffer.data(gkoff + 210 * idx);

                auto gk_xxx_xxxxy = primBuffer.data(gkoff + 210 * idx + 1);

                auto gk_xxx_xxxxz = primBuffer.data(gkoff + 210 * idx + 2);

                auto gk_xxx_xxxyy = primBuffer.data(gkoff + 210 * idx + 3);

                auto gk_xxx_xxxyz = primBuffer.data(gkoff + 210 * idx + 4);

                auto gk_xxx_xxxzz = primBuffer.data(gkoff + 210 * idx + 5);

                auto gk_xxx_xxyyy = primBuffer.data(gkoff + 210 * idx + 6);

                auto gk_xxx_xxyyz = primBuffer.data(gkoff + 210 * idx + 7);

                auto gk_xxx_xxyzz = primBuffer.data(gkoff + 210 * idx + 8);

                auto gk_xxx_xxzzz = primBuffer.data(gkoff + 210 * idx + 9);

                auto gk_xxx_xyyyy = primBuffer.data(gkoff + 210 * idx + 10);

                auto gk_xxx_xyyyz = primBuffer.data(gkoff + 210 * idx + 11);

                auto gk_xxx_xyyzz = primBuffer.data(gkoff + 210 * idx + 12);

                auto gk_xxx_xyzzz = primBuffer.data(gkoff + 210 * idx + 13);

                auto gk_xxx_xzzzz = primBuffer.data(gkoff + 210 * idx + 14);

                auto gk_xxx_yyyyy = primBuffer.data(gkoff + 210 * idx + 15);

                auto gk_xxx_yyyyz = primBuffer.data(gkoff + 210 * idx + 16);

                auto gk_xxx_yyyzz = primBuffer.data(gkoff + 210 * idx + 17);

                auto gk_xxx_yyzzz = primBuffer.data(gkoff + 210 * idx + 18);

                auto gk_xxx_yzzzz = primBuffer.data(gkoff + 210 * idx + 19);

                auto gk_xxx_zzzzz = primBuffer.data(gkoff + 210 * idx + 20);

                auto gk_xxy_xxxxx = primBuffer.data(gkoff + 210 * idx + 21);

                auto gk_xxy_xxxxy = primBuffer.data(gkoff + 210 * idx + 22);

                auto gk_xxy_xxxxz = primBuffer.data(gkoff + 210 * idx + 23);

                auto gk_xxy_xxxyy = primBuffer.data(gkoff + 210 * idx + 24);

                auto gk_xxy_xxxyz = primBuffer.data(gkoff + 210 * idx + 25);

                auto gk_xxy_xxxzz = primBuffer.data(gkoff + 210 * idx + 26);

                auto gk_xxy_xxyyy = primBuffer.data(gkoff + 210 * idx + 27);

                auto gk_xxy_xxyyz = primBuffer.data(gkoff + 210 * idx + 28);

                auto gk_xxy_xxyzz = primBuffer.data(gkoff + 210 * idx + 29);

                auto gk_xxy_xxzzz = primBuffer.data(gkoff + 210 * idx + 30);

                auto gk_xxy_xyyyy = primBuffer.data(gkoff + 210 * idx + 31);

                auto gk_xxy_xyyyz = primBuffer.data(gkoff + 210 * idx + 32);

                auto gk_xxy_xyyzz = primBuffer.data(gkoff + 210 * idx + 33);

                auto gk_xxy_xyzzz = primBuffer.data(gkoff + 210 * idx + 34);

                auto gk_xxy_xzzzz = primBuffer.data(gkoff + 210 * idx + 35);

                auto gk_xxy_yyyyy = primBuffer.data(gkoff + 210 * idx + 36);

                auto gk_xxy_yyyyz = primBuffer.data(gkoff + 210 * idx + 37);

                auto gk_xxy_yyyzz = primBuffer.data(gkoff + 210 * idx + 38);

                auto gk_xxy_yyzzz = primBuffer.data(gkoff + 210 * idx + 39);

                auto gk_xxy_yzzzz = primBuffer.data(gkoff + 210 * idx + 40);

                auto gk_xxy_zzzzz = primBuffer.data(gkoff + 210 * idx + 41);

                auto gk_xxz_xxxxx = primBuffer.data(gkoff + 210 * idx + 42);

                auto gk_xxz_xxxxy = primBuffer.data(gkoff + 210 * idx + 43);

                auto gk_xxz_xxxxz = primBuffer.data(gkoff + 210 * idx + 44);

                auto gk_xxz_xxxyy = primBuffer.data(gkoff + 210 * idx + 45);

                auto gk_xxz_xxxyz = primBuffer.data(gkoff + 210 * idx + 46);

                auto gk_xxz_xxxzz = primBuffer.data(gkoff + 210 * idx + 47);

                auto gk_xxz_xxyyy = primBuffer.data(gkoff + 210 * idx + 48);

                auto gk_xxz_xxyyz = primBuffer.data(gkoff + 210 * idx + 49);

                auto gk_xxz_xxyzz = primBuffer.data(gkoff + 210 * idx + 50);

                auto gk_xxz_xxzzz = primBuffer.data(gkoff + 210 * idx + 51);

                auto gk_xxz_xyyyy = primBuffer.data(gkoff + 210 * idx + 52);

                auto gk_xxz_xyyyz = primBuffer.data(gkoff + 210 * idx + 53);

                auto gk_xxz_xyyzz = primBuffer.data(gkoff + 210 * idx + 54);

                auto gk_xxz_xyzzz = primBuffer.data(gkoff + 210 * idx + 55);

                auto gk_xxz_xzzzz = primBuffer.data(gkoff + 210 * idx + 56);

                auto gk_xxz_yyyyy = primBuffer.data(gkoff + 210 * idx + 57);

                auto gk_xxz_yyyyz = primBuffer.data(gkoff + 210 * idx + 58);

                auto gk_xxz_yyyzz = primBuffer.data(gkoff + 210 * idx + 59);

                auto gk_xxz_yyzzz = primBuffer.data(gkoff + 210 * idx + 60);

                auto gk_xxz_yzzzz = primBuffer.data(gkoff + 210 * idx + 61);

                auto gk_xxz_zzzzz = primBuffer.data(gkoff + 210 * idx + 62);

                auto gk_xyy_xxxxx = primBuffer.data(gkoff + 210 * idx + 63);

                auto gk_xyy_xxxxy = primBuffer.data(gkoff + 210 * idx + 64);

                auto gk_xyy_xxxxz = primBuffer.data(gkoff + 210 * idx + 65);

                auto gk_xyy_xxxyy = primBuffer.data(gkoff + 210 * idx + 66);

                auto gk_xyy_xxxyz = primBuffer.data(gkoff + 210 * idx + 67);

                auto gk_xyy_xxxzz = primBuffer.data(gkoff + 210 * idx + 68);

                auto gk_xyy_xxyyy = primBuffer.data(gkoff + 210 * idx + 69);

                auto gk_xyy_xxyyz = primBuffer.data(gkoff + 210 * idx + 70);

                auto gk_xyy_xxyzz = primBuffer.data(gkoff + 210 * idx + 71);

                auto gk_xyy_xxzzz = primBuffer.data(gkoff + 210 * idx + 72);

                auto gk_xyy_xyyyy = primBuffer.data(gkoff + 210 * idx + 73);

                auto gk_xyy_xyyyz = primBuffer.data(gkoff + 210 * idx + 74);

                auto gk_xyy_xyyzz = primBuffer.data(gkoff + 210 * idx + 75);

                auto gk_xyy_xyzzz = primBuffer.data(gkoff + 210 * idx + 76);

                auto gk_xyy_xzzzz = primBuffer.data(gkoff + 210 * idx + 77);

                auto gk_xyy_yyyyy = primBuffer.data(gkoff + 210 * idx + 78);

                auto gk_xyy_yyyyz = primBuffer.data(gkoff + 210 * idx + 79);

                auto gk_xyy_yyyzz = primBuffer.data(gkoff + 210 * idx + 80);

                auto gk_xyy_yyzzz = primBuffer.data(gkoff + 210 * idx + 81);

                auto gk_xyy_yzzzz = primBuffer.data(gkoff + 210 * idx + 82);

                auto gk_xyy_zzzzz = primBuffer.data(gkoff + 210 * idx + 83);

                auto gk_xyz_xxxxx = primBuffer.data(gkoff + 210 * idx + 84);

                auto gk_xyz_xxxxy = primBuffer.data(gkoff + 210 * idx + 85);

                auto gk_xyz_xxxxz = primBuffer.data(gkoff + 210 * idx + 86);

                auto gk_xyz_xxxyy = primBuffer.data(gkoff + 210 * idx + 87);

                auto gk_xyz_xxxyz = primBuffer.data(gkoff + 210 * idx + 88);

                auto gk_xyz_xxxzz = primBuffer.data(gkoff + 210 * idx + 89);

                auto gk_xyz_xxyyy = primBuffer.data(gkoff + 210 * idx + 90);

                auto gk_xyz_xxyyz = primBuffer.data(gkoff + 210 * idx + 91);

                auto gk_xyz_xxyzz = primBuffer.data(gkoff + 210 * idx + 92);

                auto gk_xyz_xxzzz = primBuffer.data(gkoff + 210 * idx + 93);

                auto gk_xyz_xyyyy = primBuffer.data(gkoff + 210 * idx + 94);

                auto gk_xyz_xyyyz = primBuffer.data(gkoff + 210 * idx + 95);

                auto gk_xyz_xyyzz = primBuffer.data(gkoff + 210 * idx + 96);

                auto gk_xyz_xyzzz = primBuffer.data(gkoff + 210 * idx + 97);

                auto gk_xyz_xzzzz = primBuffer.data(gkoff + 210 * idx + 98);

                auto gk_xyz_yyyyy = primBuffer.data(gkoff + 210 * idx + 99);

                auto gk_xyz_yyyyz = primBuffer.data(gkoff + 210 * idx + 100);

                auto gk_xyz_yyyzz = primBuffer.data(gkoff + 210 * idx + 101);

                auto gk_xyz_yyzzz = primBuffer.data(gkoff + 210 * idx + 102);

                auto gk_xyz_yzzzz = primBuffer.data(gkoff + 210 * idx + 103);

                auto gk_xyz_zzzzz = primBuffer.data(gkoff + 210 * idx + 104);

                auto gk_xzz_xxxxx = primBuffer.data(gkoff + 210 * idx + 105);

                auto gk_xzz_xxxxy = primBuffer.data(gkoff + 210 * idx + 106);

                auto gk_xzz_xxxxz = primBuffer.data(gkoff + 210 * idx + 107);

                auto gk_xzz_xxxyy = primBuffer.data(gkoff + 210 * idx + 108);

                auto gk_xzz_xxxyz = primBuffer.data(gkoff + 210 * idx + 109);

                auto gk_xzz_xxxzz = primBuffer.data(gkoff + 210 * idx + 110);

                auto gk_xzz_xxyyy = primBuffer.data(gkoff + 210 * idx + 111);

                auto gk_xzz_xxyyz = primBuffer.data(gkoff + 210 * idx + 112);

                auto gk_xzz_xxyzz = primBuffer.data(gkoff + 210 * idx + 113);

                auto gk_xzz_xxzzz = primBuffer.data(gkoff + 210 * idx + 114);

                auto gk_xzz_xyyyy = primBuffer.data(gkoff + 210 * idx + 115);

                auto gk_xzz_xyyyz = primBuffer.data(gkoff + 210 * idx + 116);

                auto gk_xzz_xyyzz = primBuffer.data(gkoff + 210 * idx + 117);

                auto gk_xzz_xyzzz = primBuffer.data(gkoff + 210 * idx + 118);

                auto gk_xzz_xzzzz = primBuffer.data(gkoff + 210 * idx + 119);

                auto gk_xzz_yyyyy = primBuffer.data(gkoff + 210 * idx + 120);

                auto gk_xzz_yyyyz = primBuffer.data(gkoff + 210 * idx + 121);

                auto gk_xzz_yyyzz = primBuffer.data(gkoff + 210 * idx + 122);

                auto gk_xzz_yyzzz = primBuffer.data(gkoff + 210 * idx + 123);

                auto gk_xzz_yzzzz = primBuffer.data(gkoff + 210 * idx + 124);

                auto gk_xzz_zzzzz = primBuffer.data(gkoff + 210 * idx + 125);

                auto gk_yyy_xxxxx = primBuffer.data(gkoff + 210 * idx + 126);

                auto gk_yyy_xxxxy = primBuffer.data(gkoff + 210 * idx + 127);

                auto gk_yyy_xxxxz = primBuffer.data(gkoff + 210 * idx + 128);

                auto gk_yyy_xxxyy = primBuffer.data(gkoff + 210 * idx + 129);

                auto gk_yyy_xxxyz = primBuffer.data(gkoff + 210 * idx + 130);

                auto gk_yyy_xxxzz = primBuffer.data(gkoff + 210 * idx + 131);

                auto gk_yyy_xxyyy = primBuffer.data(gkoff + 210 * idx + 132);

                auto gk_yyy_xxyyz = primBuffer.data(gkoff + 210 * idx + 133);

                auto gk_yyy_xxyzz = primBuffer.data(gkoff + 210 * idx + 134);

                auto gk_yyy_xxzzz = primBuffer.data(gkoff + 210 * idx + 135);

                auto gk_yyy_xyyyy = primBuffer.data(gkoff + 210 * idx + 136);

                auto gk_yyy_xyyyz = primBuffer.data(gkoff + 210 * idx + 137);

                auto gk_yyy_xyyzz = primBuffer.data(gkoff + 210 * idx + 138);

                auto gk_yyy_xyzzz = primBuffer.data(gkoff + 210 * idx + 139);

                auto gk_yyy_xzzzz = primBuffer.data(gkoff + 210 * idx + 140);

                auto gk_yyy_yyyyy = primBuffer.data(gkoff + 210 * idx + 141);

                auto gk_yyy_yyyyz = primBuffer.data(gkoff + 210 * idx + 142);

                auto gk_yyy_yyyzz = primBuffer.data(gkoff + 210 * idx + 143);

                auto gk_yyy_yyzzz = primBuffer.data(gkoff + 210 * idx + 144);

                auto gk_yyy_yzzzz = primBuffer.data(gkoff + 210 * idx + 145);

                auto gk_yyy_zzzzz = primBuffer.data(gkoff + 210 * idx + 146);

                auto gk_yyz_xxxxx = primBuffer.data(gkoff + 210 * idx + 147);

                auto gk_yyz_xxxxy = primBuffer.data(gkoff + 210 * idx + 148);

                auto gk_yyz_xxxxz = primBuffer.data(gkoff + 210 * idx + 149);

                auto gk_yyz_xxxyy = primBuffer.data(gkoff + 210 * idx + 150);

                auto gk_yyz_xxxyz = primBuffer.data(gkoff + 210 * idx + 151);

                auto gk_yyz_xxxzz = primBuffer.data(gkoff + 210 * idx + 152);

                auto gk_yyz_xxyyy = primBuffer.data(gkoff + 210 * idx + 153);

                auto gk_yyz_xxyyz = primBuffer.data(gkoff + 210 * idx + 154);

                auto gk_yyz_xxyzz = primBuffer.data(gkoff + 210 * idx + 155);

                auto gk_yyz_xxzzz = primBuffer.data(gkoff + 210 * idx + 156);

                auto gk_yyz_xyyyy = primBuffer.data(gkoff + 210 * idx + 157);

                auto gk_yyz_xyyyz = primBuffer.data(gkoff + 210 * idx + 158);

                auto gk_yyz_xyyzz = primBuffer.data(gkoff + 210 * idx + 159);

                auto gk_yyz_xyzzz = primBuffer.data(gkoff + 210 * idx + 160);

                auto gk_yyz_xzzzz = primBuffer.data(gkoff + 210 * idx + 161);

                auto gk_yyz_yyyyy = primBuffer.data(gkoff + 210 * idx + 162);

                auto gk_yyz_yyyyz = primBuffer.data(gkoff + 210 * idx + 163);

                auto gk_yyz_yyyzz = primBuffer.data(gkoff + 210 * idx + 164);

                auto gk_yyz_yyzzz = primBuffer.data(gkoff + 210 * idx + 165);

                auto gk_yyz_yzzzz = primBuffer.data(gkoff + 210 * idx + 166);

                auto gk_yyz_zzzzz = primBuffer.data(gkoff + 210 * idx + 167);

                auto gk_yzz_xxxxx = primBuffer.data(gkoff + 210 * idx + 168);

                auto gk_yzz_xxxxy = primBuffer.data(gkoff + 210 * idx + 169);

                auto gk_yzz_xxxxz = primBuffer.data(gkoff + 210 * idx + 170);

                auto gk_yzz_xxxyy = primBuffer.data(gkoff + 210 * idx + 171);

                auto gk_yzz_xxxyz = primBuffer.data(gkoff + 210 * idx + 172);

                auto gk_yzz_xxxzz = primBuffer.data(gkoff + 210 * idx + 173);

                auto gk_yzz_xxyyy = primBuffer.data(gkoff + 210 * idx + 174);

                auto gk_yzz_xxyyz = primBuffer.data(gkoff + 210 * idx + 175);

                auto gk_yzz_xxyzz = primBuffer.data(gkoff + 210 * idx + 176);

                auto gk_yzz_xxzzz = primBuffer.data(gkoff + 210 * idx + 177);

                auto gk_yzz_xyyyy = primBuffer.data(gkoff + 210 * idx + 178);

                auto gk_yzz_xyyyz = primBuffer.data(gkoff + 210 * idx + 179);

                auto gk_yzz_xyyzz = primBuffer.data(gkoff + 210 * idx + 180);

                auto gk_yzz_xyzzz = primBuffer.data(gkoff + 210 * idx + 181);

                auto gk_yzz_xzzzz = primBuffer.data(gkoff + 210 * idx + 182);

                auto gk_yzz_yyyyy = primBuffer.data(gkoff + 210 * idx + 183);

                auto gk_yzz_yyyyz = primBuffer.data(gkoff + 210 * idx + 184);

                auto gk_yzz_yyyzz = primBuffer.data(gkoff + 210 * idx + 185);

                auto gk_yzz_yyzzz = primBuffer.data(gkoff + 210 * idx + 186);

                auto gk_yzz_yzzzz = primBuffer.data(gkoff + 210 * idx + 187);

                auto gk_yzz_zzzzz = primBuffer.data(gkoff + 210 * idx + 188);

                auto gk_zzz_xxxxx = primBuffer.data(gkoff + 210 * idx + 189);

                auto gk_zzz_xxxxy = primBuffer.data(gkoff + 210 * idx + 190);

                auto gk_zzz_xxxxz = primBuffer.data(gkoff + 210 * idx + 191);

                auto gk_zzz_xxxyy = primBuffer.data(gkoff + 210 * idx + 192);

                auto gk_zzz_xxxyz = primBuffer.data(gkoff + 210 * idx + 193);

                auto gk_zzz_xxxzz = primBuffer.data(gkoff + 210 * idx + 194);

                auto gk_zzz_xxyyy = primBuffer.data(gkoff + 210 * idx + 195);

                auto gk_zzz_xxyyz = primBuffer.data(gkoff + 210 * idx + 196);

                auto gk_zzz_xxyzz = primBuffer.data(gkoff + 210 * idx + 197);

                auto gk_zzz_xxzzz = primBuffer.data(gkoff + 210 * idx + 198);

                auto gk_zzz_xyyyy = primBuffer.data(gkoff + 210 * idx + 199);

                auto gk_zzz_xyyyz = primBuffer.data(gkoff + 210 * idx + 200);

                auto gk_zzz_xyyzz = primBuffer.data(gkoff + 210 * idx + 201);

                auto gk_zzz_xyzzz = primBuffer.data(gkoff + 210 * idx + 202);

                auto gk_zzz_xzzzz = primBuffer.data(gkoff + 210 * idx + 203);

                auto gk_zzz_yyyyy = primBuffer.data(gkoff + 210 * idx + 204);

                auto gk_zzz_yyyyz = primBuffer.data(gkoff + 210 * idx + 205);

                auto gk_zzz_yyyzz = primBuffer.data(gkoff + 210 * idx + 206);

                auto gk_zzz_yyzzz = primBuffer.data(gkoff + 210 * idx + 207);

                auto gk_zzz_yzzzz = primBuffer.data(gkoff + 210 * idx + 208);

                auto gk_zzz_zzzzz = primBuffer.data(gkoff + 210 * idx + 209);

                // set up pointers to (D|g(r,r')|SI)^(m) integrals

                auto g20_xx_xxxxxx = primBuffer.data(g20off + 168 * idx);

                auto g20_xx_xxxxxy = primBuffer.data(g20off + 168 * idx + 1);

                auto g20_xx_xxxxxz = primBuffer.data(g20off + 168 * idx + 2);

                auto g20_xx_xxxxyy = primBuffer.data(g20off + 168 * idx + 3);

                auto g20_xx_xxxxyz = primBuffer.data(g20off + 168 * idx + 4);

                auto g20_xx_xxxxzz = primBuffer.data(g20off + 168 * idx + 5);

                auto g20_xx_xxxyyy = primBuffer.data(g20off + 168 * idx + 6);

                auto g20_xx_xxxyyz = primBuffer.data(g20off + 168 * idx + 7);

                auto g20_xx_xxxyzz = primBuffer.data(g20off + 168 * idx + 8);

                auto g20_xx_xxxzzz = primBuffer.data(g20off + 168 * idx + 9);

                auto g20_xx_xxyyyy = primBuffer.data(g20off + 168 * idx + 10);

                auto g20_xx_xxyyyz = primBuffer.data(g20off + 168 * idx + 11);

                auto g20_xx_xxyyzz = primBuffer.data(g20off + 168 * idx + 12);

                auto g20_xx_xxyzzz = primBuffer.data(g20off + 168 * idx + 13);

                auto g20_xx_xxzzzz = primBuffer.data(g20off + 168 * idx + 14);

                auto g20_xx_xyyyyy = primBuffer.data(g20off + 168 * idx + 15);

                auto g20_xx_xyyyyz = primBuffer.data(g20off + 168 * idx + 16);

                auto g20_xx_xyyyzz = primBuffer.data(g20off + 168 * idx + 17);

                auto g20_xx_xyyzzz = primBuffer.data(g20off + 168 * idx + 18);

                auto g20_xx_xyzzzz = primBuffer.data(g20off + 168 * idx + 19);

                auto g20_xx_xzzzzz = primBuffer.data(g20off + 168 * idx + 20);

                auto g20_xx_yyyyyy = primBuffer.data(g20off + 168 * idx + 21);

                auto g20_xx_yyyyyz = primBuffer.data(g20off + 168 * idx + 22);

                auto g20_xx_yyyyzz = primBuffer.data(g20off + 168 * idx + 23);

                auto g20_xx_yyyzzz = primBuffer.data(g20off + 168 * idx + 24);

                auto g20_xx_yyzzzz = primBuffer.data(g20off + 168 * idx + 25);

                auto g20_xx_yzzzzz = primBuffer.data(g20off + 168 * idx + 26);

                auto g20_xx_zzzzzz = primBuffer.data(g20off + 168 * idx + 27);

                auto g20_xy_xxxxxx = primBuffer.data(g20off + 168 * idx + 28);

                auto g20_xy_xxxxxy = primBuffer.data(g20off + 168 * idx + 29);

                auto g20_xy_xxxxxz = primBuffer.data(g20off + 168 * idx + 30);

                auto g20_xy_xxxxyy = primBuffer.data(g20off + 168 * idx + 31);

                auto g20_xy_xxxxyz = primBuffer.data(g20off + 168 * idx + 32);

                auto g20_xy_xxxxzz = primBuffer.data(g20off + 168 * idx + 33);

                auto g20_xy_xxxyyy = primBuffer.data(g20off + 168 * idx + 34);

                auto g20_xy_xxxyyz = primBuffer.data(g20off + 168 * idx + 35);

                auto g20_xy_xxxyzz = primBuffer.data(g20off + 168 * idx + 36);

                auto g20_xy_xxxzzz = primBuffer.data(g20off + 168 * idx + 37);

                auto g20_xy_xxyyyy = primBuffer.data(g20off + 168 * idx + 38);

                auto g20_xy_xxyyyz = primBuffer.data(g20off + 168 * idx + 39);

                auto g20_xy_xxyyzz = primBuffer.data(g20off + 168 * idx + 40);

                auto g20_xy_xxyzzz = primBuffer.data(g20off + 168 * idx + 41);

                auto g20_xy_xxzzzz = primBuffer.data(g20off + 168 * idx + 42);

                auto g20_xy_xyyyyy = primBuffer.data(g20off + 168 * idx + 43);

                auto g20_xy_xyyyyz = primBuffer.data(g20off + 168 * idx + 44);

                auto g20_xy_xyyyzz = primBuffer.data(g20off + 168 * idx + 45);

                auto g20_xy_xyyzzz = primBuffer.data(g20off + 168 * idx + 46);

                auto g20_xy_xyzzzz = primBuffer.data(g20off + 168 * idx + 47);

                auto g20_xy_xzzzzz = primBuffer.data(g20off + 168 * idx + 48);

                auto g20_xy_yyyyyy = primBuffer.data(g20off + 168 * idx + 49);

                auto g20_xy_yyyyyz = primBuffer.data(g20off + 168 * idx + 50);

                auto g20_xy_yyyyzz = primBuffer.data(g20off + 168 * idx + 51);

                auto g20_xy_yyyzzz = primBuffer.data(g20off + 168 * idx + 52);

                auto g20_xy_yyzzzz = primBuffer.data(g20off + 168 * idx + 53);

                auto g20_xy_yzzzzz = primBuffer.data(g20off + 168 * idx + 54);

                auto g20_xy_zzzzzz = primBuffer.data(g20off + 168 * idx + 55);

                auto g20_xz_xxxxxx = primBuffer.data(g20off + 168 * idx + 56);

                auto g20_xz_xxxxxy = primBuffer.data(g20off + 168 * idx + 57);

                auto g20_xz_xxxxxz = primBuffer.data(g20off + 168 * idx + 58);

                auto g20_xz_xxxxyy = primBuffer.data(g20off + 168 * idx + 59);

                auto g20_xz_xxxxyz = primBuffer.data(g20off + 168 * idx + 60);

                auto g20_xz_xxxxzz = primBuffer.data(g20off + 168 * idx + 61);

                auto g20_xz_xxxyyy = primBuffer.data(g20off + 168 * idx + 62);

                auto g20_xz_xxxyyz = primBuffer.data(g20off + 168 * idx + 63);

                auto g20_xz_xxxyzz = primBuffer.data(g20off + 168 * idx + 64);

                auto g20_xz_xxxzzz = primBuffer.data(g20off + 168 * idx + 65);

                auto g20_xz_xxyyyy = primBuffer.data(g20off + 168 * idx + 66);

                auto g20_xz_xxyyyz = primBuffer.data(g20off + 168 * idx + 67);

                auto g20_xz_xxyyzz = primBuffer.data(g20off + 168 * idx + 68);

                auto g20_xz_xxyzzz = primBuffer.data(g20off + 168 * idx + 69);

                auto g20_xz_xxzzzz = primBuffer.data(g20off + 168 * idx + 70);

                auto g20_xz_xyyyyy = primBuffer.data(g20off + 168 * idx + 71);

                auto g20_xz_xyyyyz = primBuffer.data(g20off + 168 * idx + 72);

                auto g20_xz_xyyyzz = primBuffer.data(g20off + 168 * idx + 73);

                auto g20_xz_xyyzzz = primBuffer.data(g20off + 168 * idx + 74);

                auto g20_xz_xyzzzz = primBuffer.data(g20off + 168 * idx + 75);

                auto g20_xz_xzzzzz = primBuffer.data(g20off + 168 * idx + 76);

                auto g20_xz_yyyyyy = primBuffer.data(g20off + 168 * idx + 77);

                auto g20_xz_yyyyyz = primBuffer.data(g20off + 168 * idx + 78);

                auto g20_xz_yyyyzz = primBuffer.data(g20off + 168 * idx + 79);

                auto g20_xz_yyyzzz = primBuffer.data(g20off + 168 * idx + 80);

                auto g20_xz_yyzzzz = primBuffer.data(g20off + 168 * idx + 81);

                auto g20_xz_yzzzzz = primBuffer.data(g20off + 168 * idx + 82);

                auto g20_xz_zzzzzz = primBuffer.data(g20off + 168 * idx + 83);

                auto g20_yy_xxxxxx = primBuffer.data(g20off + 168 * idx + 84);

                auto g20_yy_xxxxxy = primBuffer.data(g20off + 168 * idx + 85);

                auto g20_yy_xxxxxz = primBuffer.data(g20off + 168 * idx + 86);

                auto g20_yy_xxxxyy = primBuffer.data(g20off + 168 * idx + 87);

                auto g20_yy_xxxxyz = primBuffer.data(g20off + 168 * idx + 88);

                auto g20_yy_xxxxzz = primBuffer.data(g20off + 168 * idx + 89);

                auto g20_yy_xxxyyy = primBuffer.data(g20off + 168 * idx + 90);

                auto g20_yy_xxxyyz = primBuffer.data(g20off + 168 * idx + 91);

                auto g20_yy_xxxyzz = primBuffer.data(g20off + 168 * idx + 92);

                auto g20_yy_xxxzzz = primBuffer.data(g20off + 168 * idx + 93);

                auto g20_yy_xxyyyy = primBuffer.data(g20off + 168 * idx + 94);

                auto g20_yy_xxyyyz = primBuffer.data(g20off + 168 * idx + 95);

                auto g20_yy_xxyyzz = primBuffer.data(g20off + 168 * idx + 96);

                auto g20_yy_xxyzzz = primBuffer.data(g20off + 168 * idx + 97);

                auto g20_yy_xxzzzz = primBuffer.data(g20off + 168 * idx + 98);

                auto g20_yy_xyyyyy = primBuffer.data(g20off + 168 * idx + 99);

                auto g20_yy_xyyyyz = primBuffer.data(g20off + 168 * idx + 100);

                auto g20_yy_xyyyzz = primBuffer.data(g20off + 168 * idx + 101);

                auto g20_yy_xyyzzz = primBuffer.data(g20off + 168 * idx + 102);

                auto g20_yy_xyzzzz = primBuffer.data(g20off + 168 * idx + 103);

                auto g20_yy_xzzzzz = primBuffer.data(g20off + 168 * idx + 104);

                auto g20_yy_yyyyyy = primBuffer.data(g20off + 168 * idx + 105);

                auto g20_yy_yyyyyz = primBuffer.data(g20off + 168 * idx + 106);

                auto g20_yy_yyyyzz = primBuffer.data(g20off + 168 * idx + 107);

                auto g20_yy_yyyzzz = primBuffer.data(g20off + 168 * idx + 108);

                auto g20_yy_yyzzzz = primBuffer.data(g20off + 168 * idx + 109);

                auto g20_yy_yzzzzz = primBuffer.data(g20off + 168 * idx + 110);

                auto g20_yy_zzzzzz = primBuffer.data(g20off + 168 * idx + 111);

                auto g20_yz_xxxxxx = primBuffer.data(g20off + 168 * idx + 112);

                auto g20_yz_xxxxxy = primBuffer.data(g20off + 168 * idx + 113);

                auto g20_yz_xxxxxz = primBuffer.data(g20off + 168 * idx + 114);

                auto g20_yz_xxxxyy = primBuffer.data(g20off + 168 * idx + 115);

                auto g20_yz_xxxxyz = primBuffer.data(g20off + 168 * idx + 116);

                auto g20_yz_xxxxzz = primBuffer.data(g20off + 168 * idx + 117);

                auto g20_yz_xxxyyy = primBuffer.data(g20off + 168 * idx + 118);

                auto g20_yz_xxxyyz = primBuffer.data(g20off + 168 * idx + 119);

                auto g20_yz_xxxyzz = primBuffer.data(g20off + 168 * idx + 120);

                auto g20_yz_xxxzzz = primBuffer.data(g20off + 168 * idx + 121);

                auto g20_yz_xxyyyy = primBuffer.data(g20off + 168 * idx + 122);

                auto g20_yz_xxyyyz = primBuffer.data(g20off + 168 * idx + 123);

                auto g20_yz_xxyyzz = primBuffer.data(g20off + 168 * idx + 124);

                auto g20_yz_xxyzzz = primBuffer.data(g20off + 168 * idx + 125);

                auto g20_yz_xxzzzz = primBuffer.data(g20off + 168 * idx + 126);

                auto g20_yz_xyyyyy = primBuffer.data(g20off + 168 * idx + 127);

                auto g20_yz_xyyyyz = primBuffer.data(g20off + 168 * idx + 128);

                auto g20_yz_xyyyzz = primBuffer.data(g20off + 168 * idx + 129);

                auto g20_yz_xyyzzz = primBuffer.data(g20off + 168 * idx + 130);

                auto g20_yz_xyzzzz = primBuffer.data(g20off + 168 * idx + 131);

                auto g20_yz_xzzzzz = primBuffer.data(g20off + 168 * idx + 132);

                auto g20_yz_yyyyyy = primBuffer.data(g20off + 168 * idx + 133);

                auto g20_yz_yyyyyz = primBuffer.data(g20off + 168 * idx + 134);

                auto g20_yz_yyyyzz = primBuffer.data(g20off + 168 * idx + 135);

                auto g20_yz_yyyzzz = primBuffer.data(g20off + 168 * idx + 136);

                auto g20_yz_yyzzzz = primBuffer.data(g20off + 168 * idx + 137);

                auto g20_yz_yzzzzz = primBuffer.data(g20off + 168 * idx + 138);

                auto g20_yz_zzzzzz = primBuffer.data(g20off + 168 * idx + 139);

                auto g20_zz_xxxxxx = primBuffer.data(g20off + 168 * idx + 140);

                auto g20_zz_xxxxxy = primBuffer.data(g20off + 168 * idx + 141);

                auto g20_zz_xxxxxz = primBuffer.data(g20off + 168 * idx + 142);

                auto g20_zz_xxxxyy = primBuffer.data(g20off + 168 * idx + 143);

                auto g20_zz_xxxxyz = primBuffer.data(g20off + 168 * idx + 144);

                auto g20_zz_xxxxzz = primBuffer.data(g20off + 168 * idx + 145);

                auto g20_zz_xxxyyy = primBuffer.data(g20off + 168 * idx + 146);

                auto g20_zz_xxxyyz = primBuffer.data(g20off + 168 * idx + 147);

                auto g20_zz_xxxyzz = primBuffer.data(g20off + 168 * idx + 148);

                auto g20_zz_xxxzzz = primBuffer.data(g20off + 168 * idx + 149);

                auto g20_zz_xxyyyy = primBuffer.data(g20off + 168 * idx + 150);

                auto g20_zz_xxyyyz = primBuffer.data(g20off + 168 * idx + 151);

                auto g20_zz_xxyyzz = primBuffer.data(g20off + 168 * idx + 152);

                auto g20_zz_xxyzzz = primBuffer.data(g20off + 168 * idx + 153);

                auto g20_zz_xxzzzz = primBuffer.data(g20off + 168 * idx + 154);

                auto g20_zz_xyyyyy = primBuffer.data(g20off + 168 * idx + 155);

                auto g20_zz_xyyyyz = primBuffer.data(g20off + 168 * idx + 156);

                auto g20_zz_xyyyzz = primBuffer.data(g20off + 168 * idx + 157);

                auto g20_zz_xyyzzz = primBuffer.data(g20off + 168 * idx + 158);

                auto g20_zz_xyzzzz = primBuffer.data(g20off + 168 * idx + 159);

                auto g20_zz_xzzzzz = primBuffer.data(g20off + 168 * idx + 160);

                auto g20_zz_yyyyyy = primBuffer.data(g20off + 168 * idx + 161);

                auto g20_zz_yyyyyz = primBuffer.data(g20off + 168 * idx + 162);

                auto g20_zz_yyyyzz = primBuffer.data(g20off + 168 * idx + 163);

                auto g20_zz_yyyzzz = primBuffer.data(g20off + 168 * idx + 164);

                auto g20_zz_yyzzzz = primBuffer.data(g20off + 168 * idx + 165);

                auto g20_zz_yzzzzz = primBuffer.data(g20off + 168 * idx + 166);

                auto g20_zz_zzzzzz = primBuffer.data(g20off + 168 * idx + 167);

                // set up pointers to (D|g(r,r')|SI)^(m+1) integrals

                auto g21_xx_xxxxxx = primBuffer.data(g21off + 168 * idx);

                auto g21_xx_xxxxxy = primBuffer.data(g21off + 168 * idx + 1);

                auto g21_xx_xxxxxz = primBuffer.data(g21off + 168 * idx + 2);

                auto g21_xx_xxxxyy = primBuffer.data(g21off + 168 * idx + 3);

                auto g21_xx_xxxxyz = primBuffer.data(g21off + 168 * idx + 4);

                auto g21_xx_xxxxzz = primBuffer.data(g21off + 168 * idx + 5);

                auto g21_xx_xxxyyy = primBuffer.data(g21off + 168 * idx + 6);

                auto g21_xx_xxxyyz = primBuffer.data(g21off + 168 * idx + 7);

                auto g21_xx_xxxyzz = primBuffer.data(g21off + 168 * idx + 8);

                auto g21_xx_xxxzzz = primBuffer.data(g21off + 168 * idx + 9);

                auto g21_xx_xxyyyy = primBuffer.data(g21off + 168 * idx + 10);

                auto g21_xx_xxyyyz = primBuffer.data(g21off + 168 * idx + 11);

                auto g21_xx_xxyyzz = primBuffer.data(g21off + 168 * idx + 12);

                auto g21_xx_xxyzzz = primBuffer.data(g21off + 168 * idx + 13);

                auto g21_xx_xxzzzz = primBuffer.data(g21off + 168 * idx + 14);

                auto g21_xx_xyyyyy = primBuffer.data(g21off + 168 * idx + 15);

                auto g21_xx_xyyyyz = primBuffer.data(g21off + 168 * idx + 16);

                auto g21_xx_xyyyzz = primBuffer.data(g21off + 168 * idx + 17);

                auto g21_xx_xyyzzz = primBuffer.data(g21off + 168 * idx + 18);

                auto g21_xx_xyzzzz = primBuffer.data(g21off + 168 * idx + 19);

                auto g21_xx_xzzzzz = primBuffer.data(g21off + 168 * idx + 20);

                auto g21_xx_yyyyyy = primBuffer.data(g21off + 168 * idx + 21);

                auto g21_xx_yyyyyz = primBuffer.data(g21off + 168 * idx + 22);

                auto g21_xx_yyyyzz = primBuffer.data(g21off + 168 * idx + 23);

                auto g21_xx_yyyzzz = primBuffer.data(g21off + 168 * idx + 24);

                auto g21_xx_yyzzzz = primBuffer.data(g21off + 168 * idx + 25);

                auto g21_xx_yzzzzz = primBuffer.data(g21off + 168 * idx + 26);

                auto g21_xx_zzzzzz = primBuffer.data(g21off + 168 * idx + 27);

                auto g21_xy_xxxxxx = primBuffer.data(g21off + 168 * idx + 28);

                auto g21_xy_xxxxxy = primBuffer.data(g21off + 168 * idx + 29);

                auto g21_xy_xxxxxz = primBuffer.data(g21off + 168 * idx + 30);

                auto g21_xy_xxxxyy = primBuffer.data(g21off + 168 * idx + 31);

                auto g21_xy_xxxxyz = primBuffer.data(g21off + 168 * idx + 32);

                auto g21_xy_xxxxzz = primBuffer.data(g21off + 168 * idx + 33);

                auto g21_xy_xxxyyy = primBuffer.data(g21off + 168 * idx + 34);

                auto g21_xy_xxxyyz = primBuffer.data(g21off + 168 * idx + 35);

                auto g21_xy_xxxyzz = primBuffer.data(g21off + 168 * idx + 36);

                auto g21_xy_xxxzzz = primBuffer.data(g21off + 168 * idx + 37);

                auto g21_xy_xxyyyy = primBuffer.data(g21off + 168 * idx + 38);

                auto g21_xy_xxyyyz = primBuffer.data(g21off + 168 * idx + 39);

                auto g21_xy_xxyyzz = primBuffer.data(g21off + 168 * idx + 40);

                auto g21_xy_xxyzzz = primBuffer.data(g21off + 168 * idx + 41);

                auto g21_xy_xxzzzz = primBuffer.data(g21off + 168 * idx + 42);

                auto g21_xy_xyyyyy = primBuffer.data(g21off + 168 * idx + 43);

                auto g21_xy_xyyyyz = primBuffer.data(g21off + 168 * idx + 44);

                auto g21_xy_xyyyzz = primBuffer.data(g21off + 168 * idx + 45);

                auto g21_xy_xyyzzz = primBuffer.data(g21off + 168 * idx + 46);

                auto g21_xy_xyzzzz = primBuffer.data(g21off + 168 * idx + 47);

                auto g21_xy_xzzzzz = primBuffer.data(g21off + 168 * idx + 48);

                auto g21_xy_yyyyyy = primBuffer.data(g21off + 168 * idx + 49);

                auto g21_xy_yyyyyz = primBuffer.data(g21off + 168 * idx + 50);

                auto g21_xy_yyyyzz = primBuffer.data(g21off + 168 * idx + 51);

                auto g21_xy_yyyzzz = primBuffer.data(g21off + 168 * idx + 52);

                auto g21_xy_yyzzzz = primBuffer.data(g21off + 168 * idx + 53);

                auto g21_xy_yzzzzz = primBuffer.data(g21off + 168 * idx + 54);

                auto g21_xy_zzzzzz = primBuffer.data(g21off + 168 * idx + 55);

                auto g21_xz_xxxxxx = primBuffer.data(g21off + 168 * idx + 56);

                auto g21_xz_xxxxxy = primBuffer.data(g21off + 168 * idx + 57);

                auto g21_xz_xxxxxz = primBuffer.data(g21off + 168 * idx + 58);

                auto g21_xz_xxxxyy = primBuffer.data(g21off + 168 * idx + 59);

                auto g21_xz_xxxxyz = primBuffer.data(g21off + 168 * idx + 60);

                auto g21_xz_xxxxzz = primBuffer.data(g21off + 168 * idx + 61);

                auto g21_xz_xxxyyy = primBuffer.data(g21off + 168 * idx + 62);

                auto g21_xz_xxxyyz = primBuffer.data(g21off + 168 * idx + 63);

                auto g21_xz_xxxyzz = primBuffer.data(g21off + 168 * idx + 64);

                auto g21_xz_xxxzzz = primBuffer.data(g21off + 168 * idx + 65);

                auto g21_xz_xxyyyy = primBuffer.data(g21off + 168 * idx + 66);

                auto g21_xz_xxyyyz = primBuffer.data(g21off + 168 * idx + 67);

                auto g21_xz_xxyyzz = primBuffer.data(g21off + 168 * idx + 68);

                auto g21_xz_xxyzzz = primBuffer.data(g21off + 168 * idx + 69);

                auto g21_xz_xxzzzz = primBuffer.data(g21off + 168 * idx + 70);

                auto g21_xz_xyyyyy = primBuffer.data(g21off + 168 * idx + 71);

                auto g21_xz_xyyyyz = primBuffer.data(g21off + 168 * idx + 72);

                auto g21_xz_xyyyzz = primBuffer.data(g21off + 168 * idx + 73);

                auto g21_xz_xyyzzz = primBuffer.data(g21off + 168 * idx + 74);

                auto g21_xz_xyzzzz = primBuffer.data(g21off + 168 * idx + 75);

                auto g21_xz_xzzzzz = primBuffer.data(g21off + 168 * idx + 76);

                auto g21_xz_yyyyyy = primBuffer.data(g21off + 168 * idx + 77);

                auto g21_xz_yyyyyz = primBuffer.data(g21off + 168 * idx + 78);

                auto g21_xz_yyyyzz = primBuffer.data(g21off + 168 * idx + 79);

                auto g21_xz_yyyzzz = primBuffer.data(g21off + 168 * idx + 80);

                auto g21_xz_yyzzzz = primBuffer.data(g21off + 168 * idx + 81);

                auto g21_xz_yzzzzz = primBuffer.data(g21off + 168 * idx + 82);

                auto g21_xz_zzzzzz = primBuffer.data(g21off + 168 * idx + 83);

                auto g21_yy_xxxxxx = primBuffer.data(g21off + 168 * idx + 84);

                auto g21_yy_xxxxxy = primBuffer.data(g21off + 168 * idx + 85);

                auto g21_yy_xxxxxz = primBuffer.data(g21off + 168 * idx + 86);

                auto g21_yy_xxxxyy = primBuffer.data(g21off + 168 * idx + 87);

                auto g21_yy_xxxxyz = primBuffer.data(g21off + 168 * idx + 88);

                auto g21_yy_xxxxzz = primBuffer.data(g21off + 168 * idx + 89);

                auto g21_yy_xxxyyy = primBuffer.data(g21off + 168 * idx + 90);

                auto g21_yy_xxxyyz = primBuffer.data(g21off + 168 * idx + 91);

                auto g21_yy_xxxyzz = primBuffer.data(g21off + 168 * idx + 92);

                auto g21_yy_xxxzzz = primBuffer.data(g21off + 168 * idx + 93);

                auto g21_yy_xxyyyy = primBuffer.data(g21off + 168 * idx + 94);

                auto g21_yy_xxyyyz = primBuffer.data(g21off + 168 * idx + 95);

                auto g21_yy_xxyyzz = primBuffer.data(g21off + 168 * idx + 96);

                auto g21_yy_xxyzzz = primBuffer.data(g21off + 168 * idx + 97);

                auto g21_yy_xxzzzz = primBuffer.data(g21off + 168 * idx + 98);

                auto g21_yy_xyyyyy = primBuffer.data(g21off + 168 * idx + 99);

                auto g21_yy_xyyyyz = primBuffer.data(g21off + 168 * idx + 100);

                auto g21_yy_xyyyzz = primBuffer.data(g21off + 168 * idx + 101);

                auto g21_yy_xyyzzz = primBuffer.data(g21off + 168 * idx + 102);

                auto g21_yy_xyzzzz = primBuffer.data(g21off + 168 * idx + 103);

                auto g21_yy_xzzzzz = primBuffer.data(g21off + 168 * idx + 104);

                auto g21_yy_yyyyyy = primBuffer.data(g21off + 168 * idx + 105);

                auto g21_yy_yyyyyz = primBuffer.data(g21off + 168 * idx + 106);

                auto g21_yy_yyyyzz = primBuffer.data(g21off + 168 * idx + 107);

                auto g21_yy_yyyzzz = primBuffer.data(g21off + 168 * idx + 108);

                auto g21_yy_yyzzzz = primBuffer.data(g21off + 168 * idx + 109);

                auto g21_yy_yzzzzz = primBuffer.data(g21off + 168 * idx + 110);

                auto g21_yy_zzzzzz = primBuffer.data(g21off + 168 * idx + 111);

                auto g21_yz_xxxxxx = primBuffer.data(g21off + 168 * idx + 112);

                auto g21_yz_xxxxxy = primBuffer.data(g21off + 168 * idx + 113);

                auto g21_yz_xxxxxz = primBuffer.data(g21off + 168 * idx + 114);

                auto g21_yz_xxxxyy = primBuffer.data(g21off + 168 * idx + 115);

                auto g21_yz_xxxxyz = primBuffer.data(g21off + 168 * idx + 116);

                auto g21_yz_xxxxzz = primBuffer.data(g21off + 168 * idx + 117);

                auto g21_yz_xxxyyy = primBuffer.data(g21off + 168 * idx + 118);

                auto g21_yz_xxxyyz = primBuffer.data(g21off + 168 * idx + 119);

                auto g21_yz_xxxyzz = primBuffer.data(g21off + 168 * idx + 120);

                auto g21_yz_xxxzzz = primBuffer.data(g21off + 168 * idx + 121);

                auto g21_yz_xxyyyy = primBuffer.data(g21off + 168 * idx + 122);

                auto g21_yz_xxyyyz = primBuffer.data(g21off + 168 * idx + 123);

                auto g21_yz_xxyyzz = primBuffer.data(g21off + 168 * idx + 124);

                auto g21_yz_xxyzzz = primBuffer.data(g21off + 168 * idx + 125);

                auto g21_yz_xxzzzz = primBuffer.data(g21off + 168 * idx + 126);

                auto g21_yz_xyyyyy = primBuffer.data(g21off + 168 * idx + 127);

                auto g21_yz_xyyyyz = primBuffer.data(g21off + 168 * idx + 128);

                auto g21_yz_xyyyzz = primBuffer.data(g21off + 168 * idx + 129);

                auto g21_yz_xyyzzz = primBuffer.data(g21off + 168 * idx + 130);

                auto g21_yz_xyzzzz = primBuffer.data(g21off + 168 * idx + 131);

                auto g21_yz_xzzzzz = primBuffer.data(g21off + 168 * idx + 132);

                auto g21_yz_yyyyyy = primBuffer.data(g21off + 168 * idx + 133);

                auto g21_yz_yyyyyz = primBuffer.data(g21off + 168 * idx + 134);

                auto g21_yz_yyyyzz = primBuffer.data(g21off + 168 * idx + 135);

                auto g21_yz_yyyzzz = primBuffer.data(g21off + 168 * idx + 136);

                auto g21_yz_yyzzzz = primBuffer.data(g21off + 168 * idx + 137);

                auto g21_yz_yzzzzz = primBuffer.data(g21off + 168 * idx + 138);

                auto g21_yz_zzzzzz = primBuffer.data(g21off + 168 * idx + 139);

                auto g21_zz_xxxxxx = primBuffer.data(g21off + 168 * idx + 140);

                auto g21_zz_xxxxxy = primBuffer.data(g21off + 168 * idx + 141);

                auto g21_zz_xxxxxz = primBuffer.data(g21off + 168 * idx + 142);

                auto g21_zz_xxxxyy = primBuffer.data(g21off + 168 * idx + 143);

                auto g21_zz_xxxxyz = primBuffer.data(g21off + 168 * idx + 144);

                auto g21_zz_xxxxzz = primBuffer.data(g21off + 168 * idx + 145);

                auto g21_zz_xxxyyy = primBuffer.data(g21off + 168 * idx + 146);

                auto g21_zz_xxxyyz = primBuffer.data(g21off + 168 * idx + 147);

                auto g21_zz_xxxyzz = primBuffer.data(g21off + 168 * idx + 148);

                auto g21_zz_xxxzzz = primBuffer.data(g21off + 168 * idx + 149);

                auto g21_zz_xxyyyy = primBuffer.data(g21off + 168 * idx + 150);

                auto g21_zz_xxyyyz = primBuffer.data(g21off + 168 * idx + 151);

                auto g21_zz_xxyyzz = primBuffer.data(g21off + 168 * idx + 152);

                auto g21_zz_xxyzzz = primBuffer.data(g21off + 168 * idx + 153);

                auto g21_zz_xxzzzz = primBuffer.data(g21off + 168 * idx + 154);

                auto g21_zz_xyyyyy = primBuffer.data(g21off + 168 * idx + 155);

                auto g21_zz_xyyyyz = primBuffer.data(g21off + 168 * idx + 156);

                auto g21_zz_xyyyzz = primBuffer.data(g21off + 168 * idx + 157);

                auto g21_zz_xyyzzz = primBuffer.data(g21off + 168 * idx + 158);

                auto g21_zz_xyzzzz = primBuffer.data(g21off + 168 * idx + 159);

                auto g21_zz_xzzzzz = primBuffer.data(g21off + 168 * idx + 160);

                auto g21_zz_yyyyyy = primBuffer.data(g21off + 168 * idx + 161);

                auto g21_zz_yyyyyz = primBuffer.data(g21off + 168 * idx + 162);

                auto g21_zz_yyyyzz = primBuffer.data(g21off + 168 * idx + 163);

                auto g21_zz_yyyzzz = primBuffer.data(g21off + 168 * idx + 164);

                auto g21_zz_yyzzzz = primBuffer.data(g21off + 168 * idx + 165);

                auto g21_zz_yzzzzz = primBuffer.data(g21off + 168 * idx + 166);

                auto g21_zz_zzzzzz = primBuffer.data(g21off + 168 * idx + 167);

                // set up pointers to (F|g(r,r')|SI)^(m+1) integrals

                auto g11_xxx_xxxxxx = primBuffer.data(g11off + 280 * idx);

                auto g11_xxx_xxxxxy = primBuffer.data(g11off + 280 * idx + 1);

                auto g11_xxx_xxxxxz = primBuffer.data(g11off + 280 * idx + 2);

                auto g11_xxx_xxxxyy = primBuffer.data(g11off + 280 * idx + 3);

                auto g11_xxx_xxxxyz = primBuffer.data(g11off + 280 * idx + 4);

                auto g11_xxx_xxxxzz = primBuffer.data(g11off + 280 * idx + 5);

                auto g11_xxx_xxxyyy = primBuffer.data(g11off + 280 * idx + 6);

                auto g11_xxx_xxxyyz = primBuffer.data(g11off + 280 * idx + 7);

                auto g11_xxx_xxxyzz = primBuffer.data(g11off + 280 * idx + 8);

                auto g11_xxx_xxxzzz = primBuffer.data(g11off + 280 * idx + 9);

                auto g11_xxx_xxyyyy = primBuffer.data(g11off + 280 * idx + 10);

                auto g11_xxx_xxyyyz = primBuffer.data(g11off + 280 * idx + 11);

                auto g11_xxx_xxyyzz = primBuffer.data(g11off + 280 * idx + 12);

                auto g11_xxx_xxyzzz = primBuffer.data(g11off + 280 * idx + 13);

                auto g11_xxx_xxzzzz = primBuffer.data(g11off + 280 * idx + 14);

                auto g11_xxx_xyyyyy = primBuffer.data(g11off + 280 * idx + 15);

                auto g11_xxx_xyyyyz = primBuffer.data(g11off + 280 * idx + 16);

                auto g11_xxx_xyyyzz = primBuffer.data(g11off + 280 * idx + 17);

                auto g11_xxx_xyyzzz = primBuffer.data(g11off + 280 * idx + 18);

                auto g11_xxx_xyzzzz = primBuffer.data(g11off + 280 * idx + 19);

                auto g11_xxx_xzzzzz = primBuffer.data(g11off + 280 * idx + 20);

                auto g11_xxx_yyyyyy = primBuffer.data(g11off + 280 * idx + 21);

                auto g11_xxx_yyyyyz = primBuffer.data(g11off + 280 * idx + 22);

                auto g11_xxx_yyyyzz = primBuffer.data(g11off + 280 * idx + 23);

                auto g11_xxx_yyyzzz = primBuffer.data(g11off + 280 * idx + 24);

                auto g11_xxx_yyzzzz = primBuffer.data(g11off + 280 * idx + 25);

                auto g11_xxx_yzzzzz = primBuffer.data(g11off + 280 * idx + 26);

                auto g11_xxx_zzzzzz = primBuffer.data(g11off + 280 * idx + 27);

                auto g11_xxy_xxxxxx = primBuffer.data(g11off + 280 * idx + 28);

                auto g11_xxy_xxxxxy = primBuffer.data(g11off + 280 * idx + 29);

                auto g11_xxy_xxxxxz = primBuffer.data(g11off + 280 * idx + 30);

                auto g11_xxy_xxxxyy = primBuffer.data(g11off + 280 * idx + 31);

                auto g11_xxy_xxxxyz = primBuffer.data(g11off + 280 * idx + 32);

                auto g11_xxy_xxxxzz = primBuffer.data(g11off + 280 * idx + 33);

                auto g11_xxy_xxxyyy = primBuffer.data(g11off + 280 * idx + 34);

                auto g11_xxy_xxxyyz = primBuffer.data(g11off + 280 * idx + 35);

                auto g11_xxy_xxxyzz = primBuffer.data(g11off + 280 * idx + 36);

                auto g11_xxy_xxxzzz = primBuffer.data(g11off + 280 * idx + 37);

                auto g11_xxy_xxyyyy = primBuffer.data(g11off + 280 * idx + 38);

                auto g11_xxy_xxyyyz = primBuffer.data(g11off + 280 * idx + 39);

                auto g11_xxy_xxyyzz = primBuffer.data(g11off + 280 * idx + 40);

                auto g11_xxy_xxyzzz = primBuffer.data(g11off + 280 * idx + 41);

                auto g11_xxy_xxzzzz = primBuffer.data(g11off + 280 * idx + 42);

                auto g11_xxy_xyyyyy = primBuffer.data(g11off + 280 * idx + 43);

                auto g11_xxy_xyyyyz = primBuffer.data(g11off + 280 * idx + 44);

                auto g11_xxy_xyyyzz = primBuffer.data(g11off + 280 * idx + 45);

                auto g11_xxy_xyyzzz = primBuffer.data(g11off + 280 * idx + 46);

                auto g11_xxy_xyzzzz = primBuffer.data(g11off + 280 * idx + 47);

                auto g11_xxy_xzzzzz = primBuffer.data(g11off + 280 * idx + 48);

                auto g11_xxy_yyyyyy = primBuffer.data(g11off + 280 * idx + 49);

                auto g11_xxy_yyyyyz = primBuffer.data(g11off + 280 * idx + 50);

                auto g11_xxy_yyyyzz = primBuffer.data(g11off + 280 * idx + 51);

                auto g11_xxy_yyyzzz = primBuffer.data(g11off + 280 * idx + 52);

                auto g11_xxy_yyzzzz = primBuffer.data(g11off + 280 * idx + 53);

                auto g11_xxy_yzzzzz = primBuffer.data(g11off + 280 * idx + 54);

                auto g11_xxy_zzzzzz = primBuffer.data(g11off + 280 * idx + 55);

                auto g11_xxz_xxxxxx = primBuffer.data(g11off + 280 * idx + 56);

                auto g11_xxz_xxxxxy = primBuffer.data(g11off + 280 * idx + 57);

                auto g11_xxz_xxxxxz = primBuffer.data(g11off + 280 * idx + 58);

                auto g11_xxz_xxxxyy = primBuffer.data(g11off + 280 * idx + 59);

                auto g11_xxz_xxxxyz = primBuffer.data(g11off + 280 * idx + 60);

                auto g11_xxz_xxxxzz = primBuffer.data(g11off + 280 * idx + 61);

                auto g11_xxz_xxxyyy = primBuffer.data(g11off + 280 * idx + 62);

                auto g11_xxz_xxxyyz = primBuffer.data(g11off + 280 * idx + 63);

                auto g11_xxz_xxxyzz = primBuffer.data(g11off + 280 * idx + 64);

                auto g11_xxz_xxxzzz = primBuffer.data(g11off + 280 * idx + 65);

                auto g11_xxz_xxyyyy = primBuffer.data(g11off + 280 * idx + 66);

                auto g11_xxz_xxyyyz = primBuffer.data(g11off + 280 * idx + 67);

                auto g11_xxz_xxyyzz = primBuffer.data(g11off + 280 * idx + 68);

                auto g11_xxz_xxyzzz = primBuffer.data(g11off + 280 * idx + 69);

                auto g11_xxz_xxzzzz = primBuffer.data(g11off + 280 * idx + 70);

                auto g11_xxz_xyyyyy = primBuffer.data(g11off + 280 * idx + 71);

                auto g11_xxz_xyyyyz = primBuffer.data(g11off + 280 * idx + 72);

                auto g11_xxz_xyyyzz = primBuffer.data(g11off + 280 * idx + 73);

                auto g11_xxz_xyyzzz = primBuffer.data(g11off + 280 * idx + 74);

                auto g11_xxz_xyzzzz = primBuffer.data(g11off + 280 * idx + 75);

                auto g11_xxz_xzzzzz = primBuffer.data(g11off + 280 * idx + 76);

                auto g11_xxz_yyyyyy = primBuffer.data(g11off + 280 * idx + 77);

                auto g11_xxz_yyyyyz = primBuffer.data(g11off + 280 * idx + 78);

                auto g11_xxz_yyyyzz = primBuffer.data(g11off + 280 * idx + 79);

                auto g11_xxz_yyyzzz = primBuffer.data(g11off + 280 * idx + 80);

                auto g11_xxz_yyzzzz = primBuffer.data(g11off + 280 * idx + 81);

                auto g11_xxz_yzzzzz = primBuffer.data(g11off + 280 * idx + 82);

                auto g11_xxz_zzzzzz = primBuffer.data(g11off + 280 * idx + 83);

                auto g11_xyy_xxxxxx = primBuffer.data(g11off + 280 * idx + 84);

                auto g11_xyy_xxxxxy = primBuffer.data(g11off + 280 * idx + 85);

                auto g11_xyy_xxxxxz = primBuffer.data(g11off + 280 * idx + 86);

                auto g11_xyy_xxxxyy = primBuffer.data(g11off + 280 * idx + 87);

                auto g11_xyy_xxxxyz = primBuffer.data(g11off + 280 * idx + 88);

                auto g11_xyy_xxxxzz = primBuffer.data(g11off + 280 * idx + 89);

                auto g11_xyy_xxxyyy = primBuffer.data(g11off + 280 * idx + 90);

                auto g11_xyy_xxxyyz = primBuffer.data(g11off + 280 * idx + 91);

                auto g11_xyy_xxxyzz = primBuffer.data(g11off + 280 * idx + 92);

                auto g11_xyy_xxxzzz = primBuffer.data(g11off + 280 * idx + 93);

                auto g11_xyy_xxyyyy = primBuffer.data(g11off + 280 * idx + 94);

                auto g11_xyy_xxyyyz = primBuffer.data(g11off + 280 * idx + 95);

                auto g11_xyy_xxyyzz = primBuffer.data(g11off + 280 * idx + 96);

                auto g11_xyy_xxyzzz = primBuffer.data(g11off + 280 * idx + 97);

                auto g11_xyy_xxzzzz = primBuffer.data(g11off + 280 * idx + 98);

                auto g11_xyy_xyyyyy = primBuffer.data(g11off + 280 * idx + 99);

                auto g11_xyy_xyyyyz = primBuffer.data(g11off + 280 * idx + 100);

                auto g11_xyy_xyyyzz = primBuffer.data(g11off + 280 * idx + 101);

                auto g11_xyy_xyyzzz = primBuffer.data(g11off + 280 * idx + 102);

                auto g11_xyy_xyzzzz = primBuffer.data(g11off + 280 * idx + 103);

                auto g11_xyy_xzzzzz = primBuffer.data(g11off + 280 * idx + 104);

                auto g11_xyy_yyyyyy = primBuffer.data(g11off + 280 * idx + 105);

                auto g11_xyy_yyyyyz = primBuffer.data(g11off + 280 * idx + 106);

                auto g11_xyy_yyyyzz = primBuffer.data(g11off + 280 * idx + 107);

                auto g11_xyy_yyyzzz = primBuffer.data(g11off + 280 * idx + 108);

                auto g11_xyy_yyzzzz = primBuffer.data(g11off + 280 * idx + 109);

                auto g11_xyy_yzzzzz = primBuffer.data(g11off + 280 * idx + 110);

                auto g11_xyy_zzzzzz = primBuffer.data(g11off + 280 * idx + 111);

                auto g11_xyz_xxxxxx = primBuffer.data(g11off + 280 * idx + 112);

                auto g11_xyz_xxxxxy = primBuffer.data(g11off + 280 * idx + 113);

                auto g11_xyz_xxxxxz = primBuffer.data(g11off + 280 * idx + 114);

                auto g11_xyz_xxxxyy = primBuffer.data(g11off + 280 * idx + 115);

                auto g11_xyz_xxxxyz = primBuffer.data(g11off + 280 * idx + 116);

                auto g11_xyz_xxxxzz = primBuffer.data(g11off + 280 * idx + 117);

                auto g11_xyz_xxxyyy = primBuffer.data(g11off + 280 * idx + 118);

                auto g11_xyz_xxxyyz = primBuffer.data(g11off + 280 * idx + 119);

                auto g11_xyz_xxxyzz = primBuffer.data(g11off + 280 * idx + 120);

                auto g11_xyz_xxxzzz = primBuffer.data(g11off + 280 * idx + 121);

                auto g11_xyz_xxyyyy = primBuffer.data(g11off + 280 * idx + 122);

                auto g11_xyz_xxyyyz = primBuffer.data(g11off + 280 * idx + 123);

                auto g11_xyz_xxyyzz = primBuffer.data(g11off + 280 * idx + 124);

                auto g11_xyz_xxyzzz = primBuffer.data(g11off + 280 * idx + 125);

                auto g11_xyz_xxzzzz = primBuffer.data(g11off + 280 * idx + 126);

                auto g11_xyz_xyyyyy = primBuffer.data(g11off + 280 * idx + 127);

                auto g11_xyz_xyyyyz = primBuffer.data(g11off + 280 * idx + 128);

                auto g11_xyz_xyyyzz = primBuffer.data(g11off + 280 * idx + 129);

                auto g11_xyz_xyyzzz = primBuffer.data(g11off + 280 * idx + 130);

                auto g11_xyz_xyzzzz = primBuffer.data(g11off + 280 * idx + 131);

                auto g11_xyz_xzzzzz = primBuffer.data(g11off + 280 * idx + 132);

                auto g11_xyz_yyyyyy = primBuffer.data(g11off + 280 * idx + 133);

                auto g11_xyz_yyyyyz = primBuffer.data(g11off + 280 * idx + 134);

                auto g11_xyz_yyyyzz = primBuffer.data(g11off + 280 * idx + 135);

                auto g11_xyz_yyyzzz = primBuffer.data(g11off + 280 * idx + 136);

                auto g11_xyz_yyzzzz = primBuffer.data(g11off + 280 * idx + 137);

                auto g11_xyz_yzzzzz = primBuffer.data(g11off + 280 * idx + 138);

                auto g11_xyz_zzzzzz = primBuffer.data(g11off + 280 * idx + 139);

                auto g11_xzz_xxxxxx = primBuffer.data(g11off + 280 * idx + 140);

                auto g11_xzz_xxxxxy = primBuffer.data(g11off + 280 * idx + 141);

                auto g11_xzz_xxxxxz = primBuffer.data(g11off + 280 * idx + 142);

                auto g11_xzz_xxxxyy = primBuffer.data(g11off + 280 * idx + 143);

                auto g11_xzz_xxxxyz = primBuffer.data(g11off + 280 * idx + 144);

                auto g11_xzz_xxxxzz = primBuffer.data(g11off + 280 * idx + 145);

                auto g11_xzz_xxxyyy = primBuffer.data(g11off + 280 * idx + 146);

                auto g11_xzz_xxxyyz = primBuffer.data(g11off + 280 * idx + 147);

                auto g11_xzz_xxxyzz = primBuffer.data(g11off + 280 * idx + 148);

                auto g11_xzz_xxxzzz = primBuffer.data(g11off + 280 * idx + 149);

                auto g11_xzz_xxyyyy = primBuffer.data(g11off + 280 * idx + 150);

                auto g11_xzz_xxyyyz = primBuffer.data(g11off + 280 * idx + 151);

                auto g11_xzz_xxyyzz = primBuffer.data(g11off + 280 * idx + 152);

                auto g11_xzz_xxyzzz = primBuffer.data(g11off + 280 * idx + 153);

                auto g11_xzz_xxzzzz = primBuffer.data(g11off + 280 * idx + 154);

                auto g11_xzz_xyyyyy = primBuffer.data(g11off + 280 * idx + 155);

                auto g11_xzz_xyyyyz = primBuffer.data(g11off + 280 * idx + 156);

                auto g11_xzz_xyyyzz = primBuffer.data(g11off + 280 * idx + 157);

                auto g11_xzz_xyyzzz = primBuffer.data(g11off + 280 * idx + 158);

                auto g11_xzz_xyzzzz = primBuffer.data(g11off + 280 * idx + 159);

                auto g11_xzz_xzzzzz = primBuffer.data(g11off + 280 * idx + 160);

                auto g11_xzz_yyyyyy = primBuffer.data(g11off + 280 * idx + 161);

                auto g11_xzz_yyyyyz = primBuffer.data(g11off + 280 * idx + 162);

                auto g11_xzz_yyyyzz = primBuffer.data(g11off + 280 * idx + 163);

                auto g11_xzz_yyyzzz = primBuffer.data(g11off + 280 * idx + 164);

                auto g11_xzz_yyzzzz = primBuffer.data(g11off + 280 * idx + 165);

                auto g11_xzz_yzzzzz = primBuffer.data(g11off + 280 * idx + 166);

                auto g11_xzz_zzzzzz = primBuffer.data(g11off + 280 * idx + 167);

                auto g11_yyy_xxxxxx = primBuffer.data(g11off + 280 * idx + 168);

                auto g11_yyy_xxxxxy = primBuffer.data(g11off + 280 * idx + 169);

                auto g11_yyy_xxxxxz = primBuffer.data(g11off + 280 * idx + 170);

                auto g11_yyy_xxxxyy = primBuffer.data(g11off + 280 * idx + 171);

                auto g11_yyy_xxxxyz = primBuffer.data(g11off + 280 * idx + 172);

                auto g11_yyy_xxxxzz = primBuffer.data(g11off + 280 * idx + 173);

                auto g11_yyy_xxxyyy = primBuffer.data(g11off + 280 * idx + 174);

                auto g11_yyy_xxxyyz = primBuffer.data(g11off + 280 * idx + 175);

                auto g11_yyy_xxxyzz = primBuffer.data(g11off + 280 * idx + 176);

                auto g11_yyy_xxxzzz = primBuffer.data(g11off + 280 * idx + 177);

                auto g11_yyy_xxyyyy = primBuffer.data(g11off + 280 * idx + 178);

                auto g11_yyy_xxyyyz = primBuffer.data(g11off + 280 * idx + 179);

                auto g11_yyy_xxyyzz = primBuffer.data(g11off + 280 * idx + 180);

                auto g11_yyy_xxyzzz = primBuffer.data(g11off + 280 * idx + 181);

                auto g11_yyy_xxzzzz = primBuffer.data(g11off + 280 * idx + 182);

                auto g11_yyy_xyyyyy = primBuffer.data(g11off + 280 * idx + 183);

                auto g11_yyy_xyyyyz = primBuffer.data(g11off + 280 * idx + 184);

                auto g11_yyy_xyyyzz = primBuffer.data(g11off + 280 * idx + 185);

                auto g11_yyy_xyyzzz = primBuffer.data(g11off + 280 * idx + 186);

                auto g11_yyy_xyzzzz = primBuffer.data(g11off + 280 * idx + 187);

                auto g11_yyy_xzzzzz = primBuffer.data(g11off + 280 * idx + 188);

                auto g11_yyy_yyyyyy = primBuffer.data(g11off + 280 * idx + 189);

                auto g11_yyy_yyyyyz = primBuffer.data(g11off + 280 * idx + 190);

                auto g11_yyy_yyyyzz = primBuffer.data(g11off + 280 * idx + 191);

                auto g11_yyy_yyyzzz = primBuffer.data(g11off + 280 * idx + 192);

                auto g11_yyy_yyzzzz = primBuffer.data(g11off + 280 * idx + 193);

                auto g11_yyy_yzzzzz = primBuffer.data(g11off + 280 * idx + 194);

                auto g11_yyy_zzzzzz = primBuffer.data(g11off + 280 * idx + 195);

                auto g11_yyz_xxxxxx = primBuffer.data(g11off + 280 * idx + 196);

                auto g11_yyz_xxxxxy = primBuffer.data(g11off + 280 * idx + 197);

                auto g11_yyz_xxxxxz = primBuffer.data(g11off + 280 * idx + 198);

                auto g11_yyz_xxxxyy = primBuffer.data(g11off + 280 * idx + 199);

                auto g11_yyz_xxxxyz = primBuffer.data(g11off + 280 * idx + 200);

                auto g11_yyz_xxxxzz = primBuffer.data(g11off + 280 * idx + 201);

                auto g11_yyz_xxxyyy = primBuffer.data(g11off + 280 * idx + 202);

                auto g11_yyz_xxxyyz = primBuffer.data(g11off + 280 * idx + 203);

                auto g11_yyz_xxxyzz = primBuffer.data(g11off + 280 * idx + 204);

                auto g11_yyz_xxxzzz = primBuffer.data(g11off + 280 * idx + 205);

                auto g11_yyz_xxyyyy = primBuffer.data(g11off + 280 * idx + 206);

                auto g11_yyz_xxyyyz = primBuffer.data(g11off + 280 * idx + 207);

                auto g11_yyz_xxyyzz = primBuffer.data(g11off + 280 * idx + 208);

                auto g11_yyz_xxyzzz = primBuffer.data(g11off + 280 * idx + 209);

                auto g11_yyz_xxzzzz = primBuffer.data(g11off + 280 * idx + 210);

                auto g11_yyz_xyyyyy = primBuffer.data(g11off + 280 * idx + 211);

                auto g11_yyz_xyyyyz = primBuffer.data(g11off + 280 * idx + 212);

                auto g11_yyz_xyyyzz = primBuffer.data(g11off + 280 * idx + 213);

                auto g11_yyz_xyyzzz = primBuffer.data(g11off + 280 * idx + 214);

                auto g11_yyz_xyzzzz = primBuffer.data(g11off + 280 * idx + 215);

                auto g11_yyz_xzzzzz = primBuffer.data(g11off + 280 * idx + 216);

                auto g11_yyz_yyyyyy = primBuffer.data(g11off + 280 * idx + 217);

                auto g11_yyz_yyyyyz = primBuffer.data(g11off + 280 * idx + 218);

                auto g11_yyz_yyyyzz = primBuffer.data(g11off + 280 * idx + 219);

                auto g11_yyz_yyyzzz = primBuffer.data(g11off + 280 * idx + 220);

                auto g11_yyz_yyzzzz = primBuffer.data(g11off + 280 * idx + 221);

                auto g11_yyz_yzzzzz = primBuffer.data(g11off + 280 * idx + 222);

                auto g11_yyz_zzzzzz = primBuffer.data(g11off + 280 * idx + 223);

                auto g11_yzz_xxxxxx = primBuffer.data(g11off + 280 * idx + 224);

                auto g11_yzz_xxxxxy = primBuffer.data(g11off + 280 * idx + 225);

                auto g11_yzz_xxxxxz = primBuffer.data(g11off + 280 * idx + 226);

                auto g11_yzz_xxxxyy = primBuffer.data(g11off + 280 * idx + 227);

                auto g11_yzz_xxxxyz = primBuffer.data(g11off + 280 * idx + 228);

                auto g11_yzz_xxxxzz = primBuffer.data(g11off + 280 * idx + 229);

                auto g11_yzz_xxxyyy = primBuffer.data(g11off + 280 * idx + 230);

                auto g11_yzz_xxxyyz = primBuffer.data(g11off + 280 * idx + 231);

                auto g11_yzz_xxxyzz = primBuffer.data(g11off + 280 * idx + 232);

                auto g11_yzz_xxxzzz = primBuffer.data(g11off + 280 * idx + 233);

                auto g11_yzz_xxyyyy = primBuffer.data(g11off + 280 * idx + 234);

                auto g11_yzz_xxyyyz = primBuffer.data(g11off + 280 * idx + 235);

                auto g11_yzz_xxyyzz = primBuffer.data(g11off + 280 * idx + 236);

                auto g11_yzz_xxyzzz = primBuffer.data(g11off + 280 * idx + 237);

                auto g11_yzz_xxzzzz = primBuffer.data(g11off + 280 * idx + 238);

                auto g11_yzz_xyyyyy = primBuffer.data(g11off + 280 * idx + 239);

                auto g11_yzz_xyyyyz = primBuffer.data(g11off + 280 * idx + 240);

                auto g11_yzz_xyyyzz = primBuffer.data(g11off + 280 * idx + 241);

                auto g11_yzz_xyyzzz = primBuffer.data(g11off + 280 * idx + 242);

                auto g11_yzz_xyzzzz = primBuffer.data(g11off + 280 * idx + 243);

                auto g11_yzz_xzzzzz = primBuffer.data(g11off + 280 * idx + 244);

                auto g11_yzz_yyyyyy = primBuffer.data(g11off + 280 * idx + 245);

                auto g11_yzz_yyyyyz = primBuffer.data(g11off + 280 * idx + 246);

                auto g11_yzz_yyyyzz = primBuffer.data(g11off + 280 * idx + 247);

                auto g11_yzz_yyyzzz = primBuffer.data(g11off + 280 * idx + 248);

                auto g11_yzz_yyzzzz = primBuffer.data(g11off + 280 * idx + 249);

                auto g11_yzz_yzzzzz = primBuffer.data(g11off + 280 * idx + 250);

                auto g11_yzz_zzzzzz = primBuffer.data(g11off + 280 * idx + 251);

                auto g11_zzz_xxxxxx = primBuffer.data(g11off + 280 * idx + 252);

                auto g11_zzz_xxxxxy = primBuffer.data(g11off + 280 * idx + 253);

                auto g11_zzz_xxxxxz = primBuffer.data(g11off + 280 * idx + 254);

                auto g11_zzz_xxxxyy = primBuffer.data(g11off + 280 * idx + 255);

                auto g11_zzz_xxxxyz = primBuffer.data(g11off + 280 * idx + 256);

                auto g11_zzz_xxxxzz = primBuffer.data(g11off + 280 * idx + 257);

                auto g11_zzz_xxxyyy = primBuffer.data(g11off + 280 * idx + 258);

                auto g11_zzz_xxxyyz = primBuffer.data(g11off + 280 * idx + 259);

                auto g11_zzz_xxxyzz = primBuffer.data(g11off + 280 * idx + 260);

                auto g11_zzz_xxxzzz = primBuffer.data(g11off + 280 * idx + 261);

                auto g11_zzz_xxyyyy = primBuffer.data(g11off + 280 * idx + 262);

                auto g11_zzz_xxyyyz = primBuffer.data(g11off + 280 * idx + 263);

                auto g11_zzz_xxyyzz = primBuffer.data(g11off + 280 * idx + 264);

                auto g11_zzz_xxyzzz = primBuffer.data(g11off + 280 * idx + 265);

                auto g11_zzz_xxzzzz = primBuffer.data(g11off + 280 * idx + 266);

                auto g11_zzz_xyyyyy = primBuffer.data(g11off + 280 * idx + 267);

                auto g11_zzz_xyyyyz = primBuffer.data(g11off + 280 * idx + 268);

                auto g11_zzz_xyyyzz = primBuffer.data(g11off + 280 * idx + 269);

                auto g11_zzz_xyyzzz = primBuffer.data(g11off + 280 * idx + 270);

                auto g11_zzz_xyzzzz = primBuffer.data(g11off + 280 * idx + 271);

                auto g11_zzz_xzzzzz = primBuffer.data(g11off + 280 * idx + 272);

                auto g11_zzz_yyyyyy = primBuffer.data(g11off + 280 * idx + 273);

                auto g11_zzz_yyyyyz = primBuffer.data(g11off + 280 * idx + 274);

                auto g11_zzz_yyyyzz = primBuffer.data(g11off + 280 * idx + 275);

                auto g11_zzz_yyyzzz = primBuffer.data(g11off + 280 * idx + 276);

                auto g11_zzz_yyzzzz = primBuffer.data(g11off + 280 * idx + 277);

                auto g11_zzz_yzzzzz = primBuffer.data(g11off + 280 * idx + 278);

                auto g11_zzz_zzzzzz = primBuffer.data(g11off + 280 * idx + 279);

                // set up pointers to (G|g(r,r')|SI)^(m) integrals

                auto g_xxxx_xxxxxx = primBuffer.data(goff + 420 * idx);

                auto g_xxxx_xxxxxy = primBuffer.data(goff + 420 * idx + 1);

                auto g_xxxx_xxxxxz = primBuffer.data(goff + 420 * idx + 2);

                auto g_xxxx_xxxxyy = primBuffer.data(goff + 420 * idx + 3);

                auto g_xxxx_xxxxyz = primBuffer.data(goff + 420 * idx + 4);

                auto g_xxxx_xxxxzz = primBuffer.data(goff + 420 * idx + 5);

                auto g_xxxx_xxxyyy = primBuffer.data(goff + 420 * idx + 6);

                auto g_xxxx_xxxyyz = primBuffer.data(goff + 420 * idx + 7);

                auto g_xxxx_xxxyzz = primBuffer.data(goff + 420 * idx + 8);

                auto g_xxxx_xxxzzz = primBuffer.data(goff + 420 * idx + 9);

                auto g_xxxx_xxyyyy = primBuffer.data(goff + 420 * idx + 10);

                auto g_xxxx_xxyyyz = primBuffer.data(goff + 420 * idx + 11);

                auto g_xxxx_xxyyzz = primBuffer.data(goff + 420 * idx + 12);

                auto g_xxxx_xxyzzz = primBuffer.data(goff + 420 * idx + 13);

                auto g_xxxx_xxzzzz = primBuffer.data(goff + 420 * idx + 14);

                auto g_xxxx_xyyyyy = primBuffer.data(goff + 420 * idx + 15);

                auto g_xxxx_xyyyyz = primBuffer.data(goff + 420 * idx + 16);

                auto g_xxxx_xyyyzz = primBuffer.data(goff + 420 * idx + 17);

                auto g_xxxx_xyyzzz = primBuffer.data(goff + 420 * idx + 18);

                auto g_xxxx_xyzzzz = primBuffer.data(goff + 420 * idx + 19);

                auto g_xxxx_xzzzzz = primBuffer.data(goff + 420 * idx + 20);

                auto g_xxxx_yyyyyy = primBuffer.data(goff + 420 * idx + 21);

                auto g_xxxx_yyyyyz = primBuffer.data(goff + 420 * idx + 22);

                auto g_xxxx_yyyyzz = primBuffer.data(goff + 420 * idx + 23);

                auto g_xxxx_yyyzzz = primBuffer.data(goff + 420 * idx + 24);

                auto g_xxxx_yyzzzz = primBuffer.data(goff + 420 * idx + 25);

                auto g_xxxx_yzzzzz = primBuffer.data(goff + 420 * idx + 26);

                auto g_xxxx_zzzzzz = primBuffer.data(goff + 420 * idx + 27);

                auto g_xxxy_xxxxxx = primBuffer.data(goff + 420 * idx + 28);

                auto g_xxxy_xxxxxy = primBuffer.data(goff + 420 * idx + 29);

                auto g_xxxy_xxxxxz = primBuffer.data(goff + 420 * idx + 30);

                auto g_xxxy_xxxxyy = primBuffer.data(goff + 420 * idx + 31);

                auto g_xxxy_xxxxyz = primBuffer.data(goff + 420 * idx + 32);

                auto g_xxxy_xxxxzz = primBuffer.data(goff + 420 * idx + 33);

                auto g_xxxy_xxxyyy = primBuffer.data(goff + 420 * idx + 34);

                auto g_xxxy_xxxyyz = primBuffer.data(goff + 420 * idx + 35);

                auto g_xxxy_xxxyzz = primBuffer.data(goff + 420 * idx + 36);

                auto g_xxxy_xxxzzz = primBuffer.data(goff + 420 * idx + 37);

                auto g_xxxy_xxyyyy = primBuffer.data(goff + 420 * idx + 38);

                auto g_xxxy_xxyyyz = primBuffer.data(goff + 420 * idx + 39);

                auto g_xxxy_xxyyzz = primBuffer.data(goff + 420 * idx + 40);

                auto g_xxxy_xxyzzz = primBuffer.data(goff + 420 * idx + 41);

                auto g_xxxy_xxzzzz = primBuffer.data(goff + 420 * idx + 42);

                auto g_xxxy_xyyyyy = primBuffer.data(goff + 420 * idx + 43);

                auto g_xxxy_xyyyyz = primBuffer.data(goff + 420 * idx + 44);

                auto g_xxxy_xyyyzz = primBuffer.data(goff + 420 * idx + 45);

                auto g_xxxy_xyyzzz = primBuffer.data(goff + 420 * idx + 46);

                auto g_xxxy_xyzzzz = primBuffer.data(goff + 420 * idx + 47);

                auto g_xxxy_xzzzzz = primBuffer.data(goff + 420 * idx + 48);

                auto g_xxxy_yyyyyy = primBuffer.data(goff + 420 * idx + 49);

                auto g_xxxy_yyyyyz = primBuffer.data(goff + 420 * idx + 50);

                auto g_xxxy_yyyyzz = primBuffer.data(goff + 420 * idx + 51);

                auto g_xxxy_yyyzzz = primBuffer.data(goff + 420 * idx + 52);

                auto g_xxxy_yyzzzz = primBuffer.data(goff + 420 * idx + 53);

                auto g_xxxy_yzzzzz = primBuffer.data(goff + 420 * idx + 54);

                auto g_xxxy_zzzzzz = primBuffer.data(goff + 420 * idx + 55);

                auto g_xxxz_xxxxxx = primBuffer.data(goff + 420 * idx + 56);

                auto g_xxxz_xxxxxy = primBuffer.data(goff + 420 * idx + 57);

                auto g_xxxz_xxxxxz = primBuffer.data(goff + 420 * idx + 58);

                auto g_xxxz_xxxxyy = primBuffer.data(goff + 420 * idx + 59);

                auto g_xxxz_xxxxyz = primBuffer.data(goff + 420 * idx + 60);

                auto g_xxxz_xxxxzz = primBuffer.data(goff + 420 * idx + 61);

                auto g_xxxz_xxxyyy = primBuffer.data(goff + 420 * idx + 62);

                auto g_xxxz_xxxyyz = primBuffer.data(goff + 420 * idx + 63);

                auto g_xxxz_xxxyzz = primBuffer.data(goff + 420 * idx + 64);

                auto g_xxxz_xxxzzz = primBuffer.data(goff + 420 * idx + 65);

                auto g_xxxz_xxyyyy = primBuffer.data(goff + 420 * idx + 66);

                auto g_xxxz_xxyyyz = primBuffer.data(goff + 420 * idx + 67);

                auto g_xxxz_xxyyzz = primBuffer.data(goff + 420 * idx + 68);

                auto g_xxxz_xxyzzz = primBuffer.data(goff + 420 * idx + 69);

                auto g_xxxz_xxzzzz = primBuffer.data(goff + 420 * idx + 70);

                auto g_xxxz_xyyyyy = primBuffer.data(goff + 420 * idx + 71);

                auto g_xxxz_xyyyyz = primBuffer.data(goff + 420 * idx + 72);

                auto g_xxxz_xyyyzz = primBuffer.data(goff + 420 * idx + 73);

                auto g_xxxz_xyyzzz = primBuffer.data(goff + 420 * idx + 74);

                auto g_xxxz_xyzzzz = primBuffer.data(goff + 420 * idx + 75);

                auto g_xxxz_xzzzzz = primBuffer.data(goff + 420 * idx + 76);

                auto g_xxxz_yyyyyy = primBuffer.data(goff + 420 * idx + 77);

                auto g_xxxz_yyyyyz = primBuffer.data(goff + 420 * idx + 78);

                auto g_xxxz_yyyyzz = primBuffer.data(goff + 420 * idx + 79);

                auto g_xxxz_yyyzzz = primBuffer.data(goff + 420 * idx + 80);

                auto g_xxxz_yyzzzz = primBuffer.data(goff + 420 * idx + 81);

                auto g_xxxz_yzzzzz = primBuffer.data(goff + 420 * idx + 82);

                auto g_xxxz_zzzzzz = primBuffer.data(goff + 420 * idx + 83);

                auto g_xxyy_xxxxxx = primBuffer.data(goff + 420 * idx + 84);

                auto g_xxyy_xxxxxy = primBuffer.data(goff + 420 * idx + 85);

                auto g_xxyy_xxxxxz = primBuffer.data(goff + 420 * idx + 86);

                auto g_xxyy_xxxxyy = primBuffer.data(goff + 420 * idx + 87);

                auto g_xxyy_xxxxyz = primBuffer.data(goff + 420 * idx + 88);

                auto g_xxyy_xxxxzz = primBuffer.data(goff + 420 * idx + 89);

                auto g_xxyy_xxxyyy = primBuffer.data(goff + 420 * idx + 90);

                auto g_xxyy_xxxyyz = primBuffer.data(goff + 420 * idx + 91);

                auto g_xxyy_xxxyzz = primBuffer.data(goff + 420 * idx + 92);

                auto g_xxyy_xxxzzz = primBuffer.data(goff + 420 * idx + 93);

                auto g_xxyy_xxyyyy = primBuffer.data(goff + 420 * idx + 94);

                auto g_xxyy_xxyyyz = primBuffer.data(goff + 420 * idx + 95);

                auto g_xxyy_xxyyzz = primBuffer.data(goff + 420 * idx + 96);

                auto g_xxyy_xxyzzz = primBuffer.data(goff + 420 * idx + 97);

                auto g_xxyy_xxzzzz = primBuffer.data(goff + 420 * idx + 98);

                auto g_xxyy_xyyyyy = primBuffer.data(goff + 420 * idx + 99);

                auto g_xxyy_xyyyyz = primBuffer.data(goff + 420 * idx + 100);

                auto g_xxyy_xyyyzz = primBuffer.data(goff + 420 * idx + 101);

                auto g_xxyy_xyyzzz = primBuffer.data(goff + 420 * idx + 102);

                auto g_xxyy_xyzzzz = primBuffer.data(goff + 420 * idx + 103);

                auto g_xxyy_xzzzzz = primBuffer.data(goff + 420 * idx + 104);

                auto g_xxyy_yyyyyy = primBuffer.data(goff + 420 * idx + 105);

                auto g_xxyy_yyyyyz = primBuffer.data(goff + 420 * idx + 106);

                auto g_xxyy_yyyyzz = primBuffer.data(goff + 420 * idx + 107);

                auto g_xxyy_yyyzzz = primBuffer.data(goff + 420 * idx + 108);

                auto g_xxyy_yyzzzz = primBuffer.data(goff + 420 * idx + 109);

                auto g_xxyy_yzzzzz = primBuffer.data(goff + 420 * idx + 110);

                auto g_xxyy_zzzzzz = primBuffer.data(goff + 420 * idx + 111);

                auto g_xxyz_xxxxxx = primBuffer.data(goff + 420 * idx + 112);

                auto g_xxyz_xxxxxy = primBuffer.data(goff + 420 * idx + 113);

                auto g_xxyz_xxxxxz = primBuffer.data(goff + 420 * idx + 114);

                auto g_xxyz_xxxxyy = primBuffer.data(goff + 420 * idx + 115);

                auto g_xxyz_xxxxyz = primBuffer.data(goff + 420 * idx + 116);

                auto g_xxyz_xxxxzz = primBuffer.data(goff + 420 * idx + 117);

                auto g_xxyz_xxxyyy = primBuffer.data(goff + 420 * idx + 118);

                auto g_xxyz_xxxyyz = primBuffer.data(goff + 420 * idx + 119);

                auto g_xxyz_xxxyzz = primBuffer.data(goff + 420 * idx + 120);

                auto g_xxyz_xxxzzz = primBuffer.data(goff + 420 * idx + 121);

                auto g_xxyz_xxyyyy = primBuffer.data(goff + 420 * idx + 122);

                auto g_xxyz_xxyyyz = primBuffer.data(goff + 420 * idx + 123);

                auto g_xxyz_xxyyzz = primBuffer.data(goff + 420 * idx + 124);

                auto g_xxyz_xxyzzz = primBuffer.data(goff + 420 * idx + 125);

                auto g_xxyz_xxzzzz = primBuffer.data(goff + 420 * idx + 126);

                auto g_xxyz_xyyyyy = primBuffer.data(goff + 420 * idx + 127);

                auto g_xxyz_xyyyyz = primBuffer.data(goff + 420 * idx + 128);

                auto g_xxyz_xyyyzz = primBuffer.data(goff + 420 * idx + 129);

                auto g_xxyz_xyyzzz = primBuffer.data(goff + 420 * idx + 130);

                auto g_xxyz_xyzzzz = primBuffer.data(goff + 420 * idx + 131);

                auto g_xxyz_xzzzzz = primBuffer.data(goff + 420 * idx + 132);

                auto g_xxyz_yyyyyy = primBuffer.data(goff + 420 * idx + 133);

                auto g_xxyz_yyyyyz = primBuffer.data(goff + 420 * idx + 134);

                auto g_xxyz_yyyyzz = primBuffer.data(goff + 420 * idx + 135);

                auto g_xxyz_yyyzzz = primBuffer.data(goff + 420 * idx + 136);

                auto g_xxyz_yyzzzz = primBuffer.data(goff + 420 * idx + 137);

                auto g_xxyz_yzzzzz = primBuffer.data(goff + 420 * idx + 138);

                auto g_xxyz_zzzzzz = primBuffer.data(goff + 420 * idx + 139);

                auto g_xxzz_xxxxxx = primBuffer.data(goff + 420 * idx + 140);

                auto g_xxzz_xxxxxy = primBuffer.data(goff + 420 * idx + 141);

                auto g_xxzz_xxxxxz = primBuffer.data(goff + 420 * idx + 142);

                auto g_xxzz_xxxxyy = primBuffer.data(goff + 420 * idx + 143);

                auto g_xxzz_xxxxyz = primBuffer.data(goff + 420 * idx + 144);

                auto g_xxzz_xxxxzz = primBuffer.data(goff + 420 * idx + 145);

                auto g_xxzz_xxxyyy = primBuffer.data(goff + 420 * idx + 146);

                auto g_xxzz_xxxyyz = primBuffer.data(goff + 420 * idx + 147);

                auto g_xxzz_xxxyzz = primBuffer.data(goff + 420 * idx + 148);

                auto g_xxzz_xxxzzz = primBuffer.data(goff + 420 * idx + 149);

                auto g_xxzz_xxyyyy = primBuffer.data(goff + 420 * idx + 150);

                auto g_xxzz_xxyyyz = primBuffer.data(goff + 420 * idx + 151);

                auto g_xxzz_xxyyzz = primBuffer.data(goff + 420 * idx + 152);

                auto g_xxzz_xxyzzz = primBuffer.data(goff + 420 * idx + 153);

                auto g_xxzz_xxzzzz = primBuffer.data(goff + 420 * idx + 154);

                auto g_xxzz_xyyyyy = primBuffer.data(goff + 420 * idx + 155);

                auto g_xxzz_xyyyyz = primBuffer.data(goff + 420 * idx + 156);

                auto g_xxzz_xyyyzz = primBuffer.data(goff + 420 * idx + 157);

                auto g_xxzz_xyyzzz = primBuffer.data(goff + 420 * idx + 158);

                auto g_xxzz_xyzzzz = primBuffer.data(goff + 420 * idx + 159);

                auto g_xxzz_xzzzzz = primBuffer.data(goff + 420 * idx + 160);

                auto g_xxzz_yyyyyy = primBuffer.data(goff + 420 * idx + 161);

                auto g_xxzz_yyyyyz = primBuffer.data(goff + 420 * idx + 162);

                auto g_xxzz_yyyyzz = primBuffer.data(goff + 420 * idx + 163);

                auto g_xxzz_yyyzzz = primBuffer.data(goff + 420 * idx + 164);

                auto g_xxzz_yyzzzz = primBuffer.data(goff + 420 * idx + 165);

                auto g_xxzz_yzzzzz = primBuffer.data(goff + 420 * idx + 166);

                auto g_xxzz_zzzzzz = primBuffer.data(goff + 420 * idx + 167);

                auto g_xyyy_xxxxxx = primBuffer.data(goff + 420 * idx + 168);

                auto g_xyyy_xxxxxy = primBuffer.data(goff + 420 * idx + 169);

                auto g_xyyy_xxxxxz = primBuffer.data(goff + 420 * idx + 170);

                auto g_xyyy_xxxxyy = primBuffer.data(goff + 420 * idx + 171);

                auto g_xyyy_xxxxyz = primBuffer.data(goff + 420 * idx + 172);

                auto g_xyyy_xxxxzz = primBuffer.data(goff + 420 * idx + 173);

                auto g_xyyy_xxxyyy = primBuffer.data(goff + 420 * idx + 174);

                auto g_xyyy_xxxyyz = primBuffer.data(goff + 420 * idx + 175);

                auto g_xyyy_xxxyzz = primBuffer.data(goff + 420 * idx + 176);

                auto g_xyyy_xxxzzz = primBuffer.data(goff + 420 * idx + 177);

                auto g_xyyy_xxyyyy = primBuffer.data(goff + 420 * idx + 178);

                auto g_xyyy_xxyyyz = primBuffer.data(goff + 420 * idx + 179);

                auto g_xyyy_xxyyzz = primBuffer.data(goff + 420 * idx + 180);

                auto g_xyyy_xxyzzz = primBuffer.data(goff + 420 * idx + 181);

                auto g_xyyy_xxzzzz = primBuffer.data(goff + 420 * idx + 182);

                auto g_xyyy_xyyyyy = primBuffer.data(goff + 420 * idx + 183);

                auto g_xyyy_xyyyyz = primBuffer.data(goff + 420 * idx + 184);

                auto g_xyyy_xyyyzz = primBuffer.data(goff + 420 * idx + 185);

                auto g_xyyy_xyyzzz = primBuffer.data(goff + 420 * idx + 186);

                auto g_xyyy_xyzzzz = primBuffer.data(goff + 420 * idx + 187);

                auto g_xyyy_xzzzzz = primBuffer.data(goff + 420 * idx + 188);

                auto g_xyyy_yyyyyy = primBuffer.data(goff + 420 * idx + 189);

                auto g_xyyy_yyyyyz = primBuffer.data(goff + 420 * idx + 190);

                auto g_xyyy_yyyyzz = primBuffer.data(goff + 420 * idx + 191);

                auto g_xyyy_yyyzzz = primBuffer.data(goff + 420 * idx + 192);

                auto g_xyyy_yyzzzz = primBuffer.data(goff + 420 * idx + 193);

                auto g_xyyy_yzzzzz = primBuffer.data(goff + 420 * idx + 194);

                auto g_xyyy_zzzzzz = primBuffer.data(goff + 420 * idx + 195);

                auto g_xyyz_xxxxxx = primBuffer.data(goff + 420 * idx + 196);

                auto g_xyyz_xxxxxy = primBuffer.data(goff + 420 * idx + 197);

                auto g_xyyz_xxxxxz = primBuffer.data(goff + 420 * idx + 198);

                auto g_xyyz_xxxxyy = primBuffer.data(goff + 420 * idx + 199);

                auto g_xyyz_xxxxyz = primBuffer.data(goff + 420 * idx + 200);

                auto g_xyyz_xxxxzz = primBuffer.data(goff + 420 * idx + 201);

                auto g_xyyz_xxxyyy = primBuffer.data(goff + 420 * idx + 202);

                auto g_xyyz_xxxyyz = primBuffer.data(goff + 420 * idx + 203);

                auto g_xyyz_xxxyzz = primBuffer.data(goff + 420 * idx + 204);

                auto g_xyyz_xxxzzz = primBuffer.data(goff + 420 * idx + 205);

                auto g_xyyz_xxyyyy = primBuffer.data(goff + 420 * idx + 206);

                auto g_xyyz_xxyyyz = primBuffer.data(goff + 420 * idx + 207);

                auto g_xyyz_xxyyzz = primBuffer.data(goff + 420 * idx + 208);

                auto g_xyyz_xxyzzz = primBuffer.data(goff + 420 * idx + 209);

                auto g_xyyz_xxzzzz = primBuffer.data(goff + 420 * idx + 210);

                auto g_xyyz_xyyyyy = primBuffer.data(goff + 420 * idx + 211);

                auto g_xyyz_xyyyyz = primBuffer.data(goff + 420 * idx + 212);

                auto g_xyyz_xyyyzz = primBuffer.data(goff + 420 * idx + 213);

                auto g_xyyz_xyyzzz = primBuffer.data(goff + 420 * idx + 214);

                auto g_xyyz_xyzzzz = primBuffer.data(goff + 420 * idx + 215);

                auto g_xyyz_xzzzzz = primBuffer.data(goff + 420 * idx + 216);

                auto g_xyyz_yyyyyy = primBuffer.data(goff + 420 * idx + 217);

                auto g_xyyz_yyyyyz = primBuffer.data(goff + 420 * idx + 218);

                auto g_xyyz_yyyyzz = primBuffer.data(goff + 420 * idx + 219);

                auto g_xyyz_yyyzzz = primBuffer.data(goff + 420 * idx + 220);

                auto g_xyyz_yyzzzz = primBuffer.data(goff + 420 * idx + 221);

                auto g_xyyz_yzzzzz = primBuffer.data(goff + 420 * idx + 222);

                auto g_xyyz_zzzzzz = primBuffer.data(goff + 420 * idx + 223);

                auto g_xyzz_xxxxxx = primBuffer.data(goff + 420 * idx + 224);

                auto g_xyzz_xxxxxy = primBuffer.data(goff + 420 * idx + 225);

                auto g_xyzz_xxxxxz = primBuffer.data(goff + 420 * idx + 226);

                auto g_xyzz_xxxxyy = primBuffer.data(goff + 420 * idx + 227);

                auto g_xyzz_xxxxyz = primBuffer.data(goff + 420 * idx + 228);

                auto g_xyzz_xxxxzz = primBuffer.data(goff + 420 * idx + 229);

                auto g_xyzz_xxxyyy = primBuffer.data(goff + 420 * idx + 230);

                auto g_xyzz_xxxyyz = primBuffer.data(goff + 420 * idx + 231);

                auto g_xyzz_xxxyzz = primBuffer.data(goff + 420 * idx + 232);

                auto g_xyzz_xxxzzz = primBuffer.data(goff + 420 * idx + 233);

                auto g_xyzz_xxyyyy = primBuffer.data(goff + 420 * idx + 234);

                auto g_xyzz_xxyyyz = primBuffer.data(goff + 420 * idx + 235);

                auto g_xyzz_xxyyzz = primBuffer.data(goff + 420 * idx + 236);

                auto g_xyzz_xxyzzz = primBuffer.data(goff + 420 * idx + 237);

                auto g_xyzz_xxzzzz = primBuffer.data(goff + 420 * idx + 238);

                auto g_xyzz_xyyyyy = primBuffer.data(goff + 420 * idx + 239);

                auto g_xyzz_xyyyyz = primBuffer.data(goff + 420 * idx + 240);

                auto g_xyzz_xyyyzz = primBuffer.data(goff + 420 * idx + 241);

                auto g_xyzz_xyyzzz = primBuffer.data(goff + 420 * idx + 242);

                auto g_xyzz_xyzzzz = primBuffer.data(goff + 420 * idx + 243);

                auto g_xyzz_xzzzzz = primBuffer.data(goff + 420 * idx + 244);

                auto g_xyzz_yyyyyy = primBuffer.data(goff + 420 * idx + 245);

                auto g_xyzz_yyyyyz = primBuffer.data(goff + 420 * idx + 246);

                auto g_xyzz_yyyyzz = primBuffer.data(goff + 420 * idx + 247);

                auto g_xyzz_yyyzzz = primBuffer.data(goff + 420 * idx + 248);

                auto g_xyzz_yyzzzz = primBuffer.data(goff + 420 * idx + 249);

                auto g_xyzz_yzzzzz = primBuffer.data(goff + 420 * idx + 250);

                auto g_xyzz_zzzzzz = primBuffer.data(goff + 420 * idx + 251);

                auto g_xzzz_xxxxxx = primBuffer.data(goff + 420 * idx + 252);

                auto g_xzzz_xxxxxy = primBuffer.data(goff + 420 * idx + 253);

                auto g_xzzz_xxxxxz = primBuffer.data(goff + 420 * idx + 254);

                auto g_xzzz_xxxxyy = primBuffer.data(goff + 420 * idx + 255);

                auto g_xzzz_xxxxyz = primBuffer.data(goff + 420 * idx + 256);

                auto g_xzzz_xxxxzz = primBuffer.data(goff + 420 * idx + 257);

                auto g_xzzz_xxxyyy = primBuffer.data(goff + 420 * idx + 258);

                auto g_xzzz_xxxyyz = primBuffer.data(goff + 420 * idx + 259);

                auto g_xzzz_xxxyzz = primBuffer.data(goff + 420 * idx + 260);

                auto g_xzzz_xxxzzz = primBuffer.data(goff + 420 * idx + 261);

                auto g_xzzz_xxyyyy = primBuffer.data(goff + 420 * idx + 262);

                auto g_xzzz_xxyyyz = primBuffer.data(goff + 420 * idx + 263);

                auto g_xzzz_xxyyzz = primBuffer.data(goff + 420 * idx + 264);

                auto g_xzzz_xxyzzz = primBuffer.data(goff + 420 * idx + 265);

                auto g_xzzz_xxzzzz = primBuffer.data(goff + 420 * idx + 266);

                auto g_xzzz_xyyyyy = primBuffer.data(goff + 420 * idx + 267);

                auto g_xzzz_xyyyyz = primBuffer.data(goff + 420 * idx + 268);

                auto g_xzzz_xyyyzz = primBuffer.data(goff + 420 * idx + 269);

                auto g_xzzz_xyyzzz = primBuffer.data(goff + 420 * idx + 270);

                auto g_xzzz_xyzzzz = primBuffer.data(goff + 420 * idx + 271);

                auto g_xzzz_xzzzzz = primBuffer.data(goff + 420 * idx + 272);

                auto g_xzzz_yyyyyy = primBuffer.data(goff + 420 * idx + 273);

                auto g_xzzz_yyyyyz = primBuffer.data(goff + 420 * idx + 274);

                auto g_xzzz_yyyyzz = primBuffer.data(goff + 420 * idx + 275);

                auto g_xzzz_yyyzzz = primBuffer.data(goff + 420 * idx + 276);

                auto g_xzzz_yyzzzz = primBuffer.data(goff + 420 * idx + 277);

                auto g_xzzz_yzzzzz = primBuffer.data(goff + 420 * idx + 278);

                auto g_xzzz_zzzzzz = primBuffer.data(goff + 420 * idx + 279);

                auto g_yyyy_xxxxxx = primBuffer.data(goff + 420 * idx + 280);

                auto g_yyyy_xxxxxy = primBuffer.data(goff + 420 * idx + 281);

                auto g_yyyy_xxxxxz = primBuffer.data(goff + 420 * idx + 282);

                auto g_yyyy_xxxxyy = primBuffer.data(goff + 420 * idx + 283);

                auto g_yyyy_xxxxyz = primBuffer.data(goff + 420 * idx + 284);

                auto g_yyyy_xxxxzz = primBuffer.data(goff + 420 * idx + 285);

                auto g_yyyy_xxxyyy = primBuffer.data(goff + 420 * idx + 286);

                auto g_yyyy_xxxyyz = primBuffer.data(goff + 420 * idx + 287);

                auto g_yyyy_xxxyzz = primBuffer.data(goff + 420 * idx + 288);

                auto g_yyyy_xxxzzz = primBuffer.data(goff + 420 * idx + 289);

                auto g_yyyy_xxyyyy = primBuffer.data(goff + 420 * idx + 290);

                auto g_yyyy_xxyyyz = primBuffer.data(goff + 420 * idx + 291);

                auto g_yyyy_xxyyzz = primBuffer.data(goff + 420 * idx + 292);

                auto g_yyyy_xxyzzz = primBuffer.data(goff + 420 * idx + 293);

                auto g_yyyy_xxzzzz = primBuffer.data(goff + 420 * idx + 294);

                auto g_yyyy_xyyyyy = primBuffer.data(goff + 420 * idx + 295);

                auto g_yyyy_xyyyyz = primBuffer.data(goff + 420 * idx + 296);

                auto g_yyyy_xyyyzz = primBuffer.data(goff + 420 * idx + 297);

                auto g_yyyy_xyyzzz = primBuffer.data(goff + 420 * idx + 298);

                auto g_yyyy_xyzzzz = primBuffer.data(goff + 420 * idx + 299);

                auto g_yyyy_xzzzzz = primBuffer.data(goff + 420 * idx + 300);

                auto g_yyyy_yyyyyy = primBuffer.data(goff + 420 * idx + 301);

                auto g_yyyy_yyyyyz = primBuffer.data(goff + 420 * idx + 302);

                auto g_yyyy_yyyyzz = primBuffer.data(goff + 420 * idx + 303);

                auto g_yyyy_yyyzzz = primBuffer.data(goff + 420 * idx + 304);

                auto g_yyyy_yyzzzz = primBuffer.data(goff + 420 * idx + 305);

                auto g_yyyy_yzzzzz = primBuffer.data(goff + 420 * idx + 306);

                auto g_yyyy_zzzzzz = primBuffer.data(goff + 420 * idx + 307);

                auto g_yyyz_xxxxxx = primBuffer.data(goff + 420 * idx + 308);

                auto g_yyyz_xxxxxy = primBuffer.data(goff + 420 * idx + 309);

                auto g_yyyz_xxxxxz = primBuffer.data(goff + 420 * idx + 310);

                auto g_yyyz_xxxxyy = primBuffer.data(goff + 420 * idx + 311);

                auto g_yyyz_xxxxyz = primBuffer.data(goff + 420 * idx + 312);

                auto g_yyyz_xxxxzz = primBuffer.data(goff + 420 * idx + 313);

                auto g_yyyz_xxxyyy = primBuffer.data(goff + 420 * idx + 314);

                auto g_yyyz_xxxyyz = primBuffer.data(goff + 420 * idx + 315);

                auto g_yyyz_xxxyzz = primBuffer.data(goff + 420 * idx + 316);

                auto g_yyyz_xxxzzz = primBuffer.data(goff + 420 * idx + 317);

                auto g_yyyz_xxyyyy = primBuffer.data(goff + 420 * idx + 318);

                auto g_yyyz_xxyyyz = primBuffer.data(goff + 420 * idx + 319);

                auto g_yyyz_xxyyzz = primBuffer.data(goff + 420 * idx + 320);

                auto g_yyyz_xxyzzz = primBuffer.data(goff + 420 * idx + 321);

                auto g_yyyz_xxzzzz = primBuffer.data(goff + 420 * idx + 322);

                auto g_yyyz_xyyyyy = primBuffer.data(goff + 420 * idx + 323);

                auto g_yyyz_xyyyyz = primBuffer.data(goff + 420 * idx + 324);

                auto g_yyyz_xyyyzz = primBuffer.data(goff + 420 * idx + 325);

                auto g_yyyz_xyyzzz = primBuffer.data(goff + 420 * idx + 326);

                auto g_yyyz_xyzzzz = primBuffer.data(goff + 420 * idx + 327);

                auto g_yyyz_xzzzzz = primBuffer.data(goff + 420 * idx + 328);

                auto g_yyyz_yyyyyy = primBuffer.data(goff + 420 * idx + 329);

                auto g_yyyz_yyyyyz = primBuffer.data(goff + 420 * idx + 330);

                auto g_yyyz_yyyyzz = primBuffer.data(goff + 420 * idx + 331);

                auto g_yyyz_yyyzzz = primBuffer.data(goff + 420 * idx + 332);

                auto g_yyyz_yyzzzz = primBuffer.data(goff + 420 * idx + 333);

                auto g_yyyz_yzzzzz = primBuffer.data(goff + 420 * idx + 334);

                auto g_yyyz_zzzzzz = primBuffer.data(goff + 420 * idx + 335);

                auto g_yyzz_xxxxxx = primBuffer.data(goff + 420 * idx + 336);

                auto g_yyzz_xxxxxy = primBuffer.data(goff + 420 * idx + 337);

                auto g_yyzz_xxxxxz = primBuffer.data(goff + 420 * idx + 338);

                auto g_yyzz_xxxxyy = primBuffer.data(goff + 420 * idx + 339);

                auto g_yyzz_xxxxyz = primBuffer.data(goff + 420 * idx + 340);

                auto g_yyzz_xxxxzz = primBuffer.data(goff + 420 * idx + 341);

                auto g_yyzz_xxxyyy = primBuffer.data(goff + 420 * idx + 342);

                auto g_yyzz_xxxyyz = primBuffer.data(goff + 420 * idx + 343);

                auto g_yyzz_xxxyzz = primBuffer.data(goff + 420 * idx + 344);

                auto g_yyzz_xxxzzz = primBuffer.data(goff + 420 * idx + 345);

                auto g_yyzz_xxyyyy = primBuffer.data(goff + 420 * idx + 346);

                auto g_yyzz_xxyyyz = primBuffer.data(goff + 420 * idx + 347);

                auto g_yyzz_xxyyzz = primBuffer.data(goff + 420 * idx + 348);

                auto g_yyzz_xxyzzz = primBuffer.data(goff + 420 * idx + 349);

                auto g_yyzz_xxzzzz = primBuffer.data(goff + 420 * idx + 350);

                auto g_yyzz_xyyyyy = primBuffer.data(goff + 420 * idx + 351);

                auto g_yyzz_xyyyyz = primBuffer.data(goff + 420 * idx + 352);

                auto g_yyzz_xyyyzz = primBuffer.data(goff + 420 * idx + 353);

                auto g_yyzz_xyyzzz = primBuffer.data(goff + 420 * idx + 354);

                auto g_yyzz_xyzzzz = primBuffer.data(goff + 420 * idx + 355);

                auto g_yyzz_xzzzzz = primBuffer.data(goff + 420 * idx + 356);

                auto g_yyzz_yyyyyy = primBuffer.data(goff + 420 * idx + 357);

                auto g_yyzz_yyyyyz = primBuffer.data(goff + 420 * idx + 358);

                auto g_yyzz_yyyyzz = primBuffer.data(goff + 420 * idx + 359);

                auto g_yyzz_yyyzzz = primBuffer.data(goff + 420 * idx + 360);

                auto g_yyzz_yyzzzz = primBuffer.data(goff + 420 * idx + 361);

                auto g_yyzz_yzzzzz = primBuffer.data(goff + 420 * idx + 362);

                auto g_yyzz_zzzzzz = primBuffer.data(goff + 420 * idx + 363);

                auto g_yzzz_xxxxxx = primBuffer.data(goff + 420 * idx + 364);

                auto g_yzzz_xxxxxy = primBuffer.data(goff + 420 * idx + 365);

                auto g_yzzz_xxxxxz = primBuffer.data(goff + 420 * idx + 366);

                auto g_yzzz_xxxxyy = primBuffer.data(goff + 420 * idx + 367);

                auto g_yzzz_xxxxyz = primBuffer.data(goff + 420 * idx + 368);

                auto g_yzzz_xxxxzz = primBuffer.data(goff + 420 * idx + 369);

                auto g_yzzz_xxxyyy = primBuffer.data(goff + 420 * idx + 370);

                auto g_yzzz_xxxyyz = primBuffer.data(goff + 420 * idx + 371);

                auto g_yzzz_xxxyzz = primBuffer.data(goff + 420 * idx + 372);

                auto g_yzzz_xxxzzz = primBuffer.data(goff + 420 * idx + 373);

                auto g_yzzz_xxyyyy = primBuffer.data(goff + 420 * idx + 374);

                auto g_yzzz_xxyyyz = primBuffer.data(goff + 420 * idx + 375);

                auto g_yzzz_xxyyzz = primBuffer.data(goff + 420 * idx + 376);

                auto g_yzzz_xxyzzz = primBuffer.data(goff + 420 * idx + 377);

                auto g_yzzz_xxzzzz = primBuffer.data(goff + 420 * idx + 378);

                auto g_yzzz_xyyyyy = primBuffer.data(goff + 420 * idx + 379);

                auto g_yzzz_xyyyyz = primBuffer.data(goff + 420 * idx + 380);

                auto g_yzzz_xyyyzz = primBuffer.data(goff + 420 * idx + 381);

                auto g_yzzz_xyyzzz = primBuffer.data(goff + 420 * idx + 382);

                auto g_yzzz_xyzzzz = primBuffer.data(goff + 420 * idx + 383);

                auto g_yzzz_xzzzzz = primBuffer.data(goff + 420 * idx + 384);

                auto g_yzzz_yyyyyy = primBuffer.data(goff + 420 * idx + 385);

                auto g_yzzz_yyyyyz = primBuffer.data(goff + 420 * idx + 386);

                auto g_yzzz_yyyyzz = primBuffer.data(goff + 420 * idx + 387);

                auto g_yzzz_yyyzzz = primBuffer.data(goff + 420 * idx + 388);

                auto g_yzzz_yyzzzz = primBuffer.data(goff + 420 * idx + 389);

                auto g_yzzz_yzzzzz = primBuffer.data(goff + 420 * idx + 390);

                auto g_yzzz_zzzzzz = primBuffer.data(goff + 420 * idx + 391);

                auto g_zzzz_xxxxxx = primBuffer.data(goff + 420 * idx + 392);

                auto g_zzzz_xxxxxy = primBuffer.data(goff + 420 * idx + 393);

                auto g_zzzz_xxxxxz = primBuffer.data(goff + 420 * idx + 394);

                auto g_zzzz_xxxxyy = primBuffer.data(goff + 420 * idx + 395);

                auto g_zzzz_xxxxyz = primBuffer.data(goff + 420 * idx + 396);

                auto g_zzzz_xxxxzz = primBuffer.data(goff + 420 * idx + 397);

                auto g_zzzz_xxxyyy = primBuffer.data(goff + 420 * idx + 398);

                auto g_zzzz_xxxyyz = primBuffer.data(goff + 420 * idx + 399);

                auto g_zzzz_xxxyzz = primBuffer.data(goff + 420 * idx + 400);

                auto g_zzzz_xxxzzz = primBuffer.data(goff + 420 * idx + 401);

                auto g_zzzz_xxyyyy = primBuffer.data(goff + 420 * idx + 402);

                auto g_zzzz_xxyyyz = primBuffer.data(goff + 420 * idx + 403);

                auto g_zzzz_xxyyzz = primBuffer.data(goff + 420 * idx + 404);

                auto g_zzzz_xxyzzz = primBuffer.data(goff + 420 * idx + 405);

                auto g_zzzz_xxzzzz = primBuffer.data(goff + 420 * idx + 406);

                auto g_zzzz_xyyyyy = primBuffer.data(goff + 420 * idx + 407);

                auto g_zzzz_xyyyyz = primBuffer.data(goff + 420 * idx + 408);

                auto g_zzzz_xyyyzz = primBuffer.data(goff + 420 * idx + 409);

                auto g_zzzz_xyyzzz = primBuffer.data(goff + 420 * idx + 410);

                auto g_zzzz_xyzzzz = primBuffer.data(goff + 420 * idx + 411);

                auto g_zzzz_xzzzzz = primBuffer.data(goff + 420 * idx + 412);

                auto g_zzzz_yyyyyy = primBuffer.data(goff + 420 * idx + 413);

                auto g_zzzz_yyyyyz = primBuffer.data(goff + 420 * idx + 414);

                auto g_zzzz_yyyyzz = primBuffer.data(goff + 420 * idx + 415);

                auto g_zzzz_yyyzzz = primBuffer.data(goff + 420 * idx + 416);

                auto g_zzzz_yyzzzz = primBuffer.data(goff + 420 * idx + 417);

                auto g_zzzz_yzzzzz = primBuffer.data(goff + 420 * idx + 418);

                auto g_zzzz_zzzzzz = primBuffer.data(goff + 420 * idx + 419);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xxxxx,\
                                         gk_xxx_xxxxy, gk_xxx_xxxxz, gk_xxx_xxxyy,\
                                         gk_xxx_xxxyz, gk_xxx_xxxzz, gk_xxx_xxyyy,\
                                         gk_xxx_xxyyz, gk_xxx_xxyzz, gk_xxx_xxzzz,\
                                         gk_xxx_xyyyy, gk_xxx_xyyyz, gk_xxx_xyyzz,\
                                         gk_xxx_xyzzz, gk_xxx_xzzzz, gk_xxx_yyyyy,\
                                         gk_xxx_yyyyz, gk_xxx_yyyzz, gk_xxx_yyzzz,\
                                         gk_xxx_yzzzz, gk_xxx_zzzzz, gk_xxy_xxxxx,\
                                         gk_xxy_xxxxy, gk_xxy_xxxxz, gk_xxy_xxxyy,\
                                         gk_xxy_xxxyz, gk_xxy_xxxzz, gk_xxy_xxyyy,\
                                         gk_xxy_xxyyz, gk_xxy_xxyzz, gk_xxy_xxzzz,\
                                         gk_xxy_xyyyy, gk_xxy_xyyyz, gk_xxy_xyyzz,\
                                         gk_xxy_xyzzz, gk_xxy_xzzzz, gk_xxy_yyyyy,\
                                         gk_xxy_yyyyz, gk_xxy_yyyzz, gk_xxy_yyzzz,\
                                         gk_xxy_yzzzz, gk_xxy_zzzzz, gk_xxz_xxxxx,\
                                         gk_xxz_xxxxy, gk_xxz_xxxxz, gk_xxz_xxxyy,\
                                         gk_xxz_xxxyz, gk_xxz_xxxzz, gk_xxz_xxyyy,\
                                         gk_xxz_xxyyz, gk_xxz_xxyzz, gk_xxz_xxzzz,\
                                         gk_xxz_xyyyy, gk_xxz_xyyyz, gk_xxz_xyyzz,\
                                         gk_xxz_xyzzz, gk_xxz_xzzzz, gk_xxz_yyyyy,\
                                         gk_xxz_yyyyz, gk_xxz_yyyzz, gk_xxz_yyzzz,\
                                         gk_xxz_yzzzz, gk_xxz_zzzzz, gk_xyy_xxxxx,\
                                         gk_xyy_xxxxy, gk_xyy_xxxxz, gk_xyy_xxxyy,\
                                         gk_xyy_xxxyz, gk_xyy_xxxzz, gk_xyy_xxyyy,\
                                         gk_xyy_xxyyz, gk_xyy_xxyzz, gk_xyy_xxzzz,\
                                         gk_xyy_xyyyy, gk_xyy_xyyyz, gk_xyy_xyyzz,\
                                         gk_xyy_xyzzz, gk_xyy_xzzzz, gk_xyy_yyyyy,\
                                         gk_xyy_yyyyz, gk_xyy_yyyzz, gk_xyy_yyzzz,\
                                         gk_xyy_yzzzz, gk_xyy_zzzzz, gk_xyz_xxxxx,\
                                         gk_xyz_xxxxy, gk_xyz_xxxxz, gk_xyz_xxxyy,\
                                         gk_xyz_xxxyz, gk_xyz_xxxzz, gk_xyz_xxyyy,\
                                         gk_xyz_xxyyz, gk_xyz_xxyzz, gk_xyz_xxzzz,\
                                         gk_xyz_xyyyy, gk_xyz_xyyyz, gk_xyz_xyyzz,\
                                         gk_xyz_xyzzz, gk_xyz_xzzzz, gk_xyz_yyyyy,\
                                         gk_xyz_yyyyz, gk_xyz_yyyzz, gk_xyz_yyzzz,\
                                         gk_xyz_yzzzz, gk_xyz_zzzzz, gk_xzz_xxxxx,\
                                         gk_xzz_xxxxy, gk_xzz_xxxxz, gk_xzz_xxxyy,\
                                         gk_xzz_xxxyz, gk_xzz_xxxzz, gk_xzz_xxyyy,\
                                         gk_xzz_xxyyz, gk_xzz_xxyzz, gk_xzz_xxzzz,\
                                         gk_xzz_xyyyy, gk_xzz_xyyyz, gk_xzz_xyyzz,\
                                         gk_xzz_xyzzz, gk_xzz_xzzzz, gk_xzz_yyyyy,\
                                         gk_xzz_yyyyz, gk_xzz_yyyzz, gk_xzz_yyzzz,\
                                         gk_xzz_yzzzz, gk_xzz_zzzzz, gk_yyy_xxxxx,\
                                         gk_yyy_xxxxy, gk_yyy_xxxxz, gk_yyy_xxxyy,\
                                         gk_yyy_xxxyz, gk_yyy_xxxzz, gk_yyy_xxyyy,\
                                         gk_yyy_xxyyz, gk_yyy_xxyzz, gk_yyy_xxzzz,\
                                         gk_yyy_xyyyy, gk_yyy_xyyyz, gk_yyy_xyyzz,\
                                         gk_yyy_xyzzz, gk_yyy_xzzzz, gk_yyy_yyyyy,\
                                         gk_yyy_yyyyz, gk_yyy_yyyzz, gk_yyy_yyzzz,\
                                         gk_yyy_yzzzz, gk_yyy_zzzzz, gk_yyz_xxxxx,\
                                         gk_yyz_xxxxy, gk_yyz_xxxxz, gk_yyz_xxxyy,\
                                         gk_yyz_xxxyz, gk_yyz_xxxzz, gk_yyz_xxyyy,\
                                         gk_yyz_xxyyz, gk_yyz_xxyzz, gk_yyz_xxzzz,\
                                         gk_yyz_xyyyy, gk_yyz_xyyyz, gk_yyz_xyyzz,\
                                         gk_yyz_xyzzz, gk_yyz_xzzzz, gk_yyz_yyyyy,\
                                         gk_yyz_yyyyz, gk_yyz_yyyzz, gk_yyz_yyzzz,\
                                         gk_yyz_yzzzz, gk_yyz_zzzzz, gk_yzz_xxxxx,\
                                         gk_yzz_xxxxy, gk_yzz_xxxxz, gk_yzz_xxxyy,\
                                         gk_yzz_xxxyz, gk_yzz_xxxzz, gk_yzz_xxyyy,\
                                         gk_yzz_xxyyz, gk_yzz_xxyzz, gk_yzz_xxzzz,\
                                         gk_yzz_xyyyy, gk_yzz_xyyyz, gk_yzz_xyyzz,\
                                         gk_yzz_xyzzz, gk_yzz_xzzzz, gk_yzz_yyyyy,\
                                         gk_yzz_yyyyz, gk_yzz_yyyzz, gk_yzz_yyzzz,\
                                         gk_yzz_yzzzz, gk_yzz_zzzzz, gk_zzz_xxxxx,\
                                         gk_zzz_xxxxy, gk_zzz_xxxxz, gk_zzz_xxxyy,\
                                         gk_zzz_xxxyz, gk_zzz_xxxzz, gk_zzz_xxyyy,\
                                         gk_zzz_xxyyz, gk_zzz_xxyzz, gk_zzz_xxzzz,\
                                         gk_zzz_xyyyy, gk_zzz_xyyyz, gk_zzz_xyyzz,\
                                         gk_zzz_xyzzz, gk_zzz_xzzzz, gk_zzz_yyyyy,\
                                         gk_zzz_yyyyz, gk_zzz_yyyzz, gk_zzz_yyzzz,\
                                         gk_zzz_yzzzz, gk_zzz_zzzzz, g20_xx_xxxxxx,\
                                         g20_xx_xxxxxy, g20_xx_xxxxxz, g20_xx_xxxxyy,\
                                         g20_xx_xxxxyz, g20_xx_xxxxzz, g20_xx_xxxyyy,\
                                         g20_xx_xxxyyz, g20_xx_xxxyzz, g20_xx_xxxzzz,\
                                         g20_xx_xxyyyy, g20_xx_xxyyyz, g20_xx_xxyyzz,\
                                         g20_xx_xxyzzz, g20_xx_xxzzzz, g20_xx_xyyyyy,\
                                         g20_xx_xyyyyz, g20_xx_xyyyzz, g20_xx_xyyzzz,\
                                         g20_xx_xyzzzz, g20_xx_xzzzzz, g20_xx_yyyyyy,\
                                         g20_xx_yyyyyz, g20_xx_yyyyzz, g20_xx_yyyzzz,\
                                         g20_xx_yyzzzz, g20_xx_yzzzzz, g20_xx_zzzzzz,\
                                         g20_xy_xxxxxx, g20_xy_xxxxxy, g20_xy_xxxxxz,\
                                         g20_xy_xxxxyy, g20_xy_xxxxyz, g20_xy_xxxxzz,\
                                         g20_xy_xxxyyy, g20_xy_xxxyyz, g20_xy_xxxyzz,\
                                         g20_xy_xxxzzz, g20_xy_xxyyyy, g20_xy_xxyyyz,\
                                         g20_xy_xxyyzz, g20_xy_xxyzzz, g20_xy_xxzzzz,\
                                         g20_xy_xyyyyy, g20_xy_xyyyyz, g20_xy_xyyyzz,\
                                         g20_xy_xyyzzz, g20_xy_xyzzzz, g20_xy_xzzzzz,\
                                         g20_xy_yyyyyy, g20_xy_yyyyyz, g20_xy_yyyyzz,\
                                         g20_xy_yyyzzz, g20_xy_yyzzzz, g20_xy_yzzzzz,\
                                         g20_xy_zzzzzz, g20_xz_xxxxxx, g20_xz_xxxxxy,\
                                         g20_xz_xxxxxz, g20_xz_xxxxyy, g20_xz_xxxxyz,\
                                         g20_xz_xxxxzz, g20_xz_xxxyyy, g20_xz_xxxyyz,\
                                         g20_xz_xxxyzz, g20_xz_xxxzzz, g20_xz_xxyyyy,\
                                         g20_xz_xxyyyz, g20_xz_xxyyzz, g20_xz_xxyzzz,\
                                         g20_xz_xxzzzz, g20_xz_xyyyyy, g20_xz_xyyyyz,\
                                         g20_xz_xyyyzz, g20_xz_xyyzzz, g20_xz_xyzzzz,\
                                         g20_xz_xzzzzz, g20_xz_yyyyyy, g20_xz_yyyyyz,\
                                         g20_xz_yyyyzz, g20_xz_yyyzzz, g20_xz_yyzzzz,\
                                         g20_xz_yzzzzz, g20_xz_zzzzzz, g20_yy_xxxxxx,\
                                         g20_yy_xxxxxy, g20_yy_xxxxxz, g20_yy_xxxxyy,\
                                         g20_yy_xxxxyz, g20_yy_xxxxzz, g20_yy_xxxyyy,\
                                         g20_yy_xxxyyz, g20_yy_xxxyzz, g20_yy_xxxzzz,\
                                         g20_yy_xxyyyy, g20_yy_xxyyyz, g20_yy_xxyyzz,\
                                         g20_yy_xxyzzz, g20_yy_xxzzzz, g20_yy_xyyyyy,\
                                         g20_yy_xyyyyz, g20_yy_xyyyzz, g20_yy_xyyzzz,\
                                         g20_yy_xyzzzz, g20_yy_xzzzzz, g20_yy_yyyyyy,\
                                         g20_yy_yyyyyz, g20_yy_yyyyzz, g20_yy_yyyzzz,\
                                         g20_yy_yyzzzz, g20_yy_yzzzzz, g20_yy_zzzzzz,\
                                         g20_yz_xxxxxx, g20_yz_xxxxxy, g20_yz_xxxxxz,\
                                         g20_yz_xxxxyy, g20_yz_xxxxyz, g20_yz_xxxxzz,\
                                         g20_yz_xxxyyy, g20_yz_xxxyyz, g20_yz_xxxyzz,\
                                         g20_yz_xxxzzz, g20_yz_xxyyyy, g20_yz_xxyyyz,\
                                         g20_yz_xxyyzz, g20_yz_xxyzzz, g20_yz_xxzzzz,\
                                         g20_yz_xyyyyy, g20_yz_xyyyyz, g20_yz_xyyyzz,\
                                         g20_yz_xyyzzz, g20_yz_xyzzzz, g20_yz_xzzzzz,\
                                         g20_yz_yyyyyy, g20_yz_yyyyyz, g20_yz_yyyyzz,\
                                         g20_yz_yyyzzz, g20_yz_yyzzzz, g20_yz_yzzzzz,\
                                         g20_yz_zzzzzz, g20_zz_xxxxxx, g20_zz_xxxxxy,\
                                         g20_zz_xxxxxz, g20_zz_xxxxyy, g20_zz_xxxxyz,\
                                         g20_zz_xxxxzz, g20_zz_xxxyyy, g20_zz_xxxyyz,\
                                         g20_zz_xxxyzz, g20_zz_xxxzzz, g20_zz_xxyyyy,\
                                         g20_zz_xxyyyz, g20_zz_xxyyzz, g20_zz_xxyzzz,\
                                         g20_zz_xxzzzz, g20_zz_xyyyyy, g20_zz_xyyyyz,\
                                         g20_zz_xyyyzz, g20_zz_xyyzzz, g20_zz_xyzzzz,\
                                         g20_zz_xzzzzz, g20_zz_yyyyyy, g20_zz_yyyyyz,\
                                         g20_zz_yyyyzz, g20_zz_yyyzzz, g20_zz_yyzzzz,\
                                         g20_zz_yzzzzz, g20_zz_zzzzzz, g21_xx_xxxxxx,\
                                         g21_xx_xxxxxy, g21_xx_xxxxxz, g21_xx_xxxxyy,\
                                         g21_xx_xxxxyz, g21_xx_xxxxzz, g21_xx_xxxyyy,\
                                         g21_xx_xxxyyz, g21_xx_xxxyzz, g21_xx_xxxzzz,\
                                         g21_xx_xxyyyy, g21_xx_xxyyyz, g21_xx_xxyyzz,\
                                         g21_xx_xxyzzz, g21_xx_xxzzzz, g21_xx_xyyyyy,\
                                         g21_xx_xyyyyz, g21_xx_xyyyzz, g21_xx_xyyzzz,\
                                         g21_xx_xyzzzz, g21_xx_xzzzzz, g21_xx_yyyyyy,\
                                         g21_xx_yyyyyz, g21_xx_yyyyzz, g21_xx_yyyzzz,\
                                         g21_xx_yyzzzz, g21_xx_yzzzzz, g21_xx_zzzzzz,\
                                         g21_xy_xxxxxx, g21_xy_xxxxxy, g21_xy_xxxxxz,\
                                         g21_xy_xxxxyy, g21_xy_xxxxyz, g21_xy_xxxxzz,\
                                         g21_xy_xxxyyy, g21_xy_xxxyyz, g21_xy_xxxyzz,\
                                         g21_xy_xxxzzz, g21_xy_xxyyyy, g21_xy_xxyyyz,\
                                         g21_xy_xxyyzz, g21_xy_xxyzzz, g21_xy_xxzzzz,\
                                         g21_xy_xyyyyy, g21_xy_xyyyyz, g21_xy_xyyyzz,\
                                         g21_xy_xyyzzz, g21_xy_xyzzzz, g21_xy_xzzzzz,\
                                         g21_xy_yyyyyy, g21_xy_yyyyyz, g21_xy_yyyyzz,\
                                         g21_xy_yyyzzz, g21_xy_yyzzzz, g21_xy_yzzzzz,\
                                         g21_xy_zzzzzz, g21_xz_xxxxxx, g21_xz_xxxxxy,\
                                         g21_xz_xxxxxz, g21_xz_xxxxyy, g21_xz_xxxxyz,\
                                         g21_xz_xxxxzz, g21_xz_xxxyyy, g21_xz_xxxyyz,\
                                         g21_xz_xxxyzz, g21_xz_xxxzzz, g21_xz_xxyyyy,\
                                         g21_xz_xxyyyz, g21_xz_xxyyzz, g21_xz_xxyzzz,\
                                         g21_xz_xxzzzz, g21_xz_xyyyyy, g21_xz_xyyyyz,\
                                         g21_xz_xyyyzz, g21_xz_xyyzzz, g21_xz_xyzzzz,\
                                         g21_xz_xzzzzz, g21_xz_yyyyyy, g21_xz_yyyyyz,\
                                         g21_xz_yyyyzz, g21_xz_yyyzzz, g21_xz_yyzzzz,\
                                         g21_xz_yzzzzz, g21_xz_zzzzzz, g21_yy_xxxxxx,\
                                         g21_yy_xxxxxy, g21_yy_xxxxxz, g21_yy_xxxxyy,\
                                         g21_yy_xxxxyz, g21_yy_xxxxzz, g21_yy_xxxyyy,\
                                         g21_yy_xxxyyz, g21_yy_xxxyzz, g21_yy_xxxzzz,\
                                         g21_yy_xxyyyy, g21_yy_xxyyyz, g21_yy_xxyyzz,\
                                         g21_yy_xxyzzz, g21_yy_xxzzzz, g21_yy_xyyyyy,\
                                         g21_yy_xyyyyz, g21_yy_xyyyzz, g21_yy_xyyzzz,\
                                         g21_yy_xyzzzz, g21_yy_xzzzzz, g21_yy_yyyyyy,\
                                         g21_yy_yyyyyz, g21_yy_yyyyzz, g21_yy_yyyzzz,\
                                         g21_yy_yyzzzz, g21_yy_yzzzzz, g21_yy_zzzzzz,\
                                         g21_yz_xxxxxx, g21_yz_xxxxxy, g21_yz_xxxxxz,\
                                         g21_yz_xxxxyy, g21_yz_xxxxyz, g21_yz_xxxxzz,\
                                         g21_yz_xxxyyy, g21_yz_xxxyyz, g21_yz_xxxyzz,\
                                         g21_yz_xxxzzz, g21_yz_xxyyyy, g21_yz_xxyyyz,\
                                         g21_yz_xxyyzz, g21_yz_xxyzzz, g21_yz_xxzzzz,\
                                         g21_yz_xyyyyy, g21_yz_xyyyyz, g21_yz_xyyyzz,\
                                         g21_yz_xyyzzz, g21_yz_xyzzzz, g21_yz_xzzzzz,\
                                         g21_yz_yyyyyy, g21_yz_yyyyyz, g21_yz_yyyyzz,\
                                         g21_yz_yyyzzz, g21_yz_yyzzzz, g21_yz_yzzzzz,\
                                         g21_yz_zzzzzz, g21_zz_xxxxxx, g21_zz_xxxxxy,\
                                         g21_zz_xxxxxz, g21_zz_xxxxyy, g21_zz_xxxxyz,\
                                         g21_zz_xxxxzz, g21_zz_xxxyyy, g21_zz_xxxyyz,\
                                         g21_zz_xxxyzz, g21_zz_xxxzzz, g21_zz_xxyyyy,\
                                         g21_zz_xxyyyz, g21_zz_xxyyzz, g21_zz_xxyzzz,\
                                         g21_zz_xxzzzz, g21_zz_xyyyyy, g21_zz_xyyyyz,\
                                         g21_zz_xyyyzz, g21_zz_xyyzzz, g21_zz_xyzzzz,\
                                         g21_zz_xzzzzz, g21_zz_yyyyyy, g21_zz_yyyyyz,\
                                         g21_zz_yyyyzz, g21_zz_yyyzzz, g21_zz_yyzzzz,\
                                         g21_zz_yzzzzz, g21_zz_zzzzzz, g11_xxx_xxxxxx,\
                                         g11_xxx_xxxxxy, g11_xxx_xxxxxz, g11_xxx_xxxxyy,\
                                         g11_xxx_xxxxyz, g11_xxx_xxxxzz, g11_xxx_xxxyyy,\
                                         g11_xxx_xxxyyz, g11_xxx_xxxyzz, g11_xxx_xxxzzz,\
                                         g11_xxx_xxyyyy, g11_xxx_xxyyyz, g11_xxx_xxyyzz,\
                                         g11_xxx_xxyzzz, g11_xxx_xxzzzz, g11_xxx_xyyyyy,\
                                         g11_xxx_xyyyyz, g11_xxx_xyyyzz, g11_xxx_xyyzzz,\
                                         g11_xxx_xyzzzz, g11_xxx_xzzzzz, g11_xxx_yyyyyy,\
                                         g11_xxx_yyyyyz, g11_xxx_yyyyzz, g11_xxx_yyyzzz,\
                                         g11_xxx_yyzzzz, g11_xxx_yzzzzz, g11_xxx_zzzzzz,\
                                         g11_xxy_xxxxxx, g11_xxy_xxxxxy, g11_xxy_xxxxxz,\
                                         g11_xxy_xxxxyy, g11_xxy_xxxxyz, g11_xxy_xxxxzz,\
                                         g11_xxy_xxxyyy, g11_xxy_xxxyyz, g11_xxy_xxxyzz,\
                                         g11_xxy_xxxzzz, g11_xxy_xxyyyy, g11_xxy_xxyyyz,\
                                         g11_xxy_xxyyzz, g11_xxy_xxyzzz, g11_xxy_xxzzzz,\
                                         g11_xxy_xyyyyy, g11_xxy_xyyyyz, g11_xxy_xyyyzz,\
                                         g11_xxy_xyyzzz, g11_xxy_xyzzzz, g11_xxy_xzzzzz,\
                                         g11_xxy_yyyyyy, g11_xxy_yyyyyz, g11_xxy_yyyyzz,\
                                         g11_xxy_yyyzzz, g11_xxy_yyzzzz, g11_xxy_yzzzzz,\
                                         g11_xxy_zzzzzz, g11_xxz_xxxxxx, g11_xxz_xxxxxy,\
                                         g11_xxz_xxxxxz, g11_xxz_xxxxyy, g11_xxz_xxxxyz,\
                                         g11_xxz_xxxxzz, g11_xxz_xxxyyy, g11_xxz_xxxyyz,\
                                         g11_xxz_xxxyzz, g11_xxz_xxxzzz, g11_xxz_xxyyyy,\
                                         g11_xxz_xxyyyz, g11_xxz_xxyyzz, g11_xxz_xxyzzz,\
                                         g11_xxz_xxzzzz, g11_xxz_xyyyyy, g11_xxz_xyyyyz,\
                                         g11_xxz_xyyyzz, g11_xxz_xyyzzz, g11_xxz_xyzzzz,\
                                         g11_xxz_xzzzzz, g11_xxz_yyyyyy, g11_xxz_yyyyyz,\
                                         g11_xxz_yyyyzz, g11_xxz_yyyzzz, g11_xxz_yyzzzz,\
                                         g11_xxz_yzzzzz, g11_xxz_zzzzzz, g11_xyy_xxxxxx,\
                                         g11_xyy_xxxxxy, g11_xyy_xxxxxz, g11_xyy_xxxxyy,\
                                         g11_xyy_xxxxyz, g11_xyy_xxxxzz, g11_xyy_xxxyyy,\
                                         g11_xyy_xxxyyz, g11_xyy_xxxyzz, g11_xyy_xxxzzz,\
                                         g11_xyy_xxyyyy, g11_xyy_xxyyyz, g11_xyy_xxyyzz,\
                                         g11_xyy_xxyzzz, g11_xyy_xxzzzz, g11_xyy_xyyyyy,\
                                         g11_xyy_xyyyyz, g11_xyy_xyyyzz, g11_xyy_xyyzzz,\
                                         g11_xyy_xyzzzz, g11_xyy_xzzzzz, g11_xyy_yyyyyy,\
                                         g11_xyy_yyyyyz, g11_xyy_yyyyzz, g11_xyy_yyyzzz,\
                                         g11_xyy_yyzzzz, g11_xyy_yzzzzz, g11_xyy_zzzzzz,\
                                         g11_xyz_xxxxxx, g11_xyz_xxxxxy, g11_xyz_xxxxxz,\
                                         g11_xyz_xxxxyy, g11_xyz_xxxxyz, g11_xyz_xxxxzz,\
                                         g11_xyz_xxxyyy, g11_xyz_xxxyyz, g11_xyz_xxxyzz,\
                                         g11_xyz_xxxzzz, g11_xyz_xxyyyy, g11_xyz_xxyyyz,\
                                         g11_xyz_xxyyzz, g11_xyz_xxyzzz, g11_xyz_xxzzzz,\
                                         g11_xyz_xyyyyy, g11_xyz_xyyyyz, g11_xyz_xyyyzz,\
                                         g11_xyz_xyyzzz, g11_xyz_xyzzzz, g11_xyz_xzzzzz,\
                                         g11_xyz_yyyyyy, g11_xyz_yyyyyz, g11_xyz_yyyyzz,\
                                         g11_xyz_yyyzzz, g11_xyz_yyzzzz, g11_xyz_yzzzzz,\
                                         g11_xyz_zzzzzz, g11_xzz_xxxxxx, g11_xzz_xxxxxy,\
                                         g11_xzz_xxxxxz, g11_xzz_xxxxyy, g11_xzz_xxxxyz,\
                                         g11_xzz_xxxxzz, g11_xzz_xxxyyy, g11_xzz_xxxyyz,\
                                         g11_xzz_xxxyzz, g11_xzz_xxxzzz, g11_xzz_xxyyyy,\
                                         g11_xzz_xxyyyz, g11_xzz_xxyyzz, g11_xzz_xxyzzz,\
                                         g11_xzz_xxzzzz, g11_xzz_xyyyyy, g11_xzz_xyyyyz,\
                                         g11_xzz_xyyyzz, g11_xzz_xyyzzz, g11_xzz_xyzzzz,\
                                         g11_xzz_xzzzzz, g11_xzz_yyyyyy, g11_xzz_yyyyyz,\
                                         g11_xzz_yyyyzz, g11_xzz_yyyzzz, g11_xzz_yyzzzz,\
                                         g11_xzz_yzzzzz, g11_xzz_zzzzzz, g11_yyy_xxxxxx,\
                                         g11_yyy_xxxxxy, g11_yyy_xxxxxz, g11_yyy_xxxxyy,\
                                         g11_yyy_xxxxyz, g11_yyy_xxxxzz, g11_yyy_xxxyyy,\
                                         g11_yyy_xxxyyz, g11_yyy_xxxyzz, g11_yyy_xxxzzz,\
                                         g11_yyy_xxyyyy, g11_yyy_xxyyyz, g11_yyy_xxyyzz,\
                                         g11_yyy_xxyzzz, g11_yyy_xxzzzz, g11_yyy_xyyyyy,\
                                         g11_yyy_xyyyyz, g11_yyy_xyyyzz, g11_yyy_xyyzzz,\
                                         g11_yyy_xyzzzz, g11_yyy_xzzzzz, g11_yyy_yyyyyy,\
                                         g11_yyy_yyyyyz, g11_yyy_yyyyzz, g11_yyy_yyyzzz,\
                                         g11_yyy_yyzzzz, g11_yyy_yzzzzz, g11_yyy_zzzzzz,\
                                         g11_yyz_xxxxxx, g11_yyz_xxxxxy, g11_yyz_xxxxxz,\
                                         g11_yyz_xxxxyy, g11_yyz_xxxxyz, g11_yyz_xxxxzz,\
                                         g11_yyz_xxxyyy, g11_yyz_xxxyyz, g11_yyz_xxxyzz,\
                                         g11_yyz_xxxzzz, g11_yyz_xxyyyy, g11_yyz_xxyyyz,\
                                         g11_yyz_xxyyzz, g11_yyz_xxyzzz, g11_yyz_xxzzzz,\
                                         g11_yyz_xyyyyy, g11_yyz_xyyyyz, g11_yyz_xyyyzz,\
                                         g11_yyz_xyyzzz, g11_yyz_xyzzzz, g11_yyz_xzzzzz,\
                                         g11_yyz_yyyyyy, g11_yyz_yyyyyz, g11_yyz_yyyyzz,\
                                         g11_yyz_yyyzzz, g11_yyz_yyzzzz, g11_yyz_yzzzzz,\
                                         g11_yyz_zzzzzz, g11_yzz_xxxxxx, g11_yzz_xxxxxy,\
                                         g11_yzz_xxxxxz, g11_yzz_xxxxyy, g11_yzz_xxxxyz,\
                                         g11_yzz_xxxxzz, g11_yzz_xxxyyy, g11_yzz_xxxyyz,\
                                         g11_yzz_xxxyzz, g11_yzz_xxxzzz, g11_yzz_xxyyyy,\
                                         g11_yzz_xxyyyz, g11_yzz_xxyyzz, g11_yzz_xxyzzz,\
                                         g11_yzz_xxzzzz, g11_yzz_xyyyyy, g11_yzz_xyyyyz,\
                                         g11_yzz_xyyyzz, g11_yzz_xyyzzz, g11_yzz_xyzzzz,\
                                         g11_yzz_xzzzzz, g11_yzz_yyyyyy, g11_yzz_yyyyyz,\
                                         g11_yzz_yyyyzz, g11_yzz_yyyzzz, g11_yzz_yyzzzz,\
                                         g11_yzz_yzzzzz, g11_yzz_zzzzzz, g11_zzz_xxxxxx,\
                                         g11_zzz_xxxxxy, g11_zzz_xxxxxz, g11_zzz_xxxxyy,\
                                         g11_zzz_xxxxyz, g11_zzz_xxxxzz, g11_zzz_xxxyyy,\
                                         g11_zzz_xxxyyz, g11_zzz_xxxyzz, g11_zzz_xxxzzz,\
                                         g11_zzz_xxyyyy, g11_zzz_xxyyyz, g11_zzz_xxyyzz,\
                                         g11_zzz_xxyzzz, g11_zzz_xxzzzz, g11_zzz_xyyyyy,\
                                         g11_zzz_xyyyyz, g11_zzz_xyyyzz, g11_zzz_xyyzzz,\
                                         g11_zzz_xyzzzz, g11_zzz_xzzzzz, g11_zzz_yyyyyy,\
                                         g11_zzz_yyyyyz, g11_zzz_yyyyzz, g11_zzz_yyyzzz,\
                                         g11_zzz_yyzzzz, g11_zzz_yzzzzz, g11_zzz_zzzzzz,\
                                         g_xxxx_xxxxxx, g_xxxx_xxxxxy, g_xxxx_xxxxxz,\
                                         g_xxxx_xxxxyy, g_xxxx_xxxxyz, g_xxxx_xxxxzz,\
                                         g_xxxx_xxxyyy, g_xxxx_xxxyyz, g_xxxx_xxxyzz,\
                                         g_xxxx_xxxzzz, g_xxxx_xxyyyy, g_xxxx_xxyyyz,\
                                         g_xxxx_xxyyzz, g_xxxx_xxyzzz, g_xxxx_xxzzzz,\
                                         g_xxxx_xyyyyy, g_xxxx_xyyyyz, g_xxxx_xyyyzz,\
                                         g_xxxx_xyyzzz, g_xxxx_xyzzzz, g_xxxx_xzzzzz,\
                                         g_xxxx_yyyyyy, g_xxxx_yyyyyz, g_xxxx_yyyyzz,\
                                         g_xxxx_yyyzzz, g_xxxx_yyzzzz, g_xxxx_yzzzzz,\
                                         g_xxxx_zzzzzz, g_xxxy_xxxxxx, g_xxxy_xxxxxy,\
                                         g_xxxy_xxxxxz, g_xxxy_xxxxyy, g_xxxy_xxxxyz,\
                                         g_xxxy_xxxxzz, g_xxxy_xxxyyy, g_xxxy_xxxyyz,\
                                         g_xxxy_xxxyzz, g_xxxy_xxxzzz, g_xxxy_xxyyyy,\
                                         g_xxxy_xxyyyz, g_xxxy_xxyyzz, g_xxxy_xxyzzz,\
                                         g_xxxy_xxzzzz, g_xxxy_xyyyyy, g_xxxy_xyyyyz,\
                                         g_xxxy_xyyyzz, g_xxxy_xyyzzz, g_xxxy_xyzzzz,\
                                         g_xxxy_xzzzzz, g_xxxy_yyyyyy, g_xxxy_yyyyyz,\
                                         g_xxxy_yyyyzz, g_xxxy_yyyzzz, g_xxxy_yyzzzz,\
                                         g_xxxy_yzzzzz, g_xxxy_zzzzzz, g_xxxz_xxxxxx,\
                                         g_xxxz_xxxxxy, g_xxxz_xxxxxz, g_xxxz_xxxxyy,\
                                         g_xxxz_xxxxyz, g_xxxz_xxxxzz, g_xxxz_xxxyyy,\
                                         g_xxxz_xxxyyz, g_xxxz_xxxyzz, g_xxxz_xxxzzz,\
                                         g_xxxz_xxyyyy, g_xxxz_xxyyyz, g_xxxz_xxyyzz,\
                                         g_xxxz_xxyzzz, g_xxxz_xxzzzz, g_xxxz_xyyyyy,\
                                         g_xxxz_xyyyyz, g_xxxz_xyyyzz, g_xxxz_xyyzzz,\
                                         g_xxxz_xyzzzz, g_xxxz_xzzzzz, g_xxxz_yyyyyy,\
                                         g_xxxz_yyyyyz, g_xxxz_yyyyzz, g_xxxz_yyyzzz,\
                                         g_xxxz_yyzzzz, g_xxxz_yzzzzz, g_xxxz_zzzzzz,\
                                         g_xxyy_xxxxxx, g_xxyy_xxxxxy, g_xxyy_xxxxxz,\
                                         g_xxyy_xxxxyy, g_xxyy_xxxxyz, g_xxyy_xxxxzz,\
                                         g_xxyy_xxxyyy, g_xxyy_xxxyyz, g_xxyy_xxxyzz,\
                                         g_xxyy_xxxzzz, g_xxyy_xxyyyy, g_xxyy_xxyyyz,\
                                         g_xxyy_xxyyzz, g_xxyy_xxyzzz, g_xxyy_xxzzzz,\
                                         g_xxyy_xyyyyy, g_xxyy_xyyyyz, g_xxyy_xyyyzz,\
                                         g_xxyy_xyyzzz, g_xxyy_xyzzzz, g_xxyy_xzzzzz,\
                                         g_xxyy_yyyyyy, g_xxyy_yyyyyz, g_xxyy_yyyyzz,\
                                         g_xxyy_yyyzzz, g_xxyy_yyzzzz, g_xxyy_yzzzzz,\
                                         g_xxyy_zzzzzz, g_xxyz_xxxxxx, g_xxyz_xxxxxy,\
                                         g_xxyz_xxxxxz, g_xxyz_xxxxyy, g_xxyz_xxxxyz,\
                                         g_xxyz_xxxxzz, g_xxyz_xxxyyy, g_xxyz_xxxyyz,\
                                         g_xxyz_xxxyzz, g_xxyz_xxxzzz, g_xxyz_xxyyyy,\
                                         g_xxyz_xxyyyz, g_xxyz_xxyyzz, g_xxyz_xxyzzz,\
                                         g_xxyz_xxzzzz, g_xxyz_xyyyyy, g_xxyz_xyyyyz,\
                                         g_xxyz_xyyyzz, g_xxyz_xyyzzz, g_xxyz_xyzzzz,\
                                         g_xxyz_xzzzzz, g_xxyz_yyyyyy, g_xxyz_yyyyyz,\
                                         g_xxyz_yyyyzz, g_xxyz_yyyzzz, g_xxyz_yyzzzz,\
                                         g_xxyz_yzzzzz, g_xxyz_zzzzzz, g_xxzz_xxxxxx,\
                                         g_xxzz_xxxxxy, g_xxzz_xxxxxz, g_xxzz_xxxxyy,\
                                         g_xxzz_xxxxyz, g_xxzz_xxxxzz, g_xxzz_xxxyyy,\
                                         g_xxzz_xxxyyz, g_xxzz_xxxyzz, g_xxzz_xxxzzz,\
                                         g_xxzz_xxyyyy, g_xxzz_xxyyyz, g_xxzz_xxyyzz,\
                                         g_xxzz_xxyzzz, g_xxzz_xxzzzz, g_xxzz_xyyyyy,\
                                         g_xxzz_xyyyyz, g_xxzz_xyyyzz, g_xxzz_xyyzzz,\
                                         g_xxzz_xyzzzz, g_xxzz_xzzzzz, g_xxzz_yyyyyy,\
                                         g_xxzz_yyyyyz, g_xxzz_yyyyzz, g_xxzz_yyyzzz,\
                                         g_xxzz_yyzzzz, g_xxzz_yzzzzz, g_xxzz_zzzzzz,\
                                         g_xyyy_xxxxxx, g_xyyy_xxxxxy, g_xyyy_xxxxxz,\
                                         g_xyyy_xxxxyy, g_xyyy_xxxxyz, g_xyyy_xxxxzz,\
                                         g_xyyy_xxxyyy, g_xyyy_xxxyyz, g_xyyy_xxxyzz,\
                                         g_xyyy_xxxzzz, g_xyyy_xxyyyy, g_xyyy_xxyyyz,\
                                         g_xyyy_xxyyzz, g_xyyy_xxyzzz, g_xyyy_xxzzzz,\
                                         g_xyyy_xyyyyy, g_xyyy_xyyyyz, g_xyyy_xyyyzz,\
                                         g_xyyy_xyyzzz, g_xyyy_xyzzzz, g_xyyy_xzzzzz,\
                                         g_xyyy_yyyyyy, g_xyyy_yyyyyz, g_xyyy_yyyyzz,\
                                         g_xyyy_yyyzzz, g_xyyy_yyzzzz, g_xyyy_yzzzzz,\
                                         g_xyyy_zzzzzz, g_xyyz_xxxxxx, g_xyyz_xxxxxy,\
                                         g_xyyz_xxxxxz, g_xyyz_xxxxyy, g_xyyz_xxxxyz,\
                                         g_xyyz_xxxxzz, g_xyyz_xxxyyy, g_xyyz_xxxyyz,\
                                         g_xyyz_xxxyzz, g_xyyz_xxxzzz, g_xyyz_xxyyyy,\
                                         g_xyyz_xxyyyz, g_xyyz_xxyyzz, g_xyyz_xxyzzz,\
                                         g_xyyz_xxzzzz, g_xyyz_xyyyyy, g_xyyz_xyyyyz,\
                                         g_xyyz_xyyyzz, g_xyyz_xyyzzz, g_xyyz_xyzzzz,\
                                         g_xyyz_xzzzzz, g_xyyz_yyyyyy, g_xyyz_yyyyyz,\
                                         g_xyyz_yyyyzz, g_xyyz_yyyzzz, g_xyyz_yyzzzz,\
                                         g_xyyz_yzzzzz, g_xyyz_zzzzzz, g_xyzz_xxxxxx,\
                                         g_xyzz_xxxxxy, g_xyzz_xxxxxz, g_xyzz_xxxxyy,\
                                         g_xyzz_xxxxyz, g_xyzz_xxxxzz, g_xyzz_xxxyyy,\
                                         g_xyzz_xxxyyz, g_xyzz_xxxyzz, g_xyzz_xxxzzz,\
                                         g_xyzz_xxyyyy, g_xyzz_xxyyyz, g_xyzz_xxyyzz,\
                                         g_xyzz_xxyzzz, g_xyzz_xxzzzz, g_xyzz_xyyyyy,\
                                         g_xyzz_xyyyyz, g_xyzz_xyyyzz, g_xyzz_xyyzzz,\
                                         g_xyzz_xyzzzz, g_xyzz_xzzzzz, g_xyzz_yyyyyy,\
                                         g_xyzz_yyyyyz, g_xyzz_yyyyzz, g_xyzz_yyyzzz,\
                                         g_xyzz_yyzzzz, g_xyzz_yzzzzz, g_xyzz_zzzzzz,\
                                         g_xzzz_xxxxxx, g_xzzz_xxxxxy, g_xzzz_xxxxxz,\
                                         g_xzzz_xxxxyy, g_xzzz_xxxxyz, g_xzzz_xxxxzz,\
                                         g_xzzz_xxxyyy, g_xzzz_xxxyyz, g_xzzz_xxxyzz,\
                                         g_xzzz_xxxzzz, g_xzzz_xxyyyy, g_xzzz_xxyyyz,\
                                         g_xzzz_xxyyzz, g_xzzz_xxyzzz, g_xzzz_xxzzzz,\
                                         g_xzzz_xyyyyy, g_xzzz_xyyyyz, g_xzzz_xyyyzz,\
                                         g_xzzz_xyyzzz, g_xzzz_xyzzzz, g_xzzz_xzzzzz,\
                                         g_xzzz_yyyyyy, g_xzzz_yyyyyz, g_xzzz_yyyyzz,\
                                         g_xzzz_yyyzzz, g_xzzz_yyzzzz, g_xzzz_yzzzzz,\
                                         g_xzzz_zzzzzz, g_yyyy_xxxxxx, g_yyyy_xxxxxy,\
                                         g_yyyy_xxxxxz, g_yyyy_xxxxyy, g_yyyy_xxxxyz,\
                                         g_yyyy_xxxxzz, g_yyyy_xxxyyy, g_yyyy_xxxyyz,\
                                         g_yyyy_xxxyzz, g_yyyy_xxxzzz, g_yyyy_xxyyyy,\
                                         g_yyyy_xxyyyz, g_yyyy_xxyyzz, g_yyyy_xxyzzz,\
                                         g_yyyy_xxzzzz, g_yyyy_xyyyyy, g_yyyy_xyyyyz,\
                                         g_yyyy_xyyyzz, g_yyyy_xyyzzz, g_yyyy_xyzzzz,\
                                         g_yyyy_xzzzzz, g_yyyy_yyyyyy, g_yyyy_yyyyyz,\
                                         g_yyyy_yyyyzz, g_yyyy_yyyzzz, g_yyyy_yyzzzz,\
                                         g_yyyy_yzzzzz, g_yyyy_zzzzzz, g_yyyz_xxxxxx,\
                                         g_yyyz_xxxxxy, g_yyyz_xxxxxz, g_yyyz_xxxxyy,\
                                         g_yyyz_xxxxyz, g_yyyz_xxxxzz, g_yyyz_xxxyyy,\
                                         g_yyyz_xxxyyz, g_yyyz_xxxyzz, g_yyyz_xxxzzz,\
                                         g_yyyz_xxyyyy, g_yyyz_xxyyyz, g_yyyz_xxyyzz,\
                                         g_yyyz_xxyzzz, g_yyyz_xxzzzz, g_yyyz_xyyyyy,\
                                         g_yyyz_xyyyyz, g_yyyz_xyyyzz, g_yyyz_xyyzzz,\
                                         g_yyyz_xyzzzz, g_yyyz_xzzzzz, g_yyyz_yyyyyy,\
                                         g_yyyz_yyyyyz, g_yyyz_yyyyzz, g_yyyz_yyyzzz,\
                                         g_yyyz_yyzzzz, g_yyyz_yzzzzz, g_yyyz_zzzzzz,\
                                         g_yyzz_xxxxxx, g_yyzz_xxxxxy, g_yyzz_xxxxxz,\
                                         g_yyzz_xxxxyy, g_yyzz_xxxxyz, g_yyzz_xxxxzz,\
                                         g_yyzz_xxxyyy, g_yyzz_xxxyyz, g_yyzz_xxxyzz,\
                                         g_yyzz_xxxzzz, g_yyzz_xxyyyy, g_yyzz_xxyyyz,\
                                         g_yyzz_xxyyzz, g_yyzz_xxyzzz, g_yyzz_xxzzzz,\
                                         g_yyzz_xyyyyy, g_yyzz_xyyyyz, g_yyzz_xyyyzz,\
                                         g_yyzz_xyyzzz, g_yyzz_xyzzzz, g_yyzz_xzzzzz,\
                                         g_yyzz_yyyyyy, g_yyzz_yyyyyz, g_yyzz_yyyyzz,\
                                         g_yyzz_yyyzzz, g_yyzz_yyzzzz, g_yyzz_yzzzzz,\
                                         g_yyzz_zzzzzz, g_yzzz_xxxxxx, g_yzzz_xxxxxy,\
                                         g_yzzz_xxxxxz, g_yzzz_xxxxyy, g_yzzz_xxxxyz,\
                                         g_yzzz_xxxxzz, g_yzzz_xxxyyy, g_yzzz_xxxyyz,\
                                         g_yzzz_xxxyzz, g_yzzz_xxxzzz, g_yzzz_xxyyyy,\
                                         g_yzzz_xxyyyz, g_yzzz_xxyyzz, g_yzzz_xxyzzz,\
                                         g_yzzz_xxzzzz, g_yzzz_xyyyyy, g_yzzz_xyyyyz,\
                                         g_yzzz_xyyyzz, g_yzzz_xyyzzz, g_yzzz_xyzzzz,\
                                         g_yzzz_xzzzzz, g_yzzz_yyyyyy, g_yzzz_yyyyyz,\
                                         g_yzzz_yyyyzz, g_yzzz_yyyzzz, g_yzzz_yyzzzz,\
                                         g_yzzz_yzzzzz, g_yzzz_zzzzzz, g_zzzz_xxxxxx,\
                                         g_zzzz_xxxxxy, g_zzzz_xxxxxz, g_zzzz_xxxxyy,\
                                         g_zzzz_xxxxyz, g_zzzz_xxxxzz, g_zzzz_xxxyyy,\
                                         g_zzzz_xxxyyz, g_zzzz_xxxyzz, g_zzzz_xxxzzz,\
                                         g_zzzz_xxyyyy, g_zzzz_xxyyyz, g_zzzz_xxyyzz,\
                                         g_zzzz_xxyzzz, g_zzzz_xxzzzz, g_zzzz_xyyyyy,\
                                         g_zzzz_xyyyyz, g_zzzz_xyyyzz, g_zzzz_xyyzzz,\
                                         g_zzzz_xyzzzz, g_zzzz_xzzzzz, g_zzzz_yyyyyy,\
                                         g_zzzz_yyyyyz, g_zzzz_yyyyzz, g_zzzz_yyyzzz,\
                                         g_zzzz_yyzzzz, g_zzzz_yzzzzz, g_zzzz_zzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxxxxx[k] = fr * g11_xxx_xxxxxx[k] + f2g * (3.0 * g20_xx_xxxxxx[k] - 3.0 * fgz * g21_xx_xxxxxx[k]) + 6.0 * f2t * gk_xxx_xxxxx[k];

                    g_xxxx_xxxxxy[k] = fr * g11_xxx_xxxxxy[k] + f2g * (3.0 * g20_xx_xxxxxy[k] - 3.0 * fgz * g21_xx_xxxxxy[k]) + 5.0 * f2t * gk_xxx_xxxxy[k];

                    g_xxxx_xxxxxz[k] = fr * g11_xxx_xxxxxz[k] + f2g * (3.0 * g20_xx_xxxxxz[k] - 3.0 * fgz * g21_xx_xxxxxz[k]) + 5.0 * f2t * gk_xxx_xxxxz[k];

                    g_xxxx_xxxxyy[k] = fr * g11_xxx_xxxxyy[k] + f2g * (3.0 * g20_xx_xxxxyy[k] - 3.0 * fgz * g21_xx_xxxxyy[k]) + 4.0 * f2t * gk_xxx_xxxyy[k];

                    g_xxxx_xxxxyz[k] = fr * g11_xxx_xxxxyz[k] + f2g * (3.0 * g20_xx_xxxxyz[k] - 3.0 * fgz * g21_xx_xxxxyz[k]) + 4.0 * f2t * gk_xxx_xxxyz[k];

                    g_xxxx_xxxxzz[k] = fr * g11_xxx_xxxxzz[k] + f2g * (3.0 * g20_xx_xxxxzz[k] - 3.0 * fgz * g21_xx_xxxxzz[k]) + 4.0 * f2t * gk_xxx_xxxzz[k];

                    g_xxxx_xxxyyy[k] = fr * g11_xxx_xxxyyy[k] + f2g * (3.0 * g20_xx_xxxyyy[k] - 3.0 * fgz * g21_xx_xxxyyy[k]) + 3.0 * f2t * gk_xxx_xxyyy[k];

                    g_xxxx_xxxyyz[k] = fr * g11_xxx_xxxyyz[k] + f2g * (3.0 * g20_xx_xxxyyz[k] - 3.0 * fgz * g21_xx_xxxyyz[k]) + 3.0 * f2t * gk_xxx_xxyyz[k];

                    g_xxxx_xxxyzz[k] = fr * g11_xxx_xxxyzz[k] + f2g * (3.0 * g20_xx_xxxyzz[k] - 3.0 * fgz * g21_xx_xxxyzz[k]) + 3.0 * f2t * gk_xxx_xxyzz[k];

                    g_xxxx_xxxzzz[k] = fr * g11_xxx_xxxzzz[k] + f2g * (3.0 * g20_xx_xxxzzz[k] - 3.0 * fgz * g21_xx_xxxzzz[k]) + 3.0 * f2t * gk_xxx_xxzzz[k];

                    g_xxxx_xxyyyy[k] = fr * g11_xxx_xxyyyy[k] + f2g * (3.0 * g20_xx_xxyyyy[k] - 3.0 * fgz * g21_xx_xxyyyy[k]) + 2.0 * f2t * gk_xxx_xyyyy[k];

                    g_xxxx_xxyyyz[k] = fr * g11_xxx_xxyyyz[k] + f2g * (3.0 * g20_xx_xxyyyz[k] - 3.0 * fgz * g21_xx_xxyyyz[k]) + 2.0 * f2t * gk_xxx_xyyyz[k];

                    g_xxxx_xxyyzz[k] = fr * g11_xxx_xxyyzz[k] + f2g * (3.0 * g20_xx_xxyyzz[k] - 3.0 * fgz * g21_xx_xxyyzz[k]) + 2.0 * f2t * gk_xxx_xyyzz[k];

                    g_xxxx_xxyzzz[k] = fr * g11_xxx_xxyzzz[k] + f2g * (3.0 * g20_xx_xxyzzz[k] - 3.0 * fgz * g21_xx_xxyzzz[k]) + 2.0 * f2t * gk_xxx_xyzzz[k];

                    g_xxxx_xxzzzz[k] = fr * g11_xxx_xxzzzz[k] + f2g * (3.0 * g20_xx_xxzzzz[k] - 3.0 * fgz * g21_xx_xxzzzz[k]) + 2.0 * f2t * gk_xxx_xzzzz[k];

                    g_xxxx_xyyyyy[k] = fr * g11_xxx_xyyyyy[k] + f2g * (3.0 * g20_xx_xyyyyy[k] - 3.0 * fgz * g21_xx_xyyyyy[k]) + f2t * gk_xxx_yyyyy[k];

                    g_xxxx_xyyyyz[k] = fr * g11_xxx_xyyyyz[k] + f2g * (3.0 * g20_xx_xyyyyz[k] - 3.0 * fgz * g21_xx_xyyyyz[k]) + f2t * gk_xxx_yyyyz[k];

                    g_xxxx_xyyyzz[k] = fr * g11_xxx_xyyyzz[k] + f2g * (3.0 * g20_xx_xyyyzz[k] - 3.0 * fgz * g21_xx_xyyyzz[k]) + f2t * gk_xxx_yyyzz[k];

                    g_xxxx_xyyzzz[k] = fr * g11_xxx_xyyzzz[k] + f2g * (3.0 * g20_xx_xyyzzz[k] - 3.0 * fgz * g21_xx_xyyzzz[k]) + f2t * gk_xxx_yyzzz[k];

                    g_xxxx_xyzzzz[k] = fr * g11_xxx_xyzzzz[k] + f2g * (3.0 * g20_xx_xyzzzz[k] - 3.0 * fgz * g21_xx_xyzzzz[k]) + f2t * gk_xxx_yzzzz[k];

                    g_xxxx_xzzzzz[k] = fr * g11_xxx_xzzzzz[k] + f2g * (3.0 * g20_xx_xzzzzz[k] - 3.0 * fgz * g21_xx_xzzzzz[k]) + f2t * gk_xxx_zzzzz[k];

                    g_xxxx_yyyyyy[k] = fr * g11_xxx_yyyyyy[k] + f2g * (3.0 * g20_xx_yyyyyy[k] - 3.0 * fgz * g21_xx_yyyyyy[k]);

                    g_xxxx_yyyyyz[k] = fr * g11_xxx_yyyyyz[k] + f2g * (3.0 * g20_xx_yyyyyz[k] - 3.0 * fgz * g21_xx_yyyyyz[k]);

                    g_xxxx_yyyyzz[k] = fr * g11_xxx_yyyyzz[k] + f2g * (3.0 * g20_xx_yyyyzz[k] - 3.0 * fgz * g21_xx_yyyyzz[k]);

                    g_xxxx_yyyzzz[k] = fr * g11_xxx_yyyzzz[k] + f2g * (3.0 * g20_xx_yyyzzz[k] - 3.0 * fgz * g21_xx_yyyzzz[k]);

                    g_xxxx_yyzzzz[k] = fr * g11_xxx_yyzzzz[k] + f2g * (3.0 * g20_xx_yyzzzz[k] - 3.0 * fgz * g21_xx_yyzzzz[k]);

                    g_xxxx_yzzzzz[k] = fr * g11_xxx_yzzzzz[k] + f2g * (3.0 * g20_xx_yzzzzz[k] - 3.0 * fgz * g21_xx_yzzzzz[k]);

                    g_xxxx_zzzzzz[k] = fr * g11_xxx_zzzzzz[k] + f2g * (3.0 * g20_xx_zzzzzz[k] - 3.0 * fgz * g21_xx_zzzzzz[k]);

                    g_xxxy_xxxxxx[k] = fr * g11_xxy_xxxxxx[k] + f2g * (2.0 * g20_xy_xxxxxx[k] - 2.0 * fgz * g21_xy_xxxxxx[k]) + 6.0 * f2t * gk_xxy_xxxxx[k];

                    g_xxxy_xxxxxy[k] = fr * g11_xxy_xxxxxy[k] + f2g * (2.0 * g20_xy_xxxxxy[k] - 2.0 * fgz * g21_xy_xxxxxy[k]) + 5.0 * f2t * gk_xxy_xxxxy[k];

                    g_xxxy_xxxxxz[k] = fr * g11_xxy_xxxxxz[k] + f2g * (2.0 * g20_xy_xxxxxz[k] - 2.0 * fgz * g21_xy_xxxxxz[k]) + 5.0 * f2t * gk_xxy_xxxxz[k];

                    g_xxxy_xxxxyy[k] = fr * g11_xxy_xxxxyy[k] + f2g * (2.0 * g20_xy_xxxxyy[k] - 2.0 * fgz * g21_xy_xxxxyy[k]) + 4.0 * f2t * gk_xxy_xxxyy[k];

                    g_xxxy_xxxxyz[k] = fr * g11_xxy_xxxxyz[k] + f2g * (2.0 * g20_xy_xxxxyz[k] - 2.0 * fgz * g21_xy_xxxxyz[k]) + 4.0 * f2t * gk_xxy_xxxyz[k];

                    g_xxxy_xxxxzz[k] = fr * g11_xxy_xxxxzz[k] + f2g * (2.0 * g20_xy_xxxxzz[k] - 2.0 * fgz * g21_xy_xxxxzz[k]) + 4.0 * f2t * gk_xxy_xxxzz[k];

                    g_xxxy_xxxyyy[k] = fr * g11_xxy_xxxyyy[k] + f2g * (2.0 * g20_xy_xxxyyy[k] - 2.0 * fgz * g21_xy_xxxyyy[k]) + 3.0 * f2t * gk_xxy_xxyyy[k];

                    g_xxxy_xxxyyz[k] = fr * g11_xxy_xxxyyz[k] + f2g * (2.0 * g20_xy_xxxyyz[k] - 2.0 * fgz * g21_xy_xxxyyz[k]) + 3.0 * f2t * gk_xxy_xxyyz[k];

                    g_xxxy_xxxyzz[k] = fr * g11_xxy_xxxyzz[k] + f2g * (2.0 * g20_xy_xxxyzz[k] - 2.0 * fgz * g21_xy_xxxyzz[k]) + 3.0 * f2t * gk_xxy_xxyzz[k];

                    g_xxxy_xxxzzz[k] = fr * g11_xxy_xxxzzz[k] + f2g * (2.0 * g20_xy_xxxzzz[k] - 2.0 * fgz * g21_xy_xxxzzz[k]) + 3.0 * f2t * gk_xxy_xxzzz[k];

                    g_xxxy_xxyyyy[k] = fr * g11_xxy_xxyyyy[k] + f2g * (2.0 * g20_xy_xxyyyy[k] - 2.0 * fgz * g21_xy_xxyyyy[k]) + 2.0 * f2t * gk_xxy_xyyyy[k];

                    g_xxxy_xxyyyz[k] = fr * g11_xxy_xxyyyz[k] + f2g * (2.0 * g20_xy_xxyyyz[k] - 2.0 * fgz * g21_xy_xxyyyz[k]) + 2.0 * f2t * gk_xxy_xyyyz[k];

                    g_xxxy_xxyyzz[k] = fr * g11_xxy_xxyyzz[k] + f2g * (2.0 * g20_xy_xxyyzz[k] - 2.0 * fgz * g21_xy_xxyyzz[k]) + 2.0 * f2t * gk_xxy_xyyzz[k];

                    g_xxxy_xxyzzz[k] = fr * g11_xxy_xxyzzz[k] + f2g * (2.0 * g20_xy_xxyzzz[k] - 2.0 * fgz * g21_xy_xxyzzz[k]) + 2.0 * f2t * gk_xxy_xyzzz[k];

                    g_xxxy_xxzzzz[k] = fr * g11_xxy_xxzzzz[k] + f2g * (2.0 * g20_xy_xxzzzz[k] - 2.0 * fgz * g21_xy_xxzzzz[k]) + 2.0 * f2t * gk_xxy_xzzzz[k];

                    g_xxxy_xyyyyy[k] = fr * g11_xxy_xyyyyy[k] + f2g * (2.0 * g20_xy_xyyyyy[k] - 2.0 * fgz * g21_xy_xyyyyy[k]) + f2t * gk_xxy_yyyyy[k];

                    g_xxxy_xyyyyz[k] = fr * g11_xxy_xyyyyz[k] + f2g * (2.0 * g20_xy_xyyyyz[k] - 2.0 * fgz * g21_xy_xyyyyz[k]) + f2t * gk_xxy_yyyyz[k];

                    g_xxxy_xyyyzz[k] = fr * g11_xxy_xyyyzz[k] + f2g * (2.0 * g20_xy_xyyyzz[k] - 2.0 * fgz * g21_xy_xyyyzz[k]) + f2t * gk_xxy_yyyzz[k];

                    g_xxxy_xyyzzz[k] = fr * g11_xxy_xyyzzz[k] + f2g * (2.0 * g20_xy_xyyzzz[k] - 2.0 * fgz * g21_xy_xyyzzz[k]) + f2t * gk_xxy_yyzzz[k];

                    g_xxxy_xyzzzz[k] = fr * g11_xxy_xyzzzz[k] + f2g * (2.0 * g20_xy_xyzzzz[k] - 2.0 * fgz * g21_xy_xyzzzz[k]) + f2t * gk_xxy_yzzzz[k];

                    g_xxxy_xzzzzz[k] = fr * g11_xxy_xzzzzz[k] + f2g * (2.0 * g20_xy_xzzzzz[k] - 2.0 * fgz * g21_xy_xzzzzz[k]) + f2t * gk_xxy_zzzzz[k];

                    g_xxxy_yyyyyy[k] = fr * g11_xxy_yyyyyy[k] + f2g * (2.0 * g20_xy_yyyyyy[k] - 2.0 * fgz * g21_xy_yyyyyy[k]);

                    g_xxxy_yyyyyz[k] = fr * g11_xxy_yyyyyz[k] + f2g * (2.0 * g20_xy_yyyyyz[k] - 2.0 * fgz * g21_xy_yyyyyz[k]);

                    g_xxxy_yyyyzz[k] = fr * g11_xxy_yyyyzz[k] + f2g * (2.0 * g20_xy_yyyyzz[k] - 2.0 * fgz * g21_xy_yyyyzz[k]);

                    g_xxxy_yyyzzz[k] = fr * g11_xxy_yyyzzz[k] + f2g * (2.0 * g20_xy_yyyzzz[k] - 2.0 * fgz * g21_xy_yyyzzz[k]);

                    g_xxxy_yyzzzz[k] = fr * g11_xxy_yyzzzz[k] + f2g * (2.0 * g20_xy_yyzzzz[k] - 2.0 * fgz * g21_xy_yyzzzz[k]);

                    g_xxxy_yzzzzz[k] = fr * g11_xxy_yzzzzz[k] + f2g * (2.0 * g20_xy_yzzzzz[k] - 2.0 * fgz * g21_xy_yzzzzz[k]);

                    g_xxxy_zzzzzz[k] = fr * g11_xxy_zzzzzz[k] + f2g * (2.0 * g20_xy_zzzzzz[k] - 2.0 * fgz * g21_xy_zzzzzz[k]);

                    g_xxxz_xxxxxx[k] = fr * g11_xxz_xxxxxx[k] + f2g * (2.0 * g20_xz_xxxxxx[k] - 2.0 * fgz * g21_xz_xxxxxx[k]) + 6.0 * f2t * gk_xxz_xxxxx[k];

                    g_xxxz_xxxxxy[k] = fr * g11_xxz_xxxxxy[k] + f2g * (2.0 * g20_xz_xxxxxy[k] - 2.0 * fgz * g21_xz_xxxxxy[k]) + 5.0 * f2t * gk_xxz_xxxxy[k];

                    g_xxxz_xxxxxz[k] = fr * g11_xxz_xxxxxz[k] + f2g * (2.0 * g20_xz_xxxxxz[k] - 2.0 * fgz * g21_xz_xxxxxz[k]) + 5.0 * f2t * gk_xxz_xxxxz[k];

                    g_xxxz_xxxxyy[k] = fr * g11_xxz_xxxxyy[k] + f2g * (2.0 * g20_xz_xxxxyy[k] - 2.0 * fgz * g21_xz_xxxxyy[k]) + 4.0 * f2t * gk_xxz_xxxyy[k];

                    g_xxxz_xxxxyz[k] = fr * g11_xxz_xxxxyz[k] + f2g * (2.0 * g20_xz_xxxxyz[k] - 2.0 * fgz * g21_xz_xxxxyz[k]) + 4.0 * f2t * gk_xxz_xxxyz[k];

                    g_xxxz_xxxxzz[k] = fr * g11_xxz_xxxxzz[k] + f2g * (2.0 * g20_xz_xxxxzz[k] - 2.0 * fgz * g21_xz_xxxxzz[k]) + 4.0 * f2t * gk_xxz_xxxzz[k];

                    g_xxxz_xxxyyy[k] = fr * g11_xxz_xxxyyy[k] + f2g * (2.0 * g20_xz_xxxyyy[k] - 2.0 * fgz * g21_xz_xxxyyy[k]) + 3.0 * f2t * gk_xxz_xxyyy[k];

                    g_xxxz_xxxyyz[k] = fr * g11_xxz_xxxyyz[k] + f2g * (2.0 * g20_xz_xxxyyz[k] - 2.0 * fgz * g21_xz_xxxyyz[k]) + 3.0 * f2t * gk_xxz_xxyyz[k];

                    g_xxxz_xxxyzz[k] = fr * g11_xxz_xxxyzz[k] + f2g * (2.0 * g20_xz_xxxyzz[k] - 2.0 * fgz * g21_xz_xxxyzz[k]) + 3.0 * f2t * gk_xxz_xxyzz[k];

                    g_xxxz_xxxzzz[k] = fr * g11_xxz_xxxzzz[k] + f2g * (2.0 * g20_xz_xxxzzz[k] - 2.0 * fgz * g21_xz_xxxzzz[k]) + 3.0 * f2t * gk_xxz_xxzzz[k];

                    g_xxxz_xxyyyy[k] = fr * g11_xxz_xxyyyy[k] + f2g * (2.0 * g20_xz_xxyyyy[k] - 2.0 * fgz * g21_xz_xxyyyy[k]) + 2.0 * f2t * gk_xxz_xyyyy[k];

                    g_xxxz_xxyyyz[k] = fr * g11_xxz_xxyyyz[k] + f2g * (2.0 * g20_xz_xxyyyz[k] - 2.0 * fgz * g21_xz_xxyyyz[k]) + 2.0 * f2t * gk_xxz_xyyyz[k];

                    g_xxxz_xxyyzz[k] = fr * g11_xxz_xxyyzz[k] + f2g * (2.0 * g20_xz_xxyyzz[k] - 2.0 * fgz * g21_xz_xxyyzz[k]) + 2.0 * f2t * gk_xxz_xyyzz[k];

                    g_xxxz_xxyzzz[k] = fr * g11_xxz_xxyzzz[k] + f2g * (2.0 * g20_xz_xxyzzz[k] - 2.0 * fgz * g21_xz_xxyzzz[k]) + 2.0 * f2t * gk_xxz_xyzzz[k];

                    g_xxxz_xxzzzz[k] = fr * g11_xxz_xxzzzz[k] + f2g * (2.0 * g20_xz_xxzzzz[k] - 2.0 * fgz * g21_xz_xxzzzz[k]) + 2.0 * f2t * gk_xxz_xzzzz[k];

                    g_xxxz_xyyyyy[k] = fr * g11_xxz_xyyyyy[k] + f2g * (2.0 * g20_xz_xyyyyy[k] - 2.0 * fgz * g21_xz_xyyyyy[k]) + f2t * gk_xxz_yyyyy[k];

                    g_xxxz_xyyyyz[k] = fr * g11_xxz_xyyyyz[k] + f2g * (2.0 * g20_xz_xyyyyz[k] - 2.0 * fgz * g21_xz_xyyyyz[k]) + f2t * gk_xxz_yyyyz[k];

                    g_xxxz_xyyyzz[k] = fr * g11_xxz_xyyyzz[k] + f2g * (2.0 * g20_xz_xyyyzz[k] - 2.0 * fgz * g21_xz_xyyyzz[k]) + f2t * gk_xxz_yyyzz[k];

                    g_xxxz_xyyzzz[k] = fr * g11_xxz_xyyzzz[k] + f2g * (2.0 * g20_xz_xyyzzz[k] - 2.0 * fgz * g21_xz_xyyzzz[k]) + f2t * gk_xxz_yyzzz[k];

                    g_xxxz_xyzzzz[k] = fr * g11_xxz_xyzzzz[k] + f2g * (2.0 * g20_xz_xyzzzz[k] - 2.0 * fgz * g21_xz_xyzzzz[k]) + f2t * gk_xxz_yzzzz[k];

                    g_xxxz_xzzzzz[k] = fr * g11_xxz_xzzzzz[k] + f2g * (2.0 * g20_xz_xzzzzz[k] - 2.0 * fgz * g21_xz_xzzzzz[k]) + f2t * gk_xxz_zzzzz[k];

                    g_xxxz_yyyyyy[k] = fr * g11_xxz_yyyyyy[k] + f2g * (2.0 * g20_xz_yyyyyy[k] - 2.0 * fgz * g21_xz_yyyyyy[k]);

                    g_xxxz_yyyyyz[k] = fr * g11_xxz_yyyyyz[k] + f2g * (2.0 * g20_xz_yyyyyz[k] - 2.0 * fgz * g21_xz_yyyyyz[k]);

                    g_xxxz_yyyyzz[k] = fr * g11_xxz_yyyyzz[k] + f2g * (2.0 * g20_xz_yyyyzz[k] - 2.0 * fgz * g21_xz_yyyyzz[k]);

                    g_xxxz_yyyzzz[k] = fr * g11_xxz_yyyzzz[k] + f2g * (2.0 * g20_xz_yyyzzz[k] - 2.0 * fgz * g21_xz_yyyzzz[k]);

                    g_xxxz_yyzzzz[k] = fr * g11_xxz_yyzzzz[k] + f2g * (2.0 * g20_xz_yyzzzz[k] - 2.0 * fgz * g21_xz_yyzzzz[k]);

                    g_xxxz_yzzzzz[k] = fr * g11_xxz_yzzzzz[k] + f2g * (2.0 * g20_xz_yzzzzz[k] - 2.0 * fgz * g21_xz_yzzzzz[k]);

                    g_xxxz_zzzzzz[k] = fr * g11_xxz_zzzzzz[k] + f2g * (2.0 * g20_xz_zzzzzz[k] - 2.0 * fgz * g21_xz_zzzzzz[k]);

                    g_xxyy_xxxxxx[k] = fr * g11_xyy_xxxxxx[k] + f2g * (g20_yy_xxxxxx[k] - fgz * g21_yy_xxxxxx[k]) + 6.0 * f2t * gk_xyy_xxxxx[k];

                    g_xxyy_xxxxxy[k] = fr * g11_xyy_xxxxxy[k] + f2g * (g20_yy_xxxxxy[k] - fgz * g21_yy_xxxxxy[k]) + 5.0 * f2t * gk_xyy_xxxxy[k];

                    g_xxyy_xxxxxz[k] = fr * g11_xyy_xxxxxz[k] + f2g * (g20_yy_xxxxxz[k] - fgz * g21_yy_xxxxxz[k]) + 5.0 * f2t * gk_xyy_xxxxz[k];

                    g_xxyy_xxxxyy[k] = fr * g11_xyy_xxxxyy[k] + f2g * (g20_yy_xxxxyy[k] - fgz * g21_yy_xxxxyy[k]) + 4.0 * f2t * gk_xyy_xxxyy[k];

                    g_xxyy_xxxxyz[k] = fr * g11_xyy_xxxxyz[k] + f2g * (g20_yy_xxxxyz[k] - fgz * g21_yy_xxxxyz[k]) + 4.0 * f2t * gk_xyy_xxxyz[k];

                    g_xxyy_xxxxzz[k] = fr * g11_xyy_xxxxzz[k] + f2g * (g20_yy_xxxxzz[k] - fgz * g21_yy_xxxxzz[k]) + 4.0 * f2t * gk_xyy_xxxzz[k];

                    g_xxyy_xxxyyy[k] = fr * g11_xyy_xxxyyy[k] + f2g * (g20_yy_xxxyyy[k] - fgz * g21_yy_xxxyyy[k]) + 3.0 * f2t * gk_xyy_xxyyy[k];

                    g_xxyy_xxxyyz[k] = fr * g11_xyy_xxxyyz[k] + f2g * (g20_yy_xxxyyz[k] - fgz * g21_yy_xxxyyz[k]) + 3.0 * f2t * gk_xyy_xxyyz[k];

                    g_xxyy_xxxyzz[k] = fr * g11_xyy_xxxyzz[k] + f2g * (g20_yy_xxxyzz[k] - fgz * g21_yy_xxxyzz[k]) + 3.0 * f2t * gk_xyy_xxyzz[k];

                    g_xxyy_xxxzzz[k] = fr * g11_xyy_xxxzzz[k] + f2g * (g20_yy_xxxzzz[k] - fgz * g21_yy_xxxzzz[k]) + 3.0 * f2t * gk_xyy_xxzzz[k];

                    g_xxyy_xxyyyy[k] = fr * g11_xyy_xxyyyy[k] + f2g * (g20_yy_xxyyyy[k] - fgz * g21_yy_xxyyyy[k]) + 2.0 * f2t * gk_xyy_xyyyy[k];

                    g_xxyy_xxyyyz[k] = fr * g11_xyy_xxyyyz[k] + f2g * (g20_yy_xxyyyz[k] - fgz * g21_yy_xxyyyz[k]) + 2.0 * f2t * gk_xyy_xyyyz[k];

                    g_xxyy_xxyyzz[k] = fr * g11_xyy_xxyyzz[k] + f2g * (g20_yy_xxyyzz[k] - fgz * g21_yy_xxyyzz[k]) + 2.0 * f2t * gk_xyy_xyyzz[k];

                    g_xxyy_xxyzzz[k] = fr * g11_xyy_xxyzzz[k] + f2g * (g20_yy_xxyzzz[k] - fgz * g21_yy_xxyzzz[k]) + 2.0 * f2t * gk_xyy_xyzzz[k];

                    g_xxyy_xxzzzz[k] = fr * g11_xyy_xxzzzz[k] + f2g * (g20_yy_xxzzzz[k] - fgz * g21_yy_xxzzzz[k]) + 2.0 * f2t * gk_xyy_xzzzz[k];

                    g_xxyy_xyyyyy[k] = fr * g11_xyy_xyyyyy[k] + f2g * (g20_yy_xyyyyy[k] - fgz * g21_yy_xyyyyy[k]) + f2t * gk_xyy_yyyyy[k];

                    g_xxyy_xyyyyz[k] = fr * g11_xyy_xyyyyz[k] + f2g * (g20_yy_xyyyyz[k] - fgz * g21_yy_xyyyyz[k]) + f2t * gk_xyy_yyyyz[k];

                    g_xxyy_xyyyzz[k] = fr * g11_xyy_xyyyzz[k] + f2g * (g20_yy_xyyyzz[k] - fgz * g21_yy_xyyyzz[k]) + f2t * gk_xyy_yyyzz[k];

                    g_xxyy_xyyzzz[k] = fr * g11_xyy_xyyzzz[k] + f2g * (g20_yy_xyyzzz[k] - fgz * g21_yy_xyyzzz[k]) + f2t * gk_xyy_yyzzz[k];

                    g_xxyy_xyzzzz[k] = fr * g11_xyy_xyzzzz[k] + f2g * (g20_yy_xyzzzz[k] - fgz * g21_yy_xyzzzz[k]) + f2t * gk_xyy_yzzzz[k];

                    g_xxyy_xzzzzz[k] = fr * g11_xyy_xzzzzz[k] + f2g * (g20_yy_xzzzzz[k] - fgz * g21_yy_xzzzzz[k]) + f2t * gk_xyy_zzzzz[k];

                    g_xxyy_yyyyyy[k] = fr * g11_xyy_yyyyyy[k] + f2g * (g20_yy_yyyyyy[k] - fgz * g21_yy_yyyyyy[k]);

                    g_xxyy_yyyyyz[k] = fr * g11_xyy_yyyyyz[k] + f2g * (g20_yy_yyyyyz[k] - fgz * g21_yy_yyyyyz[k]);

                    g_xxyy_yyyyzz[k] = fr * g11_xyy_yyyyzz[k] + f2g * (g20_yy_yyyyzz[k] - fgz * g21_yy_yyyyzz[k]);

                    g_xxyy_yyyzzz[k] = fr * g11_xyy_yyyzzz[k] + f2g * (g20_yy_yyyzzz[k] - fgz * g21_yy_yyyzzz[k]);

                    g_xxyy_yyzzzz[k] = fr * g11_xyy_yyzzzz[k] + f2g * (g20_yy_yyzzzz[k] - fgz * g21_yy_yyzzzz[k]);

                    g_xxyy_yzzzzz[k] = fr * g11_xyy_yzzzzz[k] + f2g * (g20_yy_yzzzzz[k] - fgz * g21_yy_yzzzzz[k]);

                    g_xxyy_zzzzzz[k] = fr * g11_xyy_zzzzzz[k] + f2g * (g20_yy_zzzzzz[k] - fgz * g21_yy_zzzzzz[k]);

                    g_xxyz_xxxxxx[k] = fr * g11_xyz_xxxxxx[k] + f2g * (g20_yz_xxxxxx[k] - fgz * g21_yz_xxxxxx[k]) + 6.0 * f2t * gk_xyz_xxxxx[k];

                    g_xxyz_xxxxxy[k] = fr * g11_xyz_xxxxxy[k] + f2g * (g20_yz_xxxxxy[k] - fgz * g21_yz_xxxxxy[k]) + 5.0 * f2t * gk_xyz_xxxxy[k];

                    g_xxyz_xxxxxz[k] = fr * g11_xyz_xxxxxz[k] + f2g * (g20_yz_xxxxxz[k] - fgz * g21_yz_xxxxxz[k]) + 5.0 * f2t * gk_xyz_xxxxz[k];

                    g_xxyz_xxxxyy[k] = fr * g11_xyz_xxxxyy[k] + f2g * (g20_yz_xxxxyy[k] - fgz * g21_yz_xxxxyy[k]) + 4.0 * f2t * gk_xyz_xxxyy[k];

                    g_xxyz_xxxxyz[k] = fr * g11_xyz_xxxxyz[k] + f2g * (g20_yz_xxxxyz[k] - fgz * g21_yz_xxxxyz[k]) + 4.0 * f2t * gk_xyz_xxxyz[k];

                    g_xxyz_xxxxzz[k] = fr * g11_xyz_xxxxzz[k] + f2g * (g20_yz_xxxxzz[k] - fgz * g21_yz_xxxxzz[k]) + 4.0 * f2t * gk_xyz_xxxzz[k];

                    g_xxyz_xxxyyy[k] = fr * g11_xyz_xxxyyy[k] + f2g * (g20_yz_xxxyyy[k] - fgz * g21_yz_xxxyyy[k]) + 3.0 * f2t * gk_xyz_xxyyy[k];

                    g_xxyz_xxxyyz[k] = fr * g11_xyz_xxxyyz[k] + f2g * (g20_yz_xxxyyz[k] - fgz * g21_yz_xxxyyz[k]) + 3.0 * f2t * gk_xyz_xxyyz[k];

                    g_xxyz_xxxyzz[k] = fr * g11_xyz_xxxyzz[k] + f2g * (g20_yz_xxxyzz[k] - fgz * g21_yz_xxxyzz[k]) + 3.0 * f2t * gk_xyz_xxyzz[k];

                    g_xxyz_xxxzzz[k] = fr * g11_xyz_xxxzzz[k] + f2g * (g20_yz_xxxzzz[k] - fgz * g21_yz_xxxzzz[k]) + 3.0 * f2t * gk_xyz_xxzzz[k];

                    g_xxyz_xxyyyy[k] = fr * g11_xyz_xxyyyy[k] + f2g * (g20_yz_xxyyyy[k] - fgz * g21_yz_xxyyyy[k]) + 2.0 * f2t * gk_xyz_xyyyy[k];

                    g_xxyz_xxyyyz[k] = fr * g11_xyz_xxyyyz[k] + f2g * (g20_yz_xxyyyz[k] - fgz * g21_yz_xxyyyz[k]) + 2.0 * f2t * gk_xyz_xyyyz[k];

                    g_xxyz_xxyyzz[k] = fr * g11_xyz_xxyyzz[k] + f2g * (g20_yz_xxyyzz[k] - fgz * g21_yz_xxyyzz[k]) + 2.0 * f2t * gk_xyz_xyyzz[k];

                    g_xxyz_xxyzzz[k] = fr * g11_xyz_xxyzzz[k] + f2g * (g20_yz_xxyzzz[k] - fgz * g21_yz_xxyzzz[k]) + 2.0 * f2t * gk_xyz_xyzzz[k];

                    g_xxyz_xxzzzz[k] = fr * g11_xyz_xxzzzz[k] + f2g * (g20_yz_xxzzzz[k] - fgz * g21_yz_xxzzzz[k]) + 2.0 * f2t * gk_xyz_xzzzz[k];

                    g_xxyz_xyyyyy[k] = fr * g11_xyz_xyyyyy[k] + f2g * (g20_yz_xyyyyy[k] - fgz * g21_yz_xyyyyy[k]) + f2t * gk_xyz_yyyyy[k];

                    g_xxyz_xyyyyz[k] = fr * g11_xyz_xyyyyz[k] + f2g * (g20_yz_xyyyyz[k] - fgz * g21_yz_xyyyyz[k]) + f2t * gk_xyz_yyyyz[k];

                    g_xxyz_xyyyzz[k] = fr * g11_xyz_xyyyzz[k] + f2g * (g20_yz_xyyyzz[k] - fgz * g21_yz_xyyyzz[k]) + f2t * gk_xyz_yyyzz[k];

                    g_xxyz_xyyzzz[k] = fr * g11_xyz_xyyzzz[k] + f2g * (g20_yz_xyyzzz[k] - fgz * g21_yz_xyyzzz[k]) + f2t * gk_xyz_yyzzz[k];

                    g_xxyz_xyzzzz[k] = fr * g11_xyz_xyzzzz[k] + f2g * (g20_yz_xyzzzz[k] - fgz * g21_yz_xyzzzz[k]) + f2t * gk_xyz_yzzzz[k];

                    g_xxyz_xzzzzz[k] = fr * g11_xyz_xzzzzz[k] + f2g * (g20_yz_xzzzzz[k] - fgz * g21_yz_xzzzzz[k]) + f2t * gk_xyz_zzzzz[k];

                    g_xxyz_yyyyyy[k] = fr * g11_xyz_yyyyyy[k] + f2g * (g20_yz_yyyyyy[k] - fgz * g21_yz_yyyyyy[k]);

                    g_xxyz_yyyyyz[k] = fr * g11_xyz_yyyyyz[k] + f2g * (g20_yz_yyyyyz[k] - fgz * g21_yz_yyyyyz[k]);

                    g_xxyz_yyyyzz[k] = fr * g11_xyz_yyyyzz[k] + f2g * (g20_yz_yyyyzz[k] - fgz * g21_yz_yyyyzz[k]);

                    g_xxyz_yyyzzz[k] = fr * g11_xyz_yyyzzz[k] + f2g * (g20_yz_yyyzzz[k] - fgz * g21_yz_yyyzzz[k]);

                    g_xxyz_yyzzzz[k] = fr * g11_xyz_yyzzzz[k] + f2g * (g20_yz_yyzzzz[k] - fgz * g21_yz_yyzzzz[k]);

                    g_xxyz_yzzzzz[k] = fr * g11_xyz_yzzzzz[k] + f2g * (g20_yz_yzzzzz[k] - fgz * g21_yz_yzzzzz[k]);

                    g_xxyz_zzzzzz[k] = fr * g11_xyz_zzzzzz[k] + f2g * (g20_yz_zzzzzz[k] - fgz * g21_yz_zzzzzz[k]);

                    g_xxzz_xxxxxx[k] = fr * g11_xzz_xxxxxx[k] + f2g * (g20_zz_xxxxxx[k] - fgz * g21_zz_xxxxxx[k]) + 6.0 * f2t * gk_xzz_xxxxx[k];

                    g_xxzz_xxxxxy[k] = fr * g11_xzz_xxxxxy[k] + f2g * (g20_zz_xxxxxy[k] - fgz * g21_zz_xxxxxy[k]) + 5.0 * f2t * gk_xzz_xxxxy[k];

                    g_xxzz_xxxxxz[k] = fr * g11_xzz_xxxxxz[k] + f2g * (g20_zz_xxxxxz[k] - fgz * g21_zz_xxxxxz[k]) + 5.0 * f2t * gk_xzz_xxxxz[k];

                    g_xxzz_xxxxyy[k] = fr * g11_xzz_xxxxyy[k] + f2g * (g20_zz_xxxxyy[k] - fgz * g21_zz_xxxxyy[k]) + 4.0 * f2t * gk_xzz_xxxyy[k];

                    g_xxzz_xxxxyz[k] = fr * g11_xzz_xxxxyz[k] + f2g * (g20_zz_xxxxyz[k] - fgz * g21_zz_xxxxyz[k]) + 4.0 * f2t * gk_xzz_xxxyz[k];

                    g_xxzz_xxxxzz[k] = fr * g11_xzz_xxxxzz[k] + f2g * (g20_zz_xxxxzz[k] - fgz * g21_zz_xxxxzz[k]) + 4.0 * f2t * gk_xzz_xxxzz[k];

                    g_xxzz_xxxyyy[k] = fr * g11_xzz_xxxyyy[k] + f2g * (g20_zz_xxxyyy[k] - fgz * g21_zz_xxxyyy[k]) + 3.0 * f2t * gk_xzz_xxyyy[k];

                    g_xxzz_xxxyyz[k] = fr * g11_xzz_xxxyyz[k] + f2g * (g20_zz_xxxyyz[k] - fgz * g21_zz_xxxyyz[k]) + 3.0 * f2t * gk_xzz_xxyyz[k];

                    g_xxzz_xxxyzz[k] = fr * g11_xzz_xxxyzz[k] + f2g * (g20_zz_xxxyzz[k] - fgz * g21_zz_xxxyzz[k]) + 3.0 * f2t * gk_xzz_xxyzz[k];

                    g_xxzz_xxxzzz[k] = fr * g11_xzz_xxxzzz[k] + f2g * (g20_zz_xxxzzz[k] - fgz * g21_zz_xxxzzz[k]) + 3.0 * f2t * gk_xzz_xxzzz[k];

                    g_xxzz_xxyyyy[k] = fr * g11_xzz_xxyyyy[k] + f2g * (g20_zz_xxyyyy[k] - fgz * g21_zz_xxyyyy[k]) + 2.0 * f2t * gk_xzz_xyyyy[k];

                    g_xxzz_xxyyyz[k] = fr * g11_xzz_xxyyyz[k] + f2g * (g20_zz_xxyyyz[k] - fgz * g21_zz_xxyyyz[k]) + 2.0 * f2t * gk_xzz_xyyyz[k];

                    g_xxzz_xxyyzz[k] = fr * g11_xzz_xxyyzz[k] + f2g * (g20_zz_xxyyzz[k] - fgz * g21_zz_xxyyzz[k]) + 2.0 * f2t * gk_xzz_xyyzz[k];

                    g_xxzz_xxyzzz[k] = fr * g11_xzz_xxyzzz[k] + f2g * (g20_zz_xxyzzz[k] - fgz * g21_zz_xxyzzz[k]) + 2.0 * f2t * gk_xzz_xyzzz[k];

                    g_xxzz_xxzzzz[k] = fr * g11_xzz_xxzzzz[k] + f2g * (g20_zz_xxzzzz[k] - fgz * g21_zz_xxzzzz[k]) + 2.0 * f2t * gk_xzz_xzzzz[k];

                    g_xxzz_xyyyyy[k] = fr * g11_xzz_xyyyyy[k] + f2g * (g20_zz_xyyyyy[k] - fgz * g21_zz_xyyyyy[k]) + f2t * gk_xzz_yyyyy[k];

                    g_xxzz_xyyyyz[k] = fr * g11_xzz_xyyyyz[k] + f2g * (g20_zz_xyyyyz[k] - fgz * g21_zz_xyyyyz[k]) + f2t * gk_xzz_yyyyz[k];

                    g_xxzz_xyyyzz[k] = fr * g11_xzz_xyyyzz[k] + f2g * (g20_zz_xyyyzz[k] - fgz * g21_zz_xyyyzz[k]) + f2t * gk_xzz_yyyzz[k];

                    g_xxzz_xyyzzz[k] = fr * g11_xzz_xyyzzz[k] + f2g * (g20_zz_xyyzzz[k] - fgz * g21_zz_xyyzzz[k]) + f2t * gk_xzz_yyzzz[k];

                    g_xxzz_xyzzzz[k] = fr * g11_xzz_xyzzzz[k] + f2g * (g20_zz_xyzzzz[k] - fgz * g21_zz_xyzzzz[k]) + f2t * gk_xzz_yzzzz[k];

                    g_xxzz_xzzzzz[k] = fr * g11_xzz_xzzzzz[k] + f2g * (g20_zz_xzzzzz[k] - fgz * g21_zz_xzzzzz[k]) + f2t * gk_xzz_zzzzz[k];

                    g_xxzz_yyyyyy[k] = fr * g11_xzz_yyyyyy[k] + f2g * (g20_zz_yyyyyy[k] - fgz * g21_zz_yyyyyy[k]);

                    g_xxzz_yyyyyz[k] = fr * g11_xzz_yyyyyz[k] + f2g * (g20_zz_yyyyyz[k] - fgz * g21_zz_yyyyyz[k]);

                    g_xxzz_yyyyzz[k] = fr * g11_xzz_yyyyzz[k] + f2g * (g20_zz_yyyyzz[k] - fgz * g21_zz_yyyyzz[k]);

                    g_xxzz_yyyzzz[k] = fr * g11_xzz_yyyzzz[k] + f2g * (g20_zz_yyyzzz[k] - fgz * g21_zz_yyyzzz[k]);

                    g_xxzz_yyzzzz[k] = fr * g11_xzz_yyzzzz[k] + f2g * (g20_zz_yyzzzz[k] - fgz * g21_zz_yyzzzz[k]);

                    g_xxzz_yzzzzz[k] = fr * g11_xzz_yzzzzz[k] + f2g * (g20_zz_yzzzzz[k] - fgz * g21_zz_yzzzzz[k]);

                    g_xxzz_zzzzzz[k] = fr * g11_xzz_zzzzzz[k] + f2g * (g20_zz_zzzzzz[k] - fgz * g21_zz_zzzzzz[k]);

                    g_xyyy_xxxxxx[k] = fr * g11_yyy_xxxxxx[k] + 6.0 * f2t * gk_yyy_xxxxx[k];

                    g_xyyy_xxxxxy[k] = fr * g11_yyy_xxxxxy[k] + 5.0 * f2t * gk_yyy_xxxxy[k];

                    g_xyyy_xxxxxz[k] = fr * g11_yyy_xxxxxz[k] + 5.0 * f2t * gk_yyy_xxxxz[k];

                    g_xyyy_xxxxyy[k] = fr * g11_yyy_xxxxyy[k] + 4.0 * f2t * gk_yyy_xxxyy[k];

                    g_xyyy_xxxxyz[k] = fr * g11_yyy_xxxxyz[k] + 4.0 * f2t * gk_yyy_xxxyz[k];

                    g_xyyy_xxxxzz[k] = fr * g11_yyy_xxxxzz[k] + 4.0 * f2t * gk_yyy_xxxzz[k];

                    g_xyyy_xxxyyy[k] = fr * g11_yyy_xxxyyy[k] + 3.0 * f2t * gk_yyy_xxyyy[k];

                    g_xyyy_xxxyyz[k] = fr * g11_yyy_xxxyyz[k] + 3.0 * f2t * gk_yyy_xxyyz[k];

                    g_xyyy_xxxyzz[k] = fr * g11_yyy_xxxyzz[k] + 3.0 * f2t * gk_yyy_xxyzz[k];

                    g_xyyy_xxxzzz[k] = fr * g11_yyy_xxxzzz[k] + 3.0 * f2t * gk_yyy_xxzzz[k];

                    g_xyyy_xxyyyy[k] = fr * g11_yyy_xxyyyy[k] + 2.0 * f2t * gk_yyy_xyyyy[k];

                    g_xyyy_xxyyyz[k] = fr * g11_yyy_xxyyyz[k] + 2.0 * f2t * gk_yyy_xyyyz[k];

                    g_xyyy_xxyyzz[k] = fr * g11_yyy_xxyyzz[k] + 2.0 * f2t * gk_yyy_xyyzz[k];

                    g_xyyy_xxyzzz[k] = fr * g11_yyy_xxyzzz[k] + 2.0 * f2t * gk_yyy_xyzzz[k];

                    g_xyyy_xxzzzz[k] = fr * g11_yyy_xxzzzz[k] + 2.0 * f2t * gk_yyy_xzzzz[k];

                    g_xyyy_xyyyyy[k] = fr * g11_yyy_xyyyyy[k] + f2t * gk_yyy_yyyyy[k];

                    g_xyyy_xyyyyz[k] = fr * g11_yyy_xyyyyz[k] + f2t * gk_yyy_yyyyz[k];

                    g_xyyy_xyyyzz[k] = fr * g11_yyy_xyyyzz[k] + f2t * gk_yyy_yyyzz[k];

                    g_xyyy_xyyzzz[k] = fr * g11_yyy_xyyzzz[k] + f2t * gk_yyy_yyzzz[k];

                    g_xyyy_xyzzzz[k] = fr * g11_yyy_xyzzzz[k] + f2t * gk_yyy_yzzzz[k];

                    g_xyyy_xzzzzz[k] = fr * g11_yyy_xzzzzz[k] + f2t * gk_yyy_zzzzz[k];

                    g_xyyy_yyyyyy[k] = fr * g11_yyy_yyyyyy[k];

                    g_xyyy_yyyyyz[k] = fr * g11_yyy_yyyyyz[k];

                    g_xyyy_yyyyzz[k] = fr * g11_yyy_yyyyzz[k];

                    g_xyyy_yyyzzz[k] = fr * g11_yyy_yyyzzz[k];

                    g_xyyy_yyzzzz[k] = fr * g11_yyy_yyzzzz[k];

                    g_xyyy_yzzzzz[k] = fr * g11_yyy_yzzzzz[k];

                    g_xyyy_zzzzzz[k] = fr * g11_yyy_zzzzzz[k];

                    g_xyyz_xxxxxx[k] = fr * g11_yyz_xxxxxx[k] + 6.0 * f2t * gk_yyz_xxxxx[k];

                    g_xyyz_xxxxxy[k] = fr * g11_yyz_xxxxxy[k] + 5.0 * f2t * gk_yyz_xxxxy[k];

                    g_xyyz_xxxxxz[k] = fr * g11_yyz_xxxxxz[k] + 5.0 * f2t * gk_yyz_xxxxz[k];

                    g_xyyz_xxxxyy[k] = fr * g11_yyz_xxxxyy[k] + 4.0 * f2t * gk_yyz_xxxyy[k];

                    g_xyyz_xxxxyz[k] = fr * g11_yyz_xxxxyz[k] + 4.0 * f2t * gk_yyz_xxxyz[k];

                    g_xyyz_xxxxzz[k] = fr * g11_yyz_xxxxzz[k] + 4.0 * f2t * gk_yyz_xxxzz[k];

                    g_xyyz_xxxyyy[k] = fr * g11_yyz_xxxyyy[k] + 3.0 * f2t * gk_yyz_xxyyy[k];

                    g_xyyz_xxxyyz[k] = fr * g11_yyz_xxxyyz[k] + 3.0 * f2t * gk_yyz_xxyyz[k];

                    g_xyyz_xxxyzz[k] = fr * g11_yyz_xxxyzz[k] + 3.0 * f2t * gk_yyz_xxyzz[k];

                    g_xyyz_xxxzzz[k] = fr * g11_yyz_xxxzzz[k] + 3.0 * f2t * gk_yyz_xxzzz[k];

                    g_xyyz_xxyyyy[k] = fr * g11_yyz_xxyyyy[k] + 2.0 * f2t * gk_yyz_xyyyy[k];

                    g_xyyz_xxyyyz[k] = fr * g11_yyz_xxyyyz[k] + 2.0 * f2t * gk_yyz_xyyyz[k];

                    g_xyyz_xxyyzz[k] = fr * g11_yyz_xxyyzz[k] + 2.0 * f2t * gk_yyz_xyyzz[k];

                    g_xyyz_xxyzzz[k] = fr * g11_yyz_xxyzzz[k] + 2.0 * f2t * gk_yyz_xyzzz[k];

                    g_xyyz_xxzzzz[k] = fr * g11_yyz_xxzzzz[k] + 2.0 * f2t * gk_yyz_xzzzz[k];

                    g_xyyz_xyyyyy[k] = fr * g11_yyz_xyyyyy[k] + f2t * gk_yyz_yyyyy[k];

                    g_xyyz_xyyyyz[k] = fr * g11_yyz_xyyyyz[k] + f2t * gk_yyz_yyyyz[k];

                    g_xyyz_xyyyzz[k] = fr * g11_yyz_xyyyzz[k] + f2t * gk_yyz_yyyzz[k];

                    g_xyyz_xyyzzz[k] = fr * g11_yyz_xyyzzz[k] + f2t * gk_yyz_yyzzz[k];

                    g_xyyz_xyzzzz[k] = fr * g11_yyz_xyzzzz[k] + f2t * gk_yyz_yzzzz[k];

                    g_xyyz_xzzzzz[k] = fr * g11_yyz_xzzzzz[k] + f2t * gk_yyz_zzzzz[k];

                    g_xyyz_yyyyyy[k] = fr * g11_yyz_yyyyyy[k];

                    g_xyyz_yyyyyz[k] = fr * g11_yyz_yyyyyz[k];

                    g_xyyz_yyyyzz[k] = fr * g11_yyz_yyyyzz[k];

                    g_xyyz_yyyzzz[k] = fr * g11_yyz_yyyzzz[k];

                    g_xyyz_yyzzzz[k] = fr * g11_yyz_yyzzzz[k];

                    g_xyyz_yzzzzz[k] = fr * g11_yyz_yzzzzz[k];

                    g_xyyz_zzzzzz[k] = fr * g11_yyz_zzzzzz[k];

                    g_xyzz_xxxxxx[k] = fr * g11_yzz_xxxxxx[k] + 6.0 * f2t * gk_yzz_xxxxx[k];

                    g_xyzz_xxxxxy[k] = fr * g11_yzz_xxxxxy[k] + 5.0 * f2t * gk_yzz_xxxxy[k];

                    g_xyzz_xxxxxz[k] = fr * g11_yzz_xxxxxz[k] + 5.0 * f2t * gk_yzz_xxxxz[k];

                    g_xyzz_xxxxyy[k] = fr * g11_yzz_xxxxyy[k] + 4.0 * f2t * gk_yzz_xxxyy[k];

                    g_xyzz_xxxxyz[k] = fr * g11_yzz_xxxxyz[k] + 4.0 * f2t * gk_yzz_xxxyz[k];

                    g_xyzz_xxxxzz[k] = fr * g11_yzz_xxxxzz[k] + 4.0 * f2t * gk_yzz_xxxzz[k];

                    g_xyzz_xxxyyy[k] = fr * g11_yzz_xxxyyy[k] + 3.0 * f2t * gk_yzz_xxyyy[k];

                    g_xyzz_xxxyyz[k] = fr * g11_yzz_xxxyyz[k] + 3.0 * f2t * gk_yzz_xxyyz[k];

                    g_xyzz_xxxyzz[k] = fr * g11_yzz_xxxyzz[k] + 3.0 * f2t * gk_yzz_xxyzz[k];

                    g_xyzz_xxxzzz[k] = fr * g11_yzz_xxxzzz[k] + 3.0 * f2t * gk_yzz_xxzzz[k];

                    g_xyzz_xxyyyy[k] = fr * g11_yzz_xxyyyy[k] + 2.0 * f2t * gk_yzz_xyyyy[k];

                    g_xyzz_xxyyyz[k] = fr * g11_yzz_xxyyyz[k] + 2.0 * f2t * gk_yzz_xyyyz[k];

                    g_xyzz_xxyyzz[k] = fr * g11_yzz_xxyyzz[k] + 2.0 * f2t * gk_yzz_xyyzz[k];

                    g_xyzz_xxyzzz[k] = fr * g11_yzz_xxyzzz[k] + 2.0 * f2t * gk_yzz_xyzzz[k];

                    g_xyzz_xxzzzz[k] = fr * g11_yzz_xxzzzz[k] + 2.0 * f2t * gk_yzz_xzzzz[k];

                    g_xyzz_xyyyyy[k] = fr * g11_yzz_xyyyyy[k] + f2t * gk_yzz_yyyyy[k];

                    g_xyzz_xyyyyz[k] = fr * g11_yzz_xyyyyz[k] + f2t * gk_yzz_yyyyz[k];

                    g_xyzz_xyyyzz[k] = fr * g11_yzz_xyyyzz[k] + f2t * gk_yzz_yyyzz[k];

                    g_xyzz_xyyzzz[k] = fr * g11_yzz_xyyzzz[k] + f2t * gk_yzz_yyzzz[k];

                    g_xyzz_xyzzzz[k] = fr * g11_yzz_xyzzzz[k] + f2t * gk_yzz_yzzzz[k];

                    g_xyzz_xzzzzz[k] = fr * g11_yzz_xzzzzz[k] + f2t * gk_yzz_zzzzz[k];

                    g_xyzz_yyyyyy[k] = fr * g11_yzz_yyyyyy[k];

                    g_xyzz_yyyyyz[k] = fr * g11_yzz_yyyyyz[k];

                    g_xyzz_yyyyzz[k] = fr * g11_yzz_yyyyzz[k];

                    g_xyzz_yyyzzz[k] = fr * g11_yzz_yyyzzz[k];

                    g_xyzz_yyzzzz[k] = fr * g11_yzz_yyzzzz[k];

                    g_xyzz_yzzzzz[k] = fr * g11_yzz_yzzzzz[k];

                    g_xyzz_zzzzzz[k] = fr * g11_yzz_zzzzzz[k];

                    g_xzzz_xxxxxx[k] = fr * g11_zzz_xxxxxx[k] + 6.0 * f2t * gk_zzz_xxxxx[k];

                    g_xzzz_xxxxxy[k] = fr * g11_zzz_xxxxxy[k] + 5.0 * f2t * gk_zzz_xxxxy[k];

                    g_xzzz_xxxxxz[k] = fr * g11_zzz_xxxxxz[k] + 5.0 * f2t * gk_zzz_xxxxz[k];

                    g_xzzz_xxxxyy[k] = fr * g11_zzz_xxxxyy[k] + 4.0 * f2t * gk_zzz_xxxyy[k];

                    g_xzzz_xxxxyz[k] = fr * g11_zzz_xxxxyz[k] + 4.0 * f2t * gk_zzz_xxxyz[k];

                    g_xzzz_xxxxzz[k] = fr * g11_zzz_xxxxzz[k] + 4.0 * f2t * gk_zzz_xxxzz[k];

                    g_xzzz_xxxyyy[k] = fr * g11_zzz_xxxyyy[k] + 3.0 * f2t * gk_zzz_xxyyy[k];

                    g_xzzz_xxxyyz[k] = fr * g11_zzz_xxxyyz[k] + 3.0 * f2t * gk_zzz_xxyyz[k];

                    g_xzzz_xxxyzz[k] = fr * g11_zzz_xxxyzz[k] + 3.0 * f2t * gk_zzz_xxyzz[k];

                    g_xzzz_xxxzzz[k] = fr * g11_zzz_xxxzzz[k] + 3.0 * f2t * gk_zzz_xxzzz[k];

                    g_xzzz_xxyyyy[k] = fr * g11_zzz_xxyyyy[k] + 2.0 * f2t * gk_zzz_xyyyy[k];

                    g_xzzz_xxyyyz[k] = fr * g11_zzz_xxyyyz[k] + 2.0 * f2t * gk_zzz_xyyyz[k];

                    g_xzzz_xxyyzz[k] = fr * g11_zzz_xxyyzz[k] + 2.0 * f2t * gk_zzz_xyyzz[k];

                    g_xzzz_xxyzzz[k] = fr * g11_zzz_xxyzzz[k] + 2.0 * f2t * gk_zzz_xyzzz[k];

                    g_xzzz_xxzzzz[k] = fr * g11_zzz_xxzzzz[k] + 2.0 * f2t * gk_zzz_xzzzz[k];

                    g_xzzz_xyyyyy[k] = fr * g11_zzz_xyyyyy[k] + f2t * gk_zzz_yyyyy[k];

                    g_xzzz_xyyyyz[k] = fr * g11_zzz_xyyyyz[k] + f2t * gk_zzz_yyyyz[k];

                    g_xzzz_xyyyzz[k] = fr * g11_zzz_xyyyzz[k] + f2t * gk_zzz_yyyzz[k];

                    g_xzzz_xyyzzz[k] = fr * g11_zzz_xyyzzz[k] + f2t * gk_zzz_yyzzz[k];

                    g_xzzz_xyzzzz[k] = fr * g11_zzz_xyzzzz[k] + f2t * gk_zzz_yzzzz[k];

                    g_xzzz_xzzzzz[k] = fr * g11_zzz_xzzzzz[k] + f2t * gk_zzz_zzzzz[k];

                    g_xzzz_yyyyyy[k] = fr * g11_zzz_yyyyyy[k];

                    g_xzzz_yyyyyz[k] = fr * g11_zzz_yyyyyz[k];

                    g_xzzz_yyyyzz[k] = fr * g11_zzz_yyyyzz[k];

                    g_xzzz_yyyzzz[k] = fr * g11_zzz_yyyzzz[k];

                    g_xzzz_yyzzzz[k] = fr * g11_zzz_yyzzzz[k];

                    g_xzzz_yzzzzz[k] = fr * g11_zzz_yzzzzz[k];

                    g_xzzz_zzzzzz[k] = fr * g11_zzz_zzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxxxxx[k] = fr * g11_yyy_xxxxxx[k] + f2g * (3.0 * g20_yy_xxxxxx[k] - 3.0 * fgz * g21_yy_xxxxxx[k]);

                    g_yyyy_xxxxxy[k] = fr * g11_yyy_xxxxxy[k] + f2g * (3.0 * g20_yy_xxxxxy[k] - 3.0 * fgz * g21_yy_xxxxxy[k]) + f2t * gk_yyy_xxxxx[k];

                    g_yyyy_xxxxxz[k] = fr * g11_yyy_xxxxxz[k] + f2g * (3.0 * g20_yy_xxxxxz[k] - 3.0 * fgz * g21_yy_xxxxxz[k]);

                    g_yyyy_xxxxyy[k] = fr * g11_yyy_xxxxyy[k] + f2g * (3.0 * g20_yy_xxxxyy[k] - 3.0 * fgz * g21_yy_xxxxyy[k]) + 2.0 * f2t * gk_yyy_xxxxy[k];

                    g_yyyy_xxxxyz[k] = fr * g11_yyy_xxxxyz[k] + f2g * (3.0 * g20_yy_xxxxyz[k] - 3.0 * fgz * g21_yy_xxxxyz[k]) + f2t * gk_yyy_xxxxz[k];

                    g_yyyy_xxxxzz[k] = fr * g11_yyy_xxxxzz[k] + f2g * (3.0 * g20_yy_xxxxzz[k] - 3.0 * fgz * g21_yy_xxxxzz[k]);

                    g_yyyy_xxxyyy[k] = fr * g11_yyy_xxxyyy[k] + f2g * (3.0 * g20_yy_xxxyyy[k] - 3.0 * fgz * g21_yy_xxxyyy[k]) + 3.0 * f2t * gk_yyy_xxxyy[k];

                    g_yyyy_xxxyyz[k] = fr * g11_yyy_xxxyyz[k] + f2g * (3.0 * g20_yy_xxxyyz[k] - 3.0 * fgz * g21_yy_xxxyyz[k]) + 2.0 * f2t * gk_yyy_xxxyz[k];

                    g_yyyy_xxxyzz[k] = fr * g11_yyy_xxxyzz[k] + f2g * (3.0 * g20_yy_xxxyzz[k] - 3.0 * fgz * g21_yy_xxxyzz[k]) + f2t * gk_yyy_xxxzz[k];

                    g_yyyy_xxxzzz[k] = fr * g11_yyy_xxxzzz[k] + f2g * (3.0 * g20_yy_xxxzzz[k] - 3.0 * fgz * g21_yy_xxxzzz[k]);

                    g_yyyy_xxyyyy[k] = fr * g11_yyy_xxyyyy[k] + f2g * (3.0 * g20_yy_xxyyyy[k] - 3.0 * fgz * g21_yy_xxyyyy[k]) + 4.0 * f2t * gk_yyy_xxyyy[k];

                    g_yyyy_xxyyyz[k] = fr * g11_yyy_xxyyyz[k] + f2g * (3.0 * g20_yy_xxyyyz[k] - 3.0 * fgz * g21_yy_xxyyyz[k]) + 3.0 * f2t * gk_yyy_xxyyz[k];

                    g_yyyy_xxyyzz[k] = fr * g11_yyy_xxyyzz[k] + f2g * (3.0 * g20_yy_xxyyzz[k] - 3.0 * fgz * g21_yy_xxyyzz[k]) + 2.0 * f2t * gk_yyy_xxyzz[k];

                    g_yyyy_xxyzzz[k] = fr * g11_yyy_xxyzzz[k] + f2g * (3.0 * g20_yy_xxyzzz[k] - 3.0 * fgz * g21_yy_xxyzzz[k]) + f2t * gk_yyy_xxzzz[k];

                    g_yyyy_xxzzzz[k] = fr * g11_yyy_xxzzzz[k] + f2g * (3.0 * g20_yy_xxzzzz[k] - 3.0 * fgz * g21_yy_xxzzzz[k]);

                    g_yyyy_xyyyyy[k] = fr * g11_yyy_xyyyyy[k] + f2g * (3.0 * g20_yy_xyyyyy[k] - 3.0 * fgz * g21_yy_xyyyyy[k]) + 5.0 * f2t * gk_yyy_xyyyy[k];

                    g_yyyy_xyyyyz[k] = fr * g11_yyy_xyyyyz[k] + f2g * (3.0 * g20_yy_xyyyyz[k] - 3.0 * fgz * g21_yy_xyyyyz[k]) + 4.0 * f2t * gk_yyy_xyyyz[k];

                    g_yyyy_xyyyzz[k] = fr * g11_yyy_xyyyzz[k] + f2g * (3.0 * g20_yy_xyyyzz[k] - 3.0 * fgz * g21_yy_xyyyzz[k]) + 3.0 * f2t * gk_yyy_xyyzz[k];

                    g_yyyy_xyyzzz[k] = fr * g11_yyy_xyyzzz[k] + f2g * (3.0 * g20_yy_xyyzzz[k] - 3.0 * fgz * g21_yy_xyyzzz[k]) + 2.0 * f2t * gk_yyy_xyzzz[k];

                    g_yyyy_xyzzzz[k] = fr * g11_yyy_xyzzzz[k] + f2g * (3.0 * g20_yy_xyzzzz[k] - 3.0 * fgz * g21_yy_xyzzzz[k]) + f2t * gk_yyy_xzzzz[k];

                    g_yyyy_xzzzzz[k] = fr * g11_yyy_xzzzzz[k] + f2g * (3.0 * g20_yy_xzzzzz[k] - 3.0 * fgz * g21_yy_xzzzzz[k]);

                    g_yyyy_yyyyyy[k] = fr * g11_yyy_yyyyyy[k] + f2g * (3.0 * g20_yy_yyyyyy[k] - 3.0 * fgz * g21_yy_yyyyyy[k]) + 6.0 * f2t * gk_yyy_yyyyy[k];

                    g_yyyy_yyyyyz[k] = fr * g11_yyy_yyyyyz[k] + f2g * (3.0 * g20_yy_yyyyyz[k] - 3.0 * fgz * g21_yy_yyyyyz[k]) + 5.0 * f2t * gk_yyy_yyyyz[k];

                    g_yyyy_yyyyzz[k] = fr * g11_yyy_yyyyzz[k] + f2g * (3.0 * g20_yy_yyyyzz[k] - 3.0 * fgz * g21_yy_yyyyzz[k]) + 4.0 * f2t * gk_yyy_yyyzz[k];

                    g_yyyy_yyyzzz[k] = fr * g11_yyy_yyyzzz[k] + f2g * (3.0 * g20_yy_yyyzzz[k] - 3.0 * fgz * g21_yy_yyyzzz[k]) + 3.0 * f2t * gk_yyy_yyzzz[k];

                    g_yyyy_yyzzzz[k] = fr * g11_yyy_yyzzzz[k] + f2g * (3.0 * g20_yy_yyzzzz[k] - 3.0 * fgz * g21_yy_yyzzzz[k]) + 2.0 * f2t * gk_yyy_yzzzz[k];

                    g_yyyy_yzzzzz[k] = fr * g11_yyy_yzzzzz[k] + f2g * (3.0 * g20_yy_yzzzzz[k] - 3.0 * fgz * g21_yy_yzzzzz[k]) + f2t * gk_yyy_zzzzz[k];

                    g_yyyy_zzzzzz[k] = fr * g11_yyy_zzzzzz[k] + f2g * (3.0 * g20_yy_zzzzzz[k] - 3.0 * fgz * g21_yy_zzzzzz[k]);

                    g_yyyz_xxxxxx[k] = fr * g11_yyz_xxxxxx[k] + f2g * (2.0 * g20_yz_xxxxxx[k] - 2.0 * fgz * g21_yz_xxxxxx[k]);

                    g_yyyz_xxxxxy[k] = fr * g11_yyz_xxxxxy[k] + f2g * (2.0 * g20_yz_xxxxxy[k] - 2.0 * fgz * g21_yz_xxxxxy[k]) + f2t * gk_yyz_xxxxx[k];

                    g_yyyz_xxxxxz[k] = fr * g11_yyz_xxxxxz[k] + f2g * (2.0 * g20_yz_xxxxxz[k] - 2.0 * fgz * g21_yz_xxxxxz[k]);

                    g_yyyz_xxxxyy[k] = fr * g11_yyz_xxxxyy[k] + f2g * (2.0 * g20_yz_xxxxyy[k] - 2.0 * fgz * g21_yz_xxxxyy[k]) + 2.0 * f2t * gk_yyz_xxxxy[k];

                    g_yyyz_xxxxyz[k] = fr * g11_yyz_xxxxyz[k] + f2g * (2.0 * g20_yz_xxxxyz[k] - 2.0 * fgz * g21_yz_xxxxyz[k]) + f2t * gk_yyz_xxxxz[k];

                    g_yyyz_xxxxzz[k] = fr * g11_yyz_xxxxzz[k] + f2g * (2.0 * g20_yz_xxxxzz[k] - 2.0 * fgz * g21_yz_xxxxzz[k]);

                    g_yyyz_xxxyyy[k] = fr * g11_yyz_xxxyyy[k] + f2g * (2.0 * g20_yz_xxxyyy[k] - 2.0 * fgz * g21_yz_xxxyyy[k]) + 3.0 * f2t * gk_yyz_xxxyy[k];

                    g_yyyz_xxxyyz[k] = fr * g11_yyz_xxxyyz[k] + f2g * (2.0 * g20_yz_xxxyyz[k] - 2.0 * fgz * g21_yz_xxxyyz[k]) + 2.0 * f2t * gk_yyz_xxxyz[k];

                    g_yyyz_xxxyzz[k] = fr * g11_yyz_xxxyzz[k] + f2g * (2.0 * g20_yz_xxxyzz[k] - 2.0 * fgz * g21_yz_xxxyzz[k]) + f2t * gk_yyz_xxxzz[k];

                    g_yyyz_xxxzzz[k] = fr * g11_yyz_xxxzzz[k] + f2g * (2.0 * g20_yz_xxxzzz[k] - 2.0 * fgz * g21_yz_xxxzzz[k]);

                    g_yyyz_xxyyyy[k] = fr * g11_yyz_xxyyyy[k] + f2g * (2.0 * g20_yz_xxyyyy[k] - 2.0 * fgz * g21_yz_xxyyyy[k]) + 4.0 * f2t * gk_yyz_xxyyy[k];

                    g_yyyz_xxyyyz[k] = fr * g11_yyz_xxyyyz[k] + f2g * (2.0 * g20_yz_xxyyyz[k] - 2.0 * fgz * g21_yz_xxyyyz[k]) + 3.0 * f2t * gk_yyz_xxyyz[k];

                    g_yyyz_xxyyzz[k] = fr * g11_yyz_xxyyzz[k] + f2g * (2.0 * g20_yz_xxyyzz[k] - 2.0 * fgz * g21_yz_xxyyzz[k]) + 2.0 * f2t * gk_yyz_xxyzz[k];

                    g_yyyz_xxyzzz[k] = fr * g11_yyz_xxyzzz[k] + f2g * (2.0 * g20_yz_xxyzzz[k] - 2.0 * fgz * g21_yz_xxyzzz[k]) + f2t * gk_yyz_xxzzz[k];

                    g_yyyz_xxzzzz[k] = fr * g11_yyz_xxzzzz[k] + f2g * (2.0 * g20_yz_xxzzzz[k] - 2.0 * fgz * g21_yz_xxzzzz[k]);

                    g_yyyz_xyyyyy[k] = fr * g11_yyz_xyyyyy[k] + f2g * (2.0 * g20_yz_xyyyyy[k] - 2.0 * fgz * g21_yz_xyyyyy[k]) + 5.0 * f2t * gk_yyz_xyyyy[k];

                    g_yyyz_xyyyyz[k] = fr * g11_yyz_xyyyyz[k] + f2g * (2.0 * g20_yz_xyyyyz[k] - 2.0 * fgz * g21_yz_xyyyyz[k]) + 4.0 * f2t * gk_yyz_xyyyz[k];

                    g_yyyz_xyyyzz[k] = fr * g11_yyz_xyyyzz[k] + f2g * (2.0 * g20_yz_xyyyzz[k] - 2.0 * fgz * g21_yz_xyyyzz[k]) + 3.0 * f2t * gk_yyz_xyyzz[k];

                    g_yyyz_xyyzzz[k] = fr * g11_yyz_xyyzzz[k] + f2g * (2.0 * g20_yz_xyyzzz[k] - 2.0 * fgz * g21_yz_xyyzzz[k]) + 2.0 * f2t * gk_yyz_xyzzz[k];

                    g_yyyz_xyzzzz[k] = fr * g11_yyz_xyzzzz[k] + f2g * (2.0 * g20_yz_xyzzzz[k] - 2.0 * fgz * g21_yz_xyzzzz[k]) + f2t * gk_yyz_xzzzz[k];

                    g_yyyz_xzzzzz[k] = fr * g11_yyz_xzzzzz[k] + f2g * (2.0 * g20_yz_xzzzzz[k] - 2.0 * fgz * g21_yz_xzzzzz[k]);

                    g_yyyz_yyyyyy[k] = fr * g11_yyz_yyyyyy[k] + f2g * (2.0 * g20_yz_yyyyyy[k] - 2.0 * fgz * g21_yz_yyyyyy[k]) + 6.0 * f2t * gk_yyz_yyyyy[k];

                    g_yyyz_yyyyyz[k] = fr * g11_yyz_yyyyyz[k] + f2g * (2.0 * g20_yz_yyyyyz[k] - 2.0 * fgz * g21_yz_yyyyyz[k]) + 5.0 * f2t * gk_yyz_yyyyz[k];

                    g_yyyz_yyyyzz[k] = fr * g11_yyz_yyyyzz[k] + f2g * (2.0 * g20_yz_yyyyzz[k] - 2.0 * fgz * g21_yz_yyyyzz[k]) + 4.0 * f2t * gk_yyz_yyyzz[k];

                    g_yyyz_yyyzzz[k] = fr * g11_yyz_yyyzzz[k] + f2g * (2.0 * g20_yz_yyyzzz[k] - 2.0 * fgz * g21_yz_yyyzzz[k]) + 3.0 * f2t * gk_yyz_yyzzz[k];

                    g_yyyz_yyzzzz[k] = fr * g11_yyz_yyzzzz[k] + f2g * (2.0 * g20_yz_yyzzzz[k] - 2.0 * fgz * g21_yz_yyzzzz[k]) + 2.0 * f2t * gk_yyz_yzzzz[k];

                    g_yyyz_yzzzzz[k] = fr * g11_yyz_yzzzzz[k] + f2g * (2.0 * g20_yz_yzzzzz[k] - 2.0 * fgz * g21_yz_yzzzzz[k]) + f2t * gk_yyz_zzzzz[k];

                    g_yyyz_zzzzzz[k] = fr * g11_yyz_zzzzzz[k] + f2g * (2.0 * g20_yz_zzzzzz[k] - 2.0 * fgz * g21_yz_zzzzzz[k]);

                    g_yyzz_xxxxxx[k] = fr * g11_yzz_xxxxxx[k] + f2g * (g20_zz_xxxxxx[k] - fgz * g21_zz_xxxxxx[k]);

                    g_yyzz_xxxxxy[k] = fr * g11_yzz_xxxxxy[k] + f2g * (g20_zz_xxxxxy[k] - fgz * g21_zz_xxxxxy[k]) + f2t * gk_yzz_xxxxx[k];

                    g_yyzz_xxxxxz[k] = fr * g11_yzz_xxxxxz[k] + f2g * (g20_zz_xxxxxz[k] - fgz * g21_zz_xxxxxz[k]);

                    g_yyzz_xxxxyy[k] = fr * g11_yzz_xxxxyy[k] + f2g * (g20_zz_xxxxyy[k] - fgz * g21_zz_xxxxyy[k]) + 2.0 * f2t * gk_yzz_xxxxy[k];

                    g_yyzz_xxxxyz[k] = fr * g11_yzz_xxxxyz[k] + f2g * (g20_zz_xxxxyz[k] - fgz * g21_zz_xxxxyz[k]) + f2t * gk_yzz_xxxxz[k];

                    g_yyzz_xxxxzz[k] = fr * g11_yzz_xxxxzz[k] + f2g * (g20_zz_xxxxzz[k] - fgz * g21_zz_xxxxzz[k]);

                    g_yyzz_xxxyyy[k] = fr * g11_yzz_xxxyyy[k] + f2g * (g20_zz_xxxyyy[k] - fgz * g21_zz_xxxyyy[k]) + 3.0 * f2t * gk_yzz_xxxyy[k];

                    g_yyzz_xxxyyz[k] = fr * g11_yzz_xxxyyz[k] + f2g * (g20_zz_xxxyyz[k] - fgz * g21_zz_xxxyyz[k]) + 2.0 * f2t * gk_yzz_xxxyz[k];

                    g_yyzz_xxxyzz[k] = fr * g11_yzz_xxxyzz[k] + f2g * (g20_zz_xxxyzz[k] - fgz * g21_zz_xxxyzz[k]) + f2t * gk_yzz_xxxzz[k];

                    g_yyzz_xxxzzz[k] = fr * g11_yzz_xxxzzz[k] + f2g * (g20_zz_xxxzzz[k] - fgz * g21_zz_xxxzzz[k]);

                    g_yyzz_xxyyyy[k] = fr * g11_yzz_xxyyyy[k] + f2g * (g20_zz_xxyyyy[k] - fgz * g21_zz_xxyyyy[k]) + 4.0 * f2t * gk_yzz_xxyyy[k];

                    g_yyzz_xxyyyz[k] = fr * g11_yzz_xxyyyz[k] + f2g * (g20_zz_xxyyyz[k] - fgz * g21_zz_xxyyyz[k]) + 3.0 * f2t * gk_yzz_xxyyz[k];

                    g_yyzz_xxyyzz[k] = fr * g11_yzz_xxyyzz[k] + f2g * (g20_zz_xxyyzz[k] - fgz * g21_zz_xxyyzz[k]) + 2.0 * f2t * gk_yzz_xxyzz[k];

                    g_yyzz_xxyzzz[k] = fr * g11_yzz_xxyzzz[k] + f2g * (g20_zz_xxyzzz[k] - fgz * g21_zz_xxyzzz[k]) + f2t * gk_yzz_xxzzz[k];

                    g_yyzz_xxzzzz[k] = fr * g11_yzz_xxzzzz[k] + f2g * (g20_zz_xxzzzz[k] - fgz * g21_zz_xxzzzz[k]);

                    g_yyzz_xyyyyy[k] = fr * g11_yzz_xyyyyy[k] + f2g * (g20_zz_xyyyyy[k] - fgz * g21_zz_xyyyyy[k]) + 5.0 * f2t * gk_yzz_xyyyy[k];

                    g_yyzz_xyyyyz[k] = fr * g11_yzz_xyyyyz[k] + f2g * (g20_zz_xyyyyz[k] - fgz * g21_zz_xyyyyz[k]) + 4.0 * f2t * gk_yzz_xyyyz[k];

                    g_yyzz_xyyyzz[k] = fr * g11_yzz_xyyyzz[k] + f2g * (g20_zz_xyyyzz[k] - fgz * g21_zz_xyyyzz[k]) + 3.0 * f2t * gk_yzz_xyyzz[k];

                    g_yyzz_xyyzzz[k] = fr * g11_yzz_xyyzzz[k] + f2g * (g20_zz_xyyzzz[k] - fgz * g21_zz_xyyzzz[k]) + 2.0 * f2t * gk_yzz_xyzzz[k];

                    g_yyzz_xyzzzz[k] = fr * g11_yzz_xyzzzz[k] + f2g * (g20_zz_xyzzzz[k] - fgz * g21_zz_xyzzzz[k]) + f2t * gk_yzz_xzzzz[k];

                    g_yyzz_xzzzzz[k] = fr * g11_yzz_xzzzzz[k] + f2g * (g20_zz_xzzzzz[k] - fgz * g21_zz_xzzzzz[k]);

                    g_yyzz_yyyyyy[k] = fr * g11_yzz_yyyyyy[k] + f2g * (g20_zz_yyyyyy[k] - fgz * g21_zz_yyyyyy[k]) + 6.0 * f2t * gk_yzz_yyyyy[k];

                    g_yyzz_yyyyyz[k] = fr * g11_yzz_yyyyyz[k] + f2g * (g20_zz_yyyyyz[k] - fgz * g21_zz_yyyyyz[k]) + 5.0 * f2t * gk_yzz_yyyyz[k];

                    g_yyzz_yyyyzz[k] = fr * g11_yzz_yyyyzz[k] + f2g * (g20_zz_yyyyzz[k] - fgz * g21_zz_yyyyzz[k]) + 4.0 * f2t * gk_yzz_yyyzz[k];

                    g_yyzz_yyyzzz[k] = fr * g11_yzz_yyyzzz[k] + f2g * (g20_zz_yyyzzz[k] - fgz * g21_zz_yyyzzz[k]) + 3.0 * f2t * gk_yzz_yyzzz[k];

                    g_yyzz_yyzzzz[k] = fr * g11_yzz_yyzzzz[k] + f2g * (g20_zz_yyzzzz[k] - fgz * g21_zz_yyzzzz[k]) + 2.0 * f2t * gk_yzz_yzzzz[k];

                    g_yyzz_yzzzzz[k] = fr * g11_yzz_yzzzzz[k] + f2g * (g20_zz_yzzzzz[k] - fgz * g21_zz_yzzzzz[k]) + f2t * gk_yzz_zzzzz[k];

                    g_yyzz_zzzzzz[k] = fr * g11_yzz_zzzzzz[k] + f2g * (g20_zz_zzzzzz[k] - fgz * g21_zz_zzzzzz[k]);

                    g_yzzz_xxxxxx[k] = fr * g11_zzz_xxxxxx[k];

                    g_yzzz_xxxxxy[k] = fr * g11_zzz_xxxxxy[k] + f2t * gk_zzz_xxxxx[k];

                    g_yzzz_xxxxxz[k] = fr * g11_zzz_xxxxxz[k];

                    g_yzzz_xxxxyy[k] = fr * g11_zzz_xxxxyy[k] + 2.0 * f2t * gk_zzz_xxxxy[k];

                    g_yzzz_xxxxyz[k] = fr * g11_zzz_xxxxyz[k] + f2t * gk_zzz_xxxxz[k];

                    g_yzzz_xxxxzz[k] = fr * g11_zzz_xxxxzz[k];

                    g_yzzz_xxxyyy[k] = fr * g11_zzz_xxxyyy[k] + 3.0 * f2t * gk_zzz_xxxyy[k];

                    g_yzzz_xxxyyz[k] = fr * g11_zzz_xxxyyz[k] + 2.0 * f2t * gk_zzz_xxxyz[k];

                    g_yzzz_xxxyzz[k] = fr * g11_zzz_xxxyzz[k] + f2t * gk_zzz_xxxzz[k];

                    g_yzzz_xxxzzz[k] = fr * g11_zzz_xxxzzz[k];

                    g_yzzz_xxyyyy[k] = fr * g11_zzz_xxyyyy[k] + 4.0 * f2t * gk_zzz_xxyyy[k];

                    g_yzzz_xxyyyz[k] = fr * g11_zzz_xxyyyz[k] + 3.0 * f2t * gk_zzz_xxyyz[k];

                    g_yzzz_xxyyzz[k] = fr * g11_zzz_xxyyzz[k] + 2.0 * f2t * gk_zzz_xxyzz[k];

                    g_yzzz_xxyzzz[k] = fr * g11_zzz_xxyzzz[k] + f2t * gk_zzz_xxzzz[k];

                    g_yzzz_xxzzzz[k] = fr * g11_zzz_xxzzzz[k];

                    g_yzzz_xyyyyy[k] = fr * g11_zzz_xyyyyy[k] + 5.0 * f2t * gk_zzz_xyyyy[k];

                    g_yzzz_xyyyyz[k] = fr * g11_zzz_xyyyyz[k] + 4.0 * f2t * gk_zzz_xyyyz[k];

                    g_yzzz_xyyyzz[k] = fr * g11_zzz_xyyyzz[k] + 3.0 * f2t * gk_zzz_xyyzz[k];

                    g_yzzz_xyyzzz[k] = fr * g11_zzz_xyyzzz[k] + 2.0 * f2t * gk_zzz_xyzzz[k];

                    g_yzzz_xyzzzz[k] = fr * g11_zzz_xyzzzz[k] + f2t * gk_zzz_xzzzz[k];

                    g_yzzz_xzzzzz[k] = fr * g11_zzz_xzzzzz[k];

                    g_yzzz_yyyyyy[k] = fr * g11_zzz_yyyyyy[k] + 6.0 * f2t * gk_zzz_yyyyy[k];

                    g_yzzz_yyyyyz[k] = fr * g11_zzz_yyyyyz[k] + 5.0 * f2t * gk_zzz_yyyyz[k];

                    g_yzzz_yyyyzz[k] = fr * g11_zzz_yyyyzz[k] + 4.0 * f2t * gk_zzz_yyyzz[k];

                    g_yzzz_yyyzzz[k] = fr * g11_zzz_yyyzzz[k] + 3.0 * f2t * gk_zzz_yyzzz[k];

                    g_yzzz_yyzzzz[k] = fr * g11_zzz_yyzzzz[k] + 2.0 * f2t * gk_zzz_yzzzz[k];

                    g_yzzz_yzzzzz[k] = fr * g11_zzz_yzzzzz[k] + f2t * gk_zzz_zzzzz[k];

                    g_yzzz_zzzzzz[k] = fr * g11_zzz_zzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxxxxx[k] = fr * g11_zzz_xxxxxx[k] + f2g * (3.0 * g20_zz_xxxxxx[k] - 3.0 * fgz * g21_zz_xxxxxx[k]);

                    g_zzzz_xxxxxy[k] = fr * g11_zzz_xxxxxy[k] + f2g * (3.0 * g20_zz_xxxxxy[k] - 3.0 * fgz * g21_zz_xxxxxy[k]);

                    g_zzzz_xxxxxz[k] = fr * g11_zzz_xxxxxz[k] + f2g * (3.0 * g20_zz_xxxxxz[k] - 3.0 * fgz * g21_zz_xxxxxz[k]) + f2t * gk_zzz_xxxxx[k];

                    g_zzzz_xxxxyy[k] = fr * g11_zzz_xxxxyy[k] + f2g * (3.0 * g20_zz_xxxxyy[k] - 3.0 * fgz * g21_zz_xxxxyy[k]);

                    g_zzzz_xxxxyz[k] = fr * g11_zzz_xxxxyz[k] + f2g * (3.0 * g20_zz_xxxxyz[k] - 3.0 * fgz * g21_zz_xxxxyz[k]) + f2t * gk_zzz_xxxxy[k];

                    g_zzzz_xxxxzz[k] = fr * g11_zzz_xxxxzz[k] + f2g * (3.0 * g20_zz_xxxxzz[k] - 3.0 * fgz * g21_zz_xxxxzz[k]) + 2.0 * f2t * gk_zzz_xxxxz[k];

                    g_zzzz_xxxyyy[k] = fr * g11_zzz_xxxyyy[k] + f2g * (3.0 * g20_zz_xxxyyy[k] - 3.0 * fgz * g21_zz_xxxyyy[k]);

                    g_zzzz_xxxyyz[k] = fr * g11_zzz_xxxyyz[k] + f2g * (3.0 * g20_zz_xxxyyz[k] - 3.0 * fgz * g21_zz_xxxyyz[k]) + f2t * gk_zzz_xxxyy[k];

                    g_zzzz_xxxyzz[k] = fr * g11_zzz_xxxyzz[k] + f2g * (3.0 * g20_zz_xxxyzz[k] - 3.0 * fgz * g21_zz_xxxyzz[k]) + 2.0 * f2t * gk_zzz_xxxyz[k];

                    g_zzzz_xxxzzz[k] = fr * g11_zzz_xxxzzz[k] + f2g * (3.0 * g20_zz_xxxzzz[k] - 3.0 * fgz * g21_zz_xxxzzz[k]) + 3.0 * f2t * gk_zzz_xxxzz[k];

                    g_zzzz_xxyyyy[k] = fr * g11_zzz_xxyyyy[k] + f2g * (3.0 * g20_zz_xxyyyy[k] - 3.0 * fgz * g21_zz_xxyyyy[k]);

                    g_zzzz_xxyyyz[k] = fr * g11_zzz_xxyyyz[k] + f2g * (3.0 * g20_zz_xxyyyz[k] - 3.0 * fgz * g21_zz_xxyyyz[k]) + f2t * gk_zzz_xxyyy[k];

                    g_zzzz_xxyyzz[k] = fr * g11_zzz_xxyyzz[k] + f2g * (3.0 * g20_zz_xxyyzz[k] - 3.0 * fgz * g21_zz_xxyyzz[k]) + 2.0 * f2t * gk_zzz_xxyyz[k];

                    g_zzzz_xxyzzz[k] = fr * g11_zzz_xxyzzz[k] + f2g * (3.0 * g20_zz_xxyzzz[k] - 3.0 * fgz * g21_zz_xxyzzz[k]) + 3.0 * f2t * gk_zzz_xxyzz[k];

                    g_zzzz_xxzzzz[k] = fr * g11_zzz_xxzzzz[k] + f2g * (3.0 * g20_zz_xxzzzz[k] - 3.0 * fgz * g21_zz_xxzzzz[k]) + 4.0 * f2t * gk_zzz_xxzzz[k];

                    g_zzzz_xyyyyy[k] = fr * g11_zzz_xyyyyy[k] + f2g * (3.0 * g20_zz_xyyyyy[k] - 3.0 * fgz * g21_zz_xyyyyy[k]);

                    g_zzzz_xyyyyz[k] = fr * g11_zzz_xyyyyz[k] + f2g * (3.0 * g20_zz_xyyyyz[k] - 3.0 * fgz * g21_zz_xyyyyz[k]) + f2t * gk_zzz_xyyyy[k];

                    g_zzzz_xyyyzz[k] = fr * g11_zzz_xyyyzz[k] + f2g * (3.0 * g20_zz_xyyyzz[k] - 3.0 * fgz * g21_zz_xyyyzz[k]) + 2.0 * f2t * gk_zzz_xyyyz[k];

                    g_zzzz_xyyzzz[k] = fr * g11_zzz_xyyzzz[k] + f2g * (3.0 * g20_zz_xyyzzz[k] - 3.0 * fgz * g21_zz_xyyzzz[k]) + 3.0 * f2t * gk_zzz_xyyzz[k];

                    g_zzzz_xyzzzz[k] = fr * g11_zzz_xyzzzz[k] + f2g * (3.0 * g20_zz_xyzzzz[k] - 3.0 * fgz * g21_zz_xyzzzz[k]) + 4.0 * f2t * gk_zzz_xyzzz[k];

                    g_zzzz_xzzzzz[k] = fr * g11_zzz_xzzzzz[k] + f2g * (3.0 * g20_zz_xzzzzz[k] - 3.0 * fgz * g21_zz_xzzzzz[k]) + 5.0 * f2t * gk_zzz_xzzzz[k];

                    g_zzzz_yyyyyy[k] = fr * g11_zzz_yyyyyy[k] + f2g * (3.0 * g20_zz_yyyyyy[k] - 3.0 * fgz * g21_zz_yyyyyy[k]);

                    g_zzzz_yyyyyz[k] = fr * g11_zzz_yyyyyz[k] + f2g * (3.0 * g20_zz_yyyyyz[k] - 3.0 * fgz * g21_zz_yyyyyz[k]) + f2t * gk_zzz_yyyyy[k];

                    g_zzzz_yyyyzz[k] = fr * g11_zzz_yyyyzz[k] + f2g * (3.0 * g20_zz_yyyyzz[k] - 3.0 * fgz * g21_zz_yyyyzz[k]) + 2.0 * f2t * gk_zzz_yyyyz[k];

                    g_zzzz_yyyzzz[k] = fr * g11_zzz_yyyzzz[k] + f2g * (3.0 * g20_zz_yyyzzz[k] - 3.0 * fgz * g21_zz_yyyzzz[k]) + 3.0 * f2t * gk_zzz_yyyzz[k];

                    g_zzzz_yyzzzz[k] = fr * g11_zzz_yyzzzz[k] + f2g * (3.0 * g20_zz_yyzzzz[k] - 3.0 * fgz * g21_zz_yyzzzz[k]) + 4.0 * f2t * gk_zzz_yyzzz[k];

                    g_zzzz_yzzzzz[k] = fr * g11_zzz_yzzzzz[k] + f2g * (3.0 * g20_zz_yzzzzz[k] - 3.0 * fgz * g21_zz_yzzzzz[k]) + 5.0 * f2t * gk_zzz_yzzzz[k];

                    g_zzzz_zzzzzz[k] = fr * g11_zzz_zzzzzz[k] + f2g * (3.0 * g20_zz_zzzzzz[k] - 3.0 * fgz * g21_zz_zzzzzz[k]) + 6.0 * f2t * gk_zzz_zzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSK(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 7);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 7, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 5, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SH)^(m) integrals

                auto g20_0_xxxxx = primBuffer.data(g20off + 21 * idx);

                auto g20_0_xxxxy = primBuffer.data(g20off + 21 * idx + 1);

                auto g20_0_xxxxz = primBuffer.data(g20off + 21 * idx + 2);

                auto g20_0_xxxyy = primBuffer.data(g20off + 21 * idx + 3);

                auto g20_0_xxxyz = primBuffer.data(g20off + 21 * idx + 4);

                auto g20_0_xxxzz = primBuffer.data(g20off + 21 * idx + 5);

                auto g20_0_xxyyy = primBuffer.data(g20off + 21 * idx + 6);

                auto g20_0_xxyyz = primBuffer.data(g20off + 21 * idx + 7);

                auto g20_0_xxyzz = primBuffer.data(g20off + 21 * idx + 8);

                auto g20_0_xxzzz = primBuffer.data(g20off + 21 * idx + 9);

                auto g20_0_xyyyy = primBuffer.data(g20off + 21 * idx + 10);

                auto g20_0_xyyyz = primBuffer.data(g20off + 21 * idx + 11);

                auto g20_0_xyyzz = primBuffer.data(g20off + 21 * idx + 12);

                auto g20_0_xyzzz = primBuffer.data(g20off + 21 * idx + 13);

                auto g20_0_xzzzz = primBuffer.data(g20off + 21 * idx + 14);

                auto g20_0_yyyyy = primBuffer.data(g20off + 21 * idx + 15);

                auto g20_0_yyyyz = primBuffer.data(g20off + 21 * idx + 16);

                auto g20_0_yyyzz = primBuffer.data(g20off + 21 * idx + 17);

                auto g20_0_yyzzz = primBuffer.data(g20off + 21 * idx + 18);

                auto g20_0_yzzzz = primBuffer.data(g20off + 21 * idx + 19);

                auto g20_0_zzzzz = primBuffer.data(g20off + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SH)^(m+1) integrals

                auto g21_0_xxxxx = primBuffer.data(g21off + 21 * idx);

                auto g21_0_xxxxy = primBuffer.data(g21off + 21 * idx + 1);

                auto g21_0_xxxxz = primBuffer.data(g21off + 21 * idx + 2);

                auto g21_0_xxxyy = primBuffer.data(g21off + 21 * idx + 3);

                auto g21_0_xxxyz = primBuffer.data(g21off + 21 * idx + 4);

                auto g21_0_xxxzz = primBuffer.data(g21off + 21 * idx + 5);

                auto g21_0_xxyyy = primBuffer.data(g21off + 21 * idx + 6);

                auto g21_0_xxyyz = primBuffer.data(g21off + 21 * idx + 7);

                auto g21_0_xxyzz = primBuffer.data(g21off + 21 * idx + 8);

                auto g21_0_xxzzz = primBuffer.data(g21off + 21 * idx + 9);

                auto g21_0_xyyyy = primBuffer.data(g21off + 21 * idx + 10);

                auto g21_0_xyyyz = primBuffer.data(g21off + 21 * idx + 11);

                auto g21_0_xyyzz = primBuffer.data(g21off + 21 * idx + 12);

                auto g21_0_xyzzz = primBuffer.data(g21off + 21 * idx + 13);

                auto g21_0_xzzzz = primBuffer.data(g21off + 21 * idx + 14);

                auto g21_0_yyyyy = primBuffer.data(g21off + 21 * idx + 15);

                auto g21_0_yyyyz = primBuffer.data(g21off + 21 * idx + 16);

                auto g21_0_yyyzz = primBuffer.data(g21off + 21 * idx + 17);

                auto g21_0_yyzzz = primBuffer.data(g21off + 21 * idx + 18);

                auto g21_0_yzzzz = primBuffer.data(g21off + 21 * idx + 19);

                auto g21_0_zzzzz = primBuffer.data(g21off + 21 * idx + 20);

                // set up pointers to (S|g(r,r')|SI)^(m) integrals

                auto g10_0_xxxxxx = primBuffer.data(g10off + 28 * idx);

                auto g10_0_xxxxxy = primBuffer.data(g10off + 28 * idx + 1);

                auto g10_0_xxxxxz = primBuffer.data(g10off + 28 * idx + 2);

                auto g10_0_xxxxyy = primBuffer.data(g10off + 28 * idx + 3);

                auto g10_0_xxxxyz = primBuffer.data(g10off + 28 * idx + 4);

                auto g10_0_xxxxzz = primBuffer.data(g10off + 28 * idx + 5);

                auto g10_0_xxxyyy = primBuffer.data(g10off + 28 * idx + 6);

                auto g10_0_xxxyyz = primBuffer.data(g10off + 28 * idx + 7);

                auto g10_0_xxxyzz = primBuffer.data(g10off + 28 * idx + 8);

                auto g10_0_xxxzzz = primBuffer.data(g10off + 28 * idx + 9);

                auto g10_0_xxyyyy = primBuffer.data(g10off + 28 * idx + 10);

                auto g10_0_xxyyyz = primBuffer.data(g10off + 28 * idx + 11);

                auto g10_0_xxyyzz = primBuffer.data(g10off + 28 * idx + 12);

                auto g10_0_xxyzzz = primBuffer.data(g10off + 28 * idx + 13);

                auto g10_0_xxzzzz = primBuffer.data(g10off + 28 * idx + 14);

                auto g10_0_xyyyyy = primBuffer.data(g10off + 28 * idx + 15);

                auto g10_0_xyyyyz = primBuffer.data(g10off + 28 * idx + 16);

                auto g10_0_xyyyzz = primBuffer.data(g10off + 28 * idx + 17);

                auto g10_0_xyyzzz = primBuffer.data(g10off + 28 * idx + 18);

                auto g10_0_xyzzzz = primBuffer.data(g10off + 28 * idx + 19);

                auto g10_0_xzzzzz = primBuffer.data(g10off + 28 * idx + 20);

                auto g10_0_yyyyyy = primBuffer.data(g10off + 28 * idx + 21);

                auto g10_0_yyyyyz = primBuffer.data(g10off + 28 * idx + 22);

                auto g10_0_yyyyzz = primBuffer.data(g10off + 28 * idx + 23);

                auto g10_0_yyyzzz = primBuffer.data(g10off + 28 * idx + 24);

                auto g10_0_yyzzzz = primBuffer.data(g10off + 28 * idx + 25);

                auto g10_0_yzzzzz = primBuffer.data(g10off + 28 * idx + 26);

                auto g10_0_zzzzzz = primBuffer.data(g10off + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SI)^(m+1) integrals

                auto g11_0_xxxxxx = primBuffer.data(g11off + 28 * idx);

                auto g11_0_xxxxxy = primBuffer.data(g11off + 28 * idx + 1);

                auto g11_0_xxxxxz = primBuffer.data(g11off + 28 * idx + 2);

                auto g11_0_xxxxyy = primBuffer.data(g11off + 28 * idx + 3);

                auto g11_0_xxxxyz = primBuffer.data(g11off + 28 * idx + 4);

                auto g11_0_xxxxzz = primBuffer.data(g11off + 28 * idx + 5);

                auto g11_0_xxxyyy = primBuffer.data(g11off + 28 * idx + 6);

                auto g11_0_xxxyyz = primBuffer.data(g11off + 28 * idx + 7);

                auto g11_0_xxxyzz = primBuffer.data(g11off + 28 * idx + 8);

                auto g11_0_xxxzzz = primBuffer.data(g11off + 28 * idx + 9);

                auto g11_0_xxyyyy = primBuffer.data(g11off + 28 * idx + 10);

                auto g11_0_xxyyyz = primBuffer.data(g11off + 28 * idx + 11);

                auto g11_0_xxyyzz = primBuffer.data(g11off + 28 * idx + 12);

                auto g11_0_xxyzzz = primBuffer.data(g11off + 28 * idx + 13);

                auto g11_0_xxzzzz = primBuffer.data(g11off + 28 * idx + 14);

                auto g11_0_xyyyyy = primBuffer.data(g11off + 28 * idx + 15);

                auto g11_0_xyyyyz = primBuffer.data(g11off + 28 * idx + 16);

                auto g11_0_xyyyzz = primBuffer.data(g11off + 28 * idx + 17);

                auto g11_0_xyyzzz = primBuffer.data(g11off + 28 * idx + 18);

                auto g11_0_xyzzzz = primBuffer.data(g11off + 28 * idx + 19);

                auto g11_0_xzzzzz = primBuffer.data(g11off + 28 * idx + 20);

                auto g11_0_yyyyyy = primBuffer.data(g11off + 28 * idx + 21);

                auto g11_0_yyyyyz = primBuffer.data(g11off + 28 * idx + 22);

                auto g11_0_yyyyzz = primBuffer.data(g11off + 28 * idx + 23);

                auto g11_0_yyyzzz = primBuffer.data(g11off + 28 * idx + 24);

                auto g11_0_yyzzzz = primBuffer.data(g11off + 28 * idx + 25);

                auto g11_0_yzzzzz = primBuffer.data(g11off + 28 * idx + 26);

                auto g11_0_zzzzzz = primBuffer.data(g11off + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SK)^(m) integrals

                auto g_0_xxxxxxx = primBuffer.data(goff + 36 * idx);

                auto g_0_xxxxxxy = primBuffer.data(goff + 36 * idx + 1);

                auto g_0_xxxxxxz = primBuffer.data(goff + 36 * idx + 2);

                auto g_0_xxxxxyy = primBuffer.data(goff + 36 * idx + 3);

                auto g_0_xxxxxyz = primBuffer.data(goff + 36 * idx + 4);

                auto g_0_xxxxxzz = primBuffer.data(goff + 36 * idx + 5);

                auto g_0_xxxxyyy = primBuffer.data(goff + 36 * idx + 6);

                auto g_0_xxxxyyz = primBuffer.data(goff + 36 * idx + 7);

                auto g_0_xxxxyzz = primBuffer.data(goff + 36 * idx + 8);

                auto g_0_xxxxzzz = primBuffer.data(goff + 36 * idx + 9);

                auto g_0_xxxyyyy = primBuffer.data(goff + 36 * idx + 10);

                auto g_0_xxxyyyz = primBuffer.data(goff + 36 * idx + 11);

                auto g_0_xxxyyzz = primBuffer.data(goff + 36 * idx + 12);

                auto g_0_xxxyzzz = primBuffer.data(goff + 36 * idx + 13);

                auto g_0_xxxzzzz = primBuffer.data(goff + 36 * idx + 14);

                auto g_0_xxyyyyy = primBuffer.data(goff + 36 * idx + 15);

                auto g_0_xxyyyyz = primBuffer.data(goff + 36 * idx + 16);

                auto g_0_xxyyyzz = primBuffer.data(goff + 36 * idx + 17);

                auto g_0_xxyyzzz = primBuffer.data(goff + 36 * idx + 18);

                auto g_0_xxyzzzz = primBuffer.data(goff + 36 * idx + 19);

                auto g_0_xxzzzzz = primBuffer.data(goff + 36 * idx + 20);

                auto g_0_xyyyyyy = primBuffer.data(goff + 36 * idx + 21);

                auto g_0_xyyyyyz = primBuffer.data(goff + 36 * idx + 22);

                auto g_0_xyyyyzz = primBuffer.data(goff + 36 * idx + 23);

                auto g_0_xyyyzzz = primBuffer.data(goff + 36 * idx + 24);

                auto g_0_xyyzzzz = primBuffer.data(goff + 36 * idx + 25);

                auto g_0_xyzzzzz = primBuffer.data(goff + 36 * idx + 26);

                auto g_0_xzzzzzz = primBuffer.data(goff + 36 * idx + 27);

                auto g_0_yyyyyyy = primBuffer.data(goff + 36 * idx + 28);

                auto g_0_yyyyyyz = primBuffer.data(goff + 36 * idx + 29);

                auto g_0_yyyyyzz = primBuffer.data(goff + 36 * idx + 30);

                auto g_0_yyyyzzz = primBuffer.data(goff + 36 * idx + 31);

                auto g_0_yyyzzzz = primBuffer.data(goff + 36 * idx + 32);

                auto g_0_yyzzzzz = primBuffer.data(goff + 36 * idx + 33);

                auto g_0_yzzzzzz = primBuffer.data(goff + 36 * idx + 34);

                auto g_0_zzzzzzz = primBuffer.data(goff + 36 * idx + 35);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_xxxxx, g20_0_xxxxy, g20_0_xxxxz,\
                                         g20_0_xxxyy, g20_0_xxxyz, g20_0_xxxzz,\
                                         g20_0_xxyyy, g20_0_xxyyz, g20_0_xxyzz,\
                                         g20_0_xxzzz, g20_0_xyyyy, g20_0_xyyyz,\
                                         g20_0_xyyzz, g20_0_xyzzz, g20_0_xzzzz,\
                                         g20_0_yyyyy, g20_0_yyyyz, g20_0_yyyzz,\
                                         g20_0_yyzzz, g20_0_yzzzz, g20_0_zzzzz,\
                                         g21_0_xxxxx, g21_0_xxxxy, g21_0_xxxxz,\
                                         g21_0_xxxyy, g21_0_xxxyz, g21_0_xxxzz,\
                                         g21_0_xxyyy, g21_0_xxyyz, g21_0_xxyzz,\
                                         g21_0_xxzzz, g21_0_xyyyy, g21_0_xyyyz,\
                                         g21_0_xyyzz, g21_0_xyzzz, g21_0_xzzzz,\
                                         g21_0_yyyyy, g21_0_yyyyz, g21_0_yyyzz,\
                                         g21_0_yyzzz, g21_0_yzzzz, g21_0_zzzzz,\
                                         g10_0_xxxxxx, g10_0_xxxxxy, g10_0_xxxxxz,\
                                         g10_0_xxxxyy, g10_0_xxxxyz, g10_0_xxxxzz,\
                                         g10_0_xxxyyy, g10_0_xxxyyz, g10_0_xxxyzz,\
                                         g10_0_xxxzzz, g10_0_xxyyyy, g10_0_xxyyyz,\
                                         g10_0_xxyyzz, g10_0_xxyzzz, g10_0_xxzzzz,\
                                         g10_0_xyyyyy, g10_0_xyyyyz, g10_0_xyyyzz,\
                                         g10_0_xyyzzz, g10_0_xyzzzz, g10_0_xzzzzz,\
                                         g10_0_yyyyyy, g10_0_yyyyyz, g10_0_yyyyzz,\
                                         g10_0_yyyzzz, g10_0_yyzzzz, g10_0_yzzzzz,\
                                         g10_0_zzzzzz, g11_0_xxxxxx, g11_0_xxxxxy,\
                                         g11_0_xxxxxz, g11_0_xxxxyy, g11_0_xxxxyz,\
                                         g11_0_xxxxzz, g11_0_xxxyyy, g11_0_xxxyyz,\
                                         g11_0_xxxyzz, g11_0_xxxzzz, g11_0_xxyyyy,\
                                         g11_0_xxyyyz, g11_0_xxyyzz, g11_0_xxyzzz,\
                                         g11_0_xxzzzz, g11_0_xyyyyy, g11_0_xyyyyz,\
                                         g11_0_xyyyzz, g11_0_xyyzzz, g11_0_xyzzzz,\
                                         g11_0_xzzzzz, g11_0_yyyyyy, g11_0_yyyyyz,\
                                         g11_0_yyyyzz, g11_0_yyyzzz, g11_0_yyzzzz,\
                                         g11_0_yzzzzz, g11_0_zzzzzz, g_0_xxxxxxx,\
                                         g_0_xxxxxxy, g_0_xxxxxxz, g_0_xxxxxyy,\
                                         g_0_xxxxxyz, g_0_xxxxxzz, g_0_xxxxyyy,\
                                         g_0_xxxxyyz, g_0_xxxxyzz, g_0_xxxxzzz,\
                                         g_0_xxxyyyy, g_0_xxxyyyz, g_0_xxxyyzz,\
                                         g_0_xxxyzzz, g_0_xxxzzzz, g_0_xxyyyyy,\
                                         g_0_xxyyyyz, g_0_xxyyyzz, g_0_xxyyzzz,\
                                         g_0_xxyzzzz, g_0_xxzzzzz, g_0_xyyyyyy,\
                                         g_0_xyyyyyz, g_0_xyyyyzz, g_0_xyyyzzz,\
                                         g_0_xyyzzzz, g_0_xyzzzzz, g_0_xzzzzzz,\
                                         g_0_yyyyyyy, g_0_yyyyyyz, g_0_yyyyyzz,\
                                         g_0_yyyyzzz, g_0_yyyzzzz, g_0_yyzzzzz,\
                                         g_0_yzzzzzz, g_0_zzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxxxxxx[k] = fra * g10_0_xxxxxx[k] + frb * g11_0_xxxxxx[k] + f2g * (6.0 * g20_0_xxxxx[k] - 6.0 * fgz * g21_0_xxxxx[k]);

                    g_0_xxxxxxy[k] = fra * g10_0_xxxxxy[k] + frb * g11_0_xxxxxy[k] + f2g * (5.0 * g20_0_xxxxy[k] - 5.0 * fgz * g21_0_xxxxy[k]);

                    g_0_xxxxxxz[k] = fra * g10_0_xxxxxz[k] + frb * g11_0_xxxxxz[k] + f2g * (5.0 * g20_0_xxxxz[k] - 5.0 * fgz * g21_0_xxxxz[k]);

                    g_0_xxxxxyy[k] = fra * g10_0_xxxxyy[k] + frb * g11_0_xxxxyy[k] + f2g * (4.0 * g20_0_xxxyy[k] - 4.0 * fgz * g21_0_xxxyy[k]);

                    g_0_xxxxxyz[k] = fra * g10_0_xxxxyz[k] + frb * g11_0_xxxxyz[k] + f2g * (4.0 * g20_0_xxxyz[k] - 4.0 * fgz * g21_0_xxxyz[k]);

                    g_0_xxxxxzz[k] = fra * g10_0_xxxxzz[k] + frb * g11_0_xxxxzz[k] + f2g * (4.0 * g20_0_xxxzz[k] - 4.0 * fgz * g21_0_xxxzz[k]);

                    g_0_xxxxyyy[k] = fra * g10_0_xxxyyy[k] + frb * g11_0_xxxyyy[k] + f2g * (3.0 * g20_0_xxyyy[k] - 3.0 * fgz * g21_0_xxyyy[k]);

                    g_0_xxxxyyz[k] = fra * g10_0_xxxyyz[k] + frb * g11_0_xxxyyz[k] + f2g * (3.0 * g20_0_xxyyz[k] - 3.0 * fgz * g21_0_xxyyz[k]);

                    g_0_xxxxyzz[k] = fra * g10_0_xxxyzz[k] + frb * g11_0_xxxyzz[k] + f2g * (3.0 * g20_0_xxyzz[k] - 3.0 * fgz * g21_0_xxyzz[k]);

                    g_0_xxxxzzz[k] = fra * g10_0_xxxzzz[k] + frb * g11_0_xxxzzz[k] + f2g * (3.0 * g20_0_xxzzz[k] - 3.0 * fgz * g21_0_xxzzz[k]);

                    g_0_xxxyyyy[k] = fra * g10_0_xxyyyy[k] + frb * g11_0_xxyyyy[k] + f2g * (2.0 * g20_0_xyyyy[k] - 2.0 * fgz * g21_0_xyyyy[k]);

                    g_0_xxxyyyz[k] = fra * g10_0_xxyyyz[k] + frb * g11_0_xxyyyz[k] + f2g * (2.0 * g20_0_xyyyz[k] - 2.0 * fgz * g21_0_xyyyz[k]);

                    g_0_xxxyyzz[k] = fra * g10_0_xxyyzz[k] + frb * g11_0_xxyyzz[k] + f2g * (2.0 * g20_0_xyyzz[k] - 2.0 * fgz * g21_0_xyyzz[k]);

                    g_0_xxxyzzz[k] = fra * g10_0_xxyzzz[k] + frb * g11_0_xxyzzz[k] + f2g * (2.0 * g20_0_xyzzz[k] - 2.0 * fgz * g21_0_xyzzz[k]);

                    g_0_xxxzzzz[k] = fra * g10_0_xxzzzz[k] + frb * g11_0_xxzzzz[k] + f2g * (2.0 * g20_0_xzzzz[k] - 2.0 * fgz * g21_0_xzzzz[k]);

                    g_0_xxyyyyy[k] = fra * g10_0_xyyyyy[k] + frb * g11_0_xyyyyy[k] + f2g * (g20_0_yyyyy[k] - fgz * g21_0_yyyyy[k]);

                    g_0_xxyyyyz[k] = fra * g10_0_xyyyyz[k] + frb * g11_0_xyyyyz[k] + f2g * (g20_0_yyyyz[k] - fgz * g21_0_yyyyz[k]);

                    g_0_xxyyyzz[k] = fra * g10_0_xyyyzz[k] + frb * g11_0_xyyyzz[k] + f2g * (g20_0_yyyzz[k] - fgz * g21_0_yyyzz[k]);

                    g_0_xxyyzzz[k] = fra * g10_0_xyyzzz[k] + frb * g11_0_xyyzzz[k] + f2g * (g20_0_yyzzz[k] - fgz * g21_0_yyzzz[k]);

                    g_0_xxyzzzz[k] = fra * g10_0_xyzzzz[k] + frb * g11_0_xyzzzz[k] + f2g * (g20_0_yzzzz[k] - fgz * g21_0_yzzzz[k]);

                    g_0_xxzzzzz[k] = fra * g10_0_xzzzzz[k] + frb * g11_0_xzzzzz[k] + f2g * (g20_0_zzzzz[k] - fgz * g21_0_zzzzz[k]);

                    g_0_xyyyyyy[k] = fra * g10_0_yyyyyy[k] + frb * g11_0_yyyyyy[k];

                    g_0_xyyyyyz[k] = fra * g10_0_yyyyyz[k] + frb * g11_0_yyyyyz[k];

                    g_0_xyyyyzz[k] = fra * g10_0_yyyyzz[k] + frb * g11_0_yyyyzz[k];

                    g_0_xyyyzzz[k] = fra * g10_0_yyyzzz[k] + frb * g11_0_yyyzzz[k];

                    g_0_xyyzzzz[k] = fra * g10_0_yyzzzz[k] + frb * g11_0_yyzzzz[k];

                    g_0_xyzzzzz[k] = fra * g10_0_yzzzzz[k] + frb * g11_0_yzzzzz[k];

                    g_0_xzzzzzz[k] = fra * g10_0_zzzzzz[k] + frb * g11_0_zzzzzz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyyyyyy[k] = fra * g10_0_yyyyyy[k] + frb * g11_0_yyyyyy[k] + f2g * (6.0 * g20_0_yyyyy[k] - 6.0 * fgz * g21_0_yyyyy[k]);

                    g_0_yyyyyyz[k] = fra * g10_0_yyyyyz[k] + frb * g11_0_yyyyyz[k] + f2g * (5.0 * g20_0_yyyyz[k] - 5.0 * fgz * g21_0_yyyyz[k]);

                    g_0_yyyyyzz[k] = fra * g10_0_yyyyzz[k] + frb * g11_0_yyyyzz[k] + f2g * (4.0 * g20_0_yyyzz[k] - 4.0 * fgz * g21_0_yyyzz[k]);

                    g_0_yyyyzzz[k] = fra * g10_0_yyyzzz[k] + frb * g11_0_yyyzzz[k] + f2g * (3.0 * g20_0_yyzzz[k] - 3.0 * fgz * g21_0_yyzzz[k]);

                    g_0_yyyzzzz[k] = fra * g10_0_yyzzzz[k] + frb * g11_0_yyzzzz[k] + f2g * (2.0 * g20_0_yzzzz[k] - 2.0 * fgz * g21_0_yzzzz[k]);

                    g_0_yyzzzzz[k] = fra * g10_0_yzzzzz[k] + frb * g11_0_yzzzzz[k] + f2g * (g20_0_zzzzz[k] - fgz * g21_0_zzzzz[k]);

                    g_0_yzzzzzz[k] = fra * g10_0_zzzzzz[k] + frb * g11_0_zzzzzz[k];

                    // leading z component

                    g_0_zzzzzzz[k] = qdz[k] * g10_0_zzzzzz[k] + wqz[k] * g11_0_zzzzzz[k] + f2g * (6.0 * g20_0_zzzzz[k] - 6.0 * fgz * g21_0_zzzzz[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSK(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 7);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 7, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 7, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 6, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SI)^(m+1) integrals

                auto gk_0_xxxxxx = primBuffer.data(gkoff + 28 * idx);

                auto gk_0_xxxxxy = primBuffer.data(gkoff + 28 * idx + 1);

                auto gk_0_xxxxxz = primBuffer.data(gkoff + 28 * idx + 2);

                auto gk_0_xxxxyy = primBuffer.data(gkoff + 28 * idx + 3);

                auto gk_0_xxxxyz = primBuffer.data(gkoff + 28 * idx + 4);

                auto gk_0_xxxxzz = primBuffer.data(gkoff + 28 * idx + 5);

                auto gk_0_xxxyyy = primBuffer.data(gkoff + 28 * idx + 6);

                auto gk_0_xxxyyz = primBuffer.data(gkoff + 28 * idx + 7);

                auto gk_0_xxxyzz = primBuffer.data(gkoff + 28 * idx + 8);

                auto gk_0_xxxzzz = primBuffer.data(gkoff + 28 * idx + 9);

                auto gk_0_xxyyyy = primBuffer.data(gkoff + 28 * idx + 10);

                auto gk_0_xxyyyz = primBuffer.data(gkoff + 28 * idx + 11);

                auto gk_0_xxyyzz = primBuffer.data(gkoff + 28 * idx + 12);

                auto gk_0_xxyzzz = primBuffer.data(gkoff + 28 * idx + 13);

                auto gk_0_xxzzzz = primBuffer.data(gkoff + 28 * idx + 14);

                auto gk_0_xyyyyy = primBuffer.data(gkoff + 28 * idx + 15);

                auto gk_0_xyyyyz = primBuffer.data(gkoff + 28 * idx + 16);

                auto gk_0_xyyyzz = primBuffer.data(gkoff + 28 * idx + 17);

                auto gk_0_xyyzzz = primBuffer.data(gkoff + 28 * idx + 18);

                auto gk_0_xyzzzz = primBuffer.data(gkoff + 28 * idx + 19);

                auto gk_0_xzzzzz = primBuffer.data(gkoff + 28 * idx + 20);

                auto gk_0_yyyyyy = primBuffer.data(gkoff + 28 * idx + 21);

                auto gk_0_yyyyyz = primBuffer.data(gkoff + 28 * idx + 22);

                auto gk_0_yyyyzz = primBuffer.data(gkoff + 28 * idx + 23);

                auto gk_0_yyyzzz = primBuffer.data(gkoff + 28 * idx + 24);

                auto gk_0_yyzzzz = primBuffer.data(gkoff + 28 * idx + 25);

                auto gk_0_yzzzzz = primBuffer.data(gkoff + 28 * idx + 26);

                auto gk_0_zzzzzz = primBuffer.data(gkoff + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SK)^(m+1) integrals

                auto g11_0_xxxxxxx = primBuffer.data(g11off + 36 * idx);

                auto g11_0_xxxxxxy = primBuffer.data(g11off + 36 * idx + 1);

                auto g11_0_xxxxxxz = primBuffer.data(g11off + 36 * idx + 2);

                auto g11_0_xxxxxyy = primBuffer.data(g11off + 36 * idx + 3);

                auto g11_0_xxxxxyz = primBuffer.data(g11off + 36 * idx + 4);

                auto g11_0_xxxxxzz = primBuffer.data(g11off + 36 * idx + 5);

                auto g11_0_xxxxyyy = primBuffer.data(g11off + 36 * idx + 6);

                auto g11_0_xxxxyyz = primBuffer.data(g11off + 36 * idx + 7);

                auto g11_0_xxxxyzz = primBuffer.data(g11off + 36 * idx + 8);

                auto g11_0_xxxxzzz = primBuffer.data(g11off + 36 * idx + 9);

                auto g11_0_xxxyyyy = primBuffer.data(g11off + 36 * idx + 10);

                auto g11_0_xxxyyyz = primBuffer.data(g11off + 36 * idx + 11);

                auto g11_0_xxxyyzz = primBuffer.data(g11off + 36 * idx + 12);

                auto g11_0_xxxyzzz = primBuffer.data(g11off + 36 * idx + 13);

                auto g11_0_xxxzzzz = primBuffer.data(g11off + 36 * idx + 14);

                auto g11_0_xxyyyyy = primBuffer.data(g11off + 36 * idx + 15);

                auto g11_0_xxyyyyz = primBuffer.data(g11off + 36 * idx + 16);

                auto g11_0_xxyyyzz = primBuffer.data(g11off + 36 * idx + 17);

                auto g11_0_xxyyzzz = primBuffer.data(g11off + 36 * idx + 18);

                auto g11_0_xxyzzzz = primBuffer.data(g11off + 36 * idx + 19);

                auto g11_0_xxzzzzz = primBuffer.data(g11off + 36 * idx + 20);

                auto g11_0_xyyyyyy = primBuffer.data(g11off + 36 * idx + 21);

                auto g11_0_xyyyyyz = primBuffer.data(g11off + 36 * idx + 22);

                auto g11_0_xyyyyzz = primBuffer.data(g11off + 36 * idx + 23);

                auto g11_0_xyyyzzz = primBuffer.data(g11off + 36 * idx + 24);

                auto g11_0_xyyzzzz = primBuffer.data(g11off + 36 * idx + 25);

                auto g11_0_xyzzzzz = primBuffer.data(g11off + 36 * idx + 26);

                auto g11_0_xzzzzzz = primBuffer.data(g11off + 36 * idx + 27);

                auto g11_0_yyyyyyy = primBuffer.data(g11off + 36 * idx + 28);

                auto g11_0_yyyyyyz = primBuffer.data(g11off + 36 * idx + 29);

                auto g11_0_yyyyyzz = primBuffer.data(g11off + 36 * idx + 30);

                auto g11_0_yyyyzzz = primBuffer.data(g11off + 36 * idx + 31);

                auto g11_0_yyyzzzz = primBuffer.data(g11off + 36 * idx + 32);

                auto g11_0_yyzzzzz = primBuffer.data(g11off + 36 * idx + 33);

                auto g11_0_yzzzzzz = primBuffer.data(g11off + 36 * idx + 34);

                auto g11_0_zzzzzzz = primBuffer.data(g11off + 36 * idx + 35);

                // set up pointers to (P|g(r,r')|SK)^(m) integrals

                auto g_x_xxxxxxx = primBuffer.data(goff + 108 * idx);

                auto g_x_xxxxxxy = primBuffer.data(goff + 108 * idx + 1);

                auto g_x_xxxxxxz = primBuffer.data(goff + 108 * idx + 2);

                auto g_x_xxxxxyy = primBuffer.data(goff + 108 * idx + 3);

                auto g_x_xxxxxyz = primBuffer.data(goff + 108 * idx + 4);

                auto g_x_xxxxxzz = primBuffer.data(goff + 108 * idx + 5);

                auto g_x_xxxxyyy = primBuffer.data(goff + 108 * idx + 6);

                auto g_x_xxxxyyz = primBuffer.data(goff + 108 * idx + 7);

                auto g_x_xxxxyzz = primBuffer.data(goff + 108 * idx + 8);

                auto g_x_xxxxzzz = primBuffer.data(goff + 108 * idx + 9);

                auto g_x_xxxyyyy = primBuffer.data(goff + 108 * idx + 10);

                auto g_x_xxxyyyz = primBuffer.data(goff + 108 * idx + 11);

                auto g_x_xxxyyzz = primBuffer.data(goff + 108 * idx + 12);

                auto g_x_xxxyzzz = primBuffer.data(goff + 108 * idx + 13);

                auto g_x_xxxzzzz = primBuffer.data(goff + 108 * idx + 14);

                auto g_x_xxyyyyy = primBuffer.data(goff + 108 * idx + 15);

                auto g_x_xxyyyyz = primBuffer.data(goff + 108 * idx + 16);

                auto g_x_xxyyyzz = primBuffer.data(goff + 108 * idx + 17);

                auto g_x_xxyyzzz = primBuffer.data(goff + 108 * idx + 18);

                auto g_x_xxyzzzz = primBuffer.data(goff + 108 * idx + 19);

                auto g_x_xxzzzzz = primBuffer.data(goff + 108 * idx + 20);

                auto g_x_xyyyyyy = primBuffer.data(goff + 108 * idx + 21);

                auto g_x_xyyyyyz = primBuffer.data(goff + 108 * idx + 22);

                auto g_x_xyyyyzz = primBuffer.data(goff + 108 * idx + 23);

                auto g_x_xyyyzzz = primBuffer.data(goff + 108 * idx + 24);

                auto g_x_xyyzzzz = primBuffer.data(goff + 108 * idx + 25);

                auto g_x_xyzzzzz = primBuffer.data(goff + 108 * idx + 26);

                auto g_x_xzzzzzz = primBuffer.data(goff + 108 * idx + 27);

                auto g_x_yyyyyyy = primBuffer.data(goff + 108 * idx + 28);

                auto g_x_yyyyyyz = primBuffer.data(goff + 108 * idx + 29);

                auto g_x_yyyyyzz = primBuffer.data(goff + 108 * idx + 30);

                auto g_x_yyyyzzz = primBuffer.data(goff + 108 * idx + 31);

                auto g_x_yyyzzzz = primBuffer.data(goff + 108 * idx + 32);

                auto g_x_yyzzzzz = primBuffer.data(goff + 108 * idx + 33);

                auto g_x_yzzzzzz = primBuffer.data(goff + 108 * idx + 34);

                auto g_x_zzzzzzz = primBuffer.data(goff + 108 * idx + 35);

                auto g_y_xxxxxxx = primBuffer.data(goff + 108 * idx + 36);

                auto g_y_xxxxxxy = primBuffer.data(goff + 108 * idx + 37);

                auto g_y_xxxxxxz = primBuffer.data(goff + 108 * idx + 38);

                auto g_y_xxxxxyy = primBuffer.data(goff + 108 * idx + 39);

                auto g_y_xxxxxyz = primBuffer.data(goff + 108 * idx + 40);

                auto g_y_xxxxxzz = primBuffer.data(goff + 108 * idx + 41);

                auto g_y_xxxxyyy = primBuffer.data(goff + 108 * idx + 42);

                auto g_y_xxxxyyz = primBuffer.data(goff + 108 * idx + 43);

                auto g_y_xxxxyzz = primBuffer.data(goff + 108 * idx + 44);

                auto g_y_xxxxzzz = primBuffer.data(goff + 108 * idx + 45);

                auto g_y_xxxyyyy = primBuffer.data(goff + 108 * idx + 46);

                auto g_y_xxxyyyz = primBuffer.data(goff + 108 * idx + 47);

                auto g_y_xxxyyzz = primBuffer.data(goff + 108 * idx + 48);

                auto g_y_xxxyzzz = primBuffer.data(goff + 108 * idx + 49);

                auto g_y_xxxzzzz = primBuffer.data(goff + 108 * idx + 50);

                auto g_y_xxyyyyy = primBuffer.data(goff + 108 * idx + 51);

                auto g_y_xxyyyyz = primBuffer.data(goff + 108 * idx + 52);

                auto g_y_xxyyyzz = primBuffer.data(goff + 108 * idx + 53);

                auto g_y_xxyyzzz = primBuffer.data(goff + 108 * idx + 54);

                auto g_y_xxyzzzz = primBuffer.data(goff + 108 * idx + 55);

                auto g_y_xxzzzzz = primBuffer.data(goff + 108 * idx + 56);

                auto g_y_xyyyyyy = primBuffer.data(goff + 108 * idx + 57);

                auto g_y_xyyyyyz = primBuffer.data(goff + 108 * idx + 58);

                auto g_y_xyyyyzz = primBuffer.data(goff + 108 * idx + 59);

                auto g_y_xyyyzzz = primBuffer.data(goff + 108 * idx + 60);

                auto g_y_xyyzzzz = primBuffer.data(goff + 108 * idx + 61);

                auto g_y_xyzzzzz = primBuffer.data(goff + 108 * idx + 62);

                auto g_y_xzzzzzz = primBuffer.data(goff + 108 * idx + 63);

                auto g_y_yyyyyyy = primBuffer.data(goff + 108 * idx + 64);

                auto g_y_yyyyyyz = primBuffer.data(goff + 108 * idx + 65);

                auto g_y_yyyyyzz = primBuffer.data(goff + 108 * idx + 66);

                auto g_y_yyyyzzz = primBuffer.data(goff + 108 * idx + 67);

                auto g_y_yyyzzzz = primBuffer.data(goff + 108 * idx + 68);

                auto g_y_yyzzzzz = primBuffer.data(goff + 108 * idx + 69);

                auto g_y_yzzzzzz = primBuffer.data(goff + 108 * idx + 70);

                auto g_y_zzzzzzz = primBuffer.data(goff + 108 * idx + 71);

                auto g_z_xxxxxxx = primBuffer.data(goff + 108 * idx + 72);

                auto g_z_xxxxxxy = primBuffer.data(goff + 108 * idx + 73);

                auto g_z_xxxxxxz = primBuffer.data(goff + 108 * idx + 74);

                auto g_z_xxxxxyy = primBuffer.data(goff + 108 * idx + 75);

                auto g_z_xxxxxyz = primBuffer.data(goff + 108 * idx + 76);

                auto g_z_xxxxxzz = primBuffer.data(goff + 108 * idx + 77);

                auto g_z_xxxxyyy = primBuffer.data(goff + 108 * idx + 78);

                auto g_z_xxxxyyz = primBuffer.data(goff + 108 * idx + 79);

                auto g_z_xxxxyzz = primBuffer.data(goff + 108 * idx + 80);

                auto g_z_xxxxzzz = primBuffer.data(goff + 108 * idx + 81);

                auto g_z_xxxyyyy = primBuffer.data(goff + 108 * idx + 82);

                auto g_z_xxxyyyz = primBuffer.data(goff + 108 * idx + 83);

                auto g_z_xxxyyzz = primBuffer.data(goff + 108 * idx + 84);

                auto g_z_xxxyzzz = primBuffer.data(goff + 108 * idx + 85);

                auto g_z_xxxzzzz = primBuffer.data(goff + 108 * idx + 86);

                auto g_z_xxyyyyy = primBuffer.data(goff + 108 * idx + 87);

                auto g_z_xxyyyyz = primBuffer.data(goff + 108 * idx + 88);

                auto g_z_xxyyyzz = primBuffer.data(goff + 108 * idx + 89);

                auto g_z_xxyyzzz = primBuffer.data(goff + 108 * idx + 90);

                auto g_z_xxyzzzz = primBuffer.data(goff + 108 * idx + 91);

                auto g_z_xxzzzzz = primBuffer.data(goff + 108 * idx + 92);

                auto g_z_xyyyyyy = primBuffer.data(goff + 108 * idx + 93);

                auto g_z_xyyyyyz = primBuffer.data(goff + 108 * idx + 94);

                auto g_z_xyyyyzz = primBuffer.data(goff + 108 * idx + 95);

                auto g_z_xyyyzzz = primBuffer.data(goff + 108 * idx + 96);

                auto g_z_xyyzzzz = primBuffer.data(goff + 108 * idx + 97);

                auto g_z_xyzzzzz = primBuffer.data(goff + 108 * idx + 98);

                auto g_z_xzzzzzz = primBuffer.data(goff + 108 * idx + 99);

                auto g_z_yyyyyyy = primBuffer.data(goff + 108 * idx + 100);

                auto g_z_yyyyyyz = primBuffer.data(goff + 108 * idx + 101);

                auto g_z_yyyyyzz = primBuffer.data(goff + 108 * idx + 102);

                auto g_z_yyyyzzz = primBuffer.data(goff + 108 * idx + 103);

                auto g_z_yyyzzzz = primBuffer.data(goff + 108 * idx + 104);

                auto g_z_yyzzzzz = primBuffer.data(goff + 108 * idx + 105);

                auto g_z_yzzzzzz = primBuffer.data(goff + 108 * idx + 106);

                auto g_z_zzzzzzz = primBuffer.data(goff + 108 * idx + 107);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xxxxxx, gk_0_xxxxxy,\
                                         gk_0_xxxxxz, gk_0_xxxxyy, gk_0_xxxxyz,\
                                         gk_0_xxxxzz, gk_0_xxxyyy, gk_0_xxxyyz,\
                                         gk_0_xxxyzz, gk_0_xxxzzz, gk_0_xxyyyy,\
                                         gk_0_xxyyyz, gk_0_xxyyzz, gk_0_xxyzzz,\
                                         gk_0_xxzzzz, gk_0_xyyyyy, gk_0_xyyyyz,\
                                         gk_0_xyyyzz, gk_0_xyyzzz, gk_0_xyzzzz,\
                                         gk_0_xzzzzz, gk_0_yyyyyy, gk_0_yyyyyz,\
                                         gk_0_yyyyzz, gk_0_yyyzzz, gk_0_yyzzzz,\
                                         gk_0_yzzzzz, gk_0_zzzzzz, g11_0_xxxxxxx,\
                                         g11_0_xxxxxxy, g11_0_xxxxxxz, g11_0_xxxxxyy,\
                                         g11_0_xxxxxyz, g11_0_xxxxxzz, g11_0_xxxxyyy,\
                                         g11_0_xxxxyyz, g11_0_xxxxyzz, g11_0_xxxxzzz,\
                                         g11_0_xxxyyyy, g11_0_xxxyyyz, g11_0_xxxyyzz,\
                                         g11_0_xxxyzzz, g11_0_xxxzzzz, g11_0_xxyyyyy,\
                                         g11_0_xxyyyyz, g11_0_xxyyyzz, g11_0_xxyyzzz,\
                                         g11_0_xxyzzzz, g11_0_xxzzzzz, g11_0_xyyyyyy,\
                                         g11_0_xyyyyyz, g11_0_xyyyyzz, g11_0_xyyyzzz,\
                                         g11_0_xyyzzzz, g11_0_xyzzzzz, g11_0_xzzzzzz,\
                                         g11_0_yyyyyyy, g11_0_yyyyyyz, g11_0_yyyyyzz,\
                                         g11_0_yyyyzzz, g11_0_yyyzzzz, g11_0_yyzzzzz,\
                                         g11_0_yzzzzzz, g11_0_zzzzzzz, g_x_xxxxxxx,\
                                         g_x_xxxxxxy, g_x_xxxxxxz, g_x_xxxxxyy,\
                                         g_x_xxxxxyz, g_x_xxxxxzz, g_x_xxxxyyy,\
                                         g_x_xxxxyyz, g_x_xxxxyzz, g_x_xxxxzzz,\
                                         g_x_xxxyyyy, g_x_xxxyyyz, g_x_xxxyyzz,\
                                         g_x_xxxyzzz, g_x_xxxzzzz, g_x_xxyyyyy,\
                                         g_x_xxyyyyz, g_x_xxyyyzz, g_x_xxyyzzz,\
                                         g_x_xxyzzzz, g_x_xxzzzzz, g_x_xyyyyyy,\
                                         g_x_xyyyyyz, g_x_xyyyyzz, g_x_xyyyzzz,\
                                         g_x_xyyzzzz, g_x_xyzzzzz, g_x_xzzzzzz,\
                                         g_x_yyyyyyy, g_x_yyyyyyz, g_x_yyyyyzz,\
                                         g_x_yyyyzzz, g_x_yyyzzzz, g_x_yyzzzzz,\
                                         g_x_yzzzzzz, g_x_zzzzzzz, g_y_xxxxxxx,\
                                         g_y_xxxxxxy, g_y_xxxxxxz, g_y_xxxxxyy,\
                                         g_y_xxxxxyz, g_y_xxxxxzz, g_y_xxxxyyy,\
                                         g_y_xxxxyyz, g_y_xxxxyzz, g_y_xxxxzzz,\
                                         g_y_xxxyyyy, g_y_xxxyyyz, g_y_xxxyyzz,\
                                         g_y_xxxyzzz, g_y_xxxzzzz, g_y_xxyyyyy,\
                                         g_y_xxyyyyz, g_y_xxyyyzz, g_y_xxyyzzz,\
                                         g_y_xxyzzzz, g_y_xxzzzzz, g_y_xyyyyyy,\
                                         g_y_xyyyyyz, g_y_xyyyyzz, g_y_xyyyzzz,\
                                         g_y_xyyzzzz, g_y_xyzzzzz, g_y_xzzzzzz,\
                                         g_y_yyyyyyy, g_y_yyyyyyz, g_y_yyyyyzz,\
                                         g_y_yyyyzzz, g_y_yyyzzzz, g_y_yyzzzzz,\
                                         g_y_yzzzzzz, g_y_zzzzzzz, g_z_xxxxxxx,\
                                         g_z_xxxxxxy, g_z_xxxxxxz, g_z_xxxxxyy,\
                                         g_z_xxxxxyz, g_z_xxxxxzz, g_z_xxxxyyy,\
                                         g_z_xxxxyyz, g_z_xxxxyzz, g_z_xxxxzzz,\
                                         g_z_xxxyyyy, g_z_xxxyyyz, g_z_xxxyyzz,\
                                         g_z_xxxyzzz, g_z_xxxzzzz, g_z_xxyyyyy,\
                                         g_z_xxyyyyz, g_z_xxyyyzz, g_z_xxyyzzz,\
                                         g_z_xxyzzzz, g_z_xxzzzzz, g_z_xyyyyyy,\
                                         g_z_xyyyyyz, g_z_xyyyyzz, g_z_xyyyzzz,\
                                         g_z_xyyzzzz, g_z_xyzzzzz, g_z_xzzzzzz,\
                                         g_z_yyyyyyy, g_z_yyyyyyz, g_z_yyyyyzz,\
                                         g_z_yyyyzzz, g_z_yyyzzzz, g_z_yyzzzzz,\
                                         g_z_yzzzzzz, g_z_zzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxxxxxx[k] = fr * g11_0_xxxxxxx[k] + 7.0 * f2t * gk_0_xxxxxx[k];

                    g_x_xxxxxxy[k] = fr * g11_0_xxxxxxy[k] + 6.0 * f2t * gk_0_xxxxxy[k];

                    g_x_xxxxxxz[k] = fr * g11_0_xxxxxxz[k] + 6.0 * f2t * gk_0_xxxxxz[k];

                    g_x_xxxxxyy[k] = fr * g11_0_xxxxxyy[k] + 5.0 * f2t * gk_0_xxxxyy[k];

                    g_x_xxxxxyz[k] = fr * g11_0_xxxxxyz[k] + 5.0 * f2t * gk_0_xxxxyz[k];

                    g_x_xxxxxzz[k] = fr * g11_0_xxxxxzz[k] + 5.0 * f2t * gk_0_xxxxzz[k];

                    g_x_xxxxyyy[k] = fr * g11_0_xxxxyyy[k] + 4.0 * f2t * gk_0_xxxyyy[k];

                    g_x_xxxxyyz[k] = fr * g11_0_xxxxyyz[k] + 4.0 * f2t * gk_0_xxxyyz[k];

                    g_x_xxxxyzz[k] = fr * g11_0_xxxxyzz[k] + 4.0 * f2t * gk_0_xxxyzz[k];

                    g_x_xxxxzzz[k] = fr * g11_0_xxxxzzz[k] + 4.0 * f2t * gk_0_xxxzzz[k];

                    g_x_xxxyyyy[k] = fr * g11_0_xxxyyyy[k] + 3.0 * f2t * gk_0_xxyyyy[k];

                    g_x_xxxyyyz[k] = fr * g11_0_xxxyyyz[k] + 3.0 * f2t * gk_0_xxyyyz[k];

                    g_x_xxxyyzz[k] = fr * g11_0_xxxyyzz[k] + 3.0 * f2t * gk_0_xxyyzz[k];

                    g_x_xxxyzzz[k] = fr * g11_0_xxxyzzz[k] + 3.0 * f2t * gk_0_xxyzzz[k];

                    g_x_xxxzzzz[k] = fr * g11_0_xxxzzzz[k] + 3.0 * f2t * gk_0_xxzzzz[k];

                    g_x_xxyyyyy[k] = fr * g11_0_xxyyyyy[k] + 2.0 * f2t * gk_0_xyyyyy[k];

                    g_x_xxyyyyz[k] = fr * g11_0_xxyyyyz[k] + 2.0 * f2t * gk_0_xyyyyz[k];

                    g_x_xxyyyzz[k] = fr * g11_0_xxyyyzz[k] + 2.0 * f2t * gk_0_xyyyzz[k];

                    g_x_xxyyzzz[k] = fr * g11_0_xxyyzzz[k] + 2.0 * f2t * gk_0_xyyzzz[k];

                    g_x_xxyzzzz[k] = fr * g11_0_xxyzzzz[k] + 2.0 * f2t * gk_0_xyzzzz[k];

                    g_x_xxzzzzz[k] = fr * g11_0_xxzzzzz[k] + 2.0 * f2t * gk_0_xzzzzz[k];

                    g_x_xyyyyyy[k] = fr * g11_0_xyyyyyy[k] + f2t * gk_0_yyyyyy[k];

                    g_x_xyyyyyz[k] = fr * g11_0_xyyyyyz[k] + f2t * gk_0_yyyyyz[k];

                    g_x_xyyyyzz[k] = fr * g11_0_xyyyyzz[k] + f2t * gk_0_yyyyzz[k];

                    g_x_xyyyzzz[k] = fr * g11_0_xyyyzzz[k] + f2t * gk_0_yyyzzz[k];

                    g_x_xyyzzzz[k] = fr * g11_0_xyyzzzz[k] + f2t * gk_0_yyzzzz[k];

                    g_x_xyzzzzz[k] = fr * g11_0_xyzzzzz[k] + f2t * gk_0_yzzzzz[k];

                    g_x_xzzzzzz[k] = fr * g11_0_xzzzzzz[k] + f2t * gk_0_zzzzzz[k];

                    g_x_yyyyyyy[k] = fr * g11_0_yyyyyyy[k];

                    g_x_yyyyyyz[k] = fr * g11_0_yyyyyyz[k];

                    g_x_yyyyyzz[k] = fr * g11_0_yyyyyzz[k];

                    g_x_yyyyzzz[k] = fr * g11_0_yyyyzzz[k];

                    g_x_yyyzzzz[k] = fr * g11_0_yyyzzzz[k];

                    g_x_yyzzzzz[k] = fr * g11_0_yyzzzzz[k];

                    g_x_yzzzzzz[k] = fr * g11_0_yzzzzzz[k];

                    g_x_zzzzzzz[k] = fr * g11_0_zzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxxxxxx[k] = fr * g11_0_xxxxxxx[k];

                    g_y_xxxxxxy[k] = fr * g11_0_xxxxxxy[k] + f2t * gk_0_xxxxxx[k];

                    g_y_xxxxxxz[k] = fr * g11_0_xxxxxxz[k];

                    g_y_xxxxxyy[k] = fr * g11_0_xxxxxyy[k] + 2.0 * f2t * gk_0_xxxxxy[k];

                    g_y_xxxxxyz[k] = fr * g11_0_xxxxxyz[k] + f2t * gk_0_xxxxxz[k];

                    g_y_xxxxxzz[k] = fr * g11_0_xxxxxzz[k];

                    g_y_xxxxyyy[k] = fr * g11_0_xxxxyyy[k] + 3.0 * f2t * gk_0_xxxxyy[k];

                    g_y_xxxxyyz[k] = fr * g11_0_xxxxyyz[k] + 2.0 * f2t * gk_0_xxxxyz[k];

                    g_y_xxxxyzz[k] = fr * g11_0_xxxxyzz[k] + f2t * gk_0_xxxxzz[k];

                    g_y_xxxxzzz[k] = fr * g11_0_xxxxzzz[k];

                    g_y_xxxyyyy[k] = fr * g11_0_xxxyyyy[k] + 4.0 * f2t * gk_0_xxxyyy[k];

                    g_y_xxxyyyz[k] = fr * g11_0_xxxyyyz[k] + 3.0 * f2t * gk_0_xxxyyz[k];

                    g_y_xxxyyzz[k] = fr * g11_0_xxxyyzz[k] + 2.0 * f2t * gk_0_xxxyzz[k];

                    g_y_xxxyzzz[k] = fr * g11_0_xxxyzzz[k] + f2t * gk_0_xxxzzz[k];

                    g_y_xxxzzzz[k] = fr * g11_0_xxxzzzz[k];

                    g_y_xxyyyyy[k] = fr * g11_0_xxyyyyy[k] + 5.0 * f2t * gk_0_xxyyyy[k];

                    g_y_xxyyyyz[k] = fr * g11_0_xxyyyyz[k] + 4.0 * f2t * gk_0_xxyyyz[k];

                    g_y_xxyyyzz[k] = fr * g11_0_xxyyyzz[k] + 3.0 * f2t * gk_0_xxyyzz[k];

                    g_y_xxyyzzz[k] = fr * g11_0_xxyyzzz[k] + 2.0 * f2t * gk_0_xxyzzz[k];

                    g_y_xxyzzzz[k] = fr * g11_0_xxyzzzz[k] + f2t * gk_0_xxzzzz[k];

                    g_y_xxzzzzz[k] = fr * g11_0_xxzzzzz[k];

                    g_y_xyyyyyy[k] = fr * g11_0_xyyyyyy[k] + 6.0 * f2t * gk_0_xyyyyy[k];

                    g_y_xyyyyyz[k] = fr * g11_0_xyyyyyz[k] + 5.0 * f2t * gk_0_xyyyyz[k];

                    g_y_xyyyyzz[k] = fr * g11_0_xyyyyzz[k] + 4.0 * f2t * gk_0_xyyyzz[k];

                    g_y_xyyyzzz[k] = fr * g11_0_xyyyzzz[k] + 3.0 * f2t * gk_0_xyyzzz[k];

                    g_y_xyyzzzz[k] = fr * g11_0_xyyzzzz[k] + 2.0 * f2t * gk_0_xyzzzz[k];

                    g_y_xyzzzzz[k] = fr * g11_0_xyzzzzz[k] + f2t * gk_0_xzzzzz[k];

                    g_y_xzzzzzz[k] = fr * g11_0_xzzzzzz[k];

                    g_y_yyyyyyy[k] = fr * g11_0_yyyyyyy[k] + 7.0 * f2t * gk_0_yyyyyy[k];

                    g_y_yyyyyyz[k] = fr * g11_0_yyyyyyz[k] + 6.0 * f2t * gk_0_yyyyyz[k];

                    g_y_yyyyyzz[k] = fr * g11_0_yyyyyzz[k] + 5.0 * f2t * gk_0_yyyyzz[k];

                    g_y_yyyyzzz[k] = fr * g11_0_yyyyzzz[k] + 4.0 * f2t * gk_0_yyyzzz[k];

                    g_y_yyyzzzz[k] = fr * g11_0_yyyzzzz[k] + 3.0 * f2t * gk_0_yyzzzz[k];

                    g_y_yyzzzzz[k] = fr * g11_0_yyzzzzz[k] + 2.0 * f2t * gk_0_yzzzzz[k];

                    g_y_yzzzzzz[k] = fr * g11_0_yzzzzzz[k] + f2t * gk_0_zzzzzz[k];

                    g_y_zzzzzzz[k] = fr * g11_0_zzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxxxxxx[k] = fr * g11_0_xxxxxxx[k];

                    g_z_xxxxxxy[k] = fr * g11_0_xxxxxxy[k];

                    g_z_xxxxxxz[k] = fr * g11_0_xxxxxxz[k] + f2t * gk_0_xxxxxx[k];

                    g_z_xxxxxyy[k] = fr * g11_0_xxxxxyy[k];

                    g_z_xxxxxyz[k] = fr * g11_0_xxxxxyz[k] + f2t * gk_0_xxxxxy[k];

                    g_z_xxxxxzz[k] = fr * g11_0_xxxxxzz[k] + 2.0 * f2t * gk_0_xxxxxz[k];

                    g_z_xxxxyyy[k] = fr * g11_0_xxxxyyy[k];

                    g_z_xxxxyyz[k] = fr * g11_0_xxxxyyz[k] + f2t * gk_0_xxxxyy[k];

                    g_z_xxxxyzz[k] = fr * g11_0_xxxxyzz[k] + 2.0 * f2t * gk_0_xxxxyz[k];

                    g_z_xxxxzzz[k] = fr * g11_0_xxxxzzz[k] + 3.0 * f2t * gk_0_xxxxzz[k];

                    g_z_xxxyyyy[k] = fr * g11_0_xxxyyyy[k];

                    g_z_xxxyyyz[k] = fr * g11_0_xxxyyyz[k] + f2t * gk_0_xxxyyy[k];

                    g_z_xxxyyzz[k] = fr * g11_0_xxxyyzz[k] + 2.0 * f2t * gk_0_xxxyyz[k];

                    g_z_xxxyzzz[k] = fr * g11_0_xxxyzzz[k] + 3.0 * f2t * gk_0_xxxyzz[k];

                    g_z_xxxzzzz[k] = fr * g11_0_xxxzzzz[k] + 4.0 * f2t * gk_0_xxxzzz[k];

                    g_z_xxyyyyy[k] = fr * g11_0_xxyyyyy[k];

                    g_z_xxyyyyz[k] = fr * g11_0_xxyyyyz[k] + f2t * gk_0_xxyyyy[k];

                    g_z_xxyyyzz[k] = fr * g11_0_xxyyyzz[k] + 2.0 * f2t * gk_0_xxyyyz[k];

                    g_z_xxyyzzz[k] = fr * g11_0_xxyyzzz[k] + 3.0 * f2t * gk_0_xxyyzz[k];

                    g_z_xxyzzzz[k] = fr * g11_0_xxyzzzz[k] + 4.0 * f2t * gk_0_xxyzzz[k];

                    g_z_xxzzzzz[k] = fr * g11_0_xxzzzzz[k] + 5.0 * f2t * gk_0_xxzzzz[k];

                    g_z_xyyyyyy[k] = fr * g11_0_xyyyyyy[k];

                    g_z_xyyyyyz[k] = fr * g11_0_xyyyyyz[k] + f2t * gk_0_xyyyyy[k];

                    g_z_xyyyyzz[k] = fr * g11_0_xyyyyzz[k] + 2.0 * f2t * gk_0_xyyyyz[k];

                    g_z_xyyyzzz[k] = fr * g11_0_xyyyzzz[k] + 3.0 * f2t * gk_0_xyyyzz[k];

                    g_z_xyyzzzz[k] = fr * g11_0_xyyzzzz[k] + 4.0 * f2t * gk_0_xyyzzz[k];

                    g_z_xyzzzzz[k] = fr * g11_0_xyzzzzz[k] + 5.0 * f2t * gk_0_xyzzzz[k];

                    g_z_xzzzzzz[k] = fr * g11_0_xzzzzzz[k] + 6.0 * f2t * gk_0_xzzzzz[k];

                    g_z_yyyyyyy[k] = fr * g11_0_yyyyyyy[k];

                    g_z_yyyyyyz[k] = fr * g11_0_yyyyyyz[k] + f2t * gk_0_yyyyyy[k];

                    g_z_yyyyyzz[k] = fr * g11_0_yyyyyzz[k] + 2.0 * f2t * gk_0_yyyyyz[k];

                    g_z_yyyyzzz[k] = fr * g11_0_yyyyzzz[k] + 3.0 * f2t * gk_0_yyyyzz[k];

                    g_z_yyyzzzz[k] = fr * g11_0_yyyzzzz[k] + 4.0 * f2t * gk_0_yyyzzz[k];

                    g_z_yyzzzzz[k] = fr * g11_0_yyzzzzz[k] + 5.0 * f2t * gk_0_yyzzzz[k];

                    g_z_yzzzzzz[k] = fr * g11_0_yzzzzzz[k] + 6.0 * f2t * gk_0_yzzzzz[k];

                    g_z_zzzzzzz[k] = fr * g11_0_zzzzzzz[k] + 7.0 * f2t * gk_0_zzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSK(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 7);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 7, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 7, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 7, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 7, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 6, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SI)^(m+1) integrals

                auto gk_x_xxxxxx = primBuffer.data(gkoff + 84 * idx);

                auto gk_x_xxxxxy = primBuffer.data(gkoff + 84 * idx + 1);

                auto gk_x_xxxxxz = primBuffer.data(gkoff + 84 * idx + 2);

                auto gk_x_xxxxyy = primBuffer.data(gkoff + 84 * idx + 3);

                auto gk_x_xxxxyz = primBuffer.data(gkoff + 84 * idx + 4);

                auto gk_x_xxxxzz = primBuffer.data(gkoff + 84 * idx + 5);

                auto gk_x_xxxyyy = primBuffer.data(gkoff + 84 * idx + 6);

                auto gk_x_xxxyyz = primBuffer.data(gkoff + 84 * idx + 7);

                auto gk_x_xxxyzz = primBuffer.data(gkoff + 84 * idx + 8);

                auto gk_x_xxxzzz = primBuffer.data(gkoff + 84 * idx + 9);

                auto gk_x_xxyyyy = primBuffer.data(gkoff + 84 * idx + 10);

                auto gk_x_xxyyyz = primBuffer.data(gkoff + 84 * idx + 11);

                auto gk_x_xxyyzz = primBuffer.data(gkoff + 84 * idx + 12);

                auto gk_x_xxyzzz = primBuffer.data(gkoff + 84 * idx + 13);

                auto gk_x_xxzzzz = primBuffer.data(gkoff + 84 * idx + 14);

                auto gk_x_xyyyyy = primBuffer.data(gkoff + 84 * idx + 15);

                auto gk_x_xyyyyz = primBuffer.data(gkoff + 84 * idx + 16);

                auto gk_x_xyyyzz = primBuffer.data(gkoff + 84 * idx + 17);

                auto gk_x_xyyzzz = primBuffer.data(gkoff + 84 * idx + 18);

                auto gk_x_xyzzzz = primBuffer.data(gkoff + 84 * idx + 19);

                auto gk_x_xzzzzz = primBuffer.data(gkoff + 84 * idx + 20);

                auto gk_x_yyyyyy = primBuffer.data(gkoff + 84 * idx + 21);

                auto gk_x_yyyyyz = primBuffer.data(gkoff + 84 * idx + 22);

                auto gk_x_yyyyzz = primBuffer.data(gkoff + 84 * idx + 23);

                auto gk_x_yyyzzz = primBuffer.data(gkoff + 84 * idx + 24);

                auto gk_x_yyzzzz = primBuffer.data(gkoff + 84 * idx + 25);

                auto gk_x_yzzzzz = primBuffer.data(gkoff + 84 * idx + 26);

                auto gk_x_zzzzzz = primBuffer.data(gkoff + 84 * idx + 27);

                auto gk_y_xxxxxx = primBuffer.data(gkoff + 84 * idx + 28);

                auto gk_y_xxxxxy = primBuffer.data(gkoff + 84 * idx + 29);

                auto gk_y_xxxxxz = primBuffer.data(gkoff + 84 * idx + 30);

                auto gk_y_xxxxyy = primBuffer.data(gkoff + 84 * idx + 31);

                auto gk_y_xxxxyz = primBuffer.data(gkoff + 84 * idx + 32);

                auto gk_y_xxxxzz = primBuffer.data(gkoff + 84 * idx + 33);

                auto gk_y_xxxyyy = primBuffer.data(gkoff + 84 * idx + 34);

                auto gk_y_xxxyyz = primBuffer.data(gkoff + 84 * idx + 35);

                auto gk_y_xxxyzz = primBuffer.data(gkoff + 84 * idx + 36);

                auto gk_y_xxxzzz = primBuffer.data(gkoff + 84 * idx + 37);

                auto gk_y_xxyyyy = primBuffer.data(gkoff + 84 * idx + 38);

                auto gk_y_xxyyyz = primBuffer.data(gkoff + 84 * idx + 39);

                auto gk_y_xxyyzz = primBuffer.data(gkoff + 84 * idx + 40);

                auto gk_y_xxyzzz = primBuffer.data(gkoff + 84 * idx + 41);

                auto gk_y_xxzzzz = primBuffer.data(gkoff + 84 * idx + 42);

                auto gk_y_xyyyyy = primBuffer.data(gkoff + 84 * idx + 43);

                auto gk_y_xyyyyz = primBuffer.data(gkoff + 84 * idx + 44);

                auto gk_y_xyyyzz = primBuffer.data(gkoff + 84 * idx + 45);

                auto gk_y_xyyzzz = primBuffer.data(gkoff + 84 * idx + 46);

                auto gk_y_xyzzzz = primBuffer.data(gkoff + 84 * idx + 47);

                auto gk_y_xzzzzz = primBuffer.data(gkoff + 84 * idx + 48);

                auto gk_y_yyyyyy = primBuffer.data(gkoff + 84 * idx + 49);

                auto gk_y_yyyyyz = primBuffer.data(gkoff + 84 * idx + 50);

                auto gk_y_yyyyzz = primBuffer.data(gkoff + 84 * idx + 51);

                auto gk_y_yyyzzz = primBuffer.data(gkoff + 84 * idx + 52);

                auto gk_y_yyzzzz = primBuffer.data(gkoff + 84 * idx + 53);

                auto gk_y_yzzzzz = primBuffer.data(gkoff + 84 * idx + 54);

                auto gk_y_zzzzzz = primBuffer.data(gkoff + 84 * idx + 55);

                auto gk_z_xxxxxx = primBuffer.data(gkoff + 84 * idx + 56);

                auto gk_z_xxxxxy = primBuffer.data(gkoff + 84 * idx + 57);

                auto gk_z_xxxxxz = primBuffer.data(gkoff + 84 * idx + 58);

                auto gk_z_xxxxyy = primBuffer.data(gkoff + 84 * idx + 59);

                auto gk_z_xxxxyz = primBuffer.data(gkoff + 84 * idx + 60);

                auto gk_z_xxxxzz = primBuffer.data(gkoff + 84 * idx + 61);

                auto gk_z_xxxyyy = primBuffer.data(gkoff + 84 * idx + 62);

                auto gk_z_xxxyyz = primBuffer.data(gkoff + 84 * idx + 63);

                auto gk_z_xxxyzz = primBuffer.data(gkoff + 84 * idx + 64);

                auto gk_z_xxxzzz = primBuffer.data(gkoff + 84 * idx + 65);

                auto gk_z_xxyyyy = primBuffer.data(gkoff + 84 * idx + 66);

                auto gk_z_xxyyyz = primBuffer.data(gkoff + 84 * idx + 67);

                auto gk_z_xxyyzz = primBuffer.data(gkoff + 84 * idx + 68);

                auto gk_z_xxyzzz = primBuffer.data(gkoff + 84 * idx + 69);

                auto gk_z_xxzzzz = primBuffer.data(gkoff + 84 * idx + 70);

                auto gk_z_xyyyyy = primBuffer.data(gkoff + 84 * idx + 71);

                auto gk_z_xyyyyz = primBuffer.data(gkoff + 84 * idx + 72);

                auto gk_z_xyyyzz = primBuffer.data(gkoff + 84 * idx + 73);

                auto gk_z_xyyzzz = primBuffer.data(gkoff + 84 * idx + 74);

                auto gk_z_xyzzzz = primBuffer.data(gkoff + 84 * idx + 75);

                auto gk_z_xzzzzz = primBuffer.data(gkoff + 84 * idx + 76);

                auto gk_z_yyyyyy = primBuffer.data(gkoff + 84 * idx + 77);

                auto gk_z_yyyyyz = primBuffer.data(gkoff + 84 * idx + 78);

                auto gk_z_yyyyzz = primBuffer.data(gkoff + 84 * idx + 79);

                auto gk_z_yyyzzz = primBuffer.data(gkoff + 84 * idx + 80);

                auto gk_z_yyzzzz = primBuffer.data(gkoff + 84 * idx + 81);

                auto gk_z_yzzzzz = primBuffer.data(gkoff + 84 * idx + 82);

                auto gk_z_zzzzzz = primBuffer.data(gkoff + 84 * idx + 83);

                // set up pointers to (S|g(r,r')|SK)^(m) integrals

                auto g20_0_xxxxxxx = primBuffer.data(g20off + 36 * idx);

                auto g20_0_xxxxxxy = primBuffer.data(g20off + 36 * idx + 1);

                auto g20_0_xxxxxxz = primBuffer.data(g20off + 36 * idx + 2);

                auto g20_0_xxxxxyy = primBuffer.data(g20off + 36 * idx + 3);

                auto g20_0_xxxxxyz = primBuffer.data(g20off + 36 * idx + 4);

                auto g20_0_xxxxxzz = primBuffer.data(g20off + 36 * idx + 5);

                auto g20_0_xxxxyyy = primBuffer.data(g20off + 36 * idx + 6);

                auto g20_0_xxxxyyz = primBuffer.data(g20off + 36 * idx + 7);

                auto g20_0_xxxxyzz = primBuffer.data(g20off + 36 * idx + 8);

                auto g20_0_xxxxzzz = primBuffer.data(g20off + 36 * idx + 9);

                auto g20_0_xxxyyyy = primBuffer.data(g20off + 36 * idx + 10);

                auto g20_0_xxxyyyz = primBuffer.data(g20off + 36 * idx + 11);

                auto g20_0_xxxyyzz = primBuffer.data(g20off + 36 * idx + 12);

                auto g20_0_xxxyzzz = primBuffer.data(g20off + 36 * idx + 13);

                auto g20_0_xxxzzzz = primBuffer.data(g20off + 36 * idx + 14);

                auto g20_0_xxyyyyy = primBuffer.data(g20off + 36 * idx + 15);

                auto g20_0_xxyyyyz = primBuffer.data(g20off + 36 * idx + 16);

                auto g20_0_xxyyyzz = primBuffer.data(g20off + 36 * idx + 17);

                auto g20_0_xxyyzzz = primBuffer.data(g20off + 36 * idx + 18);

                auto g20_0_xxyzzzz = primBuffer.data(g20off + 36 * idx + 19);

                auto g20_0_xxzzzzz = primBuffer.data(g20off + 36 * idx + 20);

                auto g20_0_xyyyyyy = primBuffer.data(g20off + 36 * idx + 21);

                auto g20_0_xyyyyyz = primBuffer.data(g20off + 36 * idx + 22);

                auto g20_0_xyyyyzz = primBuffer.data(g20off + 36 * idx + 23);

                auto g20_0_xyyyzzz = primBuffer.data(g20off + 36 * idx + 24);

                auto g20_0_xyyzzzz = primBuffer.data(g20off + 36 * idx + 25);

                auto g20_0_xyzzzzz = primBuffer.data(g20off + 36 * idx + 26);

                auto g20_0_xzzzzzz = primBuffer.data(g20off + 36 * idx + 27);

                auto g20_0_yyyyyyy = primBuffer.data(g20off + 36 * idx + 28);

                auto g20_0_yyyyyyz = primBuffer.data(g20off + 36 * idx + 29);

                auto g20_0_yyyyyzz = primBuffer.data(g20off + 36 * idx + 30);

                auto g20_0_yyyyzzz = primBuffer.data(g20off + 36 * idx + 31);

                auto g20_0_yyyzzzz = primBuffer.data(g20off + 36 * idx + 32);

                auto g20_0_yyzzzzz = primBuffer.data(g20off + 36 * idx + 33);

                auto g20_0_yzzzzzz = primBuffer.data(g20off + 36 * idx + 34);

                auto g20_0_zzzzzzz = primBuffer.data(g20off + 36 * idx + 35);

                // set up pointers to (S|g(r,r')|SK)^(m+1) integrals

                auto g21_0_xxxxxxx = primBuffer.data(g21off + 36 * idx);

                auto g21_0_xxxxxxy = primBuffer.data(g21off + 36 * idx + 1);

                auto g21_0_xxxxxxz = primBuffer.data(g21off + 36 * idx + 2);

                auto g21_0_xxxxxyy = primBuffer.data(g21off + 36 * idx + 3);

                auto g21_0_xxxxxyz = primBuffer.data(g21off + 36 * idx + 4);

                auto g21_0_xxxxxzz = primBuffer.data(g21off + 36 * idx + 5);

                auto g21_0_xxxxyyy = primBuffer.data(g21off + 36 * idx + 6);

                auto g21_0_xxxxyyz = primBuffer.data(g21off + 36 * idx + 7);

                auto g21_0_xxxxyzz = primBuffer.data(g21off + 36 * idx + 8);

                auto g21_0_xxxxzzz = primBuffer.data(g21off + 36 * idx + 9);

                auto g21_0_xxxyyyy = primBuffer.data(g21off + 36 * idx + 10);

                auto g21_0_xxxyyyz = primBuffer.data(g21off + 36 * idx + 11);

                auto g21_0_xxxyyzz = primBuffer.data(g21off + 36 * idx + 12);

                auto g21_0_xxxyzzz = primBuffer.data(g21off + 36 * idx + 13);

                auto g21_0_xxxzzzz = primBuffer.data(g21off + 36 * idx + 14);

                auto g21_0_xxyyyyy = primBuffer.data(g21off + 36 * idx + 15);

                auto g21_0_xxyyyyz = primBuffer.data(g21off + 36 * idx + 16);

                auto g21_0_xxyyyzz = primBuffer.data(g21off + 36 * idx + 17);

                auto g21_0_xxyyzzz = primBuffer.data(g21off + 36 * idx + 18);

                auto g21_0_xxyzzzz = primBuffer.data(g21off + 36 * idx + 19);

                auto g21_0_xxzzzzz = primBuffer.data(g21off + 36 * idx + 20);

                auto g21_0_xyyyyyy = primBuffer.data(g21off + 36 * idx + 21);

                auto g21_0_xyyyyyz = primBuffer.data(g21off + 36 * idx + 22);

                auto g21_0_xyyyyzz = primBuffer.data(g21off + 36 * idx + 23);

                auto g21_0_xyyyzzz = primBuffer.data(g21off + 36 * idx + 24);

                auto g21_0_xyyzzzz = primBuffer.data(g21off + 36 * idx + 25);

                auto g21_0_xyzzzzz = primBuffer.data(g21off + 36 * idx + 26);

                auto g21_0_xzzzzzz = primBuffer.data(g21off + 36 * idx + 27);

                auto g21_0_yyyyyyy = primBuffer.data(g21off + 36 * idx + 28);

                auto g21_0_yyyyyyz = primBuffer.data(g21off + 36 * idx + 29);

                auto g21_0_yyyyyzz = primBuffer.data(g21off + 36 * idx + 30);

                auto g21_0_yyyyzzz = primBuffer.data(g21off + 36 * idx + 31);

                auto g21_0_yyyzzzz = primBuffer.data(g21off + 36 * idx + 32);

                auto g21_0_yyzzzzz = primBuffer.data(g21off + 36 * idx + 33);

                auto g21_0_yzzzzzz = primBuffer.data(g21off + 36 * idx + 34);

                auto g21_0_zzzzzzz = primBuffer.data(g21off + 36 * idx + 35);

                // set up pointers to (P|g(r,r')|SK)^(m+1) integrals

                auto g11_x_xxxxxxx = primBuffer.data(g11off + 108 * idx);

                auto g11_x_xxxxxxy = primBuffer.data(g11off + 108 * idx + 1);

                auto g11_x_xxxxxxz = primBuffer.data(g11off + 108 * idx + 2);

                auto g11_x_xxxxxyy = primBuffer.data(g11off + 108 * idx + 3);

                auto g11_x_xxxxxyz = primBuffer.data(g11off + 108 * idx + 4);

                auto g11_x_xxxxxzz = primBuffer.data(g11off + 108 * idx + 5);

                auto g11_x_xxxxyyy = primBuffer.data(g11off + 108 * idx + 6);

                auto g11_x_xxxxyyz = primBuffer.data(g11off + 108 * idx + 7);

                auto g11_x_xxxxyzz = primBuffer.data(g11off + 108 * idx + 8);

                auto g11_x_xxxxzzz = primBuffer.data(g11off + 108 * idx + 9);

                auto g11_x_xxxyyyy = primBuffer.data(g11off + 108 * idx + 10);

                auto g11_x_xxxyyyz = primBuffer.data(g11off + 108 * idx + 11);

                auto g11_x_xxxyyzz = primBuffer.data(g11off + 108 * idx + 12);

                auto g11_x_xxxyzzz = primBuffer.data(g11off + 108 * idx + 13);

                auto g11_x_xxxzzzz = primBuffer.data(g11off + 108 * idx + 14);

                auto g11_x_xxyyyyy = primBuffer.data(g11off + 108 * idx + 15);

                auto g11_x_xxyyyyz = primBuffer.data(g11off + 108 * idx + 16);

                auto g11_x_xxyyyzz = primBuffer.data(g11off + 108 * idx + 17);

                auto g11_x_xxyyzzz = primBuffer.data(g11off + 108 * idx + 18);

                auto g11_x_xxyzzzz = primBuffer.data(g11off + 108 * idx + 19);

                auto g11_x_xxzzzzz = primBuffer.data(g11off + 108 * idx + 20);

                auto g11_x_xyyyyyy = primBuffer.data(g11off + 108 * idx + 21);

                auto g11_x_xyyyyyz = primBuffer.data(g11off + 108 * idx + 22);

                auto g11_x_xyyyyzz = primBuffer.data(g11off + 108 * idx + 23);

                auto g11_x_xyyyzzz = primBuffer.data(g11off + 108 * idx + 24);

                auto g11_x_xyyzzzz = primBuffer.data(g11off + 108 * idx + 25);

                auto g11_x_xyzzzzz = primBuffer.data(g11off + 108 * idx + 26);

                auto g11_x_xzzzzzz = primBuffer.data(g11off + 108 * idx + 27);

                auto g11_x_yyyyyyy = primBuffer.data(g11off + 108 * idx + 28);

                auto g11_x_yyyyyyz = primBuffer.data(g11off + 108 * idx + 29);

                auto g11_x_yyyyyzz = primBuffer.data(g11off + 108 * idx + 30);

                auto g11_x_yyyyzzz = primBuffer.data(g11off + 108 * idx + 31);

                auto g11_x_yyyzzzz = primBuffer.data(g11off + 108 * idx + 32);

                auto g11_x_yyzzzzz = primBuffer.data(g11off + 108 * idx + 33);

                auto g11_x_yzzzzzz = primBuffer.data(g11off + 108 * idx + 34);

                auto g11_x_zzzzzzz = primBuffer.data(g11off + 108 * idx + 35);

                auto g11_y_xxxxxxx = primBuffer.data(g11off + 108 * idx + 36);

                auto g11_y_xxxxxxy = primBuffer.data(g11off + 108 * idx + 37);

                auto g11_y_xxxxxxz = primBuffer.data(g11off + 108 * idx + 38);

                auto g11_y_xxxxxyy = primBuffer.data(g11off + 108 * idx + 39);

                auto g11_y_xxxxxyz = primBuffer.data(g11off + 108 * idx + 40);

                auto g11_y_xxxxxzz = primBuffer.data(g11off + 108 * idx + 41);

                auto g11_y_xxxxyyy = primBuffer.data(g11off + 108 * idx + 42);

                auto g11_y_xxxxyyz = primBuffer.data(g11off + 108 * idx + 43);

                auto g11_y_xxxxyzz = primBuffer.data(g11off + 108 * idx + 44);

                auto g11_y_xxxxzzz = primBuffer.data(g11off + 108 * idx + 45);

                auto g11_y_xxxyyyy = primBuffer.data(g11off + 108 * idx + 46);

                auto g11_y_xxxyyyz = primBuffer.data(g11off + 108 * idx + 47);

                auto g11_y_xxxyyzz = primBuffer.data(g11off + 108 * idx + 48);

                auto g11_y_xxxyzzz = primBuffer.data(g11off + 108 * idx + 49);

                auto g11_y_xxxzzzz = primBuffer.data(g11off + 108 * idx + 50);

                auto g11_y_xxyyyyy = primBuffer.data(g11off + 108 * idx + 51);

                auto g11_y_xxyyyyz = primBuffer.data(g11off + 108 * idx + 52);

                auto g11_y_xxyyyzz = primBuffer.data(g11off + 108 * idx + 53);

                auto g11_y_xxyyzzz = primBuffer.data(g11off + 108 * idx + 54);

                auto g11_y_xxyzzzz = primBuffer.data(g11off + 108 * idx + 55);

                auto g11_y_xxzzzzz = primBuffer.data(g11off + 108 * idx + 56);

                auto g11_y_xyyyyyy = primBuffer.data(g11off + 108 * idx + 57);

                auto g11_y_xyyyyyz = primBuffer.data(g11off + 108 * idx + 58);

                auto g11_y_xyyyyzz = primBuffer.data(g11off + 108 * idx + 59);

                auto g11_y_xyyyzzz = primBuffer.data(g11off + 108 * idx + 60);

                auto g11_y_xyyzzzz = primBuffer.data(g11off + 108 * idx + 61);

                auto g11_y_xyzzzzz = primBuffer.data(g11off + 108 * idx + 62);

                auto g11_y_xzzzzzz = primBuffer.data(g11off + 108 * idx + 63);

                auto g11_y_yyyyyyy = primBuffer.data(g11off + 108 * idx + 64);

                auto g11_y_yyyyyyz = primBuffer.data(g11off + 108 * idx + 65);

                auto g11_y_yyyyyzz = primBuffer.data(g11off + 108 * idx + 66);

                auto g11_y_yyyyzzz = primBuffer.data(g11off + 108 * idx + 67);

                auto g11_y_yyyzzzz = primBuffer.data(g11off + 108 * idx + 68);

                auto g11_y_yyzzzzz = primBuffer.data(g11off + 108 * idx + 69);

                auto g11_y_yzzzzzz = primBuffer.data(g11off + 108 * idx + 70);

                auto g11_y_zzzzzzz = primBuffer.data(g11off + 108 * idx + 71);

                auto g11_z_xxxxxxx = primBuffer.data(g11off + 108 * idx + 72);

                auto g11_z_xxxxxxy = primBuffer.data(g11off + 108 * idx + 73);

                auto g11_z_xxxxxxz = primBuffer.data(g11off + 108 * idx + 74);

                auto g11_z_xxxxxyy = primBuffer.data(g11off + 108 * idx + 75);

                auto g11_z_xxxxxyz = primBuffer.data(g11off + 108 * idx + 76);

                auto g11_z_xxxxxzz = primBuffer.data(g11off + 108 * idx + 77);

                auto g11_z_xxxxyyy = primBuffer.data(g11off + 108 * idx + 78);

                auto g11_z_xxxxyyz = primBuffer.data(g11off + 108 * idx + 79);

                auto g11_z_xxxxyzz = primBuffer.data(g11off + 108 * idx + 80);

                auto g11_z_xxxxzzz = primBuffer.data(g11off + 108 * idx + 81);

                auto g11_z_xxxyyyy = primBuffer.data(g11off + 108 * idx + 82);

                auto g11_z_xxxyyyz = primBuffer.data(g11off + 108 * idx + 83);

                auto g11_z_xxxyyzz = primBuffer.data(g11off + 108 * idx + 84);

                auto g11_z_xxxyzzz = primBuffer.data(g11off + 108 * idx + 85);

                auto g11_z_xxxzzzz = primBuffer.data(g11off + 108 * idx + 86);

                auto g11_z_xxyyyyy = primBuffer.data(g11off + 108 * idx + 87);

                auto g11_z_xxyyyyz = primBuffer.data(g11off + 108 * idx + 88);

                auto g11_z_xxyyyzz = primBuffer.data(g11off + 108 * idx + 89);

                auto g11_z_xxyyzzz = primBuffer.data(g11off + 108 * idx + 90);

                auto g11_z_xxyzzzz = primBuffer.data(g11off + 108 * idx + 91);

                auto g11_z_xxzzzzz = primBuffer.data(g11off + 108 * idx + 92);

                auto g11_z_xyyyyyy = primBuffer.data(g11off + 108 * idx + 93);

                auto g11_z_xyyyyyz = primBuffer.data(g11off + 108 * idx + 94);

                auto g11_z_xyyyyzz = primBuffer.data(g11off + 108 * idx + 95);

                auto g11_z_xyyyzzz = primBuffer.data(g11off + 108 * idx + 96);

                auto g11_z_xyyzzzz = primBuffer.data(g11off + 108 * idx + 97);

                auto g11_z_xyzzzzz = primBuffer.data(g11off + 108 * idx + 98);

                auto g11_z_xzzzzzz = primBuffer.data(g11off + 108 * idx + 99);

                auto g11_z_yyyyyyy = primBuffer.data(g11off + 108 * idx + 100);

                auto g11_z_yyyyyyz = primBuffer.data(g11off + 108 * idx + 101);

                auto g11_z_yyyyyzz = primBuffer.data(g11off + 108 * idx + 102);

                auto g11_z_yyyyzzz = primBuffer.data(g11off + 108 * idx + 103);

                auto g11_z_yyyzzzz = primBuffer.data(g11off + 108 * idx + 104);

                auto g11_z_yyzzzzz = primBuffer.data(g11off + 108 * idx + 105);

                auto g11_z_yzzzzzz = primBuffer.data(g11off + 108 * idx + 106);

                auto g11_z_zzzzzzz = primBuffer.data(g11off + 108 * idx + 107);

                // set up pointers to (D|g(r,r')|SK)^(m) integrals

                auto g_xx_xxxxxxx = primBuffer.data(goff + 216 * idx);

                auto g_xx_xxxxxxy = primBuffer.data(goff + 216 * idx + 1);

                auto g_xx_xxxxxxz = primBuffer.data(goff + 216 * idx + 2);

                auto g_xx_xxxxxyy = primBuffer.data(goff + 216 * idx + 3);

                auto g_xx_xxxxxyz = primBuffer.data(goff + 216 * idx + 4);

                auto g_xx_xxxxxzz = primBuffer.data(goff + 216 * idx + 5);

                auto g_xx_xxxxyyy = primBuffer.data(goff + 216 * idx + 6);

                auto g_xx_xxxxyyz = primBuffer.data(goff + 216 * idx + 7);

                auto g_xx_xxxxyzz = primBuffer.data(goff + 216 * idx + 8);

                auto g_xx_xxxxzzz = primBuffer.data(goff + 216 * idx + 9);

                auto g_xx_xxxyyyy = primBuffer.data(goff + 216 * idx + 10);

                auto g_xx_xxxyyyz = primBuffer.data(goff + 216 * idx + 11);

                auto g_xx_xxxyyzz = primBuffer.data(goff + 216 * idx + 12);

                auto g_xx_xxxyzzz = primBuffer.data(goff + 216 * idx + 13);

                auto g_xx_xxxzzzz = primBuffer.data(goff + 216 * idx + 14);

                auto g_xx_xxyyyyy = primBuffer.data(goff + 216 * idx + 15);

                auto g_xx_xxyyyyz = primBuffer.data(goff + 216 * idx + 16);

                auto g_xx_xxyyyzz = primBuffer.data(goff + 216 * idx + 17);

                auto g_xx_xxyyzzz = primBuffer.data(goff + 216 * idx + 18);

                auto g_xx_xxyzzzz = primBuffer.data(goff + 216 * idx + 19);

                auto g_xx_xxzzzzz = primBuffer.data(goff + 216 * idx + 20);

                auto g_xx_xyyyyyy = primBuffer.data(goff + 216 * idx + 21);

                auto g_xx_xyyyyyz = primBuffer.data(goff + 216 * idx + 22);

                auto g_xx_xyyyyzz = primBuffer.data(goff + 216 * idx + 23);

                auto g_xx_xyyyzzz = primBuffer.data(goff + 216 * idx + 24);

                auto g_xx_xyyzzzz = primBuffer.data(goff + 216 * idx + 25);

                auto g_xx_xyzzzzz = primBuffer.data(goff + 216 * idx + 26);

                auto g_xx_xzzzzzz = primBuffer.data(goff + 216 * idx + 27);

                auto g_xx_yyyyyyy = primBuffer.data(goff + 216 * idx + 28);

                auto g_xx_yyyyyyz = primBuffer.data(goff + 216 * idx + 29);

                auto g_xx_yyyyyzz = primBuffer.data(goff + 216 * idx + 30);

                auto g_xx_yyyyzzz = primBuffer.data(goff + 216 * idx + 31);

                auto g_xx_yyyzzzz = primBuffer.data(goff + 216 * idx + 32);

                auto g_xx_yyzzzzz = primBuffer.data(goff + 216 * idx + 33);

                auto g_xx_yzzzzzz = primBuffer.data(goff + 216 * idx + 34);

                auto g_xx_zzzzzzz = primBuffer.data(goff + 216 * idx + 35);

                auto g_xy_xxxxxxx = primBuffer.data(goff + 216 * idx + 36);

                auto g_xy_xxxxxxy = primBuffer.data(goff + 216 * idx + 37);

                auto g_xy_xxxxxxz = primBuffer.data(goff + 216 * idx + 38);

                auto g_xy_xxxxxyy = primBuffer.data(goff + 216 * idx + 39);

                auto g_xy_xxxxxyz = primBuffer.data(goff + 216 * idx + 40);

                auto g_xy_xxxxxzz = primBuffer.data(goff + 216 * idx + 41);

                auto g_xy_xxxxyyy = primBuffer.data(goff + 216 * idx + 42);

                auto g_xy_xxxxyyz = primBuffer.data(goff + 216 * idx + 43);

                auto g_xy_xxxxyzz = primBuffer.data(goff + 216 * idx + 44);

                auto g_xy_xxxxzzz = primBuffer.data(goff + 216 * idx + 45);

                auto g_xy_xxxyyyy = primBuffer.data(goff + 216 * idx + 46);

                auto g_xy_xxxyyyz = primBuffer.data(goff + 216 * idx + 47);

                auto g_xy_xxxyyzz = primBuffer.data(goff + 216 * idx + 48);

                auto g_xy_xxxyzzz = primBuffer.data(goff + 216 * idx + 49);

                auto g_xy_xxxzzzz = primBuffer.data(goff + 216 * idx + 50);

                auto g_xy_xxyyyyy = primBuffer.data(goff + 216 * idx + 51);

                auto g_xy_xxyyyyz = primBuffer.data(goff + 216 * idx + 52);

                auto g_xy_xxyyyzz = primBuffer.data(goff + 216 * idx + 53);

                auto g_xy_xxyyzzz = primBuffer.data(goff + 216 * idx + 54);

                auto g_xy_xxyzzzz = primBuffer.data(goff + 216 * idx + 55);

                auto g_xy_xxzzzzz = primBuffer.data(goff + 216 * idx + 56);

                auto g_xy_xyyyyyy = primBuffer.data(goff + 216 * idx + 57);

                auto g_xy_xyyyyyz = primBuffer.data(goff + 216 * idx + 58);

                auto g_xy_xyyyyzz = primBuffer.data(goff + 216 * idx + 59);

                auto g_xy_xyyyzzz = primBuffer.data(goff + 216 * idx + 60);

                auto g_xy_xyyzzzz = primBuffer.data(goff + 216 * idx + 61);

                auto g_xy_xyzzzzz = primBuffer.data(goff + 216 * idx + 62);

                auto g_xy_xzzzzzz = primBuffer.data(goff + 216 * idx + 63);

                auto g_xy_yyyyyyy = primBuffer.data(goff + 216 * idx + 64);

                auto g_xy_yyyyyyz = primBuffer.data(goff + 216 * idx + 65);

                auto g_xy_yyyyyzz = primBuffer.data(goff + 216 * idx + 66);

                auto g_xy_yyyyzzz = primBuffer.data(goff + 216 * idx + 67);

                auto g_xy_yyyzzzz = primBuffer.data(goff + 216 * idx + 68);

                auto g_xy_yyzzzzz = primBuffer.data(goff + 216 * idx + 69);

                auto g_xy_yzzzzzz = primBuffer.data(goff + 216 * idx + 70);

                auto g_xy_zzzzzzz = primBuffer.data(goff + 216 * idx + 71);

                auto g_xz_xxxxxxx = primBuffer.data(goff + 216 * idx + 72);

                auto g_xz_xxxxxxy = primBuffer.data(goff + 216 * idx + 73);

                auto g_xz_xxxxxxz = primBuffer.data(goff + 216 * idx + 74);

                auto g_xz_xxxxxyy = primBuffer.data(goff + 216 * idx + 75);

                auto g_xz_xxxxxyz = primBuffer.data(goff + 216 * idx + 76);

                auto g_xz_xxxxxzz = primBuffer.data(goff + 216 * idx + 77);

                auto g_xz_xxxxyyy = primBuffer.data(goff + 216 * idx + 78);

                auto g_xz_xxxxyyz = primBuffer.data(goff + 216 * idx + 79);

                auto g_xz_xxxxyzz = primBuffer.data(goff + 216 * idx + 80);

                auto g_xz_xxxxzzz = primBuffer.data(goff + 216 * idx + 81);

                auto g_xz_xxxyyyy = primBuffer.data(goff + 216 * idx + 82);

                auto g_xz_xxxyyyz = primBuffer.data(goff + 216 * idx + 83);

                auto g_xz_xxxyyzz = primBuffer.data(goff + 216 * idx + 84);

                auto g_xz_xxxyzzz = primBuffer.data(goff + 216 * idx + 85);

                auto g_xz_xxxzzzz = primBuffer.data(goff + 216 * idx + 86);

                auto g_xz_xxyyyyy = primBuffer.data(goff + 216 * idx + 87);

                auto g_xz_xxyyyyz = primBuffer.data(goff + 216 * idx + 88);

                auto g_xz_xxyyyzz = primBuffer.data(goff + 216 * idx + 89);

                auto g_xz_xxyyzzz = primBuffer.data(goff + 216 * idx + 90);

                auto g_xz_xxyzzzz = primBuffer.data(goff + 216 * idx + 91);

                auto g_xz_xxzzzzz = primBuffer.data(goff + 216 * idx + 92);

                auto g_xz_xyyyyyy = primBuffer.data(goff + 216 * idx + 93);

                auto g_xz_xyyyyyz = primBuffer.data(goff + 216 * idx + 94);

                auto g_xz_xyyyyzz = primBuffer.data(goff + 216 * idx + 95);

                auto g_xz_xyyyzzz = primBuffer.data(goff + 216 * idx + 96);

                auto g_xz_xyyzzzz = primBuffer.data(goff + 216 * idx + 97);

                auto g_xz_xyzzzzz = primBuffer.data(goff + 216 * idx + 98);

                auto g_xz_xzzzzzz = primBuffer.data(goff + 216 * idx + 99);

                auto g_xz_yyyyyyy = primBuffer.data(goff + 216 * idx + 100);

                auto g_xz_yyyyyyz = primBuffer.data(goff + 216 * idx + 101);

                auto g_xz_yyyyyzz = primBuffer.data(goff + 216 * idx + 102);

                auto g_xz_yyyyzzz = primBuffer.data(goff + 216 * idx + 103);

                auto g_xz_yyyzzzz = primBuffer.data(goff + 216 * idx + 104);

                auto g_xz_yyzzzzz = primBuffer.data(goff + 216 * idx + 105);

                auto g_xz_yzzzzzz = primBuffer.data(goff + 216 * idx + 106);

                auto g_xz_zzzzzzz = primBuffer.data(goff + 216 * idx + 107);

                auto g_yy_xxxxxxx = primBuffer.data(goff + 216 * idx + 108);

                auto g_yy_xxxxxxy = primBuffer.data(goff + 216 * idx + 109);

                auto g_yy_xxxxxxz = primBuffer.data(goff + 216 * idx + 110);

                auto g_yy_xxxxxyy = primBuffer.data(goff + 216 * idx + 111);

                auto g_yy_xxxxxyz = primBuffer.data(goff + 216 * idx + 112);

                auto g_yy_xxxxxzz = primBuffer.data(goff + 216 * idx + 113);

                auto g_yy_xxxxyyy = primBuffer.data(goff + 216 * idx + 114);

                auto g_yy_xxxxyyz = primBuffer.data(goff + 216 * idx + 115);

                auto g_yy_xxxxyzz = primBuffer.data(goff + 216 * idx + 116);

                auto g_yy_xxxxzzz = primBuffer.data(goff + 216 * idx + 117);

                auto g_yy_xxxyyyy = primBuffer.data(goff + 216 * idx + 118);

                auto g_yy_xxxyyyz = primBuffer.data(goff + 216 * idx + 119);

                auto g_yy_xxxyyzz = primBuffer.data(goff + 216 * idx + 120);

                auto g_yy_xxxyzzz = primBuffer.data(goff + 216 * idx + 121);

                auto g_yy_xxxzzzz = primBuffer.data(goff + 216 * idx + 122);

                auto g_yy_xxyyyyy = primBuffer.data(goff + 216 * idx + 123);

                auto g_yy_xxyyyyz = primBuffer.data(goff + 216 * idx + 124);

                auto g_yy_xxyyyzz = primBuffer.data(goff + 216 * idx + 125);

                auto g_yy_xxyyzzz = primBuffer.data(goff + 216 * idx + 126);

                auto g_yy_xxyzzzz = primBuffer.data(goff + 216 * idx + 127);

                auto g_yy_xxzzzzz = primBuffer.data(goff + 216 * idx + 128);

                auto g_yy_xyyyyyy = primBuffer.data(goff + 216 * idx + 129);

                auto g_yy_xyyyyyz = primBuffer.data(goff + 216 * idx + 130);

                auto g_yy_xyyyyzz = primBuffer.data(goff + 216 * idx + 131);

                auto g_yy_xyyyzzz = primBuffer.data(goff + 216 * idx + 132);

                auto g_yy_xyyzzzz = primBuffer.data(goff + 216 * idx + 133);

                auto g_yy_xyzzzzz = primBuffer.data(goff + 216 * idx + 134);

                auto g_yy_xzzzzzz = primBuffer.data(goff + 216 * idx + 135);

                auto g_yy_yyyyyyy = primBuffer.data(goff + 216 * idx + 136);

                auto g_yy_yyyyyyz = primBuffer.data(goff + 216 * idx + 137);

                auto g_yy_yyyyyzz = primBuffer.data(goff + 216 * idx + 138);

                auto g_yy_yyyyzzz = primBuffer.data(goff + 216 * idx + 139);

                auto g_yy_yyyzzzz = primBuffer.data(goff + 216 * idx + 140);

                auto g_yy_yyzzzzz = primBuffer.data(goff + 216 * idx + 141);

                auto g_yy_yzzzzzz = primBuffer.data(goff + 216 * idx + 142);

                auto g_yy_zzzzzzz = primBuffer.data(goff + 216 * idx + 143);

                auto g_yz_xxxxxxx = primBuffer.data(goff + 216 * idx + 144);

                auto g_yz_xxxxxxy = primBuffer.data(goff + 216 * idx + 145);

                auto g_yz_xxxxxxz = primBuffer.data(goff + 216 * idx + 146);

                auto g_yz_xxxxxyy = primBuffer.data(goff + 216 * idx + 147);

                auto g_yz_xxxxxyz = primBuffer.data(goff + 216 * idx + 148);

                auto g_yz_xxxxxzz = primBuffer.data(goff + 216 * idx + 149);

                auto g_yz_xxxxyyy = primBuffer.data(goff + 216 * idx + 150);

                auto g_yz_xxxxyyz = primBuffer.data(goff + 216 * idx + 151);

                auto g_yz_xxxxyzz = primBuffer.data(goff + 216 * idx + 152);

                auto g_yz_xxxxzzz = primBuffer.data(goff + 216 * idx + 153);

                auto g_yz_xxxyyyy = primBuffer.data(goff + 216 * idx + 154);

                auto g_yz_xxxyyyz = primBuffer.data(goff + 216 * idx + 155);

                auto g_yz_xxxyyzz = primBuffer.data(goff + 216 * idx + 156);

                auto g_yz_xxxyzzz = primBuffer.data(goff + 216 * idx + 157);

                auto g_yz_xxxzzzz = primBuffer.data(goff + 216 * idx + 158);

                auto g_yz_xxyyyyy = primBuffer.data(goff + 216 * idx + 159);

                auto g_yz_xxyyyyz = primBuffer.data(goff + 216 * idx + 160);

                auto g_yz_xxyyyzz = primBuffer.data(goff + 216 * idx + 161);

                auto g_yz_xxyyzzz = primBuffer.data(goff + 216 * idx + 162);

                auto g_yz_xxyzzzz = primBuffer.data(goff + 216 * idx + 163);

                auto g_yz_xxzzzzz = primBuffer.data(goff + 216 * idx + 164);

                auto g_yz_xyyyyyy = primBuffer.data(goff + 216 * idx + 165);

                auto g_yz_xyyyyyz = primBuffer.data(goff + 216 * idx + 166);

                auto g_yz_xyyyyzz = primBuffer.data(goff + 216 * idx + 167);

                auto g_yz_xyyyzzz = primBuffer.data(goff + 216 * idx + 168);

                auto g_yz_xyyzzzz = primBuffer.data(goff + 216 * idx + 169);

                auto g_yz_xyzzzzz = primBuffer.data(goff + 216 * idx + 170);

                auto g_yz_xzzzzzz = primBuffer.data(goff + 216 * idx + 171);

                auto g_yz_yyyyyyy = primBuffer.data(goff + 216 * idx + 172);

                auto g_yz_yyyyyyz = primBuffer.data(goff + 216 * idx + 173);

                auto g_yz_yyyyyzz = primBuffer.data(goff + 216 * idx + 174);

                auto g_yz_yyyyzzz = primBuffer.data(goff + 216 * idx + 175);

                auto g_yz_yyyzzzz = primBuffer.data(goff + 216 * idx + 176);

                auto g_yz_yyzzzzz = primBuffer.data(goff + 216 * idx + 177);

                auto g_yz_yzzzzzz = primBuffer.data(goff + 216 * idx + 178);

                auto g_yz_zzzzzzz = primBuffer.data(goff + 216 * idx + 179);

                auto g_zz_xxxxxxx = primBuffer.data(goff + 216 * idx + 180);

                auto g_zz_xxxxxxy = primBuffer.data(goff + 216 * idx + 181);

                auto g_zz_xxxxxxz = primBuffer.data(goff + 216 * idx + 182);

                auto g_zz_xxxxxyy = primBuffer.data(goff + 216 * idx + 183);

                auto g_zz_xxxxxyz = primBuffer.data(goff + 216 * idx + 184);

                auto g_zz_xxxxxzz = primBuffer.data(goff + 216 * idx + 185);

                auto g_zz_xxxxyyy = primBuffer.data(goff + 216 * idx + 186);

                auto g_zz_xxxxyyz = primBuffer.data(goff + 216 * idx + 187);

                auto g_zz_xxxxyzz = primBuffer.data(goff + 216 * idx + 188);

                auto g_zz_xxxxzzz = primBuffer.data(goff + 216 * idx + 189);

                auto g_zz_xxxyyyy = primBuffer.data(goff + 216 * idx + 190);

                auto g_zz_xxxyyyz = primBuffer.data(goff + 216 * idx + 191);

                auto g_zz_xxxyyzz = primBuffer.data(goff + 216 * idx + 192);

                auto g_zz_xxxyzzz = primBuffer.data(goff + 216 * idx + 193);

                auto g_zz_xxxzzzz = primBuffer.data(goff + 216 * idx + 194);

                auto g_zz_xxyyyyy = primBuffer.data(goff + 216 * idx + 195);

                auto g_zz_xxyyyyz = primBuffer.data(goff + 216 * idx + 196);

                auto g_zz_xxyyyzz = primBuffer.data(goff + 216 * idx + 197);

                auto g_zz_xxyyzzz = primBuffer.data(goff + 216 * idx + 198);

                auto g_zz_xxyzzzz = primBuffer.data(goff + 216 * idx + 199);

                auto g_zz_xxzzzzz = primBuffer.data(goff + 216 * idx + 200);

                auto g_zz_xyyyyyy = primBuffer.data(goff + 216 * idx + 201);

                auto g_zz_xyyyyyz = primBuffer.data(goff + 216 * idx + 202);

                auto g_zz_xyyyyzz = primBuffer.data(goff + 216 * idx + 203);

                auto g_zz_xyyyzzz = primBuffer.data(goff + 216 * idx + 204);

                auto g_zz_xyyzzzz = primBuffer.data(goff + 216 * idx + 205);

                auto g_zz_xyzzzzz = primBuffer.data(goff + 216 * idx + 206);

                auto g_zz_xzzzzzz = primBuffer.data(goff + 216 * idx + 207);

                auto g_zz_yyyyyyy = primBuffer.data(goff + 216 * idx + 208);

                auto g_zz_yyyyyyz = primBuffer.data(goff + 216 * idx + 209);

                auto g_zz_yyyyyzz = primBuffer.data(goff + 216 * idx + 210);

                auto g_zz_yyyyzzz = primBuffer.data(goff + 216 * idx + 211);

                auto g_zz_yyyzzzz = primBuffer.data(goff + 216 * idx + 212);

                auto g_zz_yyzzzzz = primBuffer.data(goff + 216 * idx + 213);

                auto g_zz_yzzzzzz = primBuffer.data(goff + 216 * idx + 214);

                auto g_zz_zzzzzzz = primBuffer.data(goff + 216 * idx + 215);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xxxxxx,\
                                         gk_x_xxxxxy, gk_x_xxxxxz, gk_x_xxxxyy,\
                                         gk_x_xxxxyz, gk_x_xxxxzz, gk_x_xxxyyy,\
                                         gk_x_xxxyyz, gk_x_xxxyzz, gk_x_xxxzzz,\
                                         gk_x_xxyyyy, gk_x_xxyyyz, gk_x_xxyyzz,\
                                         gk_x_xxyzzz, gk_x_xxzzzz, gk_x_xyyyyy,\
                                         gk_x_xyyyyz, gk_x_xyyyzz, gk_x_xyyzzz,\
                                         gk_x_xyzzzz, gk_x_xzzzzz, gk_x_yyyyyy,\
                                         gk_x_yyyyyz, gk_x_yyyyzz, gk_x_yyyzzz,\
                                         gk_x_yyzzzz, gk_x_yzzzzz, gk_x_zzzzzz,\
                                         gk_y_xxxxxx, gk_y_xxxxxy, gk_y_xxxxxz,\
                                         gk_y_xxxxyy, gk_y_xxxxyz, gk_y_xxxxzz,\
                                         gk_y_xxxyyy, gk_y_xxxyyz, gk_y_xxxyzz,\
                                         gk_y_xxxzzz, gk_y_xxyyyy, gk_y_xxyyyz,\
                                         gk_y_xxyyzz, gk_y_xxyzzz, gk_y_xxzzzz,\
                                         gk_y_xyyyyy, gk_y_xyyyyz, gk_y_xyyyzz,\
                                         gk_y_xyyzzz, gk_y_xyzzzz, gk_y_xzzzzz,\
                                         gk_y_yyyyyy, gk_y_yyyyyz, gk_y_yyyyzz,\
                                         gk_y_yyyzzz, gk_y_yyzzzz, gk_y_yzzzzz,\
                                         gk_y_zzzzzz, gk_z_xxxxxx, gk_z_xxxxxy,\
                                         gk_z_xxxxxz, gk_z_xxxxyy, gk_z_xxxxyz,\
                                         gk_z_xxxxzz, gk_z_xxxyyy, gk_z_xxxyyz,\
                                         gk_z_xxxyzz, gk_z_xxxzzz, gk_z_xxyyyy,\
                                         gk_z_xxyyyz, gk_z_xxyyzz, gk_z_xxyzzz,\
                                         gk_z_xxzzzz, gk_z_xyyyyy, gk_z_xyyyyz,\
                                         gk_z_xyyyzz, gk_z_xyyzzz, gk_z_xyzzzz,\
                                         gk_z_xzzzzz, gk_z_yyyyyy, gk_z_yyyyyz,\
                                         gk_z_yyyyzz, gk_z_yyyzzz, gk_z_yyzzzz,\
                                         gk_z_yzzzzz, gk_z_zzzzzz, g20_0_xxxxxxx,\
                                         g20_0_xxxxxxy, g20_0_xxxxxxz, g20_0_xxxxxyy,\
                                         g20_0_xxxxxyz, g20_0_xxxxxzz, g20_0_xxxxyyy,\
                                         g20_0_xxxxyyz, g20_0_xxxxyzz, g20_0_xxxxzzz,\
                                         g20_0_xxxyyyy, g20_0_xxxyyyz, g20_0_xxxyyzz,\
                                         g20_0_xxxyzzz, g20_0_xxxzzzz, g20_0_xxyyyyy,\
                                         g20_0_xxyyyyz, g20_0_xxyyyzz, g20_0_xxyyzzz,\
                                         g20_0_xxyzzzz, g20_0_xxzzzzz, g20_0_xyyyyyy,\
                                         g20_0_xyyyyyz, g20_0_xyyyyzz, g20_0_xyyyzzz,\
                                         g20_0_xyyzzzz, g20_0_xyzzzzz, g20_0_xzzzzzz,\
                                         g20_0_yyyyyyy, g20_0_yyyyyyz, g20_0_yyyyyzz,\
                                         g20_0_yyyyzzz, g20_0_yyyzzzz, g20_0_yyzzzzz,\
                                         g20_0_yzzzzzz, g20_0_zzzzzzz, g21_0_xxxxxxx,\
                                         g21_0_xxxxxxy, g21_0_xxxxxxz, g21_0_xxxxxyy,\
                                         g21_0_xxxxxyz, g21_0_xxxxxzz, g21_0_xxxxyyy,\
                                         g21_0_xxxxyyz, g21_0_xxxxyzz, g21_0_xxxxzzz,\
                                         g21_0_xxxyyyy, g21_0_xxxyyyz, g21_0_xxxyyzz,\
                                         g21_0_xxxyzzz, g21_0_xxxzzzz, g21_0_xxyyyyy,\
                                         g21_0_xxyyyyz, g21_0_xxyyyzz, g21_0_xxyyzzz,\
                                         g21_0_xxyzzzz, g21_0_xxzzzzz, g21_0_xyyyyyy,\
                                         g21_0_xyyyyyz, g21_0_xyyyyzz, g21_0_xyyyzzz,\
                                         g21_0_xyyzzzz, g21_0_xyzzzzz, g21_0_xzzzzzz,\
                                         g21_0_yyyyyyy, g21_0_yyyyyyz, g21_0_yyyyyzz,\
                                         g21_0_yyyyzzz, g21_0_yyyzzzz, g21_0_yyzzzzz,\
                                         g21_0_yzzzzzz, g21_0_zzzzzzz, g11_x_xxxxxxx,\
                                         g11_x_xxxxxxy, g11_x_xxxxxxz, g11_x_xxxxxyy,\
                                         g11_x_xxxxxyz, g11_x_xxxxxzz, g11_x_xxxxyyy,\
                                         g11_x_xxxxyyz, g11_x_xxxxyzz, g11_x_xxxxzzz,\
                                         g11_x_xxxyyyy, g11_x_xxxyyyz, g11_x_xxxyyzz,\
                                         g11_x_xxxyzzz, g11_x_xxxzzzz, g11_x_xxyyyyy,\
                                         g11_x_xxyyyyz, g11_x_xxyyyzz, g11_x_xxyyzzz,\
                                         g11_x_xxyzzzz, g11_x_xxzzzzz, g11_x_xyyyyyy,\
                                         g11_x_xyyyyyz, g11_x_xyyyyzz, g11_x_xyyyzzz,\
                                         g11_x_xyyzzzz, g11_x_xyzzzzz, g11_x_xzzzzzz,\
                                         g11_x_yyyyyyy, g11_x_yyyyyyz, g11_x_yyyyyzz,\
                                         g11_x_yyyyzzz, g11_x_yyyzzzz, g11_x_yyzzzzz,\
                                         g11_x_yzzzzzz, g11_x_zzzzzzz, g11_y_xxxxxxx,\
                                         g11_y_xxxxxxy, g11_y_xxxxxxz, g11_y_xxxxxyy,\
                                         g11_y_xxxxxyz, g11_y_xxxxxzz, g11_y_xxxxyyy,\
                                         g11_y_xxxxyyz, g11_y_xxxxyzz, g11_y_xxxxzzz,\
                                         g11_y_xxxyyyy, g11_y_xxxyyyz, g11_y_xxxyyzz,\
                                         g11_y_xxxyzzz, g11_y_xxxzzzz, g11_y_xxyyyyy,\
                                         g11_y_xxyyyyz, g11_y_xxyyyzz, g11_y_xxyyzzz,\
                                         g11_y_xxyzzzz, g11_y_xxzzzzz, g11_y_xyyyyyy,\
                                         g11_y_xyyyyyz, g11_y_xyyyyzz, g11_y_xyyyzzz,\
                                         g11_y_xyyzzzz, g11_y_xyzzzzz, g11_y_xzzzzzz,\
                                         g11_y_yyyyyyy, g11_y_yyyyyyz, g11_y_yyyyyzz,\
                                         g11_y_yyyyzzz, g11_y_yyyzzzz, g11_y_yyzzzzz,\
                                         g11_y_yzzzzzz, g11_y_zzzzzzz, g11_z_xxxxxxx,\
                                         g11_z_xxxxxxy, g11_z_xxxxxxz, g11_z_xxxxxyy,\
                                         g11_z_xxxxxyz, g11_z_xxxxxzz, g11_z_xxxxyyy,\
                                         g11_z_xxxxyyz, g11_z_xxxxyzz, g11_z_xxxxzzz,\
                                         g11_z_xxxyyyy, g11_z_xxxyyyz, g11_z_xxxyyzz,\
                                         g11_z_xxxyzzz, g11_z_xxxzzzz, g11_z_xxyyyyy,\
                                         g11_z_xxyyyyz, g11_z_xxyyyzz, g11_z_xxyyzzz,\
                                         g11_z_xxyzzzz, g11_z_xxzzzzz, g11_z_xyyyyyy,\
                                         g11_z_xyyyyyz, g11_z_xyyyyzz, g11_z_xyyyzzz,\
                                         g11_z_xyyzzzz, g11_z_xyzzzzz, g11_z_xzzzzzz,\
                                         g11_z_yyyyyyy, g11_z_yyyyyyz, g11_z_yyyyyzz,\
                                         g11_z_yyyyzzz, g11_z_yyyzzzz, g11_z_yyzzzzz,\
                                         g11_z_yzzzzzz, g11_z_zzzzzzz, g_xx_xxxxxxx,\
                                         g_xx_xxxxxxy, g_xx_xxxxxxz, g_xx_xxxxxyy,\
                                         g_xx_xxxxxyz, g_xx_xxxxxzz, g_xx_xxxxyyy,\
                                         g_xx_xxxxyyz, g_xx_xxxxyzz, g_xx_xxxxzzz,\
                                         g_xx_xxxyyyy, g_xx_xxxyyyz, g_xx_xxxyyzz,\
                                         g_xx_xxxyzzz, g_xx_xxxzzzz, g_xx_xxyyyyy,\
                                         g_xx_xxyyyyz, g_xx_xxyyyzz, g_xx_xxyyzzz,\
                                         g_xx_xxyzzzz, g_xx_xxzzzzz, g_xx_xyyyyyy,\
                                         g_xx_xyyyyyz, g_xx_xyyyyzz, g_xx_xyyyzzz,\
                                         g_xx_xyyzzzz, g_xx_xyzzzzz, g_xx_xzzzzzz,\
                                         g_xx_yyyyyyy, g_xx_yyyyyyz, g_xx_yyyyyzz,\
                                         g_xx_yyyyzzz, g_xx_yyyzzzz, g_xx_yyzzzzz,\
                                         g_xx_yzzzzzz, g_xx_zzzzzzz, g_xy_xxxxxxx,\
                                         g_xy_xxxxxxy, g_xy_xxxxxxz, g_xy_xxxxxyy,\
                                         g_xy_xxxxxyz, g_xy_xxxxxzz, g_xy_xxxxyyy,\
                                         g_xy_xxxxyyz, g_xy_xxxxyzz, g_xy_xxxxzzz,\
                                         g_xy_xxxyyyy, g_xy_xxxyyyz, g_xy_xxxyyzz,\
                                         g_xy_xxxyzzz, g_xy_xxxzzzz, g_xy_xxyyyyy,\
                                         g_xy_xxyyyyz, g_xy_xxyyyzz, g_xy_xxyyzzz,\
                                         g_xy_xxyzzzz, g_xy_xxzzzzz, g_xy_xyyyyyy,\
                                         g_xy_xyyyyyz, g_xy_xyyyyzz, g_xy_xyyyzzz,\
                                         g_xy_xyyzzzz, g_xy_xyzzzzz, g_xy_xzzzzzz,\
                                         g_xy_yyyyyyy, g_xy_yyyyyyz, g_xy_yyyyyzz,\
                                         g_xy_yyyyzzz, g_xy_yyyzzzz, g_xy_yyzzzzz,\
                                         g_xy_yzzzzzz, g_xy_zzzzzzz, g_xz_xxxxxxx,\
                                         g_xz_xxxxxxy, g_xz_xxxxxxz, g_xz_xxxxxyy,\
                                         g_xz_xxxxxyz, g_xz_xxxxxzz, g_xz_xxxxyyy,\
                                         g_xz_xxxxyyz, g_xz_xxxxyzz, g_xz_xxxxzzz,\
                                         g_xz_xxxyyyy, g_xz_xxxyyyz, g_xz_xxxyyzz,\
                                         g_xz_xxxyzzz, g_xz_xxxzzzz, g_xz_xxyyyyy,\
                                         g_xz_xxyyyyz, g_xz_xxyyyzz, g_xz_xxyyzzz,\
                                         g_xz_xxyzzzz, g_xz_xxzzzzz, g_xz_xyyyyyy,\
                                         g_xz_xyyyyyz, g_xz_xyyyyzz, g_xz_xyyyzzz,\
                                         g_xz_xyyzzzz, g_xz_xyzzzzz, g_xz_xzzzzzz,\
                                         g_xz_yyyyyyy, g_xz_yyyyyyz, g_xz_yyyyyzz,\
                                         g_xz_yyyyzzz, g_xz_yyyzzzz, g_xz_yyzzzzz,\
                                         g_xz_yzzzzzz, g_xz_zzzzzzz, g_yy_xxxxxxx,\
                                         g_yy_xxxxxxy, g_yy_xxxxxxz, g_yy_xxxxxyy,\
                                         g_yy_xxxxxyz, g_yy_xxxxxzz, g_yy_xxxxyyy,\
                                         g_yy_xxxxyyz, g_yy_xxxxyzz, g_yy_xxxxzzz,\
                                         g_yy_xxxyyyy, g_yy_xxxyyyz, g_yy_xxxyyzz,\
                                         g_yy_xxxyzzz, g_yy_xxxzzzz, g_yy_xxyyyyy,\
                                         g_yy_xxyyyyz, g_yy_xxyyyzz, g_yy_xxyyzzz,\
                                         g_yy_xxyzzzz, g_yy_xxzzzzz, g_yy_xyyyyyy,\
                                         g_yy_xyyyyyz, g_yy_xyyyyzz, g_yy_xyyyzzz,\
                                         g_yy_xyyzzzz, g_yy_xyzzzzz, g_yy_xzzzzzz,\
                                         g_yy_yyyyyyy, g_yy_yyyyyyz, g_yy_yyyyyzz,\
                                         g_yy_yyyyzzz, g_yy_yyyzzzz, g_yy_yyzzzzz,\
                                         g_yy_yzzzzzz, g_yy_zzzzzzz, g_yz_xxxxxxx,\
                                         g_yz_xxxxxxy, g_yz_xxxxxxz, g_yz_xxxxxyy,\
                                         g_yz_xxxxxyz, g_yz_xxxxxzz, g_yz_xxxxyyy,\
                                         g_yz_xxxxyyz, g_yz_xxxxyzz, g_yz_xxxxzzz,\
                                         g_yz_xxxyyyy, g_yz_xxxyyyz, g_yz_xxxyyzz,\
                                         g_yz_xxxyzzz, g_yz_xxxzzzz, g_yz_xxyyyyy,\
                                         g_yz_xxyyyyz, g_yz_xxyyyzz, g_yz_xxyyzzz,\
                                         g_yz_xxyzzzz, g_yz_xxzzzzz, g_yz_xyyyyyy,\
                                         g_yz_xyyyyyz, g_yz_xyyyyzz, g_yz_xyyyzzz,\
                                         g_yz_xyyzzzz, g_yz_xyzzzzz, g_yz_xzzzzzz,\
                                         g_yz_yyyyyyy, g_yz_yyyyyyz, g_yz_yyyyyzz,\
                                         g_yz_yyyyzzz, g_yz_yyyzzzz, g_yz_yyzzzzz,\
                                         g_yz_yzzzzzz, g_yz_zzzzzzz, g_zz_xxxxxxx,\
                                         g_zz_xxxxxxy, g_zz_xxxxxxz, g_zz_xxxxxyy,\
                                         g_zz_xxxxxyz, g_zz_xxxxxzz, g_zz_xxxxyyy,\
                                         g_zz_xxxxyyz, g_zz_xxxxyzz, g_zz_xxxxzzz,\
                                         g_zz_xxxyyyy, g_zz_xxxyyyz, g_zz_xxxyyzz,\
                                         g_zz_xxxyzzz, g_zz_xxxzzzz, g_zz_xxyyyyy,\
                                         g_zz_xxyyyyz, g_zz_xxyyyzz, g_zz_xxyyzzz,\
                                         g_zz_xxyzzzz, g_zz_xxzzzzz, g_zz_xyyyyyy,\
                                         g_zz_xyyyyyz, g_zz_xyyyyzz, g_zz_xyyyzzz,\
                                         g_zz_xyyzzzz, g_zz_xyzzzzz, g_zz_xzzzzzz,\
                                         g_zz_yyyyyyy, g_zz_yyyyyyz, g_zz_yyyyyzz,\
                                         g_zz_yyyyzzz, g_zz_yyyzzzz, g_zz_yyzzzzz,\
                                         g_zz_yzzzzzz, g_zz_zzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxxxxxx[k] = fr * g11_x_xxxxxxx[k] + f2g * (g20_0_xxxxxxx[k] - fgz * g21_0_xxxxxxx[k]) + 7.0 * f2t * gk_x_xxxxxx[k];

                    g_xx_xxxxxxy[k] = fr * g11_x_xxxxxxy[k] + f2g * (g20_0_xxxxxxy[k] - fgz * g21_0_xxxxxxy[k]) + 6.0 * f2t * gk_x_xxxxxy[k];

                    g_xx_xxxxxxz[k] = fr * g11_x_xxxxxxz[k] + f2g * (g20_0_xxxxxxz[k] - fgz * g21_0_xxxxxxz[k]) + 6.0 * f2t * gk_x_xxxxxz[k];

                    g_xx_xxxxxyy[k] = fr * g11_x_xxxxxyy[k] + f2g * (g20_0_xxxxxyy[k] - fgz * g21_0_xxxxxyy[k]) + 5.0 * f2t * gk_x_xxxxyy[k];

                    g_xx_xxxxxyz[k] = fr * g11_x_xxxxxyz[k] + f2g * (g20_0_xxxxxyz[k] - fgz * g21_0_xxxxxyz[k]) + 5.0 * f2t * gk_x_xxxxyz[k];

                    g_xx_xxxxxzz[k] = fr * g11_x_xxxxxzz[k] + f2g * (g20_0_xxxxxzz[k] - fgz * g21_0_xxxxxzz[k]) + 5.0 * f2t * gk_x_xxxxzz[k];

                    g_xx_xxxxyyy[k] = fr * g11_x_xxxxyyy[k] + f2g * (g20_0_xxxxyyy[k] - fgz * g21_0_xxxxyyy[k]) + 4.0 * f2t * gk_x_xxxyyy[k];

                    g_xx_xxxxyyz[k] = fr * g11_x_xxxxyyz[k] + f2g * (g20_0_xxxxyyz[k] - fgz * g21_0_xxxxyyz[k]) + 4.0 * f2t * gk_x_xxxyyz[k];

                    g_xx_xxxxyzz[k] = fr * g11_x_xxxxyzz[k] + f2g * (g20_0_xxxxyzz[k] - fgz * g21_0_xxxxyzz[k]) + 4.0 * f2t * gk_x_xxxyzz[k];

                    g_xx_xxxxzzz[k] = fr * g11_x_xxxxzzz[k] + f2g * (g20_0_xxxxzzz[k] - fgz * g21_0_xxxxzzz[k]) + 4.0 * f2t * gk_x_xxxzzz[k];

                    g_xx_xxxyyyy[k] = fr * g11_x_xxxyyyy[k] + f2g * (g20_0_xxxyyyy[k] - fgz * g21_0_xxxyyyy[k]) + 3.0 * f2t * gk_x_xxyyyy[k];

                    g_xx_xxxyyyz[k] = fr * g11_x_xxxyyyz[k] + f2g * (g20_0_xxxyyyz[k] - fgz * g21_0_xxxyyyz[k]) + 3.0 * f2t * gk_x_xxyyyz[k];

                    g_xx_xxxyyzz[k] = fr * g11_x_xxxyyzz[k] + f2g * (g20_0_xxxyyzz[k] - fgz * g21_0_xxxyyzz[k]) + 3.0 * f2t * gk_x_xxyyzz[k];

                    g_xx_xxxyzzz[k] = fr * g11_x_xxxyzzz[k] + f2g * (g20_0_xxxyzzz[k] - fgz * g21_0_xxxyzzz[k]) + 3.0 * f2t * gk_x_xxyzzz[k];

                    g_xx_xxxzzzz[k] = fr * g11_x_xxxzzzz[k] + f2g * (g20_0_xxxzzzz[k] - fgz * g21_0_xxxzzzz[k]) + 3.0 * f2t * gk_x_xxzzzz[k];

                    g_xx_xxyyyyy[k] = fr * g11_x_xxyyyyy[k] + f2g * (g20_0_xxyyyyy[k] - fgz * g21_0_xxyyyyy[k]) + 2.0 * f2t * gk_x_xyyyyy[k];

                    g_xx_xxyyyyz[k] = fr * g11_x_xxyyyyz[k] + f2g * (g20_0_xxyyyyz[k] - fgz * g21_0_xxyyyyz[k]) + 2.0 * f2t * gk_x_xyyyyz[k];

                    g_xx_xxyyyzz[k] = fr * g11_x_xxyyyzz[k] + f2g * (g20_0_xxyyyzz[k] - fgz * g21_0_xxyyyzz[k]) + 2.0 * f2t * gk_x_xyyyzz[k];

                    g_xx_xxyyzzz[k] = fr * g11_x_xxyyzzz[k] + f2g * (g20_0_xxyyzzz[k] - fgz * g21_0_xxyyzzz[k]) + 2.0 * f2t * gk_x_xyyzzz[k];

                    g_xx_xxyzzzz[k] = fr * g11_x_xxyzzzz[k] + f2g * (g20_0_xxyzzzz[k] - fgz * g21_0_xxyzzzz[k]) + 2.0 * f2t * gk_x_xyzzzz[k];

                    g_xx_xxzzzzz[k] = fr * g11_x_xxzzzzz[k] + f2g * (g20_0_xxzzzzz[k] - fgz * g21_0_xxzzzzz[k]) + 2.0 * f2t * gk_x_xzzzzz[k];

                    g_xx_xyyyyyy[k] = fr * g11_x_xyyyyyy[k] + f2g * (g20_0_xyyyyyy[k] - fgz * g21_0_xyyyyyy[k]) + f2t * gk_x_yyyyyy[k];

                    g_xx_xyyyyyz[k] = fr * g11_x_xyyyyyz[k] + f2g * (g20_0_xyyyyyz[k] - fgz * g21_0_xyyyyyz[k]) + f2t * gk_x_yyyyyz[k];

                    g_xx_xyyyyzz[k] = fr * g11_x_xyyyyzz[k] + f2g * (g20_0_xyyyyzz[k] - fgz * g21_0_xyyyyzz[k]) + f2t * gk_x_yyyyzz[k];

                    g_xx_xyyyzzz[k] = fr * g11_x_xyyyzzz[k] + f2g * (g20_0_xyyyzzz[k] - fgz * g21_0_xyyyzzz[k]) + f2t * gk_x_yyyzzz[k];

                    g_xx_xyyzzzz[k] = fr * g11_x_xyyzzzz[k] + f2g * (g20_0_xyyzzzz[k] - fgz * g21_0_xyyzzzz[k]) + f2t * gk_x_yyzzzz[k];

                    g_xx_xyzzzzz[k] = fr * g11_x_xyzzzzz[k] + f2g * (g20_0_xyzzzzz[k] - fgz * g21_0_xyzzzzz[k]) + f2t * gk_x_yzzzzz[k];

                    g_xx_xzzzzzz[k] = fr * g11_x_xzzzzzz[k] + f2g * (g20_0_xzzzzzz[k] - fgz * g21_0_xzzzzzz[k]) + f2t * gk_x_zzzzzz[k];

                    g_xx_yyyyyyy[k] = fr * g11_x_yyyyyyy[k] + f2g * (g20_0_yyyyyyy[k] - fgz * g21_0_yyyyyyy[k]);

                    g_xx_yyyyyyz[k] = fr * g11_x_yyyyyyz[k] + f2g * (g20_0_yyyyyyz[k] - fgz * g21_0_yyyyyyz[k]);

                    g_xx_yyyyyzz[k] = fr * g11_x_yyyyyzz[k] + f2g * (g20_0_yyyyyzz[k] - fgz * g21_0_yyyyyzz[k]);

                    g_xx_yyyyzzz[k] = fr * g11_x_yyyyzzz[k] + f2g * (g20_0_yyyyzzz[k] - fgz * g21_0_yyyyzzz[k]);

                    g_xx_yyyzzzz[k] = fr * g11_x_yyyzzzz[k] + f2g * (g20_0_yyyzzzz[k] - fgz * g21_0_yyyzzzz[k]);

                    g_xx_yyzzzzz[k] = fr * g11_x_yyzzzzz[k] + f2g * (g20_0_yyzzzzz[k] - fgz * g21_0_yyzzzzz[k]);

                    g_xx_yzzzzzz[k] = fr * g11_x_yzzzzzz[k] + f2g * (g20_0_yzzzzzz[k] - fgz * g21_0_yzzzzzz[k]);

                    g_xx_zzzzzzz[k] = fr * g11_x_zzzzzzz[k] + f2g * (g20_0_zzzzzzz[k] - fgz * g21_0_zzzzzzz[k]);

                    g_xy_xxxxxxx[k] = fr * g11_y_xxxxxxx[k] + 7.0 * f2t * gk_y_xxxxxx[k];

                    g_xy_xxxxxxy[k] = fr * g11_y_xxxxxxy[k] + 6.0 * f2t * gk_y_xxxxxy[k];

                    g_xy_xxxxxxz[k] = fr * g11_y_xxxxxxz[k] + 6.0 * f2t * gk_y_xxxxxz[k];

                    g_xy_xxxxxyy[k] = fr * g11_y_xxxxxyy[k] + 5.0 * f2t * gk_y_xxxxyy[k];

                    g_xy_xxxxxyz[k] = fr * g11_y_xxxxxyz[k] + 5.0 * f2t * gk_y_xxxxyz[k];

                    g_xy_xxxxxzz[k] = fr * g11_y_xxxxxzz[k] + 5.0 * f2t * gk_y_xxxxzz[k];

                    g_xy_xxxxyyy[k] = fr * g11_y_xxxxyyy[k] + 4.0 * f2t * gk_y_xxxyyy[k];

                    g_xy_xxxxyyz[k] = fr * g11_y_xxxxyyz[k] + 4.0 * f2t * gk_y_xxxyyz[k];

                    g_xy_xxxxyzz[k] = fr * g11_y_xxxxyzz[k] + 4.0 * f2t * gk_y_xxxyzz[k];

                    g_xy_xxxxzzz[k] = fr * g11_y_xxxxzzz[k] + 4.0 * f2t * gk_y_xxxzzz[k];

                    g_xy_xxxyyyy[k] = fr * g11_y_xxxyyyy[k] + 3.0 * f2t * gk_y_xxyyyy[k];

                    g_xy_xxxyyyz[k] = fr * g11_y_xxxyyyz[k] + 3.0 * f2t * gk_y_xxyyyz[k];

                    g_xy_xxxyyzz[k] = fr * g11_y_xxxyyzz[k] + 3.0 * f2t * gk_y_xxyyzz[k];

                    g_xy_xxxyzzz[k] = fr * g11_y_xxxyzzz[k] + 3.0 * f2t * gk_y_xxyzzz[k];

                    g_xy_xxxzzzz[k] = fr * g11_y_xxxzzzz[k] + 3.0 * f2t * gk_y_xxzzzz[k];

                    g_xy_xxyyyyy[k] = fr * g11_y_xxyyyyy[k] + 2.0 * f2t * gk_y_xyyyyy[k];

                    g_xy_xxyyyyz[k] = fr * g11_y_xxyyyyz[k] + 2.0 * f2t * gk_y_xyyyyz[k];

                    g_xy_xxyyyzz[k] = fr * g11_y_xxyyyzz[k] + 2.0 * f2t * gk_y_xyyyzz[k];

                    g_xy_xxyyzzz[k] = fr * g11_y_xxyyzzz[k] + 2.0 * f2t * gk_y_xyyzzz[k];

                    g_xy_xxyzzzz[k] = fr * g11_y_xxyzzzz[k] + 2.0 * f2t * gk_y_xyzzzz[k];

                    g_xy_xxzzzzz[k] = fr * g11_y_xxzzzzz[k] + 2.0 * f2t * gk_y_xzzzzz[k];

                    g_xy_xyyyyyy[k] = fr * g11_y_xyyyyyy[k] + f2t * gk_y_yyyyyy[k];

                    g_xy_xyyyyyz[k] = fr * g11_y_xyyyyyz[k] + f2t * gk_y_yyyyyz[k];

                    g_xy_xyyyyzz[k] = fr * g11_y_xyyyyzz[k] + f2t * gk_y_yyyyzz[k];

                    g_xy_xyyyzzz[k] = fr * g11_y_xyyyzzz[k] + f2t * gk_y_yyyzzz[k];

                    g_xy_xyyzzzz[k] = fr * g11_y_xyyzzzz[k] + f2t * gk_y_yyzzzz[k];

                    g_xy_xyzzzzz[k] = fr * g11_y_xyzzzzz[k] + f2t * gk_y_yzzzzz[k];

                    g_xy_xzzzzzz[k] = fr * g11_y_xzzzzzz[k] + f2t * gk_y_zzzzzz[k];

                    g_xy_yyyyyyy[k] = fr * g11_y_yyyyyyy[k];

                    g_xy_yyyyyyz[k] = fr * g11_y_yyyyyyz[k];

                    g_xy_yyyyyzz[k] = fr * g11_y_yyyyyzz[k];

                    g_xy_yyyyzzz[k] = fr * g11_y_yyyyzzz[k];

                    g_xy_yyyzzzz[k] = fr * g11_y_yyyzzzz[k];

                    g_xy_yyzzzzz[k] = fr * g11_y_yyzzzzz[k];

                    g_xy_yzzzzzz[k] = fr * g11_y_yzzzzzz[k];

                    g_xy_zzzzzzz[k] = fr * g11_y_zzzzzzz[k];

                    g_xz_xxxxxxx[k] = fr * g11_z_xxxxxxx[k] + 7.0 * f2t * gk_z_xxxxxx[k];

                    g_xz_xxxxxxy[k] = fr * g11_z_xxxxxxy[k] + 6.0 * f2t * gk_z_xxxxxy[k];

                    g_xz_xxxxxxz[k] = fr * g11_z_xxxxxxz[k] + 6.0 * f2t * gk_z_xxxxxz[k];

                    g_xz_xxxxxyy[k] = fr * g11_z_xxxxxyy[k] + 5.0 * f2t * gk_z_xxxxyy[k];

                    g_xz_xxxxxyz[k] = fr * g11_z_xxxxxyz[k] + 5.0 * f2t * gk_z_xxxxyz[k];

                    g_xz_xxxxxzz[k] = fr * g11_z_xxxxxzz[k] + 5.0 * f2t * gk_z_xxxxzz[k];

                    g_xz_xxxxyyy[k] = fr * g11_z_xxxxyyy[k] + 4.0 * f2t * gk_z_xxxyyy[k];

                    g_xz_xxxxyyz[k] = fr * g11_z_xxxxyyz[k] + 4.0 * f2t * gk_z_xxxyyz[k];

                    g_xz_xxxxyzz[k] = fr * g11_z_xxxxyzz[k] + 4.0 * f2t * gk_z_xxxyzz[k];

                    g_xz_xxxxzzz[k] = fr * g11_z_xxxxzzz[k] + 4.0 * f2t * gk_z_xxxzzz[k];

                    g_xz_xxxyyyy[k] = fr * g11_z_xxxyyyy[k] + 3.0 * f2t * gk_z_xxyyyy[k];

                    g_xz_xxxyyyz[k] = fr * g11_z_xxxyyyz[k] + 3.0 * f2t * gk_z_xxyyyz[k];

                    g_xz_xxxyyzz[k] = fr * g11_z_xxxyyzz[k] + 3.0 * f2t * gk_z_xxyyzz[k];

                    g_xz_xxxyzzz[k] = fr * g11_z_xxxyzzz[k] + 3.0 * f2t * gk_z_xxyzzz[k];

                    g_xz_xxxzzzz[k] = fr * g11_z_xxxzzzz[k] + 3.0 * f2t * gk_z_xxzzzz[k];

                    g_xz_xxyyyyy[k] = fr * g11_z_xxyyyyy[k] + 2.0 * f2t * gk_z_xyyyyy[k];

                    g_xz_xxyyyyz[k] = fr * g11_z_xxyyyyz[k] + 2.0 * f2t * gk_z_xyyyyz[k];

                    g_xz_xxyyyzz[k] = fr * g11_z_xxyyyzz[k] + 2.0 * f2t * gk_z_xyyyzz[k];

                    g_xz_xxyyzzz[k] = fr * g11_z_xxyyzzz[k] + 2.0 * f2t * gk_z_xyyzzz[k];

                    g_xz_xxyzzzz[k] = fr * g11_z_xxyzzzz[k] + 2.0 * f2t * gk_z_xyzzzz[k];

                    g_xz_xxzzzzz[k] = fr * g11_z_xxzzzzz[k] + 2.0 * f2t * gk_z_xzzzzz[k];

                    g_xz_xyyyyyy[k] = fr * g11_z_xyyyyyy[k] + f2t * gk_z_yyyyyy[k];

                    g_xz_xyyyyyz[k] = fr * g11_z_xyyyyyz[k] + f2t * gk_z_yyyyyz[k];

                    g_xz_xyyyyzz[k] = fr * g11_z_xyyyyzz[k] + f2t * gk_z_yyyyzz[k];

                    g_xz_xyyyzzz[k] = fr * g11_z_xyyyzzz[k] + f2t * gk_z_yyyzzz[k];

                    g_xz_xyyzzzz[k] = fr * g11_z_xyyzzzz[k] + f2t * gk_z_yyzzzz[k];

                    g_xz_xyzzzzz[k] = fr * g11_z_xyzzzzz[k] + f2t * gk_z_yzzzzz[k];

                    g_xz_xzzzzzz[k] = fr * g11_z_xzzzzzz[k] + f2t * gk_z_zzzzzz[k];

                    g_xz_yyyyyyy[k] = fr * g11_z_yyyyyyy[k];

                    g_xz_yyyyyyz[k] = fr * g11_z_yyyyyyz[k];

                    g_xz_yyyyyzz[k] = fr * g11_z_yyyyyzz[k];

                    g_xz_yyyyzzz[k] = fr * g11_z_yyyyzzz[k];

                    g_xz_yyyzzzz[k] = fr * g11_z_yyyzzzz[k];

                    g_xz_yyzzzzz[k] = fr * g11_z_yyzzzzz[k];

                    g_xz_yzzzzzz[k] = fr * g11_z_yzzzzzz[k];

                    g_xz_zzzzzzz[k] = fr * g11_z_zzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxxxxxx[k] = fr * g11_y_xxxxxxx[k] + f2g * (g20_0_xxxxxxx[k] - fgz * g21_0_xxxxxxx[k]);

                    g_yy_xxxxxxy[k] = fr * g11_y_xxxxxxy[k] + f2g * (g20_0_xxxxxxy[k] - fgz * g21_0_xxxxxxy[k]) + f2t * gk_y_xxxxxx[k];

                    g_yy_xxxxxxz[k] = fr * g11_y_xxxxxxz[k] + f2g * (g20_0_xxxxxxz[k] - fgz * g21_0_xxxxxxz[k]);

                    g_yy_xxxxxyy[k] = fr * g11_y_xxxxxyy[k] + f2g * (g20_0_xxxxxyy[k] - fgz * g21_0_xxxxxyy[k]) + 2.0 * f2t * gk_y_xxxxxy[k];

                    g_yy_xxxxxyz[k] = fr * g11_y_xxxxxyz[k] + f2g * (g20_0_xxxxxyz[k] - fgz * g21_0_xxxxxyz[k]) + f2t * gk_y_xxxxxz[k];

                    g_yy_xxxxxzz[k] = fr * g11_y_xxxxxzz[k] + f2g * (g20_0_xxxxxzz[k] - fgz * g21_0_xxxxxzz[k]);

                    g_yy_xxxxyyy[k] = fr * g11_y_xxxxyyy[k] + f2g * (g20_0_xxxxyyy[k] - fgz * g21_0_xxxxyyy[k]) + 3.0 * f2t * gk_y_xxxxyy[k];

                    g_yy_xxxxyyz[k] = fr * g11_y_xxxxyyz[k] + f2g * (g20_0_xxxxyyz[k] - fgz * g21_0_xxxxyyz[k]) + 2.0 * f2t * gk_y_xxxxyz[k];

                    g_yy_xxxxyzz[k] = fr * g11_y_xxxxyzz[k] + f2g * (g20_0_xxxxyzz[k] - fgz * g21_0_xxxxyzz[k]) + f2t * gk_y_xxxxzz[k];

                    g_yy_xxxxzzz[k] = fr * g11_y_xxxxzzz[k] + f2g * (g20_0_xxxxzzz[k] - fgz * g21_0_xxxxzzz[k]);

                    g_yy_xxxyyyy[k] = fr * g11_y_xxxyyyy[k] + f2g * (g20_0_xxxyyyy[k] - fgz * g21_0_xxxyyyy[k]) + 4.0 * f2t * gk_y_xxxyyy[k];

                    g_yy_xxxyyyz[k] = fr * g11_y_xxxyyyz[k] + f2g * (g20_0_xxxyyyz[k] - fgz * g21_0_xxxyyyz[k]) + 3.0 * f2t * gk_y_xxxyyz[k];

                    g_yy_xxxyyzz[k] = fr * g11_y_xxxyyzz[k] + f2g * (g20_0_xxxyyzz[k] - fgz * g21_0_xxxyyzz[k]) + 2.0 * f2t * gk_y_xxxyzz[k];

                    g_yy_xxxyzzz[k] = fr * g11_y_xxxyzzz[k] + f2g * (g20_0_xxxyzzz[k] - fgz * g21_0_xxxyzzz[k]) + f2t * gk_y_xxxzzz[k];

                    g_yy_xxxzzzz[k] = fr * g11_y_xxxzzzz[k] + f2g * (g20_0_xxxzzzz[k] - fgz * g21_0_xxxzzzz[k]);

                    g_yy_xxyyyyy[k] = fr * g11_y_xxyyyyy[k] + f2g * (g20_0_xxyyyyy[k] - fgz * g21_0_xxyyyyy[k]) + 5.0 * f2t * gk_y_xxyyyy[k];

                    g_yy_xxyyyyz[k] = fr * g11_y_xxyyyyz[k] + f2g * (g20_0_xxyyyyz[k] - fgz * g21_0_xxyyyyz[k]) + 4.0 * f2t * gk_y_xxyyyz[k];

                    g_yy_xxyyyzz[k] = fr * g11_y_xxyyyzz[k] + f2g * (g20_0_xxyyyzz[k] - fgz * g21_0_xxyyyzz[k]) + 3.0 * f2t * gk_y_xxyyzz[k];

                    g_yy_xxyyzzz[k] = fr * g11_y_xxyyzzz[k] + f2g * (g20_0_xxyyzzz[k] - fgz * g21_0_xxyyzzz[k]) + 2.0 * f2t * gk_y_xxyzzz[k];

                    g_yy_xxyzzzz[k] = fr * g11_y_xxyzzzz[k] + f2g * (g20_0_xxyzzzz[k] - fgz * g21_0_xxyzzzz[k]) + f2t * gk_y_xxzzzz[k];

                    g_yy_xxzzzzz[k] = fr * g11_y_xxzzzzz[k] + f2g * (g20_0_xxzzzzz[k] - fgz * g21_0_xxzzzzz[k]);

                    g_yy_xyyyyyy[k] = fr * g11_y_xyyyyyy[k] + f2g * (g20_0_xyyyyyy[k] - fgz * g21_0_xyyyyyy[k]) + 6.0 * f2t * gk_y_xyyyyy[k];

                    g_yy_xyyyyyz[k] = fr * g11_y_xyyyyyz[k] + f2g * (g20_0_xyyyyyz[k] - fgz * g21_0_xyyyyyz[k]) + 5.0 * f2t * gk_y_xyyyyz[k];

                    g_yy_xyyyyzz[k] = fr * g11_y_xyyyyzz[k] + f2g * (g20_0_xyyyyzz[k] - fgz * g21_0_xyyyyzz[k]) + 4.0 * f2t * gk_y_xyyyzz[k];

                    g_yy_xyyyzzz[k] = fr * g11_y_xyyyzzz[k] + f2g * (g20_0_xyyyzzz[k] - fgz * g21_0_xyyyzzz[k]) + 3.0 * f2t * gk_y_xyyzzz[k];

                    g_yy_xyyzzzz[k] = fr * g11_y_xyyzzzz[k] + f2g * (g20_0_xyyzzzz[k] - fgz * g21_0_xyyzzzz[k]) + 2.0 * f2t * gk_y_xyzzzz[k];

                    g_yy_xyzzzzz[k] = fr * g11_y_xyzzzzz[k] + f2g * (g20_0_xyzzzzz[k] - fgz * g21_0_xyzzzzz[k]) + f2t * gk_y_xzzzzz[k];

                    g_yy_xzzzzzz[k] = fr * g11_y_xzzzzzz[k] + f2g * (g20_0_xzzzzzz[k] - fgz * g21_0_xzzzzzz[k]);

                    g_yy_yyyyyyy[k] = fr * g11_y_yyyyyyy[k] + f2g * (g20_0_yyyyyyy[k] - fgz * g21_0_yyyyyyy[k]) + 7.0 * f2t * gk_y_yyyyyy[k];

                    g_yy_yyyyyyz[k] = fr * g11_y_yyyyyyz[k] + f2g * (g20_0_yyyyyyz[k] - fgz * g21_0_yyyyyyz[k]) + 6.0 * f2t * gk_y_yyyyyz[k];

                    g_yy_yyyyyzz[k] = fr * g11_y_yyyyyzz[k] + f2g * (g20_0_yyyyyzz[k] - fgz * g21_0_yyyyyzz[k]) + 5.0 * f2t * gk_y_yyyyzz[k];

                    g_yy_yyyyzzz[k] = fr * g11_y_yyyyzzz[k] + f2g * (g20_0_yyyyzzz[k] - fgz * g21_0_yyyyzzz[k]) + 4.0 * f2t * gk_y_yyyzzz[k];

                    g_yy_yyyzzzz[k] = fr * g11_y_yyyzzzz[k] + f2g * (g20_0_yyyzzzz[k] - fgz * g21_0_yyyzzzz[k]) + 3.0 * f2t * gk_y_yyzzzz[k];

                    g_yy_yyzzzzz[k] = fr * g11_y_yyzzzzz[k] + f2g * (g20_0_yyzzzzz[k] - fgz * g21_0_yyzzzzz[k]) + 2.0 * f2t * gk_y_yzzzzz[k];

                    g_yy_yzzzzzz[k] = fr * g11_y_yzzzzzz[k] + f2g * (g20_0_yzzzzzz[k] - fgz * g21_0_yzzzzzz[k]) + f2t * gk_y_zzzzzz[k];

                    g_yy_zzzzzzz[k] = fr * g11_y_zzzzzzz[k] + f2g * (g20_0_zzzzzzz[k] - fgz * g21_0_zzzzzzz[k]);

                    g_yz_xxxxxxx[k] = fr * g11_z_xxxxxxx[k];

                    g_yz_xxxxxxy[k] = fr * g11_z_xxxxxxy[k] + f2t * gk_z_xxxxxx[k];

                    g_yz_xxxxxxz[k] = fr * g11_z_xxxxxxz[k];

                    g_yz_xxxxxyy[k] = fr * g11_z_xxxxxyy[k] + 2.0 * f2t * gk_z_xxxxxy[k];

                    g_yz_xxxxxyz[k] = fr * g11_z_xxxxxyz[k] + f2t * gk_z_xxxxxz[k];

                    g_yz_xxxxxzz[k] = fr * g11_z_xxxxxzz[k];

                    g_yz_xxxxyyy[k] = fr * g11_z_xxxxyyy[k] + 3.0 * f2t * gk_z_xxxxyy[k];

                    g_yz_xxxxyyz[k] = fr * g11_z_xxxxyyz[k] + 2.0 * f2t * gk_z_xxxxyz[k];

                    g_yz_xxxxyzz[k] = fr * g11_z_xxxxyzz[k] + f2t * gk_z_xxxxzz[k];

                    g_yz_xxxxzzz[k] = fr * g11_z_xxxxzzz[k];

                    g_yz_xxxyyyy[k] = fr * g11_z_xxxyyyy[k] + 4.0 * f2t * gk_z_xxxyyy[k];

                    g_yz_xxxyyyz[k] = fr * g11_z_xxxyyyz[k] + 3.0 * f2t * gk_z_xxxyyz[k];

                    g_yz_xxxyyzz[k] = fr * g11_z_xxxyyzz[k] + 2.0 * f2t * gk_z_xxxyzz[k];

                    g_yz_xxxyzzz[k] = fr * g11_z_xxxyzzz[k] + f2t * gk_z_xxxzzz[k];

                    g_yz_xxxzzzz[k] = fr * g11_z_xxxzzzz[k];

                    g_yz_xxyyyyy[k] = fr * g11_z_xxyyyyy[k] + 5.0 * f2t * gk_z_xxyyyy[k];

                    g_yz_xxyyyyz[k] = fr * g11_z_xxyyyyz[k] + 4.0 * f2t * gk_z_xxyyyz[k];

                    g_yz_xxyyyzz[k] = fr * g11_z_xxyyyzz[k] + 3.0 * f2t * gk_z_xxyyzz[k];

                    g_yz_xxyyzzz[k] = fr * g11_z_xxyyzzz[k] + 2.0 * f2t * gk_z_xxyzzz[k];

                    g_yz_xxyzzzz[k] = fr * g11_z_xxyzzzz[k] + f2t * gk_z_xxzzzz[k];

                    g_yz_xxzzzzz[k] = fr * g11_z_xxzzzzz[k];

                    g_yz_xyyyyyy[k] = fr * g11_z_xyyyyyy[k] + 6.0 * f2t * gk_z_xyyyyy[k];

                    g_yz_xyyyyyz[k] = fr * g11_z_xyyyyyz[k] + 5.0 * f2t * gk_z_xyyyyz[k];

                    g_yz_xyyyyzz[k] = fr * g11_z_xyyyyzz[k] + 4.0 * f2t * gk_z_xyyyzz[k];

                    g_yz_xyyyzzz[k] = fr * g11_z_xyyyzzz[k] + 3.0 * f2t * gk_z_xyyzzz[k];

                    g_yz_xyyzzzz[k] = fr * g11_z_xyyzzzz[k] + 2.0 * f2t * gk_z_xyzzzz[k];

                    g_yz_xyzzzzz[k] = fr * g11_z_xyzzzzz[k] + f2t * gk_z_xzzzzz[k];

                    g_yz_xzzzzzz[k] = fr * g11_z_xzzzzzz[k];

                    g_yz_yyyyyyy[k] = fr * g11_z_yyyyyyy[k] + 7.0 * f2t * gk_z_yyyyyy[k];

                    g_yz_yyyyyyz[k] = fr * g11_z_yyyyyyz[k] + 6.0 * f2t * gk_z_yyyyyz[k];

                    g_yz_yyyyyzz[k] = fr * g11_z_yyyyyzz[k] + 5.0 * f2t * gk_z_yyyyzz[k];

                    g_yz_yyyyzzz[k] = fr * g11_z_yyyyzzz[k] + 4.0 * f2t * gk_z_yyyzzz[k];

                    g_yz_yyyzzzz[k] = fr * g11_z_yyyzzzz[k] + 3.0 * f2t * gk_z_yyzzzz[k];

                    g_yz_yyzzzzz[k] = fr * g11_z_yyzzzzz[k] + 2.0 * f2t * gk_z_yzzzzz[k];

                    g_yz_yzzzzzz[k] = fr * g11_z_yzzzzzz[k] + f2t * gk_z_zzzzzz[k];

                    g_yz_zzzzzzz[k] = fr * g11_z_zzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxxxxxx[k] = fr * g11_z_xxxxxxx[k] + f2g * (g20_0_xxxxxxx[k] - fgz * g21_0_xxxxxxx[k]);

                    g_zz_xxxxxxy[k] = fr * g11_z_xxxxxxy[k] + f2g * (g20_0_xxxxxxy[k] - fgz * g21_0_xxxxxxy[k]);

                    g_zz_xxxxxxz[k] = fr * g11_z_xxxxxxz[k] + f2g * (g20_0_xxxxxxz[k] - fgz * g21_0_xxxxxxz[k]) + f2t * gk_z_xxxxxx[k];

                    g_zz_xxxxxyy[k] = fr * g11_z_xxxxxyy[k] + f2g * (g20_0_xxxxxyy[k] - fgz * g21_0_xxxxxyy[k]);

                    g_zz_xxxxxyz[k] = fr * g11_z_xxxxxyz[k] + f2g * (g20_0_xxxxxyz[k] - fgz * g21_0_xxxxxyz[k]) + f2t * gk_z_xxxxxy[k];

                    g_zz_xxxxxzz[k] = fr * g11_z_xxxxxzz[k] + f2g * (g20_0_xxxxxzz[k] - fgz * g21_0_xxxxxzz[k]) + 2.0 * f2t * gk_z_xxxxxz[k];

                    g_zz_xxxxyyy[k] = fr * g11_z_xxxxyyy[k] + f2g * (g20_0_xxxxyyy[k] - fgz * g21_0_xxxxyyy[k]);

                    g_zz_xxxxyyz[k] = fr * g11_z_xxxxyyz[k] + f2g * (g20_0_xxxxyyz[k] - fgz * g21_0_xxxxyyz[k]) + f2t * gk_z_xxxxyy[k];

                    g_zz_xxxxyzz[k] = fr * g11_z_xxxxyzz[k] + f2g * (g20_0_xxxxyzz[k] - fgz * g21_0_xxxxyzz[k]) + 2.0 * f2t * gk_z_xxxxyz[k];

                    g_zz_xxxxzzz[k] = fr * g11_z_xxxxzzz[k] + f2g * (g20_0_xxxxzzz[k] - fgz * g21_0_xxxxzzz[k]) + 3.0 * f2t * gk_z_xxxxzz[k];

                    g_zz_xxxyyyy[k] = fr * g11_z_xxxyyyy[k] + f2g * (g20_0_xxxyyyy[k] - fgz * g21_0_xxxyyyy[k]);

                    g_zz_xxxyyyz[k] = fr * g11_z_xxxyyyz[k] + f2g * (g20_0_xxxyyyz[k] - fgz * g21_0_xxxyyyz[k]) + f2t * gk_z_xxxyyy[k];

                    g_zz_xxxyyzz[k] = fr * g11_z_xxxyyzz[k] + f2g * (g20_0_xxxyyzz[k] - fgz * g21_0_xxxyyzz[k]) + 2.0 * f2t * gk_z_xxxyyz[k];

                    g_zz_xxxyzzz[k] = fr * g11_z_xxxyzzz[k] + f2g * (g20_0_xxxyzzz[k] - fgz * g21_0_xxxyzzz[k]) + 3.0 * f2t * gk_z_xxxyzz[k];

                    g_zz_xxxzzzz[k] = fr * g11_z_xxxzzzz[k] + f2g * (g20_0_xxxzzzz[k] - fgz * g21_0_xxxzzzz[k]) + 4.0 * f2t * gk_z_xxxzzz[k];

                    g_zz_xxyyyyy[k] = fr * g11_z_xxyyyyy[k] + f2g * (g20_0_xxyyyyy[k] - fgz * g21_0_xxyyyyy[k]);

                    g_zz_xxyyyyz[k] = fr * g11_z_xxyyyyz[k] + f2g * (g20_0_xxyyyyz[k] - fgz * g21_0_xxyyyyz[k]) + f2t * gk_z_xxyyyy[k];

                    g_zz_xxyyyzz[k] = fr * g11_z_xxyyyzz[k] + f2g * (g20_0_xxyyyzz[k] - fgz * g21_0_xxyyyzz[k]) + 2.0 * f2t * gk_z_xxyyyz[k];

                    g_zz_xxyyzzz[k] = fr * g11_z_xxyyzzz[k] + f2g * (g20_0_xxyyzzz[k] - fgz * g21_0_xxyyzzz[k]) + 3.0 * f2t * gk_z_xxyyzz[k];

                    g_zz_xxyzzzz[k] = fr * g11_z_xxyzzzz[k] + f2g * (g20_0_xxyzzzz[k] - fgz * g21_0_xxyzzzz[k]) + 4.0 * f2t * gk_z_xxyzzz[k];

                    g_zz_xxzzzzz[k] = fr * g11_z_xxzzzzz[k] + f2g * (g20_0_xxzzzzz[k] - fgz * g21_0_xxzzzzz[k]) + 5.0 * f2t * gk_z_xxzzzz[k];

                    g_zz_xyyyyyy[k] = fr * g11_z_xyyyyyy[k] + f2g * (g20_0_xyyyyyy[k] - fgz * g21_0_xyyyyyy[k]);

                    g_zz_xyyyyyz[k] = fr * g11_z_xyyyyyz[k] + f2g * (g20_0_xyyyyyz[k] - fgz * g21_0_xyyyyyz[k]) + f2t * gk_z_xyyyyy[k];

                    g_zz_xyyyyzz[k] = fr * g11_z_xyyyyzz[k] + f2g * (g20_0_xyyyyzz[k] - fgz * g21_0_xyyyyzz[k]) + 2.0 * f2t * gk_z_xyyyyz[k];

                    g_zz_xyyyzzz[k] = fr * g11_z_xyyyzzz[k] + f2g * (g20_0_xyyyzzz[k] - fgz * g21_0_xyyyzzz[k]) + 3.0 * f2t * gk_z_xyyyzz[k];

                    g_zz_xyyzzzz[k] = fr * g11_z_xyyzzzz[k] + f2g * (g20_0_xyyzzzz[k] - fgz * g21_0_xyyzzzz[k]) + 4.0 * f2t * gk_z_xyyzzz[k];

                    g_zz_xyzzzzz[k] = fr * g11_z_xyzzzzz[k] + f2g * (g20_0_xyzzzzz[k] - fgz * g21_0_xyzzzzz[k]) + 5.0 * f2t * gk_z_xyzzzz[k];

                    g_zz_xzzzzzz[k] = fr * g11_z_xzzzzzz[k] + f2g * (g20_0_xzzzzzz[k] - fgz * g21_0_xzzzzzz[k]) + 6.0 * f2t * gk_z_xzzzzz[k];

                    g_zz_yyyyyyy[k] = fr * g11_z_yyyyyyy[k] + f2g * (g20_0_yyyyyyy[k] - fgz * g21_0_yyyyyyy[k]);

                    g_zz_yyyyyyz[k] = fr * g11_z_yyyyyyz[k] + f2g * (g20_0_yyyyyyz[k] - fgz * g21_0_yyyyyyz[k]) + f2t * gk_z_yyyyyy[k];

                    g_zz_yyyyyzz[k] = fr * g11_z_yyyyyzz[k] + f2g * (g20_0_yyyyyzz[k] - fgz * g21_0_yyyyyzz[k]) + 2.0 * f2t * gk_z_yyyyyz[k];

                    g_zz_yyyyzzz[k] = fr * g11_z_yyyyzzz[k] + f2g * (g20_0_yyyyzzz[k] - fgz * g21_0_yyyyzzz[k]) + 3.0 * f2t * gk_z_yyyyzz[k];

                    g_zz_yyyzzzz[k] = fr * g11_z_yyyzzzz[k] + f2g * (g20_0_yyyzzzz[k] - fgz * g21_0_yyyzzzz[k]) + 4.0 * f2t * gk_z_yyyzzz[k];

                    g_zz_yyzzzzz[k] = fr * g11_z_yyzzzzz[k] + f2g * (g20_0_yyzzzzz[k] - fgz * g21_0_yyzzzzz[k]) + 5.0 * f2t * gk_z_yyzzzz[k];

                    g_zz_yzzzzzz[k] = fr * g11_z_yzzzzzz[k] + f2g * (g20_0_yzzzzzz[k] - fgz * g21_0_yzzzzzz[k]) + 6.0 * f2t * gk_z_yzzzzz[k];

                    g_zz_zzzzzzz[k] = fr * g11_z_zzzzzzz[k] + f2g * (g20_0_zzzzzzz[k] - fgz * g21_0_zzzzzzz[k]) + 7.0 * f2t * gk_z_zzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSK(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 7);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 7, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 7, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 7, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 7, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 6, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SI)^(m+1) integrals

                auto gk_xx_xxxxxx = primBuffer.data(gkoff + 168 * idx);

                auto gk_xx_xxxxxy = primBuffer.data(gkoff + 168 * idx + 1);

                auto gk_xx_xxxxxz = primBuffer.data(gkoff + 168 * idx + 2);

                auto gk_xx_xxxxyy = primBuffer.data(gkoff + 168 * idx + 3);

                auto gk_xx_xxxxyz = primBuffer.data(gkoff + 168 * idx + 4);

                auto gk_xx_xxxxzz = primBuffer.data(gkoff + 168 * idx + 5);

                auto gk_xx_xxxyyy = primBuffer.data(gkoff + 168 * idx + 6);

                auto gk_xx_xxxyyz = primBuffer.data(gkoff + 168 * idx + 7);

                auto gk_xx_xxxyzz = primBuffer.data(gkoff + 168 * idx + 8);

                auto gk_xx_xxxzzz = primBuffer.data(gkoff + 168 * idx + 9);

                auto gk_xx_xxyyyy = primBuffer.data(gkoff + 168 * idx + 10);

                auto gk_xx_xxyyyz = primBuffer.data(gkoff + 168 * idx + 11);

                auto gk_xx_xxyyzz = primBuffer.data(gkoff + 168 * idx + 12);

                auto gk_xx_xxyzzz = primBuffer.data(gkoff + 168 * idx + 13);

                auto gk_xx_xxzzzz = primBuffer.data(gkoff + 168 * idx + 14);

                auto gk_xx_xyyyyy = primBuffer.data(gkoff + 168 * idx + 15);

                auto gk_xx_xyyyyz = primBuffer.data(gkoff + 168 * idx + 16);

                auto gk_xx_xyyyzz = primBuffer.data(gkoff + 168 * idx + 17);

                auto gk_xx_xyyzzz = primBuffer.data(gkoff + 168 * idx + 18);

                auto gk_xx_xyzzzz = primBuffer.data(gkoff + 168 * idx + 19);

                auto gk_xx_xzzzzz = primBuffer.data(gkoff + 168 * idx + 20);

                auto gk_xx_yyyyyy = primBuffer.data(gkoff + 168 * idx + 21);

                auto gk_xx_yyyyyz = primBuffer.data(gkoff + 168 * idx + 22);

                auto gk_xx_yyyyzz = primBuffer.data(gkoff + 168 * idx + 23);

                auto gk_xx_yyyzzz = primBuffer.data(gkoff + 168 * idx + 24);

                auto gk_xx_yyzzzz = primBuffer.data(gkoff + 168 * idx + 25);

                auto gk_xx_yzzzzz = primBuffer.data(gkoff + 168 * idx + 26);

                auto gk_xx_zzzzzz = primBuffer.data(gkoff + 168 * idx + 27);

                auto gk_xy_xxxxxx = primBuffer.data(gkoff + 168 * idx + 28);

                auto gk_xy_xxxxxy = primBuffer.data(gkoff + 168 * idx + 29);

                auto gk_xy_xxxxxz = primBuffer.data(gkoff + 168 * idx + 30);

                auto gk_xy_xxxxyy = primBuffer.data(gkoff + 168 * idx + 31);

                auto gk_xy_xxxxyz = primBuffer.data(gkoff + 168 * idx + 32);

                auto gk_xy_xxxxzz = primBuffer.data(gkoff + 168 * idx + 33);

                auto gk_xy_xxxyyy = primBuffer.data(gkoff + 168 * idx + 34);

                auto gk_xy_xxxyyz = primBuffer.data(gkoff + 168 * idx + 35);

                auto gk_xy_xxxyzz = primBuffer.data(gkoff + 168 * idx + 36);

                auto gk_xy_xxxzzz = primBuffer.data(gkoff + 168 * idx + 37);

                auto gk_xy_xxyyyy = primBuffer.data(gkoff + 168 * idx + 38);

                auto gk_xy_xxyyyz = primBuffer.data(gkoff + 168 * idx + 39);

                auto gk_xy_xxyyzz = primBuffer.data(gkoff + 168 * idx + 40);

                auto gk_xy_xxyzzz = primBuffer.data(gkoff + 168 * idx + 41);

                auto gk_xy_xxzzzz = primBuffer.data(gkoff + 168 * idx + 42);

                auto gk_xy_xyyyyy = primBuffer.data(gkoff + 168 * idx + 43);

                auto gk_xy_xyyyyz = primBuffer.data(gkoff + 168 * idx + 44);

                auto gk_xy_xyyyzz = primBuffer.data(gkoff + 168 * idx + 45);

                auto gk_xy_xyyzzz = primBuffer.data(gkoff + 168 * idx + 46);

                auto gk_xy_xyzzzz = primBuffer.data(gkoff + 168 * idx + 47);

                auto gk_xy_xzzzzz = primBuffer.data(gkoff + 168 * idx + 48);

                auto gk_xy_yyyyyy = primBuffer.data(gkoff + 168 * idx + 49);

                auto gk_xy_yyyyyz = primBuffer.data(gkoff + 168 * idx + 50);

                auto gk_xy_yyyyzz = primBuffer.data(gkoff + 168 * idx + 51);

                auto gk_xy_yyyzzz = primBuffer.data(gkoff + 168 * idx + 52);

                auto gk_xy_yyzzzz = primBuffer.data(gkoff + 168 * idx + 53);

                auto gk_xy_yzzzzz = primBuffer.data(gkoff + 168 * idx + 54);

                auto gk_xy_zzzzzz = primBuffer.data(gkoff + 168 * idx + 55);

                auto gk_xz_xxxxxx = primBuffer.data(gkoff + 168 * idx + 56);

                auto gk_xz_xxxxxy = primBuffer.data(gkoff + 168 * idx + 57);

                auto gk_xz_xxxxxz = primBuffer.data(gkoff + 168 * idx + 58);

                auto gk_xz_xxxxyy = primBuffer.data(gkoff + 168 * idx + 59);

                auto gk_xz_xxxxyz = primBuffer.data(gkoff + 168 * idx + 60);

                auto gk_xz_xxxxzz = primBuffer.data(gkoff + 168 * idx + 61);

                auto gk_xz_xxxyyy = primBuffer.data(gkoff + 168 * idx + 62);

                auto gk_xz_xxxyyz = primBuffer.data(gkoff + 168 * idx + 63);

                auto gk_xz_xxxyzz = primBuffer.data(gkoff + 168 * idx + 64);

                auto gk_xz_xxxzzz = primBuffer.data(gkoff + 168 * idx + 65);

                auto gk_xz_xxyyyy = primBuffer.data(gkoff + 168 * idx + 66);

                auto gk_xz_xxyyyz = primBuffer.data(gkoff + 168 * idx + 67);

                auto gk_xz_xxyyzz = primBuffer.data(gkoff + 168 * idx + 68);

                auto gk_xz_xxyzzz = primBuffer.data(gkoff + 168 * idx + 69);

                auto gk_xz_xxzzzz = primBuffer.data(gkoff + 168 * idx + 70);

                auto gk_xz_xyyyyy = primBuffer.data(gkoff + 168 * idx + 71);

                auto gk_xz_xyyyyz = primBuffer.data(gkoff + 168 * idx + 72);

                auto gk_xz_xyyyzz = primBuffer.data(gkoff + 168 * idx + 73);

                auto gk_xz_xyyzzz = primBuffer.data(gkoff + 168 * idx + 74);

                auto gk_xz_xyzzzz = primBuffer.data(gkoff + 168 * idx + 75);

                auto gk_xz_xzzzzz = primBuffer.data(gkoff + 168 * idx + 76);

                auto gk_xz_yyyyyy = primBuffer.data(gkoff + 168 * idx + 77);

                auto gk_xz_yyyyyz = primBuffer.data(gkoff + 168 * idx + 78);

                auto gk_xz_yyyyzz = primBuffer.data(gkoff + 168 * idx + 79);

                auto gk_xz_yyyzzz = primBuffer.data(gkoff + 168 * idx + 80);

                auto gk_xz_yyzzzz = primBuffer.data(gkoff + 168 * idx + 81);

                auto gk_xz_yzzzzz = primBuffer.data(gkoff + 168 * idx + 82);

                auto gk_xz_zzzzzz = primBuffer.data(gkoff + 168 * idx + 83);

                auto gk_yy_xxxxxx = primBuffer.data(gkoff + 168 * idx + 84);

                auto gk_yy_xxxxxy = primBuffer.data(gkoff + 168 * idx + 85);

                auto gk_yy_xxxxxz = primBuffer.data(gkoff + 168 * idx + 86);

                auto gk_yy_xxxxyy = primBuffer.data(gkoff + 168 * idx + 87);

                auto gk_yy_xxxxyz = primBuffer.data(gkoff + 168 * idx + 88);

                auto gk_yy_xxxxzz = primBuffer.data(gkoff + 168 * idx + 89);

                auto gk_yy_xxxyyy = primBuffer.data(gkoff + 168 * idx + 90);

                auto gk_yy_xxxyyz = primBuffer.data(gkoff + 168 * idx + 91);

                auto gk_yy_xxxyzz = primBuffer.data(gkoff + 168 * idx + 92);

                auto gk_yy_xxxzzz = primBuffer.data(gkoff + 168 * idx + 93);

                auto gk_yy_xxyyyy = primBuffer.data(gkoff + 168 * idx + 94);

                auto gk_yy_xxyyyz = primBuffer.data(gkoff + 168 * idx + 95);

                auto gk_yy_xxyyzz = primBuffer.data(gkoff + 168 * idx + 96);

                auto gk_yy_xxyzzz = primBuffer.data(gkoff + 168 * idx + 97);

                auto gk_yy_xxzzzz = primBuffer.data(gkoff + 168 * idx + 98);

                auto gk_yy_xyyyyy = primBuffer.data(gkoff + 168 * idx + 99);

                auto gk_yy_xyyyyz = primBuffer.data(gkoff + 168 * idx + 100);

                auto gk_yy_xyyyzz = primBuffer.data(gkoff + 168 * idx + 101);

                auto gk_yy_xyyzzz = primBuffer.data(gkoff + 168 * idx + 102);

                auto gk_yy_xyzzzz = primBuffer.data(gkoff + 168 * idx + 103);

                auto gk_yy_xzzzzz = primBuffer.data(gkoff + 168 * idx + 104);

                auto gk_yy_yyyyyy = primBuffer.data(gkoff + 168 * idx + 105);

                auto gk_yy_yyyyyz = primBuffer.data(gkoff + 168 * idx + 106);

                auto gk_yy_yyyyzz = primBuffer.data(gkoff + 168 * idx + 107);

                auto gk_yy_yyyzzz = primBuffer.data(gkoff + 168 * idx + 108);

                auto gk_yy_yyzzzz = primBuffer.data(gkoff + 168 * idx + 109);

                auto gk_yy_yzzzzz = primBuffer.data(gkoff + 168 * idx + 110);

                auto gk_yy_zzzzzz = primBuffer.data(gkoff + 168 * idx + 111);

                auto gk_yz_xxxxxx = primBuffer.data(gkoff + 168 * idx + 112);

                auto gk_yz_xxxxxy = primBuffer.data(gkoff + 168 * idx + 113);

                auto gk_yz_xxxxxz = primBuffer.data(gkoff + 168 * idx + 114);

                auto gk_yz_xxxxyy = primBuffer.data(gkoff + 168 * idx + 115);

                auto gk_yz_xxxxyz = primBuffer.data(gkoff + 168 * idx + 116);

                auto gk_yz_xxxxzz = primBuffer.data(gkoff + 168 * idx + 117);

                auto gk_yz_xxxyyy = primBuffer.data(gkoff + 168 * idx + 118);

                auto gk_yz_xxxyyz = primBuffer.data(gkoff + 168 * idx + 119);

                auto gk_yz_xxxyzz = primBuffer.data(gkoff + 168 * idx + 120);

                auto gk_yz_xxxzzz = primBuffer.data(gkoff + 168 * idx + 121);

                auto gk_yz_xxyyyy = primBuffer.data(gkoff + 168 * idx + 122);

                auto gk_yz_xxyyyz = primBuffer.data(gkoff + 168 * idx + 123);

                auto gk_yz_xxyyzz = primBuffer.data(gkoff + 168 * idx + 124);

                auto gk_yz_xxyzzz = primBuffer.data(gkoff + 168 * idx + 125);

                auto gk_yz_xxzzzz = primBuffer.data(gkoff + 168 * idx + 126);

                auto gk_yz_xyyyyy = primBuffer.data(gkoff + 168 * idx + 127);

                auto gk_yz_xyyyyz = primBuffer.data(gkoff + 168 * idx + 128);

                auto gk_yz_xyyyzz = primBuffer.data(gkoff + 168 * idx + 129);

                auto gk_yz_xyyzzz = primBuffer.data(gkoff + 168 * idx + 130);

                auto gk_yz_xyzzzz = primBuffer.data(gkoff + 168 * idx + 131);

                auto gk_yz_xzzzzz = primBuffer.data(gkoff + 168 * idx + 132);

                auto gk_yz_yyyyyy = primBuffer.data(gkoff + 168 * idx + 133);

                auto gk_yz_yyyyyz = primBuffer.data(gkoff + 168 * idx + 134);

                auto gk_yz_yyyyzz = primBuffer.data(gkoff + 168 * idx + 135);

                auto gk_yz_yyyzzz = primBuffer.data(gkoff + 168 * idx + 136);

                auto gk_yz_yyzzzz = primBuffer.data(gkoff + 168 * idx + 137);

                auto gk_yz_yzzzzz = primBuffer.data(gkoff + 168 * idx + 138);

                auto gk_yz_zzzzzz = primBuffer.data(gkoff + 168 * idx + 139);

                auto gk_zz_xxxxxx = primBuffer.data(gkoff + 168 * idx + 140);

                auto gk_zz_xxxxxy = primBuffer.data(gkoff + 168 * idx + 141);

                auto gk_zz_xxxxxz = primBuffer.data(gkoff + 168 * idx + 142);

                auto gk_zz_xxxxyy = primBuffer.data(gkoff + 168 * idx + 143);

                auto gk_zz_xxxxyz = primBuffer.data(gkoff + 168 * idx + 144);

                auto gk_zz_xxxxzz = primBuffer.data(gkoff + 168 * idx + 145);

                auto gk_zz_xxxyyy = primBuffer.data(gkoff + 168 * idx + 146);

                auto gk_zz_xxxyyz = primBuffer.data(gkoff + 168 * idx + 147);

                auto gk_zz_xxxyzz = primBuffer.data(gkoff + 168 * idx + 148);

                auto gk_zz_xxxzzz = primBuffer.data(gkoff + 168 * idx + 149);

                auto gk_zz_xxyyyy = primBuffer.data(gkoff + 168 * idx + 150);

                auto gk_zz_xxyyyz = primBuffer.data(gkoff + 168 * idx + 151);

                auto gk_zz_xxyyzz = primBuffer.data(gkoff + 168 * idx + 152);

                auto gk_zz_xxyzzz = primBuffer.data(gkoff + 168 * idx + 153);

                auto gk_zz_xxzzzz = primBuffer.data(gkoff + 168 * idx + 154);

                auto gk_zz_xyyyyy = primBuffer.data(gkoff + 168 * idx + 155);

                auto gk_zz_xyyyyz = primBuffer.data(gkoff + 168 * idx + 156);

                auto gk_zz_xyyyzz = primBuffer.data(gkoff + 168 * idx + 157);

                auto gk_zz_xyyzzz = primBuffer.data(gkoff + 168 * idx + 158);

                auto gk_zz_xyzzzz = primBuffer.data(gkoff + 168 * idx + 159);

                auto gk_zz_xzzzzz = primBuffer.data(gkoff + 168 * idx + 160);

                auto gk_zz_yyyyyy = primBuffer.data(gkoff + 168 * idx + 161);

                auto gk_zz_yyyyyz = primBuffer.data(gkoff + 168 * idx + 162);

                auto gk_zz_yyyyzz = primBuffer.data(gkoff + 168 * idx + 163);

                auto gk_zz_yyyzzz = primBuffer.data(gkoff + 168 * idx + 164);

                auto gk_zz_yyzzzz = primBuffer.data(gkoff + 168 * idx + 165);

                auto gk_zz_yzzzzz = primBuffer.data(gkoff + 168 * idx + 166);

                auto gk_zz_zzzzzz = primBuffer.data(gkoff + 168 * idx + 167);

                // set up pointers to (P|g(r,r')|SK)^(m) integrals

                auto g20_x_xxxxxxx = primBuffer.data(g20off + 108 * idx);

                auto g20_x_xxxxxxy = primBuffer.data(g20off + 108 * idx + 1);

                auto g20_x_xxxxxxz = primBuffer.data(g20off + 108 * idx + 2);

                auto g20_x_xxxxxyy = primBuffer.data(g20off + 108 * idx + 3);

                auto g20_x_xxxxxyz = primBuffer.data(g20off + 108 * idx + 4);

                auto g20_x_xxxxxzz = primBuffer.data(g20off + 108 * idx + 5);

                auto g20_x_xxxxyyy = primBuffer.data(g20off + 108 * idx + 6);

                auto g20_x_xxxxyyz = primBuffer.data(g20off + 108 * idx + 7);

                auto g20_x_xxxxyzz = primBuffer.data(g20off + 108 * idx + 8);

                auto g20_x_xxxxzzz = primBuffer.data(g20off + 108 * idx + 9);

                auto g20_x_xxxyyyy = primBuffer.data(g20off + 108 * idx + 10);

                auto g20_x_xxxyyyz = primBuffer.data(g20off + 108 * idx + 11);

                auto g20_x_xxxyyzz = primBuffer.data(g20off + 108 * idx + 12);

                auto g20_x_xxxyzzz = primBuffer.data(g20off + 108 * idx + 13);

                auto g20_x_xxxzzzz = primBuffer.data(g20off + 108 * idx + 14);

                auto g20_x_xxyyyyy = primBuffer.data(g20off + 108 * idx + 15);

                auto g20_x_xxyyyyz = primBuffer.data(g20off + 108 * idx + 16);

                auto g20_x_xxyyyzz = primBuffer.data(g20off + 108 * idx + 17);

                auto g20_x_xxyyzzz = primBuffer.data(g20off + 108 * idx + 18);

                auto g20_x_xxyzzzz = primBuffer.data(g20off + 108 * idx + 19);

                auto g20_x_xxzzzzz = primBuffer.data(g20off + 108 * idx + 20);

                auto g20_x_xyyyyyy = primBuffer.data(g20off + 108 * idx + 21);

                auto g20_x_xyyyyyz = primBuffer.data(g20off + 108 * idx + 22);

                auto g20_x_xyyyyzz = primBuffer.data(g20off + 108 * idx + 23);

                auto g20_x_xyyyzzz = primBuffer.data(g20off + 108 * idx + 24);

                auto g20_x_xyyzzzz = primBuffer.data(g20off + 108 * idx + 25);

                auto g20_x_xyzzzzz = primBuffer.data(g20off + 108 * idx + 26);

                auto g20_x_xzzzzzz = primBuffer.data(g20off + 108 * idx + 27);

                auto g20_x_yyyyyyy = primBuffer.data(g20off + 108 * idx + 28);

                auto g20_x_yyyyyyz = primBuffer.data(g20off + 108 * idx + 29);

                auto g20_x_yyyyyzz = primBuffer.data(g20off + 108 * idx + 30);

                auto g20_x_yyyyzzz = primBuffer.data(g20off + 108 * idx + 31);

                auto g20_x_yyyzzzz = primBuffer.data(g20off + 108 * idx + 32);

                auto g20_x_yyzzzzz = primBuffer.data(g20off + 108 * idx + 33);

                auto g20_x_yzzzzzz = primBuffer.data(g20off + 108 * idx + 34);

                auto g20_x_zzzzzzz = primBuffer.data(g20off + 108 * idx + 35);

                auto g20_y_xxxxxxx = primBuffer.data(g20off + 108 * idx + 36);

                auto g20_y_xxxxxxy = primBuffer.data(g20off + 108 * idx + 37);

                auto g20_y_xxxxxxz = primBuffer.data(g20off + 108 * idx + 38);

                auto g20_y_xxxxxyy = primBuffer.data(g20off + 108 * idx + 39);

                auto g20_y_xxxxxyz = primBuffer.data(g20off + 108 * idx + 40);

                auto g20_y_xxxxxzz = primBuffer.data(g20off + 108 * idx + 41);

                auto g20_y_xxxxyyy = primBuffer.data(g20off + 108 * idx + 42);

                auto g20_y_xxxxyyz = primBuffer.data(g20off + 108 * idx + 43);

                auto g20_y_xxxxyzz = primBuffer.data(g20off + 108 * idx + 44);

                auto g20_y_xxxxzzz = primBuffer.data(g20off + 108 * idx + 45);

                auto g20_y_xxxyyyy = primBuffer.data(g20off + 108 * idx + 46);

                auto g20_y_xxxyyyz = primBuffer.data(g20off + 108 * idx + 47);

                auto g20_y_xxxyyzz = primBuffer.data(g20off + 108 * idx + 48);

                auto g20_y_xxxyzzz = primBuffer.data(g20off + 108 * idx + 49);

                auto g20_y_xxxzzzz = primBuffer.data(g20off + 108 * idx + 50);

                auto g20_y_xxyyyyy = primBuffer.data(g20off + 108 * idx + 51);

                auto g20_y_xxyyyyz = primBuffer.data(g20off + 108 * idx + 52);

                auto g20_y_xxyyyzz = primBuffer.data(g20off + 108 * idx + 53);

                auto g20_y_xxyyzzz = primBuffer.data(g20off + 108 * idx + 54);

                auto g20_y_xxyzzzz = primBuffer.data(g20off + 108 * idx + 55);

                auto g20_y_xxzzzzz = primBuffer.data(g20off + 108 * idx + 56);

                auto g20_y_xyyyyyy = primBuffer.data(g20off + 108 * idx + 57);

                auto g20_y_xyyyyyz = primBuffer.data(g20off + 108 * idx + 58);

                auto g20_y_xyyyyzz = primBuffer.data(g20off + 108 * idx + 59);

                auto g20_y_xyyyzzz = primBuffer.data(g20off + 108 * idx + 60);

                auto g20_y_xyyzzzz = primBuffer.data(g20off + 108 * idx + 61);

                auto g20_y_xyzzzzz = primBuffer.data(g20off + 108 * idx + 62);

                auto g20_y_xzzzzzz = primBuffer.data(g20off + 108 * idx + 63);

                auto g20_y_yyyyyyy = primBuffer.data(g20off + 108 * idx + 64);

                auto g20_y_yyyyyyz = primBuffer.data(g20off + 108 * idx + 65);

                auto g20_y_yyyyyzz = primBuffer.data(g20off + 108 * idx + 66);

                auto g20_y_yyyyzzz = primBuffer.data(g20off + 108 * idx + 67);

                auto g20_y_yyyzzzz = primBuffer.data(g20off + 108 * idx + 68);

                auto g20_y_yyzzzzz = primBuffer.data(g20off + 108 * idx + 69);

                auto g20_y_yzzzzzz = primBuffer.data(g20off + 108 * idx + 70);

                auto g20_y_zzzzzzz = primBuffer.data(g20off + 108 * idx + 71);

                auto g20_z_xxxxxxx = primBuffer.data(g20off + 108 * idx + 72);

                auto g20_z_xxxxxxy = primBuffer.data(g20off + 108 * idx + 73);

                auto g20_z_xxxxxxz = primBuffer.data(g20off + 108 * idx + 74);

                auto g20_z_xxxxxyy = primBuffer.data(g20off + 108 * idx + 75);

                auto g20_z_xxxxxyz = primBuffer.data(g20off + 108 * idx + 76);

                auto g20_z_xxxxxzz = primBuffer.data(g20off + 108 * idx + 77);

                auto g20_z_xxxxyyy = primBuffer.data(g20off + 108 * idx + 78);

                auto g20_z_xxxxyyz = primBuffer.data(g20off + 108 * idx + 79);

                auto g20_z_xxxxyzz = primBuffer.data(g20off + 108 * idx + 80);

                auto g20_z_xxxxzzz = primBuffer.data(g20off + 108 * idx + 81);

                auto g20_z_xxxyyyy = primBuffer.data(g20off + 108 * idx + 82);

                auto g20_z_xxxyyyz = primBuffer.data(g20off + 108 * idx + 83);

                auto g20_z_xxxyyzz = primBuffer.data(g20off + 108 * idx + 84);

                auto g20_z_xxxyzzz = primBuffer.data(g20off + 108 * idx + 85);

                auto g20_z_xxxzzzz = primBuffer.data(g20off + 108 * idx + 86);

                auto g20_z_xxyyyyy = primBuffer.data(g20off + 108 * idx + 87);

                auto g20_z_xxyyyyz = primBuffer.data(g20off + 108 * idx + 88);

                auto g20_z_xxyyyzz = primBuffer.data(g20off + 108 * idx + 89);

                auto g20_z_xxyyzzz = primBuffer.data(g20off + 108 * idx + 90);

                auto g20_z_xxyzzzz = primBuffer.data(g20off + 108 * idx + 91);

                auto g20_z_xxzzzzz = primBuffer.data(g20off + 108 * idx + 92);

                auto g20_z_xyyyyyy = primBuffer.data(g20off + 108 * idx + 93);

                auto g20_z_xyyyyyz = primBuffer.data(g20off + 108 * idx + 94);

                auto g20_z_xyyyyzz = primBuffer.data(g20off + 108 * idx + 95);

                auto g20_z_xyyyzzz = primBuffer.data(g20off + 108 * idx + 96);

                auto g20_z_xyyzzzz = primBuffer.data(g20off + 108 * idx + 97);

                auto g20_z_xyzzzzz = primBuffer.data(g20off + 108 * idx + 98);

                auto g20_z_xzzzzzz = primBuffer.data(g20off + 108 * idx + 99);

                auto g20_z_yyyyyyy = primBuffer.data(g20off + 108 * idx + 100);

                auto g20_z_yyyyyyz = primBuffer.data(g20off + 108 * idx + 101);

                auto g20_z_yyyyyzz = primBuffer.data(g20off + 108 * idx + 102);

                auto g20_z_yyyyzzz = primBuffer.data(g20off + 108 * idx + 103);

                auto g20_z_yyyzzzz = primBuffer.data(g20off + 108 * idx + 104);

                auto g20_z_yyzzzzz = primBuffer.data(g20off + 108 * idx + 105);

                auto g20_z_yzzzzzz = primBuffer.data(g20off + 108 * idx + 106);

                auto g20_z_zzzzzzz = primBuffer.data(g20off + 108 * idx + 107);

                // set up pointers to (P|g(r,r')|SK)^(m+1) integrals

                auto g21_x_xxxxxxx = primBuffer.data(g21off + 108 * idx);

                auto g21_x_xxxxxxy = primBuffer.data(g21off + 108 * idx + 1);

                auto g21_x_xxxxxxz = primBuffer.data(g21off + 108 * idx + 2);

                auto g21_x_xxxxxyy = primBuffer.data(g21off + 108 * idx + 3);

                auto g21_x_xxxxxyz = primBuffer.data(g21off + 108 * idx + 4);

                auto g21_x_xxxxxzz = primBuffer.data(g21off + 108 * idx + 5);

                auto g21_x_xxxxyyy = primBuffer.data(g21off + 108 * idx + 6);

                auto g21_x_xxxxyyz = primBuffer.data(g21off + 108 * idx + 7);

                auto g21_x_xxxxyzz = primBuffer.data(g21off + 108 * idx + 8);

                auto g21_x_xxxxzzz = primBuffer.data(g21off + 108 * idx + 9);

                auto g21_x_xxxyyyy = primBuffer.data(g21off + 108 * idx + 10);

                auto g21_x_xxxyyyz = primBuffer.data(g21off + 108 * idx + 11);

                auto g21_x_xxxyyzz = primBuffer.data(g21off + 108 * idx + 12);

                auto g21_x_xxxyzzz = primBuffer.data(g21off + 108 * idx + 13);

                auto g21_x_xxxzzzz = primBuffer.data(g21off + 108 * idx + 14);

                auto g21_x_xxyyyyy = primBuffer.data(g21off + 108 * idx + 15);

                auto g21_x_xxyyyyz = primBuffer.data(g21off + 108 * idx + 16);

                auto g21_x_xxyyyzz = primBuffer.data(g21off + 108 * idx + 17);

                auto g21_x_xxyyzzz = primBuffer.data(g21off + 108 * idx + 18);

                auto g21_x_xxyzzzz = primBuffer.data(g21off + 108 * idx + 19);

                auto g21_x_xxzzzzz = primBuffer.data(g21off + 108 * idx + 20);

                auto g21_x_xyyyyyy = primBuffer.data(g21off + 108 * idx + 21);

                auto g21_x_xyyyyyz = primBuffer.data(g21off + 108 * idx + 22);

                auto g21_x_xyyyyzz = primBuffer.data(g21off + 108 * idx + 23);

                auto g21_x_xyyyzzz = primBuffer.data(g21off + 108 * idx + 24);

                auto g21_x_xyyzzzz = primBuffer.data(g21off + 108 * idx + 25);

                auto g21_x_xyzzzzz = primBuffer.data(g21off + 108 * idx + 26);

                auto g21_x_xzzzzzz = primBuffer.data(g21off + 108 * idx + 27);

                auto g21_x_yyyyyyy = primBuffer.data(g21off + 108 * idx + 28);

                auto g21_x_yyyyyyz = primBuffer.data(g21off + 108 * idx + 29);

                auto g21_x_yyyyyzz = primBuffer.data(g21off + 108 * idx + 30);

                auto g21_x_yyyyzzz = primBuffer.data(g21off + 108 * idx + 31);

                auto g21_x_yyyzzzz = primBuffer.data(g21off + 108 * idx + 32);

                auto g21_x_yyzzzzz = primBuffer.data(g21off + 108 * idx + 33);

                auto g21_x_yzzzzzz = primBuffer.data(g21off + 108 * idx + 34);

                auto g21_x_zzzzzzz = primBuffer.data(g21off + 108 * idx + 35);

                auto g21_y_xxxxxxx = primBuffer.data(g21off + 108 * idx + 36);

                auto g21_y_xxxxxxy = primBuffer.data(g21off + 108 * idx + 37);

                auto g21_y_xxxxxxz = primBuffer.data(g21off + 108 * idx + 38);

                auto g21_y_xxxxxyy = primBuffer.data(g21off + 108 * idx + 39);

                auto g21_y_xxxxxyz = primBuffer.data(g21off + 108 * idx + 40);

                auto g21_y_xxxxxzz = primBuffer.data(g21off + 108 * idx + 41);

                auto g21_y_xxxxyyy = primBuffer.data(g21off + 108 * idx + 42);

                auto g21_y_xxxxyyz = primBuffer.data(g21off + 108 * idx + 43);

                auto g21_y_xxxxyzz = primBuffer.data(g21off + 108 * idx + 44);

                auto g21_y_xxxxzzz = primBuffer.data(g21off + 108 * idx + 45);

                auto g21_y_xxxyyyy = primBuffer.data(g21off + 108 * idx + 46);

                auto g21_y_xxxyyyz = primBuffer.data(g21off + 108 * idx + 47);

                auto g21_y_xxxyyzz = primBuffer.data(g21off + 108 * idx + 48);

                auto g21_y_xxxyzzz = primBuffer.data(g21off + 108 * idx + 49);

                auto g21_y_xxxzzzz = primBuffer.data(g21off + 108 * idx + 50);

                auto g21_y_xxyyyyy = primBuffer.data(g21off + 108 * idx + 51);

                auto g21_y_xxyyyyz = primBuffer.data(g21off + 108 * idx + 52);

                auto g21_y_xxyyyzz = primBuffer.data(g21off + 108 * idx + 53);

                auto g21_y_xxyyzzz = primBuffer.data(g21off + 108 * idx + 54);

                auto g21_y_xxyzzzz = primBuffer.data(g21off + 108 * idx + 55);

                auto g21_y_xxzzzzz = primBuffer.data(g21off + 108 * idx + 56);

                auto g21_y_xyyyyyy = primBuffer.data(g21off + 108 * idx + 57);

                auto g21_y_xyyyyyz = primBuffer.data(g21off + 108 * idx + 58);

                auto g21_y_xyyyyzz = primBuffer.data(g21off + 108 * idx + 59);

                auto g21_y_xyyyzzz = primBuffer.data(g21off + 108 * idx + 60);

                auto g21_y_xyyzzzz = primBuffer.data(g21off + 108 * idx + 61);

                auto g21_y_xyzzzzz = primBuffer.data(g21off + 108 * idx + 62);

                auto g21_y_xzzzzzz = primBuffer.data(g21off + 108 * idx + 63);

                auto g21_y_yyyyyyy = primBuffer.data(g21off + 108 * idx + 64);

                auto g21_y_yyyyyyz = primBuffer.data(g21off + 108 * idx + 65);

                auto g21_y_yyyyyzz = primBuffer.data(g21off + 108 * idx + 66);

                auto g21_y_yyyyzzz = primBuffer.data(g21off + 108 * idx + 67);

                auto g21_y_yyyzzzz = primBuffer.data(g21off + 108 * idx + 68);

                auto g21_y_yyzzzzz = primBuffer.data(g21off + 108 * idx + 69);

                auto g21_y_yzzzzzz = primBuffer.data(g21off + 108 * idx + 70);

                auto g21_y_zzzzzzz = primBuffer.data(g21off + 108 * idx + 71);

                auto g21_z_xxxxxxx = primBuffer.data(g21off + 108 * idx + 72);

                auto g21_z_xxxxxxy = primBuffer.data(g21off + 108 * idx + 73);

                auto g21_z_xxxxxxz = primBuffer.data(g21off + 108 * idx + 74);

                auto g21_z_xxxxxyy = primBuffer.data(g21off + 108 * idx + 75);

                auto g21_z_xxxxxyz = primBuffer.data(g21off + 108 * idx + 76);

                auto g21_z_xxxxxzz = primBuffer.data(g21off + 108 * idx + 77);

                auto g21_z_xxxxyyy = primBuffer.data(g21off + 108 * idx + 78);

                auto g21_z_xxxxyyz = primBuffer.data(g21off + 108 * idx + 79);

                auto g21_z_xxxxyzz = primBuffer.data(g21off + 108 * idx + 80);

                auto g21_z_xxxxzzz = primBuffer.data(g21off + 108 * idx + 81);

                auto g21_z_xxxyyyy = primBuffer.data(g21off + 108 * idx + 82);

                auto g21_z_xxxyyyz = primBuffer.data(g21off + 108 * idx + 83);

                auto g21_z_xxxyyzz = primBuffer.data(g21off + 108 * idx + 84);

                auto g21_z_xxxyzzz = primBuffer.data(g21off + 108 * idx + 85);

                auto g21_z_xxxzzzz = primBuffer.data(g21off + 108 * idx + 86);

                auto g21_z_xxyyyyy = primBuffer.data(g21off + 108 * idx + 87);

                auto g21_z_xxyyyyz = primBuffer.data(g21off + 108 * idx + 88);

                auto g21_z_xxyyyzz = primBuffer.data(g21off + 108 * idx + 89);

                auto g21_z_xxyyzzz = primBuffer.data(g21off + 108 * idx + 90);

                auto g21_z_xxyzzzz = primBuffer.data(g21off + 108 * idx + 91);

                auto g21_z_xxzzzzz = primBuffer.data(g21off + 108 * idx + 92);

                auto g21_z_xyyyyyy = primBuffer.data(g21off + 108 * idx + 93);

                auto g21_z_xyyyyyz = primBuffer.data(g21off + 108 * idx + 94);

                auto g21_z_xyyyyzz = primBuffer.data(g21off + 108 * idx + 95);

                auto g21_z_xyyyzzz = primBuffer.data(g21off + 108 * idx + 96);

                auto g21_z_xyyzzzz = primBuffer.data(g21off + 108 * idx + 97);

                auto g21_z_xyzzzzz = primBuffer.data(g21off + 108 * idx + 98);

                auto g21_z_xzzzzzz = primBuffer.data(g21off + 108 * idx + 99);

                auto g21_z_yyyyyyy = primBuffer.data(g21off + 108 * idx + 100);

                auto g21_z_yyyyyyz = primBuffer.data(g21off + 108 * idx + 101);

                auto g21_z_yyyyyzz = primBuffer.data(g21off + 108 * idx + 102);

                auto g21_z_yyyyzzz = primBuffer.data(g21off + 108 * idx + 103);

                auto g21_z_yyyzzzz = primBuffer.data(g21off + 108 * idx + 104);

                auto g21_z_yyzzzzz = primBuffer.data(g21off + 108 * idx + 105);

                auto g21_z_yzzzzzz = primBuffer.data(g21off + 108 * idx + 106);

                auto g21_z_zzzzzzz = primBuffer.data(g21off + 108 * idx + 107);

                // set up pointers to (D|g(r,r')|SK)^(m+1) integrals

                auto g11_xx_xxxxxxx = primBuffer.data(g11off + 216 * idx);

                auto g11_xx_xxxxxxy = primBuffer.data(g11off + 216 * idx + 1);

                auto g11_xx_xxxxxxz = primBuffer.data(g11off + 216 * idx + 2);

                auto g11_xx_xxxxxyy = primBuffer.data(g11off + 216 * idx + 3);

                auto g11_xx_xxxxxyz = primBuffer.data(g11off + 216 * idx + 4);

                auto g11_xx_xxxxxzz = primBuffer.data(g11off + 216 * idx + 5);

                auto g11_xx_xxxxyyy = primBuffer.data(g11off + 216 * idx + 6);

                auto g11_xx_xxxxyyz = primBuffer.data(g11off + 216 * idx + 7);

                auto g11_xx_xxxxyzz = primBuffer.data(g11off + 216 * idx + 8);

                auto g11_xx_xxxxzzz = primBuffer.data(g11off + 216 * idx + 9);

                auto g11_xx_xxxyyyy = primBuffer.data(g11off + 216 * idx + 10);

                auto g11_xx_xxxyyyz = primBuffer.data(g11off + 216 * idx + 11);

                auto g11_xx_xxxyyzz = primBuffer.data(g11off + 216 * idx + 12);

                auto g11_xx_xxxyzzz = primBuffer.data(g11off + 216 * idx + 13);

                auto g11_xx_xxxzzzz = primBuffer.data(g11off + 216 * idx + 14);

                auto g11_xx_xxyyyyy = primBuffer.data(g11off + 216 * idx + 15);

                auto g11_xx_xxyyyyz = primBuffer.data(g11off + 216 * idx + 16);

                auto g11_xx_xxyyyzz = primBuffer.data(g11off + 216 * idx + 17);

                auto g11_xx_xxyyzzz = primBuffer.data(g11off + 216 * idx + 18);

                auto g11_xx_xxyzzzz = primBuffer.data(g11off + 216 * idx + 19);

                auto g11_xx_xxzzzzz = primBuffer.data(g11off + 216 * idx + 20);

                auto g11_xx_xyyyyyy = primBuffer.data(g11off + 216 * idx + 21);

                auto g11_xx_xyyyyyz = primBuffer.data(g11off + 216 * idx + 22);

                auto g11_xx_xyyyyzz = primBuffer.data(g11off + 216 * idx + 23);

                auto g11_xx_xyyyzzz = primBuffer.data(g11off + 216 * idx + 24);

                auto g11_xx_xyyzzzz = primBuffer.data(g11off + 216 * idx + 25);

                auto g11_xx_xyzzzzz = primBuffer.data(g11off + 216 * idx + 26);

                auto g11_xx_xzzzzzz = primBuffer.data(g11off + 216 * idx + 27);

                auto g11_xx_yyyyyyy = primBuffer.data(g11off + 216 * idx + 28);

                auto g11_xx_yyyyyyz = primBuffer.data(g11off + 216 * idx + 29);

                auto g11_xx_yyyyyzz = primBuffer.data(g11off + 216 * idx + 30);

                auto g11_xx_yyyyzzz = primBuffer.data(g11off + 216 * idx + 31);

                auto g11_xx_yyyzzzz = primBuffer.data(g11off + 216 * idx + 32);

                auto g11_xx_yyzzzzz = primBuffer.data(g11off + 216 * idx + 33);

                auto g11_xx_yzzzzzz = primBuffer.data(g11off + 216 * idx + 34);

                auto g11_xx_zzzzzzz = primBuffer.data(g11off + 216 * idx + 35);

                auto g11_xy_xxxxxxx = primBuffer.data(g11off + 216 * idx + 36);

                auto g11_xy_xxxxxxy = primBuffer.data(g11off + 216 * idx + 37);

                auto g11_xy_xxxxxxz = primBuffer.data(g11off + 216 * idx + 38);

                auto g11_xy_xxxxxyy = primBuffer.data(g11off + 216 * idx + 39);

                auto g11_xy_xxxxxyz = primBuffer.data(g11off + 216 * idx + 40);

                auto g11_xy_xxxxxzz = primBuffer.data(g11off + 216 * idx + 41);

                auto g11_xy_xxxxyyy = primBuffer.data(g11off + 216 * idx + 42);

                auto g11_xy_xxxxyyz = primBuffer.data(g11off + 216 * idx + 43);

                auto g11_xy_xxxxyzz = primBuffer.data(g11off + 216 * idx + 44);

                auto g11_xy_xxxxzzz = primBuffer.data(g11off + 216 * idx + 45);

                auto g11_xy_xxxyyyy = primBuffer.data(g11off + 216 * idx + 46);

                auto g11_xy_xxxyyyz = primBuffer.data(g11off + 216 * idx + 47);

                auto g11_xy_xxxyyzz = primBuffer.data(g11off + 216 * idx + 48);

                auto g11_xy_xxxyzzz = primBuffer.data(g11off + 216 * idx + 49);

                auto g11_xy_xxxzzzz = primBuffer.data(g11off + 216 * idx + 50);

                auto g11_xy_xxyyyyy = primBuffer.data(g11off + 216 * idx + 51);

                auto g11_xy_xxyyyyz = primBuffer.data(g11off + 216 * idx + 52);

                auto g11_xy_xxyyyzz = primBuffer.data(g11off + 216 * idx + 53);

                auto g11_xy_xxyyzzz = primBuffer.data(g11off + 216 * idx + 54);

                auto g11_xy_xxyzzzz = primBuffer.data(g11off + 216 * idx + 55);

                auto g11_xy_xxzzzzz = primBuffer.data(g11off + 216 * idx + 56);

                auto g11_xy_xyyyyyy = primBuffer.data(g11off + 216 * idx + 57);

                auto g11_xy_xyyyyyz = primBuffer.data(g11off + 216 * idx + 58);

                auto g11_xy_xyyyyzz = primBuffer.data(g11off + 216 * idx + 59);

                auto g11_xy_xyyyzzz = primBuffer.data(g11off + 216 * idx + 60);

                auto g11_xy_xyyzzzz = primBuffer.data(g11off + 216 * idx + 61);

                auto g11_xy_xyzzzzz = primBuffer.data(g11off + 216 * idx + 62);

                auto g11_xy_xzzzzzz = primBuffer.data(g11off + 216 * idx + 63);

                auto g11_xy_yyyyyyy = primBuffer.data(g11off + 216 * idx + 64);

                auto g11_xy_yyyyyyz = primBuffer.data(g11off + 216 * idx + 65);

                auto g11_xy_yyyyyzz = primBuffer.data(g11off + 216 * idx + 66);

                auto g11_xy_yyyyzzz = primBuffer.data(g11off + 216 * idx + 67);

                auto g11_xy_yyyzzzz = primBuffer.data(g11off + 216 * idx + 68);

                auto g11_xy_yyzzzzz = primBuffer.data(g11off + 216 * idx + 69);

                auto g11_xy_yzzzzzz = primBuffer.data(g11off + 216 * idx + 70);

                auto g11_xy_zzzzzzz = primBuffer.data(g11off + 216 * idx + 71);

                auto g11_xz_xxxxxxx = primBuffer.data(g11off + 216 * idx + 72);

                auto g11_xz_xxxxxxy = primBuffer.data(g11off + 216 * idx + 73);

                auto g11_xz_xxxxxxz = primBuffer.data(g11off + 216 * idx + 74);

                auto g11_xz_xxxxxyy = primBuffer.data(g11off + 216 * idx + 75);

                auto g11_xz_xxxxxyz = primBuffer.data(g11off + 216 * idx + 76);

                auto g11_xz_xxxxxzz = primBuffer.data(g11off + 216 * idx + 77);

                auto g11_xz_xxxxyyy = primBuffer.data(g11off + 216 * idx + 78);

                auto g11_xz_xxxxyyz = primBuffer.data(g11off + 216 * idx + 79);

                auto g11_xz_xxxxyzz = primBuffer.data(g11off + 216 * idx + 80);

                auto g11_xz_xxxxzzz = primBuffer.data(g11off + 216 * idx + 81);

                auto g11_xz_xxxyyyy = primBuffer.data(g11off + 216 * idx + 82);

                auto g11_xz_xxxyyyz = primBuffer.data(g11off + 216 * idx + 83);

                auto g11_xz_xxxyyzz = primBuffer.data(g11off + 216 * idx + 84);

                auto g11_xz_xxxyzzz = primBuffer.data(g11off + 216 * idx + 85);

                auto g11_xz_xxxzzzz = primBuffer.data(g11off + 216 * idx + 86);

                auto g11_xz_xxyyyyy = primBuffer.data(g11off + 216 * idx + 87);

                auto g11_xz_xxyyyyz = primBuffer.data(g11off + 216 * idx + 88);

                auto g11_xz_xxyyyzz = primBuffer.data(g11off + 216 * idx + 89);

                auto g11_xz_xxyyzzz = primBuffer.data(g11off + 216 * idx + 90);

                auto g11_xz_xxyzzzz = primBuffer.data(g11off + 216 * idx + 91);

                auto g11_xz_xxzzzzz = primBuffer.data(g11off + 216 * idx + 92);

                auto g11_xz_xyyyyyy = primBuffer.data(g11off + 216 * idx + 93);

                auto g11_xz_xyyyyyz = primBuffer.data(g11off + 216 * idx + 94);

                auto g11_xz_xyyyyzz = primBuffer.data(g11off + 216 * idx + 95);

                auto g11_xz_xyyyzzz = primBuffer.data(g11off + 216 * idx + 96);

                auto g11_xz_xyyzzzz = primBuffer.data(g11off + 216 * idx + 97);

                auto g11_xz_xyzzzzz = primBuffer.data(g11off + 216 * idx + 98);

                auto g11_xz_xzzzzzz = primBuffer.data(g11off + 216 * idx + 99);

                auto g11_xz_yyyyyyy = primBuffer.data(g11off + 216 * idx + 100);

                auto g11_xz_yyyyyyz = primBuffer.data(g11off + 216 * idx + 101);

                auto g11_xz_yyyyyzz = primBuffer.data(g11off + 216 * idx + 102);

                auto g11_xz_yyyyzzz = primBuffer.data(g11off + 216 * idx + 103);

                auto g11_xz_yyyzzzz = primBuffer.data(g11off + 216 * idx + 104);

                auto g11_xz_yyzzzzz = primBuffer.data(g11off + 216 * idx + 105);

                auto g11_xz_yzzzzzz = primBuffer.data(g11off + 216 * idx + 106);

                auto g11_xz_zzzzzzz = primBuffer.data(g11off + 216 * idx + 107);

                auto g11_yy_xxxxxxx = primBuffer.data(g11off + 216 * idx + 108);

                auto g11_yy_xxxxxxy = primBuffer.data(g11off + 216 * idx + 109);

                auto g11_yy_xxxxxxz = primBuffer.data(g11off + 216 * idx + 110);

                auto g11_yy_xxxxxyy = primBuffer.data(g11off + 216 * idx + 111);

                auto g11_yy_xxxxxyz = primBuffer.data(g11off + 216 * idx + 112);

                auto g11_yy_xxxxxzz = primBuffer.data(g11off + 216 * idx + 113);

                auto g11_yy_xxxxyyy = primBuffer.data(g11off + 216 * idx + 114);

                auto g11_yy_xxxxyyz = primBuffer.data(g11off + 216 * idx + 115);

                auto g11_yy_xxxxyzz = primBuffer.data(g11off + 216 * idx + 116);

                auto g11_yy_xxxxzzz = primBuffer.data(g11off + 216 * idx + 117);

                auto g11_yy_xxxyyyy = primBuffer.data(g11off + 216 * idx + 118);

                auto g11_yy_xxxyyyz = primBuffer.data(g11off + 216 * idx + 119);

                auto g11_yy_xxxyyzz = primBuffer.data(g11off + 216 * idx + 120);

                auto g11_yy_xxxyzzz = primBuffer.data(g11off + 216 * idx + 121);

                auto g11_yy_xxxzzzz = primBuffer.data(g11off + 216 * idx + 122);

                auto g11_yy_xxyyyyy = primBuffer.data(g11off + 216 * idx + 123);

                auto g11_yy_xxyyyyz = primBuffer.data(g11off + 216 * idx + 124);

                auto g11_yy_xxyyyzz = primBuffer.data(g11off + 216 * idx + 125);

                auto g11_yy_xxyyzzz = primBuffer.data(g11off + 216 * idx + 126);

                auto g11_yy_xxyzzzz = primBuffer.data(g11off + 216 * idx + 127);

                auto g11_yy_xxzzzzz = primBuffer.data(g11off + 216 * idx + 128);

                auto g11_yy_xyyyyyy = primBuffer.data(g11off + 216 * idx + 129);

                auto g11_yy_xyyyyyz = primBuffer.data(g11off + 216 * idx + 130);

                auto g11_yy_xyyyyzz = primBuffer.data(g11off + 216 * idx + 131);

                auto g11_yy_xyyyzzz = primBuffer.data(g11off + 216 * idx + 132);

                auto g11_yy_xyyzzzz = primBuffer.data(g11off + 216 * idx + 133);

                auto g11_yy_xyzzzzz = primBuffer.data(g11off + 216 * idx + 134);

                auto g11_yy_xzzzzzz = primBuffer.data(g11off + 216 * idx + 135);

                auto g11_yy_yyyyyyy = primBuffer.data(g11off + 216 * idx + 136);

                auto g11_yy_yyyyyyz = primBuffer.data(g11off + 216 * idx + 137);

                auto g11_yy_yyyyyzz = primBuffer.data(g11off + 216 * idx + 138);

                auto g11_yy_yyyyzzz = primBuffer.data(g11off + 216 * idx + 139);

                auto g11_yy_yyyzzzz = primBuffer.data(g11off + 216 * idx + 140);

                auto g11_yy_yyzzzzz = primBuffer.data(g11off + 216 * idx + 141);

                auto g11_yy_yzzzzzz = primBuffer.data(g11off + 216 * idx + 142);

                auto g11_yy_zzzzzzz = primBuffer.data(g11off + 216 * idx + 143);

                auto g11_yz_xxxxxxx = primBuffer.data(g11off + 216 * idx + 144);

                auto g11_yz_xxxxxxy = primBuffer.data(g11off + 216 * idx + 145);

                auto g11_yz_xxxxxxz = primBuffer.data(g11off + 216 * idx + 146);

                auto g11_yz_xxxxxyy = primBuffer.data(g11off + 216 * idx + 147);

                auto g11_yz_xxxxxyz = primBuffer.data(g11off + 216 * idx + 148);

                auto g11_yz_xxxxxzz = primBuffer.data(g11off + 216 * idx + 149);

                auto g11_yz_xxxxyyy = primBuffer.data(g11off + 216 * idx + 150);

                auto g11_yz_xxxxyyz = primBuffer.data(g11off + 216 * idx + 151);

                auto g11_yz_xxxxyzz = primBuffer.data(g11off + 216 * idx + 152);

                auto g11_yz_xxxxzzz = primBuffer.data(g11off + 216 * idx + 153);

                auto g11_yz_xxxyyyy = primBuffer.data(g11off + 216 * idx + 154);

                auto g11_yz_xxxyyyz = primBuffer.data(g11off + 216 * idx + 155);

                auto g11_yz_xxxyyzz = primBuffer.data(g11off + 216 * idx + 156);

                auto g11_yz_xxxyzzz = primBuffer.data(g11off + 216 * idx + 157);

                auto g11_yz_xxxzzzz = primBuffer.data(g11off + 216 * idx + 158);

                auto g11_yz_xxyyyyy = primBuffer.data(g11off + 216 * idx + 159);

                auto g11_yz_xxyyyyz = primBuffer.data(g11off + 216 * idx + 160);

                auto g11_yz_xxyyyzz = primBuffer.data(g11off + 216 * idx + 161);

                auto g11_yz_xxyyzzz = primBuffer.data(g11off + 216 * idx + 162);

                auto g11_yz_xxyzzzz = primBuffer.data(g11off + 216 * idx + 163);

                auto g11_yz_xxzzzzz = primBuffer.data(g11off + 216 * idx + 164);

                auto g11_yz_xyyyyyy = primBuffer.data(g11off + 216 * idx + 165);

                auto g11_yz_xyyyyyz = primBuffer.data(g11off + 216 * idx + 166);

                auto g11_yz_xyyyyzz = primBuffer.data(g11off + 216 * idx + 167);

                auto g11_yz_xyyyzzz = primBuffer.data(g11off + 216 * idx + 168);

                auto g11_yz_xyyzzzz = primBuffer.data(g11off + 216 * idx + 169);

                auto g11_yz_xyzzzzz = primBuffer.data(g11off + 216 * idx + 170);

                auto g11_yz_xzzzzzz = primBuffer.data(g11off + 216 * idx + 171);

                auto g11_yz_yyyyyyy = primBuffer.data(g11off + 216 * idx + 172);

                auto g11_yz_yyyyyyz = primBuffer.data(g11off + 216 * idx + 173);

                auto g11_yz_yyyyyzz = primBuffer.data(g11off + 216 * idx + 174);

                auto g11_yz_yyyyzzz = primBuffer.data(g11off + 216 * idx + 175);

                auto g11_yz_yyyzzzz = primBuffer.data(g11off + 216 * idx + 176);

                auto g11_yz_yyzzzzz = primBuffer.data(g11off + 216 * idx + 177);

                auto g11_yz_yzzzzzz = primBuffer.data(g11off + 216 * idx + 178);

                auto g11_yz_zzzzzzz = primBuffer.data(g11off + 216 * idx + 179);

                auto g11_zz_xxxxxxx = primBuffer.data(g11off + 216 * idx + 180);

                auto g11_zz_xxxxxxy = primBuffer.data(g11off + 216 * idx + 181);

                auto g11_zz_xxxxxxz = primBuffer.data(g11off + 216 * idx + 182);

                auto g11_zz_xxxxxyy = primBuffer.data(g11off + 216 * idx + 183);

                auto g11_zz_xxxxxyz = primBuffer.data(g11off + 216 * idx + 184);

                auto g11_zz_xxxxxzz = primBuffer.data(g11off + 216 * idx + 185);

                auto g11_zz_xxxxyyy = primBuffer.data(g11off + 216 * idx + 186);

                auto g11_zz_xxxxyyz = primBuffer.data(g11off + 216 * idx + 187);

                auto g11_zz_xxxxyzz = primBuffer.data(g11off + 216 * idx + 188);

                auto g11_zz_xxxxzzz = primBuffer.data(g11off + 216 * idx + 189);

                auto g11_zz_xxxyyyy = primBuffer.data(g11off + 216 * idx + 190);

                auto g11_zz_xxxyyyz = primBuffer.data(g11off + 216 * idx + 191);

                auto g11_zz_xxxyyzz = primBuffer.data(g11off + 216 * idx + 192);

                auto g11_zz_xxxyzzz = primBuffer.data(g11off + 216 * idx + 193);

                auto g11_zz_xxxzzzz = primBuffer.data(g11off + 216 * idx + 194);

                auto g11_zz_xxyyyyy = primBuffer.data(g11off + 216 * idx + 195);

                auto g11_zz_xxyyyyz = primBuffer.data(g11off + 216 * idx + 196);

                auto g11_zz_xxyyyzz = primBuffer.data(g11off + 216 * idx + 197);

                auto g11_zz_xxyyzzz = primBuffer.data(g11off + 216 * idx + 198);

                auto g11_zz_xxyzzzz = primBuffer.data(g11off + 216 * idx + 199);

                auto g11_zz_xxzzzzz = primBuffer.data(g11off + 216 * idx + 200);

                auto g11_zz_xyyyyyy = primBuffer.data(g11off + 216 * idx + 201);

                auto g11_zz_xyyyyyz = primBuffer.data(g11off + 216 * idx + 202);

                auto g11_zz_xyyyyzz = primBuffer.data(g11off + 216 * idx + 203);

                auto g11_zz_xyyyzzz = primBuffer.data(g11off + 216 * idx + 204);

                auto g11_zz_xyyzzzz = primBuffer.data(g11off + 216 * idx + 205);

                auto g11_zz_xyzzzzz = primBuffer.data(g11off + 216 * idx + 206);

                auto g11_zz_xzzzzzz = primBuffer.data(g11off + 216 * idx + 207);

                auto g11_zz_yyyyyyy = primBuffer.data(g11off + 216 * idx + 208);

                auto g11_zz_yyyyyyz = primBuffer.data(g11off + 216 * idx + 209);

                auto g11_zz_yyyyyzz = primBuffer.data(g11off + 216 * idx + 210);

                auto g11_zz_yyyyzzz = primBuffer.data(g11off + 216 * idx + 211);

                auto g11_zz_yyyzzzz = primBuffer.data(g11off + 216 * idx + 212);

                auto g11_zz_yyzzzzz = primBuffer.data(g11off + 216 * idx + 213);

                auto g11_zz_yzzzzzz = primBuffer.data(g11off + 216 * idx + 214);

                auto g11_zz_zzzzzzz = primBuffer.data(g11off + 216 * idx + 215);

                // set up pointers to (F|g(r,r')|SK)^(m) integrals

                auto g_xxx_xxxxxxx = primBuffer.data(goff + 360 * idx);

                auto g_xxx_xxxxxxy = primBuffer.data(goff + 360 * idx + 1);

                auto g_xxx_xxxxxxz = primBuffer.data(goff + 360 * idx + 2);

                auto g_xxx_xxxxxyy = primBuffer.data(goff + 360 * idx + 3);

                auto g_xxx_xxxxxyz = primBuffer.data(goff + 360 * idx + 4);

                auto g_xxx_xxxxxzz = primBuffer.data(goff + 360 * idx + 5);

                auto g_xxx_xxxxyyy = primBuffer.data(goff + 360 * idx + 6);

                auto g_xxx_xxxxyyz = primBuffer.data(goff + 360 * idx + 7);

                auto g_xxx_xxxxyzz = primBuffer.data(goff + 360 * idx + 8);

                auto g_xxx_xxxxzzz = primBuffer.data(goff + 360 * idx + 9);

                auto g_xxx_xxxyyyy = primBuffer.data(goff + 360 * idx + 10);

                auto g_xxx_xxxyyyz = primBuffer.data(goff + 360 * idx + 11);

                auto g_xxx_xxxyyzz = primBuffer.data(goff + 360 * idx + 12);

                auto g_xxx_xxxyzzz = primBuffer.data(goff + 360 * idx + 13);

                auto g_xxx_xxxzzzz = primBuffer.data(goff + 360 * idx + 14);

                auto g_xxx_xxyyyyy = primBuffer.data(goff + 360 * idx + 15);

                auto g_xxx_xxyyyyz = primBuffer.data(goff + 360 * idx + 16);

                auto g_xxx_xxyyyzz = primBuffer.data(goff + 360 * idx + 17);

                auto g_xxx_xxyyzzz = primBuffer.data(goff + 360 * idx + 18);

                auto g_xxx_xxyzzzz = primBuffer.data(goff + 360 * idx + 19);

                auto g_xxx_xxzzzzz = primBuffer.data(goff + 360 * idx + 20);

                auto g_xxx_xyyyyyy = primBuffer.data(goff + 360 * idx + 21);

                auto g_xxx_xyyyyyz = primBuffer.data(goff + 360 * idx + 22);

                auto g_xxx_xyyyyzz = primBuffer.data(goff + 360 * idx + 23);

                auto g_xxx_xyyyzzz = primBuffer.data(goff + 360 * idx + 24);

                auto g_xxx_xyyzzzz = primBuffer.data(goff + 360 * idx + 25);

                auto g_xxx_xyzzzzz = primBuffer.data(goff + 360 * idx + 26);

                auto g_xxx_xzzzzzz = primBuffer.data(goff + 360 * idx + 27);

                auto g_xxx_yyyyyyy = primBuffer.data(goff + 360 * idx + 28);

                auto g_xxx_yyyyyyz = primBuffer.data(goff + 360 * idx + 29);

                auto g_xxx_yyyyyzz = primBuffer.data(goff + 360 * idx + 30);

                auto g_xxx_yyyyzzz = primBuffer.data(goff + 360 * idx + 31);

                auto g_xxx_yyyzzzz = primBuffer.data(goff + 360 * idx + 32);

                auto g_xxx_yyzzzzz = primBuffer.data(goff + 360 * idx + 33);

                auto g_xxx_yzzzzzz = primBuffer.data(goff + 360 * idx + 34);

                auto g_xxx_zzzzzzz = primBuffer.data(goff + 360 * idx + 35);

                auto g_xxy_xxxxxxx = primBuffer.data(goff + 360 * idx + 36);

                auto g_xxy_xxxxxxy = primBuffer.data(goff + 360 * idx + 37);

                auto g_xxy_xxxxxxz = primBuffer.data(goff + 360 * idx + 38);

                auto g_xxy_xxxxxyy = primBuffer.data(goff + 360 * idx + 39);

                auto g_xxy_xxxxxyz = primBuffer.data(goff + 360 * idx + 40);

                auto g_xxy_xxxxxzz = primBuffer.data(goff + 360 * idx + 41);

                auto g_xxy_xxxxyyy = primBuffer.data(goff + 360 * idx + 42);

                auto g_xxy_xxxxyyz = primBuffer.data(goff + 360 * idx + 43);

                auto g_xxy_xxxxyzz = primBuffer.data(goff + 360 * idx + 44);

                auto g_xxy_xxxxzzz = primBuffer.data(goff + 360 * idx + 45);

                auto g_xxy_xxxyyyy = primBuffer.data(goff + 360 * idx + 46);

                auto g_xxy_xxxyyyz = primBuffer.data(goff + 360 * idx + 47);

                auto g_xxy_xxxyyzz = primBuffer.data(goff + 360 * idx + 48);

                auto g_xxy_xxxyzzz = primBuffer.data(goff + 360 * idx + 49);

                auto g_xxy_xxxzzzz = primBuffer.data(goff + 360 * idx + 50);

                auto g_xxy_xxyyyyy = primBuffer.data(goff + 360 * idx + 51);

                auto g_xxy_xxyyyyz = primBuffer.data(goff + 360 * idx + 52);

                auto g_xxy_xxyyyzz = primBuffer.data(goff + 360 * idx + 53);

                auto g_xxy_xxyyzzz = primBuffer.data(goff + 360 * idx + 54);

                auto g_xxy_xxyzzzz = primBuffer.data(goff + 360 * idx + 55);

                auto g_xxy_xxzzzzz = primBuffer.data(goff + 360 * idx + 56);

                auto g_xxy_xyyyyyy = primBuffer.data(goff + 360 * idx + 57);

                auto g_xxy_xyyyyyz = primBuffer.data(goff + 360 * idx + 58);

                auto g_xxy_xyyyyzz = primBuffer.data(goff + 360 * idx + 59);

                auto g_xxy_xyyyzzz = primBuffer.data(goff + 360 * idx + 60);

                auto g_xxy_xyyzzzz = primBuffer.data(goff + 360 * idx + 61);

                auto g_xxy_xyzzzzz = primBuffer.data(goff + 360 * idx + 62);

                auto g_xxy_xzzzzzz = primBuffer.data(goff + 360 * idx + 63);

                auto g_xxy_yyyyyyy = primBuffer.data(goff + 360 * idx + 64);

                auto g_xxy_yyyyyyz = primBuffer.data(goff + 360 * idx + 65);

                auto g_xxy_yyyyyzz = primBuffer.data(goff + 360 * idx + 66);

                auto g_xxy_yyyyzzz = primBuffer.data(goff + 360 * idx + 67);

                auto g_xxy_yyyzzzz = primBuffer.data(goff + 360 * idx + 68);

                auto g_xxy_yyzzzzz = primBuffer.data(goff + 360 * idx + 69);

                auto g_xxy_yzzzzzz = primBuffer.data(goff + 360 * idx + 70);

                auto g_xxy_zzzzzzz = primBuffer.data(goff + 360 * idx + 71);

                auto g_xxz_xxxxxxx = primBuffer.data(goff + 360 * idx + 72);

                auto g_xxz_xxxxxxy = primBuffer.data(goff + 360 * idx + 73);

                auto g_xxz_xxxxxxz = primBuffer.data(goff + 360 * idx + 74);

                auto g_xxz_xxxxxyy = primBuffer.data(goff + 360 * idx + 75);

                auto g_xxz_xxxxxyz = primBuffer.data(goff + 360 * idx + 76);

                auto g_xxz_xxxxxzz = primBuffer.data(goff + 360 * idx + 77);

                auto g_xxz_xxxxyyy = primBuffer.data(goff + 360 * idx + 78);

                auto g_xxz_xxxxyyz = primBuffer.data(goff + 360 * idx + 79);

                auto g_xxz_xxxxyzz = primBuffer.data(goff + 360 * idx + 80);

                auto g_xxz_xxxxzzz = primBuffer.data(goff + 360 * idx + 81);

                auto g_xxz_xxxyyyy = primBuffer.data(goff + 360 * idx + 82);

                auto g_xxz_xxxyyyz = primBuffer.data(goff + 360 * idx + 83);

                auto g_xxz_xxxyyzz = primBuffer.data(goff + 360 * idx + 84);

                auto g_xxz_xxxyzzz = primBuffer.data(goff + 360 * idx + 85);

                auto g_xxz_xxxzzzz = primBuffer.data(goff + 360 * idx + 86);

                auto g_xxz_xxyyyyy = primBuffer.data(goff + 360 * idx + 87);

                auto g_xxz_xxyyyyz = primBuffer.data(goff + 360 * idx + 88);

                auto g_xxz_xxyyyzz = primBuffer.data(goff + 360 * idx + 89);

                auto g_xxz_xxyyzzz = primBuffer.data(goff + 360 * idx + 90);

                auto g_xxz_xxyzzzz = primBuffer.data(goff + 360 * idx + 91);

                auto g_xxz_xxzzzzz = primBuffer.data(goff + 360 * idx + 92);

                auto g_xxz_xyyyyyy = primBuffer.data(goff + 360 * idx + 93);

                auto g_xxz_xyyyyyz = primBuffer.data(goff + 360 * idx + 94);

                auto g_xxz_xyyyyzz = primBuffer.data(goff + 360 * idx + 95);

                auto g_xxz_xyyyzzz = primBuffer.data(goff + 360 * idx + 96);

                auto g_xxz_xyyzzzz = primBuffer.data(goff + 360 * idx + 97);

                auto g_xxz_xyzzzzz = primBuffer.data(goff + 360 * idx + 98);

                auto g_xxz_xzzzzzz = primBuffer.data(goff + 360 * idx + 99);

                auto g_xxz_yyyyyyy = primBuffer.data(goff + 360 * idx + 100);

                auto g_xxz_yyyyyyz = primBuffer.data(goff + 360 * idx + 101);

                auto g_xxz_yyyyyzz = primBuffer.data(goff + 360 * idx + 102);

                auto g_xxz_yyyyzzz = primBuffer.data(goff + 360 * idx + 103);

                auto g_xxz_yyyzzzz = primBuffer.data(goff + 360 * idx + 104);

                auto g_xxz_yyzzzzz = primBuffer.data(goff + 360 * idx + 105);

                auto g_xxz_yzzzzzz = primBuffer.data(goff + 360 * idx + 106);

                auto g_xxz_zzzzzzz = primBuffer.data(goff + 360 * idx + 107);

                auto g_xyy_xxxxxxx = primBuffer.data(goff + 360 * idx + 108);

                auto g_xyy_xxxxxxy = primBuffer.data(goff + 360 * idx + 109);

                auto g_xyy_xxxxxxz = primBuffer.data(goff + 360 * idx + 110);

                auto g_xyy_xxxxxyy = primBuffer.data(goff + 360 * idx + 111);

                auto g_xyy_xxxxxyz = primBuffer.data(goff + 360 * idx + 112);

                auto g_xyy_xxxxxzz = primBuffer.data(goff + 360 * idx + 113);

                auto g_xyy_xxxxyyy = primBuffer.data(goff + 360 * idx + 114);

                auto g_xyy_xxxxyyz = primBuffer.data(goff + 360 * idx + 115);

                auto g_xyy_xxxxyzz = primBuffer.data(goff + 360 * idx + 116);

                auto g_xyy_xxxxzzz = primBuffer.data(goff + 360 * idx + 117);

                auto g_xyy_xxxyyyy = primBuffer.data(goff + 360 * idx + 118);

                auto g_xyy_xxxyyyz = primBuffer.data(goff + 360 * idx + 119);

                auto g_xyy_xxxyyzz = primBuffer.data(goff + 360 * idx + 120);

                auto g_xyy_xxxyzzz = primBuffer.data(goff + 360 * idx + 121);

                auto g_xyy_xxxzzzz = primBuffer.data(goff + 360 * idx + 122);

                auto g_xyy_xxyyyyy = primBuffer.data(goff + 360 * idx + 123);

                auto g_xyy_xxyyyyz = primBuffer.data(goff + 360 * idx + 124);

                auto g_xyy_xxyyyzz = primBuffer.data(goff + 360 * idx + 125);

                auto g_xyy_xxyyzzz = primBuffer.data(goff + 360 * idx + 126);

                auto g_xyy_xxyzzzz = primBuffer.data(goff + 360 * idx + 127);

                auto g_xyy_xxzzzzz = primBuffer.data(goff + 360 * idx + 128);

                auto g_xyy_xyyyyyy = primBuffer.data(goff + 360 * idx + 129);

                auto g_xyy_xyyyyyz = primBuffer.data(goff + 360 * idx + 130);

                auto g_xyy_xyyyyzz = primBuffer.data(goff + 360 * idx + 131);

                auto g_xyy_xyyyzzz = primBuffer.data(goff + 360 * idx + 132);

                auto g_xyy_xyyzzzz = primBuffer.data(goff + 360 * idx + 133);

                auto g_xyy_xyzzzzz = primBuffer.data(goff + 360 * idx + 134);

                auto g_xyy_xzzzzzz = primBuffer.data(goff + 360 * idx + 135);

                auto g_xyy_yyyyyyy = primBuffer.data(goff + 360 * idx + 136);

                auto g_xyy_yyyyyyz = primBuffer.data(goff + 360 * idx + 137);

                auto g_xyy_yyyyyzz = primBuffer.data(goff + 360 * idx + 138);

                auto g_xyy_yyyyzzz = primBuffer.data(goff + 360 * idx + 139);

                auto g_xyy_yyyzzzz = primBuffer.data(goff + 360 * idx + 140);

                auto g_xyy_yyzzzzz = primBuffer.data(goff + 360 * idx + 141);

                auto g_xyy_yzzzzzz = primBuffer.data(goff + 360 * idx + 142);

                auto g_xyy_zzzzzzz = primBuffer.data(goff + 360 * idx + 143);

                auto g_xyz_xxxxxxx = primBuffer.data(goff + 360 * idx + 144);

                auto g_xyz_xxxxxxy = primBuffer.data(goff + 360 * idx + 145);

                auto g_xyz_xxxxxxz = primBuffer.data(goff + 360 * idx + 146);

                auto g_xyz_xxxxxyy = primBuffer.data(goff + 360 * idx + 147);

                auto g_xyz_xxxxxyz = primBuffer.data(goff + 360 * idx + 148);

                auto g_xyz_xxxxxzz = primBuffer.data(goff + 360 * idx + 149);

                auto g_xyz_xxxxyyy = primBuffer.data(goff + 360 * idx + 150);

                auto g_xyz_xxxxyyz = primBuffer.data(goff + 360 * idx + 151);

                auto g_xyz_xxxxyzz = primBuffer.data(goff + 360 * idx + 152);

                auto g_xyz_xxxxzzz = primBuffer.data(goff + 360 * idx + 153);

                auto g_xyz_xxxyyyy = primBuffer.data(goff + 360 * idx + 154);

                auto g_xyz_xxxyyyz = primBuffer.data(goff + 360 * idx + 155);

                auto g_xyz_xxxyyzz = primBuffer.data(goff + 360 * idx + 156);

                auto g_xyz_xxxyzzz = primBuffer.data(goff + 360 * idx + 157);

                auto g_xyz_xxxzzzz = primBuffer.data(goff + 360 * idx + 158);

                auto g_xyz_xxyyyyy = primBuffer.data(goff + 360 * idx + 159);

                auto g_xyz_xxyyyyz = primBuffer.data(goff + 360 * idx + 160);

                auto g_xyz_xxyyyzz = primBuffer.data(goff + 360 * idx + 161);

                auto g_xyz_xxyyzzz = primBuffer.data(goff + 360 * idx + 162);

                auto g_xyz_xxyzzzz = primBuffer.data(goff + 360 * idx + 163);

                auto g_xyz_xxzzzzz = primBuffer.data(goff + 360 * idx + 164);

                auto g_xyz_xyyyyyy = primBuffer.data(goff + 360 * idx + 165);

                auto g_xyz_xyyyyyz = primBuffer.data(goff + 360 * idx + 166);

                auto g_xyz_xyyyyzz = primBuffer.data(goff + 360 * idx + 167);

                auto g_xyz_xyyyzzz = primBuffer.data(goff + 360 * idx + 168);

                auto g_xyz_xyyzzzz = primBuffer.data(goff + 360 * idx + 169);

                auto g_xyz_xyzzzzz = primBuffer.data(goff + 360 * idx + 170);

                auto g_xyz_xzzzzzz = primBuffer.data(goff + 360 * idx + 171);

                auto g_xyz_yyyyyyy = primBuffer.data(goff + 360 * idx + 172);

                auto g_xyz_yyyyyyz = primBuffer.data(goff + 360 * idx + 173);

                auto g_xyz_yyyyyzz = primBuffer.data(goff + 360 * idx + 174);

                auto g_xyz_yyyyzzz = primBuffer.data(goff + 360 * idx + 175);

                auto g_xyz_yyyzzzz = primBuffer.data(goff + 360 * idx + 176);

                auto g_xyz_yyzzzzz = primBuffer.data(goff + 360 * idx + 177);

                auto g_xyz_yzzzzzz = primBuffer.data(goff + 360 * idx + 178);

                auto g_xyz_zzzzzzz = primBuffer.data(goff + 360 * idx + 179);

                auto g_xzz_xxxxxxx = primBuffer.data(goff + 360 * idx + 180);

                auto g_xzz_xxxxxxy = primBuffer.data(goff + 360 * idx + 181);

                auto g_xzz_xxxxxxz = primBuffer.data(goff + 360 * idx + 182);

                auto g_xzz_xxxxxyy = primBuffer.data(goff + 360 * idx + 183);

                auto g_xzz_xxxxxyz = primBuffer.data(goff + 360 * idx + 184);

                auto g_xzz_xxxxxzz = primBuffer.data(goff + 360 * idx + 185);

                auto g_xzz_xxxxyyy = primBuffer.data(goff + 360 * idx + 186);

                auto g_xzz_xxxxyyz = primBuffer.data(goff + 360 * idx + 187);

                auto g_xzz_xxxxyzz = primBuffer.data(goff + 360 * idx + 188);

                auto g_xzz_xxxxzzz = primBuffer.data(goff + 360 * idx + 189);

                auto g_xzz_xxxyyyy = primBuffer.data(goff + 360 * idx + 190);

                auto g_xzz_xxxyyyz = primBuffer.data(goff + 360 * idx + 191);

                auto g_xzz_xxxyyzz = primBuffer.data(goff + 360 * idx + 192);

                auto g_xzz_xxxyzzz = primBuffer.data(goff + 360 * idx + 193);

                auto g_xzz_xxxzzzz = primBuffer.data(goff + 360 * idx + 194);

                auto g_xzz_xxyyyyy = primBuffer.data(goff + 360 * idx + 195);

                auto g_xzz_xxyyyyz = primBuffer.data(goff + 360 * idx + 196);

                auto g_xzz_xxyyyzz = primBuffer.data(goff + 360 * idx + 197);

                auto g_xzz_xxyyzzz = primBuffer.data(goff + 360 * idx + 198);

                auto g_xzz_xxyzzzz = primBuffer.data(goff + 360 * idx + 199);

                auto g_xzz_xxzzzzz = primBuffer.data(goff + 360 * idx + 200);

                auto g_xzz_xyyyyyy = primBuffer.data(goff + 360 * idx + 201);

                auto g_xzz_xyyyyyz = primBuffer.data(goff + 360 * idx + 202);

                auto g_xzz_xyyyyzz = primBuffer.data(goff + 360 * idx + 203);

                auto g_xzz_xyyyzzz = primBuffer.data(goff + 360 * idx + 204);

                auto g_xzz_xyyzzzz = primBuffer.data(goff + 360 * idx + 205);

                auto g_xzz_xyzzzzz = primBuffer.data(goff + 360 * idx + 206);

                auto g_xzz_xzzzzzz = primBuffer.data(goff + 360 * idx + 207);

                auto g_xzz_yyyyyyy = primBuffer.data(goff + 360 * idx + 208);

                auto g_xzz_yyyyyyz = primBuffer.data(goff + 360 * idx + 209);

                auto g_xzz_yyyyyzz = primBuffer.data(goff + 360 * idx + 210);

                auto g_xzz_yyyyzzz = primBuffer.data(goff + 360 * idx + 211);

                auto g_xzz_yyyzzzz = primBuffer.data(goff + 360 * idx + 212);

                auto g_xzz_yyzzzzz = primBuffer.data(goff + 360 * idx + 213);

                auto g_xzz_yzzzzzz = primBuffer.data(goff + 360 * idx + 214);

                auto g_xzz_zzzzzzz = primBuffer.data(goff + 360 * idx + 215);

                auto g_yyy_xxxxxxx = primBuffer.data(goff + 360 * idx + 216);

                auto g_yyy_xxxxxxy = primBuffer.data(goff + 360 * idx + 217);

                auto g_yyy_xxxxxxz = primBuffer.data(goff + 360 * idx + 218);

                auto g_yyy_xxxxxyy = primBuffer.data(goff + 360 * idx + 219);

                auto g_yyy_xxxxxyz = primBuffer.data(goff + 360 * idx + 220);

                auto g_yyy_xxxxxzz = primBuffer.data(goff + 360 * idx + 221);

                auto g_yyy_xxxxyyy = primBuffer.data(goff + 360 * idx + 222);

                auto g_yyy_xxxxyyz = primBuffer.data(goff + 360 * idx + 223);

                auto g_yyy_xxxxyzz = primBuffer.data(goff + 360 * idx + 224);

                auto g_yyy_xxxxzzz = primBuffer.data(goff + 360 * idx + 225);

                auto g_yyy_xxxyyyy = primBuffer.data(goff + 360 * idx + 226);

                auto g_yyy_xxxyyyz = primBuffer.data(goff + 360 * idx + 227);

                auto g_yyy_xxxyyzz = primBuffer.data(goff + 360 * idx + 228);

                auto g_yyy_xxxyzzz = primBuffer.data(goff + 360 * idx + 229);

                auto g_yyy_xxxzzzz = primBuffer.data(goff + 360 * idx + 230);

                auto g_yyy_xxyyyyy = primBuffer.data(goff + 360 * idx + 231);

                auto g_yyy_xxyyyyz = primBuffer.data(goff + 360 * idx + 232);

                auto g_yyy_xxyyyzz = primBuffer.data(goff + 360 * idx + 233);

                auto g_yyy_xxyyzzz = primBuffer.data(goff + 360 * idx + 234);

                auto g_yyy_xxyzzzz = primBuffer.data(goff + 360 * idx + 235);

                auto g_yyy_xxzzzzz = primBuffer.data(goff + 360 * idx + 236);

                auto g_yyy_xyyyyyy = primBuffer.data(goff + 360 * idx + 237);

                auto g_yyy_xyyyyyz = primBuffer.data(goff + 360 * idx + 238);

                auto g_yyy_xyyyyzz = primBuffer.data(goff + 360 * idx + 239);

                auto g_yyy_xyyyzzz = primBuffer.data(goff + 360 * idx + 240);

                auto g_yyy_xyyzzzz = primBuffer.data(goff + 360 * idx + 241);

                auto g_yyy_xyzzzzz = primBuffer.data(goff + 360 * idx + 242);

                auto g_yyy_xzzzzzz = primBuffer.data(goff + 360 * idx + 243);

                auto g_yyy_yyyyyyy = primBuffer.data(goff + 360 * idx + 244);

                auto g_yyy_yyyyyyz = primBuffer.data(goff + 360 * idx + 245);

                auto g_yyy_yyyyyzz = primBuffer.data(goff + 360 * idx + 246);

                auto g_yyy_yyyyzzz = primBuffer.data(goff + 360 * idx + 247);

                auto g_yyy_yyyzzzz = primBuffer.data(goff + 360 * idx + 248);

                auto g_yyy_yyzzzzz = primBuffer.data(goff + 360 * idx + 249);

                auto g_yyy_yzzzzzz = primBuffer.data(goff + 360 * idx + 250);

                auto g_yyy_zzzzzzz = primBuffer.data(goff + 360 * idx + 251);

                auto g_yyz_xxxxxxx = primBuffer.data(goff + 360 * idx + 252);

                auto g_yyz_xxxxxxy = primBuffer.data(goff + 360 * idx + 253);

                auto g_yyz_xxxxxxz = primBuffer.data(goff + 360 * idx + 254);

                auto g_yyz_xxxxxyy = primBuffer.data(goff + 360 * idx + 255);

                auto g_yyz_xxxxxyz = primBuffer.data(goff + 360 * idx + 256);

                auto g_yyz_xxxxxzz = primBuffer.data(goff + 360 * idx + 257);

                auto g_yyz_xxxxyyy = primBuffer.data(goff + 360 * idx + 258);

                auto g_yyz_xxxxyyz = primBuffer.data(goff + 360 * idx + 259);

                auto g_yyz_xxxxyzz = primBuffer.data(goff + 360 * idx + 260);

                auto g_yyz_xxxxzzz = primBuffer.data(goff + 360 * idx + 261);

                auto g_yyz_xxxyyyy = primBuffer.data(goff + 360 * idx + 262);

                auto g_yyz_xxxyyyz = primBuffer.data(goff + 360 * idx + 263);

                auto g_yyz_xxxyyzz = primBuffer.data(goff + 360 * idx + 264);

                auto g_yyz_xxxyzzz = primBuffer.data(goff + 360 * idx + 265);

                auto g_yyz_xxxzzzz = primBuffer.data(goff + 360 * idx + 266);

                auto g_yyz_xxyyyyy = primBuffer.data(goff + 360 * idx + 267);

                auto g_yyz_xxyyyyz = primBuffer.data(goff + 360 * idx + 268);

                auto g_yyz_xxyyyzz = primBuffer.data(goff + 360 * idx + 269);

                auto g_yyz_xxyyzzz = primBuffer.data(goff + 360 * idx + 270);

                auto g_yyz_xxyzzzz = primBuffer.data(goff + 360 * idx + 271);

                auto g_yyz_xxzzzzz = primBuffer.data(goff + 360 * idx + 272);

                auto g_yyz_xyyyyyy = primBuffer.data(goff + 360 * idx + 273);

                auto g_yyz_xyyyyyz = primBuffer.data(goff + 360 * idx + 274);

                auto g_yyz_xyyyyzz = primBuffer.data(goff + 360 * idx + 275);

                auto g_yyz_xyyyzzz = primBuffer.data(goff + 360 * idx + 276);

                auto g_yyz_xyyzzzz = primBuffer.data(goff + 360 * idx + 277);

                auto g_yyz_xyzzzzz = primBuffer.data(goff + 360 * idx + 278);

                auto g_yyz_xzzzzzz = primBuffer.data(goff + 360 * idx + 279);

                auto g_yyz_yyyyyyy = primBuffer.data(goff + 360 * idx + 280);

                auto g_yyz_yyyyyyz = primBuffer.data(goff + 360 * idx + 281);

                auto g_yyz_yyyyyzz = primBuffer.data(goff + 360 * idx + 282);

                auto g_yyz_yyyyzzz = primBuffer.data(goff + 360 * idx + 283);

                auto g_yyz_yyyzzzz = primBuffer.data(goff + 360 * idx + 284);

                auto g_yyz_yyzzzzz = primBuffer.data(goff + 360 * idx + 285);

                auto g_yyz_yzzzzzz = primBuffer.data(goff + 360 * idx + 286);

                auto g_yyz_zzzzzzz = primBuffer.data(goff + 360 * idx + 287);

                auto g_yzz_xxxxxxx = primBuffer.data(goff + 360 * idx + 288);

                auto g_yzz_xxxxxxy = primBuffer.data(goff + 360 * idx + 289);

                auto g_yzz_xxxxxxz = primBuffer.data(goff + 360 * idx + 290);

                auto g_yzz_xxxxxyy = primBuffer.data(goff + 360 * idx + 291);

                auto g_yzz_xxxxxyz = primBuffer.data(goff + 360 * idx + 292);

                auto g_yzz_xxxxxzz = primBuffer.data(goff + 360 * idx + 293);

                auto g_yzz_xxxxyyy = primBuffer.data(goff + 360 * idx + 294);

                auto g_yzz_xxxxyyz = primBuffer.data(goff + 360 * idx + 295);

                auto g_yzz_xxxxyzz = primBuffer.data(goff + 360 * idx + 296);

                auto g_yzz_xxxxzzz = primBuffer.data(goff + 360 * idx + 297);

                auto g_yzz_xxxyyyy = primBuffer.data(goff + 360 * idx + 298);

                auto g_yzz_xxxyyyz = primBuffer.data(goff + 360 * idx + 299);

                auto g_yzz_xxxyyzz = primBuffer.data(goff + 360 * idx + 300);

                auto g_yzz_xxxyzzz = primBuffer.data(goff + 360 * idx + 301);

                auto g_yzz_xxxzzzz = primBuffer.data(goff + 360 * idx + 302);

                auto g_yzz_xxyyyyy = primBuffer.data(goff + 360 * idx + 303);

                auto g_yzz_xxyyyyz = primBuffer.data(goff + 360 * idx + 304);

                auto g_yzz_xxyyyzz = primBuffer.data(goff + 360 * idx + 305);

                auto g_yzz_xxyyzzz = primBuffer.data(goff + 360 * idx + 306);

                auto g_yzz_xxyzzzz = primBuffer.data(goff + 360 * idx + 307);

                auto g_yzz_xxzzzzz = primBuffer.data(goff + 360 * idx + 308);

                auto g_yzz_xyyyyyy = primBuffer.data(goff + 360 * idx + 309);

                auto g_yzz_xyyyyyz = primBuffer.data(goff + 360 * idx + 310);

                auto g_yzz_xyyyyzz = primBuffer.data(goff + 360 * idx + 311);

                auto g_yzz_xyyyzzz = primBuffer.data(goff + 360 * idx + 312);

                auto g_yzz_xyyzzzz = primBuffer.data(goff + 360 * idx + 313);

                auto g_yzz_xyzzzzz = primBuffer.data(goff + 360 * idx + 314);

                auto g_yzz_xzzzzzz = primBuffer.data(goff + 360 * idx + 315);

                auto g_yzz_yyyyyyy = primBuffer.data(goff + 360 * idx + 316);

                auto g_yzz_yyyyyyz = primBuffer.data(goff + 360 * idx + 317);

                auto g_yzz_yyyyyzz = primBuffer.data(goff + 360 * idx + 318);

                auto g_yzz_yyyyzzz = primBuffer.data(goff + 360 * idx + 319);

                auto g_yzz_yyyzzzz = primBuffer.data(goff + 360 * idx + 320);

                auto g_yzz_yyzzzzz = primBuffer.data(goff + 360 * idx + 321);

                auto g_yzz_yzzzzzz = primBuffer.data(goff + 360 * idx + 322);

                auto g_yzz_zzzzzzz = primBuffer.data(goff + 360 * idx + 323);

                auto g_zzz_xxxxxxx = primBuffer.data(goff + 360 * idx + 324);

                auto g_zzz_xxxxxxy = primBuffer.data(goff + 360 * idx + 325);

                auto g_zzz_xxxxxxz = primBuffer.data(goff + 360 * idx + 326);

                auto g_zzz_xxxxxyy = primBuffer.data(goff + 360 * idx + 327);

                auto g_zzz_xxxxxyz = primBuffer.data(goff + 360 * idx + 328);

                auto g_zzz_xxxxxzz = primBuffer.data(goff + 360 * idx + 329);

                auto g_zzz_xxxxyyy = primBuffer.data(goff + 360 * idx + 330);

                auto g_zzz_xxxxyyz = primBuffer.data(goff + 360 * idx + 331);

                auto g_zzz_xxxxyzz = primBuffer.data(goff + 360 * idx + 332);

                auto g_zzz_xxxxzzz = primBuffer.data(goff + 360 * idx + 333);

                auto g_zzz_xxxyyyy = primBuffer.data(goff + 360 * idx + 334);

                auto g_zzz_xxxyyyz = primBuffer.data(goff + 360 * idx + 335);

                auto g_zzz_xxxyyzz = primBuffer.data(goff + 360 * idx + 336);

                auto g_zzz_xxxyzzz = primBuffer.data(goff + 360 * idx + 337);

                auto g_zzz_xxxzzzz = primBuffer.data(goff + 360 * idx + 338);

                auto g_zzz_xxyyyyy = primBuffer.data(goff + 360 * idx + 339);

                auto g_zzz_xxyyyyz = primBuffer.data(goff + 360 * idx + 340);

                auto g_zzz_xxyyyzz = primBuffer.data(goff + 360 * idx + 341);

                auto g_zzz_xxyyzzz = primBuffer.data(goff + 360 * idx + 342);

                auto g_zzz_xxyzzzz = primBuffer.data(goff + 360 * idx + 343);

                auto g_zzz_xxzzzzz = primBuffer.data(goff + 360 * idx + 344);

                auto g_zzz_xyyyyyy = primBuffer.data(goff + 360 * idx + 345);

                auto g_zzz_xyyyyyz = primBuffer.data(goff + 360 * idx + 346);

                auto g_zzz_xyyyyzz = primBuffer.data(goff + 360 * idx + 347);

                auto g_zzz_xyyyzzz = primBuffer.data(goff + 360 * idx + 348);

                auto g_zzz_xyyzzzz = primBuffer.data(goff + 360 * idx + 349);

                auto g_zzz_xyzzzzz = primBuffer.data(goff + 360 * idx + 350);

                auto g_zzz_xzzzzzz = primBuffer.data(goff + 360 * idx + 351);

                auto g_zzz_yyyyyyy = primBuffer.data(goff + 360 * idx + 352);

                auto g_zzz_yyyyyyz = primBuffer.data(goff + 360 * idx + 353);

                auto g_zzz_yyyyyzz = primBuffer.data(goff + 360 * idx + 354);

                auto g_zzz_yyyyzzz = primBuffer.data(goff + 360 * idx + 355);

                auto g_zzz_yyyzzzz = primBuffer.data(goff + 360 * idx + 356);

                auto g_zzz_yyzzzzz = primBuffer.data(goff + 360 * idx + 357);

                auto g_zzz_yzzzzzz = primBuffer.data(goff + 360 * idx + 358);

                auto g_zzz_zzzzzzz = primBuffer.data(goff + 360 * idx + 359);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xxxxxx,\
                                         gk_xx_xxxxxy, gk_xx_xxxxxz, gk_xx_xxxxyy,\
                                         gk_xx_xxxxyz, gk_xx_xxxxzz, gk_xx_xxxyyy,\
                                         gk_xx_xxxyyz, gk_xx_xxxyzz, gk_xx_xxxzzz,\
                                         gk_xx_xxyyyy, gk_xx_xxyyyz, gk_xx_xxyyzz,\
                                         gk_xx_xxyzzz, gk_xx_xxzzzz, gk_xx_xyyyyy,\
                                         gk_xx_xyyyyz, gk_xx_xyyyzz, gk_xx_xyyzzz,\
                                         gk_xx_xyzzzz, gk_xx_xzzzzz, gk_xx_yyyyyy,\
                                         gk_xx_yyyyyz, gk_xx_yyyyzz, gk_xx_yyyzzz,\
                                         gk_xx_yyzzzz, gk_xx_yzzzzz, gk_xx_zzzzzz,\
                                         gk_xy_xxxxxx, gk_xy_xxxxxy, gk_xy_xxxxxz,\
                                         gk_xy_xxxxyy, gk_xy_xxxxyz, gk_xy_xxxxzz,\
                                         gk_xy_xxxyyy, gk_xy_xxxyyz, gk_xy_xxxyzz,\
                                         gk_xy_xxxzzz, gk_xy_xxyyyy, gk_xy_xxyyyz,\
                                         gk_xy_xxyyzz, gk_xy_xxyzzz, gk_xy_xxzzzz,\
                                         gk_xy_xyyyyy, gk_xy_xyyyyz, gk_xy_xyyyzz,\
                                         gk_xy_xyyzzz, gk_xy_xyzzzz, gk_xy_xzzzzz,\
                                         gk_xy_yyyyyy, gk_xy_yyyyyz, gk_xy_yyyyzz,\
                                         gk_xy_yyyzzz, gk_xy_yyzzzz, gk_xy_yzzzzz,\
                                         gk_xy_zzzzzz, gk_xz_xxxxxx, gk_xz_xxxxxy,\
                                         gk_xz_xxxxxz, gk_xz_xxxxyy, gk_xz_xxxxyz,\
                                         gk_xz_xxxxzz, gk_xz_xxxyyy, gk_xz_xxxyyz,\
                                         gk_xz_xxxyzz, gk_xz_xxxzzz, gk_xz_xxyyyy,\
                                         gk_xz_xxyyyz, gk_xz_xxyyzz, gk_xz_xxyzzz,\
                                         gk_xz_xxzzzz, gk_xz_xyyyyy, gk_xz_xyyyyz,\
                                         gk_xz_xyyyzz, gk_xz_xyyzzz, gk_xz_xyzzzz,\
                                         gk_xz_xzzzzz, gk_xz_yyyyyy, gk_xz_yyyyyz,\
                                         gk_xz_yyyyzz, gk_xz_yyyzzz, gk_xz_yyzzzz,\
                                         gk_xz_yzzzzz, gk_xz_zzzzzz, gk_yy_xxxxxx,\
                                         gk_yy_xxxxxy, gk_yy_xxxxxz, gk_yy_xxxxyy,\
                                         gk_yy_xxxxyz, gk_yy_xxxxzz, gk_yy_xxxyyy,\
                                         gk_yy_xxxyyz, gk_yy_xxxyzz, gk_yy_xxxzzz,\
                                         gk_yy_xxyyyy, gk_yy_xxyyyz, gk_yy_xxyyzz,\
                                         gk_yy_xxyzzz, gk_yy_xxzzzz, gk_yy_xyyyyy,\
                                         gk_yy_xyyyyz, gk_yy_xyyyzz, gk_yy_xyyzzz,\
                                         gk_yy_xyzzzz, gk_yy_xzzzzz, gk_yy_yyyyyy,\
                                         gk_yy_yyyyyz, gk_yy_yyyyzz, gk_yy_yyyzzz,\
                                         gk_yy_yyzzzz, gk_yy_yzzzzz, gk_yy_zzzzzz,\
                                         gk_yz_xxxxxx, gk_yz_xxxxxy, gk_yz_xxxxxz,\
                                         gk_yz_xxxxyy, gk_yz_xxxxyz, gk_yz_xxxxzz,\
                                         gk_yz_xxxyyy, gk_yz_xxxyyz, gk_yz_xxxyzz,\
                                         gk_yz_xxxzzz, gk_yz_xxyyyy, gk_yz_xxyyyz,\
                                         gk_yz_xxyyzz, gk_yz_xxyzzz, gk_yz_xxzzzz,\
                                         gk_yz_xyyyyy, gk_yz_xyyyyz, gk_yz_xyyyzz,\
                                         gk_yz_xyyzzz, gk_yz_xyzzzz, gk_yz_xzzzzz,\
                                         gk_yz_yyyyyy, gk_yz_yyyyyz, gk_yz_yyyyzz,\
                                         gk_yz_yyyzzz, gk_yz_yyzzzz, gk_yz_yzzzzz,\
                                         gk_yz_zzzzzz, gk_zz_xxxxxx, gk_zz_xxxxxy,\
                                         gk_zz_xxxxxz, gk_zz_xxxxyy, gk_zz_xxxxyz,\
                                         gk_zz_xxxxzz, gk_zz_xxxyyy, gk_zz_xxxyyz,\
                                         gk_zz_xxxyzz, gk_zz_xxxzzz, gk_zz_xxyyyy,\
                                         gk_zz_xxyyyz, gk_zz_xxyyzz, gk_zz_xxyzzz,\
                                         gk_zz_xxzzzz, gk_zz_xyyyyy, gk_zz_xyyyyz,\
                                         gk_zz_xyyyzz, gk_zz_xyyzzz, gk_zz_xyzzzz,\
                                         gk_zz_xzzzzz, gk_zz_yyyyyy, gk_zz_yyyyyz,\
                                         gk_zz_yyyyzz, gk_zz_yyyzzz, gk_zz_yyzzzz,\
                                         gk_zz_yzzzzz, gk_zz_zzzzzz, g20_x_xxxxxxx,\
                                         g20_x_xxxxxxy, g20_x_xxxxxxz, g20_x_xxxxxyy,\
                                         g20_x_xxxxxyz, g20_x_xxxxxzz, g20_x_xxxxyyy,\
                                         g20_x_xxxxyyz, g20_x_xxxxyzz, g20_x_xxxxzzz,\
                                         g20_x_xxxyyyy, g20_x_xxxyyyz, g20_x_xxxyyzz,\
                                         g20_x_xxxyzzz, g20_x_xxxzzzz, g20_x_xxyyyyy,\
                                         g20_x_xxyyyyz, g20_x_xxyyyzz, g20_x_xxyyzzz,\
                                         g20_x_xxyzzzz, g20_x_xxzzzzz, g20_x_xyyyyyy,\
                                         g20_x_xyyyyyz, g20_x_xyyyyzz, g20_x_xyyyzzz,\
                                         g20_x_xyyzzzz, g20_x_xyzzzzz, g20_x_xzzzzzz,\
                                         g20_x_yyyyyyy, g20_x_yyyyyyz, g20_x_yyyyyzz,\
                                         g20_x_yyyyzzz, g20_x_yyyzzzz, g20_x_yyzzzzz,\
                                         g20_x_yzzzzzz, g20_x_zzzzzzz, g20_y_xxxxxxx,\
                                         g20_y_xxxxxxy, g20_y_xxxxxxz, g20_y_xxxxxyy,\
                                         g20_y_xxxxxyz, g20_y_xxxxxzz, g20_y_xxxxyyy,\
                                         g20_y_xxxxyyz, g20_y_xxxxyzz, g20_y_xxxxzzz,\
                                         g20_y_xxxyyyy, g20_y_xxxyyyz, g20_y_xxxyyzz,\
                                         g20_y_xxxyzzz, g20_y_xxxzzzz, g20_y_xxyyyyy,\
                                         g20_y_xxyyyyz, g20_y_xxyyyzz, g20_y_xxyyzzz,\
                                         g20_y_xxyzzzz, g20_y_xxzzzzz, g20_y_xyyyyyy,\
                                         g20_y_xyyyyyz, g20_y_xyyyyzz, g20_y_xyyyzzz,\
                                         g20_y_xyyzzzz, g20_y_xyzzzzz, g20_y_xzzzzzz,\
                                         g20_y_yyyyyyy, g20_y_yyyyyyz, g20_y_yyyyyzz,\
                                         g20_y_yyyyzzz, g20_y_yyyzzzz, g20_y_yyzzzzz,\
                                         g20_y_yzzzzzz, g20_y_zzzzzzz, g20_z_xxxxxxx,\
                                         g20_z_xxxxxxy, g20_z_xxxxxxz, g20_z_xxxxxyy,\
                                         g20_z_xxxxxyz, g20_z_xxxxxzz, g20_z_xxxxyyy,\
                                         g20_z_xxxxyyz, g20_z_xxxxyzz, g20_z_xxxxzzz,\
                                         g20_z_xxxyyyy, g20_z_xxxyyyz, g20_z_xxxyyzz,\
                                         g20_z_xxxyzzz, g20_z_xxxzzzz, g20_z_xxyyyyy,\
                                         g20_z_xxyyyyz, g20_z_xxyyyzz, g20_z_xxyyzzz,\
                                         g20_z_xxyzzzz, g20_z_xxzzzzz, g20_z_xyyyyyy,\
                                         g20_z_xyyyyyz, g20_z_xyyyyzz, g20_z_xyyyzzz,\
                                         g20_z_xyyzzzz, g20_z_xyzzzzz, g20_z_xzzzzzz,\
                                         g20_z_yyyyyyy, g20_z_yyyyyyz, g20_z_yyyyyzz,\
                                         g20_z_yyyyzzz, g20_z_yyyzzzz, g20_z_yyzzzzz,\
                                         g20_z_yzzzzzz, g20_z_zzzzzzz, g21_x_xxxxxxx,\
                                         g21_x_xxxxxxy, g21_x_xxxxxxz, g21_x_xxxxxyy,\
                                         g21_x_xxxxxyz, g21_x_xxxxxzz, g21_x_xxxxyyy,\
                                         g21_x_xxxxyyz, g21_x_xxxxyzz, g21_x_xxxxzzz,\
                                         g21_x_xxxyyyy, g21_x_xxxyyyz, g21_x_xxxyyzz,\
                                         g21_x_xxxyzzz, g21_x_xxxzzzz, g21_x_xxyyyyy,\
                                         g21_x_xxyyyyz, g21_x_xxyyyzz, g21_x_xxyyzzz,\
                                         g21_x_xxyzzzz, g21_x_xxzzzzz, g21_x_xyyyyyy,\
                                         g21_x_xyyyyyz, g21_x_xyyyyzz, g21_x_xyyyzzz,\
                                         g21_x_xyyzzzz, g21_x_xyzzzzz, g21_x_xzzzzzz,\
                                         g21_x_yyyyyyy, g21_x_yyyyyyz, g21_x_yyyyyzz,\
                                         g21_x_yyyyzzz, g21_x_yyyzzzz, g21_x_yyzzzzz,\
                                         g21_x_yzzzzzz, g21_x_zzzzzzz, g21_y_xxxxxxx,\
                                         g21_y_xxxxxxy, g21_y_xxxxxxz, g21_y_xxxxxyy,\
                                         g21_y_xxxxxyz, g21_y_xxxxxzz, g21_y_xxxxyyy,\
                                         g21_y_xxxxyyz, g21_y_xxxxyzz, g21_y_xxxxzzz,\
                                         g21_y_xxxyyyy, g21_y_xxxyyyz, g21_y_xxxyyzz,\
                                         g21_y_xxxyzzz, g21_y_xxxzzzz, g21_y_xxyyyyy,\
                                         g21_y_xxyyyyz, g21_y_xxyyyzz, g21_y_xxyyzzz,\
                                         g21_y_xxyzzzz, g21_y_xxzzzzz, g21_y_xyyyyyy,\
                                         g21_y_xyyyyyz, g21_y_xyyyyzz, g21_y_xyyyzzz,\
                                         g21_y_xyyzzzz, g21_y_xyzzzzz, g21_y_xzzzzzz,\
                                         g21_y_yyyyyyy, g21_y_yyyyyyz, g21_y_yyyyyzz,\
                                         g21_y_yyyyzzz, g21_y_yyyzzzz, g21_y_yyzzzzz,\
                                         g21_y_yzzzzzz, g21_y_zzzzzzz, g21_z_xxxxxxx,\
                                         g21_z_xxxxxxy, g21_z_xxxxxxz, g21_z_xxxxxyy,\
                                         g21_z_xxxxxyz, g21_z_xxxxxzz, g21_z_xxxxyyy,\
                                         g21_z_xxxxyyz, g21_z_xxxxyzz, g21_z_xxxxzzz,\
                                         g21_z_xxxyyyy, g21_z_xxxyyyz, g21_z_xxxyyzz,\
                                         g21_z_xxxyzzz, g21_z_xxxzzzz, g21_z_xxyyyyy,\
                                         g21_z_xxyyyyz, g21_z_xxyyyzz, g21_z_xxyyzzz,\
                                         g21_z_xxyzzzz, g21_z_xxzzzzz, g21_z_xyyyyyy,\
                                         g21_z_xyyyyyz, g21_z_xyyyyzz, g21_z_xyyyzzz,\
                                         g21_z_xyyzzzz, g21_z_xyzzzzz, g21_z_xzzzzzz,\
                                         g21_z_yyyyyyy, g21_z_yyyyyyz, g21_z_yyyyyzz,\
                                         g21_z_yyyyzzz, g21_z_yyyzzzz, g21_z_yyzzzzz,\
                                         g21_z_yzzzzzz, g21_z_zzzzzzz, g11_xx_xxxxxxx,\
                                         g11_xx_xxxxxxy, g11_xx_xxxxxxz, g11_xx_xxxxxyy,\
                                         g11_xx_xxxxxyz, g11_xx_xxxxxzz, g11_xx_xxxxyyy,\
                                         g11_xx_xxxxyyz, g11_xx_xxxxyzz, g11_xx_xxxxzzz,\
                                         g11_xx_xxxyyyy, g11_xx_xxxyyyz, g11_xx_xxxyyzz,\
                                         g11_xx_xxxyzzz, g11_xx_xxxzzzz, g11_xx_xxyyyyy,\
                                         g11_xx_xxyyyyz, g11_xx_xxyyyzz, g11_xx_xxyyzzz,\
                                         g11_xx_xxyzzzz, g11_xx_xxzzzzz, g11_xx_xyyyyyy,\
                                         g11_xx_xyyyyyz, g11_xx_xyyyyzz, g11_xx_xyyyzzz,\
                                         g11_xx_xyyzzzz, g11_xx_xyzzzzz, g11_xx_xzzzzzz,\
                                         g11_xx_yyyyyyy, g11_xx_yyyyyyz, g11_xx_yyyyyzz,\
                                         g11_xx_yyyyzzz, g11_xx_yyyzzzz, g11_xx_yyzzzzz,\
                                         g11_xx_yzzzzzz, g11_xx_zzzzzzz, g11_xy_xxxxxxx,\
                                         g11_xy_xxxxxxy, g11_xy_xxxxxxz, g11_xy_xxxxxyy,\
                                         g11_xy_xxxxxyz, g11_xy_xxxxxzz, g11_xy_xxxxyyy,\
                                         g11_xy_xxxxyyz, g11_xy_xxxxyzz, g11_xy_xxxxzzz,\
                                         g11_xy_xxxyyyy, g11_xy_xxxyyyz, g11_xy_xxxyyzz,\
                                         g11_xy_xxxyzzz, g11_xy_xxxzzzz, g11_xy_xxyyyyy,\
                                         g11_xy_xxyyyyz, g11_xy_xxyyyzz, g11_xy_xxyyzzz,\
                                         g11_xy_xxyzzzz, g11_xy_xxzzzzz, g11_xy_xyyyyyy,\
                                         g11_xy_xyyyyyz, g11_xy_xyyyyzz, g11_xy_xyyyzzz,\
                                         g11_xy_xyyzzzz, g11_xy_xyzzzzz, g11_xy_xzzzzzz,\
                                         g11_xy_yyyyyyy, g11_xy_yyyyyyz, g11_xy_yyyyyzz,\
                                         g11_xy_yyyyzzz, g11_xy_yyyzzzz, g11_xy_yyzzzzz,\
                                         g11_xy_yzzzzzz, g11_xy_zzzzzzz, g11_xz_xxxxxxx,\
                                         g11_xz_xxxxxxy, g11_xz_xxxxxxz, g11_xz_xxxxxyy,\
                                         g11_xz_xxxxxyz, g11_xz_xxxxxzz, g11_xz_xxxxyyy,\
                                         g11_xz_xxxxyyz, g11_xz_xxxxyzz, g11_xz_xxxxzzz,\
                                         g11_xz_xxxyyyy, g11_xz_xxxyyyz, g11_xz_xxxyyzz,\
                                         g11_xz_xxxyzzz, g11_xz_xxxzzzz, g11_xz_xxyyyyy,\
                                         g11_xz_xxyyyyz, g11_xz_xxyyyzz, g11_xz_xxyyzzz,\
                                         g11_xz_xxyzzzz, g11_xz_xxzzzzz, g11_xz_xyyyyyy,\
                                         g11_xz_xyyyyyz, g11_xz_xyyyyzz, g11_xz_xyyyzzz,\
                                         g11_xz_xyyzzzz, g11_xz_xyzzzzz, g11_xz_xzzzzzz,\
                                         g11_xz_yyyyyyy, g11_xz_yyyyyyz, g11_xz_yyyyyzz,\
                                         g11_xz_yyyyzzz, g11_xz_yyyzzzz, g11_xz_yyzzzzz,\
                                         g11_xz_yzzzzzz, g11_xz_zzzzzzz, g11_yy_xxxxxxx,\
                                         g11_yy_xxxxxxy, g11_yy_xxxxxxz, g11_yy_xxxxxyy,\
                                         g11_yy_xxxxxyz, g11_yy_xxxxxzz, g11_yy_xxxxyyy,\
                                         g11_yy_xxxxyyz, g11_yy_xxxxyzz, g11_yy_xxxxzzz,\
                                         g11_yy_xxxyyyy, g11_yy_xxxyyyz, g11_yy_xxxyyzz,\
                                         g11_yy_xxxyzzz, g11_yy_xxxzzzz, g11_yy_xxyyyyy,\
                                         g11_yy_xxyyyyz, g11_yy_xxyyyzz, g11_yy_xxyyzzz,\
                                         g11_yy_xxyzzzz, g11_yy_xxzzzzz, g11_yy_xyyyyyy,\
                                         g11_yy_xyyyyyz, g11_yy_xyyyyzz, g11_yy_xyyyzzz,\
                                         g11_yy_xyyzzzz, g11_yy_xyzzzzz, g11_yy_xzzzzzz,\
                                         g11_yy_yyyyyyy, g11_yy_yyyyyyz, g11_yy_yyyyyzz,\
                                         g11_yy_yyyyzzz, g11_yy_yyyzzzz, g11_yy_yyzzzzz,\
                                         g11_yy_yzzzzzz, g11_yy_zzzzzzz, g11_yz_xxxxxxx,\
                                         g11_yz_xxxxxxy, g11_yz_xxxxxxz, g11_yz_xxxxxyy,\
                                         g11_yz_xxxxxyz, g11_yz_xxxxxzz, g11_yz_xxxxyyy,\
                                         g11_yz_xxxxyyz, g11_yz_xxxxyzz, g11_yz_xxxxzzz,\
                                         g11_yz_xxxyyyy, g11_yz_xxxyyyz, g11_yz_xxxyyzz,\
                                         g11_yz_xxxyzzz, g11_yz_xxxzzzz, g11_yz_xxyyyyy,\
                                         g11_yz_xxyyyyz, g11_yz_xxyyyzz, g11_yz_xxyyzzz,\
                                         g11_yz_xxyzzzz, g11_yz_xxzzzzz, g11_yz_xyyyyyy,\
                                         g11_yz_xyyyyyz, g11_yz_xyyyyzz, g11_yz_xyyyzzz,\
                                         g11_yz_xyyzzzz, g11_yz_xyzzzzz, g11_yz_xzzzzzz,\
                                         g11_yz_yyyyyyy, g11_yz_yyyyyyz, g11_yz_yyyyyzz,\
                                         g11_yz_yyyyzzz, g11_yz_yyyzzzz, g11_yz_yyzzzzz,\
                                         g11_yz_yzzzzzz, g11_yz_zzzzzzz, g11_zz_xxxxxxx,\
                                         g11_zz_xxxxxxy, g11_zz_xxxxxxz, g11_zz_xxxxxyy,\
                                         g11_zz_xxxxxyz, g11_zz_xxxxxzz, g11_zz_xxxxyyy,\
                                         g11_zz_xxxxyyz, g11_zz_xxxxyzz, g11_zz_xxxxzzz,\
                                         g11_zz_xxxyyyy, g11_zz_xxxyyyz, g11_zz_xxxyyzz,\
                                         g11_zz_xxxyzzz, g11_zz_xxxzzzz, g11_zz_xxyyyyy,\
                                         g11_zz_xxyyyyz, g11_zz_xxyyyzz, g11_zz_xxyyzzz,\
                                         g11_zz_xxyzzzz, g11_zz_xxzzzzz, g11_zz_xyyyyyy,\
                                         g11_zz_xyyyyyz, g11_zz_xyyyyzz, g11_zz_xyyyzzz,\
                                         g11_zz_xyyzzzz, g11_zz_xyzzzzz, g11_zz_xzzzzzz,\
                                         g11_zz_yyyyyyy, g11_zz_yyyyyyz, g11_zz_yyyyyzz,\
                                         g11_zz_yyyyzzz, g11_zz_yyyzzzz, g11_zz_yyzzzzz,\
                                         g11_zz_yzzzzzz, g11_zz_zzzzzzz, g_xxx_xxxxxxx,\
                                         g_xxx_xxxxxxy, g_xxx_xxxxxxz, g_xxx_xxxxxyy,\
                                         g_xxx_xxxxxyz, g_xxx_xxxxxzz, g_xxx_xxxxyyy,\
                                         g_xxx_xxxxyyz, g_xxx_xxxxyzz, g_xxx_xxxxzzz,\
                                         g_xxx_xxxyyyy, g_xxx_xxxyyyz, g_xxx_xxxyyzz,\
                                         g_xxx_xxxyzzz, g_xxx_xxxzzzz, g_xxx_xxyyyyy,\
                                         g_xxx_xxyyyyz, g_xxx_xxyyyzz, g_xxx_xxyyzzz,\
                                         g_xxx_xxyzzzz, g_xxx_xxzzzzz, g_xxx_xyyyyyy,\
                                         g_xxx_xyyyyyz, g_xxx_xyyyyzz, g_xxx_xyyyzzz,\
                                         g_xxx_xyyzzzz, g_xxx_xyzzzzz, g_xxx_xzzzzzz,\
                                         g_xxx_yyyyyyy, g_xxx_yyyyyyz, g_xxx_yyyyyzz,\
                                         g_xxx_yyyyzzz, g_xxx_yyyzzzz, g_xxx_yyzzzzz,\
                                         g_xxx_yzzzzzz, g_xxx_zzzzzzz, g_xxy_xxxxxxx,\
                                         g_xxy_xxxxxxy, g_xxy_xxxxxxz, g_xxy_xxxxxyy,\
                                         g_xxy_xxxxxyz, g_xxy_xxxxxzz, g_xxy_xxxxyyy,\
                                         g_xxy_xxxxyyz, g_xxy_xxxxyzz, g_xxy_xxxxzzz,\
                                         g_xxy_xxxyyyy, g_xxy_xxxyyyz, g_xxy_xxxyyzz,\
                                         g_xxy_xxxyzzz, g_xxy_xxxzzzz, g_xxy_xxyyyyy,\
                                         g_xxy_xxyyyyz, g_xxy_xxyyyzz, g_xxy_xxyyzzz,\
                                         g_xxy_xxyzzzz, g_xxy_xxzzzzz, g_xxy_xyyyyyy,\
                                         g_xxy_xyyyyyz, g_xxy_xyyyyzz, g_xxy_xyyyzzz,\
                                         g_xxy_xyyzzzz, g_xxy_xyzzzzz, g_xxy_xzzzzzz,\
                                         g_xxy_yyyyyyy, g_xxy_yyyyyyz, g_xxy_yyyyyzz,\
                                         g_xxy_yyyyzzz, g_xxy_yyyzzzz, g_xxy_yyzzzzz,\
                                         g_xxy_yzzzzzz, g_xxy_zzzzzzz, g_xxz_xxxxxxx,\
                                         g_xxz_xxxxxxy, g_xxz_xxxxxxz, g_xxz_xxxxxyy,\
                                         g_xxz_xxxxxyz, g_xxz_xxxxxzz, g_xxz_xxxxyyy,\
                                         g_xxz_xxxxyyz, g_xxz_xxxxyzz, g_xxz_xxxxzzz,\
                                         g_xxz_xxxyyyy, g_xxz_xxxyyyz, g_xxz_xxxyyzz,\
                                         g_xxz_xxxyzzz, g_xxz_xxxzzzz, g_xxz_xxyyyyy,\
                                         g_xxz_xxyyyyz, g_xxz_xxyyyzz, g_xxz_xxyyzzz,\
                                         g_xxz_xxyzzzz, g_xxz_xxzzzzz, g_xxz_xyyyyyy,\
                                         g_xxz_xyyyyyz, g_xxz_xyyyyzz, g_xxz_xyyyzzz,\
                                         g_xxz_xyyzzzz, g_xxz_xyzzzzz, g_xxz_xzzzzzz,\
                                         g_xxz_yyyyyyy, g_xxz_yyyyyyz, g_xxz_yyyyyzz,\
                                         g_xxz_yyyyzzz, g_xxz_yyyzzzz, g_xxz_yyzzzzz,\
                                         g_xxz_yzzzzzz, g_xxz_zzzzzzz, g_xyy_xxxxxxx,\
                                         g_xyy_xxxxxxy, g_xyy_xxxxxxz, g_xyy_xxxxxyy,\
                                         g_xyy_xxxxxyz, g_xyy_xxxxxzz, g_xyy_xxxxyyy,\
                                         g_xyy_xxxxyyz, g_xyy_xxxxyzz, g_xyy_xxxxzzz,\
                                         g_xyy_xxxyyyy, g_xyy_xxxyyyz, g_xyy_xxxyyzz,\
                                         g_xyy_xxxyzzz, g_xyy_xxxzzzz, g_xyy_xxyyyyy,\
                                         g_xyy_xxyyyyz, g_xyy_xxyyyzz, g_xyy_xxyyzzz,\
                                         g_xyy_xxyzzzz, g_xyy_xxzzzzz, g_xyy_xyyyyyy,\
                                         g_xyy_xyyyyyz, g_xyy_xyyyyzz, g_xyy_xyyyzzz,\
                                         g_xyy_xyyzzzz, g_xyy_xyzzzzz, g_xyy_xzzzzzz,\
                                         g_xyy_yyyyyyy, g_xyy_yyyyyyz, g_xyy_yyyyyzz,\
                                         g_xyy_yyyyzzz, g_xyy_yyyzzzz, g_xyy_yyzzzzz,\
                                         g_xyy_yzzzzzz, g_xyy_zzzzzzz, g_xyz_xxxxxxx,\
                                         g_xyz_xxxxxxy, g_xyz_xxxxxxz, g_xyz_xxxxxyy,\
                                         g_xyz_xxxxxyz, g_xyz_xxxxxzz, g_xyz_xxxxyyy,\
                                         g_xyz_xxxxyyz, g_xyz_xxxxyzz, g_xyz_xxxxzzz,\
                                         g_xyz_xxxyyyy, g_xyz_xxxyyyz, g_xyz_xxxyyzz,\
                                         g_xyz_xxxyzzz, g_xyz_xxxzzzz, g_xyz_xxyyyyy,\
                                         g_xyz_xxyyyyz, g_xyz_xxyyyzz, g_xyz_xxyyzzz,\
                                         g_xyz_xxyzzzz, g_xyz_xxzzzzz, g_xyz_xyyyyyy,\
                                         g_xyz_xyyyyyz, g_xyz_xyyyyzz, g_xyz_xyyyzzz,\
                                         g_xyz_xyyzzzz, g_xyz_xyzzzzz, g_xyz_xzzzzzz,\
                                         g_xyz_yyyyyyy, g_xyz_yyyyyyz, g_xyz_yyyyyzz,\
                                         g_xyz_yyyyzzz, g_xyz_yyyzzzz, g_xyz_yyzzzzz,\
                                         g_xyz_yzzzzzz, g_xyz_zzzzzzz, g_xzz_xxxxxxx,\
                                         g_xzz_xxxxxxy, g_xzz_xxxxxxz, g_xzz_xxxxxyy,\
                                         g_xzz_xxxxxyz, g_xzz_xxxxxzz, g_xzz_xxxxyyy,\
                                         g_xzz_xxxxyyz, g_xzz_xxxxyzz, g_xzz_xxxxzzz,\
                                         g_xzz_xxxyyyy, g_xzz_xxxyyyz, g_xzz_xxxyyzz,\
                                         g_xzz_xxxyzzz, g_xzz_xxxzzzz, g_xzz_xxyyyyy,\
                                         g_xzz_xxyyyyz, g_xzz_xxyyyzz, g_xzz_xxyyzzz,\
                                         g_xzz_xxyzzzz, g_xzz_xxzzzzz, g_xzz_xyyyyyy,\
                                         g_xzz_xyyyyyz, g_xzz_xyyyyzz, g_xzz_xyyyzzz,\
                                         g_xzz_xyyzzzz, g_xzz_xyzzzzz, g_xzz_xzzzzzz,\
                                         g_xzz_yyyyyyy, g_xzz_yyyyyyz, g_xzz_yyyyyzz,\
                                         g_xzz_yyyyzzz, g_xzz_yyyzzzz, g_xzz_yyzzzzz,\
                                         g_xzz_yzzzzzz, g_xzz_zzzzzzz, g_yyy_xxxxxxx,\
                                         g_yyy_xxxxxxy, g_yyy_xxxxxxz, g_yyy_xxxxxyy,\
                                         g_yyy_xxxxxyz, g_yyy_xxxxxzz, g_yyy_xxxxyyy,\
                                         g_yyy_xxxxyyz, g_yyy_xxxxyzz, g_yyy_xxxxzzz,\
                                         g_yyy_xxxyyyy, g_yyy_xxxyyyz, g_yyy_xxxyyzz,\
                                         g_yyy_xxxyzzz, g_yyy_xxxzzzz, g_yyy_xxyyyyy,\
                                         g_yyy_xxyyyyz, g_yyy_xxyyyzz, g_yyy_xxyyzzz,\
                                         g_yyy_xxyzzzz, g_yyy_xxzzzzz, g_yyy_xyyyyyy,\
                                         g_yyy_xyyyyyz, g_yyy_xyyyyzz, g_yyy_xyyyzzz,\
                                         g_yyy_xyyzzzz, g_yyy_xyzzzzz, g_yyy_xzzzzzz,\
                                         g_yyy_yyyyyyy, g_yyy_yyyyyyz, g_yyy_yyyyyzz,\
                                         g_yyy_yyyyzzz, g_yyy_yyyzzzz, g_yyy_yyzzzzz,\
                                         g_yyy_yzzzzzz, g_yyy_zzzzzzz, g_yyz_xxxxxxx,\
                                         g_yyz_xxxxxxy, g_yyz_xxxxxxz, g_yyz_xxxxxyy,\
                                         g_yyz_xxxxxyz, g_yyz_xxxxxzz, g_yyz_xxxxyyy,\
                                         g_yyz_xxxxyyz, g_yyz_xxxxyzz, g_yyz_xxxxzzz,\
                                         g_yyz_xxxyyyy, g_yyz_xxxyyyz, g_yyz_xxxyyzz,\
                                         g_yyz_xxxyzzz, g_yyz_xxxzzzz, g_yyz_xxyyyyy,\
                                         g_yyz_xxyyyyz, g_yyz_xxyyyzz, g_yyz_xxyyzzz,\
                                         g_yyz_xxyzzzz, g_yyz_xxzzzzz, g_yyz_xyyyyyy,\
                                         g_yyz_xyyyyyz, g_yyz_xyyyyzz, g_yyz_xyyyzzz,\
                                         g_yyz_xyyzzzz, g_yyz_xyzzzzz, g_yyz_xzzzzzz,\
                                         g_yyz_yyyyyyy, g_yyz_yyyyyyz, g_yyz_yyyyyzz,\
                                         g_yyz_yyyyzzz, g_yyz_yyyzzzz, g_yyz_yyzzzzz,\
                                         g_yyz_yzzzzzz, g_yyz_zzzzzzz, g_yzz_xxxxxxx,\
                                         g_yzz_xxxxxxy, g_yzz_xxxxxxz, g_yzz_xxxxxyy,\
                                         g_yzz_xxxxxyz, g_yzz_xxxxxzz, g_yzz_xxxxyyy,\
                                         g_yzz_xxxxyyz, g_yzz_xxxxyzz, g_yzz_xxxxzzz,\
                                         g_yzz_xxxyyyy, g_yzz_xxxyyyz, g_yzz_xxxyyzz,\
                                         g_yzz_xxxyzzz, g_yzz_xxxzzzz, g_yzz_xxyyyyy,\
                                         g_yzz_xxyyyyz, g_yzz_xxyyyzz, g_yzz_xxyyzzz,\
                                         g_yzz_xxyzzzz, g_yzz_xxzzzzz, g_yzz_xyyyyyy,\
                                         g_yzz_xyyyyyz, g_yzz_xyyyyzz, g_yzz_xyyyzzz,\
                                         g_yzz_xyyzzzz, g_yzz_xyzzzzz, g_yzz_xzzzzzz,\
                                         g_yzz_yyyyyyy, g_yzz_yyyyyyz, g_yzz_yyyyyzz,\
                                         g_yzz_yyyyzzz, g_yzz_yyyzzzz, g_yzz_yyzzzzz,\
                                         g_yzz_yzzzzzz, g_yzz_zzzzzzz, g_zzz_xxxxxxx,\
                                         g_zzz_xxxxxxy, g_zzz_xxxxxxz, g_zzz_xxxxxyy,\
                                         g_zzz_xxxxxyz, g_zzz_xxxxxzz, g_zzz_xxxxyyy,\
                                         g_zzz_xxxxyyz, g_zzz_xxxxyzz, g_zzz_xxxxzzz,\
                                         g_zzz_xxxyyyy, g_zzz_xxxyyyz, g_zzz_xxxyyzz,\
                                         g_zzz_xxxyzzz, g_zzz_xxxzzzz, g_zzz_xxyyyyy,\
                                         g_zzz_xxyyyyz, g_zzz_xxyyyzz, g_zzz_xxyyzzz,\
                                         g_zzz_xxyzzzz, g_zzz_xxzzzzz, g_zzz_xyyyyyy,\
                                         g_zzz_xyyyyyz, g_zzz_xyyyyzz, g_zzz_xyyyzzz,\
                                         g_zzz_xyyzzzz, g_zzz_xyzzzzz, g_zzz_xzzzzzz,\
                                         g_zzz_yyyyyyy, g_zzz_yyyyyyz, g_zzz_yyyyyzz,\
                                         g_zzz_yyyyzzz, g_zzz_yyyzzzz, g_zzz_yyzzzzz,\
                                         g_zzz_yzzzzzz, g_zzz_zzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxxxxxx[k] = fr * g11_xx_xxxxxxx[k] + f2g * (2.0 * g20_x_xxxxxxx[k] - 2.0 * fgz * g21_x_xxxxxxx[k]) + 7.0 * f2t * gk_xx_xxxxxx[k];

                    g_xxx_xxxxxxy[k] = fr * g11_xx_xxxxxxy[k] + f2g * (2.0 * g20_x_xxxxxxy[k] - 2.0 * fgz * g21_x_xxxxxxy[k]) + 6.0 * f2t * gk_xx_xxxxxy[k];

                    g_xxx_xxxxxxz[k] = fr * g11_xx_xxxxxxz[k] + f2g * (2.0 * g20_x_xxxxxxz[k] - 2.0 * fgz * g21_x_xxxxxxz[k]) + 6.0 * f2t * gk_xx_xxxxxz[k];

                    g_xxx_xxxxxyy[k] = fr * g11_xx_xxxxxyy[k] + f2g * (2.0 * g20_x_xxxxxyy[k] - 2.0 * fgz * g21_x_xxxxxyy[k]) + 5.0 * f2t * gk_xx_xxxxyy[k];

                    g_xxx_xxxxxyz[k] = fr * g11_xx_xxxxxyz[k] + f2g * (2.0 * g20_x_xxxxxyz[k] - 2.0 * fgz * g21_x_xxxxxyz[k]) + 5.0 * f2t * gk_xx_xxxxyz[k];

                    g_xxx_xxxxxzz[k] = fr * g11_xx_xxxxxzz[k] + f2g * (2.0 * g20_x_xxxxxzz[k] - 2.0 * fgz * g21_x_xxxxxzz[k]) + 5.0 * f2t * gk_xx_xxxxzz[k];

                    g_xxx_xxxxyyy[k] = fr * g11_xx_xxxxyyy[k] + f2g * (2.0 * g20_x_xxxxyyy[k] - 2.0 * fgz * g21_x_xxxxyyy[k]) + 4.0 * f2t * gk_xx_xxxyyy[k];

                    g_xxx_xxxxyyz[k] = fr * g11_xx_xxxxyyz[k] + f2g * (2.0 * g20_x_xxxxyyz[k] - 2.0 * fgz * g21_x_xxxxyyz[k]) + 4.0 * f2t * gk_xx_xxxyyz[k];

                    g_xxx_xxxxyzz[k] = fr * g11_xx_xxxxyzz[k] + f2g * (2.0 * g20_x_xxxxyzz[k] - 2.0 * fgz * g21_x_xxxxyzz[k]) + 4.0 * f2t * gk_xx_xxxyzz[k];

                    g_xxx_xxxxzzz[k] = fr * g11_xx_xxxxzzz[k] + f2g * (2.0 * g20_x_xxxxzzz[k] - 2.0 * fgz * g21_x_xxxxzzz[k]) + 4.0 * f2t * gk_xx_xxxzzz[k];

                    g_xxx_xxxyyyy[k] = fr * g11_xx_xxxyyyy[k] + f2g * (2.0 * g20_x_xxxyyyy[k] - 2.0 * fgz * g21_x_xxxyyyy[k]) + 3.0 * f2t * gk_xx_xxyyyy[k];

                    g_xxx_xxxyyyz[k] = fr * g11_xx_xxxyyyz[k] + f2g * (2.0 * g20_x_xxxyyyz[k] - 2.0 * fgz * g21_x_xxxyyyz[k]) + 3.0 * f2t * gk_xx_xxyyyz[k];

                    g_xxx_xxxyyzz[k] = fr * g11_xx_xxxyyzz[k] + f2g * (2.0 * g20_x_xxxyyzz[k] - 2.0 * fgz * g21_x_xxxyyzz[k]) + 3.0 * f2t * gk_xx_xxyyzz[k];

                    g_xxx_xxxyzzz[k] = fr * g11_xx_xxxyzzz[k] + f2g * (2.0 * g20_x_xxxyzzz[k] - 2.0 * fgz * g21_x_xxxyzzz[k]) + 3.0 * f2t * gk_xx_xxyzzz[k];

                    g_xxx_xxxzzzz[k] = fr * g11_xx_xxxzzzz[k] + f2g * (2.0 * g20_x_xxxzzzz[k] - 2.0 * fgz * g21_x_xxxzzzz[k]) + 3.0 * f2t * gk_xx_xxzzzz[k];

                    g_xxx_xxyyyyy[k] = fr * g11_xx_xxyyyyy[k] + f2g * (2.0 * g20_x_xxyyyyy[k] - 2.0 * fgz * g21_x_xxyyyyy[k]) + 2.0 * f2t * gk_xx_xyyyyy[k];

                    g_xxx_xxyyyyz[k] = fr * g11_xx_xxyyyyz[k] + f2g * (2.0 * g20_x_xxyyyyz[k] - 2.0 * fgz * g21_x_xxyyyyz[k]) + 2.0 * f2t * gk_xx_xyyyyz[k];

                    g_xxx_xxyyyzz[k] = fr * g11_xx_xxyyyzz[k] + f2g * (2.0 * g20_x_xxyyyzz[k] - 2.0 * fgz * g21_x_xxyyyzz[k]) + 2.0 * f2t * gk_xx_xyyyzz[k];

                    g_xxx_xxyyzzz[k] = fr * g11_xx_xxyyzzz[k] + f2g * (2.0 * g20_x_xxyyzzz[k] - 2.0 * fgz * g21_x_xxyyzzz[k]) + 2.0 * f2t * gk_xx_xyyzzz[k];

                    g_xxx_xxyzzzz[k] = fr * g11_xx_xxyzzzz[k] + f2g * (2.0 * g20_x_xxyzzzz[k] - 2.0 * fgz * g21_x_xxyzzzz[k]) + 2.0 * f2t * gk_xx_xyzzzz[k];

                    g_xxx_xxzzzzz[k] = fr * g11_xx_xxzzzzz[k] + f2g * (2.0 * g20_x_xxzzzzz[k] - 2.0 * fgz * g21_x_xxzzzzz[k]) + 2.0 * f2t * gk_xx_xzzzzz[k];

                    g_xxx_xyyyyyy[k] = fr * g11_xx_xyyyyyy[k] + f2g * (2.0 * g20_x_xyyyyyy[k] - 2.0 * fgz * g21_x_xyyyyyy[k]) + f2t * gk_xx_yyyyyy[k];

                    g_xxx_xyyyyyz[k] = fr * g11_xx_xyyyyyz[k] + f2g * (2.0 * g20_x_xyyyyyz[k] - 2.0 * fgz * g21_x_xyyyyyz[k]) + f2t * gk_xx_yyyyyz[k];

                    g_xxx_xyyyyzz[k] = fr * g11_xx_xyyyyzz[k] + f2g * (2.0 * g20_x_xyyyyzz[k] - 2.0 * fgz * g21_x_xyyyyzz[k]) + f2t * gk_xx_yyyyzz[k];

                    g_xxx_xyyyzzz[k] = fr * g11_xx_xyyyzzz[k] + f2g * (2.0 * g20_x_xyyyzzz[k] - 2.0 * fgz * g21_x_xyyyzzz[k]) + f2t * gk_xx_yyyzzz[k];

                    g_xxx_xyyzzzz[k] = fr * g11_xx_xyyzzzz[k] + f2g * (2.0 * g20_x_xyyzzzz[k] - 2.0 * fgz * g21_x_xyyzzzz[k]) + f2t * gk_xx_yyzzzz[k];

                    g_xxx_xyzzzzz[k] = fr * g11_xx_xyzzzzz[k] + f2g * (2.0 * g20_x_xyzzzzz[k] - 2.0 * fgz * g21_x_xyzzzzz[k]) + f2t * gk_xx_yzzzzz[k];

                    g_xxx_xzzzzzz[k] = fr * g11_xx_xzzzzzz[k] + f2g * (2.0 * g20_x_xzzzzzz[k] - 2.0 * fgz * g21_x_xzzzzzz[k]) + f2t * gk_xx_zzzzzz[k];

                    g_xxx_yyyyyyy[k] = fr * g11_xx_yyyyyyy[k] + f2g * (2.0 * g20_x_yyyyyyy[k] - 2.0 * fgz * g21_x_yyyyyyy[k]);

                    g_xxx_yyyyyyz[k] = fr * g11_xx_yyyyyyz[k] + f2g * (2.0 * g20_x_yyyyyyz[k] - 2.0 * fgz * g21_x_yyyyyyz[k]);

                    g_xxx_yyyyyzz[k] = fr * g11_xx_yyyyyzz[k] + f2g * (2.0 * g20_x_yyyyyzz[k] - 2.0 * fgz * g21_x_yyyyyzz[k]);

                    g_xxx_yyyyzzz[k] = fr * g11_xx_yyyyzzz[k] + f2g * (2.0 * g20_x_yyyyzzz[k] - 2.0 * fgz * g21_x_yyyyzzz[k]);

                    g_xxx_yyyzzzz[k] = fr * g11_xx_yyyzzzz[k] + f2g * (2.0 * g20_x_yyyzzzz[k] - 2.0 * fgz * g21_x_yyyzzzz[k]);

                    g_xxx_yyzzzzz[k] = fr * g11_xx_yyzzzzz[k] + f2g * (2.0 * g20_x_yyzzzzz[k] - 2.0 * fgz * g21_x_yyzzzzz[k]);

                    g_xxx_yzzzzzz[k] = fr * g11_xx_yzzzzzz[k] + f2g * (2.0 * g20_x_yzzzzzz[k] - 2.0 * fgz * g21_x_yzzzzzz[k]);

                    g_xxx_zzzzzzz[k] = fr * g11_xx_zzzzzzz[k] + f2g * (2.0 * g20_x_zzzzzzz[k] - 2.0 * fgz * g21_x_zzzzzzz[k]);

                    g_xxy_xxxxxxx[k] = fr * g11_xy_xxxxxxx[k] + f2g * (g20_y_xxxxxxx[k] - fgz * g21_y_xxxxxxx[k]) + 7.0 * f2t * gk_xy_xxxxxx[k];

                    g_xxy_xxxxxxy[k] = fr * g11_xy_xxxxxxy[k] + f2g * (g20_y_xxxxxxy[k] - fgz * g21_y_xxxxxxy[k]) + 6.0 * f2t * gk_xy_xxxxxy[k];

                    g_xxy_xxxxxxz[k] = fr * g11_xy_xxxxxxz[k] + f2g * (g20_y_xxxxxxz[k] - fgz * g21_y_xxxxxxz[k]) + 6.0 * f2t * gk_xy_xxxxxz[k];

                    g_xxy_xxxxxyy[k] = fr * g11_xy_xxxxxyy[k] + f2g * (g20_y_xxxxxyy[k] - fgz * g21_y_xxxxxyy[k]) + 5.0 * f2t * gk_xy_xxxxyy[k];

                    g_xxy_xxxxxyz[k] = fr * g11_xy_xxxxxyz[k] + f2g * (g20_y_xxxxxyz[k] - fgz * g21_y_xxxxxyz[k]) + 5.0 * f2t * gk_xy_xxxxyz[k];

                    g_xxy_xxxxxzz[k] = fr * g11_xy_xxxxxzz[k] + f2g * (g20_y_xxxxxzz[k] - fgz * g21_y_xxxxxzz[k]) + 5.0 * f2t * gk_xy_xxxxzz[k];

                    g_xxy_xxxxyyy[k] = fr * g11_xy_xxxxyyy[k] + f2g * (g20_y_xxxxyyy[k] - fgz * g21_y_xxxxyyy[k]) + 4.0 * f2t * gk_xy_xxxyyy[k];

                    g_xxy_xxxxyyz[k] = fr * g11_xy_xxxxyyz[k] + f2g * (g20_y_xxxxyyz[k] - fgz * g21_y_xxxxyyz[k]) + 4.0 * f2t * gk_xy_xxxyyz[k];

                    g_xxy_xxxxyzz[k] = fr * g11_xy_xxxxyzz[k] + f2g * (g20_y_xxxxyzz[k] - fgz * g21_y_xxxxyzz[k]) + 4.0 * f2t * gk_xy_xxxyzz[k];

                    g_xxy_xxxxzzz[k] = fr * g11_xy_xxxxzzz[k] + f2g * (g20_y_xxxxzzz[k] - fgz * g21_y_xxxxzzz[k]) + 4.0 * f2t * gk_xy_xxxzzz[k];

                    g_xxy_xxxyyyy[k] = fr * g11_xy_xxxyyyy[k] + f2g * (g20_y_xxxyyyy[k] - fgz * g21_y_xxxyyyy[k]) + 3.0 * f2t * gk_xy_xxyyyy[k];

                    g_xxy_xxxyyyz[k] = fr * g11_xy_xxxyyyz[k] + f2g * (g20_y_xxxyyyz[k] - fgz * g21_y_xxxyyyz[k]) + 3.0 * f2t * gk_xy_xxyyyz[k];

                    g_xxy_xxxyyzz[k] = fr * g11_xy_xxxyyzz[k] + f2g * (g20_y_xxxyyzz[k] - fgz * g21_y_xxxyyzz[k]) + 3.0 * f2t * gk_xy_xxyyzz[k];

                    g_xxy_xxxyzzz[k] = fr * g11_xy_xxxyzzz[k] + f2g * (g20_y_xxxyzzz[k] - fgz * g21_y_xxxyzzz[k]) + 3.0 * f2t * gk_xy_xxyzzz[k];

                    g_xxy_xxxzzzz[k] = fr * g11_xy_xxxzzzz[k] + f2g * (g20_y_xxxzzzz[k] - fgz * g21_y_xxxzzzz[k]) + 3.0 * f2t * gk_xy_xxzzzz[k];

                    g_xxy_xxyyyyy[k] = fr * g11_xy_xxyyyyy[k] + f2g * (g20_y_xxyyyyy[k] - fgz * g21_y_xxyyyyy[k]) + 2.0 * f2t * gk_xy_xyyyyy[k];

                    g_xxy_xxyyyyz[k] = fr * g11_xy_xxyyyyz[k] + f2g * (g20_y_xxyyyyz[k] - fgz * g21_y_xxyyyyz[k]) + 2.0 * f2t * gk_xy_xyyyyz[k];

                    g_xxy_xxyyyzz[k] = fr * g11_xy_xxyyyzz[k] + f2g * (g20_y_xxyyyzz[k] - fgz * g21_y_xxyyyzz[k]) + 2.0 * f2t * gk_xy_xyyyzz[k];

                    g_xxy_xxyyzzz[k] = fr * g11_xy_xxyyzzz[k] + f2g * (g20_y_xxyyzzz[k] - fgz * g21_y_xxyyzzz[k]) + 2.0 * f2t * gk_xy_xyyzzz[k];

                    g_xxy_xxyzzzz[k] = fr * g11_xy_xxyzzzz[k] + f2g * (g20_y_xxyzzzz[k] - fgz * g21_y_xxyzzzz[k]) + 2.0 * f2t * gk_xy_xyzzzz[k];

                    g_xxy_xxzzzzz[k] = fr * g11_xy_xxzzzzz[k] + f2g * (g20_y_xxzzzzz[k] - fgz * g21_y_xxzzzzz[k]) + 2.0 * f2t * gk_xy_xzzzzz[k];

                    g_xxy_xyyyyyy[k] = fr * g11_xy_xyyyyyy[k] + f2g * (g20_y_xyyyyyy[k] - fgz * g21_y_xyyyyyy[k]) + f2t * gk_xy_yyyyyy[k];

                    g_xxy_xyyyyyz[k] = fr * g11_xy_xyyyyyz[k] + f2g * (g20_y_xyyyyyz[k] - fgz * g21_y_xyyyyyz[k]) + f2t * gk_xy_yyyyyz[k];

                    g_xxy_xyyyyzz[k] = fr * g11_xy_xyyyyzz[k] + f2g * (g20_y_xyyyyzz[k] - fgz * g21_y_xyyyyzz[k]) + f2t * gk_xy_yyyyzz[k];

                    g_xxy_xyyyzzz[k] = fr * g11_xy_xyyyzzz[k] + f2g * (g20_y_xyyyzzz[k] - fgz * g21_y_xyyyzzz[k]) + f2t * gk_xy_yyyzzz[k];

                    g_xxy_xyyzzzz[k] = fr * g11_xy_xyyzzzz[k] + f2g * (g20_y_xyyzzzz[k] - fgz * g21_y_xyyzzzz[k]) + f2t * gk_xy_yyzzzz[k];

                    g_xxy_xyzzzzz[k] = fr * g11_xy_xyzzzzz[k] + f2g * (g20_y_xyzzzzz[k] - fgz * g21_y_xyzzzzz[k]) + f2t * gk_xy_yzzzzz[k];

                    g_xxy_xzzzzzz[k] = fr * g11_xy_xzzzzzz[k] + f2g * (g20_y_xzzzzzz[k] - fgz * g21_y_xzzzzzz[k]) + f2t * gk_xy_zzzzzz[k];

                    g_xxy_yyyyyyy[k] = fr * g11_xy_yyyyyyy[k] + f2g * (g20_y_yyyyyyy[k] - fgz * g21_y_yyyyyyy[k]);

                    g_xxy_yyyyyyz[k] = fr * g11_xy_yyyyyyz[k] + f2g * (g20_y_yyyyyyz[k] - fgz * g21_y_yyyyyyz[k]);

                    g_xxy_yyyyyzz[k] = fr * g11_xy_yyyyyzz[k] + f2g * (g20_y_yyyyyzz[k] - fgz * g21_y_yyyyyzz[k]);

                    g_xxy_yyyyzzz[k] = fr * g11_xy_yyyyzzz[k] + f2g * (g20_y_yyyyzzz[k] - fgz * g21_y_yyyyzzz[k]);

                    g_xxy_yyyzzzz[k] = fr * g11_xy_yyyzzzz[k] + f2g * (g20_y_yyyzzzz[k] - fgz * g21_y_yyyzzzz[k]);

                    g_xxy_yyzzzzz[k] = fr * g11_xy_yyzzzzz[k] + f2g * (g20_y_yyzzzzz[k] - fgz * g21_y_yyzzzzz[k]);

                    g_xxy_yzzzzzz[k] = fr * g11_xy_yzzzzzz[k] + f2g * (g20_y_yzzzzzz[k] - fgz * g21_y_yzzzzzz[k]);

                    g_xxy_zzzzzzz[k] = fr * g11_xy_zzzzzzz[k] + f2g * (g20_y_zzzzzzz[k] - fgz * g21_y_zzzzzzz[k]);

                    g_xxz_xxxxxxx[k] = fr * g11_xz_xxxxxxx[k] + f2g * (g20_z_xxxxxxx[k] - fgz * g21_z_xxxxxxx[k]) + 7.0 * f2t * gk_xz_xxxxxx[k];

                    g_xxz_xxxxxxy[k] = fr * g11_xz_xxxxxxy[k] + f2g * (g20_z_xxxxxxy[k] - fgz * g21_z_xxxxxxy[k]) + 6.0 * f2t * gk_xz_xxxxxy[k];

                    g_xxz_xxxxxxz[k] = fr * g11_xz_xxxxxxz[k] + f2g * (g20_z_xxxxxxz[k] - fgz * g21_z_xxxxxxz[k]) + 6.0 * f2t * gk_xz_xxxxxz[k];

                    g_xxz_xxxxxyy[k] = fr * g11_xz_xxxxxyy[k] + f2g * (g20_z_xxxxxyy[k] - fgz * g21_z_xxxxxyy[k]) + 5.0 * f2t * gk_xz_xxxxyy[k];

                    g_xxz_xxxxxyz[k] = fr * g11_xz_xxxxxyz[k] + f2g * (g20_z_xxxxxyz[k] - fgz * g21_z_xxxxxyz[k]) + 5.0 * f2t * gk_xz_xxxxyz[k];

                    g_xxz_xxxxxzz[k] = fr * g11_xz_xxxxxzz[k] + f2g * (g20_z_xxxxxzz[k] - fgz * g21_z_xxxxxzz[k]) + 5.0 * f2t * gk_xz_xxxxzz[k];

                    g_xxz_xxxxyyy[k] = fr * g11_xz_xxxxyyy[k] + f2g * (g20_z_xxxxyyy[k] - fgz * g21_z_xxxxyyy[k]) + 4.0 * f2t * gk_xz_xxxyyy[k];

                    g_xxz_xxxxyyz[k] = fr * g11_xz_xxxxyyz[k] + f2g * (g20_z_xxxxyyz[k] - fgz * g21_z_xxxxyyz[k]) + 4.0 * f2t * gk_xz_xxxyyz[k];

                    g_xxz_xxxxyzz[k] = fr * g11_xz_xxxxyzz[k] + f2g * (g20_z_xxxxyzz[k] - fgz * g21_z_xxxxyzz[k]) + 4.0 * f2t * gk_xz_xxxyzz[k];

                    g_xxz_xxxxzzz[k] = fr * g11_xz_xxxxzzz[k] + f2g * (g20_z_xxxxzzz[k] - fgz * g21_z_xxxxzzz[k]) + 4.0 * f2t * gk_xz_xxxzzz[k];

                    g_xxz_xxxyyyy[k] = fr * g11_xz_xxxyyyy[k] + f2g * (g20_z_xxxyyyy[k] - fgz * g21_z_xxxyyyy[k]) + 3.0 * f2t * gk_xz_xxyyyy[k];

                    g_xxz_xxxyyyz[k] = fr * g11_xz_xxxyyyz[k] + f2g * (g20_z_xxxyyyz[k] - fgz * g21_z_xxxyyyz[k]) + 3.0 * f2t * gk_xz_xxyyyz[k];

                    g_xxz_xxxyyzz[k] = fr * g11_xz_xxxyyzz[k] + f2g * (g20_z_xxxyyzz[k] - fgz * g21_z_xxxyyzz[k]) + 3.0 * f2t * gk_xz_xxyyzz[k];

                    g_xxz_xxxyzzz[k] = fr * g11_xz_xxxyzzz[k] + f2g * (g20_z_xxxyzzz[k] - fgz * g21_z_xxxyzzz[k]) + 3.0 * f2t * gk_xz_xxyzzz[k];

                    g_xxz_xxxzzzz[k] = fr * g11_xz_xxxzzzz[k] + f2g * (g20_z_xxxzzzz[k] - fgz * g21_z_xxxzzzz[k]) + 3.0 * f2t * gk_xz_xxzzzz[k];

                    g_xxz_xxyyyyy[k] = fr * g11_xz_xxyyyyy[k] + f2g * (g20_z_xxyyyyy[k] - fgz * g21_z_xxyyyyy[k]) + 2.0 * f2t * gk_xz_xyyyyy[k];

                    g_xxz_xxyyyyz[k] = fr * g11_xz_xxyyyyz[k] + f2g * (g20_z_xxyyyyz[k] - fgz * g21_z_xxyyyyz[k]) + 2.0 * f2t * gk_xz_xyyyyz[k];

                    g_xxz_xxyyyzz[k] = fr * g11_xz_xxyyyzz[k] + f2g * (g20_z_xxyyyzz[k] - fgz * g21_z_xxyyyzz[k]) + 2.0 * f2t * gk_xz_xyyyzz[k];

                    g_xxz_xxyyzzz[k] = fr * g11_xz_xxyyzzz[k] + f2g * (g20_z_xxyyzzz[k] - fgz * g21_z_xxyyzzz[k]) + 2.0 * f2t * gk_xz_xyyzzz[k];

                    g_xxz_xxyzzzz[k] = fr * g11_xz_xxyzzzz[k] + f2g * (g20_z_xxyzzzz[k] - fgz * g21_z_xxyzzzz[k]) + 2.0 * f2t * gk_xz_xyzzzz[k];

                    g_xxz_xxzzzzz[k] = fr * g11_xz_xxzzzzz[k] + f2g * (g20_z_xxzzzzz[k] - fgz * g21_z_xxzzzzz[k]) + 2.0 * f2t * gk_xz_xzzzzz[k];

                    g_xxz_xyyyyyy[k] = fr * g11_xz_xyyyyyy[k] + f2g * (g20_z_xyyyyyy[k] - fgz * g21_z_xyyyyyy[k]) + f2t * gk_xz_yyyyyy[k];

                    g_xxz_xyyyyyz[k] = fr * g11_xz_xyyyyyz[k] + f2g * (g20_z_xyyyyyz[k] - fgz * g21_z_xyyyyyz[k]) + f2t * gk_xz_yyyyyz[k];

                    g_xxz_xyyyyzz[k] = fr * g11_xz_xyyyyzz[k] + f2g * (g20_z_xyyyyzz[k] - fgz * g21_z_xyyyyzz[k]) + f2t * gk_xz_yyyyzz[k];

                    g_xxz_xyyyzzz[k] = fr * g11_xz_xyyyzzz[k] + f2g * (g20_z_xyyyzzz[k] - fgz * g21_z_xyyyzzz[k]) + f2t * gk_xz_yyyzzz[k];

                    g_xxz_xyyzzzz[k] = fr * g11_xz_xyyzzzz[k] + f2g * (g20_z_xyyzzzz[k] - fgz * g21_z_xyyzzzz[k]) + f2t * gk_xz_yyzzzz[k];

                    g_xxz_xyzzzzz[k] = fr * g11_xz_xyzzzzz[k] + f2g * (g20_z_xyzzzzz[k] - fgz * g21_z_xyzzzzz[k]) + f2t * gk_xz_yzzzzz[k];

                    g_xxz_xzzzzzz[k] = fr * g11_xz_xzzzzzz[k] + f2g * (g20_z_xzzzzzz[k] - fgz * g21_z_xzzzzzz[k]) + f2t * gk_xz_zzzzzz[k];

                    g_xxz_yyyyyyy[k] = fr * g11_xz_yyyyyyy[k] + f2g * (g20_z_yyyyyyy[k] - fgz * g21_z_yyyyyyy[k]);

                    g_xxz_yyyyyyz[k] = fr * g11_xz_yyyyyyz[k] + f2g * (g20_z_yyyyyyz[k] - fgz * g21_z_yyyyyyz[k]);

                    g_xxz_yyyyyzz[k] = fr * g11_xz_yyyyyzz[k] + f2g * (g20_z_yyyyyzz[k] - fgz * g21_z_yyyyyzz[k]);

                    g_xxz_yyyyzzz[k] = fr * g11_xz_yyyyzzz[k] + f2g * (g20_z_yyyyzzz[k] - fgz * g21_z_yyyyzzz[k]);

                    g_xxz_yyyzzzz[k] = fr * g11_xz_yyyzzzz[k] + f2g * (g20_z_yyyzzzz[k] - fgz * g21_z_yyyzzzz[k]);

                    g_xxz_yyzzzzz[k] = fr * g11_xz_yyzzzzz[k] + f2g * (g20_z_yyzzzzz[k] - fgz * g21_z_yyzzzzz[k]);

                    g_xxz_yzzzzzz[k] = fr * g11_xz_yzzzzzz[k] + f2g * (g20_z_yzzzzzz[k] - fgz * g21_z_yzzzzzz[k]);

                    g_xxz_zzzzzzz[k] = fr * g11_xz_zzzzzzz[k] + f2g * (g20_z_zzzzzzz[k] - fgz * g21_z_zzzzzzz[k]);

                    g_xyy_xxxxxxx[k] = fr * g11_yy_xxxxxxx[k] + 7.0 * f2t * gk_yy_xxxxxx[k];

                    g_xyy_xxxxxxy[k] = fr * g11_yy_xxxxxxy[k] + 6.0 * f2t * gk_yy_xxxxxy[k];

                    g_xyy_xxxxxxz[k] = fr * g11_yy_xxxxxxz[k] + 6.0 * f2t * gk_yy_xxxxxz[k];

                    g_xyy_xxxxxyy[k] = fr * g11_yy_xxxxxyy[k] + 5.0 * f2t * gk_yy_xxxxyy[k];

                    g_xyy_xxxxxyz[k] = fr * g11_yy_xxxxxyz[k] + 5.0 * f2t * gk_yy_xxxxyz[k];

                    g_xyy_xxxxxzz[k] = fr * g11_yy_xxxxxzz[k] + 5.0 * f2t * gk_yy_xxxxzz[k];

                    g_xyy_xxxxyyy[k] = fr * g11_yy_xxxxyyy[k] + 4.0 * f2t * gk_yy_xxxyyy[k];

                    g_xyy_xxxxyyz[k] = fr * g11_yy_xxxxyyz[k] + 4.0 * f2t * gk_yy_xxxyyz[k];

                    g_xyy_xxxxyzz[k] = fr * g11_yy_xxxxyzz[k] + 4.0 * f2t * gk_yy_xxxyzz[k];

                    g_xyy_xxxxzzz[k] = fr * g11_yy_xxxxzzz[k] + 4.0 * f2t * gk_yy_xxxzzz[k];

                    g_xyy_xxxyyyy[k] = fr * g11_yy_xxxyyyy[k] + 3.0 * f2t * gk_yy_xxyyyy[k];

                    g_xyy_xxxyyyz[k] = fr * g11_yy_xxxyyyz[k] + 3.0 * f2t * gk_yy_xxyyyz[k];

                    g_xyy_xxxyyzz[k] = fr * g11_yy_xxxyyzz[k] + 3.0 * f2t * gk_yy_xxyyzz[k];

                    g_xyy_xxxyzzz[k] = fr * g11_yy_xxxyzzz[k] + 3.0 * f2t * gk_yy_xxyzzz[k];

                    g_xyy_xxxzzzz[k] = fr * g11_yy_xxxzzzz[k] + 3.0 * f2t * gk_yy_xxzzzz[k];

                    g_xyy_xxyyyyy[k] = fr * g11_yy_xxyyyyy[k] + 2.0 * f2t * gk_yy_xyyyyy[k];

                    g_xyy_xxyyyyz[k] = fr * g11_yy_xxyyyyz[k] + 2.0 * f2t * gk_yy_xyyyyz[k];

                    g_xyy_xxyyyzz[k] = fr * g11_yy_xxyyyzz[k] + 2.0 * f2t * gk_yy_xyyyzz[k];

                    g_xyy_xxyyzzz[k] = fr * g11_yy_xxyyzzz[k] + 2.0 * f2t * gk_yy_xyyzzz[k];

                    g_xyy_xxyzzzz[k] = fr * g11_yy_xxyzzzz[k] + 2.0 * f2t * gk_yy_xyzzzz[k];

                    g_xyy_xxzzzzz[k] = fr * g11_yy_xxzzzzz[k] + 2.0 * f2t * gk_yy_xzzzzz[k];

                    g_xyy_xyyyyyy[k] = fr * g11_yy_xyyyyyy[k] + f2t * gk_yy_yyyyyy[k];

                    g_xyy_xyyyyyz[k] = fr * g11_yy_xyyyyyz[k] + f2t * gk_yy_yyyyyz[k];

                    g_xyy_xyyyyzz[k] = fr * g11_yy_xyyyyzz[k] + f2t * gk_yy_yyyyzz[k];

                    g_xyy_xyyyzzz[k] = fr * g11_yy_xyyyzzz[k] + f2t * gk_yy_yyyzzz[k];

                    g_xyy_xyyzzzz[k] = fr * g11_yy_xyyzzzz[k] + f2t * gk_yy_yyzzzz[k];

                    g_xyy_xyzzzzz[k] = fr * g11_yy_xyzzzzz[k] + f2t * gk_yy_yzzzzz[k];

                    g_xyy_xzzzzzz[k] = fr * g11_yy_xzzzzzz[k] + f2t * gk_yy_zzzzzz[k];

                    g_xyy_yyyyyyy[k] = fr * g11_yy_yyyyyyy[k];

                    g_xyy_yyyyyyz[k] = fr * g11_yy_yyyyyyz[k];

                    g_xyy_yyyyyzz[k] = fr * g11_yy_yyyyyzz[k];

                    g_xyy_yyyyzzz[k] = fr * g11_yy_yyyyzzz[k];

                    g_xyy_yyyzzzz[k] = fr * g11_yy_yyyzzzz[k];

                    g_xyy_yyzzzzz[k] = fr * g11_yy_yyzzzzz[k];

                    g_xyy_yzzzzzz[k] = fr * g11_yy_yzzzzzz[k];

                    g_xyy_zzzzzzz[k] = fr * g11_yy_zzzzzzz[k];

                    g_xyz_xxxxxxx[k] = fr * g11_yz_xxxxxxx[k] + 7.0 * f2t * gk_yz_xxxxxx[k];

                    g_xyz_xxxxxxy[k] = fr * g11_yz_xxxxxxy[k] + 6.0 * f2t * gk_yz_xxxxxy[k];

                    g_xyz_xxxxxxz[k] = fr * g11_yz_xxxxxxz[k] + 6.0 * f2t * gk_yz_xxxxxz[k];

                    g_xyz_xxxxxyy[k] = fr * g11_yz_xxxxxyy[k] + 5.0 * f2t * gk_yz_xxxxyy[k];

                    g_xyz_xxxxxyz[k] = fr * g11_yz_xxxxxyz[k] + 5.0 * f2t * gk_yz_xxxxyz[k];

                    g_xyz_xxxxxzz[k] = fr * g11_yz_xxxxxzz[k] + 5.0 * f2t * gk_yz_xxxxzz[k];

                    g_xyz_xxxxyyy[k] = fr * g11_yz_xxxxyyy[k] + 4.0 * f2t * gk_yz_xxxyyy[k];

                    g_xyz_xxxxyyz[k] = fr * g11_yz_xxxxyyz[k] + 4.0 * f2t * gk_yz_xxxyyz[k];

                    g_xyz_xxxxyzz[k] = fr * g11_yz_xxxxyzz[k] + 4.0 * f2t * gk_yz_xxxyzz[k];

                    g_xyz_xxxxzzz[k] = fr * g11_yz_xxxxzzz[k] + 4.0 * f2t * gk_yz_xxxzzz[k];

                    g_xyz_xxxyyyy[k] = fr * g11_yz_xxxyyyy[k] + 3.0 * f2t * gk_yz_xxyyyy[k];

                    g_xyz_xxxyyyz[k] = fr * g11_yz_xxxyyyz[k] + 3.0 * f2t * gk_yz_xxyyyz[k];

                    g_xyz_xxxyyzz[k] = fr * g11_yz_xxxyyzz[k] + 3.0 * f2t * gk_yz_xxyyzz[k];

                    g_xyz_xxxyzzz[k] = fr * g11_yz_xxxyzzz[k] + 3.0 * f2t * gk_yz_xxyzzz[k];

                    g_xyz_xxxzzzz[k] = fr * g11_yz_xxxzzzz[k] + 3.0 * f2t * gk_yz_xxzzzz[k];

                    g_xyz_xxyyyyy[k] = fr * g11_yz_xxyyyyy[k] + 2.0 * f2t * gk_yz_xyyyyy[k];

                    g_xyz_xxyyyyz[k] = fr * g11_yz_xxyyyyz[k] + 2.0 * f2t * gk_yz_xyyyyz[k];

                    g_xyz_xxyyyzz[k] = fr * g11_yz_xxyyyzz[k] + 2.0 * f2t * gk_yz_xyyyzz[k];

                    g_xyz_xxyyzzz[k] = fr * g11_yz_xxyyzzz[k] + 2.0 * f2t * gk_yz_xyyzzz[k];

                    g_xyz_xxyzzzz[k] = fr * g11_yz_xxyzzzz[k] + 2.0 * f2t * gk_yz_xyzzzz[k];

                    g_xyz_xxzzzzz[k] = fr * g11_yz_xxzzzzz[k] + 2.0 * f2t * gk_yz_xzzzzz[k];

                    g_xyz_xyyyyyy[k] = fr * g11_yz_xyyyyyy[k] + f2t * gk_yz_yyyyyy[k];

                    g_xyz_xyyyyyz[k] = fr * g11_yz_xyyyyyz[k] + f2t * gk_yz_yyyyyz[k];

                    g_xyz_xyyyyzz[k] = fr * g11_yz_xyyyyzz[k] + f2t * gk_yz_yyyyzz[k];

                    g_xyz_xyyyzzz[k] = fr * g11_yz_xyyyzzz[k] + f2t * gk_yz_yyyzzz[k];

                    g_xyz_xyyzzzz[k] = fr * g11_yz_xyyzzzz[k] + f2t * gk_yz_yyzzzz[k];

                    g_xyz_xyzzzzz[k] = fr * g11_yz_xyzzzzz[k] + f2t * gk_yz_yzzzzz[k];

                    g_xyz_xzzzzzz[k] = fr * g11_yz_xzzzzzz[k] + f2t * gk_yz_zzzzzz[k];

                    g_xyz_yyyyyyy[k] = fr * g11_yz_yyyyyyy[k];

                    g_xyz_yyyyyyz[k] = fr * g11_yz_yyyyyyz[k];

                    g_xyz_yyyyyzz[k] = fr * g11_yz_yyyyyzz[k];

                    g_xyz_yyyyzzz[k] = fr * g11_yz_yyyyzzz[k];

                    g_xyz_yyyzzzz[k] = fr * g11_yz_yyyzzzz[k];

                    g_xyz_yyzzzzz[k] = fr * g11_yz_yyzzzzz[k];

                    g_xyz_yzzzzzz[k] = fr * g11_yz_yzzzzzz[k];

                    g_xyz_zzzzzzz[k] = fr * g11_yz_zzzzzzz[k];

                    g_xzz_xxxxxxx[k] = fr * g11_zz_xxxxxxx[k] + 7.0 * f2t * gk_zz_xxxxxx[k];

                    g_xzz_xxxxxxy[k] = fr * g11_zz_xxxxxxy[k] + 6.0 * f2t * gk_zz_xxxxxy[k];

                    g_xzz_xxxxxxz[k] = fr * g11_zz_xxxxxxz[k] + 6.0 * f2t * gk_zz_xxxxxz[k];

                    g_xzz_xxxxxyy[k] = fr * g11_zz_xxxxxyy[k] + 5.0 * f2t * gk_zz_xxxxyy[k];

                    g_xzz_xxxxxyz[k] = fr * g11_zz_xxxxxyz[k] + 5.0 * f2t * gk_zz_xxxxyz[k];

                    g_xzz_xxxxxzz[k] = fr * g11_zz_xxxxxzz[k] + 5.0 * f2t * gk_zz_xxxxzz[k];

                    g_xzz_xxxxyyy[k] = fr * g11_zz_xxxxyyy[k] + 4.0 * f2t * gk_zz_xxxyyy[k];

                    g_xzz_xxxxyyz[k] = fr * g11_zz_xxxxyyz[k] + 4.0 * f2t * gk_zz_xxxyyz[k];

                    g_xzz_xxxxyzz[k] = fr * g11_zz_xxxxyzz[k] + 4.0 * f2t * gk_zz_xxxyzz[k];

                    g_xzz_xxxxzzz[k] = fr * g11_zz_xxxxzzz[k] + 4.0 * f2t * gk_zz_xxxzzz[k];

                    g_xzz_xxxyyyy[k] = fr * g11_zz_xxxyyyy[k] + 3.0 * f2t * gk_zz_xxyyyy[k];

                    g_xzz_xxxyyyz[k] = fr * g11_zz_xxxyyyz[k] + 3.0 * f2t * gk_zz_xxyyyz[k];

                    g_xzz_xxxyyzz[k] = fr * g11_zz_xxxyyzz[k] + 3.0 * f2t * gk_zz_xxyyzz[k];

                    g_xzz_xxxyzzz[k] = fr * g11_zz_xxxyzzz[k] + 3.0 * f2t * gk_zz_xxyzzz[k];

                    g_xzz_xxxzzzz[k] = fr * g11_zz_xxxzzzz[k] + 3.0 * f2t * gk_zz_xxzzzz[k];

                    g_xzz_xxyyyyy[k] = fr * g11_zz_xxyyyyy[k] + 2.0 * f2t * gk_zz_xyyyyy[k];

                    g_xzz_xxyyyyz[k] = fr * g11_zz_xxyyyyz[k] + 2.0 * f2t * gk_zz_xyyyyz[k];

                    g_xzz_xxyyyzz[k] = fr * g11_zz_xxyyyzz[k] + 2.0 * f2t * gk_zz_xyyyzz[k];

                    g_xzz_xxyyzzz[k] = fr * g11_zz_xxyyzzz[k] + 2.0 * f2t * gk_zz_xyyzzz[k];

                    g_xzz_xxyzzzz[k] = fr * g11_zz_xxyzzzz[k] + 2.0 * f2t * gk_zz_xyzzzz[k];

                    g_xzz_xxzzzzz[k] = fr * g11_zz_xxzzzzz[k] + 2.0 * f2t * gk_zz_xzzzzz[k];

                    g_xzz_xyyyyyy[k] = fr * g11_zz_xyyyyyy[k] + f2t * gk_zz_yyyyyy[k];

                    g_xzz_xyyyyyz[k] = fr * g11_zz_xyyyyyz[k] + f2t * gk_zz_yyyyyz[k];

                    g_xzz_xyyyyzz[k] = fr * g11_zz_xyyyyzz[k] + f2t * gk_zz_yyyyzz[k];

                    g_xzz_xyyyzzz[k] = fr * g11_zz_xyyyzzz[k] + f2t * gk_zz_yyyzzz[k];

                    g_xzz_xyyzzzz[k] = fr * g11_zz_xyyzzzz[k] + f2t * gk_zz_yyzzzz[k];

                    g_xzz_xyzzzzz[k] = fr * g11_zz_xyzzzzz[k] + f2t * gk_zz_yzzzzz[k];

                    g_xzz_xzzzzzz[k] = fr * g11_zz_xzzzzzz[k] + f2t * gk_zz_zzzzzz[k];

                    g_xzz_yyyyyyy[k] = fr * g11_zz_yyyyyyy[k];

                    g_xzz_yyyyyyz[k] = fr * g11_zz_yyyyyyz[k];

                    g_xzz_yyyyyzz[k] = fr * g11_zz_yyyyyzz[k];

                    g_xzz_yyyyzzz[k] = fr * g11_zz_yyyyzzz[k];

                    g_xzz_yyyzzzz[k] = fr * g11_zz_yyyzzzz[k];

                    g_xzz_yyzzzzz[k] = fr * g11_zz_yyzzzzz[k];

                    g_xzz_yzzzzzz[k] = fr * g11_zz_yzzzzzz[k];

                    g_xzz_zzzzzzz[k] = fr * g11_zz_zzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxxxxxx[k] = fr * g11_yy_xxxxxxx[k] + f2g * (2.0 * g20_y_xxxxxxx[k] - 2.0 * fgz * g21_y_xxxxxxx[k]);

                    g_yyy_xxxxxxy[k] = fr * g11_yy_xxxxxxy[k] + f2g * (2.0 * g20_y_xxxxxxy[k] - 2.0 * fgz * g21_y_xxxxxxy[k]) + f2t * gk_yy_xxxxxx[k];

                    g_yyy_xxxxxxz[k] = fr * g11_yy_xxxxxxz[k] + f2g * (2.0 * g20_y_xxxxxxz[k] - 2.0 * fgz * g21_y_xxxxxxz[k]);

                    g_yyy_xxxxxyy[k] = fr * g11_yy_xxxxxyy[k] + f2g * (2.0 * g20_y_xxxxxyy[k] - 2.0 * fgz * g21_y_xxxxxyy[k]) + 2.0 * f2t * gk_yy_xxxxxy[k];

                    g_yyy_xxxxxyz[k] = fr * g11_yy_xxxxxyz[k] + f2g * (2.0 * g20_y_xxxxxyz[k] - 2.0 * fgz * g21_y_xxxxxyz[k]) + f2t * gk_yy_xxxxxz[k];

                    g_yyy_xxxxxzz[k] = fr * g11_yy_xxxxxzz[k] + f2g * (2.0 * g20_y_xxxxxzz[k] - 2.0 * fgz * g21_y_xxxxxzz[k]);

                    g_yyy_xxxxyyy[k] = fr * g11_yy_xxxxyyy[k] + f2g * (2.0 * g20_y_xxxxyyy[k] - 2.0 * fgz * g21_y_xxxxyyy[k]) + 3.0 * f2t * gk_yy_xxxxyy[k];

                    g_yyy_xxxxyyz[k] = fr * g11_yy_xxxxyyz[k] + f2g * (2.0 * g20_y_xxxxyyz[k] - 2.0 * fgz * g21_y_xxxxyyz[k]) + 2.0 * f2t * gk_yy_xxxxyz[k];

                    g_yyy_xxxxyzz[k] = fr * g11_yy_xxxxyzz[k] + f2g * (2.0 * g20_y_xxxxyzz[k] - 2.0 * fgz * g21_y_xxxxyzz[k]) + f2t * gk_yy_xxxxzz[k];

                    g_yyy_xxxxzzz[k] = fr * g11_yy_xxxxzzz[k] + f2g * (2.0 * g20_y_xxxxzzz[k] - 2.0 * fgz * g21_y_xxxxzzz[k]);

                    g_yyy_xxxyyyy[k] = fr * g11_yy_xxxyyyy[k] + f2g * (2.0 * g20_y_xxxyyyy[k] - 2.0 * fgz * g21_y_xxxyyyy[k]) + 4.0 * f2t * gk_yy_xxxyyy[k];

                    g_yyy_xxxyyyz[k] = fr * g11_yy_xxxyyyz[k] + f2g * (2.0 * g20_y_xxxyyyz[k] - 2.0 * fgz * g21_y_xxxyyyz[k]) + 3.0 * f2t * gk_yy_xxxyyz[k];

                    g_yyy_xxxyyzz[k] = fr * g11_yy_xxxyyzz[k] + f2g * (2.0 * g20_y_xxxyyzz[k] - 2.0 * fgz * g21_y_xxxyyzz[k]) + 2.0 * f2t * gk_yy_xxxyzz[k];

                    g_yyy_xxxyzzz[k] = fr * g11_yy_xxxyzzz[k] + f2g * (2.0 * g20_y_xxxyzzz[k] - 2.0 * fgz * g21_y_xxxyzzz[k]) + f2t * gk_yy_xxxzzz[k];

                    g_yyy_xxxzzzz[k] = fr * g11_yy_xxxzzzz[k] + f2g * (2.0 * g20_y_xxxzzzz[k] - 2.0 * fgz * g21_y_xxxzzzz[k]);

                    g_yyy_xxyyyyy[k] = fr * g11_yy_xxyyyyy[k] + f2g * (2.0 * g20_y_xxyyyyy[k] - 2.0 * fgz * g21_y_xxyyyyy[k]) + 5.0 * f2t * gk_yy_xxyyyy[k];

                    g_yyy_xxyyyyz[k] = fr * g11_yy_xxyyyyz[k] + f2g * (2.0 * g20_y_xxyyyyz[k] - 2.0 * fgz * g21_y_xxyyyyz[k]) + 4.0 * f2t * gk_yy_xxyyyz[k];

                    g_yyy_xxyyyzz[k] = fr * g11_yy_xxyyyzz[k] + f2g * (2.0 * g20_y_xxyyyzz[k] - 2.0 * fgz * g21_y_xxyyyzz[k]) + 3.0 * f2t * gk_yy_xxyyzz[k];

                    g_yyy_xxyyzzz[k] = fr * g11_yy_xxyyzzz[k] + f2g * (2.0 * g20_y_xxyyzzz[k] - 2.0 * fgz * g21_y_xxyyzzz[k]) + 2.0 * f2t * gk_yy_xxyzzz[k];

                    g_yyy_xxyzzzz[k] = fr * g11_yy_xxyzzzz[k] + f2g * (2.0 * g20_y_xxyzzzz[k] - 2.0 * fgz * g21_y_xxyzzzz[k]) + f2t * gk_yy_xxzzzz[k];

                    g_yyy_xxzzzzz[k] = fr * g11_yy_xxzzzzz[k] + f2g * (2.0 * g20_y_xxzzzzz[k] - 2.0 * fgz * g21_y_xxzzzzz[k]);

                    g_yyy_xyyyyyy[k] = fr * g11_yy_xyyyyyy[k] + f2g * (2.0 * g20_y_xyyyyyy[k] - 2.0 * fgz * g21_y_xyyyyyy[k]) + 6.0 * f2t * gk_yy_xyyyyy[k];

                    g_yyy_xyyyyyz[k] = fr * g11_yy_xyyyyyz[k] + f2g * (2.0 * g20_y_xyyyyyz[k] - 2.0 * fgz * g21_y_xyyyyyz[k]) + 5.0 * f2t * gk_yy_xyyyyz[k];

                    g_yyy_xyyyyzz[k] = fr * g11_yy_xyyyyzz[k] + f2g * (2.0 * g20_y_xyyyyzz[k] - 2.0 * fgz * g21_y_xyyyyzz[k]) + 4.0 * f2t * gk_yy_xyyyzz[k];

                    g_yyy_xyyyzzz[k] = fr * g11_yy_xyyyzzz[k] + f2g * (2.0 * g20_y_xyyyzzz[k] - 2.0 * fgz * g21_y_xyyyzzz[k]) + 3.0 * f2t * gk_yy_xyyzzz[k];

                    g_yyy_xyyzzzz[k] = fr * g11_yy_xyyzzzz[k] + f2g * (2.0 * g20_y_xyyzzzz[k] - 2.0 * fgz * g21_y_xyyzzzz[k]) + 2.0 * f2t * gk_yy_xyzzzz[k];

                    g_yyy_xyzzzzz[k] = fr * g11_yy_xyzzzzz[k] + f2g * (2.0 * g20_y_xyzzzzz[k] - 2.0 * fgz * g21_y_xyzzzzz[k]) + f2t * gk_yy_xzzzzz[k];

                    g_yyy_xzzzzzz[k] = fr * g11_yy_xzzzzzz[k] + f2g * (2.0 * g20_y_xzzzzzz[k] - 2.0 * fgz * g21_y_xzzzzzz[k]);

                    g_yyy_yyyyyyy[k] = fr * g11_yy_yyyyyyy[k] + f2g * (2.0 * g20_y_yyyyyyy[k] - 2.0 * fgz * g21_y_yyyyyyy[k]) + 7.0 * f2t * gk_yy_yyyyyy[k];

                    g_yyy_yyyyyyz[k] = fr * g11_yy_yyyyyyz[k] + f2g * (2.0 * g20_y_yyyyyyz[k] - 2.0 * fgz * g21_y_yyyyyyz[k]) + 6.0 * f2t * gk_yy_yyyyyz[k];

                    g_yyy_yyyyyzz[k] = fr * g11_yy_yyyyyzz[k] + f2g * (2.0 * g20_y_yyyyyzz[k] - 2.0 * fgz * g21_y_yyyyyzz[k]) + 5.0 * f2t * gk_yy_yyyyzz[k];

                    g_yyy_yyyyzzz[k] = fr * g11_yy_yyyyzzz[k] + f2g * (2.0 * g20_y_yyyyzzz[k] - 2.0 * fgz * g21_y_yyyyzzz[k]) + 4.0 * f2t * gk_yy_yyyzzz[k];

                    g_yyy_yyyzzzz[k] = fr * g11_yy_yyyzzzz[k] + f2g * (2.0 * g20_y_yyyzzzz[k] - 2.0 * fgz * g21_y_yyyzzzz[k]) + 3.0 * f2t * gk_yy_yyzzzz[k];

                    g_yyy_yyzzzzz[k] = fr * g11_yy_yyzzzzz[k] + f2g * (2.0 * g20_y_yyzzzzz[k] - 2.0 * fgz * g21_y_yyzzzzz[k]) + 2.0 * f2t * gk_yy_yzzzzz[k];

                    g_yyy_yzzzzzz[k] = fr * g11_yy_yzzzzzz[k] + f2g * (2.0 * g20_y_yzzzzzz[k] - 2.0 * fgz * g21_y_yzzzzzz[k]) + f2t * gk_yy_zzzzzz[k];

                    g_yyy_zzzzzzz[k] = fr * g11_yy_zzzzzzz[k] + f2g * (2.0 * g20_y_zzzzzzz[k] - 2.0 * fgz * g21_y_zzzzzzz[k]);

                    g_yyz_xxxxxxx[k] = fr * g11_yz_xxxxxxx[k] + f2g * (g20_z_xxxxxxx[k] - fgz * g21_z_xxxxxxx[k]);

                    g_yyz_xxxxxxy[k] = fr * g11_yz_xxxxxxy[k] + f2g * (g20_z_xxxxxxy[k] - fgz * g21_z_xxxxxxy[k]) + f2t * gk_yz_xxxxxx[k];

                    g_yyz_xxxxxxz[k] = fr * g11_yz_xxxxxxz[k] + f2g * (g20_z_xxxxxxz[k] - fgz * g21_z_xxxxxxz[k]);

                    g_yyz_xxxxxyy[k] = fr * g11_yz_xxxxxyy[k] + f2g * (g20_z_xxxxxyy[k] - fgz * g21_z_xxxxxyy[k]) + 2.0 * f2t * gk_yz_xxxxxy[k];

                    g_yyz_xxxxxyz[k] = fr * g11_yz_xxxxxyz[k] + f2g * (g20_z_xxxxxyz[k] - fgz * g21_z_xxxxxyz[k]) + f2t * gk_yz_xxxxxz[k];

                    g_yyz_xxxxxzz[k] = fr * g11_yz_xxxxxzz[k] + f2g * (g20_z_xxxxxzz[k] - fgz * g21_z_xxxxxzz[k]);

                    g_yyz_xxxxyyy[k] = fr * g11_yz_xxxxyyy[k] + f2g * (g20_z_xxxxyyy[k] - fgz * g21_z_xxxxyyy[k]) + 3.0 * f2t * gk_yz_xxxxyy[k];

                    g_yyz_xxxxyyz[k] = fr * g11_yz_xxxxyyz[k] + f2g * (g20_z_xxxxyyz[k] - fgz * g21_z_xxxxyyz[k]) + 2.0 * f2t * gk_yz_xxxxyz[k];

                    g_yyz_xxxxyzz[k] = fr * g11_yz_xxxxyzz[k] + f2g * (g20_z_xxxxyzz[k] - fgz * g21_z_xxxxyzz[k]) + f2t * gk_yz_xxxxzz[k];

                    g_yyz_xxxxzzz[k] = fr * g11_yz_xxxxzzz[k] + f2g * (g20_z_xxxxzzz[k] - fgz * g21_z_xxxxzzz[k]);

                    g_yyz_xxxyyyy[k] = fr * g11_yz_xxxyyyy[k] + f2g * (g20_z_xxxyyyy[k] - fgz * g21_z_xxxyyyy[k]) + 4.0 * f2t * gk_yz_xxxyyy[k];

                    g_yyz_xxxyyyz[k] = fr * g11_yz_xxxyyyz[k] + f2g * (g20_z_xxxyyyz[k] - fgz * g21_z_xxxyyyz[k]) + 3.0 * f2t * gk_yz_xxxyyz[k];

                    g_yyz_xxxyyzz[k] = fr * g11_yz_xxxyyzz[k] + f2g * (g20_z_xxxyyzz[k] - fgz * g21_z_xxxyyzz[k]) + 2.0 * f2t * gk_yz_xxxyzz[k];

                    g_yyz_xxxyzzz[k] = fr * g11_yz_xxxyzzz[k] + f2g * (g20_z_xxxyzzz[k] - fgz * g21_z_xxxyzzz[k]) + f2t * gk_yz_xxxzzz[k];

                    g_yyz_xxxzzzz[k] = fr * g11_yz_xxxzzzz[k] + f2g * (g20_z_xxxzzzz[k] - fgz * g21_z_xxxzzzz[k]);

                    g_yyz_xxyyyyy[k] = fr * g11_yz_xxyyyyy[k] + f2g * (g20_z_xxyyyyy[k] - fgz * g21_z_xxyyyyy[k]) + 5.0 * f2t * gk_yz_xxyyyy[k];

                    g_yyz_xxyyyyz[k] = fr * g11_yz_xxyyyyz[k] + f2g * (g20_z_xxyyyyz[k] - fgz * g21_z_xxyyyyz[k]) + 4.0 * f2t * gk_yz_xxyyyz[k];

                    g_yyz_xxyyyzz[k] = fr * g11_yz_xxyyyzz[k] + f2g * (g20_z_xxyyyzz[k] - fgz * g21_z_xxyyyzz[k]) + 3.0 * f2t * gk_yz_xxyyzz[k];

                    g_yyz_xxyyzzz[k] = fr * g11_yz_xxyyzzz[k] + f2g * (g20_z_xxyyzzz[k] - fgz * g21_z_xxyyzzz[k]) + 2.0 * f2t * gk_yz_xxyzzz[k];

                    g_yyz_xxyzzzz[k] = fr * g11_yz_xxyzzzz[k] + f2g * (g20_z_xxyzzzz[k] - fgz * g21_z_xxyzzzz[k]) + f2t * gk_yz_xxzzzz[k];

                    g_yyz_xxzzzzz[k] = fr * g11_yz_xxzzzzz[k] + f2g * (g20_z_xxzzzzz[k] - fgz * g21_z_xxzzzzz[k]);

                    g_yyz_xyyyyyy[k] = fr * g11_yz_xyyyyyy[k] + f2g * (g20_z_xyyyyyy[k] - fgz * g21_z_xyyyyyy[k]) + 6.0 * f2t * gk_yz_xyyyyy[k];

                    g_yyz_xyyyyyz[k] = fr * g11_yz_xyyyyyz[k] + f2g * (g20_z_xyyyyyz[k] - fgz * g21_z_xyyyyyz[k]) + 5.0 * f2t * gk_yz_xyyyyz[k];

                    g_yyz_xyyyyzz[k] = fr * g11_yz_xyyyyzz[k] + f2g * (g20_z_xyyyyzz[k] - fgz * g21_z_xyyyyzz[k]) + 4.0 * f2t * gk_yz_xyyyzz[k];

                    g_yyz_xyyyzzz[k] = fr * g11_yz_xyyyzzz[k] + f2g * (g20_z_xyyyzzz[k] - fgz * g21_z_xyyyzzz[k]) + 3.0 * f2t * gk_yz_xyyzzz[k];

                    g_yyz_xyyzzzz[k] = fr * g11_yz_xyyzzzz[k] + f2g * (g20_z_xyyzzzz[k] - fgz * g21_z_xyyzzzz[k]) + 2.0 * f2t * gk_yz_xyzzzz[k];

                    g_yyz_xyzzzzz[k] = fr * g11_yz_xyzzzzz[k] + f2g * (g20_z_xyzzzzz[k] - fgz * g21_z_xyzzzzz[k]) + f2t * gk_yz_xzzzzz[k];

                    g_yyz_xzzzzzz[k] = fr * g11_yz_xzzzzzz[k] + f2g * (g20_z_xzzzzzz[k] - fgz * g21_z_xzzzzzz[k]);

                    g_yyz_yyyyyyy[k] = fr * g11_yz_yyyyyyy[k] + f2g * (g20_z_yyyyyyy[k] - fgz * g21_z_yyyyyyy[k]) + 7.0 * f2t * gk_yz_yyyyyy[k];

                    g_yyz_yyyyyyz[k] = fr * g11_yz_yyyyyyz[k] + f2g * (g20_z_yyyyyyz[k] - fgz * g21_z_yyyyyyz[k]) + 6.0 * f2t * gk_yz_yyyyyz[k];

                    g_yyz_yyyyyzz[k] = fr * g11_yz_yyyyyzz[k] + f2g * (g20_z_yyyyyzz[k] - fgz * g21_z_yyyyyzz[k]) + 5.0 * f2t * gk_yz_yyyyzz[k];

                    g_yyz_yyyyzzz[k] = fr * g11_yz_yyyyzzz[k] + f2g * (g20_z_yyyyzzz[k] - fgz * g21_z_yyyyzzz[k]) + 4.0 * f2t * gk_yz_yyyzzz[k];

                    g_yyz_yyyzzzz[k] = fr * g11_yz_yyyzzzz[k] + f2g * (g20_z_yyyzzzz[k] - fgz * g21_z_yyyzzzz[k]) + 3.0 * f2t * gk_yz_yyzzzz[k];

                    g_yyz_yyzzzzz[k] = fr * g11_yz_yyzzzzz[k] + f2g * (g20_z_yyzzzzz[k] - fgz * g21_z_yyzzzzz[k]) + 2.0 * f2t * gk_yz_yzzzzz[k];

                    g_yyz_yzzzzzz[k] = fr * g11_yz_yzzzzzz[k] + f2g * (g20_z_yzzzzzz[k] - fgz * g21_z_yzzzzzz[k]) + f2t * gk_yz_zzzzzz[k];

                    g_yyz_zzzzzzz[k] = fr * g11_yz_zzzzzzz[k] + f2g * (g20_z_zzzzzzz[k] - fgz * g21_z_zzzzzzz[k]);

                    g_yzz_xxxxxxx[k] = fr * g11_zz_xxxxxxx[k];

                    g_yzz_xxxxxxy[k] = fr * g11_zz_xxxxxxy[k] + f2t * gk_zz_xxxxxx[k];

                    g_yzz_xxxxxxz[k] = fr * g11_zz_xxxxxxz[k];

                    g_yzz_xxxxxyy[k] = fr * g11_zz_xxxxxyy[k] + 2.0 * f2t * gk_zz_xxxxxy[k];

                    g_yzz_xxxxxyz[k] = fr * g11_zz_xxxxxyz[k] + f2t * gk_zz_xxxxxz[k];

                    g_yzz_xxxxxzz[k] = fr * g11_zz_xxxxxzz[k];

                    g_yzz_xxxxyyy[k] = fr * g11_zz_xxxxyyy[k] + 3.0 * f2t * gk_zz_xxxxyy[k];

                    g_yzz_xxxxyyz[k] = fr * g11_zz_xxxxyyz[k] + 2.0 * f2t * gk_zz_xxxxyz[k];

                    g_yzz_xxxxyzz[k] = fr * g11_zz_xxxxyzz[k] + f2t * gk_zz_xxxxzz[k];

                    g_yzz_xxxxzzz[k] = fr * g11_zz_xxxxzzz[k];

                    g_yzz_xxxyyyy[k] = fr * g11_zz_xxxyyyy[k] + 4.0 * f2t * gk_zz_xxxyyy[k];

                    g_yzz_xxxyyyz[k] = fr * g11_zz_xxxyyyz[k] + 3.0 * f2t * gk_zz_xxxyyz[k];

                    g_yzz_xxxyyzz[k] = fr * g11_zz_xxxyyzz[k] + 2.0 * f2t * gk_zz_xxxyzz[k];

                    g_yzz_xxxyzzz[k] = fr * g11_zz_xxxyzzz[k] + f2t * gk_zz_xxxzzz[k];

                    g_yzz_xxxzzzz[k] = fr * g11_zz_xxxzzzz[k];

                    g_yzz_xxyyyyy[k] = fr * g11_zz_xxyyyyy[k] + 5.0 * f2t * gk_zz_xxyyyy[k];

                    g_yzz_xxyyyyz[k] = fr * g11_zz_xxyyyyz[k] + 4.0 * f2t * gk_zz_xxyyyz[k];

                    g_yzz_xxyyyzz[k] = fr * g11_zz_xxyyyzz[k] + 3.0 * f2t * gk_zz_xxyyzz[k];

                    g_yzz_xxyyzzz[k] = fr * g11_zz_xxyyzzz[k] + 2.0 * f2t * gk_zz_xxyzzz[k];

                    g_yzz_xxyzzzz[k] = fr * g11_zz_xxyzzzz[k] + f2t * gk_zz_xxzzzz[k];

                    g_yzz_xxzzzzz[k] = fr * g11_zz_xxzzzzz[k];

                    g_yzz_xyyyyyy[k] = fr * g11_zz_xyyyyyy[k] + 6.0 * f2t * gk_zz_xyyyyy[k];

                    g_yzz_xyyyyyz[k] = fr * g11_zz_xyyyyyz[k] + 5.0 * f2t * gk_zz_xyyyyz[k];

                    g_yzz_xyyyyzz[k] = fr * g11_zz_xyyyyzz[k] + 4.0 * f2t * gk_zz_xyyyzz[k];

                    g_yzz_xyyyzzz[k] = fr * g11_zz_xyyyzzz[k] + 3.0 * f2t * gk_zz_xyyzzz[k];

                    g_yzz_xyyzzzz[k] = fr * g11_zz_xyyzzzz[k] + 2.0 * f2t * gk_zz_xyzzzz[k];

                    g_yzz_xyzzzzz[k] = fr * g11_zz_xyzzzzz[k] + f2t * gk_zz_xzzzzz[k];

                    g_yzz_xzzzzzz[k] = fr * g11_zz_xzzzzzz[k];

                    g_yzz_yyyyyyy[k] = fr * g11_zz_yyyyyyy[k] + 7.0 * f2t * gk_zz_yyyyyy[k];

                    g_yzz_yyyyyyz[k] = fr * g11_zz_yyyyyyz[k] + 6.0 * f2t * gk_zz_yyyyyz[k];

                    g_yzz_yyyyyzz[k] = fr * g11_zz_yyyyyzz[k] + 5.0 * f2t * gk_zz_yyyyzz[k];

                    g_yzz_yyyyzzz[k] = fr * g11_zz_yyyyzzz[k] + 4.0 * f2t * gk_zz_yyyzzz[k];

                    g_yzz_yyyzzzz[k] = fr * g11_zz_yyyzzzz[k] + 3.0 * f2t * gk_zz_yyzzzz[k];

                    g_yzz_yyzzzzz[k] = fr * g11_zz_yyzzzzz[k] + 2.0 * f2t * gk_zz_yzzzzz[k];

                    g_yzz_yzzzzzz[k] = fr * g11_zz_yzzzzzz[k] + f2t * gk_zz_zzzzzz[k];

                    g_yzz_zzzzzzz[k] = fr * g11_zz_zzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxxxxxx[k] = fr * g11_zz_xxxxxxx[k] + f2g * (2.0 * g20_z_xxxxxxx[k] - 2.0 * fgz * g21_z_xxxxxxx[k]);

                    g_zzz_xxxxxxy[k] = fr * g11_zz_xxxxxxy[k] + f2g * (2.0 * g20_z_xxxxxxy[k] - 2.0 * fgz * g21_z_xxxxxxy[k]);

                    g_zzz_xxxxxxz[k] = fr * g11_zz_xxxxxxz[k] + f2g * (2.0 * g20_z_xxxxxxz[k] - 2.0 * fgz * g21_z_xxxxxxz[k]) + f2t * gk_zz_xxxxxx[k];

                    g_zzz_xxxxxyy[k] = fr * g11_zz_xxxxxyy[k] + f2g * (2.0 * g20_z_xxxxxyy[k] - 2.0 * fgz * g21_z_xxxxxyy[k]);

                    g_zzz_xxxxxyz[k] = fr * g11_zz_xxxxxyz[k] + f2g * (2.0 * g20_z_xxxxxyz[k] - 2.0 * fgz * g21_z_xxxxxyz[k]) + f2t * gk_zz_xxxxxy[k];

                    g_zzz_xxxxxzz[k] = fr * g11_zz_xxxxxzz[k] + f2g * (2.0 * g20_z_xxxxxzz[k] - 2.0 * fgz * g21_z_xxxxxzz[k]) + 2.0 * f2t * gk_zz_xxxxxz[k];

                    g_zzz_xxxxyyy[k] = fr * g11_zz_xxxxyyy[k] + f2g * (2.0 * g20_z_xxxxyyy[k] - 2.0 * fgz * g21_z_xxxxyyy[k]);

                    g_zzz_xxxxyyz[k] = fr * g11_zz_xxxxyyz[k] + f2g * (2.0 * g20_z_xxxxyyz[k] - 2.0 * fgz * g21_z_xxxxyyz[k]) + f2t * gk_zz_xxxxyy[k];

                    g_zzz_xxxxyzz[k] = fr * g11_zz_xxxxyzz[k] + f2g * (2.0 * g20_z_xxxxyzz[k] - 2.0 * fgz * g21_z_xxxxyzz[k]) + 2.0 * f2t * gk_zz_xxxxyz[k];

                    g_zzz_xxxxzzz[k] = fr * g11_zz_xxxxzzz[k] + f2g * (2.0 * g20_z_xxxxzzz[k] - 2.0 * fgz * g21_z_xxxxzzz[k]) + 3.0 * f2t * gk_zz_xxxxzz[k];

                    g_zzz_xxxyyyy[k] = fr * g11_zz_xxxyyyy[k] + f2g * (2.0 * g20_z_xxxyyyy[k] - 2.0 * fgz * g21_z_xxxyyyy[k]);

                    g_zzz_xxxyyyz[k] = fr * g11_zz_xxxyyyz[k] + f2g * (2.0 * g20_z_xxxyyyz[k] - 2.0 * fgz * g21_z_xxxyyyz[k]) + f2t * gk_zz_xxxyyy[k];

                    g_zzz_xxxyyzz[k] = fr * g11_zz_xxxyyzz[k] + f2g * (2.0 * g20_z_xxxyyzz[k] - 2.0 * fgz * g21_z_xxxyyzz[k]) + 2.0 * f2t * gk_zz_xxxyyz[k];

                    g_zzz_xxxyzzz[k] = fr * g11_zz_xxxyzzz[k] + f2g * (2.0 * g20_z_xxxyzzz[k] - 2.0 * fgz * g21_z_xxxyzzz[k]) + 3.0 * f2t * gk_zz_xxxyzz[k];

                    g_zzz_xxxzzzz[k] = fr * g11_zz_xxxzzzz[k] + f2g * (2.0 * g20_z_xxxzzzz[k] - 2.0 * fgz * g21_z_xxxzzzz[k]) + 4.0 * f2t * gk_zz_xxxzzz[k];

                    g_zzz_xxyyyyy[k] = fr * g11_zz_xxyyyyy[k] + f2g * (2.0 * g20_z_xxyyyyy[k] - 2.0 * fgz * g21_z_xxyyyyy[k]);

                    g_zzz_xxyyyyz[k] = fr * g11_zz_xxyyyyz[k] + f2g * (2.0 * g20_z_xxyyyyz[k] - 2.0 * fgz * g21_z_xxyyyyz[k]) + f2t * gk_zz_xxyyyy[k];

                    g_zzz_xxyyyzz[k] = fr * g11_zz_xxyyyzz[k] + f2g * (2.0 * g20_z_xxyyyzz[k] - 2.0 * fgz * g21_z_xxyyyzz[k]) + 2.0 * f2t * gk_zz_xxyyyz[k];

                    g_zzz_xxyyzzz[k] = fr * g11_zz_xxyyzzz[k] + f2g * (2.0 * g20_z_xxyyzzz[k] - 2.0 * fgz * g21_z_xxyyzzz[k]) + 3.0 * f2t * gk_zz_xxyyzz[k];

                    g_zzz_xxyzzzz[k] = fr * g11_zz_xxyzzzz[k] + f2g * (2.0 * g20_z_xxyzzzz[k] - 2.0 * fgz * g21_z_xxyzzzz[k]) + 4.0 * f2t * gk_zz_xxyzzz[k];

                    g_zzz_xxzzzzz[k] = fr * g11_zz_xxzzzzz[k] + f2g * (2.0 * g20_z_xxzzzzz[k] - 2.0 * fgz * g21_z_xxzzzzz[k]) + 5.0 * f2t * gk_zz_xxzzzz[k];

                    g_zzz_xyyyyyy[k] = fr * g11_zz_xyyyyyy[k] + f2g * (2.0 * g20_z_xyyyyyy[k] - 2.0 * fgz * g21_z_xyyyyyy[k]);

                    g_zzz_xyyyyyz[k] = fr * g11_zz_xyyyyyz[k] + f2g * (2.0 * g20_z_xyyyyyz[k] - 2.0 * fgz * g21_z_xyyyyyz[k]) + f2t * gk_zz_xyyyyy[k];

                    g_zzz_xyyyyzz[k] = fr * g11_zz_xyyyyzz[k] + f2g * (2.0 * g20_z_xyyyyzz[k] - 2.0 * fgz * g21_z_xyyyyzz[k]) + 2.0 * f2t * gk_zz_xyyyyz[k];

                    g_zzz_xyyyzzz[k] = fr * g11_zz_xyyyzzz[k] + f2g * (2.0 * g20_z_xyyyzzz[k] - 2.0 * fgz * g21_z_xyyyzzz[k]) + 3.0 * f2t * gk_zz_xyyyzz[k];

                    g_zzz_xyyzzzz[k] = fr * g11_zz_xyyzzzz[k] + f2g * (2.0 * g20_z_xyyzzzz[k] - 2.0 * fgz * g21_z_xyyzzzz[k]) + 4.0 * f2t * gk_zz_xyyzzz[k];

                    g_zzz_xyzzzzz[k] = fr * g11_zz_xyzzzzz[k] + f2g * (2.0 * g20_z_xyzzzzz[k] - 2.0 * fgz * g21_z_xyzzzzz[k]) + 5.0 * f2t * gk_zz_xyzzzz[k];

                    g_zzz_xzzzzzz[k] = fr * g11_zz_xzzzzzz[k] + f2g * (2.0 * g20_z_xzzzzzz[k] - 2.0 * fgz * g21_z_xzzzzzz[k]) + 6.0 * f2t * gk_zz_xzzzzz[k];

                    g_zzz_yyyyyyy[k] = fr * g11_zz_yyyyyyy[k] + f2g * (2.0 * g20_z_yyyyyyy[k] - 2.0 * fgz * g21_z_yyyyyyy[k]);

                    g_zzz_yyyyyyz[k] = fr * g11_zz_yyyyyyz[k] + f2g * (2.0 * g20_z_yyyyyyz[k] - 2.0 * fgz * g21_z_yyyyyyz[k]) + f2t * gk_zz_yyyyyy[k];

                    g_zzz_yyyyyzz[k] = fr * g11_zz_yyyyyzz[k] + f2g * (2.0 * g20_z_yyyyyzz[k] - 2.0 * fgz * g21_z_yyyyyzz[k]) + 2.0 * f2t * gk_zz_yyyyyz[k];

                    g_zzz_yyyyzzz[k] = fr * g11_zz_yyyyzzz[k] + f2g * (2.0 * g20_z_yyyyzzz[k] - 2.0 * fgz * g21_z_yyyyzzz[k]) + 3.0 * f2t * gk_zz_yyyyzz[k];

                    g_zzz_yyyzzzz[k] = fr * g11_zz_yyyzzzz[k] + f2g * (2.0 * g20_z_yyyzzzz[k] - 2.0 * fgz * g21_z_yyyzzzz[k]) + 4.0 * f2t * gk_zz_yyyzzz[k];

                    g_zzz_yyzzzzz[k] = fr * g11_zz_yyzzzzz[k] + f2g * (2.0 * g20_z_yyzzzzz[k] - 2.0 * fgz * g21_z_yyzzzzz[k]) + 5.0 * f2t * gk_zz_yyzzzz[k];

                    g_zzz_yzzzzzz[k] = fr * g11_zz_yzzzzzz[k] + f2g * (2.0 * g20_z_yzzzzzz[k] - 2.0 * fgz * g21_z_yzzzzzz[k]) + 6.0 * f2t * gk_zz_yzzzzz[k];

                    g_zzz_zzzzzzz[k] = fr * g11_zz_zzzzzzz[k] + f2g * (2.0 * g20_z_zzzzzzz[k] - 2.0 * fgz * g21_z_zzzzzzz[k]) + 7.0 * f2t * gk_zz_zzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSK(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 7);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 7, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 7, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 7, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 7, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 6, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SI)^(m+1) integrals

                auto gk_xxx_xxxxxx = primBuffer.data(gkoff + 280 * idx);

                auto gk_xxx_xxxxxy = primBuffer.data(gkoff + 280 * idx + 1);

                auto gk_xxx_xxxxxz = primBuffer.data(gkoff + 280 * idx + 2);

                auto gk_xxx_xxxxyy = primBuffer.data(gkoff + 280 * idx + 3);

                auto gk_xxx_xxxxyz = primBuffer.data(gkoff + 280 * idx + 4);

                auto gk_xxx_xxxxzz = primBuffer.data(gkoff + 280 * idx + 5);

                auto gk_xxx_xxxyyy = primBuffer.data(gkoff + 280 * idx + 6);

                auto gk_xxx_xxxyyz = primBuffer.data(gkoff + 280 * idx + 7);

                auto gk_xxx_xxxyzz = primBuffer.data(gkoff + 280 * idx + 8);

                auto gk_xxx_xxxzzz = primBuffer.data(gkoff + 280 * idx + 9);

                auto gk_xxx_xxyyyy = primBuffer.data(gkoff + 280 * idx + 10);

                auto gk_xxx_xxyyyz = primBuffer.data(gkoff + 280 * idx + 11);

                auto gk_xxx_xxyyzz = primBuffer.data(gkoff + 280 * idx + 12);

                auto gk_xxx_xxyzzz = primBuffer.data(gkoff + 280 * idx + 13);

                auto gk_xxx_xxzzzz = primBuffer.data(gkoff + 280 * idx + 14);

                auto gk_xxx_xyyyyy = primBuffer.data(gkoff + 280 * idx + 15);

                auto gk_xxx_xyyyyz = primBuffer.data(gkoff + 280 * idx + 16);

                auto gk_xxx_xyyyzz = primBuffer.data(gkoff + 280 * idx + 17);

                auto gk_xxx_xyyzzz = primBuffer.data(gkoff + 280 * idx + 18);

                auto gk_xxx_xyzzzz = primBuffer.data(gkoff + 280 * idx + 19);

                auto gk_xxx_xzzzzz = primBuffer.data(gkoff + 280 * idx + 20);

                auto gk_xxx_yyyyyy = primBuffer.data(gkoff + 280 * idx + 21);

                auto gk_xxx_yyyyyz = primBuffer.data(gkoff + 280 * idx + 22);

                auto gk_xxx_yyyyzz = primBuffer.data(gkoff + 280 * idx + 23);

                auto gk_xxx_yyyzzz = primBuffer.data(gkoff + 280 * idx + 24);

                auto gk_xxx_yyzzzz = primBuffer.data(gkoff + 280 * idx + 25);

                auto gk_xxx_yzzzzz = primBuffer.data(gkoff + 280 * idx + 26);

                auto gk_xxx_zzzzzz = primBuffer.data(gkoff + 280 * idx + 27);

                auto gk_xxy_xxxxxx = primBuffer.data(gkoff + 280 * idx + 28);

                auto gk_xxy_xxxxxy = primBuffer.data(gkoff + 280 * idx + 29);

                auto gk_xxy_xxxxxz = primBuffer.data(gkoff + 280 * idx + 30);

                auto gk_xxy_xxxxyy = primBuffer.data(gkoff + 280 * idx + 31);

                auto gk_xxy_xxxxyz = primBuffer.data(gkoff + 280 * idx + 32);

                auto gk_xxy_xxxxzz = primBuffer.data(gkoff + 280 * idx + 33);

                auto gk_xxy_xxxyyy = primBuffer.data(gkoff + 280 * idx + 34);

                auto gk_xxy_xxxyyz = primBuffer.data(gkoff + 280 * idx + 35);

                auto gk_xxy_xxxyzz = primBuffer.data(gkoff + 280 * idx + 36);

                auto gk_xxy_xxxzzz = primBuffer.data(gkoff + 280 * idx + 37);

                auto gk_xxy_xxyyyy = primBuffer.data(gkoff + 280 * idx + 38);

                auto gk_xxy_xxyyyz = primBuffer.data(gkoff + 280 * idx + 39);

                auto gk_xxy_xxyyzz = primBuffer.data(gkoff + 280 * idx + 40);

                auto gk_xxy_xxyzzz = primBuffer.data(gkoff + 280 * idx + 41);

                auto gk_xxy_xxzzzz = primBuffer.data(gkoff + 280 * idx + 42);

                auto gk_xxy_xyyyyy = primBuffer.data(gkoff + 280 * idx + 43);

                auto gk_xxy_xyyyyz = primBuffer.data(gkoff + 280 * idx + 44);

                auto gk_xxy_xyyyzz = primBuffer.data(gkoff + 280 * idx + 45);

                auto gk_xxy_xyyzzz = primBuffer.data(gkoff + 280 * idx + 46);

                auto gk_xxy_xyzzzz = primBuffer.data(gkoff + 280 * idx + 47);

                auto gk_xxy_xzzzzz = primBuffer.data(gkoff + 280 * idx + 48);

                auto gk_xxy_yyyyyy = primBuffer.data(gkoff + 280 * idx + 49);

                auto gk_xxy_yyyyyz = primBuffer.data(gkoff + 280 * idx + 50);

                auto gk_xxy_yyyyzz = primBuffer.data(gkoff + 280 * idx + 51);

                auto gk_xxy_yyyzzz = primBuffer.data(gkoff + 280 * idx + 52);

                auto gk_xxy_yyzzzz = primBuffer.data(gkoff + 280 * idx + 53);

                auto gk_xxy_yzzzzz = primBuffer.data(gkoff + 280 * idx + 54);

                auto gk_xxy_zzzzzz = primBuffer.data(gkoff + 280 * idx + 55);

                auto gk_xxz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 56);

                auto gk_xxz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 57);

                auto gk_xxz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 58);

                auto gk_xxz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 59);

                auto gk_xxz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 60);

                auto gk_xxz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 61);

                auto gk_xxz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 62);

                auto gk_xxz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 63);

                auto gk_xxz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 64);

                auto gk_xxz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 65);

                auto gk_xxz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 66);

                auto gk_xxz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 67);

                auto gk_xxz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 68);

                auto gk_xxz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 69);

                auto gk_xxz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 70);

                auto gk_xxz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 71);

                auto gk_xxz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 72);

                auto gk_xxz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 73);

                auto gk_xxz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 74);

                auto gk_xxz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 75);

                auto gk_xxz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 76);

                auto gk_xxz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 77);

                auto gk_xxz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 78);

                auto gk_xxz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 79);

                auto gk_xxz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 80);

                auto gk_xxz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 81);

                auto gk_xxz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 82);

                auto gk_xxz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 83);

                auto gk_xyy_xxxxxx = primBuffer.data(gkoff + 280 * idx + 84);

                auto gk_xyy_xxxxxy = primBuffer.data(gkoff + 280 * idx + 85);

                auto gk_xyy_xxxxxz = primBuffer.data(gkoff + 280 * idx + 86);

                auto gk_xyy_xxxxyy = primBuffer.data(gkoff + 280 * idx + 87);

                auto gk_xyy_xxxxyz = primBuffer.data(gkoff + 280 * idx + 88);

                auto gk_xyy_xxxxzz = primBuffer.data(gkoff + 280 * idx + 89);

                auto gk_xyy_xxxyyy = primBuffer.data(gkoff + 280 * idx + 90);

                auto gk_xyy_xxxyyz = primBuffer.data(gkoff + 280 * idx + 91);

                auto gk_xyy_xxxyzz = primBuffer.data(gkoff + 280 * idx + 92);

                auto gk_xyy_xxxzzz = primBuffer.data(gkoff + 280 * idx + 93);

                auto gk_xyy_xxyyyy = primBuffer.data(gkoff + 280 * idx + 94);

                auto gk_xyy_xxyyyz = primBuffer.data(gkoff + 280 * idx + 95);

                auto gk_xyy_xxyyzz = primBuffer.data(gkoff + 280 * idx + 96);

                auto gk_xyy_xxyzzz = primBuffer.data(gkoff + 280 * idx + 97);

                auto gk_xyy_xxzzzz = primBuffer.data(gkoff + 280 * idx + 98);

                auto gk_xyy_xyyyyy = primBuffer.data(gkoff + 280 * idx + 99);

                auto gk_xyy_xyyyyz = primBuffer.data(gkoff + 280 * idx + 100);

                auto gk_xyy_xyyyzz = primBuffer.data(gkoff + 280 * idx + 101);

                auto gk_xyy_xyyzzz = primBuffer.data(gkoff + 280 * idx + 102);

                auto gk_xyy_xyzzzz = primBuffer.data(gkoff + 280 * idx + 103);

                auto gk_xyy_xzzzzz = primBuffer.data(gkoff + 280 * idx + 104);

                auto gk_xyy_yyyyyy = primBuffer.data(gkoff + 280 * idx + 105);

                auto gk_xyy_yyyyyz = primBuffer.data(gkoff + 280 * idx + 106);

                auto gk_xyy_yyyyzz = primBuffer.data(gkoff + 280 * idx + 107);

                auto gk_xyy_yyyzzz = primBuffer.data(gkoff + 280 * idx + 108);

                auto gk_xyy_yyzzzz = primBuffer.data(gkoff + 280 * idx + 109);

                auto gk_xyy_yzzzzz = primBuffer.data(gkoff + 280 * idx + 110);

                auto gk_xyy_zzzzzz = primBuffer.data(gkoff + 280 * idx + 111);

                auto gk_xyz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 112);

                auto gk_xyz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 113);

                auto gk_xyz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 114);

                auto gk_xyz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 115);

                auto gk_xyz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 116);

                auto gk_xyz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 117);

                auto gk_xyz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 118);

                auto gk_xyz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 119);

                auto gk_xyz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 120);

                auto gk_xyz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 121);

                auto gk_xyz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 122);

                auto gk_xyz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 123);

                auto gk_xyz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 124);

                auto gk_xyz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 125);

                auto gk_xyz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 126);

                auto gk_xyz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 127);

                auto gk_xyz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 128);

                auto gk_xyz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 129);

                auto gk_xyz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 130);

                auto gk_xyz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 131);

                auto gk_xyz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 132);

                auto gk_xyz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 133);

                auto gk_xyz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 134);

                auto gk_xyz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 135);

                auto gk_xyz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 136);

                auto gk_xyz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 137);

                auto gk_xyz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 138);

                auto gk_xyz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 139);

                auto gk_xzz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 140);

                auto gk_xzz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 141);

                auto gk_xzz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 142);

                auto gk_xzz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 143);

                auto gk_xzz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 144);

                auto gk_xzz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 145);

                auto gk_xzz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 146);

                auto gk_xzz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 147);

                auto gk_xzz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 148);

                auto gk_xzz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 149);

                auto gk_xzz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 150);

                auto gk_xzz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 151);

                auto gk_xzz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 152);

                auto gk_xzz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 153);

                auto gk_xzz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 154);

                auto gk_xzz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 155);

                auto gk_xzz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 156);

                auto gk_xzz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 157);

                auto gk_xzz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 158);

                auto gk_xzz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 159);

                auto gk_xzz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 160);

                auto gk_xzz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 161);

                auto gk_xzz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 162);

                auto gk_xzz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 163);

                auto gk_xzz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 164);

                auto gk_xzz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 165);

                auto gk_xzz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 166);

                auto gk_xzz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 167);

                auto gk_yyy_xxxxxx = primBuffer.data(gkoff + 280 * idx + 168);

                auto gk_yyy_xxxxxy = primBuffer.data(gkoff + 280 * idx + 169);

                auto gk_yyy_xxxxxz = primBuffer.data(gkoff + 280 * idx + 170);

                auto gk_yyy_xxxxyy = primBuffer.data(gkoff + 280 * idx + 171);

                auto gk_yyy_xxxxyz = primBuffer.data(gkoff + 280 * idx + 172);

                auto gk_yyy_xxxxzz = primBuffer.data(gkoff + 280 * idx + 173);

                auto gk_yyy_xxxyyy = primBuffer.data(gkoff + 280 * idx + 174);

                auto gk_yyy_xxxyyz = primBuffer.data(gkoff + 280 * idx + 175);

                auto gk_yyy_xxxyzz = primBuffer.data(gkoff + 280 * idx + 176);

                auto gk_yyy_xxxzzz = primBuffer.data(gkoff + 280 * idx + 177);

                auto gk_yyy_xxyyyy = primBuffer.data(gkoff + 280 * idx + 178);

                auto gk_yyy_xxyyyz = primBuffer.data(gkoff + 280 * idx + 179);

                auto gk_yyy_xxyyzz = primBuffer.data(gkoff + 280 * idx + 180);

                auto gk_yyy_xxyzzz = primBuffer.data(gkoff + 280 * idx + 181);

                auto gk_yyy_xxzzzz = primBuffer.data(gkoff + 280 * idx + 182);

                auto gk_yyy_xyyyyy = primBuffer.data(gkoff + 280 * idx + 183);

                auto gk_yyy_xyyyyz = primBuffer.data(gkoff + 280 * idx + 184);

                auto gk_yyy_xyyyzz = primBuffer.data(gkoff + 280 * idx + 185);

                auto gk_yyy_xyyzzz = primBuffer.data(gkoff + 280 * idx + 186);

                auto gk_yyy_xyzzzz = primBuffer.data(gkoff + 280 * idx + 187);

                auto gk_yyy_xzzzzz = primBuffer.data(gkoff + 280 * idx + 188);

                auto gk_yyy_yyyyyy = primBuffer.data(gkoff + 280 * idx + 189);

                auto gk_yyy_yyyyyz = primBuffer.data(gkoff + 280 * idx + 190);

                auto gk_yyy_yyyyzz = primBuffer.data(gkoff + 280 * idx + 191);

                auto gk_yyy_yyyzzz = primBuffer.data(gkoff + 280 * idx + 192);

                auto gk_yyy_yyzzzz = primBuffer.data(gkoff + 280 * idx + 193);

                auto gk_yyy_yzzzzz = primBuffer.data(gkoff + 280 * idx + 194);

                auto gk_yyy_zzzzzz = primBuffer.data(gkoff + 280 * idx + 195);

                auto gk_yyz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 196);

                auto gk_yyz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 197);

                auto gk_yyz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 198);

                auto gk_yyz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 199);

                auto gk_yyz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 200);

                auto gk_yyz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 201);

                auto gk_yyz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 202);

                auto gk_yyz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 203);

                auto gk_yyz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 204);

                auto gk_yyz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 205);

                auto gk_yyz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 206);

                auto gk_yyz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 207);

                auto gk_yyz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 208);

                auto gk_yyz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 209);

                auto gk_yyz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 210);

                auto gk_yyz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 211);

                auto gk_yyz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 212);

                auto gk_yyz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 213);

                auto gk_yyz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 214);

                auto gk_yyz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 215);

                auto gk_yyz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 216);

                auto gk_yyz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 217);

                auto gk_yyz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 218);

                auto gk_yyz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 219);

                auto gk_yyz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 220);

                auto gk_yyz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 221);

                auto gk_yyz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 222);

                auto gk_yyz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 223);

                auto gk_yzz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 224);

                auto gk_yzz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 225);

                auto gk_yzz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 226);

                auto gk_yzz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 227);

                auto gk_yzz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 228);

                auto gk_yzz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 229);

                auto gk_yzz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 230);

                auto gk_yzz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 231);

                auto gk_yzz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 232);

                auto gk_yzz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 233);

                auto gk_yzz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 234);

                auto gk_yzz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 235);

                auto gk_yzz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 236);

                auto gk_yzz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 237);

                auto gk_yzz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 238);

                auto gk_yzz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 239);

                auto gk_yzz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 240);

                auto gk_yzz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 241);

                auto gk_yzz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 242);

                auto gk_yzz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 243);

                auto gk_yzz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 244);

                auto gk_yzz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 245);

                auto gk_yzz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 246);

                auto gk_yzz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 247);

                auto gk_yzz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 248);

                auto gk_yzz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 249);

                auto gk_yzz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 250);

                auto gk_yzz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 251);

                auto gk_zzz_xxxxxx = primBuffer.data(gkoff + 280 * idx + 252);

                auto gk_zzz_xxxxxy = primBuffer.data(gkoff + 280 * idx + 253);

                auto gk_zzz_xxxxxz = primBuffer.data(gkoff + 280 * idx + 254);

                auto gk_zzz_xxxxyy = primBuffer.data(gkoff + 280 * idx + 255);

                auto gk_zzz_xxxxyz = primBuffer.data(gkoff + 280 * idx + 256);

                auto gk_zzz_xxxxzz = primBuffer.data(gkoff + 280 * idx + 257);

                auto gk_zzz_xxxyyy = primBuffer.data(gkoff + 280 * idx + 258);

                auto gk_zzz_xxxyyz = primBuffer.data(gkoff + 280 * idx + 259);

                auto gk_zzz_xxxyzz = primBuffer.data(gkoff + 280 * idx + 260);

                auto gk_zzz_xxxzzz = primBuffer.data(gkoff + 280 * idx + 261);

                auto gk_zzz_xxyyyy = primBuffer.data(gkoff + 280 * idx + 262);

                auto gk_zzz_xxyyyz = primBuffer.data(gkoff + 280 * idx + 263);

                auto gk_zzz_xxyyzz = primBuffer.data(gkoff + 280 * idx + 264);

                auto gk_zzz_xxyzzz = primBuffer.data(gkoff + 280 * idx + 265);

                auto gk_zzz_xxzzzz = primBuffer.data(gkoff + 280 * idx + 266);

                auto gk_zzz_xyyyyy = primBuffer.data(gkoff + 280 * idx + 267);

                auto gk_zzz_xyyyyz = primBuffer.data(gkoff + 280 * idx + 268);

                auto gk_zzz_xyyyzz = primBuffer.data(gkoff + 280 * idx + 269);

                auto gk_zzz_xyyzzz = primBuffer.data(gkoff + 280 * idx + 270);

                auto gk_zzz_xyzzzz = primBuffer.data(gkoff + 280 * idx + 271);

                auto gk_zzz_xzzzzz = primBuffer.data(gkoff + 280 * idx + 272);

                auto gk_zzz_yyyyyy = primBuffer.data(gkoff + 280 * idx + 273);

                auto gk_zzz_yyyyyz = primBuffer.data(gkoff + 280 * idx + 274);

                auto gk_zzz_yyyyzz = primBuffer.data(gkoff + 280 * idx + 275);

                auto gk_zzz_yyyzzz = primBuffer.data(gkoff + 280 * idx + 276);

                auto gk_zzz_yyzzzz = primBuffer.data(gkoff + 280 * idx + 277);

                auto gk_zzz_yzzzzz = primBuffer.data(gkoff + 280 * idx + 278);

                auto gk_zzz_zzzzzz = primBuffer.data(gkoff + 280 * idx + 279);

                // set up pointers to (D|g(r,r')|SK)^(m) integrals

                auto g20_xx_xxxxxxx = primBuffer.data(g20off + 216 * idx);

                auto g20_xx_xxxxxxy = primBuffer.data(g20off + 216 * idx + 1);

                auto g20_xx_xxxxxxz = primBuffer.data(g20off + 216 * idx + 2);

                auto g20_xx_xxxxxyy = primBuffer.data(g20off + 216 * idx + 3);

                auto g20_xx_xxxxxyz = primBuffer.data(g20off + 216 * idx + 4);

                auto g20_xx_xxxxxzz = primBuffer.data(g20off + 216 * idx + 5);

                auto g20_xx_xxxxyyy = primBuffer.data(g20off + 216 * idx + 6);

                auto g20_xx_xxxxyyz = primBuffer.data(g20off + 216 * idx + 7);

                auto g20_xx_xxxxyzz = primBuffer.data(g20off + 216 * idx + 8);

                auto g20_xx_xxxxzzz = primBuffer.data(g20off + 216 * idx + 9);

                auto g20_xx_xxxyyyy = primBuffer.data(g20off + 216 * idx + 10);

                auto g20_xx_xxxyyyz = primBuffer.data(g20off + 216 * idx + 11);

                auto g20_xx_xxxyyzz = primBuffer.data(g20off + 216 * idx + 12);

                auto g20_xx_xxxyzzz = primBuffer.data(g20off + 216 * idx + 13);

                auto g20_xx_xxxzzzz = primBuffer.data(g20off + 216 * idx + 14);

                auto g20_xx_xxyyyyy = primBuffer.data(g20off + 216 * idx + 15);

                auto g20_xx_xxyyyyz = primBuffer.data(g20off + 216 * idx + 16);

                auto g20_xx_xxyyyzz = primBuffer.data(g20off + 216 * idx + 17);

                auto g20_xx_xxyyzzz = primBuffer.data(g20off + 216 * idx + 18);

                auto g20_xx_xxyzzzz = primBuffer.data(g20off + 216 * idx + 19);

                auto g20_xx_xxzzzzz = primBuffer.data(g20off + 216 * idx + 20);

                auto g20_xx_xyyyyyy = primBuffer.data(g20off + 216 * idx + 21);

                auto g20_xx_xyyyyyz = primBuffer.data(g20off + 216 * idx + 22);

                auto g20_xx_xyyyyzz = primBuffer.data(g20off + 216 * idx + 23);

                auto g20_xx_xyyyzzz = primBuffer.data(g20off + 216 * idx + 24);

                auto g20_xx_xyyzzzz = primBuffer.data(g20off + 216 * idx + 25);

                auto g20_xx_xyzzzzz = primBuffer.data(g20off + 216 * idx + 26);

                auto g20_xx_xzzzzzz = primBuffer.data(g20off + 216 * idx + 27);

                auto g20_xx_yyyyyyy = primBuffer.data(g20off + 216 * idx + 28);

                auto g20_xx_yyyyyyz = primBuffer.data(g20off + 216 * idx + 29);

                auto g20_xx_yyyyyzz = primBuffer.data(g20off + 216 * idx + 30);

                auto g20_xx_yyyyzzz = primBuffer.data(g20off + 216 * idx + 31);

                auto g20_xx_yyyzzzz = primBuffer.data(g20off + 216 * idx + 32);

                auto g20_xx_yyzzzzz = primBuffer.data(g20off + 216 * idx + 33);

                auto g20_xx_yzzzzzz = primBuffer.data(g20off + 216 * idx + 34);

                auto g20_xx_zzzzzzz = primBuffer.data(g20off + 216 * idx + 35);

                auto g20_xy_xxxxxxx = primBuffer.data(g20off + 216 * idx + 36);

                auto g20_xy_xxxxxxy = primBuffer.data(g20off + 216 * idx + 37);

                auto g20_xy_xxxxxxz = primBuffer.data(g20off + 216 * idx + 38);

                auto g20_xy_xxxxxyy = primBuffer.data(g20off + 216 * idx + 39);

                auto g20_xy_xxxxxyz = primBuffer.data(g20off + 216 * idx + 40);

                auto g20_xy_xxxxxzz = primBuffer.data(g20off + 216 * idx + 41);

                auto g20_xy_xxxxyyy = primBuffer.data(g20off + 216 * idx + 42);

                auto g20_xy_xxxxyyz = primBuffer.data(g20off + 216 * idx + 43);

                auto g20_xy_xxxxyzz = primBuffer.data(g20off + 216 * idx + 44);

                auto g20_xy_xxxxzzz = primBuffer.data(g20off + 216 * idx + 45);

                auto g20_xy_xxxyyyy = primBuffer.data(g20off + 216 * idx + 46);

                auto g20_xy_xxxyyyz = primBuffer.data(g20off + 216 * idx + 47);

                auto g20_xy_xxxyyzz = primBuffer.data(g20off + 216 * idx + 48);

                auto g20_xy_xxxyzzz = primBuffer.data(g20off + 216 * idx + 49);

                auto g20_xy_xxxzzzz = primBuffer.data(g20off + 216 * idx + 50);

                auto g20_xy_xxyyyyy = primBuffer.data(g20off + 216 * idx + 51);

                auto g20_xy_xxyyyyz = primBuffer.data(g20off + 216 * idx + 52);

                auto g20_xy_xxyyyzz = primBuffer.data(g20off + 216 * idx + 53);

                auto g20_xy_xxyyzzz = primBuffer.data(g20off + 216 * idx + 54);

                auto g20_xy_xxyzzzz = primBuffer.data(g20off + 216 * idx + 55);

                auto g20_xy_xxzzzzz = primBuffer.data(g20off + 216 * idx + 56);

                auto g20_xy_xyyyyyy = primBuffer.data(g20off + 216 * idx + 57);

                auto g20_xy_xyyyyyz = primBuffer.data(g20off + 216 * idx + 58);

                auto g20_xy_xyyyyzz = primBuffer.data(g20off + 216 * idx + 59);

                auto g20_xy_xyyyzzz = primBuffer.data(g20off + 216 * idx + 60);

                auto g20_xy_xyyzzzz = primBuffer.data(g20off + 216 * idx + 61);

                auto g20_xy_xyzzzzz = primBuffer.data(g20off + 216 * idx + 62);

                auto g20_xy_xzzzzzz = primBuffer.data(g20off + 216 * idx + 63);

                auto g20_xy_yyyyyyy = primBuffer.data(g20off + 216 * idx + 64);

                auto g20_xy_yyyyyyz = primBuffer.data(g20off + 216 * idx + 65);

                auto g20_xy_yyyyyzz = primBuffer.data(g20off + 216 * idx + 66);

                auto g20_xy_yyyyzzz = primBuffer.data(g20off + 216 * idx + 67);

                auto g20_xy_yyyzzzz = primBuffer.data(g20off + 216 * idx + 68);

                auto g20_xy_yyzzzzz = primBuffer.data(g20off + 216 * idx + 69);

                auto g20_xy_yzzzzzz = primBuffer.data(g20off + 216 * idx + 70);

                auto g20_xy_zzzzzzz = primBuffer.data(g20off + 216 * idx + 71);

                auto g20_xz_xxxxxxx = primBuffer.data(g20off + 216 * idx + 72);

                auto g20_xz_xxxxxxy = primBuffer.data(g20off + 216 * idx + 73);

                auto g20_xz_xxxxxxz = primBuffer.data(g20off + 216 * idx + 74);

                auto g20_xz_xxxxxyy = primBuffer.data(g20off + 216 * idx + 75);

                auto g20_xz_xxxxxyz = primBuffer.data(g20off + 216 * idx + 76);

                auto g20_xz_xxxxxzz = primBuffer.data(g20off + 216 * idx + 77);

                auto g20_xz_xxxxyyy = primBuffer.data(g20off + 216 * idx + 78);

                auto g20_xz_xxxxyyz = primBuffer.data(g20off + 216 * idx + 79);

                auto g20_xz_xxxxyzz = primBuffer.data(g20off + 216 * idx + 80);

                auto g20_xz_xxxxzzz = primBuffer.data(g20off + 216 * idx + 81);

                auto g20_xz_xxxyyyy = primBuffer.data(g20off + 216 * idx + 82);

                auto g20_xz_xxxyyyz = primBuffer.data(g20off + 216 * idx + 83);

                auto g20_xz_xxxyyzz = primBuffer.data(g20off + 216 * idx + 84);

                auto g20_xz_xxxyzzz = primBuffer.data(g20off + 216 * idx + 85);

                auto g20_xz_xxxzzzz = primBuffer.data(g20off + 216 * idx + 86);

                auto g20_xz_xxyyyyy = primBuffer.data(g20off + 216 * idx + 87);

                auto g20_xz_xxyyyyz = primBuffer.data(g20off + 216 * idx + 88);

                auto g20_xz_xxyyyzz = primBuffer.data(g20off + 216 * idx + 89);

                auto g20_xz_xxyyzzz = primBuffer.data(g20off + 216 * idx + 90);

                auto g20_xz_xxyzzzz = primBuffer.data(g20off + 216 * idx + 91);

                auto g20_xz_xxzzzzz = primBuffer.data(g20off + 216 * idx + 92);

                auto g20_xz_xyyyyyy = primBuffer.data(g20off + 216 * idx + 93);

                auto g20_xz_xyyyyyz = primBuffer.data(g20off + 216 * idx + 94);

                auto g20_xz_xyyyyzz = primBuffer.data(g20off + 216 * idx + 95);

                auto g20_xz_xyyyzzz = primBuffer.data(g20off + 216 * idx + 96);

                auto g20_xz_xyyzzzz = primBuffer.data(g20off + 216 * idx + 97);

                auto g20_xz_xyzzzzz = primBuffer.data(g20off + 216 * idx + 98);

                auto g20_xz_xzzzzzz = primBuffer.data(g20off + 216 * idx + 99);

                auto g20_xz_yyyyyyy = primBuffer.data(g20off + 216 * idx + 100);

                auto g20_xz_yyyyyyz = primBuffer.data(g20off + 216 * idx + 101);

                auto g20_xz_yyyyyzz = primBuffer.data(g20off + 216 * idx + 102);

                auto g20_xz_yyyyzzz = primBuffer.data(g20off + 216 * idx + 103);

                auto g20_xz_yyyzzzz = primBuffer.data(g20off + 216 * idx + 104);

                auto g20_xz_yyzzzzz = primBuffer.data(g20off + 216 * idx + 105);

                auto g20_xz_yzzzzzz = primBuffer.data(g20off + 216 * idx + 106);

                auto g20_xz_zzzzzzz = primBuffer.data(g20off + 216 * idx + 107);

                auto g20_yy_xxxxxxx = primBuffer.data(g20off + 216 * idx + 108);

                auto g20_yy_xxxxxxy = primBuffer.data(g20off + 216 * idx + 109);

                auto g20_yy_xxxxxxz = primBuffer.data(g20off + 216 * idx + 110);

                auto g20_yy_xxxxxyy = primBuffer.data(g20off + 216 * idx + 111);

                auto g20_yy_xxxxxyz = primBuffer.data(g20off + 216 * idx + 112);

                auto g20_yy_xxxxxzz = primBuffer.data(g20off + 216 * idx + 113);

                auto g20_yy_xxxxyyy = primBuffer.data(g20off + 216 * idx + 114);

                auto g20_yy_xxxxyyz = primBuffer.data(g20off + 216 * idx + 115);

                auto g20_yy_xxxxyzz = primBuffer.data(g20off + 216 * idx + 116);

                auto g20_yy_xxxxzzz = primBuffer.data(g20off + 216 * idx + 117);

                auto g20_yy_xxxyyyy = primBuffer.data(g20off + 216 * idx + 118);

                auto g20_yy_xxxyyyz = primBuffer.data(g20off + 216 * idx + 119);

                auto g20_yy_xxxyyzz = primBuffer.data(g20off + 216 * idx + 120);

                auto g20_yy_xxxyzzz = primBuffer.data(g20off + 216 * idx + 121);

                auto g20_yy_xxxzzzz = primBuffer.data(g20off + 216 * idx + 122);

                auto g20_yy_xxyyyyy = primBuffer.data(g20off + 216 * idx + 123);

                auto g20_yy_xxyyyyz = primBuffer.data(g20off + 216 * idx + 124);

                auto g20_yy_xxyyyzz = primBuffer.data(g20off + 216 * idx + 125);

                auto g20_yy_xxyyzzz = primBuffer.data(g20off + 216 * idx + 126);

                auto g20_yy_xxyzzzz = primBuffer.data(g20off + 216 * idx + 127);

                auto g20_yy_xxzzzzz = primBuffer.data(g20off + 216 * idx + 128);

                auto g20_yy_xyyyyyy = primBuffer.data(g20off + 216 * idx + 129);

                auto g20_yy_xyyyyyz = primBuffer.data(g20off + 216 * idx + 130);

                auto g20_yy_xyyyyzz = primBuffer.data(g20off + 216 * idx + 131);

                auto g20_yy_xyyyzzz = primBuffer.data(g20off + 216 * idx + 132);

                auto g20_yy_xyyzzzz = primBuffer.data(g20off + 216 * idx + 133);

                auto g20_yy_xyzzzzz = primBuffer.data(g20off + 216 * idx + 134);

                auto g20_yy_xzzzzzz = primBuffer.data(g20off + 216 * idx + 135);

                auto g20_yy_yyyyyyy = primBuffer.data(g20off + 216 * idx + 136);

                auto g20_yy_yyyyyyz = primBuffer.data(g20off + 216 * idx + 137);

                auto g20_yy_yyyyyzz = primBuffer.data(g20off + 216 * idx + 138);

                auto g20_yy_yyyyzzz = primBuffer.data(g20off + 216 * idx + 139);

                auto g20_yy_yyyzzzz = primBuffer.data(g20off + 216 * idx + 140);

                auto g20_yy_yyzzzzz = primBuffer.data(g20off + 216 * idx + 141);

                auto g20_yy_yzzzzzz = primBuffer.data(g20off + 216 * idx + 142);

                auto g20_yy_zzzzzzz = primBuffer.data(g20off + 216 * idx + 143);

                auto g20_yz_xxxxxxx = primBuffer.data(g20off + 216 * idx + 144);

                auto g20_yz_xxxxxxy = primBuffer.data(g20off + 216 * idx + 145);

                auto g20_yz_xxxxxxz = primBuffer.data(g20off + 216 * idx + 146);

                auto g20_yz_xxxxxyy = primBuffer.data(g20off + 216 * idx + 147);

                auto g20_yz_xxxxxyz = primBuffer.data(g20off + 216 * idx + 148);

                auto g20_yz_xxxxxzz = primBuffer.data(g20off + 216 * idx + 149);

                auto g20_yz_xxxxyyy = primBuffer.data(g20off + 216 * idx + 150);

                auto g20_yz_xxxxyyz = primBuffer.data(g20off + 216 * idx + 151);

                auto g20_yz_xxxxyzz = primBuffer.data(g20off + 216 * idx + 152);

                auto g20_yz_xxxxzzz = primBuffer.data(g20off + 216 * idx + 153);

                auto g20_yz_xxxyyyy = primBuffer.data(g20off + 216 * idx + 154);

                auto g20_yz_xxxyyyz = primBuffer.data(g20off + 216 * idx + 155);

                auto g20_yz_xxxyyzz = primBuffer.data(g20off + 216 * idx + 156);

                auto g20_yz_xxxyzzz = primBuffer.data(g20off + 216 * idx + 157);

                auto g20_yz_xxxzzzz = primBuffer.data(g20off + 216 * idx + 158);

                auto g20_yz_xxyyyyy = primBuffer.data(g20off + 216 * idx + 159);

                auto g20_yz_xxyyyyz = primBuffer.data(g20off + 216 * idx + 160);

                auto g20_yz_xxyyyzz = primBuffer.data(g20off + 216 * idx + 161);

                auto g20_yz_xxyyzzz = primBuffer.data(g20off + 216 * idx + 162);

                auto g20_yz_xxyzzzz = primBuffer.data(g20off + 216 * idx + 163);

                auto g20_yz_xxzzzzz = primBuffer.data(g20off + 216 * idx + 164);

                auto g20_yz_xyyyyyy = primBuffer.data(g20off + 216 * idx + 165);

                auto g20_yz_xyyyyyz = primBuffer.data(g20off + 216 * idx + 166);

                auto g20_yz_xyyyyzz = primBuffer.data(g20off + 216 * idx + 167);

                auto g20_yz_xyyyzzz = primBuffer.data(g20off + 216 * idx + 168);

                auto g20_yz_xyyzzzz = primBuffer.data(g20off + 216 * idx + 169);

                auto g20_yz_xyzzzzz = primBuffer.data(g20off + 216 * idx + 170);

                auto g20_yz_xzzzzzz = primBuffer.data(g20off + 216 * idx + 171);

                auto g20_yz_yyyyyyy = primBuffer.data(g20off + 216 * idx + 172);

                auto g20_yz_yyyyyyz = primBuffer.data(g20off + 216 * idx + 173);

                auto g20_yz_yyyyyzz = primBuffer.data(g20off + 216 * idx + 174);

                auto g20_yz_yyyyzzz = primBuffer.data(g20off + 216 * idx + 175);

                auto g20_yz_yyyzzzz = primBuffer.data(g20off + 216 * idx + 176);

                auto g20_yz_yyzzzzz = primBuffer.data(g20off + 216 * idx + 177);

                auto g20_yz_yzzzzzz = primBuffer.data(g20off + 216 * idx + 178);

                auto g20_yz_zzzzzzz = primBuffer.data(g20off + 216 * idx + 179);

                auto g20_zz_xxxxxxx = primBuffer.data(g20off + 216 * idx + 180);

                auto g20_zz_xxxxxxy = primBuffer.data(g20off + 216 * idx + 181);

                auto g20_zz_xxxxxxz = primBuffer.data(g20off + 216 * idx + 182);

                auto g20_zz_xxxxxyy = primBuffer.data(g20off + 216 * idx + 183);

                auto g20_zz_xxxxxyz = primBuffer.data(g20off + 216 * idx + 184);

                auto g20_zz_xxxxxzz = primBuffer.data(g20off + 216 * idx + 185);

                auto g20_zz_xxxxyyy = primBuffer.data(g20off + 216 * idx + 186);

                auto g20_zz_xxxxyyz = primBuffer.data(g20off + 216 * idx + 187);

                auto g20_zz_xxxxyzz = primBuffer.data(g20off + 216 * idx + 188);

                auto g20_zz_xxxxzzz = primBuffer.data(g20off + 216 * idx + 189);

                auto g20_zz_xxxyyyy = primBuffer.data(g20off + 216 * idx + 190);

                auto g20_zz_xxxyyyz = primBuffer.data(g20off + 216 * idx + 191);

                auto g20_zz_xxxyyzz = primBuffer.data(g20off + 216 * idx + 192);

                auto g20_zz_xxxyzzz = primBuffer.data(g20off + 216 * idx + 193);

                auto g20_zz_xxxzzzz = primBuffer.data(g20off + 216 * idx + 194);

                auto g20_zz_xxyyyyy = primBuffer.data(g20off + 216 * idx + 195);

                auto g20_zz_xxyyyyz = primBuffer.data(g20off + 216 * idx + 196);

                auto g20_zz_xxyyyzz = primBuffer.data(g20off + 216 * idx + 197);

                auto g20_zz_xxyyzzz = primBuffer.data(g20off + 216 * idx + 198);

                auto g20_zz_xxyzzzz = primBuffer.data(g20off + 216 * idx + 199);

                auto g20_zz_xxzzzzz = primBuffer.data(g20off + 216 * idx + 200);

                auto g20_zz_xyyyyyy = primBuffer.data(g20off + 216 * idx + 201);

                auto g20_zz_xyyyyyz = primBuffer.data(g20off + 216 * idx + 202);

                auto g20_zz_xyyyyzz = primBuffer.data(g20off + 216 * idx + 203);

                auto g20_zz_xyyyzzz = primBuffer.data(g20off + 216 * idx + 204);

                auto g20_zz_xyyzzzz = primBuffer.data(g20off + 216 * idx + 205);

                auto g20_zz_xyzzzzz = primBuffer.data(g20off + 216 * idx + 206);

                auto g20_zz_xzzzzzz = primBuffer.data(g20off + 216 * idx + 207);

                auto g20_zz_yyyyyyy = primBuffer.data(g20off + 216 * idx + 208);

                auto g20_zz_yyyyyyz = primBuffer.data(g20off + 216 * idx + 209);

                auto g20_zz_yyyyyzz = primBuffer.data(g20off + 216 * idx + 210);

                auto g20_zz_yyyyzzz = primBuffer.data(g20off + 216 * idx + 211);

                auto g20_zz_yyyzzzz = primBuffer.data(g20off + 216 * idx + 212);

                auto g20_zz_yyzzzzz = primBuffer.data(g20off + 216 * idx + 213);

                auto g20_zz_yzzzzzz = primBuffer.data(g20off + 216 * idx + 214);

                auto g20_zz_zzzzzzz = primBuffer.data(g20off + 216 * idx + 215);

                // set up pointers to (D|g(r,r')|SK)^(m+1) integrals

                auto g21_xx_xxxxxxx = primBuffer.data(g21off + 216 * idx);

                auto g21_xx_xxxxxxy = primBuffer.data(g21off + 216 * idx + 1);

                auto g21_xx_xxxxxxz = primBuffer.data(g21off + 216 * idx + 2);

                auto g21_xx_xxxxxyy = primBuffer.data(g21off + 216 * idx + 3);

                auto g21_xx_xxxxxyz = primBuffer.data(g21off + 216 * idx + 4);

                auto g21_xx_xxxxxzz = primBuffer.data(g21off + 216 * idx + 5);

                auto g21_xx_xxxxyyy = primBuffer.data(g21off + 216 * idx + 6);

                auto g21_xx_xxxxyyz = primBuffer.data(g21off + 216 * idx + 7);

                auto g21_xx_xxxxyzz = primBuffer.data(g21off + 216 * idx + 8);

                auto g21_xx_xxxxzzz = primBuffer.data(g21off + 216 * idx + 9);

                auto g21_xx_xxxyyyy = primBuffer.data(g21off + 216 * idx + 10);

                auto g21_xx_xxxyyyz = primBuffer.data(g21off + 216 * idx + 11);

                auto g21_xx_xxxyyzz = primBuffer.data(g21off + 216 * idx + 12);

                auto g21_xx_xxxyzzz = primBuffer.data(g21off + 216 * idx + 13);

                auto g21_xx_xxxzzzz = primBuffer.data(g21off + 216 * idx + 14);

                auto g21_xx_xxyyyyy = primBuffer.data(g21off + 216 * idx + 15);

                auto g21_xx_xxyyyyz = primBuffer.data(g21off + 216 * idx + 16);

                auto g21_xx_xxyyyzz = primBuffer.data(g21off + 216 * idx + 17);

                auto g21_xx_xxyyzzz = primBuffer.data(g21off + 216 * idx + 18);

                auto g21_xx_xxyzzzz = primBuffer.data(g21off + 216 * idx + 19);

                auto g21_xx_xxzzzzz = primBuffer.data(g21off + 216 * idx + 20);

                auto g21_xx_xyyyyyy = primBuffer.data(g21off + 216 * idx + 21);

                auto g21_xx_xyyyyyz = primBuffer.data(g21off + 216 * idx + 22);

                auto g21_xx_xyyyyzz = primBuffer.data(g21off + 216 * idx + 23);

                auto g21_xx_xyyyzzz = primBuffer.data(g21off + 216 * idx + 24);

                auto g21_xx_xyyzzzz = primBuffer.data(g21off + 216 * idx + 25);

                auto g21_xx_xyzzzzz = primBuffer.data(g21off + 216 * idx + 26);

                auto g21_xx_xzzzzzz = primBuffer.data(g21off + 216 * idx + 27);

                auto g21_xx_yyyyyyy = primBuffer.data(g21off + 216 * idx + 28);

                auto g21_xx_yyyyyyz = primBuffer.data(g21off + 216 * idx + 29);

                auto g21_xx_yyyyyzz = primBuffer.data(g21off + 216 * idx + 30);

                auto g21_xx_yyyyzzz = primBuffer.data(g21off + 216 * idx + 31);

                auto g21_xx_yyyzzzz = primBuffer.data(g21off + 216 * idx + 32);

                auto g21_xx_yyzzzzz = primBuffer.data(g21off + 216 * idx + 33);

                auto g21_xx_yzzzzzz = primBuffer.data(g21off + 216 * idx + 34);

                auto g21_xx_zzzzzzz = primBuffer.data(g21off + 216 * idx + 35);

                auto g21_xy_xxxxxxx = primBuffer.data(g21off + 216 * idx + 36);

                auto g21_xy_xxxxxxy = primBuffer.data(g21off + 216 * idx + 37);

                auto g21_xy_xxxxxxz = primBuffer.data(g21off + 216 * idx + 38);

                auto g21_xy_xxxxxyy = primBuffer.data(g21off + 216 * idx + 39);

                auto g21_xy_xxxxxyz = primBuffer.data(g21off + 216 * idx + 40);

                auto g21_xy_xxxxxzz = primBuffer.data(g21off + 216 * idx + 41);

                auto g21_xy_xxxxyyy = primBuffer.data(g21off + 216 * idx + 42);

                auto g21_xy_xxxxyyz = primBuffer.data(g21off + 216 * idx + 43);

                auto g21_xy_xxxxyzz = primBuffer.data(g21off + 216 * idx + 44);

                auto g21_xy_xxxxzzz = primBuffer.data(g21off + 216 * idx + 45);

                auto g21_xy_xxxyyyy = primBuffer.data(g21off + 216 * idx + 46);

                auto g21_xy_xxxyyyz = primBuffer.data(g21off + 216 * idx + 47);

                auto g21_xy_xxxyyzz = primBuffer.data(g21off + 216 * idx + 48);

                auto g21_xy_xxxyzzz = primBuffer.data(g21off + 216 * idx + 49);

                auto g21_xy_xxxzzzz = primBuffer.data(g21off + 216 * idx + 50);

                auto g21_xy_xxyyyyy = primBuffer.data(g21off + 216 * idx + 51);

                auto g21_xy_xxyyyyz = primBuffer.data(g21off + 216 * idx + 52);

                auto g21_xy_xxyyyzz = primBuffer.data(g21off + 216 * idx + 53);

                auto g21_xy_xxyyzzz = primBuffer.data(g21off + 216 * idx + 54);

                auto g21_xy_xxyzzzz = primBuffer.data(g21off + 216 * idx + 55);

                auto g21_xy_xxzzzzz = primBuffer.data(g21off + 216 * idx + 56);

                auto g21_xy_xyyyyyy = primBuffer.data(g21off + 216 * idx + 57);

                auto g21_xy_xyyyyyz = primBuffer.data(g21off + 216 * idx + 58);

                auto g21_xy_xyyyyzz = primBuffer.data(g21off + 216 * idx + 59);

                auto g21_xy_xyyyzzz = primBuffer.data(g21off + 216 * idx + 60);

                auto g21_xy_xyyzzzz = primBuffer.data(g21off + 216 * idx + 61);

                auto g21_xy_xyzzzzz = primBuffer.data(g21off + 216 * idx + 62);

                auto g21_xy_xzzzzzz = primBuffer.data(g21off + 216 * idx + 63);

                auto g21_xy_yyyyyyy = primBuffer.data(g21off + 216 * idx + 64);

                auto g21_xy_yyyyyyz = primBuffer.data(g21off + 216 * idx + 65);

                auto g21_xy_yyyyyzz = primBuffer.data(g21off + 216 * idx + 66);

                auto g21_xy_yyyyzzz = primBuffer.data(g21off + 216 * idx + 67);

                auto g21_xy_yyyzzzz = primBuffer.data(g21off + 216 * idx + 68);

                auto g21_xy_yyzzzzz = primBuffer.data(g21off + 216 * idx + 69);

                auto g21_xy_yzzzzzz = primBuffer.data(g21off + 216 * idx + 70);

                auto g21_xy_zzzzzzz = primBuffer.data(g21off + 216 * idx + 71);

                auto g21_xz_xxxxxxx = primBuffer.data(g21off + 216 * idx + 72);

                auto g21_xz_xxxxxxy = primBuffer.data(g21off + 216 * idx + 73);

                auto g21_xz_xxxxxxz = primBuffer.data(g21off + 216 * idx + 74);

                auto g21_xz_xxxxxyy = primBuffer.data(g21off + 216 * idx + 75);

                auto g21_xz_xxxxxyz = primBuffer.data(g21off + 216 * idx + 76);

                auto g21_xz_xxxxxzz = primBuffer.data(g21off + 216 * idx + 77);

                auto g21_xz_xxxxyyy = primBuffer.data(g21off + 216 * idx + 78);

                auto g21_xz_xxxxyyz = primBuffer.data(g21off + 216 * idx + 79);

                auto g21_xz_xxxxyzz = primBuffer.data(g21off + 216 * idx + 80);

                auto g21_xz_xxxxzzz = primBuffer.data(g21off + 216 * idx + 81);

                auto g21_xz_xxxyyyy = primBuffer.data(g21off + 216 * idx + 82);

                auto g21_xz_xxxyyyz = primBuffer.data(g21off + 216 * idx + 83);

                auto g21_xz_xxxyyzz = primBuffer.data(g21off + 216 * idx + 84);

                auto g21_xz_xxxyzzz = primBuffer.data(g21off + 216 * idx + 85);

                auto g21_xz_xxxzzzz = primBuffer.data(g21off + 216 * idx + 86);

                auto g21_xz_xxyyyyy = primBuffer.data(g21off + 216 * idx + 87);

                auto g21_xz_xxyyyyz = primBuffer.data(g21off + 216 * idx + 88);

                auto g21_xz_xxyyyzz = primBuffer.data(g21off + 216 * idx + 89);

                auto g21_xz_xxyyzzz = primBuffer.data(g21off + 216 * idx + 90);

                auto g21_xz_xxyzzzz = primBuffer.data(g21off + 216 * idx + 91);

                auto g21_xz_xxzzzzz = primBuffer.data(g21off + 216 * idx + 92);

                auto g21_xz_xyyyyyy = primBuffer.data(g21off + 216 * idx + 93);

                auto g21_xz_xyyyyyz = primBuffer.data(g21off + 216 * idx + 94);

                auto g21_xz_xyyyyzz = primBuffer.data(g21off + 216 * idx + 95);

                auto g21_xz_xyyyzzz = primBuffer.data(g21off + 216 * idx + 96);

                auto g21_xz_xyyzzzz = primBuffer.data(g21off + 216 * idx + 97);

                auto g21_xz_xyzzzzz = primBuffer.data(g21off + 216 * idx + 98);

                auto g21_xz_xzzzzzz = primBuffer.data(g21off + 216 * idx + 99);

                auto g21_xz_yyyyyyy = primBuffer.data(g21off + 216 * idx + 100);

                auto g21_xz_yyyyyyz = primBuffer.data(g21off + 216 * idx + 101);

                auto g21_xz_yyyyyzz = primBuffer.data(g21off + 216 * idx + 102);

                auto g21_xz_yyyyzzz = primBuffer.data(g21off + 216 * idx + 103);

                auto g21_xz_yyyzzzz = primBuffer.data(g21off + 216 * idx + 104);

                auto g21_xz_yyzzzzz = primBuffer.data(g21off + 216 * idx + 105);

                auto g21_xz_yzzzzzz = primBuffer.data(g21off + 216 * idx + 106);

                auto g21_xz_zzzzzzz = primBuffer.data(g21off + 216 * idx + 107);

                auto g21_yy_xxxxxxx = primBuffer.data(g21off + 216 * idx + 108);

                auto g21_yy_xxxxxxy = primBuffer.data(g21off + 216 * idx + 109);

                auto g21_yy_xxxxxxz = primBuffer.data(g21off + 216 * idx + 110);

                auto g21_yy_xxxxxyy = primBuffer.data(g21off + 216 * idx + 111);

                auto g21_yy_xxxxxyz = primBuffer.data(g21off + 216 * idx + 112);

                auto g21_yy_xxxxxzz = primBuffer.data(g21off + 216 * idx + 113);

                auto g21_yy_xxxxyyy = primBuffer.data(g21off + 216 * idx + 114);

                auto g21_yy_xxxxyyz = primBuffer.data(g21off + 216 * idx + 115);

                auto g21_yy_xxxxyzz = primBuffer.data(g21off + 216 * idx + 116);

                auto g21_yy_xxxxzzz = primBuffer.data(g21off + 216 * idx + 117);

                auto g21_yy_xxxyyyy = primBuffer.data(g21off + 216 * idx + 118);

                auto g21_yy_xxxyyyz = primBuffer.data(g21off + 216 * idx + 119);

                auto g21_yy_xxxyyzz = primBuffer.data(g21off + 216 * idx + 120);

                auto g21_yy_xxxyzzz = primBuffer.data(g21off + 216 * idx + 121);

                auto g21_yy_xxxzzzz = primBuffer.data(g21off + 216 * idx + 122);

                auto g21_yy_xxyyyyy = primBuffer.data(g21off + 216 * idx + 123);

                auto g21_yy_xxyyyyz = primBuffer.data(g21off + 216 * idx + 124);

                auto g21_yy_xxyyyzz = primBuffer.data(g21off + 216 * idx + 125);

                auto g21_yy_xxyyzzz = primBuffer.data(g21off + 216 * idx + 126);

                auto g21_yy_xxyzzzz = primBuffer.data(g21off + 216 * idx + 127);

                auto g21_yy_xxzzzzz = primBuffer.data(g21off + 216 * idx + 128);

                auto g21_yy_xyyyyyy = primBuffer.data(g21off + 216 * idx + 129);

                auto g21_yy_xyyyyyz = primBuffer.data(g21off + 216 * idx + 130);

                auto g21_yy_xyyyyzz = primBuffer.data(g21off + 216 * idx + 131);

                auto g21_yy_xyyyzzz = primBuffer.data(g21off + 216 * idx + 132);

                auto g21_yy_xyyzzzz = primBuffer.data(g21off + 216 * idx + 133);

                auto g21_yy_xyzzzzz = primBuffer.data(g21off + 216 * idx + 134);

                auto g21_yy_xzzzzzz = primBuffer.data(g21off + 216 * idx + 135);

                auto g21_yy_yyyyyyy = primBuffer.data(g21off + 216 * idx + 136);

                auto g21_yy_yyyyyyz = primBuffer.data(g21off + 216 * idx + 137);

                auto g21_yy_yyyyyzz = primBuffer.data(g21off + 216 * idx + 138);

                auto g21_yy_yyyyzzz = primBuffer.data(g21off + 216 * idx + 139);

                auto g21_yy_yyyzzzz = primBuffer.data(g21off + 216 * idx + 140);

                auto g21_yy_yyzzzzz = primBuffer.data(g21off + 216 * idx + 141);

                auto g21_yy_yzzzzzz = primBuffer.data(g21off + 216 * idx + 142);

                auto g21_yy_zzzzzzz = primBuffer.data(g21off + 216 * idx + 143);

                auto g21_yz_xxxxxxx = primBuffer.data(g21off + 216 * idx + 144);

                auto g21_yz_xxxxxxy = primBuffer.data(g21off + 216 * idx + 145);

                auto g21_yz_xxxxxxz = primBuffer.data(g21off + 216 * idx + 146);

                auto g21_yz_xxxxxyy = primBuffer.data(g21off + 216 * idx + 147);

                auto g21_yz_xxxxxyz = primBuffer.data(g21off + 216 * idx + 148);

                auto g21_yz_xxxxxzz = primBuffer.data(g21off + 216 * idx + 149);

                auto g21_yz_xxxxyyy = primBuffer.data(g21off + 216 * idx + 150);

                auto g21_yz_xxxxyyz = primBuffer.data(g21off + 216 * idx + 151);

                auto g21_yz_xxxxyzz = primBuffer.data(g21off + 216 * idx + 152);

                auto g21_yz_xxxxzzz = primBuffer.data(g21off + 216 * idx + 153);

                auto g21_yz_xxxyyyy = primBuffer.data(g21off + 216 * idx + 154);

                auto g21_yz_xxxyyyz = primBuffer.data(g21off + 216 * idx + 155);

                auto g21_yz_xxxyyzz = primBuffer.data(g21off + 216 * idx + 156);

                auto g21_yz_xxxyzzz = primBuffer.data(g21off + 216 * idx + 157);

                auto g21_yz_xxxzzzz = primBuffer.data(g21off + 216 * idx + 158);

                auto g21_yz_xxyyyyy = primBuffer.data(g21off + 216 * idx + 159);

                auto g21_yz_xxyyyyz = primBuffer.data(g21off + 216 * idx + 160);

                auto g21_yz_xxyyyzz = primBuffer.data(g21off + 216 * idx + 161);

                auto g21_yz_xxyyzzz = primBuffer.data(g21off + 216 * idx + 162);

                auto g21_yz_xxyzzzz = primBuffer.data(g21off + 216 * idx + 163);

                auto g21_yz_xxzzzzz = primBuffer.data(g21off + 216 * idx + 164);

                auto g21_yz_xyyyyyy = primBuffer.data(g21off + 216 * idx + 165);

                auto g21_yz_xyyyyyz = primBuffer.data(g21off + 216 * idx + 166);

                auto g21_yz_xyyyyzz = primBuffer.data(g21off + 216 * idx + 167);

                auto g21_yz_xyyyzzz = primBuffer.data(g21off + 216 * idx + 168);

                auto g21_yz_xyyzzzz = primBuffer.data(g21off + 216 * idx + 169);

                auto g21_yz_xyzzzzz = primBuffer.data(g21off + 216 * idx + 170);

                auto g21_yz_xzzzzzz = primBuffer.data(g21off + 216 * idx + 171);

                auto g21_yz_yyyyyyy = primBuffer.data(g21off + 216 * idx + 172);

                auto g21_yz_yyyyyyz = primBuffer.data(g21off + 216 * idx + 173);

                auto g21_yz_yyyyyzz = primBuffer.data(g21off + 216 * idx + 174);

                auto g21_yz_yyyyzzz = primBuffer.data(g21off + 216 * idx + 175);

                auto g21_yz_yyyzzzz = primBuffer.data(g21off + 216 * idx + 176);

                auto g21_yz_yyzzzzz = primBuffer.data(g21off + 216 * idx + 177);

                auto g21_yz_yzzzzzz = primBuffer.data(g21off + 216 * idx + 178);

                auto g21_yz_zzzzzzz = primBuffer.data(g21off + 216 * idx + 179);

                auto g21_zz_xxxxxxx = primBuffer.data(g21off + 216 * idx + 180);

                auto g21_zz_xxxxxxy = primBuffer.data(g21off + 216 * idx + 181);

                auto g21_zz_xxxxxxz = primBuffer.data(g21off + 216 * idx + 182);

                auto g21_zz_xxxxxyy = primBuffer.data(g21off + 216 * idx + 183);

                auto g21_zz_xxxxxyz = primBuffer.data(g21off + 216 * idx + 184);

                auto g21_zz_xxxxxzz = primBuffer.data(g21off + 216 * idx + 185);

                auto g21_zz_xxxxyyy = primBuffer.data(g21off + 216 * idx + 186);

                auto g21_zz_xxxxyyz = primBuffer.data(g21off + 216 * idx + 187);

                auto g21_zz_xxxxyzz = primBuffer.data(g21off + 216 * idx + 188);

                auto g21_zz_xxxxzzz = primBuffer.data(g21off + 216 * idx + 189);

                auto g21_zz_xxxyyyy = primBuffer.data(g21off + 216 * idx + 190);

                auto g21_zz_xxxyyyz = primBuffer.data(g21off + 216 * idx + 191);

                auto g21_zz_xxxyyzz = primBuffer.data(g21off + 216 * idx + 192);

                auto g21_zz_xxxyzzz = primBuffer.data(g21off + 216 * idx + 193);

                auto g21_zz_xxxzzzz = primBuffer.data(g21off + 216 * idx + 194);

                auto g21_zz_xxyyyyy = primBuffer.data(g21off + 216 * idx + 195);

                auto g21_zz_xxyyyyz = primBuffer.data(g21off + 216 * idx + 196);

                auto g21_zz_xxyyyzz = primBuffer.data(g21off + 216 * idx + 197);

                auto g21_zz_xxyyzzz = primBuffer.data(g21off + 216 * idx + 198);

                auto g21_zz_xxyzzzz = primBuffer.data(g21off + 216 * idx + 199);

                auto g21_zz_xxzzzzz = primBuffer.data(g21off + 216 * idx + 200);

                auto g21_zz_xyyyyyy = primBuffer.data(g21off + 216 * idx + 201);

                auto g21_zz_xyyyyyz = primBuffer.data(g21off + 216 * idx + 202);

                auto g21_zz_xyyyyzz = primBuffer.data(g21off + 216 * idx + 203);

                auto g21_zz_xyyyzzz = primBuffer.data(g21off + 216 * idx + 204);

                auto g21_zz_xyyzzzz = primBuffer.data(g21off + 216 * idx + 205);

                auto g21_zz_xyzzzzz = primBuffer.data(g21off + 216 * idx + 206);

                auto g21_zz_xzzzzzz = primBuffer.data(g21off + 216 * idx + 207);

                auto g21_zz_yyyyyyy = primBuffer.data(g21off + 216 * idx + 208);

                auto g21_zz_yyyyyyz = primBuffer.data(g21off + 216 * idx + 209);

                auto g21_zz_yyyyyzz = primBuffer.data(g21off + 216 * idx + 210);

                auto g21_zz_yyyyzzz = primBuffer.data(g21off + 216 * idx + 211);

                auto g21_zz_yyyzzzz = primBuffer.data(g21off + 216 * idx + 212);

                auto g21_zz_yyzzzzz = primBuffer.data(g21off + 216 * idx + 213);

                auto g21_zz_yzzzzzz = primBuffer.data(g21off + 216 * idx + 214);

                auto g21_zz_zzzzzzz = primBuffer.data(g21off + 216 * idx + 215);

                // set up pointers to (F|g(r,r')|SK)^(m+1) integrals

                auto g11_xxx_xxxxxxx = primBuffer.data(g11off + 360 * idx);

                auto g11_xxx_xxxxxxy = primBuffer.data(g11off + 360 * idx + 1);

                auto g11_xxx_xxxxxxz = primBuffer.data(g11off + 360 * idx + 2);

                auto g11_xxx_xxxxxyy = primBuffer.data(g11off + 360 * idx + 3);

                auto g11_xxx_xxxxxyz = primBuffer.data(g11off + 360 * idx + 4);

                auto g11_xxx_xxxxxzz = primBuffer.data(g11off + 360 * idx + 5);

                auto g11_xxx_xxxxyyy = primBuffer.data(g11off + 360 * idx + 6);

                auto g11_xxx_xxxxyyz = primBuffer.data(g11off + 360 * idx + 7);

                auto g11_xxx_xxxxyzz = primBuffer.data(g11off + 360 * idx + 8);

                auto g11_xxx_xxxxzzz = primBuffer.data(g11off + 360 * idx + 9);

                auto g11_xxx_xxxyyyy = primBuffer.data(g11off + 360 * idx + 10);

                auto g11_xxx_xxxyyyz = primBuffer.data(g11off + 360 * idx + 11);

                auto g11_xxx_xxxyyzz = primBuffer.data(g11off + 360 * idx + 12);

                auto g11_xxx_xxxyzzz = primBuffer.data(g11off + 360 * idx + 13);

                auto g11_xxx_xxxzzzz = primBuffer.data(g11off + 360 * idx + 14);

                auto g11_xxx_xxyyyyy = primBuffer.data(g11off + 360 * idx + 15);

                auto g11_xxx_xxyyyyz = primBuffer.data(g11off + 360 * idx + 16);

                auto g11_xxx_xxyyyzz = primBuffer.data(g11off + 360 * idx + 17);

                auto g11_xxx_xxyyzzz = primBuffer.data(g11off + 360 * idx + 18);

                auto g11_xxx_xxyzzzz = primBuffer.data(g11off + 360 * idx + 19);

                auto g11_xxx_xxzzzzz = primBuffer.data(g11off + 360 * idx + 20);

                auto g11_xxx_xyyyyyy = primBuffer.data(g11off + 360 * idx + 21);

                auto g11_xxx_xyyyyyz = primBuffer.data(g11off + 360 * idx + 22);

                auto g11_xxx_xyyyyzz = primBuffer.data(g11off + 360 * idx + 23);

                auto g11_xxx_xyyyzzz = primBuffer.data(g11off + 360 * idx + 24);

                auto g11_xxx_xyyzzzz = primBuffer.data(g11off + 360 * idx + 25);

                auto g11_xxx_xyzzzzz = primBuffer.data(g11off + 360 * idx + 26);

                auto g11_xxx_xzzzzzz = primBuffer.data(g11off + 360 * idx + 27);

                auto g11_xxx_yyyyyyy = primBuffer.data(g11off + 360 * idx + 28);

                auto g11_xxx_yyyyyyz = primBuffer.data(g11off + 360 * idx + 29);

                auto g11_xxx_yyyyyzz = primBuffer.data(g11off + 360 * idx + 30);

                auto g11_xxx_yyyyzzz = primBuffer.data(g11off + 360 * idx + 31);

                auto g11_xxx_yyyzzzz = primBuffer.data(g11off + 360 * idx + 32);

                auto g11_xxx_yyzzzzz = primBuffer.data(g11off + 360 * idx + 33);

                auto g11_xxx_yzzzzzz = primBuffer.data(g11off + 360 * idx + 34);

                auto g11_xxx_zzzzzzz = primBuffer.data(g11off + 360 * idx + 35);

                auto g11_xxy_xxxxxxx = primBuffer.data(g11off + 360 * idx + 36);

                auto g11_xxy_xxxxxxy = primBuffer.data(g11off + 360 * idx + 37);

                auto g11_xxy_xxxxxxz = primBuffer.data(g11off + 360 * idx + 38);

                auto g11_xxy_xxxxxyy = primBuffer.data(g11off + 360 * idx + 39);

                auto g11_xxy_xxxxxyz = primBuffer.data(g11off + 360 * idx + 40);

                auto g11_xxy_xxxxxzz = primBuffer.data(g11off + 360 * idx + 41);

                auto g11_xxy_xxxxyyy = primBuffer.data(g11off + 360 * idx + 42);

                auto g11_xxy_xxxxyyz = primBuffer.data(g11off + 360 * idx + 43);

                auto g11_xxy_xxxxyzz = primBuffer.data(g11off + 360 * idx + 44);

                auto g11_xxy_xxxxzzz = primBuffer.data(g11off + 360 * idx + 45);

                auto g11_xxy_xxxyyyy = primBuffer.data(g11off + 360 * idx + 46);

                auto g11_xxy_xxxyyyz = primBuffer.data(g11off + 360 * idx + 47);

                auto g11_xxy_xxxyyzz = primBuffer.data(g11off + 360 * idx + 48);

                auto g11_xxy_xxxyzzz = primBuffer.data(g11off + 360 * idx + 49);

                auto g11_xxy_xxxzzzz = primBuffer.data(g11off + 360 * idx + 50);

                auto g11_xxy_xxyyyyy = primBuffer.data(g11off + 360 * idx + 51);

                auto g11_xxy_xxyyyyz = primBuffer.data(g11off + 360 * idx + 52);

                auto g11_xxy_xxyyyzz = primBuffer.data(g11off + 360 * idx + 53);

                auto g11_xxy_xxyyzzz = primBuffer.data(g11off + 360 * idx + 54);

                auto g11_xxy_xxyzzzz = primBuffer.data(g11off + 360 * idx + 55);

                auto g11_xxy_xxzzzzz = primBuffer.data(g11off + 360 * idx + 56);

                auto g11_xxy_xyyyyyy = primBuffer.data(g11off + 360 * idx + 57);

                auto g11_xxy_xyyyyyz = primBuffer.data(g11off + 360 * idx + 58);

                auto g11_xxy_xyyyyzz = primBuffer.data(g11off + 360 * idx + 59);

                auto g11_xxy_xyyyzzz = primBuffer.data(g11off + 360 * idx + 60);

                auto g11_xxy_xyyzzzz = primBuffer.data(g11off + 360 * idx + 61);

                auto g11_xxy_xyzzzzz = primBuffer.data(g11off + 360 * idx + 62);

                auto g11_xxy_xzzzzzz = primBuffer.data(g11off + 360 * idx + 63);

                auto g11_xxy_yyyyyyy = primBuffer.data(g11off + 360 * idx + 64);

                auto g11_xxy_yyyyyyz = primBuffer.data(g11off + 360 * idx + 65);

                auto g11_xxy_yyyyyzz = primBuffer.data(g11off + 360 * idx + 66);

                auto g11_xxy_yyyyzzz = primBuffer.data(g11off + 360 * idx + 67);

                auto g11_xxy_yyyzzzz = primBuffer.data(g11off + 360 * idx + 68);

                auto g11_xxy_yyzzzzz = primBuffer.data(g11off + 360 * idx + 69);

                auto g11_xxy_yzzzzzz = primBuffer.data(g11off + 360 * idx + 70);

                auto g11_xxy_zzzzzzz = primBuffer.data(g11off + 360 * idx + 71);

                auto g11_xxz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 72);

                auto g11_xxz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 73);

                auto g11_xxz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 74);

                auto g11_xxz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 75);

                auto g11_xxz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 76);

                auto g11_xxz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 77);

                auto g11_xxz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 78);

                auto g11_xxz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 79);

                auto g11_xxz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 80);

                auto g11_xxz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 81);

                auto g11_xxz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 82);

                auto g11_xxz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 83);

                auto g11_xxz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 84);

                auto g11_xxz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 85);

                auto g11_xxz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 86);

                auto g11_xxz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 87);

                auto g11_xxz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 88);

                auto g11_xxz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 89);

                auto g11_xxz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 90);

                auto g11_xxz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 91);

                auto g11_xxz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 92);

                auto g11_xxz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 93);

                auto g11_xxz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 94);

                auto g11_xxz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 95);

                auto g11_xxz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 96);

                auto g11_xxz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 97);

                auto g11_xxz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 98);

                auto g11_xxz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 99);

                auto g11_xxz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 100);

                auto g11_xxz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 101);

                auto g11_xxz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 102);

                auto g11_xxz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 103);

                auto g11_xxz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 104);

                auto g11_xxz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 105);

                auto g11_xxz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 106);

                auto g11_xxz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 107);

                auto g11_xyy_xxxxxxx = primBuffer.data(g11off + 360 * idx + 108);

                auto g11_xyy_xxxxxxy = primBuffer.data(g11off + 360 * idx + 109);

                auto g11_xyy_xxxxxxz = primBuffer.data(g11off + 360 * idx + 110);

                auto g11_xyy_xxxxxyy = primBuffer.data(g11off + 360 * idx + 111);

                auto g11_xyy_xxxxxyz = primBuffer.data(g11off + 360 * idx + 112);

                auto g11_xyy_xxxxxzz = primBuffer.data(g11off + 360 * idx + 113);

                auto g11_xyy_xxxxyyy = primBuffer.data(g11off + 360 * idx + 114);

                auto g11_xyy_xxxxyyz = primBuffer.data(g11off + 360 * idx + 115);

                auto g11_xyy_xxxxyzz = primBuffer.data(g11off + 360 * idx + 116);

                auto g11_xyy_xxxxzzz = primBuffer.data(g11off + 360 * idx + 117);

                auto g11_xyy_xxxyyyy = primBuffer.data(g11off + 360 * idx + 118);

                auto g11_xyy_xxxyyyz = primBuffer.data(g11off + 360 * idx + 119);

                auto g11_xyy_xxxyyzz = primBuffer.data(g11off + 360 * idx + 120);

                auto g11_xyy_xxxyzzz = primBuffer.data(g11off + 360 * idx + 121);

                auto g11_xyy_xxxzzzz = primBuffer.data(g11off + 360 * idx + 122);

                auto g11_xyy_xxyyyyy = primBuffer.data(g11off + 360 * idx + 123);

                auto g11_xyy_xxyyyyz = primBuffer.data(g11off + 360 * idx + 124);

                auto g11_xyy_xxyyyzz = primBuffer.data(g11off + 360 * idx + 125);

                auto g11_xyy_xxyyzzz = primBuffer.data(g11off + 360 * idx + 126);

                auto g11_xyy_xxyzzzz = primBuffer.data(g11off + 360 * idx + 127);

                auto g11_xyy_xxzzzzz = primBuffer.data(g11off + 360 * idx + 128);

                auto g11_xyy_xyyyyyy = primBuffer.data(g11off + 360 * idx + 129);

                auto g11_xyy_xyyyyyz = primBuffer.data(g11off + 360 * idx + 130);

                auto g11_xyy_xyyyyzz = primBuffer.data(g11off + 360 * idx + 131);

                auto g11_xyy_xyyyzzz = primBuffer.data(g11off + 360 * idx + 132);

                auto g11_xyy_xyyzzzz = primBuffer.data(g11off + 360 * idx + 133);

                auto g11_xyy_xyzzzzz = primBuffer.data(g11off + 360 * idx + 134);

                auto g11_xyy_xzzzzzz = primBuffer.data(g11off + 360 * idx + 135);

                auto g11_xyy_yyyyyyy = primBuffer.data(g11off + 360 * idx + 136);

                auto g11_xyy_yyyyyyz = primBuffer.data(g11off + 360 * idx + 137);

                auto g11_xyy_yyyyyzz = primBuffer.data(g11off + 360 * idx + 138);

                auto g11_xyy_yyyyzzz = primBuffer.data(g11off + 360 * idx + 139);

                auto g11_xyy_yyyzzzz = primBuffer.data(g11off + 360 * idx + 140);

                auto g11_xyy_yyzzzzz = primBuffer.data(g11off + 360 * idx + 141);

                auto g11_xyy_yzzzzzz = primBuffer.data(g11off + 360 * idx + 142);

                auto g11_xyy_zzzzzzz = primBuffer.data(g11off + 360 * idx + 143);

                auto g11_xyz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 144);

                auto g11_xyz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 145);

                auto g11_xyz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 146);

                auto g11_xyz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 147);

                auto g11_xyz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 148);

                auto g11_xyz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 149);

                auto g11_xyz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 150);

                auto g11_xyz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 151);

                auto g11_xyz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 152);

                auto g11_xyz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 153);

                auto g11_xyz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 154);

                auto g11_xyz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 155);

                auto g11_xyz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 156);

                auto g11_xyz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 157);

                auto g11_xyz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 158);

                auto g11_xyz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 159);

                auto g11_xyz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 160);

                auto g11_xyz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 161);

                auto g11_xyz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 162);

                auto g11_xyz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 163);

                auto g11_xyz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 164);

                auto g11_xyz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 165);

                auto g11_xyz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 166);

                auto g11_xyz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 167);

                auto g11_xyz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 168);

                auto g11_xyz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 169);

                auto g11_xyz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 170);

                auto g11_xyz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 171);

                auto g11_xyz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 172);

                auto g11_xyz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 173);

                auto g11_xyz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 174);

                auto g11_xyz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 175);

                auto g11_xyz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 176);

                auto g11_xyz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 177);

                auto g11_xyz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 178);

                auto g11_xyz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 179);

                auto g11_xzz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 180);

                auto g11_xzz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 181);

                auto g11_xzz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 182);

                auto g11_xzz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 183);

                auto g11_xzz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 184);

                auto g11_xzz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 185);

                auto g11_xzz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 186);

                auto g11_xzz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 187);

                auto g11_xzz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 188);

                auto g11_xzz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 189);

                auto g11_xzz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 190);

                auto g11_xzz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 191);

                auto g11_xzz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 192);

                auto g11_xzz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 193);

                auto g11_xzz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 194);

                auto g11_xzz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 195);

                auto g11_xzz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 196);

                auto g11_xzz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 197);

                auto g11_xzz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 198);

                auto g11_xzz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 199);

                auto g11_xzz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 200);

                auto g11_xzz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 201);

                auto g11_xzz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 202);

                auto g11_xzz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 203);

                auto g11_xzz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 204);

                auto g11_xzz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 205);

                auto g11_xzz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 206);

                auto g11_xzz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 207);

                auto g11_xzz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 208);

                auto g11_xzz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 209);

                auto g11_xzz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 210);

                auto g11_xzz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 211);

                auto g11_xzz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 212);

                auto g11_xzz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 213);

                auto g11_xzz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 214);

                auto g11_xzz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 215);

                auto g11_yyy_xxxxxxx = primBuffer.data(g11off + 360 * idx + 216);

                auto g11_yyy_xxxxxxy = primBuffer.data(g11off + 360 * idx + 217);

                auto g11_yyy_xxxxxxz = primBuffer.data(g11off + 360 * idx + 218);

                auto g11_yyy_xxxxxyy = primBuffer.data(g11off + 360 * idx + 219);

                auto g11_yyy_xxxxxyz = primBuffer.data(g11off + 360 * idx + 220);

                auto g11_yyy_xxxxxzz = primBuffer.data(g11off + 360 * idx + 221);

                auto g11_yyy_xxxxyyy = primBuffer.data(g11off + 360 * idx + 222);

                auto g11_yyy_xxxxyyz = primBuffer.data(g11off + 360 * idx + 223);

                auto g11_yyy_xxxxyzz = primBuffer.data(g11off + 360 * idx + 224);

                auto g11_yyy_xxxxzzz = primBuffer.data(g11off + 360 * idx + 225);

                auto g11_yyy_xxxyyyy = primBuffer.data(g11off + 360 * idx + 226);

                auto g11_yyy_xxxyyyz = primBuffer.data(g11off + 360 * idx + 227);

                auto g11_yyy_xxxyyzz = primBuffer.data(g11off + 360 * idx + 228);

                auto g11_yyy_xxxyzzz = primBuffer.data(g11off + 360 * idx + 229);

                auto g11_yyy_xxxzzzz = primBuffer.data(g11off + 360 * idx + 230);

                auto g11_yyy_xxyyyyy = primBuffer.data(g11off + 360 * idx + 231);

                auto g11_yyy_xxyyyyz = primBuffer.data(g11off + 360 * idx + 232);

                auto g11_yyy_xxyyyzz = primBuffer.data(g11off + 360 * idx + 233);

                auto g11_yyy_xxyyzzz = primBuffer.data(g11off + 360 * idx + 234);

                auto g11_yyy_xxyzzzz = primBuffer.data(g11off + 360 * idx + 235);

                auto g11_yyy_xxzzzzz = primBuffer.data(g11off + 360 * idx + 236);

                auto g11_yyy_xyyyyyy = primBuffer.data(g11off + 360 * idx + 237);

                auto g11_yyy_xyyyyyz = primBuffer.data(g11off + 360 * idx + 238);

                auto g11_yyy_xyyyyzz = primBuffer.data(g11off + 360 * idx + 239);

                auto g11_yyy_xyyyzzz = primBuffer.data(g11off + 360 * idx + 240);

                auto g11_yyy_xyyzzzz = primBuffer.data(g11off + 360 * idx + 241);

                auto g11_yyy_xyzzzzz = primBuffer.data(g11off + 360 * idx + 242);

                auto g11_yyy_xzzzzzz = primBuffer.data(g11off + 360 * idx + 243);

                auto g11_yyy_yyyyyyy = primBuffer.data(g11off + 360 * idx + 244);

                auto g11_yyy_yyyyyyz = primBuffer.data(g11off + 360 * idx + 245);

                auto g11_yyy_yyyyyzz = primBuffer.data(g11off + 360 * idx + 246);

                auto g11_yyy_yyyyzzz = primBuffer.data(g11off + 360 * idx + 247);

                auto g11_yyy_yyyzzzz = primBuffer.data(g11off + 360 * idx + 248);

                auto g11_yyy_yyzzzzz = primBuffer.data(g11off + 360 * idx + 249);

                auto g11_yyy_yzzzzzz = primBuffer.data(g11off + 360 * idx + 250);

                auto g11_yyy_zzzzzzz = primBuffer.data(g11off + 360 * idx + 251);

                auto g11_yyz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 252);

                auto g11_yyz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 253);

                auto g11_yyz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 254);

                auto g11_yyz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 255);

                auto g11_yyz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 256);

                auto g11_yyz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 257);

                auto g11_yyz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 258);

                auto g11_yyz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 259);

                auto g11_yyz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 260);

                auto g11_yyz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 261);

                auto g11_yyz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 262);

                auto g11_yyz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 263);

                auto g11_yyz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 264);

                auto g11_yyz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 265);

                auto g11_yyz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 266);

                auto g11_yyz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 267);

                auto g11_yyz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 268);

                auto g11_yyz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 269);

                auto g11_yyz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 270);

                auto g11_yyz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 271);

                auto g11_yyz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 272);

                auto g11_yyz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 273);

                auto g11_yyz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 274);

                auto g11_yyz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 275);

                auto g11_yyz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 276);

                auto g11_yyz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 277);

                auto g11_yyz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 278);

                auto g11_yyz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 279);

                auto g11_yyz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 280);

                auto g11_yyz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 281);

                auto g11_yyz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 282);

                auto g11_yyz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 283);

                auto g11_yyz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 284);

                auto g11_yyz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 285);

                auto g11_yyz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 286);

                auto g11_yyz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 287);

                auto g11_yzz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 288);

                auto g11_yzz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 289);

                auto g11_yzz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 290);

                auto g11_yzz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 291);

                auto g11_yzz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 292);

                auto g11_yzz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 293);

                auto g11_yzz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 294);

                auto g11_yzz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 295);

                auto g11_yzz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 296);

                auto g11_yzz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 297);

                auto g11_yzz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 298);

                auto g11_yzz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 299);

                auto g11_yzz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 300);

                auto g11_yzz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 301);

                auto g11_yzz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 302);

                auto g11_yzz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 303);

                auto g11_yzz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 304);

                auto g11_yzz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 305);

                auto g11_yzz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 306);

                auto g11_yzz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 307);

                auto g11_yzz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 308);

                auto g11_yzz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 309);

                auto g11_yzz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 310);

                auto g11_yzz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 311);

                auto g11_yzz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 312);

                auto g11_yzz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 313);

                auto g11_yzz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 314);

                auto g11_yzz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 315);

                auto g11_yzz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 316);

                auto g11_yzz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 317);

                auto g11_yzz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 318);

                auto g11_yzz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 319);

                auto g11_yzz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 320);

                auto g11_yzz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 321);

                auto g11_yzz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 322);

                auto g11_yzz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 323);

                auto g11_zzz_xxxxxxx = primBuffer.data(g11off + 360 * idx + 324);

                auto g11_zzz_xxxxxxy = primBuffer.data(g11off + 360 * idx + 325);

                auto g11_zzz_xxxxxxz = primBuffer.data(g11off + 360 * idx + 326);

                auto g11_zzz_xxxxxyy = primBuffer.data(g11off + 360 * idx + 327);

                auto g11_zzz_xxxxxyz = primBuffer.data(g11off + 360 * idx + 328);

                auto g11_zzz_xxxxxzz = primBuffer.data(g11off + 360 * idx + 329);

                auto g11_zzz_xxxxyyy = primBuffer.data(g11off + 360 * idx + 330);

                auto g11_zzz_xxxxyyz = primBuffer.data(g11off + 360 * idx + 331);

                auto g11_zzz_xxxxyzz = primBuffer.data(g11off + 360 * idx + 332);

                auto g11_zzz_xxxxzzz = primBuffer.data(g11off + 360 * idx + 333);

                auto g11_zzz_xxxyyyy = primBuffer.data(g11off + 360 * idx + 334);

                auto g11_zzz_xxxyyyz = primBuffer.data(g11off + 360 * idx + 335);

                auto g11_zzz_xxxyyzz = primBuffer.data(g11off + 360 * idx + 336);

                auto g11_zzz_xxxyzzz = primBuffer.data(g11off + 360 * idx + 337);

                auto g11_zzz_xxxzzzz = primBuffer.data(g11off + 360 * idx + 338);

                auto g11_zzz_xxyyyyy = primBuffer.data(g11off + 360 * idx + 339);

                auto g11_zzz_xxyyyyz = primBuffer.data(g11off + 360 * idx + 340);

                auto g11_zzz_xxyyyzz = primBuffer.data(g11off + 360 * idx + 341);

                auto g11_zzz_xxyyzzz = primBuffer.data(g11off + 360 * idx + 342);

                auto g11_zzz_xxyzzzz = primBuffer.data(g11off + 360 * idx + 343);

                auto g11_zzz_xxzzzzz = primBuffer.data(g11off + 360 * idx + 344);

                auto g11_zzz_xyyyyyy = primBuffer.data(g11off + 360 * idx + 345);

                auto g11_zzz_xyyyyyz = primBuffer.data(g11off + 360 * idx + 346);

                auto g11_zzz_xyyyyzz = primBuffer.data(g11off + 360 * idx + 347);

                auto g11_zzz_xyyyzzz = primBuffer.data(g11off + 360 * idx + 348);

                auto g11_zzz_xyyzzzz = primBuffer.data(g11off + 360 * idx + 349);

                auto g11_zzz_xyzzzzz = primBuffer.data(g11off + 360 * idx + 350);

                auto g11_zzz_xzzzzzz = primBuffer.data(g11off + 360 * idx + 351);

                auto g11_zzz_yyyyyyy = primBuffer.data(g11off + 360 * idx + 352);

                auto g11_zzz_yyyyyyz = primBuffer.data(g11off + 360 * idx + 353);

                auto g11_zzz_yyyyyzz = primBuffer.data(g11off + 360 * idx + 354);

                auto g11_zzz_yyyyzzz = primBuffer.data(g11off + 360 * idx + 355);

                auto g11_zzz_yyyzzzz = primBuffer.data(g11off + 360 * idx + 356);

                auto g11_zzz_yyzzzzz = primBuffer.data(g11off + 360 * idx + 357);

                auto g11_zzz_yzzzzzz = primBuffer.data(g11off + 360 * idx + 358);

                auto g11_zzz_zzzzzzz = primBuffer.data(g11off + 360 * idx + 359);

                // set up pointers to (G|g(r,r')|SK)^(m) integrals

                auto g_xxxx_xxxxxxx = primBuffer.data(goff + 540 * idx);

                auto g_xxxx_xxxxxxy = primBuffer.data(goff + 540 * idx + 1);

                auto g_xxxx_xxxxxxz = primBuffer.data(goff + 540 * idx + 2);

                auto g_xxxx_xxxxxyy = primBuffer.data(goff + 540 * idx + 3);

                auto g_xxxx_xxxxxyz = primBuffer.data(goff + 540 * idx + 4);

                auto g_xxxx_xxxxxzz = primBuffer.data(goff + 540 * idx + 5);

                auto g_xxxx_xxxxyyy = primBuffer.data(goff + 540 * idx + 6);

                auto g_xxxx_xxxxyyz = primBuffer.data(goff + 540 * idx + 7);

                auto g_xxxx_xxxxyzz = primBuffer.data(goff + 540 * idx + 8);

                auto g_xxxx_xxxxzzz = primBuffer.data(goff + 540 * idx + 9);

                auto g_xxxx_xxxyyyy = primBuffer.data(goff + 540 * idx + 10);

                auto g_xxxx_xxxyyyz = primBuffer.data(goff + 540 * idx + 11);

                auto g_xxxx_xxxyyzz = primBuffer.data(goff + 540 * idx + 12);

                auto g_xxxx_xxxyzzz = primBuffer.data(goff + 540 * idx + 13);

                auto g_xxxx_xxxzzzz = primBuffer.data(goff + 540 * idx + 14);

                auto g_xxxx_xxyyyyy = primBuffer.data(goff + 540 * idx + 15);

                auto g_xxxx_xxyyyyz = primBuffer.data(goff + 540 * idx + 16);

                auto g_xxxx_xxyyyzz = primBuffer.data(goff + 540 * idx + 17);

                auto g_xxxx_xxyyzzz = primBuffer.data(goff + 540 * idx + 18);

                auto g_xxxx_xxyzzzz = primBuffer.data(goff + 540 * idx + 19);

                auto g_xxxx_xxzzzzz = primBuffer.data(goff + 540 * idx + 20);

                auto g_xxxx_xyyyyyy = primBuffer.data(goff + 540 * idx + 21);

                auto g_xxxx_xyyyyyz = primBuffer.data(goff + 540 * idx + 22);

                auto g_xxxx_xyyyyzz = primBuffer.data(goff + 540 * idx + 23);

                auto g_xxxx_xyyyzzz = primBuffer.data(goff + 540 * idx + 24);

                auto g_xxxx_xyyzzzz = primBuffer.data(goff + 540 * idx + 25);

                auto g_xxxx_xyzzzzz = primBuffer.data(goff + 540 * idx + 26);

                auto g_xxxx_xzzzzzz = primBuffer.data(goff + 540 * idx + 27);

                auto g_xxxx_yyyyyyy = primBuffer.data(goff + 540 * idx + 28);

                auto g_xxxx_yyyyyyz = primBuffer.data(goff + 540 * idx + 29);

                auto g_xxxx_yyyyyzz = primBuffer.data(goff + 540 * idx + 30);

                auto g_xxxx_yyyyzzz = primBuffer.data(goff + 540 * idx + 31);

                auto g_xxxx_yyyzzzz = primBuffer.data(goff + 540 * idx + 32);

                auto g_xxxx_yyzzzzz = primBuffer.data(goff + 540 * idx + 33);

                auto g_xxxx_yzzzzzz = primBuffer.data(goff + 540 * idx + 34);

                auto g_xxxx_zzzzzzz = primBuffer.data(goff + 540 * idx + 35);

                auto g_xxxy_xxxxxxx = primBuffer.data(goff + 540 * idx + 36);

                auto g_xxxy_xxxxxxy = primBuffer.data(goff + 540 * idx + 37);

                auto g_xxxy_xxxxxxz = primBuffer.data(goff + 540 * idx + 38);

                auto g_xxxy_xxxxxyy = primBuffer.data(goff + 540 * idx + 39);

                auto g_xxxy_xxxxxyz = primBuffer.data(goff + 540 * idx + 40);

                auto g_xxxy_xxxxxzz = primBuffer.data(goff + 540 * idx + 41);

                auto g_xxxy_xxxxyyy = primBuffer.data(goff + 540 * idx + 42);

                auto g_xxxy_xxxxyyz = primBuffer.data(goff + 540 * idx + 43);

                auto g_xxxy_xxxxyzz = primBuffer.data(goff + 540 * idx + 44);

                auto g_xxxy_xxxxzzz = primBuffer.data(goff + 540 * idx + 45);

                auto g_xxxy_xxxyyyy = primBuffer.data(goff + 540 * idx + 46);

                auto g_xxxy_xxxyyyz = primBuffer.data(goff + 540 * idx + 47);

                auto g_xxxy_xxxyyzz = primBuffer.data(goff + 540 * idx + 48);

                auto g_xxxy_xxxyzzz = primBuffer.data(goff + 540 * idx + 49);

                auto g_xxxy_xxxzzzz = primBuffer.data(goff + 540 * idx + 50);

                auto g_xxxy_xxyyyyy = primBuffer.data(goff + 540 * idx + 51);

                auto g_xxxy_xxyyyyz = primBuffer.data(goff + 540 * idx + 52);

                auto g_xxxy_xxyyyzz = primBuffer.data(goff + 540 * idx + 53);

                auto g_xxxy_xxyyzzz = primBuffer.data(goff + 540 * idx + 54);

                auto g_xxxy_xxyzzzz = primBuffer.data(goff + 540 * idx + 55);

                auto g_xxxy_xxzzzzz = primBuffer.data(goff + 540 * idx + 56);

                auto g_xxxy_xyyyyyy = primBuffer.data(goff + 540 * idx + 57);

                auto g_xxxy_xyyyyyz = primBuffer.data(goff + 540 * idx + 58);

                auto g_xxxy_xyyyyzz = primBuffer.data(goff + 540 * idx + 59);

                auto g_xxxy_xyyyzzz = primBuffer.data(goff + 540 * idx + 60);

                auto g_xxxy_xyyzzzz = primBuffer.data(goff + 540 * idx + 61);

                auto g_xxxy_xyzzzzz = primBuffer.data(goff + 540 * idx + 62);

                auto g_xxxy_xzzzzzz = primBuffer.data(goff + 540 * idx + 63);

                auto g_xxxy_yyyyyyy = primBuffer.data(goff + 540 * idx + 64);

                auto g_xxxy_yyyyyyz = primBuffer.data(goff + 540 * idx + 65);

                auto g_xxxy_yyyyyzz = primBuffer.data(goff + 540 * idx + 66);

                auto g_xxxy_yyyyzzz = primBuffer.data(goff + 540 * idx + 67);

                auto g_xxxy_yyyzzzz = primBuffer.data(goff + 540 * idx + 68);

                auto g_xxxy_yyzzzzz = primBuffer.data(goff + 540 * idx + 69);

                auto g_xxxy_yzzzzzz = primBuffer.data(goff + 540 * idx + 70);

                auto g_xxxy_zzzzzzz = primBuffer.data(goff + 540 * idx + 71);

                auto g_xxxz_xxxxxxx = primBuffer.data(goff + 540 * idx + 72);

                auto g_xxxz_xxxxxxy = primBuffer.data(goff + 540 * idx + 73);

                auto g_xxxz_xxxxxxz = primBuffer.data(goff + 540 * idx + 74);

                auto g_xxxz_xxxxxyy = primBuffer.data(goff + 540 * idx + 75);

                auto g_xxxz_xxxxxyz = primBuffer.data(goff + 540 * idx + 76);

                auto g_xxxz_xxxxxzz = primBuffer.data(goff + 540 * idx + 77);

                auto g_xxxz_xxxxyyy = primBuffer.data(goff + 540 * idx + 78);

                auto g_xxxz_xxxxyyz = primBuffer.data(goff + 540 * idx + 79);

                auto g_xxxz_xxxxyzz = primBuffer.data(goff + 540 * idx + 80);

                auto g_xxxz_xxxxzzz = primBuffer.data(goff + 540 * idx + 81);

                auto g_xxxz_xxxyyyy = primBuffer.data(goff + 540 * idx + 82);

                auto g_xxxz_xxxyyyz = primBuffer.data(goff + 540 * idx + 83);

                auto g_xxxz_xxxyyzz = primBuffer.data(goff + 540 * idx + 84);

                auto g_xxxz_xxxyzzz = primBuffer.data(goff + 540 * idx + 85);

                auto g_xxxz_xxxzzzz = primBuffer.data(goff + 540 * idx + 86);

                auto g_xxxz_xxyyyyy = primBuffer.data(goff + 540 * idx + 87);

                auto g_xxxz_xxyyyyz = primBuffer.data(goff + 540 * idx + 88);

                auto g_xxxz_xxyyyzz = primBuffer.data(goff + 540 * idx + 89);

                auto g_xxxz_xxyyzzz = primBuffer.data(goff + 540 * idx + 90);

                auto g_xxxz_xxyzzzz = primBuffer.data(goff + 540 * idx + 91);

                auto g_xxxz_xxzzzzz = primBuffer.data(goff + 540 * idx + 92);

                auto g_xxxz_xyyyyyy = primBuffer.data(goff + 540 * idx + 93);

                auto g_xxxz_xyyyyyz = primBuffer.data(goff + 540 * idx + 94);

                auto g_xxxz_xyyyyzz = primBuffer.data(goff + 540 * idx + 95);

                auto g_xxxz_xyyyzzz = primBuffer.data(goff + 540 * idx + 96);

                auto g_xxxz_xyyzzzz = primBuffer.data(goff + 540 * idx + 97);

                auto g_xxxz_xyzzzzz = primBuffer.data(goff + 540 * idx + 98);

                auto g_xxxz_xzzzzzz = primBuffer.data(goff + 540 * idx + 99);

                auto g_xxxz_yyyyyyy = primBuffer.data(goff + 540 * idx + 100);

                auto g_xxxz_yyyyyyz = primBuffer.data(goff + 540 * idx + 101);

                auto g_xxxz_yyyyyzz = primBuffer.data(goff + 540 * idx + 102);

                auto g_xxxz_yyyyzzz = primBuffer.data(goff + 540 * idx + 103);

                auto g_xxxz_yyyzzzz = primBuffer.data(goff + 540 * idx + 104);

                auto g_xxxz_yyzzzzz = primBuffer.data(goff + 540 * idx + 105);

                auto g_xxxz_yzzzzzz = primBuffer.data(goff + 540 * idx + 106);

                auto g_xxxz_zzzzzzz = primBuffer.data(goff + 540 * idx + 107);

                auto g_xxyy_xxxxxxx = primBuffer.data(goff + 540 * idx + 108);

                auto g_xxyy_xxxxxxy = primBuffer.data(goff + 540 * idx + 109);

                auto g_xxyy_xxxxxxz = primBuffer.data(goff + 540 * idx + 110);

                auto g_xxyy_xxxxxyy = primBuffer.data(goff + 540 * idx + 111);

                auto g_xxyy_xxxxxyz = primBuffer.data(goff + 540 * idx + 112);

                auto g_xxyy_xxxxxzz = primBuffer.data(goff + 540 * idx + 113);

                auto g_xxyy_xxxxyyy = primBuffer.data(goff + 540 * idx + 114);

                auto g_xxyy_xxxxyyz = primBuffer.data(goff + 540 * idx + 115);

                auto g_xxyy_xxxxyzz = primBuffer.data(goff + 540 * idx + 116);

                auto g_xxyy_xxxxzzz = primBuffer.data(goff + 540 * idx + 117);

                auto g_xxyy_xxxyyyy = primBuffer.data(goff + 540 * idx + 118);

                auto g_xxyy_xxxyyyz = primBuffer.data(goff + 540 * idx + 119);

                auto g_xxyy_xxxyyzz = primBuffer.data(goff + 540 * idx + 120);

                auto g_xxyy_xxxyzzz = primBuffer.data(goff + 540 * idx + 121);

                auto g_xxyy_xxxzzzz = primBuffer.data(goff + 540 * idx + 122);

                auto g_xxyy_xxyyyyy = primBuffer.data(goff + 540 * idx + 123);

                auto g_xxyy_xxyyyyz = primBuffer.data(goff + 540 * idx + 124);

                auto g_xxyy_xxyyyzz = primBuffer.data(goff + 540 * idx + 125);

                auto g_xxyy_xxyyzzz = primBuffer.data(goff + 540 * idx + 126);

                auto g_xxyy_xxyzzzz = primBuffer.data(goff + 540 * idx + 127);

                auto g_xxyy_xxzzzzz = primBuffer.data(goff + 540 * idx + 128);

                auto g_xxyy_xyyyyyy = primBuffer.data(goff + 540 * idx + 129);

                auto g_xxyy_xyyyyyz = primBuffer.data(goff + 540 * idx + 130);

                auto g_xxyy_xyyyyzz = primBuffer.data(goff + 540 * idx + 131);

                auto g_xxyy_xyyyzzz = primBuffer.data(goff + 540 * idx + 132);

                auto g_xxyy_xyyzzzz = primBuffer.data(goff + 540 * idx + 133);

                auto g_xxyy_xyzzzzz = primBuffer.data(goff + 540 * idx + 134);

                auto g_xxyy_xzzzzzz = primBuffer.data(goff + 540 * idx + 135);

                auto g_xxyy_yyyyyyy = primBuffer.data(goff + 540 * idx + 136);

                auto g_xxyy_yyyyyyz = primBuffer.data(goff + 540 * idx + 137);

                auto g_xxyy_yyyyyzz = primBuffer.data(goff + 540 * idx + 138);

                auto g_xxyy_yyyyzzz = primBuffer.data(goff + 540 * idx + 139);

                auto g_xxyy_yyyzzzz = primBuffer.data(goff + 540 * idx + 140);

                auto g_xxyy_yyzzzzz = primBuffer.data(goff + 540 * idx + 141);

                auto g_xxyy_yzzzzzz = primBuffer.data(goff + 540 * idx + 142);

                auto g_xxyy_zzzzzzz = primBuffer.data(goff + 540 * idx + 143);

                auto g_xxyz_xxxxxxx = primBuffer.data(goff + 540 * idx + 144);

                auto g_xxyz_xxxxxxy = primBuffer.data(goff + 540 * idx + 145);

                auto g_xxyz_xxxxxxz = primBuffer.data(goff + 540 * idx + 146);

                auto g_xxyz_xxxxxyy = primBuffer.data(goff + 540 * idx + 147);

                auto g_xxyz_xxxxxyz = primBuffer.data(goff + 540 * idx + 148);

                auto g_xxyz_xxxxxzz = primBuffer.data(goff + 540 * idx + 149);

                auto g_xxyz_xxxxyyy = primBuffer.data(goff + 540 * idx + 150);

                auto g_xxyz_xxxxyyz = primBuffer.data(goff + 540 * idx + 151);

                auto g_xxyz_xxxxyzz = primBuffer.data(goff + 540 * idx + 152);

                auto g_xxyz_xxxxzzz = primBuffer.data(goff + 540 * idx + 153);

                auto g_xxyz_xxxyyyy = primBuffer.data(goff + 540 * idx + 154);

                auto g_xxyz_xxxyyyz = primBuffer.data(goff + 540 * idx + 155);

                auto g_xxyz_xxxyyzz = primBuffer.data(goff + 540 * idx + 156);

                auto g_xxyz_xxxyzzz = primBuffer.data(goff + 540 * idx + 157);

                auto g_xxyz_xxxzzzz = primBuffer.data(goff + 540 * idx + 158);

                auto g_xxyz_xxyyyyy = primBuffer.data(goff + 540 * idx + 159);

                auto g_xxyz_xxyyyyz = primBuffer.data(goff + 540 * idx + 160);

                auto g_xxyz_xxyyyzz = primBuffer.data(goff + 540 * idx + 161);

                auto g_xxyz_xxyyzzz = primBuffer.data(goff + 540 * idx + 162);

                auto g_xxyz_xxyzzzz = primBuffer.data(goff + 540 * idx + 163);

                auto g_xxyz_xxzzzzz = primBuffer.data(goff + 540 * idx + 164);

                auto g_xxyz_xyyyyyy = primBuffer.data(goff + 540 * idx + 165);

                auto g_xxyz_xyyyyyz = primBuffer.data(goff + 540 * idx + 166);

                auto g_xxyz_xyyyyzz = primBuffer.data(goff + 540 * idx + 167);

                auto g_xxyz_xyyyzzz = primBuffer.data(goff + 540 * idx + 168);

                auto g_xxyz_xyyzzzz = primBuffer.data(goff + 540 * idx + 169);

                auto g_xxyz_xyzzzzz = primBuffer.data(goff + 540 * idx + 170);

                auto g_xxyz_xzzzzzz = primBuffer.data(goff + 540 * idx + 171);

                auto g_xxyz_yyyyyyy = primBuffer.data(goff + 540 * idx + 172);

                auto g_xxyz_yyyyyyz = primBuffer.data(goff + 540 * idx + 173);

                auto g_xxyz_yyyyyzz = primBuffer.data(goff + 540 * idx + 174);

                auto g_xxyz_yyyyzzz = primBuffer.data(goff + 540 * idx + 175);

                auto g_xxyz_yyyzzzz = primBuffer.data(goff + 540 * idx + 176);

                auto g_xxyz_yyzzzzz = primBuffer.data(goff + 540 * idx + 177);

                auto g_xxyz_yzzzzzz = primBuffer.data(goff + 540 * idx + 178);

                auto g_xxyz_zzzzzzz = primBuffer.data(goff + 540 * idx + 179);

                auto g_xxzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 180);

                auto g_xxzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 181);

                auto g_xxzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 182);

                auto g_xxzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 183);

                auto g_xxzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 184);

                auto g_xxzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 185);

                auto g_xxzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 186);

                auto g_xxzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 187);

                auto g_xxzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 188);

                auto g_xxzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 189);

                auto g_xxzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 190);

                auto g_xxzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 191);

                auto g_xxzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 192);

                auto g_xxzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 193);

                auto g_xxzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 194);

                auto g_xxzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 195);

                auto g_xxzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 196);

                auto g_xxzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 197);

                auto g_xxzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 198);

                auto g_xxzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 199);

                auto g_xxzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 200);

                auto g_xxzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 201);

                auto g_xxzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 202);

                auto g_xxzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 203);

                auto g_xxzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 204);

                auto g_xxzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 205);

                auto g_xxzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 206);

                auto g_xxzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 207);

                auto g_xxzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 208);

                auto g_xxzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 209);

                auto g_xxzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 210);

                auto g_xxzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 211);

                auto g_xxzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 212);

                auto g_xxzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 213);

                auto g_xxzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 214);

                auto g_xxzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 215);

                auto g_xyyy_xxxxxxx = primBuffer.data(goff + 540 * idx + 216);

                auto g_xyyy_xxxxxxy = primBuffer.data(goff + 540 * idx + 217);

                auto g_xyyy_xxxxxxz = primBuffer.data(goff + 540 * idx + 218);

                auto g_xyyy_xxxxxyy = primBuffer.data(goff + 540 * idx + 219);

                auto g_xyyy_xxxxxyz = primBuffer.data(goff + 540 * idx + 220);

                auto g_xyyy_xxxxxzz = primBuffer.data(goff + 540 * idx + 221);

                auto g_xyyy_xxxxyyy = primBuffer.data(goff + 540 * idx + 222);

                auto g_xyyy_xxxxyyz = primBuffer.data(goff + 540 * idx + 223);

                auto g_xyyy_xxxxyzz = primBuffer.data(goff + 540 * idx + 224);

                auto g_xyyy_xxxxzzz = primBuffer.data(goff + 540 * idx + 225);

                auto g_xyyy_xxxyyyy = primBuffer.data(goff + 540 * idx + 226);

                auto g_xyyy_xxxyyyz = primBuffer.data(goff + 540 * idx + 227);

                auto g_xyyy_xxxyyzz = primBuffer.data(goff + 540 * idx + 228);

                auto g_xyyy_xxxyzzz = primBuffer.data(goff + 540 * idx + 229);

                auto g_xyyy_xxxzzzz = primBuffer.data(goff + 540 * idx + 230);

                auto g_xyyy_xxyyyyy = primBuffer.data(goff + 540 * idx + 231);

                auto g_xyyy_xxyyyyz = primBuffer.data(goff + 540 * idx + 232);

                auto g_xyyy_xxyyyzz = primBuffer.data(goff + 540 * idx + 233);

                auto g_xyyy_xxyyzzz = primBuffer.data(goff + 540 * idx + 234);

                auto g_xyyy_xxyzzzz = primBuffer.data(goff + 540 * idx + 235);

                auto g_xyyy_xxzzzzz = primBuffer.data(goff + 540 * idx + 236);

                auto g_xyyy_xyyyyyy = primBuffer.data(goff + 540 * idx + 237);

                auto g_xyyy_xyyyyyz = primBuffer.data(goff + 540 * idx + 238);

                auto g_xyyy_xyyyyzz = primBuffer.data(goff + 540 * idx + 239);

                auto g_xyyy_xyyyzzz = primBuffer.data(goff + 540 * idx + 240);

                auto g_xyyy_xyyzzzz = primBuffer.data(goff + 540 * idx + 241);

                auto g_xyyy_xyzzzzz = primBuffer.data(goff + 540 * idx + 242);

                auto g_xyyy_xzzzzzz = primBuffer.data(goff + 540 * idx + 243);

                auto g_xyyy_yyyyyyy = primBuffer.data(goff + 540 * idx + 244);

                auto g_xyyy_yyyyyyz = primBuffer.data(goff + 540 * idx + 245);

                auto g_xyyy_yyyyyzz = primBuffer.data(goff + 540 * idx + 246);

                auto g_xyyy_yyyyzzz = primBuffer.data(goff + 540 * idx + 247);

                auto g_xyyy_yyyzzzz = primBuffer.data(goff + 540 * idx + 248);

                auto g_xyyy_yyzzzzz = primBuffer.data(goff + 540 * idx + 249);

                auto g_xyyy_yzzzzzz = primBuffer.data(goff + 540 * idx + 250);

                auto g_xyyy_zzzzzzz = primBuffer.data(goff + 540 * idx + 251);

                auto g_xyyz_xxxxxxx = primBuffer.data(goff + 540 * idx + 252);

                auto g_xyyz_xxxxxxy = primBuffer.data(goff + 540 * idx + 253);

                auto g_xyyz_xxxxxxz = primBuffer.data(goff + 540 * idx + 254);

                auto g_xyyz_xxxxxyy = primBuffer.data(goff + 540 * idx + 255);

                auto g_xyyz_xxxxxyz = primBuffer.data(goff + 540 * idx + 256);

                auto g_xyyz_xxxxxzz = primBuffer.data(goff + 540 * idx + 257);

                auto g_xyyz_xxxxyyy = primBuffer.data(goff + 540 * idx + 258);

                auto g_xyyz_xxxxyyz = primBuffer.data(goff + 540 * idx + 259);

                auto g_xyyz_xxxxyzz = primBuffer.data(goff + 540 * idx + 260);

                auto g_xyyz_xxxxzzz = primBuffer.data(goff + 540 * idx + 261);

                auto g_xyyz_xxxyyyy = primBuffer.data(goff + 540 * idx + 262);

                auto g_xyyz_xxxyyyz = primBuffer.data(goff + 540 * idx + 263);

                auto g_xyyz_xxxyyzz = primBuffer.data(goff + 540 * idx + 264);

                auto g_xyyz_xxxyzzz = primBuffer.data(goff + 540 * idx + 265);

                auto g_xyyz_xxxzzzz = primBuffer.data(goff + 540 * idx + 266);

                auto g_xyyz_xxyyyyy = primBuffer.data(goff + 540 * idx + 267);

                auto g_xyyz_xxyyyyz = primBuffer.data(goff + 540 * idx + 268);

                auto g_xyyz_xxyyyzz = primBuffer.data(goff + 540 * idx + 269);

                auto g_xyyz_xxyyzzz = primBuffer.data(goff + 540 * idx + 270);

                auto g_xyyz_xxyzzzz = primBuffer.data(goff + 540 * idx + 271);

                auto g_xyyz_xxzzzzz = primBuffer.data(goff + 540 * idx + 272);

                auto g_xyyz_xyyyyyy = primBuffer.data(goff + 540 * idx + 273);

                auto g_xyyz_xyyyyyz = primBuffer.data(goff + 540 * idx + 274);

                auto g_xyyz_xyyyyzz = primBuffer.data(goff + 540 * idx + 275);

                auto g_xyyz_xyyyzzz = primBuffer.data(goff + 540 * idx + 276);

                auto g_xyyz_xyyzzzz = primBuffer.data(goff + 540 * idx + 277);

                auto g_xyyz_xyzzzzz = primBuffer.data(goff + 540 * idx + 278);

                auto g_xyyz_xzzzzzz = primBuffer.data(goff + 540 * idx + 279);

                auto g_xyyz_yyyyyyy = primBuffer.data(goff + 540 * idx + 280);

                auto g_xyyz_yyyyyyz = primBuffer.data(goff + 540 * idx + 281);

                auto g_xyyz_yyyyyzz = primBuffer.data(goff + 540 * idx + 282);

                auto g_xyyz_yyyyzzz = primBuffer.data(goff + 540 * idx + 283);

                auto g_xyyz_yyyzzzz = primBuffer.data(goff + 540 * idx + 284);

                auto g_xyyz_yyzzzzz = primBuffer.data(goff + 540 * idx + 285);

                auto g_xyyz_yzzzzzz = primBuffer.data(goff + 540 * idx + 286);

                auto g_xyyz_zzzzzzz = primBuffer.data(goff + 540 * idx + 287);

                auto g_xyzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 288);

                auto g_xyzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 289);

                auto g_xyzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 290);

                auto g_xyzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 291);

                auto g_xyzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 292);

                auto g_xyzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 293);

                auto g_xyzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 294);

                auto g_xyzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 295);

                auto g_xyzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 296);

                auto g_xyzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 297);

                auto g_xyzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 298);

                auto g_xyzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 299);

                auto g_xyzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 300);

                auto g_xyzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 301);

                auto g_xyzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 302);

                auto g_xyzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 303);

                auto g_xyzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 304);

                auto g_xyzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 305);

                auto g_xyzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 306);

                auto g_xyzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 307);

                auto g_xyzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 308);

                auto g_xyzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 309);

                auto g_xyzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 310);

                auto g_xyzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 311);

                auto g_xyzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 312);

                auto g_xyzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 313);

                auto g_xyzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 314);

                auto g_xyzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 315);

                auto g_xyzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 316);

                auto g_xyzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 317);

                auto g_xyzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 318);

                auto g_xyzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 319);

                auto g_xyzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 320);

                auto g_xyzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 321);

                auto g_xyzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 322);

                auto g_xyzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 323);

                auto g_xzzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 324);

                auto g_xzzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 325);

                auto g_xzzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 326);

                auto g_xzzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 327);

                auto g_xzzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 328);

                auto g_xzzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 329);

                auto g_xzzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 330);

                auto g_xzzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 331);

                auto g_xzzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 332);

                auto g_xzzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 333);

                auto g_xzzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 334);

                auto g_xzzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 335);

                auto g_xzzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 336);

                auto g_xzzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 337);

                auto g_xzzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 338);

                auto g_xzzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 339);

                auto g_xzzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 340);

                auto g_xzzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 341);

                auto g_xzzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 342);

                auto g_xzzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 343);

                auto g_xzzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 344);

                auto g_xzzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 345);

                auto g_xzzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 346);

                auto g_xzzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 347);

                auto g_xzzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 348);

                auto g_xzzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 349);

                auto g_xzzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 350);

                auto g_xzzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 351);

                auto g_xzzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 352);

                auto g_xzzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 353);

                auto g_xzzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 354);

                auto g_xzzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 355);

                auto g_xzzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 356);

                auto g_xzzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 357);

                auto g_xzzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 358);

                auto g_xzzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 359);

                auto g_yyyy_xxxxxxx = primBuffer.data(goff + 540 * idx + 360);

                auto g_yyyy_xxxxxxy = primBuffer.data(goff + 540 * idx + 361);

                auto g_yyyy_xxxxxxz = primBuffer.data(goff + 540 * idx + 362);

                auto g_yyyy_xxxxxyy = primBuffer.data(goff + 540 * idx + 363);

                auto g_yyyy_xxxxxyz = primBuffer.data(goff + 540 * idx + 364);

                auto g_yyyy_xxxxxzz = primBuffer.data(goff + 540 * idx + 365);

                auto g_yyyy_xxxxyyy = primBuffer.data(goff + 540 * idx + 366);

                auto g_yyyy_xxxxyyz = primBuffer.data(goff + 540 * idx + 367);

                auto g_yyyy_xxxxyzz = primBuffer.data(goff + 540 * idx + 368);

                auto g_yyyy_xxxxzzz = primBuffer.data(goff + 540 * idx + 369);

                auto g_yyyy_xxxyyyy = primBuffer.data(goff + 540 * idx + 370);

                auto g_yyyy_xxxyyyz = primBuffer.data(goff + 540 * idx + 371);

                auto g_yyyy_xxxyyzz = primBuffer.data(goff + 540 * idx + 372);

                auto g_yyyy_xxxyzzz = primBuffer.data(goff + 540 * idx + 373);

                auto g_yyyy_xxxzzzz = primBuffer.data(goff + 540 * idx + 374);

                auto g_yyyy_xxyyyyy = primBuffer.data(goff + 540 * idx + 375);

                auto g_yyyy_xxyyyyz = primBuffer.data(goff + 540 * idx + 376);

                auto g_yyyy_xxyyyzz = primBuffer.data(goff + 540 * idx + 377);

                auto g_yyyy_xxyyzzz = primBuffer.data(goff + 540 * idx + 378);

                auto g_yyyy_xxyzzzz = primBuffer.data(goff + 540 * idx + 379);

                auto g_yyyy_xxzzzzz = primBuffer.data(goff + 540 * idx + 380);

                auto g_yyyy_xyyyyyy = primBuffer.data(goff + 540 * idx + 381);

                auto g_yyyy_xyyyyyz = primBuffer.data(goff + 540 * idx + 382);

                auto g_yyyy_xyyyyzz = primBuffer.data(goff + 540 * idx + 383);

                auto g_yyyy_xyyyzzz = primBuffer.data(goff + 540 * idx + 384);

                auto g_yyyy_xyyzzzz = primBuffer.data(goff + 540 * idx + 385);

                auto g_yyyy_xyzzzzz = primBuffer.data(goff + 540 * idx + 386);

                auto g_yyyy_xzzzzzz = primBuffer.data(goff + 540 * idx + 387);

                auto g_yyyy_yyyyyyy = primBuffer.data(goff + 540 * idx + 388);

                auto g_yyyy_yyyyyyz = primBuffer.data(goff + 540 * idx + 389);

                auto g_yyyy_yyyyyzz = primBuffer.data(goff + 540 * idx + 390);

                auto g_yyyy_yyyyzzz = primBuffer.data(goff + 540 * idx + 391);

                auto g_yyyy_yyyzzzz = primBuffer.data(goff + 540 * idx + 392);

                auto g_yyyy_yyzzzzz = primBuffer.data(goff + 540 * idx + 393);

                auto g_yyyy_yzzzzzz = primBuffer.data(goff + 540 * idx + 394);

                auto g_yyyy_zzzzzzz = primBuffer.data(goff + 540 * idx + 395);

                auto g_yyyz_xxxxxxx = primBuffer.data(goff + 540 * idx + 396);

                auto g_yyyz_xxxxxxy = primBuffer.data(goff + 540 * idx + 397);

                auto g_yyyz_xxxxxxz = primBuffer.data(goff + 540 * idx + 398);

                auto g_yyyz_xxxxxyy = primBuffer.data(goff + 540 * idx + 399);

                auto g_yyyz_xxxxxyz = primBuffer.data(goff + 540 * idx + 400);

                auto g_yyyz_xxxxxzz = primBuffer.data(goff + 540 * idx + 401);

                auto g_yyyz_xxxxyyy = primBuffer.data(goff + 540 * idx + 402);

                auto g_yyyz_xxxxyyz = primBuffer.data(goff + 540 * idx + 403);

                auto g_yyyz_xxxxyzz = primBuffer.data(goff + 540 * idx + 404);

                auto g_yyyz_xxxxzzz = primBuffer.data(goff + 540 * idx + 405);

                auto g_yyyz_xxxyyyy = primBuffer.data(goff + 540 * idx + 406);

                auto g_yyyz_xxxyyyz = primBuffer.data(goff + 540 * idx + 407);

                auto g_yyyz_xxxyyzz = primBuffer.data(goff + 540 * idx + 408);

                auto g_yyyz_xxxyzzz = primBuffer.data(goff + 540 * idx + 409);

                auto g_yyyz_xxxzzzz = primBuffer.data(goff + 540 * idx + 410);

                auto g_yyyz_xxyyyyy = primBuffer.data(goff + 540 * idx + 411);

                auto g_yyyz_xxyyyyz = primBuffer.data(goff + 540 * idx + 412);

                auto g_yyyz_xxyyyzz = primBuffer.data(goff + 540 * idx + 413);

                auto g_yyyz_xxyyzzz = primBuffer.data(goff + 540 * idx + 414);

                auto g_yyyz_xxyzzzz = primBuffer.data(goff + 540 * idx + 415);

                auto g_yyyz_xxzzzzz = primBuffer.data(goff + 540 * idx + 416);

                auto g_yyyz_xyyyyyy = primBuffer.data(goff + 540 * idx + 417);

                auto g_yyyz_xyyyyyz = primBuffer.data(goff + 540 * idx + 418);

                auto g_yyyz_xyyyyzz = primBuffer.data(goff + 540 * idx + 419);

                auto g_yyyz_xyyyzzz = primBuffer.data(goff + 540 * idx + 420);

                auto g_yyyz_xyyzzzz = primBuffer.data(goff + 540 * idx + 421);

                auto g_yyyz_xyzzzzz = primBuffer.data(goff + 540 * idx + 422);

                auto g_yyyz_xzzzzzz = primBuffer.data(goff + 540 * idx + 423);

                auto g_yyyz_yyyyyyy = primBuffer.data(goff + 540 * idx + 424);

                auto g_yyyz_yyyyyyz = primBuffer.data(goff + 540 * idx + 425);

                auto g_yyyz_yyyyyzz = primBuffer.data(goff + 540 * idx + 426);

                auto g_yyyz_yyyyzzz = primBuffer.data(goff + 540 * idx + 427);

                auto g_yyyz_yyyzzzz = primBuffer.data(goff + 540 * idx + 428);

                auto g_yyyz_yyzzzzz = primBuffer.data(goff + 540 * idx + 429);

                auto g_yyyz_yzzzzzz = primBuffer.data(goff + 540 * idx + 430);

                auto g_yyyz_zzzzzzz = primBuffer.data(goff + 540 * idx + 431);

                auto g_yyzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 432);

                auto g_yyzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 433);

                auto g_yyzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 434);

                auto g_yyzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 435);

                auto g_yyzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 436);

                auto g_yyzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 437);

                auto g_yyzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 438);

                auto g_yyzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 439);

                auto g_yyzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 440);

                auto g_yyzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 441);

                auto g_yyzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 442);

                auto g_yyzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 443);

                auto g_yyzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 444);

                auto g_yyzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 445);

                auto g_yyzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 446);

                auto g_yyzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 447);

                auto g_yyzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 448);

                auto g_yyzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 449);

                auto g_yyzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 450);

                auto g_yyzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 451);

                auto g_yyzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 452);

                auto g_yyzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 453);

                auto g_yyzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 454);

                auto g_yyzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 455);

                auto g_yyzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 456);

                auto g_yyzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 457);

                auto g_yyzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 458);

                auto g_yyzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 459);

                auto g_yyzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 460);

                auto g_yyzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 461);

                auto g_yyzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 462);

                auto g_yyzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 463);

                auto g_yyzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 464);

                auto g_yyzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 465);

                auto g_yyzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 466);

                auto g_yyzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 467);

                auto g_yzzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 468);

                auto g_yzzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 469);

                auto g_yzzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 470);

                auto g_yzzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 471);

                auto g_yzzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 472);

                auto g_yzzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 473);

                auto g_yzzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 474);

                auto g_yzzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 475);

                auto g_yzzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 476);

                auto g_yzzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 477);

                auto g_yzzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 478);

                auto g_yzzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 479);

                auto g_yzzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 480);

                auto g_yzzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 481);

                auto g_yzzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 482);

                auto g_yzzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 483);

                auto g_yzzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 484);

                auto g_yzzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 485);

                auto g_yzzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 486);

                auto g_yzzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 487);

                auto g_yzzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 488);

                auto g_yzzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 489);

                auto g_yzzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 490);

                auto g_yzzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 491);

                auto g_yzzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 492);

                auto g_yzzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 493);

                auto g_yzzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 494);

                auto g_yzzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 495);

                auto g_yzzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 496);

                auto g_yzzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 497);

                auto g_yzzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 498);

                auto g_yzzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 499);

                auto g_yzzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 500);

                auto g_yzzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 501);

                auto g_yzzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 502);

                auto g_yzzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 503);

                auto g_zzzz_xxxxxxx = primBuffer.data(goff + 540 * idx + 504);

                auto g_zzzz_xxxxxxy = primBuffer.data(goff + 540 * idx + 505);

                auto g_zzzz_xxxxxxz = primBuffer.data(goff + 540 * idx + 506);

                auto g_zzzz_xxxxxyy = primBuffer.data(goff + 540 * idx + 507);

                auto g_zzzz_xxxxxyz = primBuffer.data(goff + 540 * idx + 508);

                auto g_zzzz_xxxxxzz = primBuffer.data(goff + 540 * idx + 509);

                auto g_zzzz_xxxxyyy = primBuffer.data(goff + 540 * idx + 510);

                auto g_zzzz_xxxxyyz = primBuffer.data(goff + 540 * idx + 511);

                auto g_zzzz_xxxxyzz = primBuffer.data(goff + 540 * idx + 512);

                auto g_zzzz_xxxxzzz = primBuffer.data(goff + 540 * idx + 513);

                auto g_zzzz_xxxyyyy = primBuffer.data(goff + 540 * idx + 514);

                auto g_zzzz_xxxyyyz = primBuffer.data(goff + 540 * idx + 515);

                auto g_zzzz_xxxyyzz = primBuffer.data(goff + 540 * idx + 516);

                auto g_zzzz_xxxyzzz = primBuffer.data(goff + 540 * idx + 517);

                auto g_zzzz_xxxzzzz = primBuffer.data(goff + 540 * idx + 518);

                auto g_zzzz_xxyyyyy = primBuffer.data(goff + 540 * idx + 519);

                auto g_zzzz_xxyyyyz = primBuffer.data(goff + 540 * idx + 520);

                auto g_zzzz_xxyyyzz = primBuffer.data(goff + 540 * idx + 521);

                auto g_zzzz_xxyyzzz = primBuffer.data(goff + 540 * idx + 522);

                auto g_zzzz_xxyzzzz = primBuffer.data(goff + 540 * idx + 523);

                auto g_zzzz_xxzzzzz = primBuffer.data(goff + 540 * idx + 524);

                auto g_zzzz_xyyyyyy = primBuffer.data(goff + 540 * idx + 525);

                auto g_zzzz_xyyyyyz = primBuffer.data(goff + 540 * idx + 526);

                auto g_zzzz_xyyyyzz = primBuffer.data(goff + 540 * idx + 527);

                auto g_zzzz_xyyyzzz = primBuffer.data(goff + 540 * idx + 528);

                auto g_zzzz_xyyzzzz = primBuffer.data(goff + 540 * idx + 529);

                auto g_zzzz_xyzzzzz = primBuffer.data(goff + 540 * idx + 530);

                auto g_zzzz_xzzzzzz = primBuffer.data(goff + 540 * idx + 531);

                auto g_zzzz_yyyyyyy = primBuffer.data(goff + 540 * idx + 532);

                auto g_zzzz_yyyyyyz = primBuffer.data(goff + 540 * idx + 533);

                auto g_zzzz_yyyyyzz = primBuffer.data(goff + 540 * idx + 534);

                auto g_zzzz_yyyyzzz = primBuffer.data(goff + 540 * idx + 535);

                auto g_zzzz_yyyzzzz = primBuffer.data(goff + 540 * idx + 536);

                auto g_zzzz_yyzzzzz = primBuffer.data(goff + 540 * idx + 537);

                auto g_zzzz_yzzzzzz = primBuffer.data(goff + 540 * idx + 538);

                auto g_zzzz_zzzzzzz = primBuffer.data(goff + 540 * idx + 539);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xxxxxx,\
                                         gk_xxx_xxxxxy, gk_xxx_xxxxxz, gk_xxx_xxxxyy,\
                                         gk_xxx_xxxxyz, gk_xxx_xxxxzz, gk_xxx_xxxyyy,\
                                         gk_xxx_xxxyyz, gk_xxx_xxxyzz, gk_xxx_xxxzzz,\
                                         gk_xxx_xxyyyy, gk_xxx_xxyyyz, gk_xxx_xxyyzz,\
                                         gk_xxx_xxyzzz, gk_xxx_xxzzzz, gk_xxx_xyyyyy,\
                                         gk_xxx_xyyyyz, gk_xxx_xyyyzz, gk_xxx_xyyzzz,\
                                         gk_xxx_xyzzzz, gk_xxx_xzzzzz, gk_xxx_yyyyyy,\
                                         gk_xxx_yyyyyz, gk_xxx_yyyyzz, gk_xxx_yyyzzz,\
                                         gk_xxx_yyzzzz, gk_xxx_yzzzzz, gk_xxx_zzzzzz,\
                                         gk_xxy_xxxxxx, gk_xxy_xxxxxy, gk_xxy_xxxxxz,\
                                         gk_xxy_xxxxyy, gk_xxy_xxxxyz, gk_xxy_xxxxzz,\
                                         gk_xxy_xxxyyy, gk_xxy_xxxyyz, gk_xxy_xxxyzz,\
                                         gk_xxy_xxxzzz, gk_xxy_xxyyyy, gk_xxy_xxyyyz,\
                                         gk_xxy_xxyyzz, gk_xxy_xxyzzz, gk_xxy_xxzzzz,\
                                         gk_xxy_xyyyyy, gk_xxy_xyyyyz, gk_xxy_xyyyzz,\
                                         gk_xxy_xyyzzz, gk_xxy_xyzzzz, gk_xxy_xzzzzz,\
                                         gk_xxy_yyyyyy, gk_xxy_yyyyyz, gk_xxy_yyyyzz,\
                                         gk_xxy_yyyzzz, gk_xxy_yyzzzz, gk_xxy_yzzzzz,\
                                         gk_xxy_zzzzzz, gk_xxz_xxxxxx, gk_xxz_xxxxxy,\
                                         gk_xxz_xxxxxz, gk_xxz_xxxxyy, gk_xxz_xxxxyz,\
                                         gk_xxz_xxxxzz, gk_xxz_xxxyyy, gk_xxz_xxxyyz,\
                                         gk_xxz_xxxyzz, gk_xxz_xxxzzz, gk_xxz_xxyyyy,\
                                         gk_xxz_xxyyyz, gk_xxz_xxyyzz, gk_xxz_xxyzzz,\
                                         gk_xxz_xxzzzz, gk_xxz_xyyyyy, gk_xxz_xyyyyz,\
                                         gk_xxz_xyyyzz, gk_xxz_xyyzzz, gk_xxz_xyzzzz,\
                                         gk_xxz_xzzzzz, gk_xxz_yyyyyy, gk_xxz_yyyyyz,\
                                         gk_xxz_yyyyzz, gk_xxz_yyyzzz, gk_xxz_yyzzzz,\
                                         gk_xxz_yzzzzz, gk_xxz_zzzzzz, gk_xyy_xxxxxx,\
                                         gk_xyy_xxxxxy, gk_xyy_xxxxxz, gk_xyy_xxxxyy,\
                                         gk_xyy_xxxxyz, gk_xyy_xxxxzz, gk_xyy_xxxyyy,\
                                         gk_xyy_xxxyyz, gk_xyy_xxxyzz, gk_xyy_xxxzzz,\
                                         gk_xyy_xxyyyy, gk_xyy_xxyyyz, gk_xyy_xxyyzz,\
                                         gk_xyy_xxyzzz, gk_xyy_xxzzzz, gk_xyy_xyyyyy,\
                                         gk_xyy_xyyyyz, gk_xyy_xyyyzz, gk_xyy_xyyzzz,\
                                         gk_xyy_xyzzzz, gk_xyy_xzzzzz, gk_xyy_yyyyyy,\
                                         gk_xyy_yyyyyz, gk_xyy_yyyyzz, gk_xyy_yyyzzz,\
                                         gk_xyy_yyzzzz, gk_xyy_yzzzzz, gk_xyy_zzzzzz,\
                                         gk_xyz_xxxxxx, gk_xyz_xxxxxy, gk_xyz_xxxxxz,\
                                         gk_xyz_xxxxyy, gk_xyz_xxxxyz, gk_xyz_xxxxzz,\
                                         gk_xyz_xxxyyy, gk_xyz_xxxyyz, gk_xyz_xxxyzz,\
                                         gk_xyz_xxxzzz, gk_xyz_xxyyyy, gk_xyz_xxyyyz,\
                                         gk_xyz_xxyyzz, gk_xyz_xxyzzz, gk_xyz_xxzzzz,\
                                         gk_xyz_xyyyyy, gk_xyz_xyyyyz, gk_xyz_xyyyzz,\
                                         gk_xyz_xyyzzz, gk_xyz_xyzzzz, gk_xyz_xzzzzz,\
                                         gk_xyz_yyyyyy, gk_xyz_yyyyyz, gk_xyz_yyyyzz,\
                                         gk_xyz_yyyzzz, gk_xyz_yyzzzz, gk_xyz_yzzzzz,\
                                         gk_xyz_zzzzzz, gk_xzz_xxxxxx, gk_xzz_xxxxxy,\
                                         gk_xzz_xxxxxz, gk_xzz_xxxxyy, gk_xzz_xxxxyz,\
                                         gk_xzz_xxxxzz, gk_xzz_xxxyyy, gk_xzz_xxxyyz,\
                                         gk_xzz_xxxyzz, gk_xzz_xxxzzz, gk_xzz_xxyyyy,\
                                         gk_xzz_xxyyyz, gk_xzz_xxyyzz, gk_xzz_xxyzzz,\
                                         gk_xzz_xxzzzz, gk_xzz_xyyyyy, gk_xzz_xyyyyz,\
                                         gk_xzz_xyyyzz, gk_xzz_xyyzzz, gk_xzz_xyzzzz,\
                                         gk_xzz_xzzzzz, gk_xzz_yyyyyy, gk_xzz_yyyyyz,\
                                         gk_xzz_yyyyzz, gk_xzz_yyyzzz, gk_xzz_yyzzzz,\
                                         gk_xzz_yzzzzz, gk_xzz_zzzzzz, gk_yyy_xxxxxx,\
                                         gk_yyy_xxxxxy, gk_yyy_xxxxxz, gk_yyy_xxxxyy,\
                                         gk_yyy_xxxxyz, gk_yyy_xxxxzz, gk_yyy_xxxyyy,\
                                         gk_yyy_xxxyyz, gk_yyy_xxxyzz, gk_yyy_xxxzzz,\
                                         gk_yyy_xxyyyy, gk_yyy_xxyyyz, gk_yyy_xxyyzz,\
                                         gk_yyy_xxyzzz, gk_yyy_xxzzzz, gk_yyy_xyyyyy,\
                                         gk_yyy_xyyyyz, gk_yyy_xyyyzz, gk_yyy_xyyzzz,\
                                         gk_yyy_xyzzzz, gk_yyy_xzzzzz, gk_yyy_yyyyyy,\
                                         gk_yyy_yyyyyz, gk_yyy_yyyyzz, gk_yyy_yyyzzz,\
                                         gk_yyy_yyzzzz, gk_yyy_yzzzzz, gk_yyy_zzzzzz,\
                                         gk_yyz_xxxxxx, gk_yyz_xxxxxy, gk_yyz_xxxxxz,\
                                         gk_yyz_xxxxyy, gk_yyz_xxxxyz, gk_yyz_xxxxzz,\
                                         gk_yyz_xxxyyy, gk_yyz_xxxyyz, gk_yyz_xxxyzz,\
                                         gk_yyz_xxxzzz, gk_yyz_xxyyyy, gk_yyz_xxyyyz,\
                                         gk_yyz_xxyyzz, gk_yyz_xxyzzz, gk_yyz_xxzzzz,\
                                         gk_yyz_xyyyyy, gk_yyz_xyyyyz, gk_yyz_xyyyzz,\
                                         gk_yyz_xyyzzz, gk_yyz_xyzzzz, gk_yyz_xzzzzz,\
                                         gk_yyz_yyyyyy, gk_yyz_yyyyyz, gk_yyz_yyyyzz,\
                                         gk_yyz_yyyzzz, gk_yyz_yyzzzz, gk_yyz_yzzzzz,\
                                         gk_yyz_zzzzzz, gk_yzz_xxxxxx, gk_yzz_xxxxxy,\
                                         gk_yzz_xxxxxz, gk_yzz_xxxxyy, gk_yzz_xxxxyz,\
                                         gk_yzz_xxxxzz, gk_yzz_xxxyyy, gk_yzz_xxxyyz,\
                                         gk_yzz_xxxyzz, gk_yzz_xxxzzz, gk_yzz_xxyyyy,\
                                         gk_yzz_xxyyyz, gk_yzz_xxyyzz, gk_yzz_xxyzzz,\
                                         gk_yzz_xxzzzz, gk_yzz_xyyyyy, gk_yzz_xyyyyz,\
                                         gk_yzz_xyyyzz, gk_yzz_xyyzzz, gk_yzz_xyzzzz,\
                                         gk_yzz_xzzzzz, gk_yzz_yyyyyy, gk_yzz_yyyyyz,\
                                         gk_yzz_yyyyzz, gk_yzz_yyyzzz, gk_yzz_yyzzzz,\
                                         gk_yzz_yzzzzz, gk_yzz_zzzzzz, gk_zzz_xxxxxx,\
                                         gk_zzz_xxxxxy, gk_zzz_xxxxxz, gk_zzz_xxxxyy,\
                                         gk_zzz_xxxxyz, gk_zzz_xxxxzz, gk_zzz_xxxyyy,\
                                         gk_zzz_xxxyyz, gk_zzz_xxxyzz, gk_zzz_xxxzzz,\
                                         gk_zzz_xxyyyy, gk_zzz_xxyyyz, gk_zzz_xxyyzz,\
                                         gk_zzz_xxyzzz, gk_zzz_xxzzzz, gk_zzz_xyyyyy,\
                                         gk_zzz_xyyyyz, gk_zzz_xyyyzz, gk_zzz_xyyzzz,\
                                         gk_zzz_xyzzzz, gk_zzz_xzzzzz, gk_zzz_yyyyyy,\
                                         gk_zzz_yyyyyz, gk_zzz_yyyyzz, gk_zzz_yyyzzz,\
                                         gk_zzz_yyzzzz, gk_zzz_yzzzzz, gk_zzz_zzzzzz,\
                                         g20_xx_xxxxxxx, g20_xx_xxxxxxy, g20_xx_xxxxxxz,\
                                         g20_xx_xxxxxyy, g20_xx_xxxxxyz, g20_xx_xxxxxzz,\
                                         g20_xx_xxxxyyy, g20_xx_xxxxyyz, g20_xx_xxxxyzz,\
                                         g20_xx_xxxxzzz, g20_xx_xxxyyyy, g20_xx_xxxyyyz,\
                                         g20_xx_xxxyyzz, g20_xx_xxxyzzz, g20_xx_xxxzzzz,\
                                         g20_xx_xxyyyyy, g20_xx_xxyyyyz, g20_xx_xxyyyzz,\
                                         g20_xx_xxyyzzz, g20_xx_xxyzzzz, g20_xx_xxzzzzz,\
                                         g20_xx_xyyyyyy, g20_xx_xyyyyyz, g20_xx_xyyyyzz,\
                                         g20_xx_xyyyzzz, g20_xx_xyyzzzz, g20_xx_xyzzzzz,\
                                         g20_xx_xzzzzzz, g20_xx_yyyyyyy, g20_xx_yyyyyyz,\
                                         g20_xx_yyyyyzz, g20_xx_yyyyzzz, g20_xx_yyyzzzz,\
                                         g20_xx_yyzzzzz, g20_xx_yzzzzzz, g20_xx_zzzzzzz,\
                                         g20_xy_xxxxxxx, g20_xy_xxxxxxy, g20_xy_xxxxxxz,\
                                         g20_xy_xxxxxyy, g20_xy_xxxxxyz, g20_xy_xxxxxzz,\
                                         g20_xy_xxxxyyy, g20_xy_xxxxyyz, g20_xy_xxxxyzz,\
                                         g20_xy_xxxxzzz, g20_xy_xxxyyyy, g20_xy_xxxyyyz,\
                                         g20_xy_xxxyyzz, g20_xy_xxxyzzz, g20_xy_xxxzzzz,\
                                         g20_xy_xxyyyyy, g20_xy_xxyyyyz, g20_xy_xxyyyzz,\
                                         g20_xy_xxyyzzz, g20_xy_xxyzzzz, g20_xy_xxzzzzz,\
                                         g20_xy_xyyyyyy, g20_xy_xyyyyyz, g20_xy_xyyyyzz,\
                                         g20_xy_xyyyzzz, g20_xy_xyyzzzz, g20_xy_xyzzzzz,\
                                         g20_xy_xzzzzzz, g20_xy_yyyyyyy, g20_xy_yyyyyyz,\
                                         g20_xy_yyyyyzz, g20_xy_yyyyzzz, g20_xy_yyyzzzz,\
                                         g20_xy_yyzzzzz, g20_xy_yzzzzzz, g20_xy_zzzzzzz,\
                                         g20_xz_xxxxxxx, g20_xz_xxxxxxy, g20_xz_xxxxxxz,\
                                         g20_xz_xxxxxyy, g20_xz_xxxxxyz, g20_xz_xxxxxzz,\
                                         g20_xz_xxxxyyy, g20_xz_xxxxyyz, g20_xz_xxxxyzz,\
                                         g20_xz_xxxxzzz, g20_xz_xxxyyyy, g20_xz_xxxyyyz,\
                                         g20_xz_xxxyyzz, g20_xz_xxxyzzz, g20_xz_xxxzzzz,\
                                         g20_xz_xxyyyyy, g20_xz_xxyyyyz, g20_xz_xxyyyzz,\
                                         g20_xz_xxyyzzz, g20_xz_xxyzzzz, g20_xz_xxzzzzz,\
                                         g20_xz_xyyyyyy, g20_xz_xyyyyyz, g20_xz_xyyyyzz,\
                                         g20_xz_xyyyzzz, g20_xz_xyyzzzz, g20_xz_xyzzzzz,\
                                         g20_xz_xzzzzzz, g20_xz_yyyyyyy, g20_xz_yyyyyyz,\
                                         g20_xz_yyyyyzz, g20_xz_yyyyzzz, g20_xz_yyyzzzz,\
                                         g20_xz_yyzzzzz, g20_xz_yzzzzzz, g20_xz_zzzzzzz,\
                                         g20_yy_xxxxxxx, g20_yy_xxxxxxy, g20_yy_xxxxxxz,\
                                         g20_yy_xxxxxyy, g20_yy_xxxxxyz, g20_yy_xxxxxzz,\
                                         g20_yy_xxxxyyy, g20_yy_xxxxyyz, g20_yy_xxxxyzz,\
                                         g20_yy_xxxxzzz, g20_yy_xxxyyyy, g20_yy_xxxyyyz,\
                                         g20_yy_xxxyyzz, g20_yy_xxxyzzz, g20_yy_xxxzzzz,\
                                         g20_yy_xxyyyyy, g20_yy_xxyyyyz, g20_yy_xxyyyzz,\
                                         g20_yy_xxyyzzz, g20_yy_xxyzzzz, g20_yy_xxzzzzz,\
                                         g20_yy_xyyyyyy, g20_yy_xyyyyyz, g20_yy_xyyyyzz,\
                                         g20_yy_xyyyzzz, g20_yy_xyyzzzz, g20_yy_xyzzzzz,\
                                         g20_yy_xzzzzzz, g20_yy_yyyyyyy, g20_yy_yyyyyyz,\
                                         g20_yy_yyyyyzz, g20_yy_yyyyzzz, g20_yy_yyyzzzz,\
                                         g20_yy_yyzzzzz, g20_yy_yzzzzzz, g20_yy_zzzzzzz,\
                                         g20_yz_xxxxxxx, g20_yz_xxxxxxy, g20_yz_xxxxxxz,\
                                         g20_yz_xxxxxyy, g20_yz_xxxxxyz, g20_yz_xxxxxzz,\
                                         g20_yz_xxxxyyy, g20_yz_xxxxyyz, g20_yz_xxxxyzz,\
                                         g20_yz_xxxxzzz, g20_yz_xxxyyyy, g20_yz_xxxyyyz,\
                                         g20_yz_xxxyyzz, g20_yz_xxxyzzz, g20_yz_xxxzzzz,\
                                         g20_yz_xxyyyyy, g20_yz_xxyyyyz, g20_yz_xxyyyzz,\
                                         g20_yz_xxyyzzz, g20_yz_xxyzzzz, g20_yz_xxzzzzz,\
                                         g20_yz_xyyyyyy, g20_yz_xyyyyyz, g20_yz_xyyyyzz,\
                                         g20_yz_xyyyzzz, g20_yz_xyyzzzz, g20_yz_xyzzzzz,\
                                         g20_yz_xzzzzzz, g20_yz_yyyyyyy, g20_yz_yyyyyyz,\
                                         g20_yz_yyyyyzz, g20_yz_yyyyzzz, g20_yz_yyyzzzz,\
                                         g20_yz_yyzzzzz, g20_yz_yzzzzzz, g20_yz_zzzzzzz,\
                                         g20_zz_xxxxxxx, g20_zz_xxxxxxy, g20_zz_xxxxxxz,\
                                         g20_zz_xxxxxyy, g20_zz_xxxxxyz, g20_zz_xxxxxzz,\
                                         g20_zz_xxxxyyy, g20_zz_xxxxyyz, g20_zz_xxxxyzz,\
                                         g20_zz_xxxxzzz, g20_zz_xxxyyyy, g20_zz_xxxyyyz,\
                                         g20_zz_xxxyyzz, g20_zz_xxxyzzz, g20_zz_xxxzzzz,\
                                         g20_zz_xxyyyyy, g20_zz_xxyyyyz, g20_zz_xxyyyzz,\
                                         g20_zz_xxyyzzz, g20_zz_xxyzzzz, g20_zz_xxzzzzz,\
                                         g20_zz_xyyyyyy, g20_zz_xyyyyyz, g20_zz_xyyyyzz,\
                                         g20_zz_xyyyzzz, g20_zz_xyyzzzz, g20_zz_xyzzzzz,\
                                         g20_zz_xzzzzzz, g20_zz_yyyyyyy, g20_zz_yyyyyyz,\
                                         g20_zz_yyyyyzz, g20_zz_yyyyzzz, g20_zz_yyyzzzz,\
                                         g20_zz_yyzzzzz, g20_zz_yzzzzzz, g20_zz_zzzzzzz,\
                                         g21_xx_xxxxxxx, g21_xx_xxxxxxy, g21_xx_xxxxxxz,\
                                         g21_xx_xxxxxyy, g21_xx_xxxxxyz, g21_xx_xxxxxzz,\
                                         g21_xx_xxxxyyy, g21_xx_xxxxyyz, g21_xx_xxxxyzz,\
                                         g21_xx_xxxxzzz, g21_xx_xxxyyyy, g21_xx_xxxyyyz,\
                                         g21_xx_xxxyyzz, g21_xx_xxxyzzz, g21_xx_xxxzzzz,\
                                         g21_xx_xxyyyyy, g21_xx_xxyyyyz, g21_xx_xxyyyzz,\
                                         g21_xx_xxyyzzz, g21_xx_xxyzzzz, g21_xx_xxzzzzz,\
                                         g21_xx_xyyyyyy, g21_xx_xyyyyyz, g21_xx_xyyyyzz,\
                                         g21_xx_xyyyzzz, g21_xx_xyyzzzz, g21_xx_xyzzzzz,\
                                         g21_xx_xzzzzzz, g21_xx_yyyyyyy, g21_xx_yyyyyyz,\
                                         g21_xx_yyyyyzz, g21_xx_yyyyzzz, g21_xx_yyyzzzz,\
                                         g21_xx_yyzzzzz, g21_xx_yzzzzzz, g21_xx_zzzzzzz,\
                                         g21_xy_xxxxxxx, g21_xy_xxxxxxy, g21_xy_xxxxxxz,\
                                         g21_xy_xxxxxyy, g21_xy_xxxxxyz, g21_xy_xxxxxzz,\
                                         g21_xy_xxxxyyy, g21_xy_xxxxyyz, g21_xy_xxxxyzz,\
                                         g21_xy_xxxxzzz, g21_xy_xxxyyyy, g21_xy_xxxyyyz,\
                                         g21_xy_xxxyyzz, g21_xy_xxxyzzz, g21_xy_xxxzzzz,\
                                         g21_xy_xxyyyyy, g21_xy_xxyyyyz, g21_xy_xxyyyzz,\
                                         g21_xy_xxyyzzz, g21_xy_xxyzzzz, g21_xy_xxzzzzz,\
                                         g21_xy_xyyyyyy, g21_xy_xyyyyyz, g21_xy_xyyyyzz,\
                                         g21_xy_xyyyzzz, g21_xy_xyyzzzz, g21_xy_xyzzzzz,\
                                         g21_xy_xzzzzzz, g21_xy_yyyyyyy, g21_xy_yyyyyyz,\
                                         g21_xy_yyyyyzz, g21_xy_yyyyzzz, g21_xy_yyyzzzz,\
                                         g21_xy_yyzzzzz, g21_xy_yzzzzzz, g21_xy_zzzzzzz,\
                                         g21_xz_xxxxxxx, g21_xz_xxxxxxy, g21_xz_xxxxxxz,\
                                         g21_xz_xxxxxyy, g21_xz_xxxxxyz, g21_xz_xxxxxzz,\
                                         g21_xz_xxxxyyy, g21_xz_xxxxyyz, g21_xz_xxxxyzz,\
                                         g21_xz_xxxxzzz, g21_xz_xxxyyyy, g21_xz_xxxyyyz,\
                                         g21_xz_xxxyyzz, g21_xz_xxxyzzz, g21_xz_xxxzzzz,\
                                         g21_xz_xxyyyyy, g21_xz_xxyyyyz, g21_xz_xxyyyzz,\
                                         g21_xz_xxyyzzz, g21_xz_xxyzzzz, g21_xz_xxzzzzz,\
                                         g21_xz_xyyyyyy, g21_xz_xyyyyyz, g21_xz_xyyyyzz,\
                                         g21_xz_xyyyzzz, g21_xz_xyyzzzz, g21_xz_xyzzzzz,\
                                         g21_xz_xzzzzzz, g21_xz_yyyyyyy, g21_xz_yyyyyyz,\
                                         g21_xz_yyyyyzz, g21_xz_yyyyzzz, g21_xz_yyyzzzz,\
                                         g21_xz_yyzzzzz, g21_xz_yzzzzzz, g21_xz_zzzzzzz,\
                                         g21_yy_xxxxxxx, g21_yy_xxxxxxy, g21_yy_xxxxxxz,\
                                         g21_yy_xxxxxyy, g21_yy_xxxxxyz, g21_yy_xxxxxzz,\
                                         g21_yy_xxxxyyy, g21_yy_xxxxyyz, g21_yy_xxxxyzz,\
                                         g21_yy_xxxxzzz, g21_yy_xxxyyyy, g21_yy_xxxyyyz,\
                                         g21_yy_xxxyyzz, g21_yy_xxxyzzz, g21_yy_xxxzzzz,\
                                         g21_yy_xxyyyyy, g21_yy_xxyyyyz, g21_yy_xxyyyzz,\
                                         g21_yy_xxyyzzz, g21_yy_xxyzzzz, g21_yy_xxzzzzz,\
                                         g21_yy_xyyyyyy, g21_yy_xyyyyyz, g21_yy_xyyyyzz,\
                                         g21_yy_xyyyzzz, g21_yy_xyyzzzz, g21_yy_xyzzzzz,\
                                         g21_yy_xzzzzzz, g21_yy_yyyyyyy, g21_yy_yyyyyyz,\
                                         g21_yy_yyyyyzz, g21_yy_yyyyzzz, g21_yy_yyyzzzz,\
                                         g21_yy_yyzzzzz, g21_yy_yzzzzzz, g21_yy_zzzzzzz,\
                                         g21_yz_xxxxxxx, g21_yz_xxxxxxy, g21_yz_xxxxxxz,\
                                         g21_yz_xxxxxyy, g21_yz_xxxxxyz, g21_yz_xxxxxzz,\
                                         g21_yz_xxxxyyy, g21_yz_xxxxyyz, g21_yz_xxxxyzz,\
                                         g21_yz_xxxxzzz, g21_yz_xxxyyyy, g21_yz_xxxyyyz,\
                                         g21_yz_xxxyyzz, g21_yz_xxxyzzz, g21_yz_xxxzzzz,\
                                         g21_yz_xxyyyyy, g21_yz_xxyyyyz, g21_yz_xxyyyzz,\
                                         g21_yz_xxyyzzz, g21_yz_xxyzzzz, g21_yz_xxzzzzz,\
                                         g21_yz_xyyyyyy, g21_yz_xyyyyyz, g21_yz_xyyyyzz,\
                                         g21_yz_xyyyzzz, g21_yz_xyyzzzz, g21_yz_xyzzzzz,\
                                         g21_yz_xzzzzzz, g21_yz_yyyyyyy, g21_yz_yyyyyyz,\
                                         g21_yz_yyyyyzz, g21_yz_yyyyzzz, g21_yz_yyyzzzz,\
                                         g21_yz_yyzzzzz, g21_yz_yzzzzzz, g21_yz_zzzzzzz,\
                                         g21_zz_xxxxxxx, g21_zz_xxxxxxy, g21_zz_xxxxxxz,\
                                         g21_zz_xxxxxyy, g21_zz_xxxxxyz, g21_zz_xxxxxzz,\
                                         g21_zz_xxxxyyy, g21_zz_xxxxyyz, g21_zz_xxxxyzz,\
                                         g21_zz_xxxxzzz, g21_zz_xxxyyyy, g21_zz_xxxyyyz,\
                                         g21_zz_xxxyyzz, g21_zz_xxxyzzz, g21_zz_xxxzzzz,\
                                         g21_zz_xxyyyyy, g21_zz_xxyyyyz, g21_zz_xxyyyzz,\
                                         g21_zz_xxyyzzz, g21_zz_xxyzzzz, g21_zz_xxzzzzz,\
                                         g21_zz_xyyyyyy, g21_zz_xyyyyyz, g21_zz_xyyyyzz,\
                                         g21_zz_xyyyzzz, g21_zz_xyyzzzz, g21_zz_xyzzzzz,\
                                         g21_zz_xzzzzzz, g21_zz_yyyyyyy, g21_zz_yyyyyyz,\
                                         g21_zz_yyyyyzz, g21_zz_yyyyzzz, g21_zz_yyyzzzz,\
                                         g21_zz_yyzzzzz, g21_zz_yzzzzzz, g21_zz_zzzzzzz,\
                                         g11_xxx_xxxxxxx, g11_xxx_xxxxxxy, g11_xxx_xxxxxxz,\
                                         g11_xxx_xxxxxyy, g11_xxx_xxxxxyz, g11_xxx_xxxxxzz,\
                                         g11_xxx_xxxxyyy, g11_xxx_xxxxyyz, g11_xxx_xxxxyzz,\
                                         g11_xxx_xxxxzzz, g11_xxx_xxxyyyy, g11_xxx_xxxyyyz,\
                                         g11_xxx_xxxyyzz, g11_xxx_xxxyzzz, g11_xxx_xxxzzzz,\
                                         g11_xxx_xxyyyyy, g11_xxx_xxyyyyz, g11_xxx_xxyyyzz,\
                                         g11_xxx_xxyyzzz, g11_xxx_xxyzzzz, g11_xxx_xxzzzzz,\
                                         g11_xxx_xyyyyyy, g11_xxx_xyyyyyz, g11_xxx_xyyyyzz,\
                                         g11_xxx_xyyyzzz, g11_xxx_xyyzzzz, g11_xxx_xyzzzzz,\
                                         g11_xxx_xzzzzzz, g11_xxx_yyyyyyy, g11_xxx_yyyyyyz,\
                                         g11_xxx_yyyyyzz, g11_xxx_yyyyzzz, g11_xxx_yyyzzzz,\
                                         g11_xxx_yyzzzzz, g11_xxx_yzzzzzz, g11_xxx_zzzzzzz,\
                                         g11_xxy_xxxxxxx, g11_xxy_xxxxxxy, g11_xxy_xxxxxxz,\
                                         g11_xxy_xxxxxyy, g11_xxy_xxxxxyz, g11_xxy_xxxxxzz,\
                                         g11_xxy_xxxxyyy, g11_xxy_xxxxyyz, g11_xxy_xxxxyzz,\
                                         g11_xxy_xxxxzzz, g11_xxy_xxxyyyy, g11_xxy_xxxyyyz,\
                                         g11_xxy_xxxyyzz, g11_xxy_xxxyzzz, g11_xxy_xxxzzzz,\
                                         g11_xxy_xxyyyyy, g11_xxy_xxyyyyz, g11_xxy_xxyyyzz,\
                                         g11_xxy_xxyyzzz, g11_xxy_xxyzzzz, g11_xxy_xxzzzzz,\
                                         g11_xxy_xyyyyyy, g11_xxy_xyyyyyz, g11_xxy_xyyyyzz,\
                                         g11_xxy_xyyyzzz, g11_xxy_xyyzzzz, g11_xxy_xyzzzzz,\
                                         g11_xxy_xzzzzzz, g11_xxy_yyyyyyy, g11_xxy_yyyyyyz,\
                                         g11_xxy_yyyyyzz, g11_xxy_yyyyzzz, g11_xxy_yyyzzzz,\
                                         g11_xxy_yyzzzzz, g11_xxy_yzzzzzz, g11_xxy_zzzzzzz,\
                                         g11_xxz_xxxxxxx, g11_xxz_xxxxxxy, g11_xxz_xxxxxxz,\
                                         g11_xxz_xxxxxyy, g11_xxz_xxxxxyz, g11_xxz_xxxxxzz,\
                                         g11_xxz_xxxxyyy, g11_xxz_xxxxyyz, g11_xxz_xxxxyzz,\
                                         g11_xxz_xxxxzzz, g11_xxz_xxxyyyy, g11_xxz_xxxyyyz,\
                                         g11_xxz_xxxyyzz, g11_xxz_xxxyzzz, g11_xxz_xxxzzzz,\
                                         g11_xxz_xxyyyyy, g11_xxz_xxyyyyz, g11_xxz_xxyyyzz,\
                                         g11_xxz_xxyyzzz, g11_xxz_xxyzzzz, g11_xxz_xxzzzzz,\
                                         g11_xxz_xyyyyyy, g11_xxz_xyyyyyz, g11_xxz_xyyyyzz,\
                                         g11_xxz_xyyyzzz, g11_xxz_xyyzzzz, g11_xxz_xyzzzzz,\
                                         g11_xxz_xzzzzzz, g11_xxz_yyyyyyy, g11_xxz_yyyyyyz,\
                                         g11_xxz_yyyyyzz, g11_xxz_yyyyzzz, g11_xxz_yyyzzzz,\
                                         g11_xxz_yyzzzzz, g11_xxz_yzzzzzz, g11_xxz_zzzzzzz,\
                                         g11_xyy_xxxxxxx, g11_xyy_xxxxxxy, g11_xyy_xxxxxxz,\
                                         g11_xyy_xxxxxyy, g11_xyy_xxxxxyz, g11_xyy_xxxxxzz,\
                                         g11_xyy_xxxxyyy, g11_xyy_xxxxyyz, g11_xyy_xxxxyzz,\
                                         g11_xyy_xxxxzzz, g11_xyy_xxxyyyy, g11_xyy_xxxyyyz,\
                                         g11_xyy_xxxyyzz, g11_xyy_xxxyzzz, g11_xyy_xxxzzzz,\
                                         g11_xyy_xxyyyyy, g11_xyy_xxyyyyz, g11_xyy_xxyyyzz,\
                                         g11_xyy_xxyyzzz, g11_xyy_xxyzzzz, g11_xyy_xxzzzzz,\
                                         g11_xyy_xyyyyyy, g11_xyy_xyyyyyz, g11_xyy_xyyyyzz,\
                                         g11_xyy_xyyyzzz, g11_xyy_xyyzzzz, g11_xyy_xyzzzzz,\
                                         g11_xyy_xzzzzzz, g11_xyy_yyyyyyy, g11_xyy_yyyyyyz,\
                                         g11_xyy_yyyyyzz, g11_xyy_yyyyzzz, g11_xyy_yyyzzzz,\
                                         g11_xyy_yyzzzzz, g11_xyy_yzzzzzz, g11_xyy_zzzzzzz,\
                                         g11_xyz_xxxxxxx, g11_xyz_xxxxxxy, g11_xyz_xxxxxxz,\
                                         g11_xyz_xxxxxyy, g11_xyz_xxxxxyz, g11_xyz_xxxxxzz,\
                                         g11_xyz_xxxxyyy, g11_xyz_xxxxyyz, g11_xyz_xxxxyzz,\
                                         g11_xyz_xxxxzzz, g11_xyz_xxxyyyy, g11_xyz_xxxyyyz,\
                                         g11_xyz_xxxyyzz, g11_xyz_xxxyzzz, g11_xyz_xxxzzzz,\
                                         g11_xyz_xxyyyyy, g11_xyz_xxyyyyz, g11_xyz_xxyyyzz,\
                                         g11_xyz_xxyyzzz, g11_xyz_xxyzzzz, g11_xyz_xxzzzzz,\
                                         g11_xyz_xyyyyyy, g11_xyz_xyyyyyz, g11_xyz_xyyyyzz,\
                                         g11_xyz_xyyyzzz, g11_xyz_xyyzzzz, g11_xyz_xyzzzzz,\
                                         g11_xyz_xzzzzzz, g11_xyz_yyyyyyy, g11_xyz_yyyyyyz,\
                                         g11_xyz_yyyyyzz, g11_xyz_yyyyzzz, g11_xyz_yyyzzzz,\
                                         g11_xyz_yyzzzzz, g11_xyz_yzzzzzz, g11_xyz_zzzzzzz,\
                                         g11_xzz_xxxxxxx, g11_xzz_xxxxxxy, g11_xzz_xxxxxxz,\
                                         g11_xzz_xxxxxyy, g11_xzz_xxxxxyz, g11_xzz_xxxxxzz,\
                                         g11_xzz_xxxxyyy, g11_xzz_xxxxyyz, g11_xzz_xxxxyzz,\
                                         g11_xzz_xxxxzzz, g11_xzz_xxxyyyy, g11_xzz_xxxyyyz,\
                                         g11_xzz_xxxyyzz, g11_xzz_xxxyzzz, g11_xzz_xxxzzzz,\
                                         g11_xzz_xxyyyyy, g11_xzz_xxyyyyz, g11_xzz_xxyyyzz,\
                                         g11_xzz_xxyyzzz, g11_xzz_xxyzzzz, g11_xzz_xxzzzzz,\
                                         g11_xzz_xyyyyyy, g11_xzz_xyyyyyz, g11_xzz_xyyyyzz,\
                                         g11_xzz_xyyyzzz, g11_xzz_xyyzzzz, g11_xzz_xyzzzzz,\
                                         g11_xzz_xzzzzzz, g11_xzz_yyyyyyy, g11_xzz_yyyyyyz,\
                                         g11_xzz_yyyyyzz, g11_xzz_yyyyzzz, g11_xzz_yyyzzzz,\
                                         g11_xzz_yyzzzzz, g11_xzz_yzzzzzz, g11_xzz_zzzzzzz,\
                                         g11_yyy_xxxxxxx, g11_yyy_xxxxxxy, g11_yyy_xxxxxxz,\
                                         g11_yyy_xxxxxyy, g11_yyy_xxxxxyz, g11_yyy_xxxxxzz,\
                                         g11_yyy_xxxxyyy, g11_yyy_xxxxyyz, g11_yyy_xxxxyzz,\
                                         g11_yyy_xxxxzzz, g11_yyy_xxxyyyy, g11_yyy_xxxyyyz,\
                                         g11_yyy_xxxyyzz, g11_yyy_xxxyzzz, g11_yyy_xxxzzzz,\
                                         g11_yyy_xxyyyyy, g11_yyy_xxyyyyz, g11_yyy_xxyyyzz,\
                                         g11_yyy_xxyyzzz, g11_yyy_xxyzzzz, g11_yyy_xxzzzzz,\
                                         g11_yyy_xyyyyyy, g11_yyy_xyyyyyz, g11_yyy_xyyyyzz,\
                                         g11_yyy_xyyyzzz, g11_yyy_xyyzzzz, g11_yyy_xyzzzzz,\
                                         g11_yyy_xzzzzzz, g11_yyy_yyyyyyy, g11_yyy_yyyyyyz,\
                                         g11_yyy_yyyyyzz, g11_yyy_yyyyzzz, g11_yyy_yyyzzzz,\
                                         g11_yyy_yyzzzzz, g11_yyy_yzzzzzz, g11_yyy_zzzzzzz,\
                                         g11_yyz_xxxxxxx, g11_yyz_xxxxxxy, g11_yyz_xxxxxxz,\
                                         g11_yyz_xxxxxyy, g11_yyz_xxxxxyz, g11_yyz_xxxxxzz,\
                                         g11_yyz_xxxxyyy, g11_yyz_xxxxyyz, g11_yyz_xxxxyzz,\
                                         g11_yyz_xxxxzzz, g11_yyz_xxxyyyy, g11_yyz_xxxyyyz,\
                                         g11_yyz_xxxyyzz, g11_yyz_xxxyzzz, g11_yyz_xxxzzzz,\
                                         g11_yyz_xxyyyyy, g11_yyz_xxyyyyz, g11_yyz_xxyyyzz,\
                                         g11_yyz_xxyyzzz, g11_yyz_xxyzzzz, g11_yyz_xxzzzzz,\
                                         g11_yyz_xyyyyyy, g11_yyz_xyyyyyz, g11_yyz_xyyyyzz,\
                                         g11_yyz_xyyyzzz, g11_yyz_xyyzzzz, g11_yyz_xyzzzzz,\
                                         g11_yyz_xzzzzzz, g11_yyz_yyyyyyy, g11_yyz_yyyyyyz,\
                                         g11_yyz_yyyyyzz, g11_yyz_yyyyzzz, g11_yyz_yyyzzzz,\
                                         g11_yyz_yyzzzzz, g11_yyz_yzzzzzz, g11_yyz_zzzzzzz,\
                                         g11_yzz_xxxxxxx, g11_yzz_xxxxxxy, g11_yzz_xxxxxxz,\
                                         g11_yzz_xxxxxyy, g11_yzz_xxxxxyz, g11_yzz_xxxxxzz,\
                                         g11_yzz_xxxxyyy, g11_yzz_xxxxyyz, g11_yzz_xxxxyzz,\
                                         g11_yzz_xxxxzzz, g11_yzz_xxxyyyy, g11_yzz_xxxyyyz,\
                                         g11_yzz_xxxyyzz, g11_yzz_xxxyzzz, g11_yzz_xxxzzzz,\
                                         g11_yzz_xxyyyyy, g11_yzz_xxyyyyz, g11_yzz_xxyyyzz,\
                                         g11_yzz_xxyyzzz, g11_yzz_xxyzzzz, g11_yzz_xxzzzzz,\
                                         g11_yzz_xyyyyyy, g11_yzz_xyyyyyz, g11_yzz_xyyyyzz,\
                                         g11_yzz_xyyyzzz, g11_yzz_xyyzzzz, g11_yzz_xyzzzzz,\
                                         g11_yzz_xzzzzzz, g11_yzz_yyyyyyy, g11_yzz_yyyyyyz,\
                                         g11_yzz_yyyyyzz, g11_yzz_yyyyzzz, g11_yzz_yyyzzzz,\
                                         g11_yzz_yyzzzzz, g11_yzz_yzzzzzz, g11_yzz_zzzzzzz,\
                                         g11_zzz_xxxxxxx, g11_zzz_xxxxxxy, g11_zzz_xxxxxxz,\
                                         g11_zzz_xxxxxyy, g11_zzz_xxxxxyz, g11_zzz_xxxxxzz,\
                                         g11_zzz_xxxxyyy, g11_zzz_xxxxyyz, g11_zzz_xxxxyzz,\
                                         g11_zzz_xxxxzzz, g11_zzz_xxxyyyy, g11_zzz_xxxyyyz,\
                                         g11_zzz_xxxyyzz, g11_zzz_xxxyzzz, g11_zzz_xxxzzzz,\
                                         g11_zzz_xxyyyyy, g11_zzz_xxyyyyz, g11_zzz_xxyyyzz,\
                                         g11_zzz_xxyyzzz, g11_zzz_xxyzzzz, g11_zzz_xxzzzzz,\
                                         g11_zzz_xyyyyyy, g11_zzz_xyyyyyz, g11_zzz_xyyyyzz,\
                                         g11_zzz_xyyyzzz, g11_zzz_xyyzzzz, g11_zzz_xyzzzzz,\
                                         g11_zzz_xzzzzzz, g11_zzz_yyyyyyy, g11_zzz_yyyyyyz,\
                                         g11_zzz_yyyyyzz, g11_zzz_yyyyzzz, g11_zzz_yyyzzzz,\
                                         g11_zzz_yyzzzzz, g11_zzz_yzzzzzz, g11_zzz_zzzzzzz,\
                                         g_xxxx_xxxxxxx, g_xxxx_xxxxxxy, g_xxxx_xxxxxxz,\
                                         g_xxxx_xxxxxyy, g_xxxx_xxxxxyz, g_xxxx_xxxxxzz,\
                                         g_xxxx_xxxxyyy, g_xxxx_xxxxyyz, g_xxxx_xxxxyzz,\
                                         g_xxxx_xxxxzzz, g_xxxx_xxxyyyy, g_xxxx_xxxyyyz,\
                                         g_xxxx_xxxyyzz, g_xxxx_xxxyzzz, g_xxxx_xxxzzzz,\
                                         g_xxxx_xxyyyyy, g_xxxx_xxyyyyz, g_xxxx_xxyyyzz,\
                                         g_xxxx_xxyyzzz, g_xxxx_xxyzzzz, g_xxxx_xxzzzzz,\
                                         g_xxxx_xyyyyyy, g_xxxx_xyyyyyz, g_xxxx_xyyyyzz,\
                                         g_xxxx_xyyyzzz, g_xxxx_xyyzzzz, g_xxxx_xyzzzzz,\
                                         g_xxxx_xzzzzzz, g_xxxx_yyyyyyy, g_xxxx_yyyyyyz,\
                                         g_xxxx_yyyyyzz, g_xxxx_yyyyzzz, g_xxxx_yyyzzzz,\
                                         g_xxxx_yyzzzzz, g_xxxx_yzzzzzz, g_xxxx_zzzzzzz,\
                                         g_xxxy_xxxxxxx, g_xxxy_xxxxxxy, g_xxxy_xxxxxxz,\
                                         g_xxxy_xxxxxyy, g_xxxy_xxxxxyz, g_xxxy_xxxxxzz,\
                                         g_xxxy_xxxxyyy, g_xxxy_xxxxyyz, g_xxxy_xxxxyzz,\
                                         g_xxxy_xxxxzzz, g_xxxy_xxxyyyy, g_xxxy_xxxyyyz,\
                                         g_xxxy_xxxyyzz, g_xxxy_xxxyzzz, g_xxxy_xxxzzzz,\
                                         g_xxxy_xxyyyyy, g_xxxy_xxyyyyz, g_xxxy_xxyyyzz,\
                                         g_xxxy_xxyyzzz, g_xxxy_xxyzzzz, g_xxxy_xxzzzzz,\
                                         g_xxxy_xyyyyyy, g_xxxy_xyyyyyz, g_xxxy_xyyyyzz,\
                                         g_xxxy_xyyyzzz, g_xxxy_xyyzzzz, g_xxxy_xyzzzzz,\
                                         g_xxxy_xzzzzzz, g_xxxy_yyyyyyy, g_xxxy_yyyyyyz,\
                                         g_xxxy_yyyyyzz, g_xxxy_yyyyzzz, g_xxxy_yyyzzzz,\
                                         g_xxxy_yyzzzzz, g_xxxy_yzzzzzz, g_xxxy_zzzzzzz,\
                                         g_xxxz_xxxxxxx, g_xxxz_xxxxxxy, g_xxxz_xxxxxxz,\
                                         g_xxxz_xxxxxyy, g_xxxz_xxxxxyz, g_xxxz_xxxxxzz,\
                                         g_xxxz_xxxxyyy, g_xxxz_xxxxyyz, g_xxxz_xxxxyzz,\
                                         g_xxxz_xxxxzzz, g_xxxz_xxxyyyy, g_xxxz_xxxyyyz,\
                                         g_xxxz_xxxyyzz, g_xxxz_xxxyzzz, g_xxxz_xxxzzzz,\
                                         g_xxxz_xxyyyyy, g_xxxz_xxyyyyz, g_xxxz_xxyyyzz,\
                                         g_xxxz_xxyyzzz, g_xxxz_xxyzzzz, g_xxxz_xxzzzzz,\
                                         g_xxxz_xyyyyyy, g_xxxz_xyyyyyz, g_xxxz_xyyyyzz,\
                                         g_xxxz_xyyyzzz, g_xxxz_xyyzzzz, g_xxxz_xyzzzzz,\
                                         g_xxxz_xzzzzzz, g_xxxz_yyyyyyy, g_xxxz_yyyyyyz,\
                                         g_xxxz_yyyyyzz, g_xxxz_yyyyzzz, g_xxxz_yyyzzzz,\
                                         g_xxxz_yyzzzzz, g_xxxz_yzzzzzz, g_xxxz_zzzzzzz,\
                                         g_xxyy_xxxxxxx, g_xxyy_xxxxxxy, g_xxyy_xxxxxxz,\
                                         g_xxyy_xxxxxyy, g_xxyy_xxxxxyz, g_xxyy_xxxxxzz,\
                                         g_xxyy_xxxxyyy, g_xxyy_xxxxyyz, g_xxyy_xxxxyzz,\
                                         g_xxyy_xxxxzzz, g_xxyy_xxxyyyy, g_xxyy_xxxyyyz,\
                                         g_xxyy_xxxyyzz, g_xxyy_xxxyzzz, g_xxyy_xxxzzzz,\
                                         g_xxyy_xxyyyyy, g_xxyy_xxyyyyz, g_xxyy_xxyyyzz,\
                                         g_xxyy_xxyyzzz, g_xxyy_xxyzzzz, g_xxyy_xxzzzzz,\
                                         g_xxyy_xyyyyyy, g_xxyy_xyyyyyz, g_xxyy_xyyyyzz,\
                                         g_xxyy_xyyyzzz, g_xxyy_xyyzzzz, g_xxyy_xyzzzzz,\
                                         g_xxyy_xzzzzzz, g_xxyy_yyyyyyy, g_xxyy_yyyyyyz,\
                                         g_xxyy_yyyyyzz, g_xxyy_yyyyzzz, g_xxyy_yyyzzzz,\
                                         g_xxyy_yyzzzzz, g_xxyy_yzzzzzz, g_xxyy_zzzzzzz,\
                                         g_xxyz_xxxxxxx, g_xxyz_xxxxxxy, g_xxyz_xxxxxxz,\
                                         g_xxyz_xxxxxyy, g_xxyz_xxxxxyz, g_xxyz_xxxxxzz,\
                                         g_xxyz_xxxxyyy, g_xxyz_xxxxyyz, g_xxyz_xxxxyzz,\
                                         g_xxyz_xxxxzzz, g_xxyz_xxxyyyy, g_xxyz_xxxyyyz,\
                                         g_xxyz_xxxyyzz, g_xxyz_xxxyzzz, g_xxyz_xxxzzzz,\
                                         g_xxyz_xxyyyyy, g_xxyz_xxyyyyz, g_xxyz_xxyyyzz,\
                                         g_xxyz_xxyyzzz, g_xxyz_xxyzzzz, g_xxyz_xxzzzzz,\
                                         g_xxyz_xyyyyyy, g_xxyz_xyyyyyz, g_xxyz_xyyyyzz,\
                                         g_xxyz_xyyyzzz, g_xxyz_xyyzzzz, g_xxyz_xyzzzzz,\
                                         g_xxyz_xzzzzzz, g_xxyz_yyyyyyy, g_xxyz_yyyyyyz,\
                                         g_xxyz_yyyyyzz, g_xxyz_yyyyzzz, g_xxyz_yyyzzzz,\
                                         g_xxyz_yyzzzzz, g_xxyz_yzzzzzz, g_xxyz_zzzzzzz,\
                                         g_xxzz_xxxxxxx, g_xxzz_xxxxxxy, g_xxzz_xxxxxxz,\
                                         g_xxzz_xxxxxyy, g_xxzz_xxxxxyz, g_xxzz_xxxxxzz,\
                                         g_xxzz_xxxxyyy, g_xxzz_xxxxyyz, g_xxzz_xxxxyzz,\
                                         g_xxzz_xxxxzzz, g_xxzz_xxxyyyy, g_xxzz_xxxyyyz,\
                                         g_xxzz_xxxyyzz, g_xxzz_xxxyzzz, g_xxzz_xxxzzzz,\
                                         g_xxzz_xxyyyyy, g_xxzz_xxyyyyz, g_xxzz_xxyyyzz,\
                                         g_xxzz_xxyyzzz, g_xxzz_xxyzzzz, g_xxzz_xxzzzzz,\
                                         g_xxzz_xyyyyyy, g_xxzz_xyyyyyz, g_xxzz_xyyyyzz,\
                                         g_xxzz_xyyyzzz, g_xxzz_xyyzzzz, g_xxzz_xyzzzzz,\
                                         g_xxzz_xzzzzzz, g_xxzz_yyyyyyy, g_xxzz_yyyyyyz,\
                                         g_xxzz_yyyyyzz, g_xxzz_yyyyzzz, g_xxzz_yyyzzzz,\
                                         g_xxzz_yyzzzzz, g_xxzz_yzzzzzz, g_xxzz_zzzzzzz,\
                                         g_xyyy_xxxxxxx, g_xyyy_xxxxxxy, g_xyyy_xxxxxxz,\
                                         g_xyyy_xxxxxyy, g_xyyy_xxxxxyz, g_xyyy_xxxxxzz,\
                                         g_xyyy_xxxxyyy, g_xyyy_xxxxyyz, g_xyyy_xxxxyzz,\
                                         g_xyyy_xxxxzzz, g_xyyy_xxxyyyy, g_xyyy_xxxyyyz,\
                                         g_xyyy_xxxyyzz, g_xyyy_xxxyzzz, g_xyyy_xxxzzzz,\
                                         g_xyyy_xxyyyyy, g_xyyy_xxyyyyz, g_xyyy_xxyyyzz,\
                                         g_xyyy_xxyyzzz, g_xyyy_xxyzzzz, g_xyyy_xxzzzzz,\
                                         g_xyyy_xyyyyyy, g_xyyy_xyyyyyz, g_xyyy_xyyyyzz,\
                                         g_xyyy_xyyyzzz, g_xyyy_xyyzzzz, g_xyyy_xyzzzzz,\
                                         g_xyyy_xzzzzzz, g_xyyy_yyyyyyy, g_xyyy_yyyyyyz,\
                                         g_xyyy_yyyyyzz, g_xyyy_yyyyzzz, g_xyyy_yyyzzzz,\
                                         g_xyyy_yyzzzzz, g_xyyy_yzzzzzz, g_xyyy_zzzzzzz,\
                                         g_xyyz_xxxxxxx, g_xyyz_xxxxxxy, g_xyyz_xxxxxxz,\
                                         g_xyyz_xxxxxyy, g_xyyz_xxxxxyz, g_xyyz_xxxxxzz,\
                                         g_xyyz_xxxxyyy, g_xyyz_xxxxyyz, g_xyyz_xxxxyzz,\
                                         g_xyyz_xxxxzzz, g_xyyz_xxxyyyy, g_xyyz_xxxyyyz,\
                                         g_xyyz_xxxyyzz, g_xyyz_xxxyzzz, g_xyyz_xxxzzzz,\
                                         g_xyyz_xxyyyyy, g_xyyz_xxyyyyz, g_xyyz_xxyyyzz,\
                                         g_xyyz_xxyyzzz, g_xyyz_xxyzzzz, g_xyyz_xxzzzzz,\
                                         g_xyyz_xyyyyyy, g_xyyz_xyyyyyz, g_xyyz_xyyyyzz,\
                                         g_xyyz_xyyyzzz, g_xyyz_xyyzzzz, g_xyyz_xyzzzzz,\
                                         g_xyyz_xzzzzzz, g_xyyz_yyyyyyy, g_xyyz_yyyyyyz,\
                                         g_xyyz_yyyyyzz, g_xyyz_yyyyzzz, g_xyyz_yyyzzzz,\
                                         g_xyyz_yyzzzzz, g_xyyz_yzzzzzz, g_xyyz_zzzzzzz,\
                                         g_xyzz_xxxxxxx, g_xyzz_xxxxxxy, g_xyzz_xxxxxxz,\
                                         g_xyzz_xxxxxyy, g_xyzz_xxxxxyz, g_xyzz_xxxxxzz,\
                                         g_xyzz_xxxxyyy, g_xyzz_xxxxyyz, g_xyzz_xxxxyzz,\
                                         g_xyzz_xxxxzzz, g_xyzz_xxxyyyy, g_xyzz_xxxyyyz,\
                                         g_xyzz_xxxyyzz, g_xyzz_xxxyzzz, g_xyzz_xxxzzzz,\
                                         g_xyzz_xxyyyyy, g_xyzz_xxyyyyz, g_xyzz_xxyyyzz,\
                                         g_xyzz_xxyyzzz, g_xyzz_xxyzzzz, g_xyzz_xxzzzzz,\
                                         g_xyzz_xyyyyyy, g_xyzz_xyyyyyz, g_xyzz_xyyyyzz,\
                                         g_xyzz_xyyyzzz, g_xyzz_xyyzzzz, g_xyzz_xyzzzzz,\
                                         g_xyzz_xzzzzzz, g_xyzz_yyyyyyy, g_xyzz_yyyyyyz,\
                                         g_xyzz_yyyyyzz, g_xyzz_yyyyzzz, g_xyzz_yyyzzzz,\
                                         g_xyzz_yyzzzzz, g_xyzz_yzzzzzz, g_xyzz_zzzzzzz,\
                                         g_xzzz_xxxxxxx, g_xzzz_xxxxxxy, g_xzzz_xxxxxxz,\
                                         g_xzzz_xxxxxyy, g_xzzz_xxxxxyz, g_xzzz_xxxxxzz,\
                                         g_xzzz_xxxxyyy, g_xzzz_xxxxyyz, g_xzzz_xxxxyzz,\
                                         g_xzzz_xxxxzzz, g_xzzz_xxxyyyy, g_xzzz_xxxyyyz,\
                                         g_xzzz_xxxyyzz, g_xzzz_xxxyzzz, g_xzzz_xxxzzzz,\
                                         g_xzzz_xxyyyyy, g_xzzz_xxyyyyz, g_xzzz_xxyyyzz,\
                                         g_xzzz_xxyyzzz, g_xzzz_xxyzzzz, g_xzzz_xxzzzzz,\
                                         g_xzzz_xyyyyyy, g_xzzz_xyyyyyz, g_xzzz_xyyyyzz,\
                                         g_xzzz_xyyyzzz, g_xzzz_xyyzzzz, g_xzzz_xyzzzzz,\
                                         g_xzzz_xzzzzzz, g_xzzz_yyyyyyy, g_xzzz_yyyyyyz,\
                                         g_xzzz_yyyyyzz, g_xzzz_yyyyzzz, g_xzzz_yyyzzzz,\
                                         g_xzzz_yyzzzzz, g_xzzz_yzzzzzz, g_xzzz_zzzzzzz,\
                                         g_yyyy_xxxxxxx, g_yyyy_xxxxxxy, g_yyyy_xxxxxxz,\
                                         g_yyyy_xxxxxyy, g_yyyy_xxxxxyz, g_yyyy_xxxxxzz,\
                                         g_yyyy_xxxxyyy, g_yyyy_xxxxyyz, g_yyyy_xxxxyzz,\
                                         g_yyyy_xxxxzzz, g_yyyy_xxxyyyy, g_yyyy_xxxyyyz,\
                                         g_yyyy_xxxyyzz, g_yyyy_xxxyzzz, g_yyyy_xxxzzzz,\
                                         g_yyyy_xxyyyyy, g_yyyy_xxyyyyz, g_yyyy_xxyyyzz,\
                                         g_yyyy_xxyyzzz, g_yyyy_xxyzzzz, g_yyyy_xxzzzzz,\
                                         g_yyyy_xyyyyyy, g_yyyy_xyyyyyz, g_yyyy_xyyyyzz,\
                                         g_yyyy_xyyyzzz, g_yyyy_xyyzzzz, g_yyyy_xyzzzzz,\
                                         g_yyyy_xzzzzzz, g_yyyy_yyyyyyy, g_yyyy_yyyyyyz,\
                                         g_yyyy_yyyyyzz, g_yyyy_yyyyzzz, g_yyyy_yyyzzzz,\
                                         g_yyyy_yyzzzzz, g_yyyy_yzzzzzz, g_yyyy_zzzzzzz,\
                                         g_yyyz_xxxxxxx, g_yyyz_xxxxxxy, g_yyyz_xxxxxxz,\
                                         g_yyyz_xxxxxyy, g_yyyz_xxxxxyz, g_yyyz_xxxxxzz,\
                                         g_yyyz_xxxxyyy, g_yyyz_xxxxyyz, g_yyyz_xxxxyzz,\
                                         g_yyyz_xxxxzzz, g_yyyz_xxxyyyy, g_yyyz_xxxyyyz,\
                                         g_yyyz_xxxyyzz, g_yyyz_xxxyzzz, g_yyyz_xxxzzzz,\
                                         g_yyyz_xxyyyyy, g_yyyz_xxyyyyz, g_yyyz_xxyyyzz,\
                                         g_yyyz_xxyyzzz, g_yyyz_xxyzzzz, g_yyyz_xxzzzzz,\
                                         g_yyyz_xyyyyyy, g_yyyz_xyyyyyz, g_yyyz_xyyyyzz,\
                                         g_yyyz_xyyyzzz, g_yyyz_xyyzzzz, g_yyyz_xyzzzzz,\
                                         g_yyyz_xzzzzzz, g_yyyz_yyyyyyy, g_yyyz_yyyyyyz,\
                                         g_yyyz_yyyyyzz, g_yyyz_yyyyzzz, g_yyyz_yyyzzzz,\
                                         g_yyyz_yyzzzzz, g_yyyz_yzzzzzz, g_yyyz_zzzzzzz,\
                                         g_yyzz_xxxxxxx, g_yyzz_xxxxxxy, g_yyzz_xxxxxxz,\
                                         g_yyzz_xxxxxyy, g_yyzz_xxxxxyz, g_yyzz_xxxxxzz,\
                                         g_yyzz_xxxxyyy, g_yyzz_xxxxyyz, g_yyzz_xxxxyzz,\
                                         g_yyzz_xxxxzzz, g_yyzz_xxxyyyy, g_yyzz_xxxyyyz,\
                                         g_yyzz_xxxyyzz, g_yyzz_xxxyzzz, g_yyzz_xxxzzzz,\
                                         g_yyzz_xxyyyyy, g_yyzz_xxyyyyz, g_yyzz_xxyyyzz,\
                                         g_yyzz_xxyyzzz, g_yyzz_xxyzzzz, g_yyzz_xxzzzzz,\
                                         g_yyzz_xyyyyyy, g_yyzz_xyyyyyz, g_yyzz_xyyyyzz,\
                                         g_yyzz_xyyyzzz, g_yyzz_xyyzzzz, g_yyzz_xyzzzzz,\
                                         g_yyzz_xzzzzzz, g_yyzz_yyyyyyy, g_yyzz_yyyyyyz,\
                                         g_yyzz_yyyyyzz, g_yyzz_yyyyzzz, g_yyzz_yyyzzzz,\
                                         g_yyzz_yyzzzzz, g_yyzz_yzzzzzz, g_yyzz_zzzzzzz,\
                                         g_yzzz_xxxxxxx, g_yzzz_xxxxxxy, g_yzzz_xxxxxxz,\
                                         g_yzzz_xxxxxyy, g_yzzz_xxxxxyz, g_yzzz_xxxxxzz,\
                                         g_yzzz_xxxxyyy, g_yzzz_xxxxyyz, g_yzzz_xxxxyzz,\
                                         g_yzzz_xxxxzzz, g_yzzz_xxxyyyy, g_yzzz_xxxyyyz,\
                                         g_yzzz_xxxyyzz, g_yzzz_xxxyzzz, g_yzzz_xxxzzzz,\
                                         g_yzzz_xxyyyyy, g_yzzz_xxyyyyz, g_yzzz_xxyyyzz,\
                                         g_yzzz_xxyyzzz, g_yzzz_xxyzzzz, g_yzzz_xxzzzzz,\
                                         g_yzzz_xyyyyyy, g_yzzz_xyyyyyz, g_yzzz_xyyyyzz,\
                                         g_yzzz_xyyyzzz, g_yzzz_xyyzzzz, g_yzzz_xyzzzzz,\
                                         g_yzzz_xzzzzzz, g_yzzz_yyyyyyy, g_yzzz_yyyyyyz,\
                                         g_yzzz_yyyyyzz, g_yzzz_yyyyzzz, g_yzzz_yyyzzzz,\
                                         g_yzzz_yyzzzzz, g_yzzz_yzzzzzz, g_yzzz_zzzzzzz,\
                                         g_zzzz_xxxxxxx, g_zzzz_xxxxxxy, g_zzzz_xxxxxxz,\
                                         g_zzzz_xxxxxyy, g_zzzz_xxxxxyz, g_zzzz_xxxxxzz,\
                                         g_zzzz_xxxxyyy, g_zzzz_xxxxyyz, g_zzzz_xxxxyzz,\
                                         g_zzzz_xxxxzzz, g_zzzz_xxxyyyy, g_zzzz_xxxyyyz,\
                                         g_zzzz_xxxyyzz, g_zzzz_xxxyzzz, g_zzzz_xxxzzzz,\
                                         g_zzzz_xxyyyyy, g_zzzz_xxyyyyz, g_zzzz_xxyyyzz,\
                                         g_zzzz_xxyyzzz, g_zzzz_xxyzzzz, g_zzzz_xxzzzzz,\
                                         g_zzzz_xyyyyyy, g_zzzz_xyyyyyz, g_zzzz_xyyyyzz,\
                                         g_zzzz_xyyyzzz, g_zzzz_xyyzzzz, g_zzzz_xyzzzzz,\
                                         g_zzzz_xzzzzzz, g_zzzz_yyyyyyy, g_zzzz_yyyyyyz,\
                                         g_zzzz_yyyyyzz, g_zzzz_yyyyzzz, g_zzzz_yyyzzzz,\
                                         g_zzzz_yyzzzzz, g_zzzz_yzzzzzz, g_zzzz_zzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxxxxxx[k] = fr * g11_xxx_xxxxxxx[k] + f2g * (3.0 * g20_xx_xxxxxxx[k] - 3.0 * fgz * g21_xx_xxxxxxx[k]) + 7.0 * f2t * gk_xxx_xxxxxx[k];

                    g_xxxx_xxxxxxy[k] = fr * g11_xxx_xxxxxxy[k] + f2g * (3.0 * g20_xx_xxxxxxy[k] - 3.0 * fgz * g21_xx_xxxxxxy[k]) + 6.0 * f2t * gk_xxx_xxxxxy[k];

                    g_xxxx_xxxxxxz[k] = fr * g11_xxx_xxxxxxz[k] + f2g * (3.0 * g20_xx_xxxxxxz[k] - 3.0 * fgz * g21_xx_xxxxxxz[k]) + 6.0 * f2t * gk_xxx_xxxxxz[k];

                    g_xxxx_xxxxxyy[k] = fr * g11_xxx_xxxxxyy[k] + f2g * (3.0 * g20_xx_xxxxxyy[k] - 3.0 * fgz * g21_xx_xxxxxyy[k]) + 5.0 * f2t * gk_xxx_xxxxyy[k];

                    g_xxxx_xxxxxyz[k] = fr * g11_xxx_xxxxxyz[k] + f2g * (3.0 * g20_xx_xxxxxyz[k] - 3.0 * fgz * g21_xx_xxxxxyz[k]) + 5.0 * f2t * gk_xxx_xxxxyz[k];

                    g_xxxx_xxxxxzz[k] = fr * g11_xxx_xxxxxzz[k] + f2g * (3.0 * g20_xx_xxxxxzz[k] - 3.0 * fgz * g21_xx_xxxxxzz[k]) + 5.0 * f2t * gk_xxx_xxxxzz[k];

                    g_xxxx_xxxxyyy[k] = fr * g11_xxx_xxxxyyy[k] + f2g * (3.0 * g20_xx_xxxxyyy[k] - 3.0 * fgz * g21_xx_xxxxyyy[k]) + 4.0 * f2t * gk_xxx_xxxyyy[k];

                    g_xxxx_xxxxyyz[k] = fr * g11_xxx_xxxxyyz[k] + f2g * (3.0 * g20_xx_xxxxyyz[k] - 3.0 * fgz * g21_xx_xxxxyyz[k]) + 4.0 * f2t * gk_xxx_xxxyyz[k];

                    g_xxxx_xxxxyzz[k] = fr * g11_xxx_xxxxyzz[k] + f2g * (3.0 * g20_xx_xxxxyzz[k] - 3.0 * fgz * g21_xx_xxxxyzz[k]) + 4.0 * f2t * gk_xxx_xxxyzz[k];

                    g_xxxx_xxxxzzz[k] = fr * g11_xxx_xxxxzzz[k] + f2g * (3.0 * g20_xx_xxxxzzz[k] - 3.0 * fgz * g21_xx_xxxxzzz[k]) + 4.0 * f2t * gk_xxx_xxxzzz[k];

                    g_xxxx_xxxyyyy[k] = fr * g11_xxx_xxxyyyy[k] + f2g * (3.0 * g20_xx_xxxyyyy[k] - 3.0 * fgz * g21_xx_xxxyyyy[k]) + 3.0 * f2t * gk_xxx_xxyyyy[k];

                    g_xxxx_xxxyyyz[k] = fr * g11_xxx_xxxyyyz[k] + f2g * (3.0 * g20_xx_xxxyyyz[k] - 3.0 * fgz * g21_xx_xxxyyyz[k]) + 3.0 * f2t * gk_xxx_xxyyyz[k];

                    g_xxxx_xxxyyzz[k] = fr * g11_xxx_xxxyyzz[k] + f2g * (3.0 * g20_xx_xxxyyzz[k] - 3.0 * fgz * g21_xx_xxxyyzz[k]) + 3.0 * f2t * gk_xxx_xxyyzz[k];

                    g_xxxx_xxxyzzz[k] = fr * g11_xxx_xxxyzzz[k] + f2g * (3.0 * g20_xx_xxxyzzz[k] - 3.0 * fgz * g21_xx_xxxyzzz[k]) + 3.0 * f2t * gk_xxx_xxyzzz[k];

                    g_xxxx_xxxzzzz[k] = fr * g11_xxx_xxxzzzz[k] + f2g * (3.0 * g20_xx_xxxzzzz[k] - 3.0 * fgz * g21_xx_xxxzzzz[k]) + 3.0 * f2t * gk_xxx_xxzzzz[k];

                    g_xxxx_xxyyyyy[k] = fr * g11_xxx_xxyyyyy[k] + f2g * (3.0 * g20_xx_xxyyyyy[k] - 3.0 * fgz * g21_xx_xxyyyyy[k]) + 2.0 * f2t * gk_xxx_xyyyyy[k];

                    g_xxxx_xxyyyyz[k] = fr * g11_xxx_xxyyyyz[k] + f2g * (3.0 * g20_xx_xxyyyyz[k] - 3.0 * fgz * g21_xx_xxyyyyz[k]) + 2.0 * f2t * gk_xxx_xyyyyz[k];

                    g_xxxx_xxyyyzz[k] = fr * g11_xxx_xxyyyzz[k] + f2g * (3.0 * g20_xx_xxyyyzz[k] - 3.0 * fgz * g21_xx_xxyyyzz[k]) + 2.0 * f2t * gk_xxx_xyyyzz[k];

                    g_xxxx_xxyyzzz[k] = fr * g11_xxx_xxyyzzz[k] + f2g * (3.0 * g20_xx_xxyyzzz[k] - 3.0 * fgz * g21_xx_xxyyzzz[k]) + 2.0 * f2t * gk_xxx_xyyzzz[k];

                    g_xxxx_xxyzzzz[k] = fr * g11_xxx_xxyzzzz[k] + f2g * (3.0 * g20_xx_xxyzzzz[k] - 3.0 * fgz * g21_xx_xxyzzzz[k]) + 2.0 * f2t * gk_xxx_xyzzzz[k];

                    g_xxxx_xxzzzzz[k] = fr * g11_xxx_xxzzzzz[k] + f2g * (3.0 * g20_xx_xxzzzzz[k] - 3.0 * fgz * g21_xx_xxzzzzz[k]) + 2.0 * f2t * gk_xxx_xzzzzz[k];

                    g_xxxx_xyyyyyy[k] = fr * g11_xxx_xyyyyyy[k] + f2g * (3.0 * g20_xx_xyyyyyy[k] - 3.0 * fgz * g21_xx_xyyyyyy[k]) + f2t * gk_xxx_yyyyyy[k];

                    g_xxxx_xyyyyyz[k] = fr * g11_xxx_xyyyyyz[k] + f2g * (3.0 * g20_xx_xyyyyyz[k] - 3.0 * fgz * g21_xx_xyyyyyz[k]) + f2t * gk_xxx_yyyyyz[k];

                    g_xxxx_xyyyyzz[k] = fr * g11_xxx_xyyyyzz[k] + f2g * (3.0 * g20_xx_xyyyyzz[k] - 3.0 * fgz * g21_xx_xyyyyzz[k]) + f2t * gk_xxx_yyyyzz[k];

                    g_xxxx_xyyyzzz[k] = fr * g11_xxx_xyyyzzz[k] + f2g * (3.0 * g20_xx_xyyyzzz[k] - 3.0 * fgz * g21_xx_xyyyzzz[k]) + f2t * gk_xxx_yyyzzz[k];

                    g_xxxx_xyyzzzz[k] = fr * g11_xxx_xyyzzzz[k] + f2g * (3.0 * g20_xx_xyyzzzz[k] - 3.0 * fgz * g21_xx_xyyzzzz[k]) + f2t * gk_xxx_yyzzzz[k];

                    g_xxxx_xyzzzzz[k] = fr * g11_xxx_xyzzzzz[k] + f2g * (3.0 * g20_xx_xyzzzzz[k] - 3.0 * fgz * g21_xx_xyzzzzz[k]) + f2t * gk_xxx_yzzzzz[k];

                    g_xxxx_xzzzzzz[k] = fr * g11_xxx_xzzzzzz[k] + f2g * (3.0 * g20_xx_xzzzzzz[k] - 3.0 * fgz * g21_xx_xzzzzzz[k]) + f2t * gk_xxx_zzzzzz[k];

                    g_xxxx_yyyyyyy[k] = fr * g11_xxx_yyyyyyy[k] + f2g * (3.0 * g20_xx_yyyyyyy[k] - 3.0 * fgz * g21_xx_yyyyyyy[k]);

                    g_xxxx_yyyyyyz[k] = fr * g11_xxx_yyyyyyz[k] + f2g * (3.0 * g20_xx_yyyyyyz[k] - 3.0 * fgz * g21_xx_yyyyyyz[k]);

                    g_xxxx_yyyyyzz[k] = fr * g11_xxx_yyyyyzz[k] + f2g * (3.0 * g20_xx_yyyyyzz[k] - 3.0 * fgz * g21_xx_yyyyyzz[k]);

                    g_xxxx_yyyyzzz[k] = fr * g11_xxx_yyyyzzz[k] + f2g * (3.0 * g20_xx_yyyyzzz[k] - 3.0 * fgz * g21_xx_yyyyzzz[k]);

                    g_xxxx_yyyzzzz[k] = fr * g11_xxx_yyyzzzz[k] + f2g * (3.0 * g20_xx_yyyzzzz[k] - 3.0 * fgz * g21_xx_yyyzzzz[k]);

                    g_xxxx_yyzzzzz[k] = fr * g11_xxx_yyzzzzz[k] + f2g * (3.0 * g20_xx_yyzzzzz[k] - 3.0 * fgz * g21_xx_yyzzzzz[k]);

                    g_xxxx_yzzzzzz[k] = fr * g11_xxx_yzzzzzz[k] + f2g * (3.0 * g20_xx_yzzzzzz[k] - 3.0 * fgz * g21_xx_yzzzzzz[k]);

                    g_xxxx_zzzzzzz[k] = fr * g11_xxx_zzzzzzz[k] + f2g * (3.0 * g20_xx_zzzzzzz[k] - 3.0 * fgz * g21_xx_zzzzzzz[k]);

                    g_xxxy_xxxxxxx[k] = fr * g11_xxy_xxxxxxx[k] + f2g * (2.0 * g20_xy_xxxxxxx[k] - 2.0 * fgz * g21_xy_xxxxxxx[k]) + 7.0 * f2t * gk_xxy_xxxxxx[k];

                    g_xxxy_xxxxxxy[k] = fr * g11_xxy_xxxxxxy[k] + f2g * (2.0 * g20_xy_xxxxxxy[k] - 2.0 * fgz * g21_xy_xxxxxxy[k]) + 6.0 * f2t * gk_xxy_xxxxxy[k];

                    g_xxxy_xxxxxxz[k] = fr * g11_xxy_xxxxxxz[k] + f2g * (2.0 * g20_xy_xxxxxxz[k] - 2.0 * fgz * g21_xy_xxxxxxz[k]) + 6.0 * f2t * gk_xxy_xxxxxz[k];

                    g_xxxy_xxxxxyy[k] = fr * g11_xxy_xxxxxyy[k] + f2g * (2.0 * g20_xy_xxxxxyy[k] - 2.0 * fgz * g21_xy_xxxxxyy[k]) + 5.0 * f2t * gk_xxy_xxxxyy[k];

                    g_xxxy_xxxxxyz[k] = fr * g11_xxy_xxxxxyz[k] + f2g * (2.0 * g20_xy_xxxxxyz[k] - 2.0 * fgz * g21_xy_xxxxxyz[k]) + 5.0 * f2t * gk_xxy_xxxxyz[k];

                    g_xxxy_xxxxxzz[k] = fr * g11_xxy_xxxxxzz[k] + f2g * (2.0 * g20_xy_xxxxxzz[k] - 2.0 * fgz * g21_xy_xxxxxzz[k]) + 5.0 * f2t * gk_xxy_xxxxzz[k];

                    g_xxxy_xxxxyyy[k] = fr * g11_xxy_xxxxyyy[k] + f2g * (2.0 * g20_xy_xxxxyyy[k] - 2.0 * fgz * g21_xy_xxxxyyy[k]) + 4.0 * f2t * gk_xxy_xxxyyy[k];

                    g_xxxy_xxxxyyz[k] = fr * g11_xxy_xxxxyyz[k] + f2g * (2.0 * g20_xy_xxxxyyz[k] - 2.0 * fgz * g21_xy_xxxxyyz[k]) + 4.0 * f2t * gk_xxy_xxxyyz[k];

                    g_xxxy_xxxxyzz[k] = fr * g11_xxy_xxxxyzz[k] + f2g * (2.0 * g20_xy_xxxxyzz[k] - 2.0 * fgz * g21_xy_xxxxyzz[k]) + 4.0 * f2t * gk_xxy_xxxyzz[k];

                    g_xxxy_xxxxzzz[k] = fr * g11_xxy_xxxxzzz[k] + f2g * (2.0 * g20_xy_xxxxzzz[k] - 2.0 * fgz * g21_xy_xxxxzzz[k]) + 4.0 * f2t * gk_xxy_xxxzzz[k];

                    g_xxxy_xxxyyyy[k] = fr * g11_xxy_xxxyyyy[k] + f2g * (2.0 * g20_xy_xxxyyyy[k] - 2.0 * fgz * g21_xy_xxxyyyy[k]) + 3.0 * f2t * gk_xxy_xxyyyy[k];

                    g_xxxy_xxxyyyz[k] = fr * g11_xxy_xxxyyyz[k] + f2g * (2.0 * g20_xy_xxxyyyz[k] - 2.0 * fgz * g21_xy_xxxyyyz[k]) + 3.0 * f2t * gk_xxy_xxyyyz[k];

                    g_xxxy_xxxyyzz[k] = fr * g11_xxy_xxxyyzz[k] + f2g * (2.0 * g20_xy_xxxyyzz[k] - 2.0 * fgz * g21_xy_xxxyyzz[k]) + 3.0 * f2t * gk_xxy_xxyyzz[k];

                    g_xxxy_xxxyzzz[k] = fr * g11_xxy_xxxyzzz[k] + f2g * (2.0 * g20_xy_xxxyzzz[k] - 2.0 * fgz * g21_xy_xxxyzzz[k]) + 3.0 * f2t * gk_xxy_xxyzzz[k];

                    g_xxxy_xxxzzzz[k] = fr * g11_xxy_xxxzzzz[k] + f2g * (2.0 * g20_xy_xxxzzzz[k] - 2.0 * fgz * g21_xy_xxxzzzz[k]) + 3.0 * f2t * gk_xxy_xxzzzz[k];

                    g_xxxy_xxyyyyy[k] = fr * g11_xxy_xxyyyyy[k] + f2g * (2.0 * g20_xy_xxyyyyy[k] - 2.0 * fgz * g21_xy_xxyyyyy[k]) + 2.0 * f2t * gk_xxy_xyyyyy[k];

                    g_xxxy_xxyyyyz[k] = fr * g11_xxy_xxyyyyz[k] + f2g * (2.0 * g20_xy_xxyyyyz[k] - 2.0 * fgz * g21_xy_xxyyyyz[k]) + 2.0 * f2t * gk_xxy_xyyyyz[k];

                    g_xxxy_xxyyyzz[k] = fr * g11_xxy_xxyyyzz[k] + f2g * (2.0 * g20_xy_xxyyyzz[k] - 2.0 * fgz * g21_xy_xxyyyzz[k]) + 2.0 * f2t * gk_xxy_xyyyzz[k];

                    g_xxxy_xxyyzzz[k] = fr * g11_xxy_xxyyzzz[k] + f2g * (2.0 * g20_xy_xxyyzzz[k] - 2.0 * fgz * g21_xy_xxyyzzz[k]) + 2.0 * f2t * gk_xxy_xyyzzz[k];

                    g_xxxy_xxyzzzz[k] = fr * g11_xxy_xxyzzzz[k] + f2g * (2.0 * g20_xy_xxyzzzz[k] - 2.0 * fgz * g21_xy_xxyzzzz[k]) + 2.0 * f2t * gk_xxy_xyzzzz[k];

                    g_xxxy_xxzzzzz[k] = fr * g11_xxy_xxzzzzz[k] + f2g * (2.0 * g20_xy_xxzzzzz[k] - 2.0 * fgz * g21_xy_xxzzzzz[k]) + 2.0 * f2t * gk_xxy_xzzzzz[k];

                    g_xxxy_xyyyyyy[k] = fr * g11_xxy_xyyyyyy[k] + f2g * (2.0 * g20_xy_xyyyyyy[k] - 2.0 * fgz * g21_xy_xyyyyyy[k]) + f2t * gk_xxy_yyyyyy[k];

                    g_xxxy_xyyyyyz[k] = fr * g11_xxy_xyyyyyz[k] + f2g * (2.0 * g20_xy_xyyyyyz[k] - 2.0 * fgz * g21_xy_xyyyyyz[k]) + f2t * gk_xxy_yyyyyz[k];

                    g_xxxy_xyyyyzz[k] = fr * g11_xxy_xyyyyzz[k] + f2g * (2.0 * g20_xy_xyyyyzz[k] - 2.0 * fgz * g21_xy_xyyyyzz[k]) + f2t * gk_xxy_yyyyzz[k];

                    g_xxxy_xyyyzzz[k] = fr * g11_xxy_xyyyzzz[k] + f2g * (2.0 * g20_xy_xyyyzzz[k] - 2.0 * fgz * g21_xy_xyyyzzz[k]) + f2t * gk_xxy_yyyzzz[k];

                    g_xxxy_xyyzzzz[k] = fr * g11_xxy_xyyzzzz[k] + f2g * (2.0 * g20_xy_xyyzzzz[k] - 2.0 * fgz * g21_xy_xyyzzzz[k]) + f2t * gk_xxy_yyzzzz[k];

                    g_xxxy_xyzzzzz[k] = fr * g11_xxy_xyzzzzz[k] + f2g * (2.0 * g20_xy_xyzzzzz[k] - 2.0 * fgz * g21_xy_xyzzzzz[k]) + f2t * gk_xxy_yzzzzz[k];

                    g_xxxy_xzzzzzz[k] = fr * g11_xxy_xzzzzzz[k] + f2g * (2.0 * g20_xy_xzzzzzz[k] - 2.0 * fgz * g21_xy_xzzzzzz[k]) + f2t * gk_xxy_zzzzzz[k];

                    g_xxxy_yyyyyyy[k] = fr * g11_xxy_yyyyyyy[k] + f2g * (2.0 * g20_xy_yyyyyyy[k] - 2.0 * fgz * g21_xy_yyyyyyy[k]);

                    g_xxxy_yyyyyyz[k] = fr * g11_xxy_yyyyyyz[k] + f2g * (2.0 * g20_xy_yyyyyyz[k] - 2.0 * fgz * g21_xy_yyyyyyz[k]);

                    g_xxxy_yyyyyzz[k] = fr * g11_xxy_yyyyyzz[k] + f2g * (2.0 * g20_xy_yyyyyzz[k] - 2.0 * fgz * g21_xy_yyyyyzz[k]);

                    g_xxxy_yyyyzzz[k] = fr * g11_xxy_yyyyzzz[k] + f2g * (2.0 * g20_xy_yyyyzzz[k] - 2.0 * fgz * g21_xy_yyyyzzz[k]);

                    g_xxxy_yyyzzzz[k] = fr * g11_xxy_yyyzzzz[k] + f2g * (2.0 * g20_xy_yyyzzzz[k] - 2.0 * fgz * g21_xy_yyyzzzz[k]);

                    g_xxxy_yyzzzzz[k] = fr * g11_xxy_yyzzzzz[k] + f2g * (2.0 * g20_xy_yyzzzzz[k] - 2.0 * fgz * g21_xy_yyzzzzz[k]);

                    g_xxxy_yzzzzzz[k] = fr * g11_xxy_yzzzzzz[k] + f2g * (2.0 * g20_xy_yzzzzzz[k] - 2.0 * fgz * g21_xy_yzzzzzz[k]);

                    g_xxxy_zzzzzzz[k] = fr * g11_xxy_zzzzzzz[k] + f2g * (2.0 * g20_xy_zzzzzzz[k] - 2.0 * fgz * g21_xy_zzzzzzz[k]);

                    g_xxxz_xxxxxxx[k] = fr * g11_xxz_xxxxxxx[k] + f2g * (2.0 * g20_xz_xxxxxxx[k] - 2.0 * fgz * g21_xz_xxxxxxx[k]) + 7.0 * f2t * gk_xxz_xxxxxx[k];

                    g_xxxz_xxxxxxy[k] = fr * g11_xxz_xxxxxxy[k] + f2g * (2.0 * g20_xz_xxxxxxy[k] - 2.0 * fgz * g21_xz_xxxxxxy[k]) + 6.0 * f2t * gk_xxz_xxxxxy[k];

                    g_xxxz_xxxxxxz[k] = fr * g11_xxz_xxxxxxz[k] + f2g * (2.0 * g20_xz_xxxxxxz[k] - 2.0 * fgz * g21_xz_xxxxxxz[k]) + 6.0 * f2t * gk_xxz_xxxxxz[k];

                    g_xxxz_xxxxxyy[k] = fr * g11_xxz_xxxxxyy[k] + f2g * (2.0 * g20_xz_xxxxxyy[k] - 2.0 * fgz * g21_xz_xxxxxyy[k]) + 5.0 * f2t * gk_xxz_xxxxyy[k];

                    g_xxxz_xxxxxyz[k] = fr * g11_xxz_xxxxxyz[k] + f2g * (2.0 * g20_xz_xxxxxyz[k] - 2.0 * fgz * g21_xz_xxxxxyz[k]) + 5.0 * f2t * gk_xxz_xxxxyz[k];

                    g_xxxz_xxxxxzz[k] = fr * g11_xxz_xxxxxzz[k] + f2g * (2.0 * g20_xz_xxxxxzz[k] - 2.0 * fgz * g21_xz_xxxxxzz[k]) + 5.0 * f2t * gk_xxz_xxxxzz[k];

                    g_xxxz_xxxxyyy[k] = fr * g11_xxz_xxxxyyy[k] + f2g * (2.0 * g20_xz_xxxxyyy[k] - 2.0 * fgz * g21_xz_xxxxyyy[k]) + 4.0 * f2t * gk_xxz_xxxyyy[k];

                    g_xxxz_xxxxyyz[k] = fr * g11_xxz_xxxxyyz[k] + f2g * (2.0 * g20_xz_xxxxyyz[k] - 2.0 * fgz * g21_xz_xxxxyyz[k]) + 4.0 * f2t * gk_xxz_xxxyyz[k];

                    g_xxxz_xxxxyzz[k] = fr * g11_xxz_xxxxyzz[k] + f2g * (2.0 * g20_xz_xxxxyzz[k] - 2.0 * fgz * g21_xz_xxxxyzz[k]) + 4.0 * f2t * gk_xxz_xxxyzz[k];

                    g_xxxz_xxxxzzz[k] = fr * g11_xxz_xxxxzzz[k] + f2g * (2.0 * g20_xz_xxxxzzz[k] - 2.0 * fgz * g21_xz_xxxxzzz[k]) + 4.0 * f2t * gk_xxz_xxxzzz[k];

                    g_xxxz_xxxyyyy[k] = fr * g11_xxz_xxxyyyy[k] + f2g * (2.0 * g20_xz_xxxyyyy[k] - 2.0 * fgz * g21_xz_xxxyyyy[k]) + 3.0 * f2t * gk_xxz_xxyyyy[k];

                    g_xxxz_xxxyyyz[k] = fr * g11_xxz_xxxyyyz[k] + f2g * (2.0 * g20_xz_xxxyyyz[k] - 2.0 * fgz * g21_xz_xxxyyyz[k]) + 3.0 * f2t * gk_xxz_xxyyyz[k];

                    g_xxxz_xxxyyzz[k] = fr * g11_xxz_xxxyyzz[k] + f2g * (2.0 * g20_xz_xxxyyzz[k] - 2.0 * fgz * g21_xz_xxxyyzz[k]) + 3.0 * f2t * gk_xxz_xxyyzz[k];

                    g_xxxz_xxxyzzz[k] = fr * g11_xxz_xxxyzzz[k] + f2g * (2.0 * g20_xz_xxxyzzz[k] - 2.0 * fgz * g21_xz_xxxyzzz[k]) + 3.0 * f2t * gk_xxz_xxyzzz[k];

                    g_xxxz_xxxzzzz[k] = fr * g11_xxz_xxxzzzz[k] + f2g * (2.0 * g20_xz_xxxzzzz[k] - 2.0 * fgz * g21_xz_xxxzzzz[k]) + 3.0 * f2t * gk_xxz_xxzzzz[k];

                    g_xxxz_xxyyyyy[k] = fr * g11_xxz_xxyyyyy[k] + f2g * (2.0 * g20_xz_xxyyyyy[k] - 2.0 * fgz * g21_xz_xxyyyyy[k]) + 2.0 * f2t * gk_xxz_xyyyyy[k];

                    g_xxxz_xxyyyyz[k] = fr * g11_xxz_xxyyyyz[k] + f2g * (2.0 * g20_xz_xxyyyyz[k] - 2.0 * fgz * g21_xz_xxyyyyz[k]) + 2.0 * f2t * gk_xxz_xyyyyz[k];

                    g_xxxz_xxyyyzz[k] = fr * g11_xxz_xxyyyzz[k] + f2g * (2.0 * g20_xz_xxyyyzz[k] - 2.0 * fgz * g21_xz_xxyyyzz[k]) + 2.0 * f2t * gk_xxz_xyyyzz[k];

                    g_xxxz_xxyyzzz[k] = fr * g11_xxz_xxyyzzz[k] + f2g * (2.0 * g20_xz_xxyyzzz[k] - 2.0 * fgz * g21_xz_xxyyzzz[k]) + 2.0 * f2t * gk_xxz_xyyzzz[k];

                    g_xxxz_xxyzzzz[k] = fr * g11_xxz_xxyzzzz[k] + f2g * (2.0 * g20_xz_xxyzzzz[k] - 2.0 * fgz * g21_xz_xxyzzzz[k]) + 2.0 * f2t * gk_xxz_xyzzzz[k];

                    g_xxxz_xxzzzzz[k] = fr * g11_xxz_xxzzzzz[k] + f2g * (2.0 * g20_xz_xxzzzzz[k] - 2.0 * fgz * g21_xz_xxzzzzz[k]) + 2.0 * f2t * gk_xxz_xzzzzz[k];

                    g_xxxz_xyyyyyy[k] = fr * g11_xxz_xyyyyyy[k] + f2g * (2.0 * g20_xz_xyyyyyy[k] - 2.0 * fgz * g21_xz_xyyyyyy[k]) + f2t * gk_xxz_yyyyyy[k];

                    g_xxxz_xyyyyyz[k] = fr * g11_xxz_xyyyyyz[k] + f2g * (2.0 * g20_xz_xyyyyyz[k] - 2.0 * fgz * g21_xz_xyyyyyz[k]) + f2t * gk_xxz_yyyyyz[k];

                    g_xxxz_xyyyyzz[k] = fr * g11_xxz_xyyyyzz[k] + f2g * (2.0 * g20_xz_xyyyyzz[k] - 2.0 * fgz * g21_xz_xyyyyzz[k]) + f2t * gk_xxz_yyyyzz[k];

                    g_xxxz_xyyyzzz[k] = fr * g11_xxz_xyyyzzz[k] + f2g * (2.0 * g20_xz_xyyyzzz[k] - 2.0 * fgz * g21_xz_xyyyzzz[k]) + f2t * gk_xxz_yyyzzz[k];

                    g_xxxz_xyyzzzz[k] = fr * g11_xxz_xyyzzzz[k] + f2g * (2.0 * g20_xz_xyyzzzz[k] - 2.0 * fgz * g21_xz_xyyzzzz[k]) + f2t * gk_xxz_yyzzzz[k];

                    g_xxxz_xyzzzzz[k] = fr * g11_xxz_xyzzzzz[k] + f2g * (2.0 * g20_xz_xyzzzzz[k] - 2.0 * fgz * g21_xz_xyzzzzz[k]) + f2t * gk_xxz_yzzzzz[k];

                    g_xxxz_xzzzzzz[k] = fr * g11_xxz_xzzzzzz[k] + f2g * (2.0 * g20_xz_xzzzzzz[k] - 2.0 * fgz * g21_xz_xzzzzzz[k]) + f2t * gk_xxz_zzzzzz[k];

                    g_xxxz_yyyyyyy[k] = fr * g11_xxz_yyyyyyy[k] + f2g * (2.0 * g20_xz_yyyyyyy[k] - 2.0 * fgz * g21_xz_yyyyyyy[k]);

                    g_xxxz_yyyyyyz[k] = fr * g11_xxz_yyyyyyz[k] + f2g * (2.0 * g20_xz_yyyyyyz[k] - 2.0 * fgz * g21_xz_yyyyyyz[k]);

                    g_xxxz_yyyyyzz[k] = fr * g11_xxz_yyyyyzz[k] + f2g * (2.0 * g20_xz_yyyyyzz[k] - 2.0 * fgz * g21_xz_yyyyyzz[k]);

                    g_xxxz_yyyyzzz[k] = fr * g11_xxz_yyyyzzz[k] + f2g * (2.0 * g20_xz_yyyyzzz[k] - 2.0 * fgz * g21_xz_yyyyzzz[k]);

                    g_xxxz_yyyzzzz[k] = fr * g11_xxz_yyyzzzz[k] + f2g * (2.0 * g20_xz_yyyzzzz[k] - 2.0 * fgz * g21_xz_yyyzzzz[k]);

                    g_xxxz_yyzzzzz[k] = fr * g11_xxz_yyzzzzz[k] + f2g * (2.0 * g20_xz_yyzzzzz[k] - 2.0 * fgz * g21_xz_yyzzzzz[k]);

                    g_xxxz_yzzzzzz[k] = fr * g11_xxz_yzzzzzz[k] + f2g * (2.0 * g20_xz_yzzzzzz[k] - 2.0 * fgz * g21_xz_yzzzzzz[k]);

                    g_xxxz_zzzzzzz[k] = fr * g11_xxz_zzzzzzz[k] + f2g * (2.0 * g20_xz_zzzzzzz[k] - 2.0 * fgz * g21_xz_zzzzzzz[k]);

                    g_xxyy_xxxxxxx[k] = fr * g11_xyy_xxxxxxx[k] + f2g * (g20_yy_xxxxxxx[k] - fgz * g21_yy_xxxxxxx[k]) + 7.0 * f2t * gk_xyy_xxxxxx[k];

                    g_xxyy_xxxxxxy[k] = fr * g11_xyy_xxxxxxy[k] + f2g * (g20_yy_xxxxxxy[k] - fgz * g21_yy_xxxxxxy[k]) + 6.0 * f2t * gk_xyy_xxxxxy[k];

                    g_xxyy_xxxxxxz[k] = fr * g11_xyy_xxxxxxz[k] + f2g * (g20_yy_xxxxxxz[k] - fgz * g21_yy_xxxxxxz[k]) + 6.0 * f2t * gk_xyy_xxxxxz[k];

                    g_xxyy_xxxxxyy[k] = fr * g11_xyy_xxxxxyy[k] + f2g * (g20_yy_xxxxxyy[k] - fgz * g21_yy_xxxxxyy[k]) + 5.0 * f2t * gk_xyy_xxxxyy[k];

                    g_xxyy_xxxxxyz[k] = fr * g11_xyy_xxxxxyz[k] + f2g * (g20_yy_xxxxxyz[k] - fgz * g21_yy_xxxxxyz[k]) + 5.0 * f2t * gk_xyy_xxxxyz[k];

                    g_xxyy_xxxxxzz[k] = fr * g11_xyy_xxxxxzz[k] + f2g * (g20_yy_xxxxxzz[k] - fgz * g21_yy_xxxxxzz[k]) + 5.0 * f2t * gk_xyy_xxxxzz[k];

                    g_xxyy_xxxxyyy[k] = fr * g11_xyy_xxxxyyy[k] + f2g * (g20_yy_xxxxyyy[k] - fgz * g21_yy_xxxxyyy[k]) + 4.0 * f2t * gk_xyy_xxxyyy[k];

                    g_xxyy_xxxxyyz[k] = fr * g11_xyy_xxxxyyz[k] + f2g * (g20_yy_xxxxyyz[k] - fgz * g21_yy_xxxxyyz[k]) + 4.0 * f2t * gk_xyy_xxxyyz[k];

                    g_xxyy_xxxxyzz[k] = fr * g11_xyy_xxxxyzz[k] + f2g * (g20_yy_xxxxyzz[k] - fgz * g21_yy_xxxxyzz[k]) + 4.0 * f2t * gk_xyy_xxxyzz[k];

                    g_xxyy_xxxxzzz[k] = fr * g11_xyy_xxxxzzz[k] + f2g * (g20_yy_xxxxzzz[k] - fgz * g21_yy_xxxxzzz[k]) + 4.0 * f2t * gk_xyy_xxxzzz[k];

                    g_xxyy_xxxyyyy[k] = fr * g11_xyy_xxxyyyy[k] + f2g * (g20_yy_xxxyyyy[k] - fgz * g21_yy_xxxyyyy[k]) + 3.0 * f2t * gk_xyy_xxyyyy[k];

                    g_xxyy_xxxyyyz[k] = fr * g11_xyy_xxxyyyz[k] + f2g * (g20_yy_xxxyyyz[k] - fgz * g21_yy_xxxyyyz[k]) + 3.0 * f2t * gk_xyy_xxyyyz[k];

                    g_xxyy_xxxyyzz[k] = fr * g11_xyy_xxxyyzz[k] + f2g * (g20_yy_xxxyyzz[k] - fgz * g21_yy_xxxyyzz[k]) + 3.0 * f2t * gk_xyy_xxyyzz[k];

                    g_xxyy_xxxyzzz[k] = fr * g11_xyy_xxxyzzz[k] + f2g * (g20_yy_xxxyzzz[k] - fgz * g21_yy_xxxyzzz[k]) + 3.0 * f2t * gk_xyy_xxyzzz[k];

                    g_xxyy_xxxzzzz[k] = fr * g11_xyy_xxxzzzz[k] + f2g * (g20_yy_xxxzzzz[k] - fgz * g21_yy_xxxzzzz[k]) + 3.0 * f2t * gk_xyy_xxzzzz[k];

                    g_xxyy_xxyyyyy[k] = fr * g11_xyy_xxyyyyy[k] + f2g * (g20_yy_xxyyyyy[k] - fgz * g21_yy_xxyyyyy[k]) + 2.0 * f2t * gk_xyy_xyyyyy[k];

                    g_xxyy_xxyyyyz[k] = fr * g11_xyy_xxyyyyz[k] + f2g * (g20_yy_xxyyyyz[k] - fgz * g21_yy_xxyyyyz[k]) + 2.0 * f2t * gk_xyy_xyyyyz[k];

                    g_xxyy_xxyyyzz[k] = fr * g11_xyy_xxyyyzz[k] + f2g * (g20_yy_xxyyyzz[k] - fgz * g21_yy_xxyyyzz[k]) + 2.0 * f2t * gk_xyy_xyyyzz[k];

                    g_xxyy_xxyyzzz[k] = fr * g11_xyy_xxyyzzz[k] + f2g * (g20_yy_xxyyzzz[k] - fgz * g21_yy_xxyyzzz[k]) + 2.0 * f2t * gk_xyy_xyyzzz[k];

                    g_xxyy_xxyzzzz[k] = fr * g11_xyy_xxyzzzz[k] + f2g * (g20_yy_xxyzzzz[k] - fgz * g21_yy_xxyzzzz[k]) + 2.0 * f2t * gk_xyy_xyzzzz[k];

                    g_xxyy_xxzzzzz[k] = fr * g11_xyy_xxzzzzz[k] + f2g * (g20_yy_xxzzzzz[k] - fgz * g21_yy_xxzzzzz[k]) + 2.0 * f2t * gk_xyy_xzzzzz[k];

                    g_xxyy_xyyyyyy[k] = fr * g11_xyy_xyyyyyy[k] + f2g * (g20_yy_xyyyyyy[k] - fgz * g21_yy_xyyyyyy[k]) + f2t * gk_xyy_yyyyyy[k];

                    g_xxyy_xyyyyyz[k] = fr * g11_xyy_xyyyyyz[k] + f2g * (g20_yy_xyyyyyz[k] - fgz * g21_yy_xyyyyyz[k]) + f2t * gk_xyy_yyyyyz[k];

                    g_xxyy_xyyyyzz[k] = fr * g11_xyy_xyyyyzz[k] + f2g * (g20_yy_xyyyyzz[k] - fgz * g21_yy_xyyyyzz[k]) + f2t * gk_xyy_yyyyzz[k];

                    g_xxyy_xyyyzzz[k] = fr * g11_xyy_xyyyzzz[k] + f2g * (g20_yy_xyyyzzz[k] - fgz * g21_yy_xyyyzzz[k]) + f2t * gk_xyy_yyyzzz[k];

                    g_xxyy_xyyzzzz[k] = fr * g11_xyy_xyyzzzz[k] + f2g * (g20_yy_xyyzzzz[k] - fgz * g21_yy_xyyzzzz[k]) + f2t * gk_xyy_yyzzzz[k];

                    g_xxyy_xyzzzzz[k] = fr * g11_xyy_xyzzzzz[k] + f2g * (g20_yy_xyzzzzz[k] - fgz * g21_yy_xyzzzzz[k]) + f2t * gk_xyy_yzzzzz[k];

                    g_xxyy_xzzzzzz[k] = fr * g11_xyy_xzzzzzz[k] + f2g * (g20_yy_xzzzzzz[k] - fgz * g21_yy_xzzzzzz[k]) + f2t * gk_xyy_zzzzzz[k];

                    g_xxyy_yyyyyyy[k] = fr * g11_xyy_yyyyyyy[k] + f2g * (g20_yy_yyyyyyy[k] - fgz * g21_yy_yyyyyyy[k]);

                    g_xxyy_yyyyyyz[k] = fr * g11_xyy_yyyyyyz[k] + f2g * (g20_yy_yyyyyyz[k] - fgz * g21_yy_yyyyyyz[k]);

                    g_xxyy_yyyyyzz[k] = fr * g11_xyy_yyyyyzz[k] + f2g * (g20_yy_yyyyyzz[k] - fgz * g21_yy_yyyyyzz[k]);

                    g_xxyy_yyyyzzz[k] = fr * g11_xyy_yyyyzzz[k] + f2g * (g20_yy_yyyyzzz[k] - fgz * g21_yy_yyyyzzz[k]);

                    g_xxyy_yyyzzzz[k] = fr * g11_xyy_yyyzzzz[k] + f2g * (g20_yy_yyyzzzz[k] - fgz * g21_yy_yyyzzzz[k]);

                    g_xxyy_yyzzzzz[k] = fr * g11_xyy_yyzzzzz[k] + f2g * (g20_yy_yyzzzzz[k] - fgz * g21_yy_yyzzzzz[k]);

                    g_xxyy_yzzzzzz[k] = fr * g11_xyy_yzzzzzz[k] + f2g * (g20_yy_yzzzzzz[k] - fgz * g21_yy_yzzzzzz[k]);

                    g_xxyy_zzzzzzz[k] = fr * g11_xyy_zzzzzzz[k] + f2g * (g20_yy_zzzzzzz[k] - fgz * g21_yy_zzzzzzz[k]);

                    g_xxyz_xxxxxxx[k] = fr * g11_xyz_xxxxxxx[k] + f2g * (g20_yz_xxxxxxx[k] - fgz * g21_yz_xxxxxxx[k]) + 7.0 * f2t * gk_xyz_xxxxxx[k];

                    g_xxyz_xxxxxxy[k] = fr * g11_xyz_xxxxxxy[k] + f2g * (g20_yz_xxxxxxy[k] - fgz * g21_yz_xxxxxxy[k]) + 6.0 * f2t * gk_xyz_xxxxxy[k];

                    g_xxyz_xxxxxxz[k] = fr * g11_xyz_xxxxxxz[k] + f2g * (g20_yz_xxxxxxz[k] - fgz * g21_yz_xxxxxxz[k]) + 6.0 * f2t * gk_xyz_xxxxxz[k];

                    g_xxyz_xxxxxyy[k] = fr * g11_xyz_xxxxxyy[k] + f2g * (g20_yz_xxxxxyy[k] - fgz * g21_yz_xxxxxyy[k]) + 5.0 * f2t * gk_xyz_xxxxyy[k];

                    g_xxyz_xxxxxyz[k] = fr * g11_xyz_xxxxxyz[k] + f2g * (g20_yz_xxxxxyz[k] - fgz * g21_yz_xxxxxyz[k]) + 5.0 * f2t * gk_xyz_xxxxyz[k];

                    g_xxyz_xxxxxzz[k] = fr * g11_xyz_xxxxxzz[k] + f2g * (g20_yz_xxxxxzz[k] - fgz * g21_yz_xxxxxzz[k]) + 5.0 * f2t * gk_xyz_xxxxzz[k];

                    g_xxyz_xxxxyyy[k] = fr * g11_xyz_xxxxyyy[k] + f2g * (g20_yz_xxxxyyy[k] - fgz * g21_yz_xxxxyyy[k]) + 4.0 * f2t * gk_xyz_xxxyyy[k];

                    g_xxyz_xxxxyyz[k] = fr * g11_xyz_xxxxyyz[k] + f2g * (g20_yz_xxxxyyz[k] - fgz * g21_yz_xxxxyyz[k]) + 4.0 * f2t * gk_xyz_xxxyyz[k];

                    g_xxyz_xxxxyzz[k] = fr * g11_xyz_xxxxyzz[k] + f2g * (g20_yz_xxxxyzz[k] - fgz * g21_yz_xxxxyzz[k]) + 4.0 * f2t * gk_xyz_xxxyzz[k];

                    g_xxyz_xxxxzzz[k] = fr * g11_xyz_xxxxzzz[k] + f2g * (g20_yz_xxxxzzz[k] - fgz * g21_yz_xxxxzzz[k]) + 4.0 * f2t * gk_xyz_xxxzzz[k];

                    g_xxyz_xxxyyyy[k] = fr * g11_xyz_xxxyyyy[k] + f2g * (g20_yz_xxxyyyy[k] - fgz * g21_yz_xxxyyyy[k]) + 3.0 * f2t * gk_xyz_xxyyyy[k];

                    g_xxyz_xxxyyyz[k] = fr * g11_xyz_xxxyyyz[k] + f2g * (g20_yz_xxxyyyz[k] - fgz * g21_yz_xxxyyyz[k]) + 3.0 * f2t * gk_xyz_xxyyyz[k];

                    g_xxyz_xxxyyzz[k] = fr * g11_xyz_xxxyyzz[k] + f2g * (g20_yz_xxxyyzz[k] - fgz * g21_yz_xxxyyzz[k]) + 3.0 * f2t * gk_xyz_xxyyzz[k];

                    g_xxyz_xxxyzzz[k] = fr * g11_xyz_xxxyzzz[k] + f2g * (g20_yz_xxxyzzz[k] - fgz * g21_yz_xxxyzzz[k]) + 3.0 * f2t * gk_xyz_xxyzzz[k];

                    g_xxyz_xxxzzzz[k] = fr * g11_xyz_xxxzzzz[k] + f2g * (g20_yz_xxxzzzz[k] - fgz * g21_yz_xxxzzzz[k]) + 3.0 * f2t * gk_xyz_xxzzzz[k];

                    g_xxyz_xxyyyyy[k] = fr * g11_xyz_xxyyyyy[k] + f2g * (g20_yz_xxyyyyy[k] - fgz * g21_yz_xxyyyyy[k]) + 2.0 * f2t * gk_xyz_xyyyyy[k];

                    g_xxyz_xxyyyyz[k] = fr * g11_xyz_xxyyyyz[k] + f2g * (g20_yz_xxyyyyz[k] - fgz * g21_yz_xxyyyyz[k]) + 2.0 * f2t * gk_xyz_xyyyyz[k];

                    g_xxyz_xxyyyzz[k] = fr * g11_xyz_xxyyyzz[k] + f2g * (g20_yz_xxyyyzz[k] - fgz * g21_yz_xxyyyzz[k]) + 2.0 * f2t * gk_xyz_xyyyzz[k];

                    g_xxyz_xxyyzzz[k] = fr * g11_xyz_xxyyzzz[k] + f2g * (g20_yz_xxyyzzz[k] - fgz * g21_yz_xxyyzzz[k]) + 2.0 * f2t * gk_xyz_xyyzzz[k];

                    g_xxyz_xxyzzzz[k] = fr * g11_xyz_xxyzzzz[k] + f2g * (g20_yz_xxyzzzz[k] - fgz * g21_yz_xxyzzzz[k]) + 2.0 * f2t * gk_xyz_xyzzzz[k];

                    g_xxyz_xxzzzzz[k] = fr * g11_xyz_xxzzzzz[k] + f2g * (g20_yz_xxzzzzz[k] - fgz * g21_yz_xxzzzzz[k]) + 2.0 * f2t * gk_xyz_xzzzzz[k];

                    g_xxyz_xyyyyyy[k] = fr * g11_xyz_xyyyyyy[k] + f2g * (g20_yz_xyyyyyy[k] - fgz * g21_yz_xyyyyyy[k]) + f2t * gk_xyz_yyyyyy[k];

                    g_xxyz_xyyyyyz[k] = fr * g11_xyz_xyyyyyz[k] + f2g * (g20_yz_xyyyyyz[k] - fgz * g21_yz_xyyyyyz[k]) + f2t * gk_xyz_yyyyyz[k];

                    g_xxyz_xyyyyzz[k] = fr * g11_xyz_xyyyyzz[k] + f2g * (g20_yz_xyyyyzz[k] - fgz * g21_yz_xyyyyzz[k]) + f2t * gk_xyz_yyyyzz[k];

                    g_xxyz_xyyyzzz[k] = fr * g11_xyz_xyyyzzz[k] + f2g * (g20_yz_xyyyzzz[k] - fgz * g21_yz_xyyyzzz[k]) + f2t * gk_xyz_yyyzzz[k];

                    g_xxyz_xyyzzzz[k] = fr * g11_xyz_xyyzzzz[k] + f2g * (g20_yz_xyyzzzz[k] - fgz * g21_yz_xyyzzzz[k]) + f2t * gk_xyz_yyzzzz[k];

                    g_xxyz_xyzzzzz[k] = fr * g11_xyz_xyzzzzz[k] + f2g * (g20_yz_xyzzzzz[k] - fgz * g21_yz_xyzzzzz[k]) + f2t * gk_xyz_yzzzzz[k];

                    g_xxyz_xzzzzzz[k] = fr * g11_xyz_xzzzzzz[k] + f2g * (g20_yz_xzzzzzz[k] - fgz * g21_yz_xzzzzzz[k]) + f2t * gk_xyz_zzzzzz[k];

                    g_xxyz_yyyyyyy[k] = fr * g11_xyz_yyyyyyy[k] + f2g * (g20_yz_yyyyyyy[k] - fgz * g21_yz_yyyyyyy[k]);

                    g_xxyz_yyyyyyz[k] = fr * g11_xyz_yyyyyyz[k] + f2g * (g20_yz_yyyyyyz[k] - fgz * g21_yz_yyyyyyz[k]);

                    g_xxyz_yyyyyzz[k] = fr * g11_xyz_yyyyyzz[k] + f2g * (g20_yz_yyyyyzz[k] - fgz * g21_yz_yyyyyzz[k]);

                    g_xxyz_yyyyzzz[k] = fr * g11_xyz_yyyyzzz[k] + f2g * (g20_yz_yyyyzzz[k] - fgz * g21_yz_yyyyzzz[k]);

                    g_xxyz_yyyzzzz[k] = fr * g11_xyz_yyyzzzz[k] + f2g * (g20_yz_yyyzzzz[k] - fgz * g21_yz_yyyzzzz[k]);

                    g_xxyz_yyzzzzz[k] = fr * g11_xyz_yyzzzzz[k] + f2g * (g20_yz_yyzzzzz[k] - fgz * g21_yz_yyzzzzz[k]);

                    g_xxyz_yzzzzzz[k] = fr * g11_xyz_yzzzzzz[k] + f2g * (g20_yz_yzzzzzz[k] - fgz * g21_yz_yzzzzzz[k]);

                    g_xxyz_zzzzzzz[k] = fr * g11_xyz_zzzzzzz[k] + f2g * (g20_yz_zzzzzzz[k] - fgz * g21_yz_zzzzzzz[k]);

                    g_xxzz_xxxxxxx[k] = fr * g11_xzz_xxxxxxx[k] + f2g * (g20_zz_xxxxxxx[k] - fgz * g21_zz_xxxxxxx[k]) + 7.0 * f2t * gk_xzz_xxxxxx[k];

                    g_xxzz_xxxxxxy[k] = fr * g11_xzz_xxxxxxy[k] + f2g * (g20_zz_xxxxxxy[k] - fgz * g21_zz_xxxxxxy[k]) + 6.0 * f2t * gk_xzz_xxxxxy[k];

                    g_xxzz_xxxxxxz[k] = fr * g11_xzz_xxxxxxz[k] + f2g * (g20_zz_xxxxxxz[k] - fgz * g21_zz_xxxxxxz[k]) + 6.0 * f2t * gk_xzz_xxxxxz[k];

                    g_xxzz_xxxxxyy[k] = fr * g11_xzz_xxxxxyy[k] + f2g * (g20_zz_xxxxxyy[k] - fgz * g21_zz_xxxxxyy[k]) + 5.0 * f2t * gk_xzz_xxxxyy[k];

                    g_xxzz_xxxxxyz[k] = fr * g11_xzz_xxxxxyz[k] + f2g * (g20_zz_xxxxxyz[k] - fgz * g21_zz_xxxxxyz[k]) + 5.0 * f2t * gk_xzz_xxxxyz[k];

                    g_xxzz_xxxxxzz[k] = fr * g11_xzz_xxxxxzz[k] + f2g * (g20_zz_xxxxxzz[k] - fgz * g21_zz_xxxxxzz[k]) + 5.0 * f2t * gk_xzz_xxxxzz[k];

                    g_xxzz_xxxxyyy[k] = fr * g11_xzz_xxxxyyy[k] + f2g * (g20_zz_xxxxyyy[k] - fgz * g21_zz_xxxxyyy[k]) + 4.0 * f2t * gk_xzz_xxxyyy[k];

                    g_xxzz_xxxxyyz[k] = fr * g11_xzz_xxxxyyz[k] + f2g * (g20_zz_xxxxyyz[k] - fgz * g21_zz_xxxxyyz[k]) + 4.0 * f2t * gk_xzz_xxxyyz[k];

                    g_xxzz_xxxxyzz[k] = fr * g11_xzz_xxxxyzz[k] + f2g * (g20_zz_xxxxyzz[k] - fgz * g21_zz_xxxxyzz[k]) + 4.0 * f2t * gk_xzz_xxxyzz[k];

                    g_xxzz_xxxxzzz[k] = fr * g11_xzz_xxxxzzz[k] + f2g * (g20_zz_xxxxzzz[k] - fgz * g21_zz_xxxxzzz[k]) + 4.0 * f2t * gk_xzz_xxxzzz[k];

                    g_xxzz_xxxyyyy[k] = fr * g11_xzz_xxxyyyy[k] + f2g * (g20_zz_xxxyyyy[k] - fgz * g21_zz_xxxyyyy[k]) + 3.0 * f2t * gk_xzz_xxyyyy[k];

                    g_xxzz_xxxyyyz[k] = fr * g11_xzz_xxxyyyz[k] + f2g * (g20_zz_xxxyyyz[k] - fgz * g21_zz_xxxyyyz[k]) + 3.0 * f2t * gk_xzz_xxyyyz[k];

                    g_xxzz_xxxyyzz[k] = fr * g11_xzz_xxxyyzz[k] + f2g * (g20_zz_xxxyyzz[k] - fgz * g21_zz_xxxyyzz[k]) + 3.0 * f2t * gk_xzz_xxyyzz[k];

                    g_xxzz_xxxyzzz[k] = fr * g11_xzz_xxxyzzz[k] + f2g * (g20_zz_xxxyzzz[k] - fgz * g21_zz_xxxyzzz[k]) + 3.0 * f2t * gk_xzz_xxyzzz[k];

                    g_xxzz_xxxzzzz[k] = fr * g11_xzz_xxxzzzz[k] + f2g * (g20_zz_xxxzzzz[k] - fgz * g21_zz_xxxzzzz[k]) + 3.0 * f2t * gk_xzz_xxzzzz[k];

                    g_xxzz_xxyyyyy[k] = fr * g11_xzz_xxyyyyy[k] + f2g * (g20_zz_xxyyyyy[k] - fgz * g21_zz_xxyyyyy[k]) + 2.0 * f2t * gk_xzz_xyyyyy[k];

                    g_xxzz_xxyyyyz[k] = fr * g11_xzz_xxyyyyz[k] + f2g * (g20_zz_xxyyyyz[k] - fgz * g21_zz_xxyyyyz[k]) + 2.0 * f2t * gk_xzz_xyyyyz[k];

                    g_xxzz_xxyyyzz[k] = fr * g11_xzz_xxyyyzz[k] + f2g * (g20_zz_xxyyyzz[k] - fgz * g21_zz_xxyyyzz[k]) + 2.0 * f2t * gk_xzz_xyyyzz[k];

                    g_xxzz_xxyyzzz[k] = fr * g11_xzz_xxyyzzz[k] + f2g * (g20_zz_xxyyzzz[k] - fgz * g21_zz_xxyyzzz[k]) + 2.0 * f2t * gk_xzz_xyyzzz[k];

                    g_xxzz_xxyzzzz[k] = fr * g11_xzz_xxyzzzz[k] + f2g * (g20_zz_xxyzzzz[k] - fgz * g21_zz_xxyzzzz[k]) + 2.0 * f2t * gk_xzz_xyzzzz[k];

                    g_xxzz_xxzzzzz[k] = fr * g11_xzz_xxzzzzz[k] + f2g * (g20_zz_xxzzzzz[k] - fgz * g21_zz_xxzzzzz[k]) + 2.0 * f2t * gk_xzz_xzzzzz[k];

                    g_xxzz_xyyyyyy[k] = fr * g11_xzz_xyyyyyy[k] + f2g * (g20_zz_xyyyyyy[k] - fgz * g21_zz_xyyyyyy[k]) + f2t * gk_xzz_yyyyyy[k];

                    g_xxzz_xyyyyyz[k] = fr * g11_xzz_xyyyyyz[k] + f2g * (g20_zz_xyyyyyz[k] - fgz * g21_zz_xyyyyyz[k]) + f2t * gk_xzz_yyyyyz[k];

                    g_xxzz_xyyyyzz[k] = fr * g11_xzz_xyyyyzz[k] + f2g * (g20_zz_xyyyyzz[k] - fgz * g21_zz_xyyyyzz[k]) + f2t * gk_xzz_yyyyzz[k];

                    g_xxzz_xyyyzzz[k] = fr * g11_xzz_xyyyzzz[k] + f2g * (g20_zz_xyyyzzz[k] - fgz * g21_zz_xyyyzzz[k]) + f2t * gk_xzz_yyyzzz[k];

                    g_xxzz_xyyzzzz[k] = fr * g11_xzz_xyyzzzz[k] + f2g * (g20_zz_xyyzzzz[k] - fgz * g21_zz_xyyzzzz[k]) + f2t * gk_xzz_yyzzzz[k];

                    g_xxzz_xyzzzzz[k] = fr * g11_xzz_xyzzzzz[k] + f2g * (g20_zz_xyzzzzz[k] - fgz * g21_zz_xyzzzzz[k]) + f2t * gk_xzz_yzzzzz[k];

                    g_xxzz_xzzzzzz[k] = fr * g11_xzz_xzzzzzz[k] + f2g * (g20_zz_xzzzzzz[k] - fgz * g21_zz_xzzzzzz[k]) + f2t * gk_xzz_zzzzzz[k];

                    g_xxzz_yyyyyyy[k] = fr * g11_xzz_yyyyyyy[k] + f2g * (g20_zz_yyyyyyy[k] - fgz * g21_zz_yyyyyyy[k]);

                    g_xxzz_yyyyyyz[k] = fr * g11_xzz_yyyyyyz[k] + f2g * (g20_zz_yyyyyyz[k] - fgz * g21_zz_yyyyyyz[k]);

                    g_xxzz_yyyyyzz[k] = fr * g11_xzz_yyyyyzz[k] + f2g * (g20_zz_yyyyyzz[k] - fgz * g21_zz_yyyyyzz[k]);

                    g_xxzz_yyyyzzz[k] = fr * g11_xzz_yyyyzzz[k] + f2g * (g20_zz_yyyyzzz[k] - fgz * g21_zz_yyyyzzz[k]);

                    g_xxzz_yyyzzzz[k] = fr * g11_xzz_yyyzzzz[k] + f2g * (g20_zz_yyyzzzz[k] - fgz * g21_zz_yyyzzzz[k]);

                    g_xxzz_yyzzzzz[k] = fr * g11_xzz_yyzzzzz[k] + f2g * (g20_zz_yyzzzzz[k] - fgz * g21_zz_yyzzzzz[k]);

                    g_xxzz_yzzzzzz[k] = fr * g11_xzz_yzzzzzz[k] + f2g * (g20_zz_yzzzzzz[k] - fgz * g21_zz_yzzzzzz[k]);

                    g_xxzz_zzzzzzz[k] = fr * g11_xzz_zzzzzzz[k] + f2g * (g20_zz_zzzzzzz[k] - fgz * g21_zz_zzzzzzz[k]);

                    g_xyyy_xxxxxxx[k] = fr * g11_yyy_xxxxxxx[k] + 7.0 * f2t * gk_yyy_xxxxxx[k];

                    g_xyyy_xxxxxxy[k] = fr * g11_yyy_xxxxxxy[k] + 6.0 * f2t * gk_yyy_xxxxxy[k];

                    g_xyyy_xxxxxxz[k] = fr * g11_yyy_xxxxxxz[k] + 6.0 * f2t * gk_yyy_xxxxxz[k];

                    g_xyyy_xxxxxyy[k] = fr * g11_yyy_xxxxxyy[k] + 5.0 * f2t * gk_yyy_xxxxyy[k];

                    g_xyyy_xxxxxyz[k] = fr * g11_yyy_xxxxxyz[k] + 5.0 * f2t * gk_yyy_xxxxyz[k];

                    g_xyyy_xxxxxzz[k] = fr * g11_yyy_xxxxxzz[k] + 5.0 * f2t * gk_yyy_xxxxzz[k];

                    g_xyyy_xxxxyyy[k] = fr * g11_yyy_xxxxyyy[k] + 4.0 * f2t * gk_yyy_xxxyyy[k];

                    g_xyyy_xxxxyyz[k] = fr * g11_yyy_xxxxyyz[k] + 4.0 * f2t * gk_yyy_xxxyyz[k];

                    g_xyyy_xxxxyzz[k] = fr * g11_yyy_xxxxyzz[k] + 4.0 * f2t * gk_yyy_xxxyzz[k];

                    g_xyyy_xxxxzzz[k] = fr * g11_yyy_xxxxzzz[k] + 4.0 * f2t * gk_yyy_xxxzzz[k];

                    g_xyyy_xxxyyyy[k] = fr * g11_yyy_xxxyyyy[k] + 3.0 * f2t * gk_yyy_xxyyyy[k];

                    g_xyyy_xxxyyyz[k] = fr * g11_yyy_xxxyyyz[k] + 3.0 * f2t * gk_yyy_xxyyyz[k];

                    g_xyyy_xxxyyzz[k] = fr * g11_yyy_xxxyyzz[k] + 3.0 * f2t * gk_yyy_xxyyzz[k];

                    g_xyyy_xxxyzzz[k] = fr * g11_yyy_xxxyzzz[k] + 3.0 * f2t * gk_yyy_xxyzzz[k];

                    g_xyyy_xxxzzzz[k] = fr * g11_yyy_xxxzzzz[k] + 3.0 * f2t * gk_yyy_xxzzzz[k];

                    g_xyyy_xxyyyyy[k] = fr * g11_yyy_xxyyyyy[k] + 2.0 * f2t * gk_yyy_xyyyyy[k];

                    g_xyyy_xxyyyyz[k] = fr * g11_yyy_xxyyyyz[k] + 2.0 * f2t * gk_yyy_xyyyyz[k];

                    g_xyyy_xxyyyzz[k] = fr * g11_yyy_xxyyyzz[k] + 2.0 * f2t * gk_yyy_xyyyzz[k];

                    g_xyyy_xxyyzzz[k] = fr * g11_yyy_xxyyzzz[k] + 2.0 * f2t * gk_yyy_xyyzzz[k];

                    g_xyyy_xxyzzzz[k] = fr * g11_yyy_xxyzzzz[k] + 2.0 * f2t * gk_yyy_xyzzzz[k];

                    g_xyyy_xxzzzzz[k] = fr * g11_yyy_xxzzzzz[k] + 2.0 * f2t * gk_yyy_xzzzzz[k];

                    g_xyyy_xyyyyyy[k] = fr * g11_yyy_xyyyyyy[k] + f2t * gk_yyy_yyyyyy[k];

                    g_xyyy_xyyyyyz[k] = fr * g11_yyy_xyyyyyz[k] + f2t * gk_yyy_yyyyyz[k];

                    g_xyyy_xyyyyzz[k] = fr * g11_yyy_xyyyyzz[k] + f2t * gk_yyy_yyyyzz[k];

                    g_xyyy_xyyyzzz[k] = fr * g11_yyy_xyyyzzz[k] + f2t * gk_yyy_yyyzzz[k];

                    g_xyyy_xyyzzzz[k] = fr * g11_yyy_xyyzzzz[k] + f2t * gk_yyy_yyzzzz[k];

                    g_xyyy_xyzzzzz[k] = fr * g11_yyy_xyzzzzz[k] + f2t * gk_yyy_yzzzzz[k];

                    g_xyyy_xzzzzzz[k] = fr * g11_yyy_xzzzzzz[k] + f2t * gk_yyy_zzzzzz[k];

                    g_xyyy_yyyyyyy[k] = fr * g11_yyy_yyyyyyy[k];

                    g_xyyy_yyyyyyz[k] = fr * g11_yyy_yyyyyyz[k];

                    g_xyyy_yyyyyzz[k] = fr * g11_yyy_yyyyyzz[k];

                    g_xyyy_yyyyzzz[k] = fr * g11_yyy_yyyyzzz[k];

                    g_xyyy_yyyzzzz[k] = fr * g11_yyy_yyyzzzz[k];

                    g_xyyy_yyzzzzz[k] = fr * g11_yyy_yyzzzzz[k];

                    g_xyyy_yzzzzzz[k] = fr * g11_yyy_yzzzzzz[k];

                    g_xyyy_zzzzzzz[k] = fr * g11_yyy_zzzzzzz[k];

                    g_xyyz_xxxxxxx[k] = fr * g11_yyz_xxxxxxx[k] + 7.0 * f2t * gk_yyz_xxxxxx[k];

                    g_xyyz_xxxxxxy[k] = fr * g11_yyz_xxxxxxy[k] + 6.0 * f2t * gk_yyz_xxxxxy[k];

                    g_xyyz_xxxxxxz[k] = fr * g11_yyz_xxxxxxz[k] + 6.0 * f2t * gk_yyz_xxxxxz[k];

                    g_xyyz_xxxxxyy[k] = fr * g11_yyz_xxxxxyy[k] + 5.0 * f2t * gk_yyz_xxxxyy[k];

                    g_xyyz_xxxxxyz[k] = fr * g11_yyz_xxxxxyz[k] + 5.0 * f2t * gk_yyz_xxxxyz[k];

                    g_xyyz_xxxxxzz[k] = fr * g11_yyz_xxxxxzz[k] + 5.0 * f2t * gk_yyz_xxxxzz[k];

                    g_xyyz_xxxxyyy[k] = fr * g11_yyz_xxxxyyy[k] + 4.0 * f2t * gk_yyz_xxxyyy[k];

                    g_xyyz_xxxxyyz[k] = fr * g11_yyz_xxxxyyz[k] + 4.0 * f2t * gk_yyz_xxxyyz[k];

                    g_xyyz_xxxxyzz[k] = fr * g11_yyz_xxxxyzz[k] + 4.0 * f2t * gk_yyz_xxxyzz[k];

                    g_xyyz_xxxxzzz[k] = fr * g11_yyz_xxxxzzz[k] + 4.0 * f2t * gk_yyz_xxxzzz[k];

                    g_xyyz_xxxyyyy[k] = fr * g11_yyz_xxxyyyy[k] + 3.0 * f2t * gk_yyz_xxyyyy[k];

                    g_xyyz_xxxyyyz[k] = fr * g11_yyz_xxxyyyz[k] + 3.0 * f2t * gk_yyz_xxyyyz[k];

                    g_xyyz_xxxyyzz[k] = fr * g11_yyz_xxxyyzz[k] + 3.0 * f2t * gk_yyz_xxyyzz[k];

                    g_xyyz_xxxyzzz[k] = fr * g11_yyz_xxxyzzz[k] + 3.0 * f2t * gk_yyz_xxyzzz[k];

                    g_xyyz_xxxzzzz[k] = fr * g11_yyz_xxxzzzz[k] + 3.0 * f2t * gk_yyz_xxzzzz[k];

                    g_xyyz_xxyyyyy[k] = fr * g11_yyz_xxyyyyy[k] + 2.0 * f2t * gk_yyz_xyyyyy[k];

                    g_xyyz_xxyyyyz[k] = fr * g11_yyz_xxyyyyz[k] + 2.0 * f2t * gk_yyz_xyyyyz[k];

                    g_xyyz_xxyyyzz[k] = fr * g11_yyz_xxyyyzz[k] + 2.0 * f2t * gk_yyz_xyyyzz[k];

                    g_xyyz_xxyyzzz[k] = fr * g11_yyz_xxyyzzz[k] + 2.0 * f2t * gk_yyz_xyyzzz[k];

                    g_xyyz_xxyzzzz[k] = fr * g11_yyz_xxyzzzz[k] + 2.0 * f2t * gk_yyz_xyzzzz[k];

                    g_xyyz_xxzzzzz[k] = fr * g11_yyz_xxzzzzz[k] + 2.0 * f2t * gk_yyz_xzzzzz[k];

                    g_xyyz_xyyyyyy[k] = fr * g11_yyz_xyyyyyy[k] + f2t * gk_yyz_yyyyyy[k];

                    g_xyyz_xyyyyyz[k] = fr * g11_yyz_xyyyyyz[k] + f2t * gk_yyz_yyyyyz[k];

                    g_xyyz_xyyyyzz[k] = fr * g11_yyz_xyyyyzz[k] + f2t * gk_yyz_yyyyzz[k];

                    g_xyyz_xyyyzzz[k] = fr * g11_yyz_xyyyzzz[k] + f2t * gk_yyz_yyyzzz[k];

                    g_xyyz_xyyzzzz[k] = fr * g11_yyz_xyyzzzz[k] + f2t * gk_yyz_yyzzzz[k];

                    g_xyyz_xyzzzzz[k] = fr * g11_yyz_xyzzzzz[k] + f2t * gk_yyz_yzzzzz[k];

                    g_xyyz_xzzzzzz[k] = fr * g11_yyz_xzzzzzz[k] + f2t * gk_yyz_zzzzzz[k];

                    g_xyyz_yyyyyyy[k] = fr * g11_yyz_yyyyyyy[k];

                    g_xyyz_yyyyyyz[k] = fr * g11_yyz_yyyyyyz[k];

                    g_xyyz_yyyyyzz[k] = fr * g11_yyz_yyyyyzz[k];

                    g_xyyz_yyyyzzz[k] = fr * g11_yyz_yyyyzzz[k];

                    g_xyyz_yyyzzzz[k] = fr * g11_yyz_yyyzzzz[k];

                    g_xyyz_yyzzzzz[k] = fr * g11_yyz_yyzzzzz[k];

                    g_xyyz_yzzzzzz[k] = fr * g11_yyz_yzzzzzz[k];

                    g_xyyz_zzzzzzz[k] = fr * g11_yyz_zzzzzzz[k];

                    g_xyzz_xxxxxxx[k] = fr * g11_yzz_xxxxxxx[k] + 7.0 * f2t * gk_yzz_xxxxxx[k];

                    g_xyzz_xxxxxxy[k] = fr * g11_yzz_xxxxxxy[k] + 6.0 * f2t * gk_yzz_xxxxxy[k];

                    g_xyzz_xxxxxxz[k] = fr * g11_yzz_xxxxxxz[k] + 6.0 * f2t * gk_yzz_xxxxxz[k];

                    g_xyzz_xxxxxyy[k] = fr * g11_yzz_xxxxxyy[k] + 5.0 * f2t * gk_yzz_xxxxyy[k];

                    g_xyzz_xxxxxyz[k] = fr * g11_yzz_xxxxxyz[k] + 5.0 * f2t * gk_yzz_xxxxyz[k];

                    g_xyzz_xxxxxzz[k] = fr * g11_yzz_xxxxxzz[k] + 5.0 * f2t * gk_yzz_xxxxzz[k];

                    g_xyzz_xxxxyyy[k] = fr * g11_yzz_xxxxyyy[k] + 4.0 * f2t * gk_yzz_xxxyyy[k];

                    g_xyzz_xxxxyyz[k] = fr * g11_yzz_xxxxyyz[k] + 4.0 * f2t * gk_yzz_xxxyyz[k];

                    g_xyzz_xxxxyzz[k] = fr * g11_yzz_xxxxyzz[k] + 4.0 * f2t * gk_yzz_xxxyzz[k];

                    g_xyzz_xxxxzzz[k] = fr * g11_yzz_xxxxzzz[k] + 4.0 * f2t * gk_yzz_xxxzzz[k];

                    g_xyzz_xxxyyyy[k] = fr * g11_yzz_xxxyyyy[k] + 3.0 * f2t * gk_yzz_xxyyyy[k];

                    g_xyzz_xxxyyyz[k] = fr * g11_yzz_xxxyyyz[k] + 3.0 * f2t * gk_yzz_xxyyyz[k];

                    g_xyzz_xxxyyzz[k] = fr * g11_yzz_xxxyyzz[k] + 3.0 * f2t * gk_yzz_xxyyzz[k];

                    g_xyzz_xxxyzzz[k] = fr * g11_yzz_xxxyzzz[k] + 3.0 * f2t * gk_yzz_xxyzzz[k];

                    g_xyzz_xxxzzzz[k] = fr * g11_yzz_xxxzzzz[k] + 3.0 * f2t * gk_yzz_xxzzzz[k];

                    g_xyzz_xxyyyyy[k] = fr * g11_yzz_xxyyyyy[k] + 2.0 * f2t * gk_yzz_xyyyyy[k];

                    g_xyzz_xxyyyyz[k] = fr * g11_yzz_xxyyyyz[k] + 2.0 * f2t * gk_yzz_xyyyyz[k];

                    g_xyzz_xxyyyzz[k] = fr * g11_yzz_xxyyyzz[k] + 2.0 * f2t * gk_yzz_xyyyzz[k];

                    g_xyzz_xxyyzzz[k] = fr * g11_yzz_xxyyzzz[k] + 2.0 * f2t * gk_yzz_xyyzzz[k];

                    g_xyzz_xxyzzzz[k] = fr * g11_yzz_xxyzzzz[k] + 2.0 * f2t * gk_yzz_xyzzzz[k];

                    g_xyzz_xxzzzzz[k] = fr * g11_yzz_xxzzzzz[k] + 2.0 * f2t * gk_yzz_xzzzzz[k];

                    g_xyzz_xyyyyyy[k] = fr * g11_yzz_xyyyyyy[k] + f2t * gk_yzz_yyyyyy[k];

                    g_xyzz_xyyyyyz[k] = fr * g11_yzz_xyyyyyz[k] + f2t * gk_yzz_yyyyyz[k];

                    g_xyzz_xyyyyzz[k] = fr * g11_yzz_xyyyyzz[k] + f2t * gk_yzz_yyyyzz[k];

                    g_xyzz_xyyyzzz[k] = fr * g11_yzz_xyyyzzz[k] + f2t * gk_yzz_yyyzzz[k];

                    g_xyzz_xyyzzzz[k] = fr * g11_yzz_xyyzzzz[k] + f2t * gk_yzz_yyzzzz[k];

                    g_xyzz_xyzzzzz[k] = fr * g11_yzz_xyzzzzz[k] + f2t * gk_yzz_yzzzzz[k];

                    g_xyzz_xzzzzzz[k] = fr * g11_yzz_xzzzzzz[k] + f2t * gk_yzz_zzzzzz[k];

                    g_xyzz_yyyyyyy[k] = fr * g11_yzz_yyyyyyy[k];

                    g_xyzz_yyyyyyz[k] = fr * g11_yzz_yyyyyyz[k];

                    g_xyzz_yyyyyzz[k] = fr * g11_yzz_yyyyyzz[k];

                    g_xyzz_yyyyzzz[k] = fr * g11_yzz_yyyyzzz[k];

                    g_xyzz_yyyzzzz[k] = fr * g11_yzz_yyyzzzz[k];

                    g_xyzz_yyzzzzz[k] = fr * g11_yzz_yyzzzzz[k];

                    g_xyzz_yzzzzzz[k] = fr * g11_yzz_yzzzzzz[k];

                    g_xyzz_zzzzzzz[k] = fr * g11_yzz_zzzzzzz[k];

                    g_xzzz_xxxxxxx[k] = fr * g11_zzz_xxxxxxx[k] + 7.0 * f2t * gk_zzz_xxxxxx[k];

                    g_xzzz_xxxxxxy[k] = fr * g11_zzz_xxxxxxy[k] + 6.0 * f2t * gk_zzz_xxxxxy[k];

                    g_xzzz_xxxxxxz[k] = fr * g11_zzz_xxxxxxz[k] + 6.0 * f2t * gk_zzz_xxxxxz[k];

                    g_xzzz_xxxxxyy[k] = fr * g11_zzz_xxxxxyy[k] + 5.0 * f2t * gk_zzz_xxxxyy[k];

                    g_xzzz_xxxxxyz[k] = fr * g11_zzz_xxxxxyz[k] + 5.0 * f2t * gk_zzz_xxxxyz[k];

                    g_xzzz_xxxxxzz[k] = fr * g11_zzz_xxxxxzz[k] + 5.0 * f2t * gk_zzz_xxxxzz[k];

                    g_xzzz_xxxxyyy[k] = fr * g11_zzz_xxxxyyy[k] + 4.0 * f2t * gk_zzz_xxxyyy[k];

                    g_xzzz_xxxxyyz[k] = fr * g11_zzz_xxxxyyz[k] + 4.0 * f2t * gk_zzz_xxxyyz[k];

                    g_xzzz_xxxxyzz[k] = fr * g11_zzz_xxxxyzz[k] + 4.0 * f2t * gk_zzz_xxxyzz[k];

                    g_xzzz_xxxxzzz[k] = fr * g11_zzz_xxxxzzz[k] + 4.0 * f2t * gk_zzz_xxxzzz[k];

                    g_xzzz_xxxyyyy[k] = fr * g11_zzz_xxxyyyy[k] + 3.0 * f2t * gk_zzz_xxyyyy[k];

                    g_xzzz_xxxyyyz[k] = fr * g11_zzz_xxxyyyz[k] + 3.0 * f2t * gk_zzz_xxyyyz[k];

                    g_xzzz_xxxyyzz[k] = fr * g11_zzz_xxxyyzz[k] + 3.0 * f2t * gk_zzz_xxyyzz[k];

                    g_xzzz_xxxyzzz[k] = fr * g11_zzz_xxxyzzz[k] + 3.0 * f2t * gk_zzz_xxyzzz[k];

                    g_xzzz_xxxzzzz[k] = fr * g11_zzz_xxxzzzz[k] + 3.0 * f2t * gk_zzz_xxzzzz[k];

                    g_xzzz_xxyyyyy[k] = fr * g11_zzz_xxyyyyy[k] + 2.0 * f2t * gk_zzz_xyyyyy[k];

                    g_xzzz_xxyyyyz[k] = fr * g11_zzz_xxyyyyz[k] + 2.0 * f2t * gk_zzz_xyyyyz[k];

                    g_xzzz_xxyyyzz[k] = fr * g11_zzz_xxyyyzz[k] + 2.0 * f2t * gk_zzz_xyyyzz[k];

                    g_xzzz_xxyyzzz[k] = fr * g11_zzz_xxyyzzz[k] + 2.0 * f2t * gk_zzz_xyyzzz[k];

                    g_xzzz_xxyzzzz[k] = fr * g11_zzz_xxyzzzz[k] + 2.0 * f2t * gk_zzz_xyzzzz[k];

                    g_xzzz_xxzzzzz[k] = fr * g11_zzz_xxzzzzz[k] + 2.0 * f2t * gk_zzz_xzzzzz[k];

                    g_xzzz_xyyyyyy[k] = fr * g11_zzz_xyyyyyy[k] + f2t * gk_zzz_yyyyyy[k];

                    g_xzzz_xyyyyyz[k] = fr * g11_zzz_xyyyyyz[k] + f2t * gk_zzz_yyyyyz[k];

                    g_xzzz_xyyyyzz[k] = fr * g11_zzz_xyyyyzz[k] + f2t * gk_zzz_yyyyzz[k];

                    g_xzzz_xyyyzzz[k] = fr * g11_zzz_xyyyzzz[k] + f2t * gk_zzz_yyyzzz[k];

                    g_xzzz_xyyzzzz[k] = fr * g11_zzz_xyyzzzz[k] + f2t * gk_zzz_yyzzzz[k];

                    g_xzzz_xyzzzzz[k] = fr * g11_zzz_xyzzzzz[k] + f2t * gk_zzz_yzzzzz[k];

                    g_xzzz_xzzzzzz[k] = fr * g11_zzz_xzzzzzz[k] + f2t * gk_zzz_zzzzzz[k];

                    g_xzzz_yyyyyyy[k] = fr * g11_zzz_yyyyyyy[k];

                    g_xzzz_yyyyyyz[k] = fr * g11_zzz_yyyyyyz[k];

                    g_xzzz_yyyyyzz[k] = fr * g11_zzz_yyyyyzz[k];

                    g_xzzz_yyyyzzz[k] = fr * g11_zzz_yyyyzzz[k];

                    g_xzzz_yyyzzzz[k] = fr * g11_zzz_yyyzzzz[k];

                    g_xzzz_yyzzzzz[k] = fr * g11_zzz_yyzzzzz[k];

                    g_xzzz_yzzzzzz[k] = fr * g11_zzz_yzzzzzz[k];

                    g_xzzz_zzzzzzz[k] = fr * g11_zzz_zzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxxxxxx[k] = fr * g11_yyy_xxxxxxx[k] + f2g * (3.0 * g20_yy_xxxxxxx[k] - 3.0 * fgz * g21_yy_xxxxxxx[k]);

                    g_yyyy_xxxxxxy[k] = fr * g11_yyy_xxxxxxy[k] + f2g * (3.0 * g20_yy_xxxxxxy[k] - 3.0 * fgz * g21_yy_xxxxxxy[k]) + f2t * gk_yyy_xxxxxx[k];

                    g_yyyy_xxxxxxz[k] = fr * g11_yyy_xxxxxxz[k] + f2g * (3.0 * g20_yy_xxxxxxz[k] - 3.0 * fgz * g21_yy_xxxxxxz[k]);

                    g_yyyy_xxxxxyy[k] = fr * g11_yyy_xxxxxyy[k] + f2g * (3.0 * g20_yy_xxxxxyy[k] - 3.0 * fgz * g21_yy_xxxxxyy[k]) + 2.0 * f2t * gk_yyy_xxxxxy[k];

                    g_yyyy_xxxxxyz[k] = fr * g11_yyy_xxxxxyz[k] + f2g * (3.0 * g20_yy_xxxxxyz[k] - 3.0 * fgz * g21_yy_xxxxxyz[k]) + f2t * gk_yyy_xxxxxz[k];

                    g_yyyy_xxxxxzz[k] = fr * g11_yyy_xxxxxzz[k] + f2g * (3.0 * g20_yy_xxxxxzz[k] - 3.0 * fgz * g21_yy_xxxxxzz[k]);

                    g_yyyy_xxxxyyy[k] = fr * g11_yyy_xxxxyyy[k] + f2g * (3.0 * g20_yy_xxxxyyy[k] - 3.0 * fgz * g21_yy_xxxxyyy[k]) + 3.0 * f2t * gk_yyy_xxxxyy[k];

                    g_yyyy_xxxxyyz[k] = fr * g11_yyy_xxxxyyz[k] + f2g * (3.0 * g20_yy_xxxxyyz[k] - 3.0 * fgz * g21_yy_xxxxyyz[k]) + 2.0 * f2t * gk_yyy_xxxxyz[k];

                    g_yyyy_xxxxyzz[k] = fr * g11_yyy_xxxxyzz[k] + f2g * (3.0 * g20_yy_xxxxyzz[k] - 3.0 * fgz * g21_yy_xxxxyzz[k]) + f2t * gk_yyy_xxxxzz[k];

                    g_yyyy_xxxxzzz[k] = fr * g11_yyy_xxxxzzz[k] + f2g * (3.0 * g20_yy_xxxxzzz[k] - 3.0 * fgz * g21_yy_xxxxzzz[k]);

                    g_yyyy_xxxyyyy[k] = fr * g11_yyy_xxxyyyy[k] + f2g * (3.0 * g20_yy_xxxyyyy[k] - 3.0 * fgz * g21_yy_xxxyyyy[k]) + 4.0 * f2t * gk_yyy_xxxyyy[k];

                    g_yyyy_xxxyyyz[k] = fr * g11_yyy_xxxyyyz[k] + f2g * (3.0 * g20_yy_xxxyyyz[k] - 3.0 * fgz * g21_yy_xxxyyyz[k]) + 3.0 * f2t * gk_yyy_xxxyyz[k];

                    g_yyyy_xxxyyzz[k] = fr * g11_yyy_xxxyyzz[k] + f2g * (3.0 * g20_yy_xxxyyzz[k] - 3.0 * fgz * g21_yy_xxxyyzz[k]) + 2.0 * f2t * gk_yyy_xxxyzz[k];

                    g_yyyy_xxxyzzz[k] = fr * g11_yyy_xxxyzzz[k] + f2g * (3.0 * g20_yy_xxxyzzz[k] - 3.0 * fgz * g21_yy_xxxyzzz[k]) + f2t * gk_yyy_xxxzzz[k];

                    g_yyyy_xxxzzzz[k] = fr * g11_yyy_xxxzzzz[k] + f2g * (3.0 * g20_yy_xxxzzzz[k] - 3.0 * fgz * g21_yy_xxxzzzz[k]);

                    g_yyyy_xxyyyyy[k] = fr * g11_yyy_xxyyyyy[k] + f2g * (3.0 * g20_yy_xxyyyyy[k] - 3.0 * fgz * g21_yy_xxyyyyy[k]) + 5.0 * f2t * gk_yyy_xxyyyy[k];

                    g_yyyy_xxyyyyz[k] = fr * g11_yyy_xxyyyyz[k] + f2g * (3.0 * g20_yy_xxyyyyz[k] - 3.0 * fgz * g21_yy_xxyyyyz[k]) + 4.0 * f2t * gk_yyy_xxyyyz[k];

                    g_yyyy_xxyyyzz[k] = fr * g11_yyy_xxyyyzz[k] + f2g * (3.0 * g20_yy_xxyyyzz[k] - 3.0 * fgz * g21_yy_xxyyyzz[k]) + 3.0 * f2t * gk_yyy_xxyyzz[k];

                    g_yyyy_xxyyzzz[k] = fr * g11_yyy_xxyyzzz[k] + f2g * (3.0 * g20_yy_xxyyzzz[k] - 3.0 * fgz * g21_yy_xxyyzzz[k]) + 2.0 * f2t * gk_yyy_xxyzzz[k];

                    g_yyyy_xxyzzzz[k] = fr * g11_yyy_xxyzzzz[k] + f2g * (3.0 * g20_yy_xxyzzzz[k] - 3.0 * fgz * g21_yy_xxyzzzz[k]) + f2t * gk_yyy_xxzzzz[k];

                    g_yyyy_xxzzzzz[k] = fr * g11_yyy_xxzzzzz[k] + f2g * (3.0 * g20_yy_xxzzzzz[k] - 3.0 * fgz * g21_yy_xxzzzzz[k]);

                    g_yyyy_xyyyyyy[k] = fr * g11_yyy_xyyyyyy[k] + f2g * (3.0 * g20_yy_xyyyyyy[k] - 3.0 * fgz * g21_yy_xyyyyyy[k]) + 6.0 * f2t * gk_yyy_xyyyyy[k];

                    g_yyyy_xyyyyyz[k] = fr * g11_yyy_xyyyyyz[k] + f2g * (3.0 * g20_yy_xyyyyyz[k] - 3.0 * fgz * g21_yy_xyyyyyz[k]) + 5.0 * f2t * gk_yyy_xyyyyz[k];

                    g_yyyy_xyyyyzz[k] = fr * g11_yyy_xyyyyzz[k] + f2g * (3.0 * g20_yy_xyyyyzz[k] - 3.0 * fgz * g21_yy_xyyyyzz[k]) + 4.0 * f2t * gk_yyy_xyyyzz[k];

                    g_yyyy_xyyyzzz[k] = fr * g11_yyy_xyyyzzz[k] + f2g * (3.0 * g20_yy_xyyyzzz[k] - 3.0 * fgz * g21_yy_xyyyzzz[k]) + 3.0 * f2t * gk_yyy_xyyzzz[k];

                    g_yyyy_xyyzzzz[k] = fr * g11_yyy_xyyzzzz[k] + f2g * (3.0 * g20_yy_xyyzzzz[k] - 3.0 * fgz * g21_yy_xyyzzzz[k]) + 2.0 * f2t * gk_yyy_xyzzzz[k];

                    g_yyyy_xyzzzzz[k] = fr * g11_yyy_xyzzzzz[k] + f2g * (3.0 * g20_yy_xyzzzzz[k] - 3.0 * fgz * g21_yy_xyzzzzz[k]) + f2t * gk_yyy_xzzzzz[k];

                    g_yyyy_xzzzzzz[k] = fr * g11_yyy_xzzzzzz[k] + f2g * (3.0 * g20_yy_xzzzzzz[k] - 3.0 * fgz * g21_yy_xzzzzzz[k]);

                    g_yyyy_yyyyyyy[k] = fr * g11_yyy_yyyyyyy[k] + f2g * (3.0 * g20_yy_yyyyyyy[k] - 3.0 * fgz * g21_yy_yyyyyyy[k]) + 7.0 * f2t * gk_yyy_yyyyyy[k];

                    g_yyyy_yyyyyyz[k] = fr * g11_yyy_yyyyyyz[k] + f2g * (3.0 * g20_yy_yyyyyyz[k] - 3.0 * fgz * g21_yy_yyyyyyz[k]) + 6.0 * f2t * gk_yyy_yyyyyz[k];

                    g_yyyy_yyyyyzz[k] = fr * g11_yyy_yyyyyzz[k] + f2g * (3.0 * g20_yy_yyyyyzz[k] - 3.0 * fgz * g21_yy_yyyyyzz[k]) + 5.0 * f2t * gk_yyy_yyyyzz[k];

                    g_yyyy_yyyyzzz[k] = fr * g11_yyy_yyyyzzz[k] + f2g * (3.0 * g20_yy_yyyyzzz[k] - 3.0 * fgz * g21_yy_yyyyzzz[k]) + 4.0 * f2t * gk_yyy_yyyzzz[k];

                    g_yyyy_yyyzzzz[k] = fr * g11_yyy_yyyzzzz[k] + f2g * (3.0 * g20_yy_yyyzzzz[k] - 3.0 * fgz * g21_yy_yyyzzzz[k]) + 3.0 * f2t * gk_yyy_yyzzzz[k];

                    g_yyyy_yyzzzzz[k] = fr * g11_yyy_yyzzzzz[k] + f2g * (3.0 * g20_yy_yyzzzzz[k] - 3.0 * fgz * g21_yy_yyzzzzz[k]) + 2.0 * f2t * gk_yyy_yzzzzz[k];

                    g_yyyy_yzzzzzz[k] = fr * g11_yyy_yzzzzzz[k] + f2g * (3.0 * g20_yy_yzzzzzz[k] - 3.0 * fgz * g21_yy_yzzzzzz[k]) + f2t * gk_yyy_zzzzzz[k];

                    g_yyyy_zzzzzzz[k] = fr * g11_yyy_zzzzzzz[k] + f2g * (3.0 * g20_yy_zzzzzzz[k] - 3.0 * fgz * g21_yy_zzzzzzz[k]);

                    g_yyyz_xxxxxxx[k] = fr * g11_yyz_xxxxxxx[k] + f2g * (2.0 * g20_yz_xxxxxxx[k] - 2.0 * fgz * g21_yz_xxxxxxx[k]);

                    g_yyyz_xxxxxxy[k] = fr * g11_yyz_xxxxxxy[k] + f2g * (2.0 * g20_yz_xxxxxxy[k] - 2.0 * fgz * g21_yz_xxxxxxy[k]) + f2t * gk_yyz_xxxxxx[k];

                    g_yyyz_xxxxxxz[k] = fr * g11_yyz_xxxxxxz[k] + f2g * (2.0 * g20_yz_xxxxxxz[k] - 2.0 * fgz * g21_yz_xxxxxxz[k]);

                    g_yyyz_xxxxxyy[k] = fr * g11_yyz_xxxxxyy[k] + f2g * (2.0 * g20_yz_xxxxxyy[k] - 2.0 * fgz * g21_yz_xxxxxyy[k]) + 2.0 * f2t * gk_yyz_xxxxxy[k];

                    g_yyyz_xxxxxyz[k] = fr * g11_yyz_xxxxxyz[k] + f2g * (2.0 * g20_yz_xxxxxyz[k] - 2.0 * fgz * g21_yz_xxxxxyz[k]) + f2t * gk_yyz_xxxxxz[k];

                    g_yyyz_xxxxxzz[k] = fr * g11_yyz_xxxxxzz[k] + f2g * (2.0 * g20_yz_xxxxxzz[k] - 2.0 * fgz * g21_yz_xxxxxzz[k]);

                    g_yyyz_xxxxyyy[k] = fr * g11_yyz_xxxxyyy[k] + f2g * (2.0 * g20_yz_xxxxyyy[k] - 2.0 * fgz * g21_yz_xxxxyyy[k]) + 3.0 * f2t * gk_yyz_xxxxyy[k];

                    g_yyyz_xxxxyyz[k] = fr * g11_yyz_xxxxyyz[k] + f2g * (2.0 * g20_yz_xxxxyyz[k] - 2.0 * fgz * g21_yz_xxxxyyz[k]) + 2.0 * f2t * gk_yyz_xxxxyz[k];

                    g_yyyz_xxxxyzz[k] = fr * g11_yyz_xxxxyzz[k] + f2g * (2.0 * g20_yz_xxxxyzz[k] - 2.0 * fgz * g21_yz_xxxxyzz[k]) + f2t * gk_yyz_xxxxzz[k];

                    g_yyyz_xxxxzzz[k] = fr * g11_yyz_xxxxzzz[k] + f2g * (2.0 * g20_yz_xxxxzzz[k] - 2.0 * fgz * g21_yz_xxxxzzz[k]);

                    g_yyyz_xxxyyyy[k] = fr * g11_yyz_xxxyyyy[k] + f2g * (2.0 * g20_yz_xxxyyyy[k] - 2.0 * fgz * g21_yz_xxxyyyy[k]) + 4.0 * f2t * gk_yyz_xxxyyy[k];

                    g_yyyz_xxxyyyz[k] = fr * g11_yyz_xxxyyyz[k] + f2g * (2.0 * g20_yz_xxxyyyz[k] - 2.0 * fgz * g21_yz_xxxyyyz[k]) + 3.0 * f2t * gk_yyz_xxxyyz[k];

                    g_yyyz_xxxyyzz[k] = fr * g11_yyz_xxxyyzz[k] + f2g * (2.0 * g20_yz_xxxyyzz[k] - 2.0 * fgz * g21_yz_xxxyyzz[k]) + 2.0 * f2t * gk_yyz_xxxyzz[k];

                    g_yyyz_xxxyzzz[k] = fr * g11_yyz_xxxyzzz[k] + f2g * (2.0 * g20_yz_xxxyzzz[k] - 2.0 * fgz * g21_yz_xxxyzzz[k]) + f2t * gk_yyz_xxxzzz[k];

                    g_yyyz_xxxzzzz[k] = fr * g11_yyz_xxxzzzz[k] + f2g * (2.0 * g20_yz_xxxzzzz[k] - 2.0 * fgz * g21_yz_xxxzzzz[k]);

                    g_yyyz_xxyyyyy[k] = fr * g11_yyz_xxyyyyy[k] + f2g * (2.0 * g20_yz_xxyyyyy[k] - 2.0 * fgz * g21_yz_xxyyyyy[k]) + 5.0 * f2t * gk_yyz_xxyyyy[k];

                    g_yyyz_xxyyyyz[k] = fr * g11_yyz_xxyyyyz[k] + f2g * (2.0 * g20_yz_xxyyyyz[k] - 2.0 * fgz * g21_yz_xxyyyyz[k]) + 4.0 * f2t * gk_yyz_xxyyyz[k];

                    g_yyyz_xxyyyzz[k] = fr * g11_yyz_xxyyyzz[k] + f2g * (2.0 * g20_yz_xxyyyzz[k] - 2.0 * fgz * g21_yz_xxyyyzz[k]) + 3.0 * f2t * gk_yyz_xxyyzz[k];

                    g_yyyz_xxyyzzz[k] = fr * g11_yyz_xxyyzzz[k] + f2g * (2.0 * g20_yz_xxyyzzz[k] - 2.0 * fgz * g21_yz_xxyyzzz[k]) + 2.0 * f2t * gk_yyz_xxyzzz[k];

                    g_yyyz_xxyzzzz[k] = fr * g11_yyz_xxyzzzz[k] + f2g * (2.0 * g20_yz_xxyzzzz[k] - 2.0 * fgz * g21_yz_xxyzzzz[k]) + f2t * gk_yyz_xxzzzz[k];

                    g_yyyz_xxzzzzz[k] = fr * g11_yyz_xxzzzzz[k] + f2g * (2.0 * g20_yz_xxzzzzz[k] - 2.0 * fgz * g21_yz_xxzzzzz[k]);

                    g_yyyz_xyyyyyy[k] = fr * g11_yyz_xyyyyyy[k] + f2g * (2.0 * g20_yz_xyyyyyy[k] - 2.0 * fgz * g21_yz_xyyyyyy[k]) + 6.0 * f2t * gk_yyz_xyyyyy[k];

                    g_yyyz_xyyyyyz[k] = fr * g11_yyz_xyyyyyz[k] + f2g * (2.0 * g20_yz_xyyyyyz[k] - 2.0 * fgz * g21_yz_xyyyyyz[k]) + 5.0 * f2t * gk_yyz_xyyyyz[k];

                    g_yyyz_xyyyyzz[k] = fr * g11_yyz_xyyyyzz[k] + f2g * (2.0 * g20_yz_xyyyyzz[k] - 2.0 * fgz * g21_yz_xyyyyzz[k]) + 4.0 * f2t * gk_yyz_xyyyzz[k];

                    g_yyyz_xyyyzzz[k] = fr * g11_yyz_xyyyzzz[k] + f2g * (2.0 * g20_yz_xyyyzzz[k] - 2.0 * fgz * g21_yz_xyyyzzz[k]) + 3.0 * f2t * gk_yyz_xyyzzz[k];

                    g_yyyz_xyyzzzz[k] = fr * g11_yyz_xyyzzzz[k] + f2g * (2.0 * g20_yz_xyyzzzz[k] - 2.0 * fgz * g21_yz_xyyzzzz[k]) + 2.0 * f2t * gk_yyz_xyzzzz[k];

                    g_yyyz_xyzzzzz[k] = fr * g11_yyz_xyzzzzz[k] + f2g * (2.0 * g20_yz_xyzzzzz[k] - 2.0 * fgz * g21_yz_xyzzzzz[k]) + f2t * gk_yyz_xzzzzz[k];

                    g_yyyz_xzzzzzz[k] = fr * g11_yyz_xzzzzzz[k] + f2g * (2.0 * g20_yz_xzzzzzz[k] - 2.0 * fgz * g21_yz_xzzzzzz[k]);

                    g_yyyz_yyyyyyy[k] = fr * g11_yyz_yyyyyyy[k] + f2g * (2.0 * g20_yz_yyyyyyy[k] - 2.0 * fgz * g21_yz_yyyyyyy[k]) + 7.0 * f2t * gk_yyz_yyyyyy[k];

                    g_yyyz_yyyyyyz[k] = fr * g11_yyz_yyyyyyz[k] + f2g * (2.0 * g20_yz_yyyyyyz[k] - 2.0 * fgz * g21_yz_yyyyyyz[k]) + 6.0 * f2t * gk_yyz_yyyyyz[k];

                    g_yyyz_yyyyyzz[k] = fr * g11_yyz_yyyyyzz[k] + f2g * (2.0 * g20_yz_yyyyyzz[k] - 2.0 * fgz * g21_yz_yyyyyzz[k]) + 5.0 * f2t * gk_yyz_yyyyzz[k];

                    g_yyyz_yyyyzzz[k] = fr * g11_yyz_yyyyzzz[k] + f2g * (2.0 * g20_yz_yyyyzzz[k] - 2.0 * fgz * g21_yz_yyyyzzz[k]) + 4.0 * f2t * gk_yyz_yyyzzz[k];

                    g_yyyz_yyyzzzz[k] = fr * g11_yyz_yyyzzzz[k] + f2g * (2.0 * g20_yz_yyyzzzz[k] - 2.0 * fgz * g21_yz_yyyzzzz[k]) + 3.0 * f2t * gk_yyz_yyzzzz[k];

                    g_yyyz_yyzzzzz[k] = fr * g11_yyz_yyzzzzz[k] + f2g * (2.0 * g20_yz_yyzzzzz[k] - 2.0 * fgz * g21_yz_yyzzzzz[k]) + 2.0 * f2t * gk_yyz_yzzzzz[k];

                    g_yyyz_yzzzzzz[k] = fr * g11_yyz_yzzzzzz[k] + f2g * (2.0 * g20_yz_yzzzzzz[k] - 2.0 * fgz * g21_yz_yzzzzzz[k]) + f2t * gk_yyz_zzzzzz[k];

                    g_yyyz_zzzzzzz[k] = fr * g11_yyz_zzzzzzz[k] + f2g * (2.0 * g20_yz_zzzzzzz[k] - 2.0 * fgz * g21_yz_zzzzzzz[k]);

                    g_yyzz_xxxxxxx[k] = fr * g11_yzz_xxxxxxx[k] + f2g * (g20_zz_xxxxxxx[k] - fgz * g21_zz_xxxxxxx[k]);

                    g_yyzz_xxxxxxy[k] = fr * g11_yzz_xxxxxxy[k] + f2g * (g20_zz_xxxxxxy[k] - fgz * g21_zz_xxxxxxy[k]) + f2t * gk_yzz_xxxxxx[k];

                    g_yyzz_xxxxxxz[k] = fr * g11_yzz_xxxxxxz[k] + f2g * (g20_zz_xxxxxxz[k] - fgz * g21_zz_xxxxxxz[k]);

                    g_yyzz_xxxxxyy[k] = fr * g11_yzz_xxxxxyy[k] + f2g * (g20_zz_xxxxxyy[k] - fgz * g21_zz_xxxxxyy[k]) + 2.0 * f2t * gk_yzz_xxxxxy[k];

                    g_yyzz_xxxxxyz[k] = fr * g11_yzz_xxxxxyz[k] + f2g * (g20_zz_xxxxxyz[k] - fgz * g21_zz_xxxxxyz[k]) + f2t * gk_yzz_xxxxxz[k];

                    g_yyzz_xxxxxzz[k] = fr * g11_yzz_xxxxxzz[k] + f2g * (g20_zz_xxxxxzz[k] - fgz * g21_zz_xxxxxzz[k]);

                    g_yyzz_xxxxyyy[k] = fr * g11_yzz_xxxxyyy[k] + f2g * (g20_zz_xxxxyyy[k] - fgz * g21_zz_xxxxyyy[k]) + 3.0 * f2t * gk_yzz_xxxxyy[k];

                    g_yyzz_xxxxyyz[k] = fr * g11_yzz_xxxxyyz[k] + f2g * (g20_zz_xxxxyyz[k] - fgz * g21_zz_xxxxyyz[k]) + 2.0 * f2t * gk_yzz_xxxxyz[k];

                    g_yyzz_xxxxyzz[k] = fr * g11_yzz_xxxxyzz[k] + f2g * (g20_zz_xxxxyzz[k] - fgz * g21_zz_xxxxyzz[k]) + f2t * gk_yzz_xxxxzz[k];

                    g_yyzz_xxxxzzz[k] = fr * g11_yzz_xxxxzzz[k] + f2g * (g20_zz_xxxxzzz[k] - fgz * g21_zz_xxxxzzz[k]);

                    g_yyzz_xxxyyyy[k] = fr * g11_yzz_xxxyyyy[k] + f2g * (g20_zz_xxxyyyy[k] - fgz * g21_zz_xxxyyyy[k]) + 4.0 * f2t * gk_yzz_xxxyyy[k];

                    g_yyzz_xxxyyyz[k] = fr * g11_yzz_xxxyyyz[k] + f2g * (g20_zz_xxxyyyz[k] - fgz * g21_zz_xxxyyyz[k]) + 3.0 * f2t * gk_yzz_xxxyyz[k];

                    g_yyzz_xxxyyzz[k] = fr * g11_yzz_xxxyyzz[k] + f2g * (g20_zz_xxxyyzz[k] - fgz * g21_zz_xxxyyzz[k]) + 2.0 * f2t * gk_yzz_xxxyzz[k];

                    g_yyzz_xxxyzzz[k] = fr * g11_yzz_xxxyzzz[k] + f2g * (g20_zz_xxxyzzz[k] - fgz * g21_zz_xxxyzzz[k]) + f2t * gk_yzz_xxxzzz[k];

                    g_yyzz_xxxzzzz[k] = fr * g11_yzz_xxxzzzz[k] + f2g * (g20_zz_xxxzzzz[k] - fgz * g21_zz_xxxzzzz[k]);

                    g_yyzz_xxyyyyy[k] = fr * g11_yzz_xxyyyyy[k] + f2g * (g20_zz_xxyyyyy[k] - fgz * g21_zz_xxyyyyy[k]) + 5.0 * f2t * gk_yzz_xxyyyy[k];

                    g_yyzz_xxyyyyz[k] = fr * g11_yzz_xxyyyyz[k] + f2g * (g20_zz_xxyyyyz[k] - fgz * g21_zz_xxyyyyz[k]) + 4.0 * f2t * gk_yzz_xxyyyz[k];

                    g_yyzz_xxyyyzz[k] = fr * g11_yzz_xxyyyzz[k] + f2g * (g20_zz_xxyyyzz[k] - fgz * g21_zz_xxyyyzz[k]) + 3.0 * f2t * gk_yzz_xxyyzz[k];

                    g_yyzz_xxyyzzz[k] = fr * g11_yzz_xxyyzzz[k] + f2g * (g20_zz_xxyyzzz[k] - fgz * g21_zz_xxyyzzz[k]) + 2.0 * f2t * gk_yzz_xxyzzz[k];

                    g_yyzz_xxyzzzz[k] = fr * g11_yzz_xxyzzzz[k] + f2g * (g20_zz_xxyzzzz[k] - fgz * g21_zz_xxyzzzz[k]) + f2t * gk_yzz_xxzzzz[k];

                    g_yyzz_xxzzzzz[k] = fr * g11_yzz_xxzzzzz[k] + f2g * (g20_zz_xxzzzzz[k] - fgz * g21_zz_xxzzzzz[k]);

                    g_yyzz_xyyyyyy[k] = fr * g11_yzz_xyyyyyy[k] + f2g * (g20_zz_xyyyyyy[k] - fgz * g21_zz_xyyyyyy[k]) + 6.0 * f2t * gk_yzz_xyyyyy[k];

                    g_yyzz_xyyyyyz[k] = fr * g11_yzz_xyyyyyz[k] + f2g * (g20_zz_xyyyyyz[k] - fgz * g21_zz_xyyyyyz[k]) + 5.0 * f2t * gk_yzz_xyyyyz[k];

                    g_yyzz_xyyyyzz[k] = fr * g11_yzz_xyyyyzz[k] + f2g * (g20_zz_xyyyyzz[k] - fgz * g21_zz_xyyyyzz[k]) + 4.0 * f2t * gk_yzz_xyyyzz[k];

                    g_yyzz_xyyyzzz[k] = fr * g11_yzz_xyyyzzz[k] + f2g * (g20_zz_xyyyzzz[k] - fgz * g21_zz_xyyyzzz[k]) + 3.0 * f2t * gk_yzz_xyyzzz[k];

                    g_yyzz_xyyzzzz[k] = fr * g11_yzz_xyyzzzz[k] + f2g * (g20_zz_xyyzzzz[k] - fgz * g21_zz_xyyzzzz[k]) + 2.0 * f2t * gk_yzz_xyzzzz[k];

                    g_yyzz_xyzzzzz[k] = fr * g11_yzz_xyzzzzz[k] + f2g * (g20_zz_xyzzzzz[k] - fgz * g21_zz_xyzzzzz[k]) + f2t * gk_yzz_xzzzzz[k];

                    g_yyzz_xzzzzzz[k] = fr * g11_yzz_xzzzzzz[k] + f2g * (g20_zz_xzzzzzz[k] - fgz * g21_zz_xzzzzzz[k]);

                    g_yyzz_yyyyyyy[k] = fr * g11_yzz_yyyyyyy[k] + f2g * (g20_zz_yyyyyyy[k] - fgz * g21_zz_yyyyyyy[k]) + 7.0 * f2t * gk_yzz_yyyyyy[k];

                    g_yyzz_yyyyyyz[k] = fr * g11_yzz_yyyyyyz[k] + f2g * (g20_zz_yyyyyyz[k] - fgz * g21_zz_yyyyyyz[k]) + 6.0 * f2t * gk_yzz_yyyyyz[k];

                    g_yyzz_yyyyyzz[k] = fr * g11_yzz_yyyyyzz[k] + f2g * (g20_zz_yyyyyzz[k] - fgz * g21_zz_yyyyyzz[k]) + 5.0 * f2t * gk_yzz_yyyyzz[k];

                    g_yyzz_yyyyzzz[k] = fr * g11_yzz_yyyyzzz[k] + f2g * (g20_zz_yyyyzzz[k] - fgz * g21_zz_yyyyzzz[k]) + 4.0 * f2t * gk_yzz_yyyzzz[k];

                    g_yyzz_yyyzzzz[k] = fr * g11_yzz_yyyzzzz[k] + f2g * (g20_zz_yyyzzzz[k] - fgz * g21_zz_yyyzzzz[k]) + 3.0 * f2t * gk_yzz_yyzzzz[k];

                    g_yyzz_yyzzzzz[k] = fr * g11_yzz_yyzzzzz[k] + f2g * (g20_zz_yyzzzzz[k] - fgz * g21_zz_yyzzzzz[k]) + 2.0 * f2t * gk_yzz_yzzzzz[k];

                    g_yyzz_yzzzzzz[k] = fr * g11_yzz_yzzzzzz[k] + f2g * (g20_zz_yzzzzzz[k] - fgz * g21_zz_yzzzzzz[k]) + f2t * gk_yzz_zzzzzz[k];

                    g_yyzz_zzzzzzz[k] = fr * g11_yzz_zzzzzzz[k] + f2g * (g20_zz_zzzzzzz[k] - fgz * g21_zz_zzzzzzz[k]);

                    g_yzzz_xxxxxxx[k] = fr * g11_zzz_xxxxxxx[k];

                    g_yzzz_xxxxxxy[k] = fr * g11_zzz_xxxxxxy[k] + f2t * gk_zzz_xxxxxx[k];

                    g_yzzz_xxxxxxz[k] = fr * g11_zzz_xxxxxxz[k];

                    g_yzzz_xxxxxyy[k] = fr * g11_zzz_xxxxxyy[k] + 2.0 * f2t * gk_zzz_xxxxxy[k];

                    g_yzzz_xxxxxyz[k] = fr * g11_zzz_xxxxxyz[k] + f2t * gk_zzz_xxxxxz[k];

                    g_yzzz_xxxxxzz[k] = fr * g11_zzz_xxxxxzz[k];

                    g_yzzz_xxxxyyy[k] = fr * g11_zzz_xxxxyyy[k] + 3.0 * f2t * gk_zzz_xxxxyy[k];

                    g_yzzz_xxxxyyz[k] = fr * g11_zzz_xxxxyyz[k] + 2.0 * f2t * gk_zzz_xxxxyz[k];

                    g_yzzz_xxxxyzz[k] = fr * g11_zzz_xxxxyzz[k] + f2t * gk_zzz_xxxxzz[k];

                    g_yzzz_xxxxzzz[k] = fr * g11_zzz_xxxxzzz[k];

                    g_yzzz_xxxyyyy[k] = fr * g11_zzz_xxxyyyy[k] + 4.0 * f2t * gk_zzz_xxxyyy[k];

                    g_yzzz_xxxyyyz[k] = fr * g11_zzz_xxxyyyz[k] + 3.0 * f2t * gk_zzz_xxxyyz[k];

                    g_yzzz_xxxyyzz[k] = fr * g11_zzz_xxxyyzz[k] + 2.0 * f2t * gk_zzz_xxxyzz[k];

                    g_yzzz_xxxyzzz[k] = fr * g11_zzz_xxxyzzz[k] + f2t * gk_zzz_xxxzzz[k];

                    g_yzzz_xxxzzzz[k] = fr * g11_zzz_xxxzzzz[k];

                    g_yzzz_xxyyyyy[k] = fr * g11_zzz_xxyyyyy[k] + 5.0 * f2t * gk_zzz_xxyyyy[k];

                    g_yzzz_xxyyyyz[k] = fr * g11_zzz_xxyyyyz[k] + 4.0 * f2t * gk_zzz_xxyyyz[k];

                    g_yzzz_xxyyyzz[k] = fr * g11_zzz_xxyyyzz[k] + 3.0 * f2t * gk_zzz_xxyyzz[k];

                    g_yzzz_xxyyzzz[k] = fr * g11_zzz_xxyyzzz[k] + 2.0 * f2t * gk_zzz_xxyzzz[k];

                    g_yzzz_xxyzzzz[k] = fr * g11_zzz_xxyzzzz[k] + f2t * gk_zzz_xxzzzz[k];

                    g_yzzz_xxzzzzz[k] = fr * g11_zzz_xxzzzzz[k];

                    g_yzzz_xyyyyyy[k] = fr * g11_zzz_xyyyyyy[k] + 6.0 * f2t * gk_zzz_xyyyyy[k];

                    g_yzzz_xyyyyyz[k] = fr * g11_zzz_xyyyyyz[k] + 5.0 * f2t * gk_zzz_xyyyyz[k];

                    g_yzzz_xyyyyzz[k] = fr * g11_zzz_xyyyyzz[k] + 4.0 * f2t * gk_zzz_xyyyzz[k];

                    g_yzzz_xyyyzzz[k] = fr * g11_zzz_xyyyzzz[k] + 3.0 * f2t * gk_zzz_xyyzzz[k];

                    g_yzzz_xyyzzzz[k] = fr * g11_zzz_xyyzzzz[k] + 2.0 * f2t * gk_zzz_xyzzzz[k];

                    g_yzzz_xyzzzzz[k] = fr * g11_zzz_xyzzzzz[k] + f2t * gk_zzz_xzzzzz[k];

                    g_yzzz_xzzzzzz[k] = fr * g11_zzz_xzzzzzz[k];

                    g_yzzz_yyyyyyy[k] = fr * g11_zzz_yyyyyyy[k] + 7.0 * f2t * gk_zzz_yyyyyy[k];

                    g_yzzz_yyyyyyz[k] = fr * g11_zzz_yyyyyyz[k] + 6.0 * f2t * gk_zzz_yyyyyz[k];

                    g_yzzz_yyyyyzz[k] = fr * g11_zzz_yyyyyzz[k] + 5.0 * f2t * gk_zzz_yyyyzz[k];

                    g_yzzz_yyyyzzz[k] = fr * g11_zzz_yyyyzzz[k] + 4.0 * f2t * gk_zzz_yyyzzz[k];

                    g_yzzz_yyyzzzz[k] = fr * g11_zzz_yyyzzzz[k] + 3.0 * f2t * gk_zzz_yyzzzz[k];

                    g_yzzz_yyzzzzz[k] = fr * g11_zzz_yyzzzzz[k] + 2.0 * f2t * gk_zzz_yzzzzz[k];

                    g_yzzz_yzzzzzz[k] = fr * g11_zzz_yzzzzzz[k] + f2t * gk_zzz_zzzzzz[k];

                    g_yzzz_zzzzzzz[k] = fr * g11_zzz_zzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxxxxxx[k] = fr * g11_zzz_xxxxxxx[k] + f2g * (3.0 * g20_zz_xxxxxxx[k] - 3.0 * fgz * g21_zz_xxxxxxx[k]);

                    g_zzzz_xxxxxxy[k] = fr * g11_zzz_xxxxxxy[k] + f2g * (3.0 * g20_zz_xxxxxxy[k] - 3.0 * fgz * g21_zz_xxxxxxy[k]);

                    g_zzzz_xxxxxxz[k] = fr * g11_zzz_xxxxxxz[k] + f2g * (3.0 * g20_zz_xxxxxxz[k] - 3.0 * fgz * g21_zz_xxxxxxz[k]) + f2t * gk_zzz_xxxxxx[k];

                    g_zzzz_xxxxxyy[k] = fr * g11_zzz_xxxxxyy[k] + f2g * (3.0 * g20_zz_xxxxxyy[k] - 3.0 * fgz * g21_zz_xxxxxyy[k]);

                    g_zzzz_xxxxxyz[k] = fr * g11_zzz_xxxxxyz[k] + f2g * (3.0 * g20_zz_xxxxxyz[k] - 3.0 * fgz * g21_zz_xxxxxyz[k]) + f2t * gk_zzz_xxxxxy[k];

                    g_zzzz_xxxxxzz[k] = fr * g11_zzz_xxxxxzz[k] + f2g * (3.0 * g20_zz_xxxxxzz[k] - 3.0 * fgz * g21_zz_xxxxxzz[k]) + 2.0 * f2t * gk_zzz_xxxxxz[k];

                    g_zzzz_xxxxyyy[k] = fr * g11_zzz_xxxxyyy[k] + f2g * (3.0 * g20_zz_xxxxyyy[k] - 3.0 * fgz * g21_zz_xxxxyyy[k]);

                    g_zzzz_xxxxyyz[k] = fr * g11_zzz_xxxxyyz[k] + f2g * (3.0 * g20_zz_xxxxyyz[k] - 3.0 * fgz * g21_zz_xxxxyyz[k]) + f2t * gk_zzz_xxxxyy[k];

                    g_zzzz_xxxxyzz[k] = fr * g11_zzz_xxxxyzz[k] + f2g * (3.0 * g20_zz_xxxxyzz[k] - 3.0 * fgz * g21_zz_xxxxyzz[k]) + 2.0 * f2t * gk_zzz_xxxxyz[k];

                    g_zzzz_xxxxzzz[k] = fr * g11_zzz_xxxxzzz[k] + f2g * (3.0 * g20_zz_xxxxzzz[k] - 3.0 * fgz * g21_zz_xxxxzzz[k]) + 3.0 * f2t * gk_zzz_xxxxzz[k];

                    g_zzzz_xxxyyyy[k] = fr * g11_zzz_xxxyyyy[k] + f2g * (3.0 * g20_zz_xxxyyyy[k] - 3.0 * fgz * g21_zz_xxxyyyy[k]);

                    g_zzzz_xxxyyyz[k] = fr * g11_zzz_xxxyyyz[k] + f2g * (3.0 * g20_zz_xxxyyyz[k] - 3.0 * fgz * g21_zz_xxxyyyz[k]) + f2t * gk_zzz_xxxyyy[k];

                    g_zzzz_xxxyyzz[k] = fr * g11_zzz_xxxyyzz[k] + f2g * (3.0 * g20_zz_xxxyyzz[k] - 3.0 * fgz * g21_zz_xxxyyzz[k]) + 2.0 * f2t * gk_zzz_xxxyyz[k];

                    g_zzzz_xxxyzzz[k] = fr * g11_zzz_xxxyzzz[k] + f2g * (3.0 * g20_zz_xxxyzzz[k] - 3.0 * fgz * g21_zz_xxxyzzz[k]) + 3.0 * f2t * gk_zzz_xxxyzz[k];

                    g_zzzz_xxxzzzz[k] = fr * g11_zzz_xxxzzzz[k] + f2g * (3.0 * g20_zz_xxxzzzz[k] - 3.0 * fgz * g21_zz_xxxzzzz[k]) + 4.0 * f2t * gk_zzz_xxxzzz[k];

                    g_zzzz_xxyyyyy[k] = fr * g11_zzz_xxyyyyy[k] + f2g * (3.0 * g20_zz_xxyyyyy[k] - 3.0 * fgz * g21_zz_xxyyyyy[k]);

                    g_zzzz_xxyyyyz[k] = fr * g11_zzz_xxyyyyz[k] + f2g * (3.0 * g20_zz_xxyyyyz[k] - 3.0 * fgz * g21_zz_xxyyyyz[k]) + f2t * gk_zzz_xxyyyy[k];

                    g_zzzz_xxyyyzz[k] = fr * g11_zzz_xxyyyzz[k] + f2g * (3.0 * g20_zz_xxyyyzz[k] - 3.0 * fgz * g21_zz_xxyyyzz[k]) + 2.0 * f2t * gk_zzz_xxyyyz[k];

                    g_zzzz_xxyyzzz[k] = fr * g11_zzz_xxyyzzz[k] + f2g * (3.0 * g20_zz_xxyyzzz[k] - 3.0 * fgz * g21_zz_xxyyzzz[k]) + 3.0 * f2t * gk_zzz_xxyyzz[k];

                    g_zzzz_xxyzzzz[k] = fr * g11_zzz_xxyzzzz[k] + f2g * (3.0 * g20_zz_xxyzzzz[k] - 3.0 * fgz * g21_zz_xxyzzzz[k]) + 4.0 * f2t * gk_zzz_xxyzzz[k];

                    g_zzzz_xxzzzzz[k] = fr * g11_zzz_xxzzzzz[k] + f2g * (3.0 * g20_zz_xxzzzzz[k] - 3.0 * fgz * g21_zz_xxzzzzz[k]) + 5.0 * f2t * gk_zzz_xxzzzz[k];

                    g_zzzz_xyyyyyy[k] = fr * g11_zzz_xyyyyyy[k] + f2g * (3.0 * g20_zz_xyyyyyy[k] - 3.0 * fgz * g21_zz_xyyyyyy[k]);

                    g_zzzz_xyyyyyz[k] = fr * g11_zzz_xyyyyyz[k] + f2g * (3.0 * g20_zz_xyyyyyz[k] - 3.0 * fgz * g21_zz_xyyyyyz[k]) + f2t * gk_zzz_xyyyyy[k];

                    g_zzzz_xyyyyzz[k] = fr * g11_zzz_xyyyyzz[k] + f2g * (3.0 * g20_zz_xyyyyzz[k] - 3.0 * fgz * g21_zz_xyyyyzz[k]) + 2.0 * f2t * gk_zzz_xyyyyz[k];

                    g_zzzz_xyyyzzz[k] = fr * g11_zzz_xyyyzzz[k] + f2g * (3.0 * g20_zz_xyyyzzz[k] - 3.0 * fgz * g21_zz_xyyyzzz[k]) + 3.0 * f2t * gk_zzz_xyyyzz[k];

                    g_zzzz_xyyzzzz[k] = fr * g11_zzz_xyyzzzz[k] + f2g * (3.0 * g20_zz_xyyzzzz[k] - 3.0 * fgz * g21_zz_xyyzzzz[k]) + 4.0 * f2t * gk_zzz_xyyzzz[k];

                    g_zzzz_xyzzzzz[k] = fr * g11_zzz_xyzzzzz[k] + f2g * (3.0 * g20_zz_xyzzzzz[k] - 3.0 * fgz * g21_zz_xyzzzzz[k]) + 5.0 * f2t * gk_zzz_xyzzzz[k];

                    g_zzzz_xzzzzzz[k] = fr * g11_zzz_xzzzzzz[k] + f2g * (3.0 * g20_zz_xzzzzzz[k] - 3.0 * fgz * g21_zz_xzzzzzz[k]) + 6.0 * f2t * gk_zzz_xzzzzz[k];

                    g_zzzz_yyyyyyy[k] = fr * g11_zzz_yyyyyyy[k] + f2g * (3.0 * g20_zz_yyyyyyy[k] - 3.0 * fgz * g21_zz_yyyyyyy[k]);

                    g_zzzz_yyyyyyz[k] = fr * g11_zzz_yyyyyyz[k] + f2g * (3.0 * g20_zz_yyyyyyz[k] - 3.0 * fgz * g21_zz_yyyyyyz[k]) + f2t * gk_zzz_yyyyyy[k];

                    g_zzzz_yyyyyzz[k] = fr * g11_zzz_yyyyyzz[k] + f2g * (3.0 * g20_zz_yyyyyzz[k] - 3.0 * fgz * g21_zz_yyyyyzz[k]) + 2.0 * f2t * gk_zzz_yyyyyz[k];

                    g_zzzz_yyyyzzz[k] = fr * g11_zzz_yyyyzzz[k] + f2g * (3.0 * g20_zz_yyyyzzz[k] - 3.0 * fgz * g21_zz_yyyyzzz[k]) + 3.0 * f2t * gk_zzz_yyyyzz[k];

                    g_zzzz_yyyzzzz[k] = fr * g11_zzz_yyyzzzz[k] + f2g * (3.0 * g20_zz_yyyzzzz[k] - 3.0 * fgz * g21_zz_yyyzzzz[k]) + 4.0 * f2t * gk_zzz_yyyzzz[k];

                    g_zzzz_yyzzzzz[k] = fr * g11_zzz_yyzzzzz[k] + f2g * (3.0 * g20_zz_yyzzzzz[k] - 3.0 * fgz * g21_zz_yyzzzzz[k]) + 5.0 * f2t * gk_zzz_yyzzzz[k];

                    g_zzzz_yzzzzzz[k] = fr * g11_zzz_yzzzzzz[k] + f2g * (3.0 * g20_zz_yzzzzzz[k] - 3.0 * fgz * g21_zz_yzzzzzz[k]) + 6.0 * f2t * gk_zzz_yzzzzz[k];

                    g_zzzz_zzzzzzz[k] = fr * g11_zzz_zzzzzzz[k] + f2g * (3.0 * g20_zz_zzzzzzz[k] - 3.0 * fgz * g21_zz_zzzzzzz[k]) + 7.0 * f2t * gk_zzz_zzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForSSL(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  wqDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 0, 8);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // set up pointers to distances R(QD)

        auto qdx = ketGtoPairsBlock.getDistancesPBX();

        auto qdy = ketGtoPairsBlock.getDistancesPBY();

        auto qdz = ketGtoPairsBlock.getDistancesPBZ();

        // set up pointers to common Obara-Saika factor

        auto fgb = ketGtoPairsBlock.getFactorsOneOverXi();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {0, 8, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g10off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 7, i});

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 7, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 6, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fzb = osFactors.data(5 * idx + 4);

                // set up pointers to distances R(WQ)

                auto wqx = wqDistances.data(3 * idx);

                auto wqy = wqDistances.data(3 * idx + 1);

                auto wqz = wqDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SI)^(m) integrals

                auto g20_0_xxxxxx = primBuffer.data(g20off + 28 * idx);

                auto g20_0_xxxxxy = primBuffer.data(g20off + 28 * idx + 1);

                auto g20_0_xxxxxz = primBuffer.data(g20off + 28 * idx + 2);

                auto g20_0_xxxxyy = primBuffer.data(g20off + 28 * idx + 3);

                auto g20_0_xxxxyz = primBuffer.data(g20off + 28 * idx + 4);

                auto g20_0_xxxxzz = primBuffer.data(g20off + 28 * idx + 5);

                auto g20_0_xxxyyy = primBuffer.data(g20off + 28 * idx + 6);

                auto g20_0_xxxyyz = primBuffer.data(g20off + 28 * idx + 7);

                auto g20_0_xxxyzz = primBuffer.data(g20off + 28 * idx + 8);

                auto g20_0_xxxzzz = primBuffer.data(g20off + 28 * idx + 9);

                auto g20_0_xxyyyy = primBuffer.data(g20off + 28 * idx + 10);

                auto g20_0_xxyyyz = primBuffer.data(g20off + 28 * idx + 11);

                auto g20_0_xxyyzz = primBuffer.data(g20off + 28 * idx + 12);

                auto g20_0_xxyzzz = primBuffer.data(g20off + 28 * idx + 13);

                auto g20_0_xxzzzz = primBuffer.data(g20off + 28 * idx + 14);

                auto g20_0_xyyyyy = primBuffer.data(g20off + 28 * idx + 15);

                auto g20_0_xyyyyz = primBuffer.data(g20off + 28 * idx + 16);

                auto g20_0_xyyyzz = primBuffer.data(g20off + 28 * idx + 17);

                auto g20_0_xyyzzz = primBuffer.data(g20off + 28 * idx + 18);

                auto g20_0_xyzzzz = primBuffer.data(g20off + 28 * idx + 19);

                auto g20_0_xzzzzz = primBuffer.data(g20off + 28 * idx + 20);

                auto g20_0_yyyyyy = primBuffer.data(g20off + 28 * idx + 21);

                auto g20_0_yyyyyz = primBuffer.data(g20off + 28 * idx + 22);

                auto g20_0_yyyyzz = primBuffer.data(g20off + 28 * idx + 23);

                auto g20_0_yyyzzz = primBuffer.data(g20off + 28 * idx + 24);

                auto g20_0_yyzzzz = primBuffer.data(g20off + 28 * idx + 25);

                auto g20_0_yzzzzz = primBuffer.data(g20off + 28 * idx + 26);

                auto g20_0_zzzzzz = primBuffer.data(g20off + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SI)^(m+1) integrals

                auto g21_0_xxxxxx = primBuffer.data(g21off + 28 * idx);

                auto g21_0_xxxxxy = primBuffer.data(g21off + 28 * idx + 1);

                auto g21_0_xxxxxz = primBuffer.data(g21off + 28 * idx + 2);

                auto g21_0_xxxxyy = primBuffer.data(g21off + 28 * idx + 3);

                auto g21_0_xxxxyz = primBuffer.data(g21off + 28 * idx + 4);

                auto g21_0_xxxxzz = primBuffer.data(g21off + 28 * idx + 5);

                auto g21_0_xxxyyy = primBuffer.data(g21off + 28 * idx + 6);

                auto g21_0_xxxyyz = primBuffer.data(g21off + 28 * idx + 7);

                auto g21_0_xxxyzz = primBuffer.data(g21off + 28 * idx + 8);

                auto g21_0_xxxzzz = primBuffer.data(g21off + 28 * idx + 9);

                auto g21_0_xxyyyy = primBuffer.data(g21off + 28 * idx + 10);

                auto g21_0_xxyyyz = primBuffer.data(g21off + 28 * idx + 11);

                auto g21_0_xxyyzz = primBuffer.data(g21off + 28 * idx + 12);

                auto g21_0_xxyzzz = primBuffer.data(g21off + 28 * idx + 13);

                auto g21_0_xxzzzz = primBuffer.data(g21off + 28 * idx + 14);

                auto g21_0_xyyyyy = primBuffer.data(g21off + 28 * idx + 15);

                auto g21_0_xyyyyz = primBuffer.data(g21off + 28 * idx + 16);

                auto g21_0_xyyyzz = primBuffer.data(g21off + 28 * idx + 17);

                auto g21_0_xyyzzz = primBuffer.data(g21off + 28 * idx + 18);

                auto g21_0_xyzzzz = primBuffer.data(g21off + 28 * idx + 19);

                auto g21_0_xzzzzz = primBuffer.data(g21off + 28 * idx + 20);

                auto g21_0_yyyyyy = primBuffer.data(g21off + 28 * idx + 21);

                auto g21_0_yyyyyz = primBuffer.data(g21off + 28 * idx + 22);

                auto g21_0_yyyyzz = primBuffer.data(g21off + 28 * idx + 23);

                auto g21_0_yyyzzz = primBuffer.data(g21off + 28 * idx + 24);

                auto g21_0_yyzzzz = primBuffer.data(g21off + 28 * idx + 25);

                auto g21_0_yzzzzz = primBuffer.data(g21off + 28 * idx + 26);

                auto g21_0_zzzzzz = primBuffer.data(g21off + 28 * idx + 27);

                // set up pointers to (S|g(r,r')|SK)^(m) integrals

                auto g10_0_xxxxxxx = primBuffer.data(g10off + 36 * idx);

                auto g10_0_xxxxxxy = primBuffer.data(g10off + 36 * idx + 1);

                auto g10_0_xxxxxxz = primBuffer.data(g10off + 36 * idx + 2);

                auto g10_0_xxxxxyy = primBuffer.data(g10off + 36 * idx + 3);

                auto g10_0_xxxxxyz = primBuffer.data(g10off + 36 * idx + 4);

                auto g10_0_xxxxxzz = primBuffer.data(g10off + 36 * idx + 5);

                auto g10_0_xxxxyyy = primBuffer.data(g10off + 36 * idx + 6);

                auto g10_0_xxxxyyz = primBuffer.data(g10off + 36 * idx + 7);

                auto g10_0_xxxxyzz = primBuffer.data(g10off + 36 * idx + 8);

                auto g10_0_xxxxzzz = primBuffer.data(g10off + 36 * idx + 9);

                auto g10_0_xxxyyyy = primBuffer.data(g10off + 36 * idx + 10);

                auto g10_0_xxxyyyz = primBuffer.data(g10off + 36 * idx + 11);

                auto g10_0_xxxyyzz = primBuffer.data(g10off + 36 * idx + 12);

                auto g10_0_xxxyzzz = primBuffer.data(g10off + 36 * idx + 13);

                auto g10_0_xxxzzzz = primBuffer.data(g10off + 36 * idx + 14);

                auto g10_0_xxyyyyy = primBuffer.data(g10off + 36 * idx + 15);

                auto g10_0_xxyyyyz = primBuffer.data(g10off + 36 * idx + 16);

                auto g10_0_xxyyyzz = primBuffer.data(g10off + 36 * idx + 17);

                auto g10_0_xxyyzzz = primBuffer.data(g10off + 36 * idx + 18);

                auto g10_0_xxyzzzz = primBuffer.data(g10off + 36 * idx + 19);

                auto g10_0_xxzzzzz = primBuffer.data(g10off + 36 * idx + 20);

                auto g10_0_xyyyyyy = primBuffer.data(g10off + 36 * idx + 21);

                auto g10_0_xyyyyyz = primBuffer.data(g10off + 36 * idx + 22);

                auto g10_0_xyyyyzz = primBuffer.data(g10off + 36 * idx + 23);

                auto g10_0_xyyyzzz = primBuffer.data(g10off + 36 * idx + 24);

                auto g10_0_xyyzzzz = primBuffer.data(g10off + 36 * idx + 25);

                auto g10_0_xyzzzzz = primBuffer.data(g10off + 36 * idx + 26);

                auto g10_0_xzzzzzz = primBuffer.data(g10off + 36 * idx + 27);

                auto g10_0_yyyyyyy = primBuffer.data(g10off + 36 * idx + 28);

                auto g10_0_yyyyyyz = primBuffer.data(g10off + 36 * idx + 29);

                auto g10_0_yyyyyzz = primBuffer.data(g10off + 36 * idx + 30);

                auto g10_0_yyyyzzz = primBuffer.data(g10off + 36 * idx + 31);

                auto g10_0_yyyzzzz = primBuffer.data(g10off + 36 * idx + 32);

                auto g10_0_yyzzzzz = primBuffer.data(g10off + 36 * idx + 33);

                auto g10_0_yzzzzzz = primBuffer.data(g10off + 36 * idx + 34);

                auto g10_0_zzzzzzz = primBuffer.data(g10off + 36 * idx + 35);

                // set up pointers to (S|g(r,r')|SK)^(m+1) integrals

                auto g11_0_xxxxxxx = primBuffer.data(g11off + 36 * idx);

                auto g11_0_xxxxxxy = primBuffer.data(g11off + 36 * idx + 1);

                auto g11_0_xxxxxxz = primBuffer.data(g11off + 36 * idx + 2);

                auto g11_0_xxxxxyy = primBuffer.data(g11off + 36 * idx + 3);

                auto g11_0_xxxxxyz = primBuffer.data(g11off + 36 * idx + 4);

                auto g11_0_xxxxxzz = primBuffer.data(g11off + 36 * idx + 5);

                auto g11_0_xxxxyyy = primBuffer.data(g11off + 36 * idx + 6);

                auto g11_0_xxxxyyz = primBuffer.data(g11off + 36 * idx + 7);

                auto g11_0_xxxxyzz = primBuffer.data(g11off + 36 * idx + 8);

                auto g11_0_xxxxzzz = primBuffer.data(g11off + 36 * idx + 9);

                auto g11_0_xxxyyyy = primBuffer.data(g11off + 36 * idx + 10);

                auto g11_0_xxxyyyz = primBuffer.data(g11off + 36 * idx + 11);

                auto g11_0_xxxyyzz = primBuffer.data(g11off + 36 * idx + 12);

                auto g11_0_xxxyzzz = primBuffer.data(g11off + 36 * idx + 13);

                auto g11_0_xxxzzzz = primBuffer.data(g11off + 36 * idx + 14);

                auto g11_0_xxyyyyy = primBuffer.data(g11off + 36 * idx + 15);

                auto g11_0_xxyyyyz = primBuffer.data(g11off + 36 * idx + 16);

                auto g11_0_xxyyyzz = primBuffer.data(g11off + 36 * idx + 17);

                auto g11_0_xxyyzzz = primBuffer.data(g11off + 36 * idx + 18);

                auto g11_0_xxyzzzz = primBuffer.data(g11off + 36 * idx + 19);

                auto g11_0_xxzzzzz = primBuffer.data(g11off + 36 * idx + 20);

                auto g11_0_xyyyyyy = primBuffer.data(g11off + 36 * idx + 21);

                auto g11_0_xyyyyyz = primBuffer.data(g11off + 36 * idx + 22);

                auto g11_0_xyyyyzz = primBuffer.data(g11off + 36 * idx + 23);

                auto g11_0_xyyyzzz = primBuffer.data(g11off + 36 * idx + 24);

                auto g11_0_xyyzzzz = primBuffer.data(g11off + 36 * idx + 25);

                auto g11_0_xyzzzzz = primBuffer.data(g11off + 36 * idx + 26);

                auto g11_0_xzzzzzz = primBuffer.data(g11off + 36 * idx + 27);

                auto g11_0_yyyyyyy = primBuffer.data(g11off + 36 * idx + 28);

                auto g11_0_yyyyyyz = primBuffer.data(g11off + 36 * idx + 29);

                auto g11_0_yyyyyzz = primBuffer.data(g11off + 36 * idx + 30);

                auto g11_0_yyyyzzz = primBuffer.data(g11off + 36 * idx + 31);

                auto g11_0_yyyzzzz = primBuffer.data(g11off + 36 * idx + 32);

                auto g11_0_yyzzzzz = primBuffer.data(g11off + 36 * idx + 33);

                auto g11_0_yzzzzzz = primBuffer.data(g11off + 36 * idx + 34);

                auto g11_0_zzzzzzz = primBuffer.data(g11off + 36 * idx + 35);

                // set up pointers to (S|g(r,r')|SL)^(m) integrals

                auto g_0_xxxxxxxx = primBuffer.data(goff + 45 * idx);

                auto g_0_xxxxxxxy = primBuffer.data(goff + 45 * idx + 1);

                auto g_0_xxxxxxxz = primBuffer.data(goff + 45 * idx + 2);

                auto g_0_xxxxxxyy = primBuffer.data(goff + 45 * idx + 3);

                auto g_0_xxxxxxyz = primBuffer.data(goff + 45 * idx + 4);

                auto g_0_xxxxxxzz = primBuffer.data(goff + 45 * idx + 5);

                auto g_0_xxxxxyyy = primBuffer.data(goff + 45 * idx + 6);

                auto g_0_xxxxxyyz = primBuffer.data(goff + 45 * idx + 7);

                auto g_0_xxxxxyzz = primBuffer.data(goff + 45 * idx + 8);

                auto g_0_xxxxxzzz = primBuffer.data(goff + 45 * idx + 9);

                auto g_0_xxxxyyyy = primBuffer.data(goff + 45 * idx + 10);

                auto g_0_xxxxyyyz = primBuffer.data(goff + 45 * idx + 11);

                auto g_0_xxxxyyzz = primBuffer.data(goff + 45 * idx + 12);

                auto g_0_xxxxyzzz = primBuffer.data(goff + 45 * idx + 13);

                auto g_0_xxxxzzzz = primBuffer.data(goff + 45 * idx + 14);

                auto g_0_xxxyyyyy = primBuffer.data(goff + 45 * idx + 15);

                auto g_0_xxxyyyyz = primBuffer.data(goff + 45 * idx + 16);

                auto g_0_xxxyyyzz = primBuffer.data(goff + 45 * idx + 17);

                auto g_0_xxxyyzzz = primBuffer.data(goff + 45 * idx + 18);

                auto g_0_xxxyzzzz = primBuffer.data(goff + 45 * idx + 19);

                auto g_0_xxxzzzzz = primBuffer.data(goff + 45 * idx + 20);

                auto g_0_xxyyyyyy = primBuffer.data(goff + 45 * idx + 21);

                auto g_0_xxyyyyyz = primBuffer.data(goff + 45 * idx + 22);

                auto g_0_xxyyyyzz = primBuffer.data(goff + 45 * idx + 23);

                auto g_0_xxyyyzzz = primBuffer.data(goff + 45 * idx + 24);

                auto g_0_xxyyzzzz = primBuffer.data(goff + 45 * idx + 25);

                auto g_0_xxyzzzzz = primBuffer.data(goff + 45 * idx + 26);

                auto g_0_xxzzzzzz = primBuffer.data(goff + 45 * idx + 27);

                auto g_0_xyyyyyyy = primBuffer.data(goff + 45 * idx + 28);

                auto g_0_xyyyyyyz = primBuffer.data(goff + 45 * idx + 29);

                auto g_0_xyyyyyzz = primBuffer.data(goff + 45 * idx + 30);

                auto g_0_xyyyyzzz = primBuffer.data(goff + 45 * idx + 31);

                auto g_0_xyyyzzzz = primBuffer.data(goff + 45 * idx + 32);

                auto g_0_xyyzzzzz = primBuffer.data(goff + 45 * idx + 33);

                auto g_0_xyzzzzzz = primBuffer.data(goff + 45 * idx + 34);

                auto g_0_xzzzzzzz = primBuffer.data(goff + 45 * idx + 35);

                auto g_0_yyyyyyyy = primBuffer.data(goff + 45 * idx + 36);

                auto g_0_yyyyyyyz = primBuffer.data(goff + 45 * idx + 37);

                auto g_0_yyyyyyzz = primBuffer.data(goff + 45 * idx + 38);

                auto g_0_yyyyyzzz = primBuffer.data(goff + 45 * idx + 39);

                auto g_0_yyyyzzzz = primBuffer.data(goff + 45 * idx + 40);

                auto g_0_yyyzzzzz = primBuffer.data(goff + 45 * idx + 41);

                auto g_0_yyzzzzzz = primBuffer.data(goff + 45 * idx + 42);

                auto g_0_yzzzzzzz = primBuffer.data(goff + 45 * idx + 43);

                auto g_0_zzzzzzzz = primBuffer.data(goff + 45 * idx + 44);

                #pragma omp simd aligned(qdx, qdy, qdz, wqx, wqy, wqz, fgb, fzb,\
                                         g20_0_xxxxxx, g20_0_xxxxxy, g20_0_xxxxxz,\
                                         g20_0_xxxxyy, g20_0_xxxxyz, g20_0_xxxxzz,\
                                         g20_0_xxxyyy, g20_0_xxxyyz, g20_0_xxxyzz,\
                                         g20_0_xxxzzz, g20_0_xxyyyy, g20_0_xxyyyz,\
                                         g20_0_xxyyzz, g20_0_xxyzzz, g20_0_xxzzzz,\
                                         g20_0_xyyyyy, g20_0_xyyyyz, g20_0_xyyyzz,\
                                         g20_0_xyyzzz, g20_0_xyzzzz, g20_0_xzzzzz,\
                                         g20_0_yyyyyy, g20_0_yyyyyz, g20_0_yyyyzz,\
                                         g20_0_yyyzzz, g20_0_yyzzzz, g20_0_yzzzzz,\
                                         g20_0_zzzzzz, g21_0_xxxxxx, g21_0_xxxxxy,\
                                         g21_0_xxxxxz, g21_0_xxxxyy, g21_0_xxxxyz,\
                                         g21_0_xxxxzz, g21_0_xxxyyy, g21_0_xxxyyz,\
                                         g21_0_xxxyzz, g21_0_xxxzzz, g21_0_xxyyyy,\
                                         g21_0_xxyyyz, g21_0_xxyyzz, g21_0_xxyzzz,\
                                         g21_0_xxzzzz, g21_0_xyyyyy, g21_0_xyyyyz,\
                                         g21_0_xyyyzz, g21_0_xyyzzz, g21_0_xyzzzz,\
                                         g21_0_xzzzzz, g21_0_yyyyyy, g21_0_yyyyyz,\
                                         g21_0_yyyyzz, g21_0_yyyzzz, g21_0_yyzzzz,\
                                         g21_0_yzzzzz, g21_0_zzzzzz, g10_0_xxxxxxx,\
                                         g10_0_xxxxxxy, g10_0_xxxxxxz, g10_0_xxxxxyy,\
                                         g10_0_xxxxxyz, g10_0_xxxxxzz, g10_0_xxxxyyy,\
                                         g10_0_xxxxyyz, g10_0_xxxxyzz, g10_0_xxxxzzz,\
                                         g10_0_xxxyyyy, g10_0_xxxyyyz, g10_0_xxxyyzz,\
                                         g10_0_xxxyzzz, g10_0_xxxzzzz, g10_0_xxyyyyy,\
                                         g10_0_xxyyyyz, g10_0_xxyyyzz, g10_0_xxyyzzz,\
                                         g10_0_xxyzzzz, g10_0_xxzzzzz, g10_0_xyyyyyy,\
                                         g10_0_xyyyyyz, g10_0_xyyyyzz, g10_0_xyyyzzz,\
                                         g10_0_xyyzzzz, g10_0_xyzzzzz, g10_0_xzzzzzz,\
                                         g10_0_yyyyyyy, g10_0_yyyyyyz, g10_0_yyyyyzz,\
                                         g10_0_yyyyzzz, g10_0_yyyzzzz, g10_0_yyzzzzz,\
                                         g10_0_yzzzzzz, g10_0_zzzzzzz, g11_0_xxxxxxx,\
                                         g11_0_xxxxxxy, g11_0_xxxxxxz, g11_0_xxxxxyy,\
                                         g11_0_xxxxxyz, g11_0_xxxxxzz, g11_0_xxxxyyy,\
                                         g11_0_xxxxyyz, g11_0_xxxxyzz, g11_0_xxxxzzz,\
                                         g11_0_xxxyyyy, g11_0_xxxyyyz, g11_0_xxxyyzz,\
                                         g11_0_xxxyzzz, g11_0_xxxzzzz, g11_0_xxyyyyy,\
                                         g11_0_xxyyyyz, g11_0_xxyyyzz, g11_0_xxyyzzz,\
                                         g11_0_xxyzzzz, g11_0_xxzzzzz, g11_0_xyyyyyy,\
                                         g11_0_xyyyyyz, g11_0_xyyyyzz, g11_0_xyyyzzz,\
                                         g11_0_xyyzzzz, g11_0_xyzzzzz, g11_0_xzzzzzz,\
                                         g11_0_yyyyyyy, g11_0_yyyyyyz, g11_0_yyyyyzz,\
                                         g11_0_yyyyzzz, g11_0_yyyzzzz, g11_0_yyzzzzz,\
                                         g11_0_yzzzzzz, g11_0_zzzzzzz, g_0_xxxxxxxx,\
                                         g_0_xxxxxxxy, g_0_xxxxxxxz, g_0_xxxxxxyy,\
                                         g_0_xxxxxxyz, g_0_xxxxxxzz, g_0_xxxxxyyy,\
                                         g_0_xxxxxyyz, g_0_xxxxxyzz, g_0_xxxxxzzz,\
                                         g_0_xxxxyyyy, g_0_xxxxyyyz, g_0_xxxxyyzz,\
                                         g_0_xxxxyzzz, g_0_xxxxzzzz, g_0_xxxyyyyy,\
                                         g_0_xxxyyyyz, g_0_xxxyyyzz, g_0_xxxyyzzz,\
                                         g_0_xxxyzzzz, g_0_xxxzzzzz, g_0_xxyyyyyy,\
                                         g_0_xxyyyyyz, g_0_xxyyyyzz, g_0_xxyyyzzz,\
                                         g_0_xxyyzzzz, g_0_xxyzzzzz, g_0_xxzzzzzz,\
                                         g_0_xyyyyyyy, g_0_xyyyyyyz, g_0_xyyyyyzz,\
                                         g_0_xyyyyzzz, g_0_xyyyzzzz, g_0_xyyzzzzz,\
                                         g_0_xyzzzzzz, g_0_xzzzzzzz, g_0_yyyyyyyy,\
                                         g_0_yyyyyyyz, g_0_yyyyyyzz, g_0_yyyyyzzz,\
                                         g_0_yyyyzzzz, g_0_yyyzzzzz, g_0_yyzzzzzz,\
                                         g_0_yzzzzzzz, g_0_zzzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactors

                    double f2g = 0.50 * fgb[k];

                    double fgz = fzb[k];

                    // leading x component

                    double fra = qdx[k];

                    double frb = wqx[k];

                    g_0_xxxxxxxx[k] = fra * g10_0_xxxxxxx[k] + frb * g11_0_xxxxxxx[k] + f2g * (7.0 * g20_0_xxxxxx[k] - 7.0 * fgz * g21_0_xxxxxx[k]);

                    g_0_xxxxxxxy[k] = fra * g10_0_xxxxxxy[k] + frb * g11_0_xxxxxxy[k] + f2g * (6.0 * g20_0_xxxxxy[k] - 6.0 * fgz * g21_0_xxxxxy[k]);

                    g_0_xxxxxxxz[k] = fra * g10_0_xxxxxxz[k] + frb * g11_0_xxxxxxz[k] + f2g * (6.0 * g20_0_xxxxxz[k] - 6.0 * fgz * g21_0_xxxxxz[k]);

                    g_0_xxxxxxyy[k] = fra * g10_0_xxxxxyy[k] + frb * g11_0_xxxxxyy[k] + f2g * (5.0 * g20_0_xxxxyy[k] - 5.0 * fgz * g21_0_xxxxyy[k]);

                    g_0_xxxxxxyz[k] = fra * g10_0_xxxxxyz[k] + frb * g11_0_xxxxxyz[k] + f2g * (5.0 * g20_0_xxxxyz[k] - 5.0 * fgz * g21_0_xxxxyz[k]);

                    g_0_xxxxxxzz[k] = fra * g10_0_xxxxxzz[k] + frb * g11_0_xxxxxzz[k] + f2g * (5.0 * g20_0_xxxxzz[k] - 5.0 * fgz * g21_0_xxxxzz[k]);

                    g_0_xxxxxyyy[k] = fra * g10_0_xxxxyyy[k] + frb * g11_0_xxxxyyy[k] + f2g * (4.0 * g20_0_xxxyyy[k] - 4.0 * fgz * g21_0_xxxyyy[k]);

                    g_0_xxxxxyyz[k] = fra * g10_0_xxxxyyz[k] + frb * g11_0_xxxxyyz[k] + f2g * (4.0 * g20_0_xxxyyz[k] - 4.0 * fgz * g21_0_xxxyyz[k]);

                    g_0_xxxxxyzz[k] = fra * g10_0_xxxxyzz[k] + frb * g11_0_xxxxyzz[k] + f2g * (4.0 * g20_0_xxxyzz[k] - 4.0 * fgz * g21_0_xxxyzz[k]);

                    g_0_xxxxxzzz[k] = fra * g10_0_xxxxzzz[k] + frb * g11_0_xxxxzzz[k] + f2g * (4.0 * g20_0_xxxzzz[k] - 4.0 * fgz * g21_0_xxxzzz[k]);

                    g_0_xxxxyyyy[k] = fra * g10_0_xxxyyyy[k] + frb * g11_0_xxxyyyy[k] + f2g * (3.0 * g20_0_xxyyyy[k] - 3.0 * fgz * g21_0_xxyyyy[k]);

                    g_0_xxxxyyyz[k] = fra * g10_0_xxxyyyz[k] + frb * g11_0_xxxyyyz[k] + f2g * (3.0 * g20_0_xxyyyz[k] - 3.0 * fgz * g21_0_xxyyyz[k]);

                    g_0_xxxxyyzz[k] = fra * g10_0_xxxyyzz[k] + frb * g11_0_xxxyyzz[k] + f2g * (3.0 * g20_0_xxyyzz[k] - 3.0 * fgz * g21_0_xxyyzz[k]);

                    g_0_xxxxyzzz[k] = fra * g10_0_xxxyzzz[k] + frb * g11_0_xxxyzzz[k] + f2g * (3.0 * g20_0_xxyzzz[k] - 3.0 * fgz * g21_0_xxyzzz[k]);

                    g_0_xxxxzzzz[k] = fra * g10_0_xxxzzzz[k] + frb * g11_0_xxxzzzz[k] + f2g * (3.0 * g20_0_xxzzzz[k] - 3.0 * fgz * g21_0_xxzzzz[k]);

                    g_0_xxxyyyyy[k] = fra * g10_0_xxyyyyy[k] + frb * g11_0_xxyyyyy[k] + f2g * (2.0 * g20_0_xyyyyy[k] - 2.0 * fgz * g21_0_xyyyyy[k]);

                    g_0_xxxyyyyz[k] = fra * g10_0_xxyyyyz[k] + frb * g11_0_xxyyyyz[k] + f2g * (2.0 * g20_0_xyyyyz[k] - 2.0 * fgz * g21_0_xyyyyz[k]);

                    g_0_xxxyyyzz[k] = fra * g10_0_xxyyyzz[k] + frb * g11_0_xxyyyzz[k] + f2g * (2.0 * g20_0_xyyyzz[k] - 2.0 * fgz * g21_0_xyyyzz[k]);

                    g_0_xxxyyzzz[k] = fra * g10_0_xxyyzzz[k] + frb * g11_0_xxyyzzz[k] + f2g * (2.0 * g20_0_xyyzzz[k] - 2.0 * fgz * g21_0_xyyzzz[k]);

                    g_0_xxxyzzzz[k] = fra * g10_0_xxyzzzz[k] + frb * g11_0_xxyzzzz[k] + f2g * (2.0 * g20_0_xyzzzz[k] - 2.0 * fgz * g21_0_xyzzzz[k]);

                    g_0_xxxzzzzz[k] = fra * g10_0_xxzzzzz[k] + frb * g11_0_xxzzzzz[k] + f2g * (2.0 * g20_0_xzzzzz[k] - 2.0 * fgz * g21_0_xzzzzz[k]);

                    g_0_xxyyyyyy[k] = fra * g10_0_xyyyyyy[k] + frb * g11_0_xyyyyyy[k] + f2g * (g20_0_yyyyyy[k] - fgz * g21_0_yyyyyy[k]);

                    g_0_xxyyyyyz[k] = fra * g10_0_xyyyyyz[k] + frb * g11_0_xyyyyyz[k] + f2g * (g20_0_yyyyyz[k] - fgz * g21_0_yyyyyz[k]);

                    g_0_xxyyyyzz[k] = fra * g10_0_xyyyyzz[k] + frb * g11_0_xyyyyzz[k] + f2g * (g20_0_yyyyzz[k] - fgz * g21_0_yyyyzz[k]);

                    g_0_xxyyyzzz[k] = fra * g10_0_xyyyzzz[k] + frb * g11_0_xyyyzzz[k] + f2g * (g20_0_yyyzzz[k] - fgz * g21_0_yyyzzz[k]);

                    g_0_xxyyzzzz[k] = fra * g10_0_xyyzzzz[k] + frb * g11_0_xyyzzzz[k] + f2g * (g20_0_yyzzzz[k] - fgz * g21_0_yyzzzz[k]);

                    g_0_xxyzzzzz[k] = fra * g10_0_xyzzzzz[k] + frb * g11_0_xyzzzzz[k] + f2g * (g20_0_yzzzzz[k] - fgz * g21_0_yzzzzz[k]);

                    g_0_xxzzzzzz[k] = fra * g10_0_xzzzzzz[k] + frb * g11_0_xzzzzzz[k] + f2g * (g20_0_zzzzzz[k] - fgz * g21_0_zzzzzz[k]);

                    g_0_xyyyyyyy[k] = fra * g10_0_yyyyyyy[k] + frb * g11_0_yyyyyyy[k];

                    g_0_xyyyyyyz[k] = fra * g10_0_yyyyyyz[k] + frb * g11_0_yyyyyyz[k];

                    g_0_xyyyyyzz[k] = fra * g10_0_yyyyyzz[k] + frb * g11_0_yyyyyzz[k];

                    g_0_xyyyyzzz[k] = fra * g10_0_yyyyzzz[k] + frb * g11_0_yyyyzzz[k];

                    g_0_xyyyzzzz[k] = fra * g10_0_yyyzzzz[k] + frb * g11_0_yyyzzzz[k];

                    g_0_xyyzzzzz[k] = fra * g10_0_yyzzzzz[k] + frb * g11_0_yyzzzzz[k];

                    g_0_xyzzzzzz[k] = fra * g10_0_yzzzzzz[k] + frb * g11_0_yzzzzzz[k];

                    g_0_xzzzzzzz[k] = fra * g10_0_zzzzzzz[k] + frb * g11_0_zzzzzzz[k];

                    // leading y component

                    fra = qdy[k];

                    frb = wqy[k];

                    g_0_yyyyyyyy[k] = fra * g10_0_yyyyyyy[k] + frb * g11_0_yyyyyyy[k] + f2g * (7.0 * g20_0_yyyyyy[k] - 7.0 * fgz * g21_0_yyyyyy[k]);

                    g_0_yyyyyyyz[k] = fra * g10_0_yyyyyyz[k] + frb * g11_0_yyyyyyz[k] + f2g * (6.0 * g20_0_yyyyyz[k] - 6.0 * fgz * g21_0_yyyyyz[k]);

                    g_0_yyyyyyzz[k] = fra * g10_0_yyyyyzz[k] + frb * g11_0_yyyyyzz[k] + f2g * (5.0 * g20_0_yyyyzz[k] - 5.0 * fgz * g21_0_yyyyzz[k]);

                    g_0_yyyyyzzz[k] = fra * g10_0_yyyyzzz[k] + frb * g11_0_yyyyzzz[k] + f2g * (4.0 * g20_0_yyyzzz[k] - 4.0 * fgz * g21_0_yyyzzz[k]);

                    g_0_yyyyzzzz[k] = fra * g10_0_yyyzzzz[k] + frb * g11_0_yyyzzzz[k] + f2g * (3.0 * g20_0_yyzzzz[k] - 3.0 * fgz * g21_0_yyzzzz[k]);

                    g_0_yyyzzzzz[k] = fra * g10_0_yyzzzzz[k] + frb * g11_0_yyzzzzz[k] + f2g * (2.0 * g20_0_yzzzzz[k] - 2.0 * fgz * g21_0_yzzzzz[k]);

                    g_0_yyzzzzzz[k] = fra * g10_0_yzzzzzz[k] + frb * g11_0_yzzzzzz[k] + f2g * (g20_0_zzzzzz[k] - fgz * g21_0_zzzzzz[k]);

                    g_0_yzzzzzzz[k] = fra * g10_0_zzzzzzz[k] + frb * g11_0_zzzzzzz[k];

                    // leading z component

                    g_0_zzzzzzzz[k] = qdz[k] * g10_0_zzzzzzz[k] + wqz[k] * g11_0_zzzzzzz[k] + f2g * (7.0 * g20_0_zzzzzz[k] - 7.0 * fgz * g21_0_zzzzzz[k]);
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForPSL(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 1, 8);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {1, 8, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 8, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {0, 7, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (S|g(r,r')|SK)^(m+1) integrals

                auto gk_0_xxxxxxx = primBuffer.data(gkoff + 36 * idx);

                auto gk_0_xxxxxxy = primBuffer.data(gkoff + 36 * idx + 1);

                auto gk_0_xxxxxxz = primBuffer.data(gkoff + 36 * idx + 2);

                auto gk_0_xxxxxyy = primBuffer.data(gkoff + 36 * idx + 3);

                auto gk_0_xxxxxyz = primBuffer.data(gkoff + 36 * idx + 4);

                auto gk_0_xxxxxzz = primBuffer.data(gkoff + 36 * idx + 5);

                auto gk_0_xxxxyyy = primBuffer.data(gkoff + 36 * idx + 6);

                auto gk_0_xxxxyyz = primBuffer.data(gkoff + 36 * idx + 7);

                auto gk_0_xxxxyzz = primBuffer.data(gkoff + 36 * idx + 8);

                auto gk_0_xxxxzzz = primBuffer.data(gkoff + 36 * idx + 9);

                auto gk_0_xxxyyyy = primBuffer.data(gkoff + 36 * idx + 10);

                auto gk_0_xxxyyyz = primBuffer.data(gkoff + 36 * idx + 11);

                auto gk_0_xxxyyzz = primBuffer.data(gkoff + 36 * idx + 12);

                auto gk_0_xxxyzzz = primBuffer.data(gkoff + 36 * idx + 13);

                auto gk_0_xxxzzzz = primBuffer.data(gkoff + 36 * idx + 14);

                auto gk_0_xxyyyyy = primBuffer.data(gkoff + 36 * idx + 15);

                auto gk_0_xxyyyyz = primBuffer.data(gkoff + 36 * idx + 16);

                auto gk_0_xxyyyzz = primBuffer.data(gkoff + 36 * idx + 17);

                auto gk_0_xxyyzzz = primBuffer.data(gkoff + 36 * idx + 18);

                auto gk_0_xxyzzzz = primBuffer.data(gkoff + 36 * idx + 19);

                auto gk_0_xxzzzzz = primBuffer.data(gkoff + 36 * idx + 20);

                auto gk_0_xyyyyyy = primBuffer.data(gkoff + 36 * idx + 21);

                auto gk_0_xyyyyyz = primBuffer.data(gkoff + 36 * idx + 22);

                auto gk_0_xyyyyzz = primBuffer.data(gkoff + 36 * idx + 23);

                auto gk_0_xyyyzzz = primBuffer.data(gkoff + 36 * idx + 24);

                auto gk_0_xyyzzzz = primBuffer.data(gkoff + 36 * idx + 25);

                auto gk_0_xyzzzzz = primBuffer.data(gkoff + 36 * idx + 26);

                auto gk_0_xzzzzzz = primBuffer.data(gkoff + 36 * idx + 27);

                auto gk_0_yyyyyyy = primBuffer.data(gkoff + 36 * idx + 28);

                auto gk_0_yyyyyyz = primBuffer.data(gkoff + 36 * idx + 29);

                auto gk_0_yyyyyzz = primBuffer.data(gkoff + 36 * idx + 30);

                auto gk_0_yyyyzzz = primBuffer.data(gkoff + 36 * idx + 31);

                auto gk_0_yyyzzzz = primBuffer.data(gkoff + 36 * idx + 32);

                auto gk_0_yyzzzzz = primBuffer.data(gkoff + 36 * idx + 33);

                auto gk_0_yzzzzzz = primBuffer.data(gkoff + 36 * idx + 34);

                auto gk_0_zzzzzzz = primBuffer.data(gkoff + 36 * idx + 35);

                // set up pointers to (S|g(r,r')|SL)^(m+1) integrals

                auto g11_0_xxxxxxxx = primBuffer.data(g11off + 45 * idx);

                auto g11_0_xxxxxxxy = primBuffer.data(g11off + 45 * idx + 1);

                auto g11_0_xxxxxxxz = primBuffer.data(g11off + 45 * idx + 2);

                auto g11_0_xxxxxxyy = primBuffer.data(g11off + 45 * idx + 3);

                auto g11_0_xxxxxxyz = primBuffer.data(g11off + 45 * idx + 4);

                auto g11_0_xxxxxxzz = primBuffer.data(g11off + 45 * idx + 5);

                auto g11_0_xxxxxyyy = primBuffer.data(g11off + 45 * idx + 6);

                auto g11_0_xxxxxyyz = primBuffer.data(g11off + 45 * idx + 7);

                auto g11_0_xxxxxyzz = primBuffer.data(g11off + 45 * idx + 8);

                auto g11_0_xxxxxzzz = primBuffer.data(g11off + 45 * idx + 9);

                auto g11_0_xxxxyyyy = primBuffer.data(g11off + 45 * idx + 10);

                auto g11_0_xxxxyyyz = primBuffer.data(g11off + 45 * idx + 11);

                auto g11_0_xxxxyyzz = primBuffer.data(g11off + 45 * idx + 12);

                auto g11_0_xxxxyzzz = primBuffer.data(g11off + 45 * idx + 13);

                auto g11_0_xxxxzzzz = primBuffer.data(g11off + 45 * idx + 14);

                auto g11_0_xxxyyyyy = primBuffer.data(g11off + 45 * idx + 15);

                auto g11_0_xxxyyyyz = primBuffer.data(g11off + 45 * idx + 16);

                auto g11_0_xxxyyyzz = primBuffer.data(g11off + 45 * idx + 17);

                auto g11_0_xxxyyzzz = primBuffer.data(g11off + 45 * idx + 18);

                auto g11_0_xxxyzzzz = primBuffer.data(g11off + 45 * idx + 19);

                auto g11_0_xxxzzzzz = primBuffer.data(g11off + 45 * idx + 20);

                auto g11_0_xxyyyyyy = primBuffer.data(g11off + 45 * idx + 21);

                auto g11_0_xxyyyyyz = primBuffer.data(g11off + 45 * idx + 22);

                auto g11_0_xxyyyyzz = primBuffer.data(g11off + 45 * idx + 23);

                auto g11_0_xxyyyzzz = primBuffer.data(g11off + 45 * idx + 24);

                auto g11_0_xxyyzzzz = primBuffer.data(g11off + 45 * idx + 25);

                auto g11_0_xxyzzzzz = primBuffer.data(g11off + 45 * idx + 26);

                auto g11_0_xxzzzzzz = primBuffer.data(g11off + 45 * idx + 27);

                auto g11_0_xyyyyyyy = primBuffer.data(g11off + 45 * idx + 28);

                auto g11_0_xyyyyyyz = primBuffer.data(g11off + 45 * idx + 29);

                auto g11_0_xyyyyyzz = primBuffer.data(g11off + 45 * idx + 30);

                auto g11_0_xyyyyzzz = primBuffer.data(g11off + 45 * idx + 31);

                auto g11_0_xyyyzzzz = primBuffer.data(g11off + 45 * idx + 32);

                auto g11_0_xyyzzzzz = primBuffer.data(g11off + 45 * idx + 33);

                auto g11_0_xyzzzzzz = primBuffer.data(g11off + 45 * idx + 34);

                auto g11_0_xzzzzzzz = primBuffer.data(g11off + 45 * idx + 35);

                auto g11_0_yyyyyyyy = primBuffer.data(g11off + 45 * idx + 36);

                auto g11_0_yyyyyyyz = primBuffer.data(g11off + 45 * idx + 37);

                auto g11_0_yyyyyyzz = primBuffer.data(g11off + 45 * idx + 38);

                auto g11_0_yyyyyzzz = primBuffer.data(g11off + 45 * idx + 39);

                auto g11_0_yyyyzzzz = primBuffer.data(g11off + 45 * idx + 40);

                auto g11_0_yyyzzzzz = primBuffer.data(g11off + 45 * idx + 41);

                auto g11_0_yyzzzzzz = primBuffer.data(g11off + 45 * idx + 42);

                auto g11_0_yzzzzzzz = primBuffer.data(g11off + 45 * idx + 43);

                auto g11_0_zzzzzzzz = primBuffer.data(g11off + 45 * idx + 44);

                // set up pointers to (P|g(r,r')|SL)^(m) integrals

                auto g_x_xxxxxxxx = primBuffer.data(goff + 135 * idx);

                auto g_x_xxxxxxxy = primBuffer.data(goff + 135 * idx + 1);

                auto g_x_xxxxxxxz = primBuffer.data(goff + 135 * idx + 2);

                auto g_x_xxxxxxyy = primBuffer.data(goff + 135 * idx + 3);

                auto g_x_xxxxxxyz = primBuffer.data(goff + 135 * idx + 4);

                auto g_x_xxxxxxzz = primBuffer.data(goff + 135 * idx + 5);

                auto g_x_xxxxxyyy = primBuffer.data(goff + 135 * idx + 6);

                auto g_x_xxxxxyyz = primBuffer.data(goff + 135 * idx + 7);

                auto g_x_xxxxxyzz = primBuffer.data(goff + 135 * idx + 8);

                auto g_x_xxxxxzzz = primBuffer.data(goff + 135 * idx + 9);

                auto g_x_xxxxyyyy = primBuffer.data(goff + 135 * idx + 10);

                auto g_x_xxxxyyyz = primBuffer.data(goff + 135 * idx + 11);

                auto g_x_xxxxyyzz = primBuffer.data(goff + 135 * idx + 12);

                auto g_x_xxxxyzzz = primBuffer.data(goff + 135 * idx + 13);

                auto g_x_xxxxzzzz = primBuffer.data(goff + 135 * idx + 14);

                auto g_x_xxxyyyyy = primBuffer.data(goff + 135 * idx + 15);

                auto g_x_xxxyyyyz = primBuffer.data(goff + 135 * idx + 16);

                auto g_x_xxxyyyzz = primBuffer.data(goff + 135 * idx + 17);

                auto g_x_xxxyyzzz = primBuffer.data(goff + 135 * idx + 18);

                auto g_x_xxxyzzzz = primBuffer.data(goff + 135 * idx + 19);

                auto g_x_xxxzzzzz = primBuffer.data(goff + 135 * idx + 20);

                auto g_x_xxyyyyyy = primBuffer.data(goff + 135 * idx + 21);

                auto g_x_xxyyyyyz = primBuffer.data(goff + 135 * idx + 22);

                auto g_x_xxyyyyzz = primBuffer.data(goff + 135 * idx + 23);

                auto g_x_xxyyyzzz = primBuffer.data(goff + 135 * idx + 24);

                auto g_x_xxyyzzzz = primBuffer.data(goff + 135 * idx + 25);

                auto g_x_xxyzzzzz = primBuffer.data(goff + 135 * idx + 26);

                auto g_x_xxzzzzzz = primBuffer.data(goff + 135 * idx + 27);

                auto g_x_xyyyyyyy = primBuffer.data(goff + 135 * idx + 28);

                auto g_x_xyyyyyyz = primBuffer.data(goff + 135 * idx + 29);

                auto g_x_xyyyyyzz = primBuffer.data(goff + 135 * idx + 30);

                auto g_x_xyyyyzzz = primBuffer.data(goff + 135 * idx + 31);

                auto g_x_xyyyzzzz = primBuffer.data(goff + 135 * idx + 32);

                auto g_x_xyyzzzzz = primBuffer.data(goff + 135 * idx + 33);

                auto g_x_xyzzzzzz = primBuffer.data(goff + 135 * idx + 34);

                auto g_x_xzzzzzzz = primBuffer.data(goff + 135 * idx + 35);

                auto g_x_yyyyyyyy = primBuffer.data(goff + 135 * idx + 36);

                auto g_x_yyyyyyyz = primBuffer.data(goff + 135 * idx + 37);

                auto g_x_yyyyyyzz = primBuffer.data(goff + 135 * idx + 38);

                auto g_x_yyyyyzzz = primBuffer.data(goff + 135 * idx + 39);

                auto g_x_yyyyzzzz = primBuffer.data(goff + 135 * idx + 40);

                auto g_x_yyyzzzzz = primBuffer.data(goff + 135 * idx + 41);

                auto g_x_yyzzzzzz = primBuffer.data(goff + 135 * idx + 42);

                auto g_x_yzzzzzzz = primBuffer.data(goff + 135 * idx + 43);

                auto g_x_zzzzzzzz = primBuffer.data(goff + 135 * idx + 44);

                auto g_y_xxxxxxxx = primBuffer.data(goff + 135 * idx + 45);

                auto g_y_xxxxxxxy = primBuffer.data(goff + 135 * idx + 46);

                auto g_y_xxxxxxxz = primBuffer.data(goff + 135 * idx + 47);

                auto g_y_xxxxxxyy = primBuffer.data(goff + 135 * idx + 48);

                auto g_y_xxxxxxyz = primBuffer.data(goff + 135 * idx + 49);

                auto g_y_xxxxxxzz = primBuffer.data(goff + 135 * idx + 50);

                auto g_y_xxxxxyyy = primBuffer.data(goff + 135 * idx + 51);

                auto g_y_xxxxxyyz = primBuffer.data(goff + 135 * idx + 52);

                auto g_y_xxxxxyzz = primBuffer.data(goff + 135 * idx + 53);

                auto g_y_xxxxxzzz = primBuffer.data(goff + 135 * idx + 54);

                auto g_y_xxxxyyyy = primBuffer.data(goff + 135 * idx + 55);

                auto g_y_xxxxyyyz = primBuffer.data(goff + 135 * idx + 56);

                auto g_y_xxxxyyzz = primBuffer.data(goff + 135 * idx + 57);

                auto g_y_xxxxyzzz = primBuffer.data(goff + 135 * idx + 58);

                auto g_y_xxxxzzzz = primBuffer.data(goff + 135 * idx + 59);

                auto g_y_xxxyyyyy = primBuffer.data(goff + 135 * idx + 60);

                auto g_y_xxxyyyyz = primBuffer.data(goff + 135 * idx + 61);

                auto g_y_xxxyyyzz = primBuffer.data(goff + 135 * idx + 62);

                auto g_y_xxxyyzzz = primBuffer.data(goff + 135 * idx + 63);

                auto g_y_xxxyzzzz = primBuffer.data(goff + 135 * idx + 64);

                auto g_y_xxxzzzzz = primBuffer.data(goff + 135 * idx + 65);

                auto g_y_xxyyyyyy = primBuffer.data(goff + 135 * idx + 66);

                auto g_y_xxyyyyyz = primBuffer.data(goff + 135 * idx + 67);

                auto g_y_xxyyyyzz = primBuffer.data(goff + 135 * idx + 68);

                auto g_y_xxyyyzzz = primBuffer.data(goff + 135 * idx + 69);

                auto g_y_xxyyzzzz = primBuffer.data(goff + 135 * idx + 70);

                auto g_y_xxyzzzzz = primBuffer.data(goff + 135 * idx + 71);

                auto g_y_xxzzzzzz = primBuffer.data(goff + 135 * idx + 72);

                auto g_y_xyyyyyyy = primBuffer.data(goff + 135 * idx + 73);

                auto g_y_xyyyyyyz = primBuffer.data(goff + 135 * idx + 74);

                auto g_y_xyyyyyzz = primBuffer.data(goff + 135 * idx + 75);

                auto g_y_xyyyyzzz = primBuffer.data(goff + 135 * idx + 76);

                auto g_y_xyyyzzzz = primBuffer.data(goff + 135 * idx + 77);

                auto g_y_xyyzzzzz = primBuffer.data(goff + 135 * idx + 78);

                auto g_y_xyzzzzzz = primBuffer.data(goff + 135 * idx + 79);

                auto g_y_xzzzzzzz = primBuffer.data(goff + 135 * idx + 80);

                auto g_y_yyyyyyyy = primBuffer.data(goff + 135 * idx + 81);

                auto g_y_yyyyyyyz = primBuffer.data(goff + 135 * idx + 82);

                auto g_y_yyyyyyzz = primBuffer.data(goff + 135 * idx + 83);

                auto g_y_yyyyyzzz = primBuffer.data(goff + 135 * idx + 84);

                auto g_y_yyyyzzzz = primBuffer.data(goff + 135 * idx + 85);

                auto g_y_yyyzzzzz = primBuffer.data(goff + 135 * idx + 86);

                auto g_y_yyzzzzzz = primBuffer.data(goff + 135 * idx + 87);

                auto g_y_yzzzzzzz = primBuffer.data(goff + 135 * idx + 88);

                auto g_y_zzzzzzzz = primBuffer.data(goff + 135 * idx + 89);

                auto g_z_xxxxxxxx = primBuffer.data(goff + 135 * idx + 90);

                auto g_z_xxxxxxxy = primBuffer.data(goff + 135 * idx + 91);

                auto g_z_xxxxxxxz = primBuffer.data(goff + 135 * idx + 92);

                auto g_z_xxxxxxyy = primBuffer.data(goff + 135 * idx + 93);

                auto g_z_xxxxxxyz = primBuffer.data(goff + 135 * idx + 94);

                auto g_z_xxxxxxzz = primBuffer.data(goff + 135 * idx + 95);

                auto g_z_xxxxxyyy = primBuffer.data(goff + 135 * idx + 96);

                auto g_z_xxxxxyyz = primBuffer.data(goff + 135 * idx + 97);

                auto g_z_xxxxxyzz = primBuffer.data(goff + 135 * idx + 98);

                auto g_z_xxxxxzzz = primBuffer.data(goff + 135 * idx + 99);

                auto g_z_xxxxyyyy = primBuffer.data(goff + 135 * idx + 100);

                auto g_z_xxxxyyyz = primBuffer.data(goff + 135 * idx + 101);

                auto g_z_xxxxyyzz = primBuffer.data(goff + 135 * idx + 102);

                auto g_z_xxxxyzzz = primBuffer.data(goff + 135 * idx + 103);

                auto g_z_xxxxzzzz = primBuffer.data(goff + 135 * idx + 104);

                auto g_z_xxxyyyyy = primBuffer.data(goff + 135 * idx + 105);

                auto g_z_xxxyyyyz = primBuffer.data(goff + 135 * idx + 106);

                auto g_z_xxxyyyzz = primBuffer.data(goff + 135 * idx + 107);

                auto g_z_xxxyyzzz = primBuffer.data(goff + 135 * idx + 108);

                auto g_z_xxxyzzzz = primBuffer.data(goff + 135 * idx + 109);

                auto g_z_xxxzzzzz = primBuffer.data(goff + 135 * idx + 110);

                auto g_z_xxyyyyyy = primBuffer.data(goff + 135 * idx + 111);

                auto g_z_xxyyyyyz = primBuffer.data(goff + 135 * idx + 112);

                auto g_z_xxyyyyzz = primBuffer.data(goff + 135 * idx + 113);

                auto g_z_xxyyyzzz = primBuffer.data(goff + 135 * idx + 114);

                auto g_z_xxyyzzzz = primBuffer.data(goff + 135 * idx + 115);

                auto g_z_xxyzzzzz = primBuffer.data(goff + 135 * idx + 116);

                auto g_z_xxzzzzzz = primBuffer.data(goff + 135 * idx + 117);

                auto g_z_xyyyyyyy = primBuffer.data(goff + 135 * idx + 118);

                auto g_z_xyyyyyyz = primBuffer.data(goff + 135 * idx + 119);

                auto g_z_xyyyyyzz = primBuffer.data(goff + 135 * idx + 120);

                auto g_z_xyyyyzzz = primBuffer.data(goff + 135 * idx + 121);

                auto g_z_xyyyzzzz = primBuffer.data(goff + 135 * idx + 122);

                auto g_z_xyyzzzzz = primBuffer.data(goff + 135 * idx + 123);

                auto g_z_xyzzzzzz = primBuffer.data(goff + 135 * idx + 124);

                auto g_z_xzzzzzzz = primBuffer.data(goff + 135 * idx + 125);

                auto g_z_yyyyyyyy = primBuffer.data(goff + 135 * idx + 126);

                auto g_z_yyyyyyyz = primBuffer.data(goff + 135 * idx + 127);

                auto g_z_yyyyyyzz = primBuffer.data(goff + 135 * idx + 128);

                auto g_z_yyyyyzzz = primBuffer.data(goff + 135 * idx + 129);

                auto g_z_yyyyzzzz = primBuffer.data(goff + 135 * idx + 130);

                auto g_z_yyyzzzzz = primBuffer.data(goff + 135 * idx + 131);

                auto g_z_yyzzzzzz = primBuffer.data(goff + 135 * idx + 132);

                auto g_z_yzzzzzzz = primBuffer.data(goff + 135 * idx + 133);

                auto g_z_zzzzzzzz = primBuffer.data(goff + 135 * idx + 134);

                #pragma omp simd aligned(wax, way, waz, fx, gk_0_xxxxxxx, gk_0_xxxxxxy,\
                                         gk_0_xxxxxxz, gk_0_xxxxxyy, gk_0_xxxxxyz,\
                                         gk_0_xxxxxzz, gk_0_xxxxyyy, gk_0_xxxxyyz,\
                                         gk_0_xxxxyzz, gk_0_xxxxzzz, gk_0_xxxyyyy,\
                                         gk_0_xxxyyyz, gk_0_xxxyyzz, gk_0_xxxyzzz,\
                                         gk_0_xxxzzzz, gk_0_xxyyyyy, gk_0_xxyyyyz,\
                                         gk_0_xxyyyzz, gk_0_xxyyzzz, gk_0_xxyzzzz,\
                                         gk_0_xxzzzzz, gk_0_xyyyyyy, gk_0_xyyyyyz,\
                                         gk_0_xyyyyzz, gk_0_xyyyzzz, gk_0_xyyzzzz,\
                                         gk_0_xyzzzzz, gk_0_xzzzzzz, gk_0_yyyyyyy,\
                                         gk_0_yyyyyyz, gk_0_yyyyyzz, gk_0_yyyyzzz,\
                                         gk_0_yyyzzzz, gk_0_yyzzzzz, gk_0_yzzzzzz,\
                                         gk_0_zzzzzzz, g11_0_xxxxxxxx, g11_0_xxxxxxxy,\
                                         g11_0_xxxxxxxz, g11_0_xxxxxxyy, g11_0_xxxxxxyz,\
                                         g11_0_xxxxxxzz, g11_0_xxxxxyyy, g11_0_xxxxxyyz,\
                                         g11_0_xxxxxyzz, g11_0_xxxxxzzz, g11_0_xxxxyyyy,\
                                         g11_0_xxxxyyyz, g11_0_xxxxyyzz, g11_0_xxxxyzzz,\
                                         g11_0_xxxxzzzz, g11_0_xxxyyyyy, g11_0_xxxyyyyz,\
                                         g11_0_xxxyyyzz, g11_0_xxxyyzzz, g11_0_xxxyzzzz,\
                                         g11_0_xxxzzzzz, g11_0_xxyyyyyy, g11_0_xxyyyyyz,\
                                         g11_0_xxyyyyzz, g11_0_xxyyyzzz, g11_0_xxyyzzzz,\
                                         g11_0_xxyzzzzz, g11_0_xxzzzzzz, g11_0_xyyyyyyy,\
                                         g11_0_xyyyyyyz, g11_0_xyyyyyzz, g11_0_xyyyyzzz,\
                                         g11_0_xyyyzzzz, g11_0_xyyzzzzz, g11_0_xyzzzzzz,\
                                         g11_0_xzzzzzzz, g11_0_yyyyyyyy, g11_0_yyyyyyyz,\
                                         g11_0_yyyyyyzz, g11_0_yyyyyzzz, g11_0_yyyyzzzz,\
                                         g11_0_yyyzzzzz, g11_0_yyzzzzzz, g11_0_yzzzzzzz,\
                                         g11_0_zzzzzzzz, g_x_xxxxxxxx, g_x_xxxxxxxy,\
                                         g_x_xxxxxxxz, g_x_xxxxxxyy, g_x_xxxxxxyz,\
                                         g_x_xxxxxxzz, g_x_xxxxxyyy, g_x_xxxxxyyz,\
                                         g_x_xxxxxyzz, g_x_xxxxxzzz, g_x_xxxxyyyy,\
                                         g_x_xxxxyyyz, g_x_xxxxyyzz, g_x_xxxxyzzz,\
                                         g_x_xxxxzzzz, g_x_xxxyyyyy, g_x_xxxyyyyz,\
                                         g_x_xxxyyyzz, g_x_xxxyyzzz, g_x_xxxyzzzz,\
                                         g_x_xxxzzzzz, g_x_xxyyyyyy, g_x_xxyyyyyz,\
                                         g_x_xxyyyyzz, g_x_xxyyyzzz, g_x_xxyyzzzz,\
                                         g_x_xxyzzzzz, g_x_xxzzzzzz, g_x_xyyyyyyy,\
                                         g_x_xyyyyyyz, g_x_xyyyyyzz, g_x_xyyyyzzz,\
                                         g_x_xyyyzzzz, g_x_xyyzzzzz, g_x_xyzzzzzz,\
                                         g_x_xzzzzzzz, g_x_yyyyyyyy, g_x_yyyyyyyz,\
                                         g_x_yyyyyyzz, g_x_yyyyyzzz, g_x_yyyyzzzz,\
                                         g_x_yyyzzzzz, g_x_yyzzzzzz, g_x_yzzzzzzz,\
                                         g_x_zzzzzzzz, g_y_xxxxxxxx, g_y_xxxxxxxy,\
                                         g_y_xxxxxxxz, g_y_xxxxxxyy, g_y_xxxxxxyz,\
                                         g_y_xxxxxxzz, g_y_xxxxxyyy, g_y_xxxxxyyz,\
                                         g_y_xxxxxyzz, g_y_xxxxxzzz, g_y_xxxxyyyy,\
                                         g_y_xxxxyyyz, g_y_xxxxyyzz, g_y_xxxxyzzz,\
                                         g_y_xxxxzzzz, g_y_xxxyyyyy, g_y_xxxyyyyz,\
                                         g_y_xxxyyyzz, g_y_xxxyyzzz, g_y_xxxyzzzz,\
                                         g_y_xxxzzzzz, g_y_xxyyyyyy, g_y_xxyyyyyz,\
                                         g_y_xxyyyyzz, g_y_xxyyyzzz, g_y_xxyyzzzz,\
                                         g_y_xxyzzzzz, g_y_xxzzzzzz, g_y_xyyyyyyy,\
                                         g_y_xyyyyyyz, g_y_xyyyyyzz, g_y_xyyyyzzz,\
                                         g_y_xyyyzzzz, g_y_xyyzzzzz, g_y_xyzzzzzz,\
                                         g_y_xzzzzzzz, g_y_yyyyyyyy, g_y_yyyyyyyz,\
                                         g_y_yyyyyyzz, g_y_yyyyyzzz, g_y_yyyyzzzz,\
                                         g_y_yyyzzzzz, g_y_yyzzzzzz, g_y_yzzzzzzz,\
                                         g_y_zzzzzzzz, g_z_xxxxxxxx, g_z_xxxxxxxy,\
                                         g_z_xxxxxxxz, g_z_xxxxxxyy, g_z_xxxxxxyz,\
                                         g_z_xxxxxxzz, g_z_xxxxxyyy, g_z_xxxxxyyz,\
                                         g_z_xxxxxyzz, g_z_xxxxxzzz, g_z_xxxxyyyy,\
                                         g_z_xxxxyyyz, g_z_xxxxyyzz, g_z_xxxxyzzz,\
                                         g_z_xxxxzzzz, g_z_xxxyyyyy, g_z_xxxyyyyz,\
                                         g_z_xxxyyyzz, g_z_xxxyyzzz, g_z_xxxyzzzz,\
                                         g_z_xxxzzzzz, g_z_xxyyyyyy, g_z_xxyyyyyz,\
                                         g_z_xxyyyyzz, g_z_xxyyyzzz, g_z_xxyyzzzz,\
                                         g_z_xxyzzzzz, g_z_xxzzzzzz, g_z_xyyyyyyy,\
                                         g_z_xyyyyyyz, g_z_xyyyyyzz, g_z_xyyyyzzz,\
                                         g_z_xyyyzzzz, g_z_xyyzzzzz, g_z_xyzzzzzz,\
                                         g_z_xzzzzzzz, g_z_yyyyyyyy, g_z_yyyyyyyz,\
                                         g_z_yyyyyyzz, g_z_yyyyyzzz, g_z_yyyyzzzz,\
                                         g_z_yyyzzzzz, g_z_yyzzzzzz, g_z_yzzzzzzz,\
                                         g_z_zzzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // leading x component

                    double fr = wax[k];

                    g_x_xxxxxxxx[k] = fr * g11_0_xxxxxxxx[k] + 8.0 * f2t * gk_0_xxxxxxx[k];

                    g_x_xxxxxxxy[k] = fr * g11_0_xxxxxxxy[k] + 7.0 * f2t * gk_0_xxxxxxy[k];

                    g_x_xxxxxxxz[k] = fr * g11_0_xxxxxxxz[k] + 7.0 * f2t * gk_0_xxxxxxz[k];

                    g_x_xxxxxxyy[k] = fr * g11_0_xxxxxxyy[k] + 6.0 * f2t * gk_0_xxxxxyy[k];

                    g_x_xxxxxxyz[k] = fr * g11_0_xxxxxxyz[k] + 6.0 * f2t * gk_0_xxxxxyz[k];

                    g_x_xxxxxxzz[k] = fr * g11_0_xxxxxxzz[k] + 6.0 * f2t * gk_0_xxxxxzz[k];

                    g_x_xxxxxyyy[k] = fr * g11_0_xxxxxyyy[k] + 5.0 * f2t * gk_0_xxxxyyy[k];

                    g_x_xxxxxyyz[k] = fr * g11_0_xxxxxyyz[k] + 5.0 * f2t * gk_0_xxxxyyz[k];

                    g_x_xxxxxyzz[k] = fr * g11_0_xxxxxyzz[k] + 5.0 * f2t * gk_0_xxxxyzz[k];

                    g_x_xxxxxzzz[k] = fr * g11_0_xxxxxzzz[k] + 5.0 * f2t * gk_0_xxxxzzz[k];

                    g_x_xxxxyyyy[k] = fr * g11_0_xxxxyyyy[k] + 4.0 * f2t * gk_0_xxxyyyy[k];

                    g_x_xxxxyyyz[k] = fr * g11_0_xxxxyyyz[k] + 4.0 * f2t * gk_0_xxxyyyz[k];

                    g_x_xxxxyyzz[k] = fr * g11_0_xxxxyyzz[k] + 4.0 * f2t * gk_0_xxxyyzz[k];

                    g_x_xxxxyzzz[k] = fr * g11_0_xxxxyzzz[k] + 4.0 * f2t * gk_0_xxxyzzz[k];

                    g_x_xxxxzzzz[k] = fr * g11_0_xxxxzzzz[k] + 4.0 * f2t * gk_0_xxxzzzz[k];

                    g_x_xxxyyyyy[k] = fr * g11_0_xxxyyyyy[k] + 3.0 * f2t * gk_0_xxyyyyy[k];

                    g_x_xxxyyyyz[k] = fr * g11_0_xxxyyyyz[k] + 3.0 * f2t * gk_0_xxyyyyz[k];

                    g_x_xxxyyyzz[k] = fr * g11_0_xxxyyyzz[k] + 3.0 * f2t * gk_0_xxyyyzz[k];

                    g_x_xxxyyzzz[k] = fr * g11_0_xxxyyzzz[k] + 3.0 * f2t * gk_0_xxyyzzz[k];

                    g_x_xxxyzzzz[k] = fr * g11_0_xxxyzzzz[k] + 3.0 * f2t * gk_0_xxyzzzz[k];

                    g_x_xxxzzzzz[k] = fr * g11_0_xxxzzzzz[k] + 3.0 * f2t * gk_0_xxzzzzz[k];

                    g_x_xxyyyyyy[k] = fr * g11_0_xxyyyyyy[k] + 2.0 * f2t * gk_0_xyyyyyy[k];

                    g_x_xxyyyyyz[k] = fr * g11_0_xxyyyyyz[k] + 2.0 * f2t * gk_0_xyyyyyz[k];

                    g_x_xxyyyyzz[k] = fr * g11_0_xxyyyyzz[k] + 2.0 * f2t * gk_0_xyyyyzz[k];

                    g_x_xxyyyzzz[k] = fr * g11_0_xxyyyzzz[k] + 2.0 * f2t * gk_0_xyyyzzz[k];

                    g_x_xxyyzzzz[k] = fr * g11_0_xxyyzzzz[k] + 2.0 * f2t * gk_0_xyyzzzz[k];

                    g_x_xxyzzzzz[k] = fr * g11_0_xxyzzzzz[k] + 2.0 * f2t * gk_0_xyzzzzz[k];

                    g_x_xxzzzzzz[k] = fr * g11_0_xxzzzzzz[k] + 2.0 * f2t * gk_0_xzzzzzz[k];

                    g_x_xyyyyyyy[k] = fr * g11_0_xyyyyyyy[k] + f2t * gk_0_yyyyyyy[k];

                    g_x_xyyyyyyz[k] = fr * g11_0_xyyyyyyz[k] + f2t * gk_0_yyyyyyz[k];

                    g_x_xyyyyyzz[k] = fr * g11_0_xyyyyyzz[k] + f2t * gk_0_yyyyyzz[k];

                    g_x_xyyyyzzz[k] = fr * g11_0_xyyyyzzz[k] + f2t * gk_0_yyyyzzz[k];

                    g_x_xyyyzzzz[k] = fr * g11_0_xyyyzzzz[k] + f2t * gk_0_yyyzzzz[k];

                    g_x_xyyzzzzz[k] = fr * g11_0_xyyzzzzz[k] + f2t * gk_0_yyzzzzz[k];

                    g_x_xyzzzzzz[k] = fr * g11_0_xyzzzzzz[k] + f2t * gk_0_yzzzzzz[k];

                    g_x_xzzzzzzz[k] = fr * g11_0_xzzzzzzz[k] + f2t * gk_0_zzzzzzz[k];

                    g_x_yyyyyyyy[k] = fr * g11_0_yyyyyyyy[k];

                    g_x_yyyyyyyz[k] = fr * g11_0_yyyyyyyz[k];

                    g_x_yyyyyyzz[k] = fr * g11_0_yyyyyyzz[k];

                    g_x_yyyyyzzz[k] = fr * g11_0_yyyyyzzz[k];

                    g_x_yyyyzzzz[k] = fr * g11_0_yyyyzzzz[k];

                    g_x_yyyzzzzz[k] = fr * g11_0_yyyzzzzz[k];

                    g_x_yyzzzzzz[k] = fr * g11_0_yyzzzzzz[k];

                    g_x_yzzzzzzz[k] = fr * g11_0_yzzzzzzz[k];

                    g_x_zzzzzzzz[k] = fr * g11_0_zzzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_y_xxxxxxxx[k] = fr * g11_0_xxxxxxxx[k];

                    g_y_xxxxxxxy[k] = fr * g11_0_xxxxxxxy[k] + f2t * gk_0_xxxxxxx[k];

                    g_y_xxxxxxxz[k] = fr * g11_0_xxxxxxxz[k];

                    g_y_xxxxxxyy[k] = fr * g11_0_xxxxxxyy[k] + 2.0 * f2t * gk_0_xxxxxxy[k];

                    g_y_xxxxxxyz[k] = fr * g11_0_xxxxxxyz[k] + f2t * gk_0_xxxxxxz[k];

                    g_y_xxxxxxzz[k] = fr * g11_0_xxxxxxzz[k];

                    g_y_xxxxxyyy[k] = fr * g11_0_xxxxxyyy[k] + 3.0 * f2t * gk_0_xxxxxyy[k];

                    g_y_xxxxxyyz[k] = fr * g11_0_xxxxxyyz[k] + 2.0 * f2t * gk_0_xxxxxyz[k];

                    g_y_xxxxxyzz[k] = fr * g11_0_xxxxxyzz[k] + f2t * gk_0_xxxxxzz[k];

                    g_y_xxxxxzzz[k] = fr * g11_0_xxxxxzzz[k];

                    g_y_xxxxyyyy[k] = fr * g11_0_xxxxyyyy[k] + 4.0 * f2t * gk_0_xxxxyyy[k];

                    g_y_xxxxyyyz[k] = fr * g11_0_xxxxyyyz[k] + 3.0 * f2t * gk_0_xxxxyyz[k];

                    g_y_xxxxyyzz[k] = fr * g11_0_xxxxyyzz[k] + 2.0 * f2t * gk_0_xxxxyzz[k];

                    g_y_xxxxyzzz[k] = fr * g11_0_xxxxyzzz[k] + f2t * gk_0_xxxxzzz[k];

                    g_y_xxxxzzzz[k] = fr * g11_0_xxxxzzzz[k];

                    g_y_xxxyyyyy[k] = fr * g11_0_xxxyyyyy[k] + 5.0 * f2t * gk_0_xxxyyyy[k];

                    g_y_xxxyyyyz[k] = fr * g11_0_xxxyyyyz[k] + 4.0 * f2t * gk_0_xxxyyyz[k];

                    g_y_xxxyyyzz[k] = fr * g11_0_xxxyyyzz[k] + 3.0 * f2t * gk_0_xxxyyzz[k];

                    g_y_xxxyyzzz[k] = fr * g11_0_xxxyyzzz[k] + 2.0 * f2t * gk_0_xxxyzzz[k];

                    g_y_xxxyzzzz[k] = fr * g11_0_xxxyzzzz[k] + f2t * gk_0_xxxzzzz[k];

                    g_y_xxxzzzzz[k] = fr * g11_0_xxxzzzzz[k];

                    g_y_xxyyyyyy[k] = fr * g11_0_xxyyyyyy[k] + 6.0 * f2t * gk_0_xxyyyyy[k];

                    g_y_xxyyyyyz[k] = fr * g11_0_xxyyyyyz[k] + 5.0 * f2t * gk_0_xxyyyyz[k];

                    g_y_xxyyyyzz[k] = fr * g11_0_xxyyyyzz[k] + 4.0 * f2t * gk_0_xxyyyzz[k];

                    g_y_xxyyyzzz[k] = fr * g11_0_xxyyyzzz[k] + 3.0 * f2t * gk_0_xxyyzzz[k];

                    g_y_xxyyzzzz[k] = fr * g11_0_xxyyzzzz[k] + 2.0 * f2t * gk_0_xxyzzzz[k];

                    g_y_xxyzzzzz[k] = fr * g11_0_xxyzzzzz[k] + f2t * gk_0_xxzzzzz[k];

                    g_y_xxzzzzzz[k] = fr * g11_0_xxzzzzzz[k];

                    g_y_xyyyyyyy[k] = fr * g11_0_xyyyyyyy[k] + 7.0 * f2t * gk_0_xyyyyyy[k];

                    g_y_xyyyyyyz[k] = fr * g11_0_xyyyyyyz[k] + 6.0 * f2t * gk_0_xyyyyyz[k];

                    g_y_xyyyyyzz[k] = fr * g11_0_xyyyyyzz[k] + 5.0 * f2t * gk_0_xyyyyzz[k];

                    g_y_xyyyyzzz[k] = fr * g11_0_xyyyyzzz[k] + 4.0 * f2t * gk_0_xyyyzzz[k];

                    g_y_xyyyzzzz[k] = fr * g11_0_xyyyzzzz[k] + 3.0 * f2t * gk_0_xyyzzzz[k];

                    g_y_xyyzzzzz[k] = fr * g11_0_xyyzzzzz[k] + 2.0 * f2t * gk_0_xyzzzzz[k];

                    g_y_xyzzzzzz[k] = fr * g11_0_xyzzzzzz[k] + f2t * gk_0_xzzzzzz[k];

                    g_y_xzzzzzzz[k] = fr * g11_0_xzzzzzzz[k];

                    g_y_yyyyyyyy[k] = fr * g11_0_yyyyyyyy[k] + 8.0 * f2t * gk_0_yyyyyyy[k];

                    g_y_yyyyyyyz[k] = fr * g11_0_yyyyyyyz[k] + 7.0 * f2t * gk_0_yyyyyyz[k];

                    g_y_yyyyyyzz[k] = fr * g11_0_yyyyyyzz[k] + 6.0 * f2t * gk_0_yyyyyzz[k];

                    g_y_yyyyyzzz[k] = fr * g11_0_yyyyyzzz[k] + 5.0 * f2t * gk_0_yyyyzzz[k];

                    g_y_yyyyzzzz[k] = fr * g11_0_yyyyzzzz[k] + 4.0 * f2t * gk_0_yyyzzzz[k];

                    g_y_yyyzzzzz[k] = fr * g11_0_yyyzzzzz[k] + 3.0 * f2t * gk_0_yyzzzzz[k];

                    g_y_yyzzzzzz[k] = fr * g11_0_yyzzzzzz[k] + 2.0 * f2t * gk_0_yzzzzzz[k];

                    g_y_yzzzzzzz[k] = fr * g11_0_yzzzzzzz[k] + f2t * gk_0_zzzzzzz[k];

                    g_y_zzzzzzzz[k] = fr * g11_0_zzzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_z_xxxxxxxx[k] = fr * g11_0_xxxxxxxx[k];

                    g_z_xxxxxxxy[k] = fr * g11_0_xxxxxxxy[k];

                    g_z_xxxxxxxz[k] = fr * g11_0_xxxxxxxz[k] + f2t * gk_0_xxxxxxx[k];

                    g_z_xxxxxxyy[k] = fr * g11_0_xxxxxxyy[k];

                    g_z_xxxxxxyz[k] = fr * g11_0_xxxxxxyz[k] + f2t * gk_0_xxxxxxy[k];

                    g_z_xxxxxxzz[k] = fr * g11_0_xxxxxxzz[k] + 2.0 * f2t * gk_0_xxxxxxz[k];

                    g_z_xxxxxyyy[k] = fr * g11_0_xxxxxyyy[k];

                    g_z_xxxxxyyz[k] = fr * g11_0_xxxxxyyz[k] + f2t * gk_0_xxxxxyy[k];

                    g_z_xxxxxyzz[k] = fr * g11_0_xxxxxyzz[k] + 2.0 * f2t * gk_0_xxxxxyz[k];

                    g_z_xxxxxzzz[k] = fr * g11_0_xxxxxzzz[k] + 3.0 * f2t * gk_0_xxxxxzz[k];

                    g_z_xxxxyyyy[k] = fr * g11_0_xxxxyyyy[k];

                    g_z_xxxxyyyz[k] = fr * g11_0_xxxxyyyz[k] + f2t * gk_0_xxxxyyy[k];

                    g_z_xxxxyyzz[k] = fr * g11_0_xxxxyyzz[k] + 2.0 * f2t * gk_0_xxxxyyz[k];

                    g_z_xxxxyzzz[k] = fr * g11_0_xxxxyzzz[k] + 3.0 * f2t * gk_0_xxxxyzz[k];

                    g_z_xxxxzzzz[k] = fr * g11_0_xxxxzzzz[k] + 4.0 * f2t * gk_0_xxxxzzz[k];

                    g_z_xxxyyyyy[k] = fr * g11_0_xxxyyyyy[k];

                    g_z_xxxyyyyz[k] = fr * g11_0_xxxyyyyz[k] + f2t * gk_0_xxxyyyy[k];

                    g_z_xxxyyyzz[k] = fr * g11_0_xxxyyyzz[k] + 2.0 * f2t * gk_0_xxxyyyz[k];

                    g_z_xxxyyzzz[k] = fr * g11_0_xxxyyzzz[k] + 3.0 * f2t * gk_0_xxxyyzz[k];

                    g_z_xxxyzzzz[k] = fr * g11_0_xxxyzzzz[k] + 4.0 * f2t * gk_0_xxxyzzz[k];

                    g_z_xxxzzzzz[k] = fr * g11_0_xxxzzzzz[k] + 5.0 * f2t * gk_0_xxxzzzz[k];

                    g_z_xxyyyyyy[k] = fr * g11_0_xxyyyyyy[k];

                    g_z_xxyyyyyz[k] = fr * g11_0_xxyyyyyz[k] + f2t * gk_0_xxyyyyy[k];

                    g_z_xxyyyyzz[k] = fr * g11_0_xxyyyyzz[k] + 2.0 * f2t * gk_0_xxyyyyz[k];

                    g_z_xxyyyzzz[k] = fr * g11_0_xxyyyzzz[k] + 3.0 * f2t * gk_0_xxyyyzz[k];

                    g_z_xxyyzzzz[k] = fr * g11_0_xxyyzzzz[k] + 4.0 * f2t * gk_0_xxyyzzz[k];

                    g_z_xxyzzzzz[k] = fr * g11_0_xxyzzzzz[k] + 5.0 * f2t * gk_0_xxyzzzz[k];

                    g_z_xxzzzzzz[k] = fr * g11_0_xxzzzzzz[k] + 6.0 * f2t * gk_0_xxzzzzz[k];

                    g_z_xyyyyyyy[k] = fr * g11_0_xyyyyyyy[k];

                    g_z_xyyyyyyz[k] = fr * g11_0_xyyyyyyz[k] + f2t * gk_0_xyyyyyy[k];

                    g_z_xyyyyyzz[k] = fr * g11_0_xyyyyyzz[k] + 2.0 * f2t * gk_0_xyyyyyz[k];

                    g_z_xyyyyzzz[k] = fr * g11_0_xyyyyzzz[k] + 3.0 * f2t * gk_0_xyyyyzz[k];

                    g_z_xyyyzzzz[k] = fr * g11_0_xyyyzzzz[k] + 4.0 * f2t * gk_0_xyyyzzz[k];

                    g_z_xyyzzzzz[k] = fr * g11_0_xyyzzzzz[k] + 5.0 * f2t * gk_0_xyyzzzz[k];

                    g_z_xyzzzzzz[k] = fr * g11_0_xyzzzzzz[k] + 6.0 * f2t * gk_0_xyzzzzz[k];

                    g_z_xzzzzzzz[k] = fr * g11_0_xzzzzzzz[k] + 7.0 * f2t * gk_0_xzzzzzz[k];

                    g_z_yyyyyyyy[k] = fr * g11_0_yyyyyyyy[k];

                    g_z_yyyyyyyz[k] = fr * g11_0_yyyyyyyz[k] + f2t * gk_0_yyyyyyy[k];

                    g_z_yyyyyyzz[k] = fr * g11_0_yyyyyyzz[k] + 2.0 * f2t * gk_0_yyyyyyz[k];

                    g_z_yyyyyzzz[k] = fr * g11_0_yyyyyzzz[k] + 3.0 * f2t * gk_0_yyyyyzz[k];

                    g_z_yyyyzzzz[k] = fr * g11_0_yyyyzzzz[k] + 4.0 * f2t * gk_0_yyyyzzz[k];

                    g_z_yyyzzzzz[k] = fr * g11_0_yyyzzzzz[k] + 5.0 * f2t * gk_0_yyyzzzz[k];

                    g_z_yyzzzzzz[k] = fr * g11_0_yyzzzzzz[k] + 6.0 * f2t * gk_0_yyzzzzz[k];

                    g_z_yzzzzzzz[k] = fr * g11_0_yzzzzzzz[k] + 7.0 * f2t * gk_0_yzzzzzz[k];

                    g_z_zzzzzzzz[k] = fr * g11_0_zzzzzzzz[k] + 8.0 * f2t * gk_0_zzzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForDSL(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 2, 8);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {2, 8, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 8, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 8, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {0, 8, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {1, 7, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (P|g(r,r')|SK)^(m+1) integrals

                auto gk_x_xxxxxxx = primBuffer.data(gkoff + 108 * idx);

                auto gk_x_xxxxxxy = primBuffer.data(gkoff + 108 * idx + 1);

                auto gk_x_xxxxxxz = primBuffer.data(gkoff + 108 * idx + 2);

                auto gk_x_xxxxxyy = primBuffer.data(gkoff + 108 * idx + 3);

                auto gk_x_xxxxxyz = primBuffer.data(gkoff + 108 * idx + 4);

                auto gk_x_xxxxxzz = primBuffer.data(gkoff + 108 * idx + 5);

                auto gk_x_xxxxyyy = primBuffer.data(gkoff + 108 * idx + 6);

                auto gk_x_xxxxyyz = primBuffer.data(gkoff + 108 * idx + 7);

                auto gk_x_xxxxyzz = primBuffer.data(gkoff + 108 * idx + 8);

                auto gk_x_xxxxzzz = primBuffer.data(gkoff + 108 * idx + 9);

                auto gk_x_xxxyyyy = primBuffer.data(gkoff + 108 * idx + 10);

                auto gk_x_xxxyyyz = primBuffer.data(gkoff + 108 * idx + 11);

                auto gk_x_xxxyyzz = primBuffer.data(gkoff + 108 * idx + 12);

                auto gk_x_xxxyzzz = primBuffer.data(gkoff + 108 * idx + 13);

                auto gk_x_xxxzzzz = primBuffer.data(gkoff + 108 * idx + 14);

                auto gk_x_xxyyyyy = primBuffer.data(gkoff + 108 * idx + 15);

                auto gk_x_xxyyyyz = primBuffer.data(gkoff + 108 * idx + 16);

                auto gk_x_xxyyyzz = primBuffer.data(gkoff + 108 * idx + 17);

                auto gk_x_xxyyzzz = primBuffer.data(gkoff + 108 * idx + 18);

                auto gk_x_xxyzzzz = primBuffer.data(gkoff + 108 * idx + 19);

                auto gk_x_xxzzzzz = primBuffer.data(gkoff + 108 * idx + 20);

                auto gk_x_xyyyyyy = primBuffer.data(gkoff + 108 * idx + 21);

                auto gk_x_xyyyyyz = primBuffer.data(gkoff + 108 * idx + 22);

                auto gk_x_xyyyyzz = primBuffer.data(gkoff + 108 * idx + 23);

                auto gk_x_xyyyzzz = primBuffer.data(gkoff + 108 * idx + 24);

                auto gk_x_xyyzzzz = primBuffer.data(gkoff + 108 * idx + 25);

                auto gk_x_xyzzzzz = primBuffer.data(gkoff + 108 * idx + 26);

                auto gk_x_xzzzzzz = primBuffer.data(gkoff + 108 * idx + 27);

                auto gk_x_yyyyyyy = primBuffer.data(gkoff + 108 * idx + 28);

                auto gk_x_yyyyyyz = primBuffer.data(gkoff + 108 * idx + 29);

                auto gk_x_yyyyyzz = primBuffer.data(gkoff + 108 * idx + 30);

                auto gk_x_yyyyzzz = primBuffer.data(gkoff + 108 * idx + 31);

                auto gk_x_yyyzzzz = primBuffer.data(gkoff + 108 * idx + 32);

                auto gk_x_yyzzzzz = primBuffer.data(gkoff + 108 * idx + 33);

                auto gk_x_yzzzzzz = primBuffer.data(gkoff + 108 * idx + 34);

                auto gk_x_zzzzzzz = primBuffer.data(gkoff + 108 * idx + 35);

                auto gk_y_xxxxxxx = primBuffer.data(gkoff + 108 * idx + 36);

                auto gk_y_xxxxxxy = primBuffer.data(gkoff + 108 * idx + 37);

                auto gk_y_xxxxxxz = primBuffer.data(gkoff + 108 * idx + 38);

                auto gk_y_xxxxxyy = primBuffer.data(gkoff + 108 * idx + 39);

                auto gk_y_xxxxxyz = primBuffer.data(gkoff + 108 * idx + 40);

                auto gk_y_xxxxxzz = primBuffer.data(gkoff + 108 * idx + 41);

                auto gk_y_xxxxyyy = primBuffer.data(gkoff + 108 * idx + 42);

                auto gk_y_xxxxyyz = primBuffer.data(gkoff + 108 * idx + 43);

                auto gk_y_xxxxyzz = primBuffer.data(gkoff + 108 * idx + 44);

                auto gk_y_xxxxzzz = primBuffer.data(gkoff + 108 * idx + 45);

                auto gk_y_xxxyyyy = primBuffer.data(gkoff + 108 * idx + 46);

                auto gk_y_xxxyyyz = primBuffer.data(gkoff + 108 * idx + 47);

                auto gk_y_xxxyyzz = primBuffer.data(gkoff + 108 * idx + 48);

                auto gk_y_xxxyzzz = primBuffer.data(gkoff + 108 * idx + 49);

                auto gk_y_xxxzzzz = primBuffer.data(gkoff + 108 * idx + 50);

                auto gk_y_xxyyyyy = primBuffer.data(gkoff + 108 * idx + 51);

                auto gk_y_xxyyyyz = primBuffer.data(gkoff + 108 * idx + 52);

                auto gk_y_xxyyyzz = primBuffer.data(gkoff + 108 * idx + 53);

                auto gk_y_xxyyzzz = primBuffer.data(gkoff + 108 * idx + 54);

                auto gk_y_xxyzzzz = primBuffer.data(gkoff + 108 * idx + 55);

                auto gk_y_xxzzzzz = primBuffer.data(gkoff + 108 * idx + 56);

                auto gk_y_xyyyyyy = primBuffer.data(gkoff + 108 * idx + 57);

                auto gk_y_xyyyyyz = primBuffer.data(gkoff + 108 * idx + 58);

                auto gk_y_xyyyyzz = primBuffer.data(gkoff + 108 * idx + 59);

                auto gk_y_xyyyzzz = primBuffer.data(gkoff + 108 * idx + 60);

                auto gk_y_xyyzzzz = primBuffer.data(gkoff + 108 * idx + 61);

                auto gk_y_xyzzzzz = primBuffer.data(gkoff + 108 * idx + 62);

                auto gk_y_xzzzzzz = primBuffer.data(gkoff + 108 * idx + 63);

                auto gk_y_yyyyyyy = primBuffer.data(gkoff + 108 * idx + 64);

                auto gk_y_yyyyyyz = primBuffer.data(gkoff + 108 * idx + 65);

                auto gk_y_yyyyyzz = primBuffer.data(gkoff + 108 * idx + 66);

                auto gk_y_yyyyzzz = primBuffer.data(gkoff + 108 * idx + 67);

                auto gk_y_yyyzzzz = primBuffer.data(gkoff + 108 * idx + 68);

                auto gk_y_yyzzzzz = primBuffer.data(gkoff + 108 * idx + 69);

                auto gk_y_yzzzzzz = primBuffer.data(gkoff + 108 * idx + 70);

                auto gk_y_zzzzzzz = primBuffer.data(gkoff + 108 * idx + 71);

                auto gk_z_xxxxxxx = primBuffer.data(gkoff + 108 * idx + 72);

                auto gk_z_xxxxxxy = primBuffer.data(gkoff + 108 * idx + 73);

                auto gk_z_xxxxxxz = primBuffer.data(gkoff + 108 * idx + 74);

                auto gk_z_xxxxxyy = primBuffer.data(gkoff + 108 * idx + 75);

                auto gk_z_xxxxxyz = primBuffer.data(gkoff + 108 * idx + 76);

                auto gk_z_xxxxxzz = primBuffer.data(gkoff + 108 * idx + 77);

                auto gk_z_xxxxyyy = primBuffer.data(gkoff + 108 * idx + 78);

                auto gk_z_xxxxyyz = primBuffer.data(gkoff + 108 * idx + 79);

                auto gk_z_xxxxyzz = primBuffer.data(gkoff + 108 * idx + 80);

                auto gk_z_xxxxzzz = primBuffer.data(gkoff + 108 * idx + 81);

                auto gk_z_xxxyyyy = primBuffer.data(gkoff + 108 * idx + 82);

                auto gk_z_xxxyyyz = primBuffer.data(gkoff + 108 * idx + 83);

                auto gk_z_xxxyyzz = primBuffer.data(gkoff + 108 * idx + 84);

                auto gk_z_xxxyzzz = primBuffer.data(gkoff + 108 * idx + 85);

                auto gk_z_xxxzzzz = primBuffer.data(gkoff + 108 * idx + 86);

                auto gk_z_xxyyyyy = primBuffer.data(gkoff + 108 * idx + 87);

                auto gk_z_xxyyyyz = primBuffer.data(gkoff + 108 * idx + 88);

                auto gk_z_xxyyyzz = primBuffer.data(gkoff + 108 * idx + 89);

                auto gk_z_xxyyzzz = primBuffer.data(gkoff + 108 * idx + 90);

                auto gk_z_xxyzzzz = primBuffer.data(gkoff + 108 * idx + 91);

                auto gk_z_xxzzzzz = primBuffer.data(gkoff + 108 * idx + 92);

                auto gk_z_xyyyyyy = primBuffer.data(gkoff + 108 * idx + 93);

                auto gk_z_xyyyyyz = primBuffer.data(gkoff + 108 * idx + 94);

                auto gk_z_xyyyyzz = primBuffer.data(gkoff + 108 * idx + 95);

                auto gk_z_xyyyzzz = primBuffer.data(gkoff + 108 * idx + 96);

                auto gk_z_xyyzzzz = primBuffer.data(gkoff + 108 * idx + 97);

                auto gk_z_xyzzzzz = primBuffer.data(gkoff + 108 * idx + 98);

                auto gk_z_xzzzzzz = primBuffer.data(gkoff + 108 * idx + 99);

                auto gk_z_yyyyyyy = primBuffer.data(gkoff + 108 * idx + 100);

                auto gk_z_yyyyyyz = primBuffer.data(gkoff + 108 * idx + 101);

                auto gk_z_yyyyyzz = primBuffer.data(gkoff + 108 * idx + 102);

                auto gk_z_yyyyzzz = primBuffer.data(gkoff + 108 * idx + 103);

                auto gk_z_yyyzzzz = primBuffer.data(gkoff + 108 * idx + 104);

                auto gk_z_yyzzzzz = primBuffer.data(gkoff + 108 * idx + 105);

                auto gk_z_yzzzzzz = primBuffer.data(gkoff + 108 * idx + 106);

                auto gk_z_zzzzzzz = primBuffer.data(gkoff + 108 * idx + 107);

                // set up pointers to (S|g(r,r')|SL)^(m) integrals

                auto g20_0_xxxxxxxx = primBuffer.data(g20off + 45 * idx);

                auto g20_0_xxxxxxxy = primBuffer.data(g20off + 45 * idx + 1);

                auto g20_0_xxxxxxxz = primBuffer.data(g20off + 45 * idx + 2);

                auto g20_0_xxxxxxyy = primBuffer.data(g20off + 45 * idx + 3);

                auto g20_0_xxxxxxyz = primBuffer.data(g20off + 45 * idx + 4);

                auto g20_0_xxxxxxzz = primBuffer.data(g20off + 45 * idx + 5);

                auto g20_0_xxxxxyyy = primBuffer.data(g20off + 45 * idx + 6);

                auto g20_0_xxxxxyyz = primBuffer.data(g20off + 45 * idx + 7);

                auto g20_0_xxxxxyzz = primBuffer.data(g20off + 45 * idx + 8);

                auto g20_0_xxxxxzzz = primBuffer.data(g20off + 45 * idx + 9);

                auto g20_0_xxxxyyyy = primBuffer.data(g20off + 45 * idx + 10);

                auto g20_0_xxxxyyyz = primBuffer.data(g20off + 45 * idx + 11);

                auto g20_0_xxxxyyzz = primBuffer.data(g20off + 45 * idx + 12);

                auto g20_0_xxxxyzzz = primBuffer.data(g20off + 45 * idx + 13);

                auto g20_0_xxxxzzzz = primBuffer.data(g20off + 45 * idx + 14);

                auto g20_0_xxxyyyyy = primBuffer.data(g20off + 45 * idx + 15);

                auto g20_0_xxxyyyyz = primBuffer.data(g20off + 45 * idx + 16);

                auto g20_0_xxxyyyzz = primBuffer.data(g20off + 45 * idx + 17);

                auto g20_0_xxxyyzzz = primBuffer.data(g20off + 45 * idx + 18);

                auto g20_0_xxxyzzzz = primBuffer.data(g20off + 45 * idx + 19);

                auto g20_0_xxxzzzzz = primBuffer.data(g20off + 45 * idx + 20);

                auto g20_0_xxyyyyyy = primBuffer.data(g20off + 45 * idx + 21);

                auto g20_0_xxyyyyyz = primBuffer.data(g20off + 45 * idx + 22);

                auto g20_0_xxyyyyzz = primBuffer.data(g20off + 45 * idx + 23);

                auto g20_0_xxyyyzzz = primBuffer.data(g20off + 45 * idx + 24);

                auto g20_0_xxyyzzzz = primBuffer.data(g20off + 45 * idx + 25);

                auto g20_0_xxyzzzzz = primBuffer.data(g20off + 45 * idx + 26);

                auto g20_0_xxzzzzzz = primBuffer.data(g20off + 45 * idx + 27);

                auto g20_0_xyyyyyyy = primBuffer.data(g20off + 45 * idx + 28);

                auto g20_0_xyyyyyyz = primBuffer.data(g20off + 45 * idx + 29);

                auto g20_0_xyyyyyzz = primBuffer.data(g20off + 45 * idx + 30);

                auto g20_0_xyyyyzzz = primBuffer.data(g20off + 45 * idx + 31);

                auto g20_0_xyyyzzzz = primBuffer.data(g20off + 45 * idx + 32);

                auto g20_0_xyyzzzzz = primBuffer.data(g20off + 45 * idx + 33);

                auto g20_0_xyzzzzzz = primBuffer.data(g20off + 45 * idx + 34);

                auto g20_0_xzzzzzzz = primBuffer.data(g20off + 45 * idx + 35);

                auto g20_0_yyyyyyyy = primBuffer.data(g20off + 45 * idx + 36);

                auto g20_0_yyyyyyyz = primBuffer.data(g20off + 45 * idx + 37);

                auto g20_0_yyyyyyzz = primBuffer.data(g20off + 45 * idx + 38);

                auto g20_0_yyyyyzzz = primBuffer.data(g20off + 45 * idx + 39);

                auto g20_0_yyyyzzzz = primBuffer.data(g20off + 45 * idx + 40);

                auto g20_0_yyyzzzzz = primBuffer.data(g20off + 45 * idx + 41);

                auto g20_0_yyzzzzzz = primBuffer.data(g20off + 45 * idx + 42);

                auto g20_0_yzzzzzzz = primBuffer.data(g20off + 45 * idx + 43);

                auto g20_0_zzzzzzzz = primBuffer.data(g20off + 45 * idx + 44);

                // set up pointers to (S|g(r,r')|SL)^(m+1) integrals

                auto g21_0_xxxxxxxx = primBuffer.data(g21off + 45 * idx);

                auto g21_0_xxxxxxxy = primBuffer.data(g21off + 45 * idx + 1);

                auto g21_0_xxxxxxxz = primBuffer.data(g21off + 45 * idx + 2);

                auto g21_0_xxxxxxyy = primBuffer.data(g21off + 45 * idx + 3);

                auto g21_0_xxxxxxyz = primBuffer.data(g21off + 45 * idx + 4);

                auto g21_0_xxxxxxzz = primBuffer.data(g21off + 45 * idx + 5);

                auto g21_0_xxxxxyyy = primBuffer.data(g21off + 45 * idx + 6);

                auto g21_0_xxxxxyyz = primBuffer.data(g21off + 45 * idx + 7);

                auto g21_0_xxxxxyzz = primBuffer.data(g21off + 45 * idx + 8);

                auto g21_0_xxxxxzzz = primBuffer.data(g21off + 45 * idx + 9);

                auto g21_0_xxxxyyyy = primBuffer.data(g21off + 45 * idx + 10);

                auto g21_0_xxxxyyyz = primBuffer.data(g21off + 45 * idx + 11);

                auto g21_0_xxxxyyzz = primBuffer.data(g21off + 45 * idx + 12);

                auto g21_0_xxxxyzzz = primBuffer.data(g21off + 45 * idx + 13);

                auto g21_0_xxxxzzzz = primBuffer.data(g21off + 45 * idx + 14);

                auto g21_0_xxxyyyyy = primBuffer.data(g21off + 45 * idx + 15);

                auto g21_0_xxxyyyyz = primBuffer.data(g21off + 45 * idx + 16);

                auto g21_0_xxxyyyzz = primBuffer.data(g21off + 45 * idx + 17);

                auto g21_0_xxxyyzzz = primBuffer.data(g21off + 45 * idx + 18);

                auto g21_0_xxxyzzzz = primBuffer.data(g21off + 45 * idx + 19);

                auto g21_0_xxxzzzzz = primBuffer.data(g21off + 45 * idx + 20);

                auto g21_0_xxyyyyyy = primBuffer.data(g21off + 45 * idx + 21);

                auto g21_0_xxyyyyyz = primBuffer.data(g21off + 45 * idx + 22);

                auto g21_0_xxyyyyzz = primBuffer.data(g21off + 45 * idx + 23);

                auto g21_0_xxyyyzzz = primBuffer.data(g21off + 45 * idx + 24);

                auto g21_0_xxyyzzzz = primBuffer.data(g21off + 45 * idx + 25);

                auto g21_0_xxyzzzzz = primBuffer.data(g21off + 45 * idx + 26);

                auto g21_0_xxzzzzzz = primBuffer.data(g21off + 45 * idx + 27);

                auto g21_0_xyyyyyyy = primBuffer.data(g21off + 45 * idx + 28);

                auto g21_0_xyyyyyyz = primBuffer.data(g21off + 45 * idx + 29);

                auto g21_0_xyyyyyzz = primBuffer.data(g21off + 45 * idx + 30);

                auto g21_0_xyyyyzzz = primBuffer.data(g21off + 45 * idx + 31);

                auto g21_0_xyyyzzzz = primBuffer.data(g21off + 45 * idx + 32);

                auto g21_0_xyyzzzzz = primBuffer.data(g21off + 45 * idx + 33);

                auto g21_0_xyzzzzzz = primBuffer.data(g21off + 45 * idx + 34);

                auto g21_0_xzzzzzzz = primBuffer.data(g21off + 45 * idx + 35);

                auto g21_0_yyyyyyyy = primBuffer.data(g21off + 45 * idx + 36);

                auto g21_0_yyyyyyyz = primBuffer.data(g21off + 45 * idx + 37);

                auto g21_0_yyyyyyzz = primBuffer.data(g21off + 45 * idx + 38);

                auto g21_0_yyyyyzzz = primBuffer.data(g21off + 45 * idx + 39);

                auto g21_0_yyyyzzzz = primBuffer.data(g21off + 45 * idx + 40);

                auto g21_0_yyyzzzzz = primBuffer.data(g21off + 45 * idx + 41);

                auto g21_0_yyzzzzzz = primBuffer.data(g21off + 45 * idx + 42);

                auto g21_0_yzzzzzzz = primBuffer.data(g21off + 45 * idx + 43);

                auto g21_0_zzzzzzzz = primBuffer.data(g21off + 45 * idx + 44);

                // set up pointers to (P|g(r,r')|SL)^(m+1) integrals

                auto g11_x_xxxxxxxx = primBuffer.data(g11off + 135 * idx);

                auto g11_x_xxxxxxxy = primBuffer.data(g11off + 135 * idx + 1);

                auto g11_x_xxxxxxxz = primBuffer.data(g11off + 135 * idx + 2);

                auto g11_x_xxxxxxyy = primBuffer.data(g11off + 135 * idx + 3);

                auto g11_x_xxxxxxyz = primBuffer.data(g11off + 135 * idx + 4);

                auto g11_x_xxxxxxzz = primBuffer.data(g11off + 135 * idx + 5);

                auto g11_x_xxxxxyyy = primBuffer.data(g11off + 135 * idx + 6);

                auto g11_x_xxxxxyyz = primBuffer.data(g11off + 135 * idx + 7);

                auto g11_x_xxxxxyzz = primBuffer.data(g11off + 135 * idx + 8);

                auto g11_x_xxxxxzzz = primBuffer.data(g11off + 135 * idx + 9);

                auto g11_x_xxxxyyyy = primBuffer.data(g11off + 135 * idx + 10);

                auto g11_x_xxxxyyyz = primBuffer.data(g11off + 135 * idx + 11);

                auto g11_x_xxxxyyzz = primBuffer.data(g11off + 135 * idx + 12);

                auto g11_x_xxxxyzzz = primBuffer.data(g11off + 135 * idx + 13);

                auto g11_x_xxxxzzzz = primBuffer.data(g11off + 135 * idx + 14);

                auto g11_x_xxxyyyyy = primBuffer.data(g11off + 135 * idx + 15);

                auto g11_x_xxxyyyyz = primBuffer.data(g11off + 135 * idx + 16);

                auto g11_x_xxxyyyzz = primBuffer.data(g11off + 135 * idx + 17);

                auto g11_x_xxxyyzzz = primBuffer.data(g11off + 135 * idx + 18);

                auto g11_x_xxxyzzzz = primBuffer.data(g11off + 135 * idx + 19);

                auto g11_x_xxxzzzzz = primBuffer.data(g11off + 135 * idx + 20);

                auto g11_x_xxyyyyyy = primBuffer.data(g11off + 135 * idx + 21);

                auto g11_x_xxyyyyyz = primBuffer.data(g11off + 135 * idx + 22);

                auto g11_x_xxyyyyzz = primBuffer.data(g11off + 135 * idx + 23);

                auto g11_x_xxyyyzzz = primBuffer.data(g11off + 135 * idx + 24);

                auto g11_x_xxyyzzzz = primBuffer.data(g11off + 135 * idx + 25);

                auto g11_x_xxyzzzzz = primBuffer.data(g11off + 135 * idx + 26);

                auto g11_x_xxzzzzzz = primBuffer.data(g11off + 135 * idx + 27);

                auto g11_x_xyyyyyyy = primBuffer.data(g11off + 135 * idx + 28);

                auto g11_x_xyyyyyyz = primBuffer.data(g11off + 135 * idx + 29);

                auto g11_x_xyyyyyzz = primBuffer.data(g11off + 135 * idx + 30);

                auto g11_x_xyyyyzzz = primBuffer.data(g11off + 135 * idx + 31);

                auto g11_x_xyyyzzzz = primBuffer.data(g11off + 135 * idx + 32);

                auto g11_x_xyyzzzzz = primBuffer.data(g11off + 135 * idx + 33);

                auto g11_x_xyzzzzzz = primBuffer.data(g11off + 135 * idx + 34);

                auto g11_x_xzzzzzzz = primBuffer.data(g11off + 135 * idx + 35);

                auto g11_x_yyyyyyyy = primBuffer.data(g11off + 135 * idx + 36);

                auto g11_x_yyyyyyyz = primBuffer.data(g11off + 135 * idx + 37);

                auto g11_x_yyyyyyzz = primBuffer.data(g11off + 135 * idx + 38);

                auto g11_x_yyyyyzzz = primBuffer.data(g11off + 135 * idx + 39);

                auto g11_x_yyyyzzzz = primBuffer.data(g11off + 135 * idx + 40);

                auto g11_x_yyyzzzzz = primBuffer.data(g11off + 135 * idx + 41);

                auto g11_x_yyzzzzzz = primBuffer.data(g11off + 135 * idx + 42);

                auto g11_x_yzzzzzzz = primBuffer.data(g11off + 135 * idx + 43);

                auto g11_x_zzzzzzzz = primBuffer.data(g11off + 135 * idx + 44);

                auto g11_y_xxxxxxxx = primBuffer.data(g11off + 135 * idx + 45);

                auto g11_y_xxxxxxxy = primBuffer.data(g11off + 135 * idx + 46);

                auto g11_y_xxxxxxxz = primBuffer.data(g11off + 135 * idx + 47);

                auto g11_y_xxxxxxyy = primBuffer.data(g11off + 135 * idx + 48);

                auto g11_y_xxxxxxyz = primBuffer.data(g11off + 135 * idx + 49);

                auto g11_y_xxxxxxzz = primBuffer.data(g11off + 135 * idx + 50);

                auto g11_y_xxxxxyyy = primBuffer.data(g11off + 135 * idx + 51);

                auto g11_y_xxxxxyyz = primBuffer.data(g11off + 135 * idx + 52);

                auto g11_y_xxxxxyzz = primBuffer.data(g11off + 135 * idx + 53);

                auto g11_y_xxxxxzzz = primBuffer.data(g11off + 135 * idx + 54);

                auto g11_y_xxxxyyyy = primBuffer.data(g11off + 135 * idx + 55);

                auto g11_y_xxxxyyyz = primBuffer.data(g11off + 135 * idx + 56);

                auto g11_y_xxxxyyzz = primBuffer.data(g11off + 135 * idx + 57);

                auto g11_y_xxxxyzzz = primBuffer.data(g11off + 135 * idx + 58);

                auto g11_y_xxxxzzzz = primBuffer.data(g11off + 135 * idx + 59);

                auto g11_y_xxxyyyyy = primBuffer.data(g11off + 135 * idx + 60);

                auto g11_y_xxxyyyyz = primBuffer.data(g11off + 135 * idx + 61);

                auto g11_y_xxxyyyzz = primBuffer.data(g11off + 135 * idx + 62);

                auto g11_y_xxxyyzzz = primBuffer.data(g11off + 135 * idx + 63);

                auto g11_y_xxxyzzzz = primBuffer.data(g11off + 135 * idx + 64);

                auto g11_y_xxxzzzzz = primBuffer.data(g11off + 135 * idx + 65);

                auto g11_y_xxyyyyyy = primBuffer.data(g11off + 135 * idx + 66);

                auto g11_y_xxyyyyyz = primBuffer.data(g11off + 135 * idx + 67);

                auto g11_y_xxyyyyzz = primBuffer.data(g11off + 135 * idx + 68);

                auto g11_y_xxyyyzzz = primBuffer.data(g11off + 135 * idx + 69);

                auto g11_y_xxyyzzzz = primBuffer.data(g11off + 135 * idx + 70);

                auto g11_y_xxyzzzzz = primBuffer.data(g11off + 135 * idx + 71);

                auto g11_y_xxzzzzzz = primBuffer.data(g11off + 135 * idx + 72);

                auto g11_y_xyyyyyyy = primBuffer.data(g11off + 135 * idx + 73);

                auto g11_y_xyyyyyyz = primBuffer.data(g11off + 135 * idx + 74);

                auto g11_y_xyyyyyzz = primBuffer.data(g11off + 135 * idx + 75);

                auto g11_y_xyyyyzzz = primBuffer.data(g11off + 135 * idx + 76);

                auto g11_y_xyyyzzzz = primBuffer.data(g11off + 135 * idx + 77);

                auto g11_y_xyyzzzzz = primBuffer.data(g11off + 135 * idx + 78);

                auto g11_y_xyzzzzzz = primBuffer.data(g11off + 135 * idx + 79);

                auto g11_y_xzzzzzzz = primBuffer.data(g11off + 135 * idx + 80);

                auto g11_y_yyyyyyyy = primBuffer.data(g11off + 135 * idx + 81);

                auto g11_y_yyyyyyyz = primBuffer.data(g11off + 135 * idx + 82);

                auto g11_y_yyyyyyzz = primBuffer.data(g11off + 135 * idx + 83);

                auto g11_y_yyyyyzzz = primBuffer.data(g11off + 135 * idx + 84);

                auto g11_y_yyyyzzzz = primBuffer.data(g11off + 135 * idx + 85);

                auto g11_y_yyyzzzzz = primBuffer.data(g11off + 135 * idx + 86);

                auto g11_y_yyzzzzzz = primBuffer.data(g11off + 135 * idx + 87);

                auto g11_y_yzzzzzzz = primBuffer.data(g11off + 135 * idx + 88);

                auto g11_y_zzzzzzzz = primBuffer.data(g11off + 135 * idx + 89);

                auto g11_z_xxxxxxxx = primBuffer.data(g11off + 135 * idx + 90);

                auto g11_z_xxxxxxxy = primBuffer.data(g11off + 135 * idx + 91);

                auto g11_z_xxxxxxxz = primBuffer.data(g11off + 135 * idx + 92);

                auto g11_z_xxxxxxyy = primBuffer.data(g11off + 135 * idx + 93);

                auto g11_z_xxxxxxyz = primBuffer.data(g11off + 135 * idx + 94);

                auto g11_z_xxxxxxzz = primBuffer.data(g11off + 135 * idx + 95);

                auto g11_z_xxxxxyyy = primBuffer.data(g11off + 135 * idx + 96);

                auto g11_z_xxxxxyyz = primBuffer.data(g11off + 135 * idx + 97);

                auto g11_z_xxxxxyzz = primBuffer.data(g11off + 135 * idx + 98);

                auto g11_z_xxxxxzzz = primBuffer.data(g11off + 135 * idx + 99);

                auto g11_z_xxxxyyyy = primBuffer.data(g11off + 135 * idx + 100);

                auto g11_z_xxxxyyyz = primBuffer.data(g11off + 135 * idx + 101);

                auto g11_z_xxxxyyzz = primBuffer.data(g11off + 135 * idx + 102);

                auto g11_z_xxxxyzzz = primBuffer.data(g11off + 135 * idx + 103);

                auto g11_z_xxxxzzzz = primBuffer.data(g11off + 135 * idx + 104);

                auto g11_z_xxxyyyyy = primBuffer.data(g11off + 135 * idx + 105);

                auto g11_z_xxxyyyyz = primBuffer.data(g11off + 135 * idx + 106);

                auto g11_z_xxxyyyzz = primBuffer.data(g11off + 135 * idx + 107);

                auto g11_z_xxxyyzzz = primBuffer.data(g11off + 135 * idx + 108);

                auto g11_z_xxxyzzzz = primBuffer.data(g11off + 135 * idx + 109);

                auto g11_z_xxxzzzzz = primBuffer.data(g11off + 135 * idx + 110);

                auto g11_z_xxyyyyyy = primBuffer.data(g11off + 135 * idx + 111);

                auto g11_z_xxyyyyyz = primBuffer.data(g11off + 135 * idx + 112);

                auto g11_z_xxyyyyzz = primBuffer.data(g11off + 135 * idx + 113);

                auto g11_z_xxyyyzzz = primBuffer.data(g11off + 135 * idx + 114);

                auto g11_z_xxyyzzzz = primBuffer.data(g11off + 135 * idx + 115);

                auto g11_z_xxyzzzzz = primBuffer.data(g11off + 135 * idx + 116);

                auto g11_z_xxzzzzzz = primBuffer.data(g11off + 135 * idx + 117);

                auto g11_z_xyyyyyyy = primBuffer.data(g11off + 135 * idx + 118);

                auto g11_z_xyyyyyyz = primBuffer.data(g11off + 135 * idx + 119);

                auto g11_z_xyyyyyzz = primBuffer.data(g11off + 135 * idx + 120);

                auto g11_z_xyyyyzzz = primBuffer.data(g11off + 135 * idx + 121);

                auto g11_z_xyyyzzzz = primBuffer.data(g11off + 135 * idx + 122);

                auto g11_z_xyyzzzzz = primBuffer.data(g11off + 135 * idx + 123);

                auto g11_z_xyzzzzzz = primBuffer.data(g11off + 135 * idx + 124);

                auto g11_z_xzzzzzzz = primBuffer.data(g11off + 135 * idx + 125);

                auto g11_z_yyyyyyyy = primBuffer.data(g11off + 135 * idx + 126);

                auto g11_z_yyyyyyyz = primBuffer.data(g11off + 135 * idx + 127);

                auto g11_z_yyyyyyzz = primBuffer.data(g11off + 135 * idx + 128);

                auto g11_z_yyyyyzzz = primBuffer.data(g11off + 135 * idx + 129);

                auto g11_z_yyyyzzzz = primBuffer.data(g11off + 135 * idx + 130);

                auto g11_z_yyyzzzzz = primBuffer.data(g11off + 135 * idx + 131);

                auto g11_z_yyzzzzzz = primBuffer.data(g11off + 135 * idx + 132);

                auto g11_z_yzzzzzzz = primBuffer.data(g11off + 135 * idx + 133);

                auto g11_z_zzzzzzzz = primBuffer.data(g11off + 135 * idx + 134);

                // set up pointers to (D|g(r,r')|SL)^(m) integrals

                auto g_xx_xxxxxxxx = primBuffer.data(goff + 270 * idx);

                auto g_xx_xxxxxxxy = primBuffer.data(goff + 270 * idx + 1);

                auto g_xx_xxxxxxxz = primBuffer.data(goff + 270 * idx + 2);

                auto g_xx_xxxxxxyy = primBuffer.data(goff + 270 * idx + 3);

                auto g_xx_xxxxxxyz = primBuffer.data(goff + 270 * idx + 4);

                auto g_xx_xxxxxxzz = primBuffer.data(goff + 270 * idx + 5);

                auto g_xx_xxxxxyyy = primBuffer.data(goff + 270 * idx + 6);

                auto g_xx_xxxxxyyz = primBuffer.data(goff + 270 * idx + 7);

                auto g_xx_xxxxxyzz = primBuffer.data(goff + 270 * idx + 8);

                auto g_xx_xxxxxzzz = primBuffer.data(goff + 270 * idx + 9);

                auto g_xx_xxxxyyyy = primBuffer.data(goff + 270 * idx + 10);

                auto g_xx_xxxxyyyz = primBuffer.data(goff + 270 * idx + 11);

                auto g_xx_xxxxyyzz = primBuffer.data(goff + 270 * idx + 12);

                auto g_xx_xxxxyzzz = primBuffer.data(goff + 270 * idx + 13);

                auto g_xx_xxxxzzzz = primBuffer.data(goff + 270 * idx + 14);

                auto g_xx_xxxyyyyy = primBuffer.data(goff + 270 * idx + 15);

                auto g_xx_xxxyyyyz = primBuffer.data(goff + 270 * idx + 16);

                auto g_xx_xxxyyyzz = primBuffer.data(goff + 270 * idx + 17);

                auto g_xx_xxxyyzzz = primBuffer.data(goff + 270 * idx + 18);

                auto g_xx_xxxyzzzz = primBuffer.data(goff + 270 * idx + 19);

                auto g_xx_xxxzzzzz = primBuffer.data(goff + 270 * idx + 20);

                auto g_xx_xxyyyyyy = primBuffer.data(goff + 270 * idx + 21);

                auto g_xx_xxyyyyyz = primBuffer.data(goff + 270 * idx + 22);

                auto g_xx_xxyyyyzz = primBuffer.data(goff + 270 * idx + 23);

                auto g_xx_xxyyyzzz = primBuffer.data(goff + 270 * idx + 24);

                auto g_xx_xxyyzzzz = primBuffer.data(goff + 270 * idx + 25);

                auto g_xx_xxyzzzzz = primBuffer.data(goff + 270 * idx + 26);

                auto g_xx_xxzzzzzz = primBuffer.data(goff + 270 * idx + 27);

                auto g_xx_xyyyyyyy = primBuffer.data(goff + 270 * idx + 28);

                auto g_xx_xyyyyyyz = primBuffer.data(goff + 270 * idx + 29);

                auto g_xx_xyyyyyzz = primBuffer.data(goff + 270 * idx + 30);

                auto g_xx_xyyyyzzz = primBuffer.data(goff + 270 * idx + 31);

                auto g_xx_xyyyzzzz = primBuffer.data(goff + 270 * idx + 32);

                auto g_xx_xyyzzzzz = primBuffer.data(goff + 270 * idx + 33);

                auto g_xx_xyzzzzzz = primBuffer.data(goff + 270 * idx + 34);

                auto g_xx_xzzzzzzz = primBuffer.data(goff + 270 * idx + 35);

                auto g_xx_yyyyyyyy = primBuffer.data(goff + 270 * idx + 36);

                auto g_xx_yyyyyyyz = primBuffer.data(goff + 270 * idx + 37);

                auto g_xx_yyyyyyzz = primBuffer.data(goff + 270 * idx + 38);

                auto g_xx_yyyyyzzz = primBuffer.data(goff + 270 * idx + 39);

                auto g_xx_yyyyzzzz = primBuffer.data(goff + 270 * idx + 40);

                auto g_xx_yyyzzzzz = primBuffer.data(goff + 270 * idx + 41);

                auto g_xx_yyzzzzzz = primBuffer.data(goff + 270 * idx + 42);

                auto g_xx_yzzzzzzz = primBuffer.data(goff + 270 * idx + 43);

                auto g_xx_zzzzzzzz = primBuffer.data(goff + 270 * idx + 44);

                auto g_xy_xxxxxxxx = primBuffer.data(goff + 270 * idx + 45);

                auto g_xy_xxxxxxxy = primBuffer.data(goff + 270 * idx + 46);

                auto g_xy_xxxxxxxz = primBuffer.data(goff + 270 * idx + 47);

                auto g_xy_xxxxxxyy = primBuffer.data(goff + 270 * idx + 48);

                auto g_xy_xxxxxxyz = primBuffer.data(goff + 270 * idx + 49);

                auto g_xy_xxxxxxzz = primBuffer.data(goff + 270 * idx + 50);

                auto g_xy_xxxxxyyy = primBuffer.data(goff + 270 * idx + 51);

                auto g_xy_xxxxxyyz = primBuffer.data(goff + 270 * idx + 52);

                auto g_xy_xxxxxyzz = primBuffer.data(goff + 270 * idx + 53);

                auto g_xy_xxxxxzzz = primBuffer.data(goff + 270 * idx + 54);

                auto g_xy_xxxxyyyy = primBuffer.data(goff + 270 * idx + 55);

                auto g_xy_xxxxyyyz = primBuffer.data(goff + 270 * idx + 56);

                auto g_xy_xxxxyyzz = primBuffer.data(goff + 270 * idx + 57);

                auto g_xy_xxxxyzzz = primBuffer.data(goff + 270 * idx + 58);

                auto g_xy_xxxxzzzz = primBuffer.data(goff + 270 * idx + 59);

                auto g_xy_xxxyyyyy = primBuffer.data(goff + 270 * idx + 60);

                auto g_xy_xxxyyyyz = primBuffer.data(goff + 270 * idx + 61);

                auto g_xy_xxxyyyzz = primBuffer.data(goff + 270 * idx + 62);

                auto g_xy_xxxyyzzz = primBuffer.data(goff + 270 * idx + 63);

                auto g_xy_xxxyzzzz = primBuffer.data(goff + 270 * idx + 64);

                auto g_xy_xxxzzzzz = primBuffer.data(goff + 270 * idx + 65);

                auto g_xy_xxyyyyyy = primBuffer.data(goff + 270 * idx + 66);

                auto g_xy_xxyyyyyz = primBuffer.data(goff + 270 * idx + 67);

                auto g_xy_xxyyyyzz = primBuffer.data(goff + 270 * idx + 68);

                auto g_xy_xxyyyzzz = primBuffer.data(goff + 270 * idx + 69);

                auto g_xy_xxyyzzzz = primBuffer.data(goff + 270 * idx + 70);

                auto g_xy_xxyzzzzz = primBuffer.data(goff + 270 * idx + 71);

                auto g_xy_xxzzzzzz = primBuffer.data(goff + 270 * idx + 72);

                auto g_xy_xyyyyyyy = primBuffer.data(goff + 270 * idx + 73);

                auto g_xy_xyyyyyyz = primBuffer.data(goff + 270 * idx + 74);

                auto g_xy_xyyyyyzz = primBuffer.data(goff + 270 * idx + 75);

                auto g_xy_xyyyyzzz = primBuffer.data(goff + 270 * idx + 76);

                auto g_xy_xyyyzzzz = primBuffer.data(goff + 270 * idx + 77);

                auto g_xy_xyyzzzzz = primBuffer.data(goff + 270 * idx + 78);

                auto g_xy_xyzzzzzz = primBuffer.data(goff + 270 * idx + 79);

                auto g_xy_xzzzzzzz = primBuffer.data(goff + 270 * idx + 80);

                auto g_xy_yyyyyyyy = primBuffer.data(goff + 270 * idx + 81);

                auto g_xy_yyyyyyyz = primBuffer.data(goff + 270 * idx + 82);

                auto g_xy_yyyyyyzz = primBuffer.data(goff + 270 * idx + 83);

                auto g_xy_yyyyyzzz = primBuffer.data(goff + 270 * idx + 84);

                auto g_xy_yyyyzzzz = primBuffer.data(goff + 270 * idx + 85);

                auto g_xy_yyyzzzzz = primBuffer.data(goff + 270 * idx + 86);

                auto g_xy_yyzzzzzz = primBuffer.data(goff + 270 * idx + 87);

                auto g_xy_yzzzzzzz = primBuffer.data(goff + 270 * idx + 88);

                auto g_xy_zzzzzzzz = primBuffer.data(goff + 270 * idx + 89);

                auto g_xz_xxxxxxxx = primBuffer.data(goff + 270 * idx + 90);

                auto g_xz_xxxxxxxy = primBuffer.data(goff + 270 * idx + 91);

                auto g_xz_xxxxxxxz = primBuffer.data(goff + 270 * idx + 92);

                auto g_xz_xxxxxxyy = primBuffer.data(goff + 270 * idx + 93);

                auto g_xz_xxxxxxyz = primBuffer.data(goff + 270 * idx + 94);

                auto g_xz_xxxxxxzz = primBuffer.data(goff + 270 * idx + 95);

                auto g_xz_xxxxxyyy = primBuffer.data(goff + 270 * idx + 96);

                auto g_xz_xxxxxyyz = primBuffer.data(goff + 270 * idx + 97);

                auto g_xz_xxxxxyzz = primBuffer.data(goff + 270 * idx + 98);

                auto g_xz_xxxxxzzz = primBuffer.data(goff + 270 * idx + 99);

                auto g_xz_xxxxyyyy = primBuffer.data(goff + 270 * idx + 100);

                auto g_xz_xxxxyyyz = primBuffer.data(goff + 270 * idx + 101);

                auto g_xz_xxxxyyzz = primBuffer.data(goff + 270 * idx + 102);

                auto g_xz_xxxxyzzz = primBuffer.data(goff + 270 * idx + 103);

                auto g_xz_xxxxzzzz = primBuffer.data(goff + 270 * idx + 104);

                auto g_xz_xxxyyyyy = primBuffer.data(goff + 270 * idx + 105);

                auto g_xz_xxxyyyyz = primBuffer.data(goff + 270 * idx + 106);

                auto g_xz_xxxyyyzz = primBuffer.data(goff + 270 * idx + 107);

                auto g_xz_xxxyyzzz = primBuffer.data(goff + 270 * idx + 108);

                auto g_xz_xxxyzzzz = primBuffer.data(goff + 270 * idx + 109);

                auto g_xz_xxxzzzzz = primBuffer.data(goff + 270 * idx + 110);

                auto g_xz_xxyyyyyy = primBuffer.data(goff + 270 * idx + 111);

                auto g_xz_xxyyyyyz = primBuffer.data(goff + 270 * idx + 112);

                auto g_xz_xxyyyyzz = primBuffer.data(goff + 270 * idx + 113);

                auto g_xz_xxyyyzzz = primBuffer.data(goff + 270 * idx + 114);

                auto g_xz_xxyyzzzz = primBuffer.data(goff + 270 * idx + 115);

                auto g_xz_xxyzzzzz = primBuffer.data(goff + 270 * idx + 116);

                auto g_xz_xxzzzzzz = primBuffer.data(goff + 270 * idx + 117);

                auto g_xz_xyyyyyyy = primBuffer.data(goff + 270 * idx + 118);

                auto g_xz_xyyyyyyz = primBuffer.data(goff + 270 * idx + 119);

                auto g_xz_xyyyyyzz = primBuffer.data(goff + 270 * idx + 120);

                auto g_xz_xyyyyzzz = primBuffer.data(goff + 270 * idx + 121);

                auto g_xz_xyyyzzzz = primBuffer.data(goff + 270 * idx + 122);

                auto g_xz_xyyzzzzz = primBuffer.data(goff + 270 * idx + 123);

                auto g_xz_xyzzzzzz = primBuffer.data(goff + 270 * idx + 124);

                auto g_xz_xzzzzzzz = primBuffer.data(goff + 270 * idx + 125);

                auto g_xz_yyyyyyyy = primBuffer.data(goff + 270 * idx + 126);

                auto g_xz_yyyyyyyz = primBuffer.data(goff + 270 * idx + 127);

                auto g_xz_yyyyyyzz = primBuffer.data(goff + 270 * idx + 128);

                auto g_xz_yyyyyzzz = primBuffer.data(goff + 270 * idx + 129);

                auto g_xz_yyyyzzzz = primBuffer.data(goff + 270 * idx + 130);

                auto g_xz_yyyzzzzz = primBuffer.data(goff + 270 * idx + 131);

                auto g_xz_yyzzzzzz = primBuffer.data(goff + 270 * idx + 132);

                auto g_xz_yzzzzzzz = primBuffer.data(goff + 270 * idx + 133);

                auto g_xz_zzzzzzzz = primBuffer.data(goff + 270 * idx + 134);

                auto g_yy_xxxxxxxx = primBuffer.data(goff + 270 * idx + 135);

                auto g_yy_xxxxxxxy = primBuffer.data(goff + 270 * idx + 136);

                auto g_yy_xxxxxxxz = primBuffer.data(goff + 270 * idx + 137);

                auto g_yy_xxxxxxyy = primBuffer.data(goff + 270 * idx + 138);

                auto g_yy_xxxxxxyz = primBuffer.data(goff + 270 * idx + 139);

                auto g_yy_xxxxxxzz = primBuffer.data(goff + 270 * idx + 140);

                auto g_yy_xxxxxyyy = primBuffer.data(goff + 270 * idx + 141);

                auto g_yy_xxxxxyyz = primBuffer.data(goff + 270 * idx + 142);

                auto g_yy_xxxxxyzz = primBuffer.data(goff + 270 * idx + 143);

                auto g_yy_xxxxxzzz = primBuffer.data(goff + 270 * idx + 144);

                auto g_yy_xxxxyyyy = primBuffer.data(goff + 270 * idx + 145);

                auto g_yy_xxxxyyyz = primBuffer.data(goff + 270 * idx + 146);

                auto g_yy_xxxxyyzz = primBuffer.data(goff + 270 * idx + 147);

                auto g_yy_xxxxyzzz = primBuffer.data(goff + 270 * idx + 148);

                auto g_yy_xxxxzzzz = primBuffer.data(goff + 270 * idx + 149);

                auto g_yy_xxxyyyyy = primBuffer.data(goff + 270 * idx + 150);

                auto g_yy_xxxyyyyz = primBuffer.data(goff + 270 * idx + 151);

                auto g_yy_xxxyyyzz = primBuffer.data(goff + 270 * idx + 152);

                auto g_yy_xxxyyzzz = primBuffer.data(goff + 270 * idx + 153);

                auto g_yy_xxxyzzzz = primBuffer.data(goff + 270 * idx + 154);

                auto g_yy_xxxzzzzz = primBuffer.data(goff + 270 * idx + 155);

                auto g_yy_xxyyyyyy = primBuffer.data(goff + 270 * idx + 156);

                auto g_yy_xxyyyyyz = primBuffer.data(goff + 270 * idx + 157);

                auto g_yy_xxyyyyzz = primBuffer.data(goff + 270 * idx + 158);

                auto g_yy_xxyyyzzz = primBuffer.data(goff + 270 * idx + 159);

                auto g_yy_xxyyzzzz = primBuffer.data(goff + 270 * idx + 160);

                auto g_yy_xxyzzzzz = primBuffer.data(goff + 270 * idx + 161);

                auto g_yy_xxzzzzzz = primBuffer.data(goff + 270 * idx + 162);

                auto g_yy_xyyyyyyy = primBuffer.data(goff + 270 * idx + 163);

                auto g_yy_xyyyyyyz = primBuffer.data(goff + 270 * idx + 164);

                auto g_yy_xyyyyyzz = primBuffer.data(goff + 270 * idx + 165);

                auto g_yy_xyyyyzzz = primBuffer.data(goff + 270 * idx + 166);

                auto g_yy_xyyyzzzz = primBuffer.data(goff + 270 * idx + 167);

                auto g_yy_xyyzzzzz = primBuffer.data(goff + 270 * idx + 168);

                auto g_yy_xyzzzzzz = primBuffer.data(goff + 270 * idx + 169);

                auto g_yy_xzzzzzzz = primBuffer.data(goff + 270 * idx + 170);

                auto g_yy_yyyyyyyy = primBuffer.data(goff + 270 * idx + 171);

                auto g_yy_yyyyyyyz = primBuffer.data(goff + 270 * idx + 172);

                auto g_yy_yyyyyyzz = primBuffer.data(goff + 270 * idx + 173);

                auto g_yy_yyyyyzzz = primBuffer.data(goff + 270 * idx + 174);

                auto g_yy_yyyyzzzz = primBuffer.data(goff + 270 * idx + 175);

                auto g_yy_yyyzzzzz = primBuffer.data(goff + 270 * idx + 176);

                auto g_yy_yyzzzzzz = primBuffer.data(goff + 270 * idx + 177);

                auto g_yy_yzzzzzzz = primBuffer.data(goff + 270 * idx + 178);

                auto g_yy_zzzzzzzz = primBuffer.data(goff + 270 * idx + 179);

                auto g_yz_xxxxxxxx = primBuffer.data(goff + 270 * idx + 180);

                auto g_yz_xxxxxxxy = primBuffer.data(goff + 270 * idx + 181);

                auto g_yz_xxxxxxxz = primBuffer.data(goff + 270 * idx + 182);

                auto g_yz_xxxxxxyy = primBuffer.data(goff + 270 * idx + 183);

                auto g_yz_xxxxxxyz = primBuffer.data(goff + 270 * idx + 184);

                auto g_yz_xxxxxxzz = primBuffer.data(goff + 270 * idx + 185);

                auto g_yz_xxxxxyyy = primBuffer.data(goff + 270 * idx + 186);

                auto g_yz_xxxxxyyz = primBuffer.data(goff + 270 * idx + 187);

                auto g_yz_xxxxxyzz = primBuffer.data(goff + 270 * idx + 188);

                auto g_yz_xxxxxzzz = primBuffer.data(goff + 270 * idx + 189);

                auto g_yz_xxxxyyyy = primBuffer.data(goff + 270 * idx + 190);

                auto g_yz_xxxxyyyz = primBuffer.data(goff + 270 * idx + 191);

                auto g_yz_xxxxyyzz = primBuffer.data(goff + 270 * idx + 192);

                auto g_yz_xxxxyzzz = primBuffer.data(goff + 270 * idx + 193);

                auto g_yz_xxxxzzzz = primBuffer.data(goff + 270 * idx + 194);

                auto g_yz_xxxyyyyy = primBuffer.data(goff + 270 * idx + 195);

                auto g_yz_xxxyyyyz = primBuffer.data(goff + 270 * idx + 196);

                auto g_yz_xxxyyyzz = primBuffer.data(goff + 270 * idx + 197);

                auto g_yz_xxxyyzzz = primBuffer.data(goff + 270 * idx + 198);

                auto g_yz_xxxyzzzz = primBuffer.data(goff + 270 * idx + 199);

                auto g_yz_xxxzzzzz = primBuffer.data(goff + 270 * idx + 200);

                auto g_yz_xxyyyyyy = primBuffer.data(goff + 270 * idx + 201);

                auto g_yz_xxyyyyyz = primBuffer.data(goff + 270 * idx + 202);

                auto g_yz_xxyyyyzz = primBuffer.data(goff + 270 * idx + 203);

                auto g_yz_xxyyyzzz = primBuffer.data(goff + 270 * idx + 204);

                auto g_yz_xxyyzzzz = primBuffer.data(goff + 270 * idx + 205);

                auto g_yz_xxyzzzzz = primBuffer.data(goff + 270 * idx + 206);

                auto g_yz_xxzzzzzz = primBuffer.data(goff + 270 * idx + 207);

                auto g_yz_xyyyyyyy = primBuffer.data(goff + 270 * idx + 208);

                auto g_yz_xyyyyyyz = primBuffer.data(goff + 270 * idx + 209);

                auto g_yz_xyyyyyzz = primBuffer.data(goff + 270 * idx + 210);

                auto g_yz_xyyyyzzz = primBuffer.data(goff + 270 * idx + 211);

                auto g_yz_xyyyzzzz = primBuffer.data(goff + 270 * idx + 212);

                auto g_yz_xyyzzzzz = primBuffer.data(goff + 270 * idx + 213);

                auto g_yz_xyzzzzzz = primBuffer.data(goff + 270 * idx + 214);

                auto g_yz_xzzzzzzz = primBuffer.data(goff + 270 * idx + 215);

                auto g_yz_yyyyyyyy = primBuffer.data(goff + 270 * idx + 216);

                auto g_yz_yyyyyyyz = primBuffer.data(goff + 270 * idx + 217);

                auto g_yz_yyyyyyzz = primBuffer.data(goff + 270 * idx + 218);

                auto g_yz_yyyyyzzz = primBuffer.data(goff + 270 * idx + 219);

                auto g_yz_yyyyzzzz = primBuffer.data(goff + 270 * idx + 220);

                auto g_yz_yyyzzzzz = primBuffer.data(goff + 270 * idx + 221);

                auto g_yz_yyzzzzzz = primBuffer.data(goff + 270 * idx + 222);

                auto g_yz_yzzzzzzz = primBuffer.data(goff + 270 * idx + 223);

                auto g_yz_zzzzzzzz = primBuffer.data(goff + 270 * idx + 224);

                auto g_zz_xxxxxxxx = primBuffer.data(goff + 270 * idx + 225);

                auto g_zz_xxxxxxxy = primBuffer.data(goff + 270 * idx + 226);

                auto g_zz_xxxxxxxz = primBuffer.data(goff + 270 * idx + 227);

                auto g_zz_xxxxxxyy = primBuffer.data(goff + 270 * idx + 228);

                auto g_zz_xxxxxxyz = primBuffer.data(goff + 270 * idx + 229);

                auto g_zz_xxxxxxzz = primBuffer.data(goff + 270 * idx + 230);

                auto g_zz_xxxxxyyy = primBuffer.data(goff + 270 * idx + 231);

                auto g_zz_xxxxxyyz = primBuffer.data(goff + 270 * idx + 232);

                auto g_zz_xxxxxyzz = primBuffer.data(goff + 270 * idx + 233);

                auto g_zz_xxxxxzzz = primBuffer.data(goff + 270 * idx + 234);

                auto g_zz_xxxxyyyy = primBuffer.data(goff + 270 * idx + 235);

                auto g_zz_xxxxyyyz = primBuffer.data(goff + 270 * idx + 236);

                auto g_zz_xxxxyyzz = primBuffer.data(goff + 270 * idx + 237);

                auto g_zz_xxxxyzzz = primBuffer.data(goff + 270 * idx + 238);

                auto g_zz_xxxxzzzz = primBuffer.data(goff + 270 * idx + 239);

                auto g_zz_xxxyyyyy = primBuffer.data(goff + 270 * idx + 240);

                auto g_zz_xxxyyyyz = primBuffer.data(goff + 270 * idx + 241);

                auto g_zz_xxxyyyzz = primBuffer.data(goff + 270 * idx + 242);

                auto g_zz_xxxyyzzz = primBuffer.data(goff + 270 * idx + 243);

                auto g_zz_xxxyzzzz = primBuffer.data(goff + 270 * idx + 244);

                auto g_zz_xxxzzzzz = primBuffer.data(goff + 270 * idx + 245);

                auto g_zz_xxyyyyyy = primBuffer.data(goff + 270 * idx + 246);

                auto g_zz_xxyyyyyz = primBuffer.data(goff + 270 * idx + 247);

                auto g_zz_xxyyyyzz = primBuffer.data(goff + 270 * idx + 248);

                auto g_zz_xxyyyzzz = primBuffer.data(goff + 270 * idx + 249);

                auto g_zz_xxyyzzzz = primBuffer.data(goff + 270 * idx + 250);

                auto g_zz_xxyzzzzz = primBuffer.data(goff + 270 * idx + 251);

                auto g_zz_xxzzzzzz = primBuffer.data(goff + 270 * idx + 252);

                auto g_zz_xyyyyyyy = primBuffer.data(goff + 270 * idx + 253);

                auto g_zz_xyyyyyyz = primBuffer.data(goff + 270 * idx + 254);

                auto g_zz_xyyyyyzz = primBuffer.data(goff + 270 * idx + 255);

                auto g_zz_xyyyyzzz = primBuffer.data(goff + 270 * idx + 256);

                auto g_zz_xyyyzzzz = primBuffer.data(goff + 270 * idx + 257);

                auto g_zz_xyyzzzzz = primBuffer.data(goff + 270 * idx + 258);

                auto g_zz_xyzzzzzz = primBuffer.data(goff + 270 * idx + 259);

                auto g_zz_xzzzzzzz = primBuffer.data(goff + 270 * idx + 260);

                auto g_zz_yyyyyyyy = primBuffer.data(goff + 270 * idx + 261);

                auto g_zz_yyyyyyyz = primBuffer.data(goff + 270 * idx + 262);

                auto g_zz_yyyyyyzz = primBuffer.data(goff + 270 * idx + 263);

                auto g_zz_yyyyyzzz = primBuffer.data(goff + 270 * idx + 264);

                auto g_zz_yyyyzzzz = primBuffer.data(goff + 270 * idx + 265);

                auto g_zz_yyyzzzzz = primBuffer.data(goff + 270 * idx + 266);

                auto g_zz_yyzzzzzz = primBuffer.data(goff + 270 * idx + 267);

                auto g_zz_yzzzzzzz = primBuffer.data(goff + 270 * idx + 268);

                auto g_zz_zzzzzzzz = primBuffer.data(goff + 270 * idx + 269);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_x_xxxxxxx,\
                                         gk_x_xxxxxxy, gk_x_xxxxxxz, gk_x_xxxxxyy,\
                                         gk_x_xxxxxyz, gk_x_xxxxxzz, gk_x_xxxxyyy,\
                                         gk_x_xxxxyyz, gk_x_xxxxyzz, gk_x_xxxxzzz,\
                                         gk_x_xxxyyyy, gk_x_xxxyyyz, gk_x_xxxyyzz,\
                                         gk_x_xxxyzzz, gk_x_xxxzzzz, gk_x_xxyyyyy,\
                                         gk_x_xxyyyyz, gk_x_xxyyyzz, gk_x_xxyyzzz,\
                                         gk_x_xxyzzzz, gk_x_xxzzzzz, gk_x_xyyyyyy,\
                                         gk_x_xyyyyyz, gk_x_xyyyyzz, gk_x_xyyyzzz,\
                                         gk_x_xyyzzzz, gk_x_xyzzzzz, gk_x_xzzzzzz,\
                                         gk_x_yyyyyyy, gk_x_yyyyyyz, gk_x_yyyyyzz,\
                                         gk_x_yyyyzzz, gk_x_yyyzzzz, gk_x_yyzzzzz,\
                                         gk_x_yzzzzzz, gk_x_zzzzzzz, gk_y_xxxxxxx,\
                                         gk_y_xxxxxxy, gk_y_xxxxxxz, gk_y_xxxxxyy,\
                                         gk_y_xxxxxyz, gk_y_xxxxxzz, gk_y_xxxxyyy,\
                                         gk_y_xxxxyyz, gk_y_xxxxyzz, gk_y_xxxxzzz,\
                                         gk_y_xxxyyyy, gk_y_xxxyyyz, gk_y_xxxyyzz,\
                                         gk_y_xxxyzzz, gk_y_xxxzzzz, gk_y_xxyyyyy,\
                                         gk_y_xxyyyyz, gk_y_xxyyyzz, gk_y_xxyyzzz,\
                                         gk_y_xxyzzzz, gk_y_xxzzzzz, gk_y_xyyyyyy,\
                                         gk_y_xyyyyyz, gk_y_xyyyyzz, gk_y_xyyyzzz,\
                                         gk_y_xyyzzzz, gk_y_xyzzzzz, gk_y_xzzzzzz,\
                                         gk_y_yyyyyyy, gk_y_yyyyyyz, gk_y_yyyyyzz,\
                                         gk_y_yyyyzzz, gk_y_yyyzzzz, gk_y_yyzzzzz,\
                                         gk_y_yzzzzzz, gk_y_zzzzzzz, gk_z_xxxxxxx,\
                                         gk_z_xxxxxxy, gk_z_xxxxxxz, gk_z_xxxxxyy,\
                                         gk_z_xxxxxyz, gk_z_xxxxxzz, gk_z_xxxxyyy,\
                                         gk_z_xxxxyyz, gk_z_xxxxyzz, gk_z_xxxxzzz,\
                                         gk_z_xxxyyyy, gk_z_xxxyyyz, gk_z_xxxyyzz,\
                                         gk_z_xxxyzzz, gk_z_xxxzzzz, gk_z_xxyyyyy,\
                                         gk_z_xxyyyyz, gk_z_xxyyyzz, gk_z_xxyyzzz,\
                                         gk_z_xxyzzzz, gk_z_xxzzzzz, gk_z_xyyyyyy,\
                                         gk_z_xyyyyyz, gk_z_xyyyyzz, gk_z_xyyyzzz,\
                                         gk_z_xyyzzzz, gk_z_xyzzzzz, gk_z_xzzzzzz,\
                                         gk_z_yyyyyyy, gk_z_yyyyyyz, gk_z_yyyyyzz,\
                                         gk_z_yyyyzzz, gk_z_yyyzzzz, gk_z_yyzzzzz,\
                                         gk_z_yzzzzzz, gk_z_zzzzzzz, g20_0_xxxxxxxx,\
                                         g20_0_xxxxxxxy, g20_0_xxxxxxxz, g20_0_xxxxxxyy,\
                                         g20_0_xxxxxxyz, g20_0_xxxxxxzz, g20_0_xxxxxyyy,\
                                         g20_0_xxxxxyyz, g20_0_xxxxxyzz, g20_0_xxxxxzzz,\
                                         g20_0_xxxxyyyy, g20_0_xxxxyyyz, g20_0_xxxxyyzz,\
                                         g20_0_xxxxyzzz, g20_0_xxxxzzzz, g20_0_xxxyyyyy,\
                                         g20_0_xxxyyyyz, g20_0_xxxyyyzz, g20_0_xxxyyzzz,\
                                         g20_0_xxxyzzzz, g20_0_xxxzzzzz, g20_0_xxyyyyyy,\
                                         g20_0_xxyyyyyz, g20_0_xxyyyyzz, g20_0_xxyyyzzz,\
                                         g20_0_xxyyzzzz, g20_0_xxyzzzzz, g20_0_xxzzzzzz,\
                                         g20_0_xyyyyyyy, g20_0_xyyyyyyz, g20_0_xyyyyyzz,\
                                         g20_0_xyyyyzzz, g20_0_xyyyzzzz, g20_0_xyyzzzzz,\
                                         g20_0_xyzzzzzz, g20_0_xzzzzzzz, g20_0_yyyyyyyy,\
                                         g20_0_yyyyyyyz, g20_0_yyyyyyzz, g20_0_yyyyyzzz,\
                                         g20_0_yyyyzzzz, g20_0_yyyzzzzz, g20_0_yyzzzzzz,\
                                         g20_0_yzzzzzzz, g20_0_zzzzzzzz, g21_0_xxxxxxxx,\
                                         g21_0_xxxxxxxy, g21_0_xxxxxxxz, g21_0_xxxxxxyy,\
                                         g21_0_xxxxxxyz, g21_0_xxxxxxzz, g21_0_xxxxxyyy,\
                                         g21_0_xxxxxyyz, g21_0_xxxxxyzz, g21_0_xxxxxzzz,\
                                         g21_0_xxxxyyyy, g21_0_xxxxyyyz, g21_0_xxxxyyzz,\
                                         g21_0_xxxxyzzz, g21_0_xxxxzzzz, g21_0_xxxyyyyy,\
                                         g21_0_xxxyyyyz, g21_0_xxxyyyzz, g21_0_xxxyyzzz,\
                                         g21_0_xxxyzzzz, g21_0_xxxzzzzz, g21_0_xxyyyyyy,\
                                         g21_0_xxyyyyyz, g21_0_xxyyyyzz, g21_0_xxyyyzzz,\
                                         g21_0_xxyyzzzz, g21_0_xxyzzzzz, g21_0_xxzzzzzz,\
                                         g21_0_xyyyyyyy, g21_0_xyyyyyyz, g21_0_xyyyyyzz,\
                                         g21_0_xyyyyzzz, g21_0_xyyyzzzz, g21_0_xyyzzzzz,\
                                         g21_0_xyzzzzzz, g21_0_xzzzzzzz, g21_0_yyyyyyyy,\
                                         g21_0_yyyyyyyz, g21_0_yyyyyyzz, g21_0_yyyyyzzz,\
                                         g21_0_yyyyzzzz, g21_0_yyyzzzzz, g21_0_yyzzzzzz,\
                                         g21_0_yzzzzzzz, g21_0_zzzzzzzz, g11_x_xxxxxxxx,\
                                         g11_x_xxxxxxxy, g11_x_xxxxxxxz, g11_x_xxxxxxyy,\
                                         g11_x_xxxxxxyz, g11_x_xxxxxxzz, g11_x_xxxxxyyy,\
                                         g11_x_xxxxxyyz, g11_x_xxxxxyzz, g11_x_xxxxxzzz,\
                                         g11_x_xxxxyyyy, g11_x_xxxxyyyz, g11_x_xxxxyyzz,\
                                         g11_x_xxxxyzzz, g11_x_xxxxzzzz, g11_x_xxxyyyyy,\
                                         g11_x_xxxyyyyz, g11_x_xxxyyyzz, g11_x_xxxyyzzz,\
                                         g11_x_xxxyzzzz, g11_x_xxxzzzzz, g11_x_xxyyyyyy,\
                                         g11_x_xxyyyyyz, g11_x_xxyyyyzz, g11_x_xxyyyzzz,\
                                         g11_x_xxyyzzzz, g11_x_xxyzzzzz, g11_x_xxzzzzzz,\
                                         g11_x_xyyyyyyy, g11_x_xyyyyyyz, g11_x_xyyyyyzz,\
                                         g11_x_xyyyyzzz, g11_x_xyyyzzzz, g11_x_xyyzzzzz,\
                                         g11_x_xyzzzzzz, g11_x_xzzzzzzz, g11_x_yyyyyyyy,\
                                         g11_x_yyyyyyyz, g11_x_yyyyyyzz, g11_x_yyyyyzzz,\
                                         g11_x_yyyyzzzz, g11_x_yyyzzzzz, g11_x_yyzzzzzz,\
                                         g11_x_yzzzzzzz, g11_x_zzzzzzzz, g11_y_xxxxxxxx,\
                                         g11_y_xxxxxxxy, g11_y_xxxxxxxz, g11_y_xxxxxxyy,\
                                         g11_y_xxxxxxyz, g11_y_xxxxxxzz, g11_y_xxxxxyyy,\
                                         g11_y_xxxxxyyz, g11_y_xxxxxyzz, g11_y_xxxxxzzz,\
                                         g11_y_xxxxyyyy, g11_y_xxxxyyyz, g11_y_xxxxyyzz,\
                                         g11_y_xxxxyzzz, g11_y_xxxxzzzz, g11_y_xxxyyyyy,\
                                         g11_y_xxxyyyyz, g11_y_xxxyyyzz, g11_y_xxxyyzzz,\
                                         g11_y_xxxyzzzz, g11_y_xxxzzzzz, g11_y_xxyyyyyy,\
                                         g11_y_xxyyyyyz, g11_y_xxyyyyzz, g11_y_xxyyyzzz,\
                                         g11_y_xxyyzzzz, g11_y_xxyzzzzz, g11_y_xxzzzzzz,\
                                         g11_y_xyyyyyyy, g11_y_xyyyyyyz, g11_y_xyyyyyzz,\
                                         g11_y_xyyyyzzz, g11_y_xyyyzzzz, g11_y_xyyzzzzz,\
                                         g11_y_xyzzzzzz, g11_y_xzzzzzzz, g11_y_yyyyyyyy,\
                                         g11_y_yyyyyyyz, g11_y_yyyyyyzz, g11_y_yyyyyzzz,\
                                         g11_y_yyyyzzzz, g11_y_yyyzzzzz, g11_y_yyzzzzzz,\
                                         g11_y_yzzzzzzz, g11_y_zzzzzzzz, g11_z_xxxxxxxx,\
                                         g11_z_xxxxxxxy, g11_z_xxxxxxxz, g11_z_xxxxxxyy,\
                                         g11_z_xxxxxxyz, g11_z_xxxxxxzz, g11_z_xxxxxyyy,\
                                         g11_z_xxxxxyyz, g11_z_xxxxxyzz, g11_z_xxxxxzzz,\
                                         g11_z_xxxxyyyy, g11_z_xxxxyyyz, g11_z_xxxxyyzz,\
                                         g11_z_xxxxyzzz, g11_z_xxxxzzzz, g11_z_xxxyyyyy,\
                                         g11_z_xxxyyyyz, g11_z_xxxyyyzz, g11_z_xxxyyzzz,\
                                         g11_z_xxxyzzzz, g11_z_xxxzzzzz, g11_z_xxyyyyyy,\
                                         g11_z_xxyyyyyz, g11_z_xxyyyyzz, g11_z_xxyyyzzz,\
                                         g11_z_xxyyzzzz, g11_z_xxyzzzzz, g11_z_xxzzzzzz,\
                                         g11_z_xyyyyyyy, g11_z_xyyyyyyz, g11_z_xyyyyyzz,\
                                         g11_z_xyyyyzzz, g11_z_xyyyzzzz, g11_z_xyyzzzzz,\
                                         g11_z_xyzzzzzz, g11_z_xzzzzzzz, g11_z_yyyyyyyy,\
                                         g11_z_yyyyyyyz, g11_z_yyyyyyzz, g11_z_yyyyyzzz,\
                                         g11_z_yyyyzzzz, g11_z_yyyzzzzz, g11_z_yyzzzzzz,\
                                         g11_z_yzzzzzzz, g11_z_zzzzzzzz, g_xx_xxxxxxxx,\
                                         g_xx_xxxxxxxy, g_xx_xxxxxxxz, g_xx_xxxxxxyy,\
                                         g_xx_xxxxxxyz, g_xx_xxxxxxzz, g_xx_xxxxxyyy,\
                                         g_xx_xxxxxyyz, g_xx_xxxxxyzz, g_xx_xxxxxzzz,\
                                         g_xx_xxxxyyyy, g_xx_xxxxyyyz, g_xx_xxxxyyzz,\
                                         g_xx_xxxxyzzz, g_xx_xxxxzzzz, g_xx_xxxyyyyy,\
                                         g_xx_xxxyyyyz, g_xx_xxxyyyzz, g_xx_xxxyyzzz,\
                                         g_xx_xxxyzzzz, g_xx_xxxzzzzz, g_xx_xxyyyyyy,\
                                         g_xx_xxyyyyyz, g_xx_xxyyyyzz, g_xx_xxyyyzzz,\
                                         g_xx_xxyyzzzz, g_xx_xxyzzzzz, g_xx_xxzzzzzz,\
                                         g_xx_xyyyyyyy, g_xx_xyyyyyyz, g_xx_xyyyyyzz,\
                                         g_xx_xyyyyzzz, g_xx_xyyyzzzz, g_xx_xyyzzzzz,\
                                         g_xx_xyzzzzzz, g_xx_xzzzzzzz, g_xx_yyyyyyyy,\
                                         g_xx_yyyyyyyz, g_xx_yyyyyyzz, g_xx_yyyyyzzz,\
                                         g_xx_yyyyzzzz, g_xx_yyyzzzzz, g_xx_yyzzzzzz,\
                                         g_xx_yzzzzzzz, g_xx_zzzzzzzz, g_xy_xxxxxxxx,\
                                         g_xy_xxxxxxxy, g_xy_xxxxxxxz, g_xy_xxxxxxyy,\
                                         g_xy_xxxxxxyz, g_xy_xxxxxxzz, g_xy_xxxxxyyy,\
                                         g_xy_xxxxxyyz, g_xy_xxxxxyzz, g_xy_xxxxxzzz,\
                                         g_xy_xxxxyyyy, g_xy_xxxxyyyz, g_xy_xxxxyyzz,\
                                         g_xy_xxxxyzzz, g_xy_xxxxzzzz, g_xy_xxxyyyyy,\
                                         g_xy_xxxyyyyz, g_xy_xxxyyyzz, g_xy_xxxyyzzz,\
                                         g_xy_xxxyzzzz, g_xy_xxxzzzzz, g_xy_xxyyyyyy,\
                                         g_xy_xxyyyyyz, g_xy_xxyyyyzz, g_xy_xxyyyzzz,\
                                         g_xy_xxyyzzzz, g_xy_xxyzzzzz, g_xy_xxzzzzzz,\
                                         g_xy_xyyyyyyy, g_xy_xyyyyyyz, g_xy_xyyyyyzz,\
                                         g_xy_xyyyyzzz, g_xy_xyyyzzzz, g_xy_xyyzzzzz,\
                                         g_xy_xyzzzzzz, g_xy_xzzzzzzz, g_xy_yyyyyyyy,\
                                         g_xy_yyyyyyyz, g_xy_yyyyyyzz, g_xy_yyyyyzzz,\
                                         g_xy_yyyyzzzz, g_xy_yyyzzzzz, g_xy_yyzzzzzz,\
                                         g_xy_yzzzzzzz, g_xy_zzzzzzzz, g_xz_xxxxxxxx,\
                                         g_xz_xxxxxxxy, g_xz_xxxxxxxz, g_xz_xxxxxxyy,\
                                         g_xz_xxxxxxyz, g_xz_xxxxxxzz, g_xz_xxxxxyyy,\
                                         g_xz_xxxxxyyz, g_xz_xxxxxyzz, g_xz_xxxxxzzz,\
                                         g_xz_xxxxyyyy, g_xz_xxxxyyyz, g_xz_xxxxyyzz,\
                                         g_xz_xxxxyzzz, g_xz_xxxxzzzz, g_xz_xxxyyyyy,\
                                         g_xz_xxxyyyyz, g_xz_xxxyyyzz, g_xz_xxxyyzzz,\
                                         g_xz_xxxyzzzz, g_xz_xxxzzzzz, g_xz_xxyyyyyy,\
                                         g_xz_xxyyyyyz, g_xz_xxyyyyzz, g_xz_xxyyyzzz,\
                                         g_xz_xxyyzzzz, g_xz_xxyzzzzz, g_xz_xxzzzzzz,\
                                         g_xz_xyyyyyyy, g_xz_xyyyyyyz, g_xz_xyyyyyzz,\
                                         g_xz_xyyyyzzz, g_xz_xyyyzzzz, g_xz_xyyzzzzz,\
                                         g_xz_xyzzzzzz, g_xz_xzzzzzzz, g_xz_yyyyyyyy,\
                                         g_xz_yyyyyyyz, g_xz_yyyyyyzz, g_xz_yyyyyzzz,\
                                         g_xz_yyyyzzzz, g_xz_yyyzzzzz, g_xz_yyzzzzzz,\
                                         g_xz_yzzzzzzz, g_xz_zzzzzzzz, g_yy_xxxxxxxx,\
                                         g_yy_xxxxxxxy, g_yy_xxxxxxxz, g_yy_xxxxxxyy,\
                                         g_yy_xxxxxxyz, g_yy_xxxxxxzz, g_yy_xxxxxyyy,\
                                         g_yy_xxxxxyyz, g_yy_xxxxxyzz, g_yy_xxxxxzzz,\
                                         g_yy_xxxxyyyy, g_yy_xxxxyyyz, g_yy_xxxxyyzz,\
                                         g_yy_xxxxyzzz, g_yy_xxxxzzzz, g_yy_xxxyyyyy,\
                                         g_yy_xxxyyyyz, g_yy_xxxyyyzz, g_yy_xxxyyzzz,\
                                         g_yy_xxxyzzzz, g_yy_xxxzzzzz, g_yy_xxyyyyyy,\
                                         g_yy_xxyyyyyz, g_yy_xxyyyyzz, g_yy_xxyyyzzz,\
                                         g_yy_xxyyzzzz, g_yy_xxyzzzzz, g_yy_xxzzzzzz,\
                                         g_yy_xyyyyyyy, g_yy_xyyyyyyz, g_yy_xyyyyyzz,\
                                         g_yy_xyyyyzzz, g_yy_xyyyzzzz, g_yy_xyyzzzzz,\
                                         g_yy_xyzzzzzz, g_yy_xzzzzzzz, g_yy_yyyyyyyy,\
                                         g_yy_yyyyyyyz, g_yy_yyyyyyzz, g_yy_yyyyyzzz,\
                                         g_yy_yyyyzzzz, g_yy_yyyzzzzz, g_yy_yyzzzzzz,\
                                         g_yy_yzzzzzzz, g_yy_zzzzzzzz, g_yz_xxxxxxxx,\
                                         g_yz_xxxxxxxy, g_yz_xxxxxxxz, g_yz_xxxxxxyy,\
                                         g_yz_xxxxxxyz, g_yz_xxxxxxzz, g_yz_xxxxxyyy,\
                                         g_yz_xxxxxyyz, g_yz_xxxxxyzz, g_yz_xxxxxzzz,\
                                         g_yz_xxxxyyyy, g_yz_xxxxyyyz, g_yz_xxxxyyzz,\
                                         g_yz_xxxxyzzz, g_yz_xxxxzzzz, g_yz_xxxyyyyy,\
                                         g_yz_xxxyyyyz, g_yz_xxxyyyzz, g_yz_xxxyyzzz,\
                                         g_yz_xxxyzzzz, g_yz_xxxzzzzz, g_yz_xxyyyyyy,\
                                         g_yz_xxyyyyyz, g_yz_xxyyyyzz, g_yz_xxyyyzzz,\
                                         g_yz_xxyyzzzz, g_yz_xxyzzzzz, g_yz_xxzzzzzz,\
                                         g_yz_xyyyyyyy, g_yz_xyyyyyyz, g_yz_xyyyyyzz,\
                                         g_yz_xyyyyzzz, g_yz_xyyyzzzz, g_yz_xyyzzzzz,\
                                         g_yz_xyzzzzzz, g_yz_xzzzzzzz, g_yz_yyyyyyyy,\
                                         g_yz_yyyyyyyz, g_yz_yyyyyyzz, g_yz_yyyyyzzz,\
                                         g_yz_yyyyzzzz, g_yz_yyyzzzzz, g_yz_yyzzzzzz,\
                                         g_yz_yzzzzzzz, g_yz_zzzzzzzz, g_zz_xxxxxxxx,\
                                         g_zz_xxxxxxxy, g_zz_xxxxxxxz, g_zz_xxxxxxyy,\
                                         g_zz_xxxxxxyz, g_zz_xxxxxxzz, g_zz_xxxxxyyy,\
                                         g_zz_xxxxxyyz, g_zz_xxxxxyzz, g_zz_xxxxxzzz,\
                                         g_zz_xxxxyyyy, g_zz_xxxxyyyz, g_zz_xxxxyyzz,\
                                         g_zz_xxxxyzzz, g_zz_xxxxzzzz, g_zz_xxxyyyyy,\
                                         g_zz_xxxyyyyz, g_zz_xxxyyyzz, g_zz_xxxyyzzz,\
                                         g_zz_xxxyzzzz, g_zz_xxxzzzzz, g_zz_xxyyyyyy,\
                                         g_zz_xxyyyyyz, g_zz_xxyyyyzz, g_zz_xxyyyzzz,\
                                         g_zz_xxyyzzzz, g_zz_xxyzzzzz, g_zz_xxzzzzzz,\
                                         g_zz_xyyyyyyy, g_zz_xyyyyyyz, g_zz_xyyyyyzz,\
                                         g_zz_xyyyyzzz, g_zz_xyyyzzzz, g_zz_xyyzzzzz,\
                                         g_zz_xyzzzzzz, g_zz_xzzzzzzz, g_zz_yyyyyyyy,\
                                         g_zz_yyyyyyyz, g_zz_yyyyyyzz, g_zz_yyyyyzzz,\
                                         g_zz_yyyyzzzz, g_zz_yyyzzzzz, g_zz_yyzzzzzz,\
                                         g_zz_yzzzzzzz, g_zz_zzzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xx_xxxxxxxx[k] = fr * g11_x_xxxxxxxx[k] + f2g * (g20_0_xxxxxxxx[k] - fgz * g21_0_xxxxxxxx[k]) + 8.0 * f2t * gk_x_xxxxxxx[k];

                    g_xx_xxxxxxxy[k] = fr * g11_x_xxxxxxxy[k] + f2g * (g20_0_xxxxxxxy[k] - fgz * g21_0_xxxxxxxy[k]) + 7.0 * f2t * gk_x_xxxxxxy[k];

                    g_xx_xxxxxxxz[k] = fr * g11_x_xxxxxxxz[k] + f2g * (g20_0_xxxxxxxz[k] - fgz * g21_0_xxxxxxxz[k]) + 7.0 * f2t * gk_x_xxxxxxz[k];

                    g_xx_xxxxxxyy[k] = fr * g11_x_xxxxxxyy[k] + f2g * (g20_0_xxxxxxyy[k] - fgz * g21_0_xxxxxxyy[k]) + 6.0 * f2t * gk_x_xxxxxyy[k];

                    g_xx_xxxxxxyz[k] = fr * g11_x_xxxxxxyz[k] + f2g * (g20_0_xxxxxxyz[k] - fgz * g21_0_xxxxxxyz[k]) + 6.0 * f2t * gk_x_xxxxxyz[k];

                    g_xx_xxxxxxzz[k] = fr * g11_x_xxxxxxzz[k] + f2g * (g20_0_xxxxxxzz[k] - fgz * g21_0_xxxxxxzz[k]) + 6.0 * f2t * gk_x_xxxxxzz[k];

                    g_xx_xxxxxyyy[k] = fr * g11_x_xxxxxyyy[k] + f2g * (g20_0_xxxxxyyy[k] - fgz * g21_0_xxxxxyyy[k]) + 5.0 * f2t * gk_x_xxxxyyy[k];

                    g_xx_xxxxxyyz[k] = fr * g11_x_xxxxxyyz[k] + f2g * (g20_0_xxxxxyyz[k] - fgz * g21_0_xxxxxyyz[k]) + 5.0 * f2t * gk_x_xxxxyyz[k];

                    g_xx_xxxxxyzz[k] = fr * g11_x_xxxxxyzz[k] + f2g * (g20_0_xxxxxyzz[k] - fgz * g21_0_xxxxxyzz[k]) + 5.0 * f2t * gk_x_xxxxyzz[k];

                    g_xx_xxxxxzzz[k] = fr * g11_x_xxxxxzzz[k] + f2g * (g20_0_xxxxxzzz[k] - fgz * g21_0_xxxxxzzz[k]) + 5.0 * f2t * gk_x_xxxxzzz[k];

                    g_xx_xxxxyyyy[k] = fr * g11_x_xxxxyyyy[k] + f2g * (g20_0_xxxxyyyy[k] - fgz * g21_0_xxxxyyyy[k]) + 4.0 * f2t * gk_x_xxxyyyy[k];

                    g_xx_xxxxyyyz[k] = fr * g11_x_xxxxyyyz[k] + f2g * (g20_0_xxxxyyyz[k] - fgz * g21_0_xxxxyyyz[k]) + 4.0 * f2t * gk_x_xxxyyyz[k];

                    g_xx_xxxxyyzz[k] = fr * g11_x_xxxxyyzz[k] + f2g * (g20_0_xxxxyyzz[k] - fgz * g21_0_xxxxyyzz[k]) + 4.0 * f2t * gk_x_xxxyyzz[k];

                    g_xx_xxxxyzzz[k] = fr * g11_x_xxxxyzzz[k] + f2g * (g20_0_xxxxyzzz[k] - fgz * g21_0_xxxxyzzz[k]) + 4.0 * f2t * gk_x_xxxyzzz[k];

                    g_xx_xxxxzzzz[k] = fr * g11_x_xxxxzzzz[k] + f2g * (g20_0_xxxxzzzz[k] - fgz * g21_0_xxxxzzzz[k]) + 4.0 * f2t * gk_x_xxxzzzz[k];

                    g_xx_xxxyyyyy[k] = fr * g11_x_xxxyyyyy[k] + f2g * (g20_0_xxxyyyyy[k] - fgz * g21_0_xxxyyyyy[k]) + 3.0 * f2t * gk_x_xxyyyyy[k];

                    g_xx_xxxyyyyz[k] = fr * g11_x_xxxyyyyz[k] + f2g * (g20_0_xxxyyyyz[k] - fgz * g21_0_xxxyyyyz[k]) + 3.0 * f2t * gk_x_xxyyyyz[k];

                    g_xx_xxxyyyzz[k] = fr * g11_x_xxxyyyzz[k] + f2g * (g20_0_xxxyyyzz[k] - fgz * g21_0_xxxyyyzz[k]) + 3.0 * f2t * gk_x_xxyyyzz[k];

                    g_xx_xxxyyzzz[k] = fr * g11_x_xxxyyzzz[k] + f2g * (g20_0_xxxyyzzz[k] - fgz * g21_0_xxxyyzzz[k]) + 3.0 * f2t * gk_x_xxyyzzz[k];

                    g_xx_xxxyzzzz[k] = fr * g11_x_xxxyzzzz[k] + f2g * (g20_0_xxxyzzzz[k] - fgz * g21_0_xxxyzzzz[k]) + 3.0 * f2t * gk_x_xxyzzzz[k];

                    g_xx_xxxzzzzz[k] = fr * g11_x_xxxzzzzz[k] + f2g * (g20_0_xxxzzzzz[k] - fgz * g21_0_xxxzzzzz[k]) + 3.0 * f2t * gk_x_xxzzzzz[k];

                    g_xx_xxyyyyyy[k] = fr * g11_x_xxyyyyyy[k] + f2g * (g20_0_xxyyyyyy[k] - fgz * g21_0_xxyyyyyy[k]) + 2.0 * f2t * gk_x_xyyyyyy[k];

                    g_xx_xxyyyyyz[k] = fr * g11_x_xxyyyyyz[k] + f2g * (g20_0_xxyyyyyz[k] - fgz * g21_0_xxyyyyyz[k]) + 2.0 * f2t * gk_x_xyyyyyz[k];

                    g_xx_xxyyyyzz[k] = fr * g11_x_xxyyyyzz[k] + f2g * (g20_0_xxyyyyzz[k] - fgz * g21_0_xxyyyyzz[k]) + 2.0 * f2t * gk_x_xyyyyzz[k];

                    g_xx_xxyyyzzz[k] = fr * g11_x_xxyyyzzz[k] + f2g * (g20_0_xxyyyzzz[k] - fgz * g21_0_xxyyyzzz[k]) + 2.0 * f2t * gk_x_xyyyzzz[k];

                    g_xx_xxyyzzzz[k] = fr * g11_x_xxyyzzzz[k] + f2g * (g20_0_xxyyzzzz[k] - fgz * g21_0_xxyyzzzz[k]) + 2.0 * f2t * gk_x_xyyzzzz[k];

                    g_xx_xxyzzzzz[k] = fr * g11_x_xxyzzzzz[k] + f2g * (g20_0_xxyzzzzz[k] - fgz * g21_0_xxyzzzzz[k]) + 2.0 * f2t * gk_x_xyzzzzz[k];

                    g_xx_xxzzzzzz[k] = fr * g11_x_xxzzzzzz[k] + f2g * (g20_0_xxzzzzzz[k] - fgz * g21_0_xxzzzzzz[k]) + 2.0 * f2t * gk_x_xzzzzzz[k];

                    g_xx_xyyyyyyy[k] = fr * g11_x_xyyyyyyy[k] + f2g * (g20_0_xyyyyyyy[k] - fgz * g21_0_xyyyyyyy[k]) + f2t * gk_x_yyyyyyy[k];

                    g_xx_xyyyyyyz[k] = fr * g11_x_xyyyyyyz[k] + f2g * (g20_0_xyyyyyyz[k] - fgz * g21_0_xyyyyyyz[k]) + f2t * gk_x_yyyyyyz[k];

                    g_xx_xyyyyyzz[k] = fr * g11_x_xyyyyyzz[k] + f2g * (g20_0_xyyyyyzz[k] - fgz * g21_0_xyyyyyzz[k]) + f2t * gk_x_yyyyyzz[k];

                    g_xx_xyyyyzzz[k] = fr * g11_x_xyyyyzzz[k] + f2g * (g20_0_xyyyyzzz[k] - fgz * g21_0_xyyyyzzz[k]) + f2t * gk_x_yyyyzzz[k];

                    g_xx_xyyyzzzz[k] = fr * g11_x_xyyyzzzz[k] + f2g * (g20_0_xyyyzzzz[k] - fgz * g21_0_xyyyzzzz[k]) + f2t * gk_x_yyyzzzz[k];

                    g_xx_xyyzzzzz[k] = fr * g11_x_xyyzzzzz[k] + f2g * (g20_0_xyyzzzzz[k] - fgz * g21_0_xyyzzzzz[k]) + f2t * gk_x_yyzzzzz[k];

                    g_xx_xyzzzzzz[k] = fr * g11_x_xyzzzzzz[k] + f2g * (g20_0_xyzzzzzz[k] - fgz * g21_0_xyzzzzzz[k]) + f2t * gk_x_yzzzzzz[k];

                    g_xx_xzzzzzzz[k] = fr * g11_x_xzzzzzzz[k] + f2g * (g20_0_xzzzzzzz[k] - fgz * g21_0_xzzzzzzz[k]) + f2t * gk_x_zzzzzzz[k];

                    g_xx_yyyyyyyy[k] = fr * g11_x_yyyyyyyy[k] + f2g * (g20_0_yyyyyyyy[k] - fgz * g21_0_yyyyyyyy[k]);

                    g_xx_yyyyyyyz[k] = fr * g11_x_yyyyyyyz[k] + f2g * (g20_0_yyyyyyyz[k] - fgz * g21_0_yyyyyyyz[k]);

                    g_xx_yyyyyyzz[k] = fr * g11_x_yyyyyyzz[k] + f2g * (g20_0_yyyyyyzz[k] - fgz * g21_0_yyyyyyzz[k]);

                    g_xx_yyyyyzzz[k] = fr * g11_x_yyyyyzzz[k] + f2g * (g20_0_yyyyyzzz[k] - fgz * g21_0_yyyyyzzz[k]);

                    g_xx_yyyyzzzz[k] = fr * g11_x_yyyyzzzz[k] + f2g * (g20_0_yyyyzzzz[k] - fgz * g21_0_yyyyzzzz[k]);

                    g_xx_yyyzzzzz[k] = fr * g11_x_yyyzzzzz[k] + f2g * (g20_0_yyyzzzzz[k] - fgz * g21_0_yyyzzzzz[k]);

                    g_xx_yyzzzzzz[k] = fr * g11_x_yyzzzzzz[k] + f2g * (g20_0_yyzzzzzz[k] - fgz * g21_0_yyzzzzzz[k]);

                    g_xx_yzzzzzzz[k] = fr * g11_x_yzzzzzzz[k] + f2g * (g20_0_yzzzzzzz[k] - fgz * g21_0_yzzzzzzz[k]);

                    g_xx_zzzzzzzz[k] = fr * g11_x_zzzzzzzz[k] + f2g * (g20_0_zzzzzzzz[k] - fgz * g21_0_zzzzzzzz[k]);

                    g_xy_xxxxxxxx[k] = fr * g11_y_xxxxxxxx[k] + 8.0 * f2t * gk_y_xxxxxxx[k];

                    g_xy_xxxxxxxy[k] = fr * g11_y_xxxxxxxy[k] + 7.0 * f2t * gk_y_xxxxxxy[k];

                    g_xy_xxxxxxxz[k] = fr * g11_y_xxxxxxxz[k] + 7.0 * f2t * gk_y_xxxxxxz[k];

                    g_xy_xxxxxxyy[k] = fr * g11_y_xxxxxxyy[k] + 6.0 * f2t * gk_y_xxxxxyy[k];

                    g_xy_xxxxxxyz[k] = fr * g11_y_xxxxxxyz[k] + 6.0 * f2t * gk_y_xxxxxyz[k];

                    g_xy_xxxxxxzz[k] = fr * g11_y_xxxxxxzz[k] + 6.0 * f2t * gk_y_xxxxxzz[k];

                    g_xy_xxxxxyyy[k] = fr * g11_y_xxxxxyyy[k] + 5.0 * f2t * gk_y_xxxxyyy[k];

                    g_xy_xxxxxyyz[k] = fr * g11_y_xxxxxyyz[k] + 5.0 * f2t * gk_y_xxxxyyz[k];

                    g_xy_xxxxxyzz[k] = fr * g11_y_xxxxxyzz[k] + 5.0 * f2t * gk_y_xxxxyzz[k];

                    g_xy_xxxxxzzz[k] = fr * g11_y_xxxxxzzz[k] + 5.0 * f2t * gk_y_xxxxzzz[k];

                    g_xy_xxxxyyyy[k] = fr * g11_y_xxxxyyyy[k] + 4.0 * f2t * gk_y_xxxyyyy[k];

                    g_xy_xxxxyyyz[k] = fr * g11_y_xxxxyyyz[k] + 4.0 * f2t * gk_y_xxxyyyz[k];

                    g_xy_xxxxyyzz[k] = fr * g11_y_xxxxyyzz[k] + 4.0 * f2t * gk_y_xxxyyzz[k];

                    g_xy_xxxxyzzz[k] = fr * g11_y_xxxxyzzz[k] + 4.0 * f2t * gk_y_xxxyzzz[k];

                    g_xy_xxxxzzzz[k] = fr * g11_y_xxxxzzzz[k] + 4.0 * f2t * gk_y_xxxzzzz[k];

                    g_xy_xxxyyyyy[k] = fr * g11_y_xxxyyyyy[k] + 3.0 * f2t * gk_y_xxyyyyy[k];

                    g_xy_xxxyyyyz[k] = fr * g11_y_xxxyyyyz[k] + 3.0 * f2t * gk_y_xxyyyyz[k];

                    g_xy_xxxyyyzz[k] = fr * g11_y_xxxyyyzz[k] + 3.0 * f2t * gk_y_xxyyyzz[k];

                    g_xy_xxxyyzzz[k] = fr * g11_y_xxxyyzzz[k] + 3.0 * f2t * gk_y_xxyyzzz[k];

                    g_xy_xxxyzzzz[k] = fr * g11_y_xxxyzzzz[k] + 3.0 * f2t * gk_y_xxyzzzz[k];

                    g_xy_xxxzzzzz[k] = fr * g11_y_xxxzzzzz[k] + 3.0 * f2t * gk_y_xxzzzzz[k];

                    g_xy_xxyyyyyy[k] = fr * g11_y_xxyyyyyy[k] + 2.0 * f2t * gk_y_xyyyyyy[k];

                    g_xy_xxyyyyyz[k] = fr * g11_y_xxyyyyyz[k] + 2.0 * f2t * gk_y_xyyyyyz[k];

                    g_xy_xxyyyyzz[k] = fr * g11_y_xxyyyyzz[k] + 2.0 * f2t * gk_y_xyyyyzz[k];

                    g_xy_xxyyyzzz[k] = fr * g11_y_xxyyyzzz[k] + 2.0 * f2t * gk_y_xyyyzzz[k];

                    g_xy_xxyyzzzz[k] = fr * g11_y_xxyyzzzz[k] + 2.0 * f2t * gk_y_xyyzzzz[k];

                    g_xy_xxyzzzzz[k] = fr * g11_y_xxyzzzzz[k] + 2.0 * f2t * gk_y_xyzzzzz[k];

                    g_xy_xxzzzzzz[k] = fr * g11_y_xxzzzzzz[k] + 2.0 * f2t * gk_y_xzzzzzz[k];

                    g_xy_xyyyyyyy[k] = fr * g11_y_xyyyyyyy[k] + f2t * gk_y_yyyyyyy[k];

                    g_xy_xyyyyyyz[k] = fr * g11_y_xyyyyyyz[k] + f2t * gk_y_yyyyyyz[k];

                    g_xy_xyyyyyzz[k] = fr * g11_y_xyyyyyzz[k] + f2t * gk_y_yyyyyzz[k];

                    g_xy_xyyyyzzz[k] = fr * g11_y_xyyyyzzz[k] + f2t * gk_y_yyyyzzz[k];

                    g_xy_xyyyzzzz[k] = fr * g11_y_xyyyzzzz[k] + f2t * gk_y_yyyzzzz[k];

                    g_xy_xyyzzzzz[k] = fr * g11_y_xyyzzzzz[k] + f2t * gk_y_yyzzzzz[k];

                    g_xy_xyzzzzzz[k] = fr * g11_y_xyzzzzzz[k] + f2t * gk_y_yzzzzzz[k];

                    g_xy_xzzzzzzz[k] = fr * g11_y_xzzzzzzz[k] + f2t * gk_y_zzzzzzz[k];

                    g_xy_yyyyyyyy[k] = fr * g11_y_yyyyyyyy[k];

                    g_xy_yyyyyyyz[k] = fr * g11_y_yyyyyyyz[k];

                    g_xy_yyyyyyzz[k] = fr * g11_y_yyyyyyzz[k];

                    g_xy_yyyyyzzz[k] = fr * g11_y_yyyyyzzz[k];

                    g_xy_yyyyzzzz[k] = fr * g11_y_yyyyzzzz[k];

                    g_xy_yyyzzzzz[k] = fr * g11_y_yyyzzzzz[k];

                    g_xy_yyzzzzzz[k] = fr * g11_y_yyzzzzzz[k];

                    g_xy_yzzzzzzz[k] = fr * g11_y_yzzzzzzz[k];

                    g_xy_zzzzzzzz[k] = fr * g11_y_zzzzzzzz[k];

                    g_xz_xxxxxxxx[k] = fr * g11_z_xxxxxxxx[k] + 8.0 * f2t * gk_z_xxxxxxx[k];

                    g_xz_xxxxxxxy[k] = fr * g11_z_xxxxxxxy[k] + 7.0 * f2t * gk_z_xxxxxxy[k];

                    g_xz_xxxxxxxz[k] = fr * g11_z_xxxxxxxz[k] + 7.0 * f2t * gk_z_xxxxxxz[k];

                    g_xz_xxxxxxyy[k] = fr * g11_z_xxxxxxyy[k] + 6.0 * f2t * gk_z_xxxxxyy[k];

                    g_xz_xxxxxxyz[k] = fr * g11_z_xxxxxxyz[k] + 6.0 * f2t * gk_z_xxxxxyz[k];

                    g_xz_xxxxxxzz[k] = fr * g11_z_xxxxxxzz[k] + 6.0 * f2t * gk_z_xxxxxzz[k];

                    g_xz_xxxxxyyy[k] = fr * g11_z_xxxxxyyy[k] + 5.0 * f2t * gk_z_xxxxyyy[k];

                    g_xz_xxxxxyyz[k] = fr * g11_z_xxxxxyyz[k] + 5.0 * f2t * gk_z_xxxxyyz[k];

                    g_xz_xxxxxyzz[k] = fr * g11_z_xxxxxyzz[k] + 5.0 * f2t * gk_z_xxxxyzz[k];

                    g_xz_xxxxxzzz[k] = fr * g11_z_xxxxxzzz[k] + 5.0 * f2t * gk_z_xxxxzzz[k];

                    g_xz_xxxxyyyy[k] = fr * g11_z_xxxxyyyy[k] + 4.0 * f2t * gk_z_xxxyyyy[k];

                    g_xz_xxxxyyyz[k] = fr * g11_z_xxxxyyyz[k] + 4.0 * f2t * gk_z_xxxyyyz[k];

                    g_xz_xxxxyyzz[k] = fr * g11_z_xxxxyyzz[k] + 4.0 * f2t * gk_z_xxxyyzz[k];

                    g_xz_xxxxyzzz[k] = fr * g11_z_xxxxyzzz[k] + 4.0 * f2t * gk_z_xxxyzzz[k];

                    g_xz_xxxxzzzz[k] = fr * g11_z_xxxxzzzz[k] + 4.0 * f2t * gk_z_xxxzzzz[k];

                    g_xz_xxxyyyyy[k] = fr * g11_z_xxxyyyyy[k] + 3.0 * f2t * gk_z_xxyyyyy[k];

                    g_xz_xxxyyyyz[k] = fr * g11_z_xxxyyyyz[k] + 3.0 * f2t * gk_z_xxyyyyz[k];

                    g_xz_xxxyyyzz[k] = fr * g11_z_xxxyyyzz[k] + 3.0 * f2t * gk_z_xxyyyzz[k];

                    g_xz_xxxyyzzz[k] = fr * g11_z_xxxyyzzz[k] + 3.0 * f2t * gk_z_xxyyzzz[k];

                    g_xz_xxxyzzzz[k] = fr * g11_z_xxxyzzzz[k] + 3.0 * f2t * gk_z_xxyzzzz[k];

                    g_xz_xxxzzzzz[k] = fr * g11_z_xxxzzzzz[k] + 3.0 * f2t * gk_z_xxzzzzz[k];

                    g_xz_xxyyyyyy[k] = fr * g11_z_xxyyyyyy[k] + 2.0 * f2t * gk_z_xyyyyyy[k];

                    g_xz_xxyyyyyz[k] = fr * g11_z_xxyyyyyz[k] + 2.0 * f2t * gk_z_xyyyyyz[k];

                    g_xz_xxyyyyzz[k] = fr * g11_z_xxyyyyzz[k] + 2.0 * f2t * gk_z_xyyyyzz[k];

                    g_xz_xxyyyzzz[k] = fr * g11_z_xxyyyzzz[k] + 2.0 * f2t * gk_z_xyyyzzz[k];

                    g_xz_xxyyzzzz[k] = fr * g11_z_xxyyzzzz[k] + 2.0 * f2t * gk_z_xyyzzzz[k];

                    g_xz_xxyzzzzz[k] = fr * g11_z_xxyzzzzz[k] + 2.0 * f2t * gk_z_xyzzzzz[k];

                    g_xz_xxzzzzzz[k] = fr * g11_z_xxzzzzzz[k] + 2.0 * f2t * gk_z_xzzzzzz[k];

                    g_xz_xyyyyyyy[k] = fr * g11_z_xyyyyyyy[k] + f2t * gk_z_yyyyyyy[k];

                    g_xz_xyyyyyyz[k] = fr * g11_z_xyyyyyyz[k] + f2t * gk_z_yyyyyyz[k];

                    g_xz_xyyyyyzz[k] = fr * g11_z_xyyyyyzz[k] + f2t * gk_z_yyyyyzz[k];

                    g_xz_xyyyyzzz[k] = fr * g11_z_xyyyyzzz[k] + f2t * gk_z_yyyyzzz[k];

                    g_xz_xyyyzzzz[k] = fr * g11_z_xyyyzzzz[k] + f2t * gk_z_yyyzzzz[k];

                    g_xz_xyyzzzzz[k] = fr * g11_z_xyyzzzzz[k] + f2t * gk_z_yyzzzzz[k];

                    g_xz_xyzzzzzz[k] = fr * g11_z_xyzzzzzz[k] + f2t * gk_z_yzzzzzz[k];

                    g_xz_xzzzzzzz[k] = fr * g11_z_xzzzzzzz[k] + f2t * gk_z_zzzzzzz[k];

                    g_xz_yyyyyyyy[k] = fr * g11_z_yyyyyyyy[k];

                    g_xz_yyyyyyyz[k] = fr * g11_z_yyyyyyyz[k];

                    g_xz_yyyyyyzz[k] = fr * g11_z_yyyyyyzz[k];

                    g_xz_yyyyyzzz[k] = fr * g11_z_yyyyyzzz[k];

                    g_xz_yyyyzzzz[k] = fr * g11_z_yyyyzzzz[k];

                    g_xz_yyyzzzzz[k] = fr * g11_z_yyyzzzzz[k];

                    g_xz_yyzzzzzz[k] = fr * g11_z_yyzzzzzz[k];

                    g_xz_yzzzzzzz[k] = fr * g11_z_yzzzzzzz[k];

                    g_xz_zzzzzzzz[k] = fr * g11_z_zzzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yy_xxxxxxxx[k] = fr * g11_y_xxxxxxxx[k] + f2g * (g20_0_xxxxxxxx[k] - fgz * g21_0_xxxxxxxx[k]);

                    g_yy_xxxxxxxy[k] = fr * g11_y_xxxxxxxy[k] + f2g * (g20_0_xxxxxxxy[k] - fgz * g21_0_xxxxxxxy[k]) + f2t * gk_y_xxxxxxx[k];

                    g_yy_xxxxxxxz[k] = fr * g11_y_xxxxxxxz[k] + f2g * (g20_0_xxxxxxxz[k] - fgz * g21_0_xxxxxxxz[k]);

                    g_yy_xxxxxxyy[k] = fr * g11_y_xxxxxxyy[k] + f2g * (g20_0_xxxxxxyy[k] - fgz * g21_0_xxxxxxyy[k]) + 2.0 * f2t * gk_y_xxxxxxy[k];

                    g_yy_xxxxxxyz[k] = fr * g11_y_xxxxxxyz[k] + f2g * (g20_0_xxxxxxyz[k] - fgz * g21_0_xxxxxxyz[k]) + f2t * gk_y_xxxxxxz[k];

                    g_yy_xxxxxxzz[k] = fr * g11_y_xxxxxxzz[k] + f2g * (g20_0_xxxxxxzz[k] - fgz * g21_0_xxxxxxzz[k]);

                    g_yy_xxxxxyyy[k] = fr * g11_y_xxxxxyyy[k] + f2g * (g20_0_xxxxxyyy[k] - fgz * g21_0_xxxxxyyy[k]) + 3.0 * f2t * gk_y_xxxxxyy[k];

                    g_yy_xxxxxyyz[k] = fr * g11_y_xxxxxyyz[k] + f2g * (g20_0_xxxxxyyz[k] - fgz * g21_0_xxxxxyyz[k]) + 2.0 * f2t * gk_y_xxxxxyz[k];

                    g_yy_xxxxxyzz[k] = fr * g11_y_xxxxxyzz[k] + f2g * (g20_0_xxxxxyzz[k] - fgz * g21_0_xxxxxyzz[k]) + f2t * gk_y_xxxxxzz[k];

                    g_yy_xxxxxzzz[k] = fr * g11_y_xxxxxzzz[k] + f2g * (g20_0_xxxxxzzz[k] - fgz * g21_0_xxxxxzzz[k]);

                    g_yy_xxxxyyyy[k] = fr * g11_y_xxxxyyyy[k] + f2g * (g20_0_xxxxyyyy[k] - fgz * g21_0_xxxxyyyy[k]) + 4.0 * f2t * gk_y_xxxxyyy[k];

                    g_yy_xxxxyyyz[k] = fr * g11_y_xxxxyyyz[k] + f2g * (g20_0_xxxxyyyz[k] - fgz * g21_0_xxxxyyyz[k]) + 3.0 * f2t * gk_y_xxxxyyz[k];

                    g_yy_xxxxyyzz[k] = fr * g11_y_xxxxyyzz[k] + f2g * (g20_0_xxxxyyzz[k] - fgz * g21_0_xxxxyyzz[k]) + 2.0 * f2t * gk_y_xxxxyzz[k];

                    g_yy_xxxxyzzz[k] = fr * g11_y_xxxxyzzz[k] + f2g * (g20_0_xxxxyzzz[k] - fgz * g21_0_xxxxyzzz[k]) + f2t * gk_y_xxxxzzz[k];

                    g_yy_xxxxzzzz[k] = fr * g11_y_xxxxzzzz[k] + f2g * (g20_0_xxxxzzzz[k] - fgz * g21_0_xxxxzzzz[k]);

                    g_yy_xxxyyyyy[k] = fr * g11_y_xxxyyyyy[k] + f2g * (g20_0_xxxyyyyy[k] - fgz * g21_0_xxxyyyyy[k]) + 5.0 * f2t * gk_y_xxxyyyy[k];

                    g_yy_xxxyyyyz[k] = fr * g11_y_xxxyyyyz[k] + f2g * (g20_0_xxxyyyyz[k] - fgz * g21_0_xxxyyyyz[k]) + 4.0 * f2t * gk_y_xxxyyyz[k];

                    g_yy_xxxyyyzz[k] = fr * g11_y_xxxyyyzz[k] + f2g * (g20_0_xxxyyyzz[k] - fgz * g21_0_xxxyyyzz[k]) + 3.0 * f2t * gk_y_xxxyyzz[k];

                    g_yy_xxxyyzzz[k] = fr * g11_y_xxxyyzzz[k] + f2g * (g20_0_xxxyyzzz[k] - fgz * g21_0_xxxyyzzz[k]) + 2.0 * f2t * gk_y_xxxyzzz[k];

                    g_yy_xxxyzzzz[k] = fr * g11_y_xxxyzzzz[k] + f2g * (g20_0_xxxyzzzz[k] - fgz * g21_0_xxxyzzzz[k]) + f2t * gk_y_xxxzzzz[k];

                    g_yy_xxxzzzzz[k] = fr * g11_y_xxxzzzzz[k] + f2g * (g20_0_xxxzzzzz[k] - fgz * g21_0_xxxzzzzz[k]);

                    g_yy_xxyyyyyy[k] = fr * g11_y_xxyyyyyy[k] + f2g * (g20_0_xxyyyyyy[k] - fgz * g21_0_xxyyyyyy[k]) + 6.0 * f2t * gk_y_xxyyyyy[k];

                    g_yy_xxyyyyyz[k] = fr * g11_y_xxyyyyyz[k] + f2g * (g20_0_xxyyyyyz[k] - fgz * g21_0_xxyyyyyz[k]) + 5.0 * f2t * gk_y_xxyyyyz[k];

                    g_yy_xxyyyyzz[k] = fr * g11_y_xxyyyyzz[k] + f2g * (g20_0_xxyyyyzz[k] - fgz * g21_0_xxyyyyzz[k]) + 4.0 * f2t * gk_y_xxyyyzz[k];

                    g_yy_xxyyyzzz[k] = fr * g11_y_xxyyyzzz[k] + f2g * (g20_0_xxyyyzzz[k] - fgz * g21_0_xxyyyzzz[k]) + 3.0 * f2t * gk_y_xxyyzzz[k];

                    g_yy_xxyyzzzz[k] = fr * g11_y_xxyyzzzz[k] + f2g * (g20_0_xxyyzzzz[k] - fgz * g21_0_xxyyzzzz[k]) + 2.0 * f2t * gk_y_xxyzzzz[k];

                    g_yy_xxyzzzzz[k] = fr * g11_y_xxyzzzzz[k] + f2g * (g20_0_xxyzzzzz[k] - fgz * g21_0_xxyzzzzz[k]) + f2t * gk_y_xxzzzzz[k];

                    g_yy_xxzzzzzz[k] = fr * g11_y_xxzzzzzz[k] + f2g * (g20_0_xxzzzzzz[k] - fgz * g21_0_xxzzzzzz[k]);

                    g_yy_xyyyyyyy[k] = fr * g11_y_xyyyyyyy[k] + f2g * (g20_0_xyyyyyyy[k] - fgz * g21_0_xyyyyyyy[k]) + 7.0 * f2t * gk_y_xyyyyyy[k];

                    g_yy_xyyyyyyz[k] = fr * g11_y_xyyyyyyz[k] + f2g * (g20_0_xyyyyyyz[k] - fgz * g21_0_xyyyyyyz[k]) + 6.0 * f2t * gk_y_xyyyyyz[k];

                    g_yy_xyyyyyzz[k] = fr * g11_y_xyyyyyzz[k] + f2g * (g20_0_xyyyyyzz[k] - fgz * g21_0_xyyyyyzz[k]) + 5.0 * f2t * gk_y_xyyyyzz[k];

                    g_yy_xyyyyzzz[k] = fr * g11_y_xyyyyzzz[k] + f2g * (g20_0_xyyyyzzz[k] - fgz * g21_0_xyyyyzzz[k]) + 4.0 * f2t * gk_y_xyyyzzz[k];

                    g_yy_xyyyzzzz[k] = fr * g11_y_xyyyzzzz[k] + f2g * (g20_0_xyyyzzzz[k] - fgz * g21_0_xyyyzzzz[k]) + 3.0 * f2t * gk_y_xyyzzzz[k];

                    g_yy_xyyzzzzz[k] = fr * g11_y_xyyzzzzz[k] + f2g * (g20_0_xyyzzzzz[k] - fgz * g21_0_xyyzzzzz[k]) + 2.0 * f2t * gk_y_xyzzzzz[k];

                    g_yy_xyzzzzzz[k] = fr * g11_y_xyzzzzzz[k] + f2g * (g20_0_xyzzzzzz[k] - fgz * g21_0_xyzzzzzz[k]) + f2t * gk_y_xzzzzzz[k];

                    g_yy_xzzzzzzz[k] = fr * g11_y_xzzzzzzz[k] + f2g * (g20_0_xzzzzzzz[k] - fgz * g21_0_xzzzzzzz[k]);

                    g_yy_yyyyyyyy[k] = fr * g11_y_yyyyyyyy[k] + f2g * (g20_0_yyyyyyyy[k] - fgz * g21_0_yyyyyyyy[k]) + 8.0 * f2t * gk_y_yyyyyyy[k];

                    g_yy_yyyyyyyz[k] = fr * g11_y_yyyyyyyz[k] + f2g * (g20_0_yyyyyyyz[k] - fgz * g21_0_yyyyyyyz[k]) + 7.0 * f2t * gk_y_yyyyyyz[k];

                    g_yy_yyyyyyzz[k] = fr * g11_y_yyyyyyzz[k] + f2g * (g20_0_yyyyyyzz[k] - fgz * g21_0_yyyyyyzz[k]) + 6.0 * f2t * gk_y_yyyyyzz[k];

                    g_yy_yyyyyzzz[k] = fr * g11_y_yyyyyzzz[k] + f2g * (g20_0_yyyyyzzz[k] - fgz * g21_0_yyyyyzzz[k]) + 5.0 * f2t * gk_y_yyyyzzz[k];

                    g_yy_yyyyzzzz[k] = fr * g11_y_yyyyzzzz[k] + f2g * (g20_0_yyyyzzzz[k] - fgz * g21_0_yyyyzzzz[k]) + 4.0 * f2t * gk_y_yyyzzzz[k];

                    g_yy_yyyzzzzz[k] = fr * g11_y_yyyzzzzz[k] + f2g * (g20_0_yyyzzzzz[k] - fgz * g21_0_yyyzzzzz[k]) + 3.0 * f2t * gk_y_yyzzzzz[k];

                    g_yy_yyzzzzzz[k] = fr * g11_y_yyzzzzzz[k] + f2g * (g20_0_yyzzzzzz[k] - fgz * g21_0_yyzzzzzz[k]) + 2.0 * f2t * gk_y_yzzzzzz[k];

                    g_yy_yzzzzzzz[k] = fr * g11_y_yzzzzzzz[k] + f2g * (g20_0_yzzzzzzz[k] - fgz * g21_0_yzzzzzzz[k]) + f2t * gk_y_zzzzzzz[k];

                    g_yy_zzzzzzzz[k] = fr * g11_y_zzzzzzzz[k] + f2g * (g20_0_zzzzzzzz[k] - fgz * g21_0_zzzzzzzz[k]);

                    g_yz_xxxxxxxx[k] = fr * g11_z_xxxxxxxx[k];

                    g_yz_xxxxxxxy[k] = fr * g11_z_xxxxxxxy[k] + f2t * gk_z_xxxxxxx[k];

                    g_yz_xxxxxxxz[k] = fr * g11_z_xxxxxxxz[k];

                    g_yz_xxxxxxyy[k] = fr * g11_z_xxxxxxyy[k] + 2.0 * f2t * gk_z_xxxxxxy[k];

                    g_yz_xxxxxxyz[k] = fr * g11_z_xxxxxxyz[k] + f2t * gk_z_xxxxxxz[k];

                    g_yz_xxxxxxzz[k] = fr * g11_z_xxxxxxzz[k];

                    g_yz_xxxxxyyy[k] = fr * g11_z_xxxxxyyy[k] + 3.0 * f2t * gk_z_xxxxxyy[k];

                    g_yz_xxxxxyyz[k] = fr * g11_z_xxxxxyyz[k] + 2.0 * f2t * gk_z_xxxxxyz[k];

                    g_yz_xxxxxyzz[k] = fr * g11_z_xxxxxyzz[k] + f2t * gk_z_xxxxxzz[k];

                    g_yz_xxxxxzzz[k] = fr * g11_z_xxxxxzzz[k];

                    g_yz_xxxxyyyy[k] = fr * g11_z_xxxxyyyy[k] + 4.0 * f2t * gk_z_xxxxyyy[k];

                    g_yz_xxxxyyyz[k] = fr * g11_z_xxxxyyyz[k] + 3.0 * f2t * gk_z_xxxxyyz[k];

                    g_yz_xxxxyyzz[k] = fr * g11_z_xxxxyyzz[k] + 2.0 * f2t * gk_z_xxxxyzz[k];

                    g_yz_xxxxyzzz[k] = fr * g11_z_xxxxyzzz[k] + f2t * gk_z_xxxxzzz[k];

                    g_yz_xxxxzzzz[k] = fr * g11_z_xxxxzzzz[k];

                    g_yz_xxxyyyyy[k] = fr * g11_z_xxxyyyyy[k] + 5.0 * f2t * gk_z_xxxyyyy[k];

                    g_yz_xxxyyyyz[k] = fr * g11_z_xxxyyyyz[k] + 4.0 * f2t * gk_z_xxxyyyz[k];

                    g_yz_xxxyyyzz[k] = fr * g11_z_xxxyyyzz[k] + 3.0 * f2t * gk_z_xxxyyzz[k];

                    g_yz_xxxyyzzz[k] = fr * g11_z_xxxyyzzz[k] + 2.0 * f2t * gk_z_xxxyzzz[k];

                    g_yz_xxxyzzzz[k] = fr * g11_z_xxxyzzzz[k] + f2t * gk_z_xxxzzzz[k];

                    g_yz_xxxzzzzz[k] = fr * g11_z_xxxzzzzz[k];

                    g_yz_xxyyyyyy[k] = fr * g11_z_xxyyyyyy[k] + 6.0 * f2t * gk_z_xxyyyyy[k];

                    g_yz_xxyyyyyz[k] = fr * g11_z_xxyyyyyz[k] + 5.0 * f2t * gk_z_xxyyyyz[k];

                    g_yz_xxyyyyzz[k] = fr * g11_z_xxyyyyzz[k] + 4.0 * f2t * gk_z_xxyyyzz[k];

                    g_yz_xxyyyzzz[k] = fr * g11_z_xxyyyzzz[k] + 3.0 * f2t * gk_z_xxyyzzz[k];

                    g_yz_xxyyzzzz[k] = fr * g11_z_xxyyzzzz[k] + 2.0 * f2t * gk_z_xxyzzzz[k];

                    g_yz_xxyzzzzz[k] = fr * g11_z_xxyzzzzz[k] + f2t * gk_z_xxzzzzz[k];

                    g_yz_xxzzzzzz[k] = fr * g11_z_xxzzzzzz[k];

                    g_yz_xyyyyyyy[k] = fr * g11_z_xyyyyyyy[k] + 7.0 * f2t * gk_z_xyyyyyy[k];

                    g_yz_xyyyyyyz[k] = fr * g11_z_xyyyyyyz[k] + 6.0 * f2t * gk_z_xyyyyyz[k];

                    g_yz_xyyyyyzz[k] = fr * g11_z_xyyyyyzz[k] + 5.0 * f2t * gk_z_xyyyyzz[k];

                    g_yz_xyyyyzzz[k] = fr * g11_z_xyyyyzzz[k] + 4.0 * f2t * gk_z_xyyyzzz[k];

                    g_yz_xyyyzzzz[k] = fr * g11_z_xyyyzzzz[k] + 3.0 * f2t * gk_z_xyyzzzz[k];

                    g_yz_xyyzzzzz[k] = fr * g11_z_xyyzzzzz[k] + 2.0 * f2t * gk_z_xyzzzzz[k];

                    g_yz_xyzzzzzz[k] = fr * g11_z_xyzzzzzz[k] + f2t * gk_z_xzzzzzz[k];

                    g_yz_xzzzzzzz[k] = fr * g11_z_xzzzzzzz[k];

                    g_yz_yyyyyyyy[k] = fr * g11_z_yyyyyyyy[k] + 8.0 * f2t * gk_z_yyyyyyy[k];

                    g_yz_yyyyyyyz[k] = fr * g11_z_yyyyyyyz[k] + 7.0 * f2t * gk_z_yyyyyyz[k];

                    g_yz_yyyyyyzz[k] = fr * g11_z_yyyyyyzz[k] + 6.0 * f2t * gk_z_yyyyyzz[k];

                    g_yz_yyyyyzzz[k] = fr * g11_z_yyyyyzzz[k] + 5.0 * f2t * gk_z_yyyyzzz[k];

                    g_yz_yyyyzzzz[k] = fr * g11_z_yyyyzzzz[k] + 4.0 * f2t * gk_z_yyyzzzz[k];

                    g_yz_yyyzzzzz[k] = fr * g11_z_yyyzzzzz[k] + 3.0 * f2t * gk_z_yyzzzzz[k];

                    g_yz_yyzzzzzz[k] = fr * g11_z_yyzzzzzz[k] + 2.0 * f2t * gk_z_yzzzzzz[k];

                    g_yz_yzzzzzzz[k] = fr * g11_z_yzzzzzzz[k] + f2t * gk_z_zzzzzzz[k];

                    g_yz_zzzzzzzz[k] = fr * g11_z_zzzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zz_xxxxxxxx[k] = fr * g11_z_xxxxxxxx[k] + f2g * (g20_0_xxxxxxxx[k] - fgz * g21_0_xxxxxxxx[k]);

                    g_zz_xxxxxxxy[k] = fr * g11_z_xxxxxxxy[k] + f2g * (g20_0_xxxxxxxy[k] - fgz * g21_0_xxxxxxxy[k]);

                    g_zz_xxxxxxxz[k] = fr * g11_z_xxxxxxxz[k] + f2g * (g20_0_xxxxxxxz[k] - fgz * g21_0_xxxxxxxz[k]) + f2t * gk_z_xxxxxxx[k];

                    g_zz_xxxxxxyy[k] = fr * g11_z_xxxxxxyy[k] + f2g * (g20_0_xxxxxxyy[k] - fgz * g21_0_xxxxxxyy[k]);

                    g_zz_xxxxxxyz[k] = fr * g11_z_xxxxxxyz[k] + f2g * (g20_0_xxxxxxyz[k] - fgz * g21_0_xxxxxxyz[k]) + f2t * gk_z_xxxxxxy[k];

                    g_zz_xxxxxxzz[k] = fr * g11_z_xxxxxxzz[k] + f2g * (g20_0_xxxxxxzz[k] - fgz * g21_0_xxxxxxzz[k]) + 2.0 * f2t * gk_z_xxxxxxz[k];

                    g_zz_xxxxxyyy[k] = fr * g11_z_xxxxxyyy[k] + f2g * (g20_0_xxxxxyyy[k] - fgz * g21_0_xxxxxyyy[k]);

                    g_zz_xxxxxyyz[k] = fr * g11_z_xxxxxyyz[k] + f2g * (g20_0_xxxxxyyz[k] - fgz * g21_0_xxxxxyyz[k]) + f2t * gk_z_xxxxxyy[k];

                    g_zz_xxxxxyzz[k] = fr * g11_z_xxxxxyzz[k] + f2g * (g20_0_xxxxxyzz[k] - fgz * g21_0_xxxxxyzz[k]) + 2.0 * f2t * gk_z_xxxxxyz[k];

                    g_zz_xxxxxzzz[k] = fr * g11_z_xxxxxzzz[k] + f2g * (g20_0_xxxxxzzz[k] - fgz * g21_0_xxxxxzzz[k]) + 3.0 * f2t * gk_z_xxxxxzz[k];

                    g_zz_xxxxyyyy[k] = fr * g11_z_xxxxyyyy[k] + f2g * (g20_0_xxxxyyyy[k] - fgz * g21_0_xxxxyyyy[k]);

                    g_zz_xxxxyyyz[k] = fr * g11_z_xxxxyyyz[k] + f2g * (g20_0_xxxxyyyz[k] - fgz * g21_0_xxxxyyyz[k]) + f2t * gk_z_xxxxyyy[k];

                    g_zz_xxxxyyzz[k] = fr * g11_z_xxxxyyzz[k] + f2g * (g20_0_xxxxyyzz[k] - fgz * g21_0_xxxxyyzz[k]) + 2.0 * f2t * gk_z_xxxxyyz[k];

                    g_zz_xxxxyzzz[k] = fr * g11_z_xxxxyzzz[k] + f2g * (g20_0_xxxxyzzz[k] - fgz * g21_0_xxxxyzzz[k]) + 3.0 * f2t * gk_z_xxxxyzz[k];

                    g_zz_xxxxzzzz[k] = fr * g11_z_xxxxzzzz[k] + f2g * (g20_0_xxxxzzzz[k] - fgz * g21_0_xxxxzzzz[k]) + 4.0 * f2t * gk_z_xxxxzzz[k];

                    g_zz_xxxyyyyy[k] = fr * g11_z_xxxyyyyy[k] + f2g * (g20_0_xxxyyyyy[k] - fgz * g21_0_xxxyyyyy[k]);

                    g_zz_xxxyyyyz[k] = fr * g11_z_xxxyyyyz[k] + f2g * (g20_0_xxxyyyyz[k] - fgz * g21_0_xxxyyyyz[k]) + f2t * gk_z_xxxyyyy[k];

                    g_zz_xxxyyyzz[k] = fr * g11_z_xxxyyyzz[k] + f2g * (g20_0_xxxyyyzz[k] - fgz * g21_0_xxxyyyzz[k]) + 2.0 * f2t * gk_z_xxxyyyz[k];

                    g_zz_xxxyyzzz[k] = fr * g11_z_xxxyyzzz[k] + f2g * (g20_0_xxxyyzzz[k] - fgz * g21_0_xxxyyzzz[k]) + 3.0 * f2t * gk_z_xxxyyzz[k];

                    g_zz_xxxyzzzz[k] = fr * g11_z_xxxyzzzz[k] + f2g * (g20_0_xxxyzzzz[k] - fgz * g21_0_xxxyzzzz[k]) + 4.0 * f2t * gk_z_xxxyzzz[k];

                    g_zz_xxxzzzzz[k] = fr * g11_z_xxxzzzzz[k] + f2g * (g20_0_xxxzzzzz[k] - fgz * g21_0_xxxzzzzz[k]) + 5.0 * f2t * gk_z_xxxzzzz[k];

                    g_zz_xxyyyyyy[k] = fr * g11_z_xxyyyyyy[k] + f2g * (g20_0_xxyyyyyy[k] - fgz * g21_0_xxyyyyyy[k]);

                    g_zz_xxyyyyyz[k] = fr * g11_z_xxyyyyyz[k] + f2g * (g20_0_xxyyyyyz[k] - fgz * g21_0_xxyyyyyz[k]) + f2t * gk_z_xxyyyyy[k];

                    g_zz_xxyyyyzz[k] = fr * g11_z_xxyyyyzz[k] + f2g * (g20_0_xxyyyyzz[k] - fgz * g21_0_xxyyyyzz[k]) + 2.0 * f2t * gk_z_xxyyyyz[k];

                    g_zz_xxyyyzzz[k] = fr * g11_z_xxyyyzzz[k] + f2g * (g20_0_xxyyyzzz[k] - fgz * g21_0_xxyyyzzz[k]) + 3.0 * f2t * gk_z_xxyyyzz[k];

                    g_zz_xxyyzzzz[k] = fr * g11_z_xxyyzzzz[k] + f2g * (g20_0_xxyyzzzz[k] - fgz * g21_0_xxyyzzzz[k]) + 4.0 * f2t * gk_z_xxyyzzz[k];

                    g_zz_xxyzzzzz[k] = fr * g11_z_xxyzzzzz[k] + f2g * (g20_0_xxyzzzzz[k] - fgz * g21_0_xxyzzzzz[k]) + 5.0 * f2t * gk_z_xxyzzzz[k];

                    g_zz_xxzzzzzz[k] = fr * g11_z_xxzzzzzz[k] + f2g * (g20_0_xxzzzzzz[k] - fgz * g21_0_xxzzzzzz[k]) + 6.0 * f2t * gk_z_xxzzzzz[k];

                    g_zz_xyyyyyyy[k] = fr * g11_z_xyyyyyyy[k] + f2g * (g20_0_xyyyyyyy[k] - fgz * g21_0_xyyyyyyy[k]);

                    g_zz_xyyyyyyz[k] = fr * g11_z_xyyyyyyz[k] + f2g * (g20_0_xyyyyyyz[k] - fgz * g21_0_xyyyyyyz[k]) + f2t * gk_z_xyyyyyy[k];

                    g_zz_xyyyyyzz[k] = fr * g11_z_xyyyyyzz[k] + f2g * (g20_0_xyyyyyzz[k] - fgz * g21_0_xyyyyyzz[k]) + 2.0 * f2t * gk_z_xyyyyyz[k];

                    g_zz_xyyyyzzz[k] = fr * g11_z_xyyyyzzz[k] + f2g * (g20_0_xyyyyzzz[k] - fgz * g21_0_xyyyyzzz[k]) + 3.0 * f2t * gk_z_xyyyyzz[k];

                    g_zz_xyyyzzzz[k] = fr * g11_z_xyyyzzzz[k] + f2g * (g20_0_xyyyzzzz[k] - fgz * g21_0_xyyyzzzz[k]) + 4.0 * f2t * gk_z_xyyyzzz[k];

                    g_zz_xyyzzzzz[k] = fr * g11_z_xyyzzzzz[k] + f2g * (g20_0_xyyzzzzz[k] - fgz * g21_0_xyyzzzzz[k]) + 5.0 * f2t * gk_z_xyyzzzz[k];

                    g_zz_xyzzzzzz[k] = fr * g11_z_xyzzzzzz[k] + f2g * (g20_0_xyzzzzzz[k] - fgz * g21_0_xyzzzzzz[k]) + 6.0 * f2t * gk_z_xyzzzzz[k];

                    g_zz_xzzzzzzz[k] = fr * g11_z_xzzzzzzz[k] + f2g * (g20_0_xzzzzzzz[k] - fgz * g21_0_xzzzzzzz[k]) + 7.0 * f2t * gk_z_xzzzzzz[k];

                    g_zz_yyyyyyyy[k] = fr * g11_z_yyyyyyyy[k] + f2g * (g20_0_yyyyyyyy[k] - fgz * g21_0_yyyyyyyy[k]);

                    g_zz_yyyyyyyz[k] = fr * g11_z_yyyyyyyz[k] + f2g * (g20_0_yyyyyyyz[k] - fgz * g21_0_yyyyyyyz[k]) + f2t * gk_z_yyyyyyy[k];

                    g_zz_yyyyyyzz[k] = fr * g11_z_yyyyyyzz[k] + f2g * (g20_0_yyyyyyzz[k] - fgz * g21_0_yyyyyyzz[k]) + 2.0 * f2t * gk_z_yyyyyyz[k];

                    g_zz_yyyyyzzz[k] = fr * g11_z_yyyyyzzz[k] + f2g * (g20_0_yyyyyzzz[k] - fgz * g21_0_yyyyyzzz[k]) + 3.0 * f2t * gk_z_yyyyyzz[k];

                    g_zz_yyyyzzzz[k] = fr * g11_z_yyyyzzzz[k] + f2g * (g20_0_yyyyzzzz[k] - fgz * g21_0_yyyyzzzz[k]) + 4.0 * f2t * gk_z_yyyyzzz[k];

                    g_zz_yyyzzzzz[k] = fr * g11_z_yyyzzzzz[k] + f2g * (g20_0_yyyzzzzz[k] - fgz * g21_0_yyyzzzzz[k]) + 5.0 * f2t * gk_z_yyyzzzz[k];

                    g_zz_yyzzzzzz[k] = fr * g11_z_yyzzzzzz[k] + f2g * (g20_0_yyzzzzzz[k] - fgz * g21_0_yyzzzzzz[k]) + 6.0 * f2t * gk_z_yyzzzzz[k];

                    g_zz_yzzzzzzz[k] = fr * g11_z_yzzzzzzz[k] + f2g * (g20_0_yzzzzzzz[k] - fgz * g21_0_yzzzzzzz[k]) + 7.0 * f2t * gk_z_yzzzzzz[k];

                    g_zz_zzzzzzzz[k] = fr * g11_z_zzzzzzzz[k] + f2g * (g20_0_zzzzzzzz[k] - fgz * g21_0_zzzzzzzz[k]) + 8.0 * f2t * gk_z_zzzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForFSL(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 3, 8);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {3, 8, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 8, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 8, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {1, 8, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {2, 7, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (D|g(r,r')|SK)^(m+1) integrals

                auto gk_xx_xxxxxxx = primBuffer.data(gkoff + 216 * idx);

                auto gk_xx_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 1);

                auto gk_xx_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 2);

                auto gk_xx_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 3);

                auto gk_xx_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 4);

                auto gk_xx_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 5);

                auto gk_xx_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 6);

                auto gk_xx_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 7);

                auto gk_xx_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 8);

                auto gk_xx_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 9);

                auto gk_xx_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 10);

                auto gk_xx_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 11);

                auto gk_xx_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 12);

                auto gk_xx_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 13);

                auto gk_xx_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 14);

                auto gk_xx_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 15);

                auto gk_xx_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 16);

                auto gk_xx_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 17);

                auto gk_xx_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 18);

                auto gk_xx_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 19);

                auto gk_xx_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 20);

                auto gk_xx_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 21);

                auto gk_xx_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 22);

                auto gk_xx_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 23);

                auto gk_xx_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 24);

                auto gk_xx_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 25);

                auto gk_xx_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 26);

                auto gk_xx_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 27);

                auto gk_xx_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 28);

                auto gk_xx_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 29);

                auto gk_xx_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 30);

                auto gk_xx_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 31);

                auto gk_xx_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 32);

                auto gk_xx_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 33);

                auto gk_xx_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 34);

                auto gk_xx_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 35);

                auto gk_xy_xxxxxxx = primBuffer.data(gkoff + 216 * idx + 36);

                auto gk_xy_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 37);

                auto gk_xy_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 38);

                auto gk_xy_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 39);

                auto gk_xy_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 40);

                auto gk_xy_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 41);

                auto gk_xy_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 42);

                auto gk_xy_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 43);

                auto gk_xy_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 44);

                auto gk_xy_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 45);

                auto gk_xy_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 46);

                auto gk_xy_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 47);

                auto gk_xy_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 48);

                auto gk_xy_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 49);

                auto gk_xy_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 50);

                auto gk_xy_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 51);

                auto gk_xy_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 52);

                auto gk_xy_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 53);

                auto gk_xy_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 54);

                auto gk_xy_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 55);

                auto gk_xy_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 56);

                auto gk_xy_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 57);

                auto gk_xy_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 58);

                auto gk_xy_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 59);

                auto gk_xy_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 60);

                auto gk_xy_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 61);

                auto gk_xy_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 62);

                auto gk_xy_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 63);

                auto gk_xy_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 64);

                auto gk_xy_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 65);

                auto gk_xy_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 66);

                auto gk_xy_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 67);

                auto gk_xy_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 68);

                auto gk_xy_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 69);

                auto gk_xy_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 70);

                auto gk_xy_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 71);

                auto gk_xz_xxxxxxx = primBuffer.data(gkoff + 216 * idx + 72);

                auto gk_xz_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 73);

                auto gk_xz_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 74);

                auto gk_xz_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 75);

                auto gk_xz_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 76);

                auto gk_xz_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 77);

                auto gk_xz_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 78);

                auto gk_xz_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 79);

                auto gk_xz_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 80);

                auto gk_xz_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 81);

                auto gk_xz_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 82);

                auto gk_xz_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 83);

                auto gk_xz_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 84);

                auto gk_xz_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 85);

                auto gk_xz_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 86);

                auto gk_xz_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 87);

                auto gk_xz_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 88);

                auto gk_xz_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 89);

                auto gk_xz_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 90);

                auto gk_xz_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 91);

                auto gk_xz_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 92);

                auto gk_xz_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 93);

                auto gk_xz_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 94);

                auto gk_xz_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 95);

                auto gk_xz_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 96);

                auto gk_xz_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 97);

                auto gk_xz_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 98);

                auto gk_xz_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 99);

                auto gk_xz_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 100);

                auto gk_xz_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 101);

                auto gk_xz_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 102);

                auto gk_xz_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 103);

                auto gk_xz_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 104);

                auto gk_xz_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 105);

                auto gk_xz_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 106);

                auto gk_xz_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 107);

                auto gk_yy_xxxxxxx = primBuffer.data(gkoff + 216 * idx + 108);

                auto gk_yy_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 109);

                auto gk_yy_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 110);

                auto gk_yy_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 111);

                auto gk_yy_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 112);

                auto gk_yy_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 113);

                auto gk_yy_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 114);

                auto gk_yy_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 115);

                auto gk_yy_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 116);

                auto gk_yy_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 117);

                auto gk_yy_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 118);

                auto gk_yy_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 119);

                auto gk_yy_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 120);

                auto gk_yy_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 121);

                auto gk_yy_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 122);

                auto gk_yy_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 123);

                auto gk_yy_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 124);

                auto gk_yy_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 125);

                auto gk_yy_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 126);

                auto gk_yy_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 127);

                auto gk_yy_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 128);

                auto gk_yy_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 129);

                auto gk_yy_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 130);

                auto gk_yy_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 131);

                auto gk_yy_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 132);

                auto gk_yy_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 133);

                auto gk_yy_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 134);

                auto gk_yy_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 135);

                auto gk_yy_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 136);

                auto gk_yy_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 137);

                auto gk_yy_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 138);

                auto gk_yy_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 139);

                auto gk_yy_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 140);

                auto gk_yy_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 141);

                auto gk_yy_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 142);

                auto gk_yy_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 143);

                auto gk_yz_xxxxxxx = primBuffer.data(gkoff + 216 * idx + 144);

                auto gk_yz_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 145);

                auto gk_yz_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 146);

                auto gk_yz_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 147);

                auto gk_yz_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 148);

                auto gk_yz_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 149);

                auto gk_yz_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 150);

                auto gk_yz_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 151);

                auto gk_yz_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 152);

                auto gk_yz_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 153);

                auto gk_yz_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 154);

                auto gk_yz_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 155);

                auto gk_yz_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 156);

                auto gk_yz_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 157);

                auto gk_yz_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 158);

                auto gk_yz_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 159);

                auto gk_yz_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 160);

                auto gk_yz_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 161);

                auto gk_yz_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 162);

                auto gk_yz_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 163);

                auto gk_yz_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 164);

                auto gk_yz_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 165);

                auto gk_yz_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 166);

                auto gk_yz_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 167);

                auto gk_yz_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 168);

                auto gk_yz_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 169);

                auto gk_yz_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 170);

                auto gk_yz_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 171);

                auto gk_yz_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 172);

                auto gk_yz_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 173);

                auto gk_yz_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 174);

                auto gk_yz_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 175);

                auto gk_yz_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 176);

                auto gk_yz_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 177);

                auto gk_yz_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 178);

                auto gk_yz_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 179);

                auto gk_zz_xxxxxxx = primBuffer.data(gkoff + 216 * idx + 180);

                auto gk_zz_xxxxxxy = primBuffer.data(gkoff + 216 * idx + 181);

                auto gk_zz_xxxxxxz = primBuffer.data(gkoff + 216 * idx + 182);

                auto gk_zz_xxxxxyy = primBuffer.data(gkoff + 216 * idx + 183);

                auto gk_zz_xxxxxyz = primBuffer.data(gkoff + 216 * idx + 184);

                auto gk_zz_xxxxxzz = primBuffer.data(gkoff + 216 * idx + 185);

                auto gk_zz_xxxxyyy = primBuffer.data(gkoff + 216 * idx + 186);

                auto gk_zz_xxxxyyz = primBuffer.data(gkoff + 216 * idx + 187);

                auto gk_zz_xxxxyzz = primBuffer.data(gkoff + 216 * idx + 188);

                auto gk_zz_xxxxzzz = primBuffer.data(gkoff + 216 * idx + 189);

                auto gk_zz_xxxyyyy = primBuffer.data(gkoff + 216 * idx + 190);

                auto gk_zz_xxxyyyz = primBuffer.data(gkoff + 216 * idx + 191);

                auto gk_zz_xxxyyzz = primBuffer.data(gkoff + 216 * idx + 192);

                auto gk_zz_xxxyzzz = primBuffer.data(gkoff + 216 * idx + 193);

                auto gk_zz_xxxzzzz = primBuffer.data(gkoff + 216 * idx + 194);

                auto gk_zz_xxyyyyy = primBuffer.data(gkoff + 216 * idx + 195);

                auto gk_zz_xxyyyyz = primBuffer.data(gkoff + 216 * idx + 196);

                auto gk_zz_xxyyyzz = primBuffer.data(gkoff + 216 * idx + 197);

                auto gk_zz_xxyyzzz = primBuffer.data(gkoff + 216 * idx + 198);

                auto gk_zz_xxyzzzz = primBuffer.data(gkoff + 216 * idx + 199);

                auto gk_zz_xxzzzzz = primBuffer.data(gkoff + 216 * idx + 200);

                auto gk_zz_xyyyyyy = primBuffer.data(gkoff + 216 * idx + 201);

                auto gk_zz_xyyyyyz = primBuffer.data(gkoff + 216 * idx + 202);

                auto gk_zz_xyyyyzz = primBuffer.data(gkoff + 216 * idx + 203);

                auto gk_zz_xyyyzzz = primBuffer.data(gkoff + 216 * idx + 204);

                auto gk_zz_xyyzzzz = primBuffer.data(gkoff + 216 * idx + 205);

                auto gk_zz_xyzzzzz = primBuffer.data(gkoff + 216 * idx + 206);

                auto gk_zz_xzzzzzz = primBuffer.data(gkoff + 216 * idx + 207);

                auto gk_zz_yyyyyyy = primBuffer.data(gkoff + 216 * idx + 208);

                auto gk_zz_yyyyyyz = primBuffer.data(gkoff + 216 * idx + 209);

                auto gk_zz_yyyyyzz = primBuffer.data(gkoff + 216 * idx + 210);

                auto gk_zz_yyyyzzz = primBuffer.data(gkoff + 216 * idx + 211);

                auto gk_zz_yyyzzzz = primBuffer.data(gkoff + 216 * idx + 212);

                auto gk_zz_yyzzzzz = primBuffer.data(gkoff + 216 * idx + 213);

                auto gk_zz_yzzzzzz = primBuffer.data(gkoff + 216 * idx + 214);

                auto gk_zz_zzzzzzz = primBuffer.data(gkoff + 216 * idx + 215);

                // set up pointers to (P|g(r,r')|SL)^(m) integrals

                auto g20_x_xxxxxxxx = primBuffer.data(g20off + 135 * idx);

                auto g20_x_xxxxxxxy = primBuffer.data(g20off + 135 * idx + 1);

                auto g20_x_xxxxxxxz = primBuffer.data(g20off + 135 * idx + 2);

                auto g20_x_xxxxxxyy = primBuffer.data(g20off + 135 * idx + 3);

                auto g20_x_xxxxxxyz = primBuffer.data(g20off + 135 * idx + 4);

                auto g20_x_xxxxxxzz = primBuffer.data(g20off + 135 * idx + 5);

                auto g20_x_xxxxxyyy = primBuffer.data(g20off + 135 * idx + 6);

                auto g20_x_xxxxxyyz = primBuffer.data(g20off + 135 * idx + 7);

                auto g20_x_xxxxxyzz = primBuffer.data(g20off + 135 * idx + 8);

                auto g20_x_xxxxxzzz = primBuffer.data(g20off + 135 * idx + 9);

                auto g20_x_xxxxyyyy = primBuffer.data(g20off + 135 * idx + 10);

                auto g20_x_xxxxyyyz = primBuffer.data(g20off + 135 * idx + 11);

                auto g20_x_xxxxyyzz = primBuffer.data(g20off + 135 * idx + 12);

                auto g20_x_xxxxyzzz = primBuffer.data(g20off + 135 * idx + 13);

                auto g20_x_xxxxzzzz = primBuffer.data(g20off + 135 * idx + 14);

                auto g20_x_xxxyyyyy = primBuffer.data(g20off + 135 * idx + 15);

                auto g20_x_xxxyyyyz = primBuffer.data(g20off + 135 * idx + 16);

                auto g20_x_xxxyyyzz = primBuffer.data(g20off + 135 * idx + 17);

                auto g20_x_xxxyyzzz = primBuffer.data(g20off + 135 * idx + 18);

                auto g20_x_xxxyzzzz = primBuffer.data(g20off + 135 * idx + 19);

                auto g20_x_xxxzzzzz = primBuffer.data(g20off + 135 * idx + 20);

                auto g20_x_xxyyyyyy = primBuffer.data(g20off + 135 * idx + 21);

                auto g20_x_xxyyyyyz = primBuffer.data(g20off + 135 * idx + 22);

                auto g20_x_xxyyyyzz = primBuffer.data(g20off + 135 * idx + 23);

                auto g20_x_xxyyyzzz = primBuffer.data(g20off + 135 * idx + 24);

                auto g20_x_xxyyzzzz = primBuffer.data(g20off + 135 * idx + 25);

                auto g20_x_xxyzzzzz = primBuffer.data(g20off + 135 * idx + 26);

                auto g20_x_xxzzzzzz = primBuffer.data(g20off + 135 * idx + 27);

                auto g20_x_xyyyyyyy = primBuffer.data(g20off + 135 * idx + 28);

                auto g20_x_xyyyyyyz = primBuffer.data(g20off + 135 * idx + 29);

                auto g20_x_xyyyyyzz = primBuffer.data(g20off + 135 * idx + 30);

                auto g20_x_xyyyyzzz = primBuffer.data(g20off + 135 * idx + 31);

                auto g20_x_xyyyzzzz = primBuffer.data(g20off + 135 * idx + 32);

                auto g20_x_xyyzzzzz = primBuffer.data(g20off + 135 * idx + 33);

                auto g20_x_xyzzzzzz = primBuffer.data(g20off + 135 * idx + 34);

                auto g20_x_xzzzzzzz = primBuffer.data(g20off + 135 * idx + 35);

                auto g20_x_yyyyyyyy = primBuffer.data(g20off + 135 * idx + 36);

                auto g20_x_yyyyyyyz = primBuffer.data(g20off + 135 * idx + 37);

                auto g20_x_yyyyyyzz = primBuffer.data(g20off + 135 * idx + 38);

                auto g20_x_yyyyyzzz = primBuffer.data(g20off + 135 * idx + 39);

                auto g20_x_yyyyzzzz = primBuffer.data(g20off + 135 * idx + 40);

                auto g20_x_yyyzzzzz = primBuffer.data(g20off + 135 * idx + 41);

                auto g20_x_yyzzzzzz = primBuffer.data(g20off + 135 * idx + 42);

                auto g20_x_yzzzzzzz = primBuffer.data(g20off + 135 * idx + 43);

                auto g20_x_zzzzzzzz = primBuffer.data(g20off + 135 * idx + 44);

                auto g20_y_xxxxxxxx = primBuffer.data(g20off + 135 * idx + 45);

                auto g20_y_xxxxxxxy = primBuffer.data(g20off + 135 * idx + 46);

                auto g20_y_xxxxxxxz = primBuffer.data(g20off + 135 * idx + 47);

                auto g20_y_xxxxxxyy = primBuffer.data(g20off + 135 * idx + 48);

                auto g20_y_xxxxxxyz = primBuffer.data(g20off + 135 * idx + 49);

                auto g20_y_xxxxxxzz = primBuffer.data(g20off + 135 * idx + 50);

                auto g20_y_xxxxxyyy = primBuffer.data(g20off + 135 * idx + 51);

                auto g20_y_xxxxxyyz = primBuffer.data(g20off + 135 * idx + 52);

                auto g20_y_xxxxxyzz = primBuffer.data(g20off + 135 * idx + 53);

                auto g20_y_xxxxxzzz = primBuffer.data(g20off + 135 * idx + 54);

                auto g20_y_xxxxyyyy = primBuffer.data(g20off + 135 * idx + 55);

                auto g20_y_xxxxyyyz = primBuffer.data(g20off + 135 * idx + 56);

                auto g20_y_xxxxyyzz = primBuffer.data(g20off + 135 * idx + 57);

                auto g20_y_xxxxyzzz = primBuffer.data(g20off + 135 * idx + 58);

                auto g20_y_xxxxzzzz = primBuffer.data(g20off + 135 * idx + 59);

                auto g20_y_xxxyyyyy = primBuffer.data(g20off + 135 * idx + 60);

                auto g20_y_xxxyyyyz = primBuffer.data(g20off + 135 * idx + 61);

                auto g20_y_xxxyyyzz = primBuffer.data(g20off + 135 * idx + 62);

                auto g20_y_xxxyyzzz = primBuffer.data(g20off + 135 * idx + 63);

                auto g20_y_xxxyzzzz = primBuffer.data(g20off + 135 * idx + 64);

                auto g20_y_xxxzzzzz = primBuffer.data(g20off + 135 * idx + 65);

                auto g20_y_xxyyyyyy = primBuffer.data(g20off + 135 * idx + 66);

                auto g20_y_xxyyyyyz = primBuffer.data(g20off + 135 * idx + 67);

                auto g20_y_xxyyyyzz = primBuffer.data(g20off + 135 * idx + 68);

                auto g20_y_xxyyyzzz = primBuffer.data(g20off + 135 * idx + 69);

                auto g20_y_xxyyzzzz = primBuffer.data(g20off + 135 * idx + 70);

                auto g20_y_xxyzzzzz = primBuffer.data(g20off + 135 * idx + 71);

                auto g20_y_xxzzzzzz = primBuffer.data(g20off + 135 * idx + 72);

                auto g20_y_xyyyyyyy = primBuffer.data(g20off + 135 * idx + 73);

                auto g20_y_xyyyyyyz = primBuffer.data(g20off + 135 * idx + 74);

                auto g20_y_xyyyyyzz = primBuffer.data(g20off + 135 * idx + 75);

                auto g20_y_xyyyyzzz = primBuffer.data(g20off + 135 * idx + 76);

                auto g20_y_xyyyzzzz = primBuffer.data(g20off + 135 * idx + 77);

                auto g20_y_xyyzzzzz = primBuffer.data(g20off + 135 * idx + 78);

                auto g20_y_xyzzzzzz = primBuffer.data(g20off + 135 * idx + 79);

                auto g20_y_xzzzzzzz = primBuffer.data(g20off + 135 * idx + 80);

                auto g20_y_yyyyyyyy = primBuffer.data(g20off + 135 * idx + 81);

                auto g20_y_yyyyyyyz = primBuffer.data(g20off + 135 * idx + 82);

                auto g20_y_yyyyyyzz = primBuffer.data(g20off + 135 * idx + 83);

                auto g20_y_yyyyyzzz = primBuffer.data(g20off + 135 * idx + 84);

                auto g20_y_yyyyzzzz = primBuffer.data(g20off + 135 * idx + 85);

                auto g20_y_yyyzzzzz = primBuffer.data(g20off + 135 * idx + 86);

                auto g20_y_yyzzzzzz = primBuffer.data(g20off + 135 * idx + 87);

                auto g20_y_yzzzzzzz = primBuffer.data(g20off + 135 * idx + 88);

                auto g20_y_zzzzzzzz = primBuffer.data(g20off + 135 * idx + 89);

                auto g20_z_xxxxxxxx = primBuffer.data(g20off + 135 * idx + 90);

                auto g20_z_xxxxxxxy = primBuffer.data(g20off + 135 * idx + 91);

                auto g20_z_xxxxxxxz = primBuffer.data(g20off + 135 * idx + 92);

                auto g20_z_xxxxxxyy = primBuffer.data(g20off + 135 * idx + 93);

                auto g20_z_xxxxxxyz = primBuffer.data(g20off + 135 * idx + 94);

                auto g20_z_xxxxxxzz = primBuffer.data(g20off + 135 * idx + 95);

                auto g20_z_xxxxxyyy = primBuffer.data(g20off + 135 * idx + 96);

                auto g20_z_xxxxxyyz = primBuffer.data(g20off + 135 * idx + 97);

                auto g20_z_xxxxxyzz = primBuffer.data(g20off + 135 * idx + 98);

                auto g20_z_xxxxxzzz = primBuffer.data(g20off + 135 * idx + 99);

                auto g20_z_xxxxyyyy = primBuffer.data(g20off + 135 * idx + 100);

                auto g20_z_xxxxyyyz = primBuffer.data(g20off + 135 * idx + 101);

                auto g20_z_xxxxyyzz = primBuffer.data(g20off + 135 * idx + 102);

                auto g20_z_xxxxyzzz = primBuffer.data(g20off + 135 * idx + 103);

                auto g20_z_xxxxzzzz = primBuffer.data(g20off + 135 * idx + 104);

                auto g20_z_xxxyyyyy = primBuffer.data(g20off + 135 * idx + 105);

                auto g20_z_xxxyyyyz = primBuffer.data(g20off + 135 * idx + 106);

                auto g20_z_xxxyyyzz = primBuffer.data(g20off + 135 * idx + 107);

                auto g20_z_xxxyyzzz = primBuffer.data(g20off + 135 * idx + 108);

                auto g20_z_xxxyzzzz = primBuffer.data(g20off + 135 * idx + 109);

                auto g20_z_xxxzzzzz = primBuffer.data(g20off + 135 * idx + 110);

                auto g20_z_xxyyyyyy = primBuffer.data(g20off + 135 * idx + 111);

                auto g20_z_xxyyyyyz = primBuffer.data(g20off + 135 * idx + 112);

                auto g20_z_xxyyyyzz = primBuffer.data(g20off + 135 * idx + 113);

                auto g20_z_xxyyyzzz = primBuffer.data(g20off + 135 * idx + 114);

                auto g20_z_xxyyzzzz = primBuffer.data(g20off + 135 * idx + 115);

                auto g20_z_xxyzzzzz = primBuffer.data(g20off + 135 * idx + 116);

                auto g20_z_xxzzzzzz = primBuffer.data(g20off + 135 * idx + 117);

                auto g20_z_xyyyyyyy = primBuffer.data(g20off + 135 * idx + 118);

                auto g20_z_xyyyyyyz = primBuffer.data(g20off + 135 * idx + 119);

                auto g20_z_xyyyyyzz = primBuffer.data(g20off + 135 * idx + 120);

                auto g20_z_xyyyyzzz = primBuffer.data(g20off + 135 * idx + 121);

                auto g20_z_xyyyzzzz = primBuffer.data(g20off + 135 * idx + 122);

                auto g20_z_xyyzzzzz = primBuffer.data(g20off + 135 * idx + 123);

                auto g20_z_xyzzzzzz = primBuffer.data(g20off + 135 * idx + 124);

                auto g20_z_xzzzzzzz = primBuffer.data(g20off + 135 * idx + 125);

                auto g20_z_yyyyyyyy = primBuffer.data(g20off + 135 * idx + 126);

                auto g20_z_yyyyyyyz = primBuffer.data(g20off + 135 * idx + 127);

                auto g20_z_yyyyyyzz = primBuffer.data(g20off + 135 * idx + 128);

                auto g20_z_yyyyyzzz = primBuffer.data(g20off + 135 * idx + 129);

                auto g20_z_yyyyzzzz = primBuffer.data(g20off + 135 * idx + 130);

                auto g20_z_yyyzzzzz = primBuffer.data(g20off + 135 * idx + 131);

                auto g20_z_yyzzzzzz = primBuffer.data(g20off + 135 * idx + 132);

                auto g20_z_yzzzzzzz = primBuffer.data(g20off + 135 * idx + 133);

                auto g20_z_zzzzzzzz = primBuffer.data(g20off + 135 * idx + 134);

                // set up pointers to (P|g(r,r')|SL)^(m+1) integrals

                auto g21_x_xxxxxxxx = primBuffer.data(g21off + 135 * idx);

                auto g21_x_xxxxxxxy = primBuffer.data(g21off + 135 * idx + 1);

                auto g21_x_xxxxxxxz = primBuffer.data(g21off + 135 * idx + 2);

                auto g21_x_xxxxxxyy = primBuffer.data(g21off + 135 * idx + 3);

                auto g21_x_xxxxxxyz = primBuffer.data(g21off + 135 * idx + 4);

                auto g21_x_xxxxxxzz = primBuffer.data(g21off + 135 * idx + 5);

                auto g21_x_xxxxxyyy = primBuffer.data(g21off + 135 * idx + 6);

                auto g21_x_xxxxxyyz = primBuffer.data(g21off + 135 * idx + 7);

                auto g21_x_xxxxxyzz = primBuffer.data(g21off + 135 * idx + 8);

                auto g21_x_xxxxxzzz = primBuffer.data(g21off + 135 * idx + 9);

                auto g21_x_xxxxyyyy = primBuffer.data(g21off + 135 * idx + 10);

                auto g21_x_xxxxyyyz = primBuffer.data(g21off + 135 * idx + 11);

                auto g21_x_xxxxyyzz = primBuffer.data(g21off + 135 * idx + 12);

                auto g21_x_xxxxyzzz = primBuffer.data(g21off + 135 * idx + 13);

                auto g21_x_xxxxzzzz = primBuffer.data(g21off + 135 * idx + 14);

                auto g21_x_xxxyyyyy = primBuffer.data(g21off + 135 * idx + 15);

                auto g21_x_xxxyyyyz = primBuffer.data(g21off + 135 * idx + 16);

                auto g21_x_xxxyyyzz = primBuffer.data(g21off + 135 * idx + 17);

                auto g21_x_xxxyyzzz = primBuffer.data(g21off + 135 * idx + 18);

                auto g21_x_xxxyzzzz = primBuffer.data(g21off + 135 * idx + 19);

                auto g21_x_xxxzzzzz = primBuffer.data(g21off + 135 * idx + 20);

                auto g21_x_xxyyyyyy = primBuffer.data(g21off + 135 * idx + 21);

                auto g21_x_xxyyyyyz = primBuffer.data(g21off + 135 * idx + 22);

                auto g21_x_xxyyyyzz = primBuffer.data(g21off + 135 * idx + 23);

                auto g21_x_xxyyyzzz = primBuffer.data(g21off + 135 * idx + 24);

                auto g21_x_xxyyzzzz = primBuffer.data(g21off + 135 * idx + 25);

                auto g21_x_xxyzzzzz = primBuffer.data(g21off + 135 * idx + 26);

                auto g21_x_xxzzzzzz = primBuffer.data(g21off + 135 * idx + 27);

                auto g21_x_xyyyyyyy = primBuffer.data(g21off + 135 * idx + 28);

                auto g21_x_xyyyyyyz = primBuffer.data(g21off + 135 * idx + 29);

                auto g21_x_xyyyyyzz = primBuffer.data(g21off + 135 * idx + 30);

                auto g21_x_xyyyyzzz = primBuffer.data(g21off + 135 * idx + 31);

                auto g21_x_xyyyzzzz = primBuffer.data(g21off + 135 * idx + 32);

                auto g21_x_xyyzzzzz = primBuffer.data(g21off + 135 * idx + 33);

                auto g21_x_xyzzzzzz = primBuffer.data(g21off + 135 * idx + 34);

                auto g21_x_xzzzzzzz = primBuffer.data(g21off + 135 * idx + 35);

                auto g21_x_yyyyyyyy = primBuffer.data(g21off + 135 * idx + 36);

                auto g21_x_yyyyyyyz = primBuffer.data(g21off + 135 * idx + 37);

                auto g21_x_yyyyyyzz = primBuffer.data(g21off + 135 * idx + 38);

                auto g21_x_yyyyyzzz = primBuffer.data(g21off + 135 * idx + 39);

                auto g21_x_yyyyzzzz = primBuffer.data(g21off + 135 * idx + 40);

                auto g21_x_yyyzzzzz = primBuffer.data(g21off + 135 * idx + 41);

                auto g21_x_yyzzzzzz = primBuffer.data(g21off + 135 * idx + 42);

                auto g21_x_yzzzzzzz = primBuffer.data(g21off + 135 * idx + 43);

                auto g21_x_zzzzzzzz = primBuffer.data(g21off + 135 * idx + 44);

                auto g21_y_xxxxxxxx = primBuffer.data(g21off + 135 * idx + 45);

                auto g21_y_xxxxxxxy = primBuffer.data(g21off + 135 * idx + 46);

                auto g21_y_xxxxxxxz = primBuffer.data(g21off + 135 * idx + 47);

                auto g21_y_xxxxxxyy = primBuffer.data(g21off + 135 * idx + 48);

                auto g21_y_xxxxxxyz = primBuffer.data(g21off + 135 * idx + 49);

                auto g21_y_xxxxxxzz = primBuffer.data(g21off + 135 * idx + 50);

                auto g21_y_xxxxxyyy = primBuffer.data(g21off + 135 * idx + 51);

                auto g21_y_xxxxxyyz = primBuffer.data(g21off + 135 * idx + 52);

                auto g21_y_xxxxxyzz = primBuffer.data(g21off + 135 * idx + 53);

                auto g21_y_xxxxxzzz = primBuffer.data(g21off + 135 * idx + 54);

                auto g21_y_xxxxyyyy = primBuffer.data(g21off + 135 * idx + 55);

                auto g21_y_xxxxyyyz = primBuffer.data(g21off + 135 * idx + 56);

                auto g21_y_xxxxyyzz = primBuffer.data(g21off + 135 * idx + 57);

                auto g21_y_xxxxyzzz = primBuffer.data(g21off + 135 * idx + 58);

                auto g21_y_xxxxzzzz = primBuffer.data(g21off + 135 * idx + 59);

                auto g21_y_xxxyyyyy = primBuffer.data(g21off + 135 * idx + 60);

                auto g21_y_xxxyyyyz = primBuffer.data(g21off + 135 * idx + 61);

                auto g21_y_xxxyyyzz = primBuffer.data(g21off + 135 * idx + 62);

                auto g21_y_xxxyyzzz = primBuffer.data(g21off + 135 * idx + 63);

                auto g21_y_xxxyzzzz = primBuffer.data(g21off + 135 * idx + 64);

                auto g21_y_xxxzzzzz = primBuffer.data(g21off + 135 * idx + 65);

                auto g21_y_xxyyyyyy = primBuffer.data(g21off + 135 * idx + 66);

                auto g21_y_xxyyyyyz = primBuffer.data(g21off + 135 * idx + 67);

                auto g21_y_xxyyyyzz = primBuffer.data(g21off + 135 * idx + 68);

                auto g21_y_xxyyyzzz = primBuffer.data(g21off + 135 * idx + 69);

                auto g21_y_xxyyzzzz = primBuffer.data(g21off + 135 * idx + 70);

                auto g21_y_xxyzzzzz = primBuffer.data(g21off + 135 * idx + 71);

                auto g21_y_xxzzzzzz = primBuffer.data(g21off + 135 * idx + 72);

                auto g21_y_xyyyyyyy = primBuffer.data(g21off + 135 * idx + 73);

                auto g21_y_xyyyyyyz = primBuffer.data(g21off + 135 * idx + 74);

                auto g21_y_xyyyyyzz = primBuffer.data(g21off + 135 * idx + 75);

                auto g21_y_xyyyyzzz = primBuffer.data(g21off + 135 * idx + 76);

                auto g21_y_xyyyzzzz = primBuffer.data(g21off + 135 * idx + 77);

                auto g21_y_xyyzzzzz = primBuffer.data(g21off + 135 * idx + 78);

                auto g21_y_xyzzzzzz = primBuffer.data(g21off + 135 * idx + 79);

                auto g21_y_xzzzzzzz = primBuffer.data(g21off + 135 * idx + 80);

                auto g21_y_yyyyyyyy = primBuffer.data(g21off + 135 * idx + 81);

                auto g21_y_yyyyyyyz = primBuffer.data(g21off + 135 * idx + 82);

                auto g21_y_yyyyyyzz = primBuffer.data(g21off + 135 * idx + 83);

                auto g21_y_yyyyyzzz = primBuffer.data(g21off + 135 * idx + 84);

                auto g21_y_yyyyzzzz = primBuffer.data(g21off + 135 * idx + 85);

                auto g21_y_yyyzzzzz = primBuffer.data(g21off + 135 * idx + 86);

                auto g21_y_yyzzzzzz = primBuffer.data(g21off + 135 * idx + 87);

                auto g21_y_yzzzzzzz = primBuffer.data(g21off + 135 * idx + 88);

                auto g21_y_zzzzzzzz = primBuffer.data(g21off + 135 * idx + 89);

                auto g21_z_xxxxxxxx = primBuffer.data(g21off + 135 * idx + 90);

                auto g21_z_xxxxxxxy = primBuffer.data(g21off + 135 * idx + 91);

                auto g21_z_xxxxxxxz = primBuffer.data(g21off + 135 * idx + 92);

                auto g21_z_xxxxxxyy = primBuffer.data(g21off + 135 * idx + 93);

                auto g21_z_xxxxxxyz = primBuffer.data(g21off + 135 * idx + 94);

                auto g21_z_xxxxxxzz = primBuffer.data(g21off + 135 * idx + 95);

                auto g21_z_xxxxxyyy = primBuffer.data(g21off + 135 * idx + 96);

                auto g21_z_xxxxxyyz = primBuffer.data(g21off + 135 * idx + 97);

                auto g21_z_xxxxxyzz = primBuffer.data(g21off + 135 * idx + 98);

                auto g21_z_xxxxxzzz = primBuffer.data(g21off + 135 * idx + 99);

                auto g21_z_xxxxyyyy = primBuffer.data(g21off + 135 * idx + 100);

                auto g21_z_xxxxyyyz = primBuffer.data(g21off + 135 * idx + 101);

                auto g21_z_xxxxyyzz = primBuffer.data(g21off + 135 * idx + 102);

                auto g21_z_xxxxyzzz = primBuffer.data(g21off + 135 * idx + 103);

                auto g21_z_xxxxzzzz = primBuffer.data(g21off + 135 * idx + 104);

                auto g21_z_xxxyyyyy = primBuffer.data(g21off + 135 * idx + 105);

                auto g21_z_xxxyyyyz = primBuffer.data(g21off + 135 * idx + 106);

                auto g21_z_xxxyyyzz = primBuffer.data(g21off + 135 * idx + 107);

                auto g21_z_xxxyyzzz = primBuffer.data(g21off + 135 * idx + 108);

                auto g21_z_xxxyzzzz = primBuffer.data(g21off + 135 * idx + 109);

                auto g21_z_xxxzzzzz = primBuffer.data(g21off + 135 * idx + 110);

                auto g21_z_xxyyyyyy = primBuffer.data(g21off + 135 * idx + 111);

                auto g21_z_xxyyyyyz = primBuffer.data(g21off + 135 * idx + 112);

                auto g21_z_xxyyyyzz = primBuffer.data(g21off + 135 * idx + 113);

                auto g21_z_xxyyyzzz = primBuffer.data(g21off + 135 * idx + 114);

                auto g21_z_xxyyzzzz = primBuffer.data(g21off + 135 * idx + 115);

                auto g21_z_xxyzzzzz = primBuffer.data(g21off + 135 * idx + 116);

                auto g21_z_xxzzzzzz = primBuffer.data(g21off + 135 * idx + 117);

                auto g21_z_xyyyyyyy = primBuffer.data(g21off + 135 * idx + 118);

                auto g21_z_xyyyyyyz = primBuffer.data(g21off + 135 * idx + 119);

                auto g21_z_xyyyyyzz = primBuffer.data(g21off + 135 * idx + 120);

                auto g21_z_xyyyyzzz = primBuffer.data(g21off + 135 * idx + 121);

                auto g21_z_xyyyzzzz = primBuffer.data(g21off + 135 * idx + 122);

                auto g21_z_xyyzzzzz = primBuffer.data(g21off + 135 * idx + 123);

                auto g21_z_xyzzzzzz = primBuffer.data(g21off + 135 * idx + 124);

                auto g21_z_xzzzzzzz = primBuffer.data(g21off + 135 * idx + 125);

                auto g21_z_yyyyyyyy = primBuffer.data(g21off + 135 * idx + 126);

                auto g21_z_yyyyyyyz = primBuffer.data(g21off + 135 * idx + 127);

                auto g21_z_yyyyyyzz = primBuffer.data(g21off + 135 * idx + 128);

                auto g21_z_yyyyyzzz = primBuffer.data(g21off + 135 * idx + 129);

                auto g21_z_yyyyzzzz = primBuffer.data(g21off + 135 * idx + 130);

                auto g21_z_yyyzzzzz = primBuffer.data(g21off + 135 * idx + 131);

                auto g21_z_yyzzzzzz = primBuffer.data(g21off + 135 * idx + 132);

                auto g21_z_yzzzzzzz = primBuffer.data(g21off + 135 * idx + 133);

                auto g21_z_zzzzzzzz = primBuffer.data(g21off + 135 * idx + 134);

                // set up pointers to (D|g(r,r')|SL)^(m+1) integrals

                auto g11_xx_xxxxxxxx = primBuffer.data(g11off + 270 * idx);

                auto g11_xx_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 1);

                auto g11_xx_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 2);

                auto g11_xx_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 3);

                auto g11_xx_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 4);

                auto g11_xx_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 5);

                auto g11_xx_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 6);

                auto g11_xx_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 7);

                auto g11_xx_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 8);

                auto g11_xx_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 9);

                auto g11_xx_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 10);

                auto g11_xx_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 11);

                auto g11_xx_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 12);

                auto g11_xx_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 13);

                auto g11_xx_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 14);

                auto g11_xx_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 15);

                auto g11_xx_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 16);

                auto g11_xx_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 17);

                auto g11_xx_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 18);

                auto g11_xx_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 19);

                auto g11_xx_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 20);

                auto g11_xx_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 21);

                auto g11_xx_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 22);

                auto g11_xx_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 23);

                auto g11_xx_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 24);

                auto g11_xx_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 25);

                auto g11_xx_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 26);

                auto g11_xx_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 27);

                auto g11_xx_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 28);

                auto g11_xx_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 29);

                auto g11_xx_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 30);

                auto g11_xx_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 31);

                auto g11_xx_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 32);

                auto g11_xx_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 33);

                auto g11_xx_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 34);

                auto g11_xx_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 35);

                auto g11_xx_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 36);

                auto g11_xx_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 37);

                auto g11_xx_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 38);

                auto g11_xx_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 39);

                auto g11_xx_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 40);

                auto g11_xx_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 41);

                auto g11_xx_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 42);

                auto g11_xx_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 43);

                auto g11_xx_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 44);

                auto g11_xy_xxxxxxxx = primBuffer.data(g11off + 270 * idx + 45);

                auto g11_xy_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 46);

                auto g11_xy_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 47);

                auto g11_xy_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 48);

                auto g11_xy_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 49);

                auto g11_xy_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 50);

                auto g11_xy_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 51);

                auto g11_xy_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 52);

                auto g11_xy_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 53);

                auto g11_xy_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 54);

                auto g11_xy_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 55);

                auto g11_xy_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 56);

                auto g11_xy_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 57);

                auto g11_xy_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 58);

                auto g11_xy_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 59);

                auto g11_xy_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 60);

                auto g11_xy_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 61);

                auto g11_xy_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 62);

                auto g11_xy_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 63);

                auto g11_xy_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 64);

                auto g11_xy_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 65);

                auto g11_xy_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 66);

                auto g11_xy_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 67);

                auto g11_xy_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 68);

                auto g11_xy_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 69);

                auto g11_xy_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 70);

                auto g11_xy_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 71);

                auto g11_xy_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 72);

                auto g11_xy_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 73);

                auto g11_xy_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 74);

                auto g11_xy_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 75);

                auto g11_xy_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 76);

                auto g11_xy_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 77);

                auto g11_xy_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 78);

                auto g11_xy_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 79);

                auto g11_xy_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 80);

                auto g11_xy_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 81);

                auto g11_xy_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 82);

                auto g11_xy_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 83);

                auto g11_xy_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 84);

                auto g11_xy_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 85);

                auto g11_xy_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 86);

                auto g11_xy_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 87);

                auto g11_xy_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 88);

                auto g11_xy_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 89);

                auto g11_xz_xxxxxxxx = primBuffer.data(g11off + 270 * idx + 90);

                auto g11_xz_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 91);

                auto g11_xz_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 92);

                auto g11_xz_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 93);

                auto g11_xz_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 94);

                auto g11_xz_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 95);

                auto g11_xz_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 96);

                auto g11_xz_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 97);

                auto g11_xz_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 98);

                auto g11_xz_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 99);

                auto g11_xz_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 100);

                auto g11_xz_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 101);

                auto g11_xz_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 102);

                auto g11_xz_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 103);

                auto g11_xz_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 104);

                auto g11_xz_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 105);

                auto g11_xz_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 106);

                auto g11_xz_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 107);

                auto g11_xz_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 108);

                auto g11_xz_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 109);

                auto g11_xz_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 110);

                auto g11_xz_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 111);

                auto g11_xz_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 112);

                auto g11_xz_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 113);

                auto g11_xz_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 114);

                auto g11_xz_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 115);

                auto g11_xz_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 116);

                auto g11_xz_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 117);

                auto g11_xz_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 118);

                auto g11_xz_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 119);

                auto g11_xz_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 120);

                auto g11_xz_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 121);

                auto g11_xz_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 122);

                auto g11_xz_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 123);

                auto g11_xz_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 124);

                auto g11_xz_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 125);

                auto g11_xz_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 126);

                auto g11_xz_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 127);

                auto g11_xz_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 128);

                auto g11_xz_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 129);

                auto g11_xz_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 130);

                auto g11_xz_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 131);

                auto g11_xz_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 132);

                auto g11_xz_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 133);

                auto g11_xz_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 134);

                auto g11_yy_xxxxxxxx = primBuffer.data(g11off + 270 * idx + 135);

                auto g11_yy_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 136);

                auto g11_yy_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 137);

                auto g11_yy_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 138);

                auto g11_yy_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 139);

                auto g11_yy_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 140);

                auto g11_yy_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 141);

                auto g11_yy_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 142);

                auto g11_yy_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 143);

                auto g11_yy_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 144);

                auto g11_yy_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 145);

                auto g11_yy_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 146);

                auto g11_yy_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 147);

                auto g11_yy_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 148);

                auto g11_yy_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 149);

                auto g11_yy_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 150);

                auto g11_yy_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 151);

                auto g11_yy_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 152);

                auto g11_yy_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 153);

                auto g11_yy_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 154);

                auto g11_yy_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 155);

                auto g11_yy_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 156);

                auto g11_yy_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 157);

                auto g11_yy_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 158);

                auto g11_yy_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 159);

                auto g11_yy_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 160);

                auto g11_yy_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 161);

                auto g11_yy_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 162);

                auto g11_yy_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 163);

                auto g11_yy_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 164);

                auto g11_yy_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 165);

                auto g11_yy_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 166);

                auto g11_yy_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 167);

                auto g11_yy_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 168);

                auto g11_yy_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 169);

                auto g11_yy_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 170);

                auto g11_yy_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 171);

                auto g11_yy_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 172);

                auto g11_yy_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 173);

                auto g11_yy_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 174);

                auto g11_yy_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 175);

                auto g11_yy_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 176);

                auto g11_yy_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 177);

                auto g11_yy_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 178);

                auto g11_yy_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 179);

                auto g11_yz_xxxxxxxx = primBuffer.data(g11off + 270 * idx + 180);

                auto g11_yz_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 181);

                auto g11_yz_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 182);

                auto g11_yz_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 183);

                auto g11_yz_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 184);

                auto g11_yz_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 185);

                auto g11_yz_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 186);

                auto g11_yz_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 187);

                auto g11_yz_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 188);

                auto g11_yz_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 189);

                auto g11_yz_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 190);

                auto g11_yz_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 191);

                auto g11_yz_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 192);

                auto g11_yz_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 193);

                auto g11_yz_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 194);

                auto g11_yz_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 195);

                auto g11_yz_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 196);

                auto g11_yz_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 197);

                auto g11_yz_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 198);

                auto g11_yz_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 199);

                auto g11_yz_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 200);

                auto g11_yz_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 201);

                auto g11_yz_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 202);

                auto g11_yz_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 203);

                auto g11_yz_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 204);

                auto g11_yz_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 205);

                auto g11_yz_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 206);

                auto g11_yz_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 207);

                auto g11_yz_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 208);

                auto g11_yz_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 209);

                auto g11_yz_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 210);

                auto g11_yz_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 211);

                auto g11_yz_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 212);

                auto g11_yz_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 213);

                auto g11_yz_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 214);

                auto g11_yz_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 215);

                auto g11_yz_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 216);

                auto g11_yz_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 217);

                auto g11_yz_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 218);

                auto g11_yz_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 219);

                auto g11_yz_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 220);

                auto g11_yz_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 221);

                auto g11_yz_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 222);

                auto g11_yz_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 223);

                auto g11_yz_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 224);

                auto g11_zz_xxxxxxxx = primBuffer.data(g11off + 270 * idx + 225);

                auto g11_zz_xxxxxxxy = primBuffer.data(g11off + 270 * idx + 226);

                auto g11_zz_xxxxxxxz = primBuffer.data(g11off + 270 * idx + 227);

                auto g11_zz_xxxxxxyy = primBuffer.data(g11off + 270 * idx + 228);

                auto g11_zz_xxxxxxyz = primBuffer.data(g11off + 270 * idx + 229);

                auto g11_zz_xxxxxxzz = primBuffer.data(g11off + 270 * idx + 230);

                auto g11_zz_xxxxxyyy = primBuffer.data(g11off + 270 * idx + 231);

                auto g11_zz_xxxxxyyz = primBuffer.data(g11off + 270 * idx + 232);

                auto g11_zz_xxxxxyzz = primBuffer.data(g11off + 270 * idx + 233);

                auto g11_zz_xxxxxzzz = primBuffer.data(g11off + 270 * idx + 234);

                auto g11_zz_xxxxyyyy = primBuffer.data(g11off + 270 * idx + 235);

                auto g11_zz_xxxxyyyz = primBuffer.data(g11off + 270 * idx + 236);

                auto g11_zz_xxxxyyzz = primBuffer.data(g11off + 270 * idx + 237);

                auto g11_zz_xxxxyzzz = primBuffer.data(g11off + 270 * idx + 238);

                auto g11_zz_xxxxzzzz = primBuffer.data(g11off + 270 * idx + 239);

                auto g11_zz_xxxyyyyy = primBuffer.data(g11off + 270 * idx + 240);

                auto g11_zz_xxxyyyyz = primBuffer.data(g11off + 270 * idx + 241);

                auto g11_zz_xxxyyyzz = primBuffer.data(g11off + 270 * idx + 242);

                auto g11_zz_xxxyyzzz = primBuffer.data(g11off + 270 * idx + 243);

                auto g11_zz_xxxyzzzz = primBuffer.data(g11off + 270 * idx + 244);

                auto g11_zz_xxxzzzzz = primBuffer.data(g11off + 270 * idx + 245);

                auto g11_zz_xxyyyyyy = primBuffer.data(g11off + 270 * idx + 246);

                auto g11_zz_xxyyyyyz = primBuffer.data(g11off + 270 * idx + 247);

                auto g11_zz_xxyyyyzz = primBuffer.data(g11off + 270 * idx + 248);

                auto g11_zz_xxyyyzzz = primBuffer.data(g11off + 270 * idx + 249);

                auto g11_zz_xxyyzzzz = primBuffer.data(g11off + 270 * idx + 250);

                auto g11_zz_xxyzzzzz = primBuffer.data(g11off + 270 * idx + 251);

                auto g11_zz_xxzzzzzz = primBuffer.data(g11off + 270 * idx + 252);

                auto g11_zz_xyyyyyyy = primBuffer.data(g11off + 270 * idx + 253);

                auto g11_zz_xyyyyyyz = primBuffer.data(g11off + 270 * idx + 254);

                auto g11_zz_xyyyyyzz = primBuffer.data(g11off + 270 * idx + 255);

                auto g11_zz_xyyyyzzz = primBuffer.data(g11off + 270 * idx + 256);

                auto g11_zz_xyyyzzzz = primBuffer.data(g11off + 270 * idx + 257);

                auto g11_zz_xyyzzzzz = primBuffer.data(g11off + 270 * idx + 258);

                auto g11_zz_xyzzzzzz = primBuffer.data(g11off + 270 * idx + 259);

                auto g11_zz_xzzzzzzz = primBuffer.data(g11off + 270 * idx + 260);

                auto g11_zz_yyyyyyyy = primBuffer.data(g11off + 270 * idx + 261);

                auto g11_zz_yyyyyyyz = primBuffer.data(g11off + 270 * idx + 262);

                auto g11_zz_yyyyyyzz = primBuffer.data(g11off + 270 * idx + 263);

                auto g11_zz_yyyyyzzz = primBuffer.data(g11off + 270 * idx + 264);

                auto g11_zz_yyyyzzzz = primBuffer.data(g11off + 270 * idx + 265);

                auto g11_zz_yyyzzzzz = primBuffer.data(g11off + 270 * idx + 266);

                auto g11_zz_yyzzzzzz = primBuffer.data(g11off + 270 * idx + 267);

                auto g11_zz_yzzzzzzz = primBuffer.data(g11off + 270 * idx + 268);

                auto g11_zz_zzzzzzzz = primBuffer.data(g11off + 270 * idx + 269);

                // set up pointers to (F|g(r,r')|SL)^(m) integrals

                auto g_xxx_xxxxxxxx = primBuffer.data(goff + 450 * idx);

                auto g_xxx_xxxxxxxy = primBuffer.data(goff + 450 * idx + 1);

                auto g_xxx_xxxxxxxz = primBuffer.data(goff + 450 * idx + 2);

                auto g_xxx_xxxxxxyy = primBuffer.data(goff + 450 * idx + 3);

                auto g_xxx_xxxxxxyz = primBuffer.data(goff + 450 * idx + 4);

                auto g_xxx_xxxxxxzz = primBuffer.data(goff + 450 * idx + 5);

                auto g_xxx_xxxxxyyy = primBuffer.data(goff + 450 * idx + 6);

                auto g_xxx_xxxxxyyz = primBuffer.data(goff + 450 * idx + 7);

                auto g_xxx_xxxxxyzz = primBuffer.data(goff + 450 * idx + 8);

                auto g_xxx_xxxxxzzz = primBuffer.data(goff + 450 * idx + 9);

                auto g_xxx_xxxxyyyy = primBuffer.data(goff + 450 * idx + 10);

                auto g_xxx_xxxxyyyz = primBuffer.data(goff + 450 * idx + 11);

                auto g_xxx_xxxxyyzz = primBuffer.data(goff + 450 * idx + 12);

                auto g_xxx_xxxxyzzz = primBuffer.data(goff + 450 * idx + 13);

                auto g_xxx_xxxxzzzz = primBuffer.data(goff + 450 * idx + 14);

                auto g_xxx_xxxyyyyy = primBuffer.data(goff + 450 * idx + 15);

                auto g_xxx_xxxyyyyz = primBuffer.data(goff + 450 * idx + 16);

                auto g_xxx_xxxyyyzz = primBuffer.data(goff + 450 * idx + 17);

                auto g_xxx_xxxyyzzz = primBuffer.data(goff + 450 * idx + 18);

                auto g_xxx_xxxyzzzz = primBuffer.data(goff + 450 * idx + 19);

                auto g_xxx_xxxzzzzz = primBuffer.data(goff + 450 * idx + 20);

                auto g_xxx_xxyyyyyy = primBuffer.data(goff + 450 * idx + 21);

                auto g_xxx_xxyyyyyz = primBuffer.data(goff + 450 * idx + 22);

                auto g_xxx_xxyyyyzz = primBuffer.data(goff + 450 * idx + 23);

                auto g_xxx_xxyyyzzz = primBuffer.data(goff + 450 * idx + 24);

                auto g_xxx_xxyyzzzz = primBuffer.data(goff + 450 * idx + 25);

                auto g_xxx_xxyzzzzz = primBuffer.data(goff + 450 * idx + 26);

                auto g_xxx_xxzzzzzz = primBuffer.data(goff + 450 * idx + 27);

                auto g_xxx_xyyyyyyy = primBuffer.data(goff + 450 * idx + 28);

                auto g_xxx_xyyyyyyz = primBuffer.data(goff + 450 * idx + 29);

                auto g_xxx_xyyyyyzz = primBuffer.data(goff + 450 * idx + 30);

                auto g_xxx_xyyyyzzz = primBuffer.data(goff + 450 * idx + 31);

                auto g_xxx_xyyyzzzz = primBuffer.data(goff + 450 * idx + 32);

                auto g_xxx_xyyzzzzz = primBuffer.data(goff + 450 * idx + 33);

                auto g_xxx_xyzzzzzz = primBuffer.data(goff + 450 * idx + 34);

                auto g_xxx_xzzzzzzz = primBuffer.data(goff + 450 * idx + 35);

                auto g_xxx_yyyyyyyy = primBuffer.data(goff + 450 * idx + 36);

                auto g_xxx_yyyyyyyz = primBuffer.data(goff + 450 * idx + 37);

                auto g_xxx_yyyyyyzz = primBuffer.data(goff + 450 * idx + 38);

                auto g_xxx_yyyyyzzz = primBuffer.data(goff + 450 * idx + 39);

                auto g_xxx_yyyyzzzz = primBuffer.data(goff + 450 * idx + 40);

                auto g_xxx_yyyzzzzz = primBuffer.data(goff + 450 * idx + 41);

                auto g_xxx_yyzzzzzz = primBuffer.data(goff + 450 * idx + 42);

                auto g_xxx_yzzzzzzz = primBuffer.data(goff + 450 * idx + 43);

                auto g_xxx_zzzzzzzz = primBuffer.data(goff + 450 * idx + 44);

                auto g_xxy_xxxxxxxx = primBuffer.data(goff + 450 * idx + 45);

                auto g_xxy_xxxxxxxy = primBuffer.data(goff + 450 * idx + 46);

                auto g_xxy_xxxxxxxz = primBuffer.data(goff + 450 * idx + 47);

                auto g_xxy_xxxxxxyy = primBuffer.data(goff + 450 * idx + 48);

                auto g_xxy_xxxxxxyz = primBuffer.data(goff + 450 * idx + 49);

                auto g_xxy_xxxxxxzz = primBuffer.data(goff + 450 * idx + 50);

                auto g_xxy_xxxxxyyy = primBuffer.data(goff + 450 * idx + 51);

                auto g_xxy_xxxxxyyz = primBuffer.data(goff + 450 * idx + 52);

                auto g_xxy_xxxxxyzz = primBuffer.data(goff + 450 * idx + 53);

                auto g_xxy_xxxxxzzz = primBuffer.data(goff + 450 * idx + 54);

                auto g_xxy_xxxxyyyy = primBuffer.data(goff + 450 * idx + 55);

                auto g_xxy_xxxxyyyz = primBuffer.data(goff + 450 * idx + 56);

                auto g_xxy_xxxxyyzz = primBuffer.data(goff + 450 * idx + 57);

                auto g_xxy_xxxxyzzz = primBuffer.data(goff + 450 * idx + 58);

                auto g_xxy_xxxxzzzz = primBuffer.data(goff + 450 * idx + 59);

                auto g_xxy_xxxyyyyy = primBuffer.data(goff + 450 * idx + 60);

                auto g_xxy_xxxyyyyz = primBuffer.data(goff + 450 * idx + 61);

                auto g_xxy_xxxyyyzz = primBuffer.data(goff + 450 * idx + 62);

                auto g_xxy_xxxyyzzz = primBuffer.data(goff + 450 * idx + 63);

                auto g_xxy_xxxyzzzz = primBuffer.data(goff + 450 * idx + 64);

                auto g_xxy_xxxzzzzz = primBuffer.data(goff + 450 * idx + 65);

                auto g_xxy_xxyyyyyy = primBuffer.data(goff + 450 * idx + 66);

                auto g_xxy_xxyyyyyz = primBuffer.data(goff + 450 * idx + 67);

                auto g_xxy_xxyyyyzz = primBuffer.data(goff + 450 * idx + 68);

                auto g_xxy_xxyyyzzz = primBuffer.data(goff + 450 * idx + 69);

                auto g_xxy_xxyyzzzz = primBuffer.data(goff + 450 * idx + 70);

                auto g_xxy_xxyzzzzz = primBuffer.data(goff + 450 * idx + 71);

                auto g_xxy_xxzzzzzz = primBuffer.data(goff + 450 * idx + 72);

                auto g_xxy_xyyyyyyy = primBuffer.data(goff + 450 * idx + 73);

                auto g_xxy_xyyyyyyz = primBuffer.data(goff + 450 * idx + 74);

                auto g_xxy_xyyyyyzz = primBuffer.data(goff + 450 * idx + 75);

                auto g_xxy_xyyyyzzz = primBuffer.data(goff + 450 * idx + 76);

                auto g_xxy_xyyyzzzz = primBuffer.data(goff + 450 * idx + 77);

                auto g_xxy_xyyzzzzz = primBuffer.data(goff + 450 * idx + 78);

                auto g_xxy_xyzzzzzz = primBuffer.data(goff + 450 * idx + 79);

                auto g_xxy_xzzzzzzz = primBuffer.data(goff + 450 * idx + 80);

                auto g_xxy_yyyyyyyy = primBuffer.data(goff + 450 * idx + 81);

                auto g_xxy_yyyyyyyz = primBuffer.data(goff + 450 * idx + 82);

                auto g_xxy_yyyyyyzz = primBuffer.data(goff + 450 * idx + 83);

                auto g_xxy_yyyyyzzz = primBuffer.data(goff + 450 * idx + 84);

                auto g_xxy_yyyyzzzz = primBuffer.data(goff + 450 * idx + 85);

                auto g_xxy_yyyzzzzz = primBuffer.data(goff + 450 * idx + 86);

                auto g_xxy_yyzzzzzz = primBuffer.data(goff + 450 * idx + 87);

                auto g_xxy_yzzzzzzz = primBuffer.data(goff + 450 * idx + 88);

                auto g_xxy_zzzzzzzz = primBuffer.data(goff + 450 * idx + 89);

                auto g_xxz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 90);

                auto g_xxz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 91);

                auto g_xxz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 92);

                auto g_xxz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 93);

                auto g_xxz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 94);

                auto g_xxz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 95);

                auto g_xxz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 96);

                auto g_xxz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 97);

                auto g_xxz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 98);

                auto g_xxz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 99);

                auto g_xxz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 100);

                auto g_xxz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 101);

                auto g_xxz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 102);

                auto g_xxz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 103);

                auto g_xxz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 104);

                auto g_xxz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 105);

                auto g_xxz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 106);

                auto g_xxz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 107);

                auto g_xxz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 108);

                auto g_xxz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 109);

                auto g_xxz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 110);

                auto g_xxz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 111);

                auto g_xxz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 112);

                auto g_xxz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 113);

                auto g_xxz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 114);

                auto g_xxz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 115);

                auto g_xxz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 116);

                auto g_xxz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 117);

                auto g_xxz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 118);

                auto g_xxz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 119);

                auto g_xxz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 120);

                auto g_xxz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 121);

                auto g_xxz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 122);

                auto g_xxz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 123);

                auto g_xxz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 124);

                auto g_xxz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 125);

                auto g_xxz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 126);

                auto g_xxz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 127);

                auto g_xxz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 128);

                auto g_xxz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 129);

                auto g_xxz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 130);

                auto g_xxz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 131);

                auto g_xxz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 132);

                auto g_xxz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 133);

                auto g_xxz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 134);

                auto g_xyy_xxxxxxxx = primBuffer.data(goff + 450 * idx + 135);

                auto g_xyy_xxxxxxxy = primBuffer.data(goff + 450 * idx + 136);

                auto g_xyy_xxxxxxxz = primBuffer.data(goff + 450 * idx + 137);

                auto g_xyy_xxxxxxyy = primBuffer.data(goff + 450 * idx + 138);

                auto g_xyy_xxxxxxyz = primBuffer.data(goff + 450 * idx + 139);

                auto g_xyy_xxxxxxzz = primBuffer.data(goff + 450 * idx + 140);

                auto g_xyy_xxxxxyyy = primBuffer.data(goff + 450 * idx + 141);

                auto g_xyy_xxxxxyyz = primBuffer.data(goff + 450 * idx + 142);

                auto g_xyy_xxxxxyzz = primBuffer.data(goff + 450 * idx + 143);

                auto g_xyy_xxxxxzzz = primBuffer.data(goff + 450 * idx + 144);

                auto g_xyy_xxxxyyyy = primBuffer.data(goff + 450 * idx + 145);

                auto g_xyy_xxxxyyyz = primBuffer.data(goff + 450 * idx + 146);

                auto g_xyy_xxxxyyzz = primBuffer.data(goff + 450 * idx + 147);

                auto g_xyy_xxxxyzzz = primBuffer.data(goff + 450 * idx + 148);

                auto g_xyy_xxxxzzzz = primBuffer.data(goff + 450 * idx + 149);

                auto g_xyy_xxxyyyyy = primBuffer.data(goff + 450 * idx + 150);

                auto g_xyy_xxxyyyyz = primBuffer.data(goff + 450 * idx + 151);

                auto g_xyy_xxxyyyzz = primBuffer.data(goff + 450 * idx + 152);

                auto g_xyy_xxxyyzzz = primBuffer.data(goff + 450 * idx + 153);

                auto g_xyy_xxxyzzzz = primBuffer.data(goff + 450 * idx + 154);

                auto g_xyy_xxxzzzzz = primBuffer.data(goff + 450 * idx + 155);

                auto g_xyy_xxyyyyyy = primBuffer.data(goff + 450 * idx + 156);

                auto g_xyy_xxyyyyyz = primBuffer.data(goff + 450 * idx + 157);

                auto g_xyy_xxyyyyzz = primBuffer.data(goff + 450 * idx + 158);

                auto g_xyy_xxyyyzzz = primBuffer.data(goff + 450 * idx + 159);

                auto g_xyy_xxyyzzzz = primBuffer.data(goff + 450 * idx + 160);

                auto g_xyy_xxyzzzzz = primBuffer.data(goff + 450 * idx + 161);

                auto g_xyy_xxzzzzzz = primBuffer.data(goff + 450 * idx + 162);

                auto g_xyy_xyyyyyyy = primBuffer.data(goff + 450 * idx + 163);

                auto g_xyy_xyyyyyyz = primBuffer.data(goff + 450 * idx + 164);

                auto g_xyy_xyyyyyzz = primBuffer.data(goff + 450 * idx + 165);

                auto g_xyy_xyyyyzzz = primBuffer.data(goff + 450 * idx + 166);

                auto g_xyy_xyyyzzzz = primBuffer.data(goff + 450 * idx + 167);

                auto g_xyy_xyyzzzzz = primBuffer.data(goff + 450 * idx + 168);

                auto g_xyy_xyzzzzzz = primBuffer.data(goff + 450 * idx + 169);

                auto g_xyy_xzzzzzzz = primBuffer.data(goff + 450 * idx + 170);

                auto g_xyy_yyyyyyyy = primBuffer.data(goff + 450 * idx + 171);

                auto g_xyy_yyyyyyyz = primBuffer.data(goff + 450 * idx + 172);

                auto g_xyy_yyyyyyzz = primBuffer.data(goff + 450 * idx + 173);

                auto g_xyy_yyyyyzzz = primBuffer.data(goff + 450 * idx + 174);

                auto g_xyy_yyyyzzzz = primBuffer.data(goff + 450 * idx + 175);

                auto g_xyy_yyyzzzzz = primBuffer.data(goff + 450 * idx + 176);

                auto g_xyy_yyzzzzzz = primBuffer.data(goff + 450 * idx + 177);

                auto g_xyy_yzzzzzzz = primBuffer.data(goff + 450 * idx + 178);

                auto g_xyy_zzzzzzzz = primBuffer.data(goff + 450 * idx + 179);

                auto g_xyz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 180);

                auto g_xyz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 181);

                auto g_xyz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 182);

                auto g_xyz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 183);

                auto g_xyz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 184);

                auto g_xyz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 185);

                auto g_xyz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 186);

                auto g_xyz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 187);

                auto g_xyz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 188);

                auto g_xyz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 189);

                auto g_xyz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 190);

                auto g_xyz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 191);

                auto g_xyz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 192);

                auto g_xyz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 193);

                auto g_xyz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 194);

                auto g_xyz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 195);

                auto g_xyz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 196);

                auto g_xyz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 197);

                auto g_xyz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 198);

                auto g_xyz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 199);

                auto g_xyz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 200);

                auto g_xyz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 201);

                auto g_xyz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 202);

                auto g_xyz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 203);

                auto g_xyz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 204);

                auto g_xyz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 205);

                auto g_xyz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 206);

                auto g_xyz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 207);

                auto g_xyz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 208);

                auto g_xyz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 209);

                auto g_xyz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 210);

                auto g_xyz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 211);

                auto g_xyz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 212);

                auto g_xyz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 213);

                auto g_xyz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 214);

                auto g_xyz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 215);

                auto g_xyz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 216);

                auto g_xyz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 217);

                auto g_xyz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 218);

                auto g_xyz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 219);

                auto g_xyz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 220);

                auto g_xyz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 221);

                auto g_xyz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 222);

                auto g_xyz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 223);

                auto g_xyz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 224);

                auto g_xzz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 225);

                auto g_xzz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 226);

                auto g_xzz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 227);

                auto g_xzz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 228);

                auto g_xzz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 229);

                auto g_xzz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 230);

                auto g_xzz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 231);

                auto g_xzz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 232);

                auto g_xzz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 233);

                auto g_xzz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 234);

                auto g_xzz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 235);

                auto g_xzz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 236);

                auto g_xzz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 237);

                auto g_xzz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 238);

                auto g_xzz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 239);

                auto g_xzz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 240);

                auto g_xzz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 241);

                auto g_xzz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 242);

                auto g_xzz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 243);

                auto g_xzz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 244);

                auto g_xzz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 245);

                auto g_xzz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 246);

                auto g_xzz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 247);

                auto g_xzz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 248);

                auto g_xzz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 249);

                auto g_xzz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 250);

                auto g_xzz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 251);

                auto g_xzz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 252);

                auto g_xzz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 253);

                auto g_xzz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 254);

                auto g_xzz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 255);

                auto g_xzz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 256);

                auto g_xzz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 257);

                auto g_xzz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 258);

                auto g_xzz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 259);

                auto g_xzz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 260);

                auto g_xzz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 261);

                auto g_xzz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 262);

                auto g_xzz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 263);

                auto g_xzz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 264);

                auto g_xzz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 265);

                auto g_xzz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 266);

                auto g_xzz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 267);

                auto g_xzz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 268);

                auto g_xzz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 269);

                auto g_yyy_xxxxxxxx = primBuffer.data(goff + 450 * idx + 270);

                auto g_yyy_xxxxxxxy = primBuffer.data(goff + 450 * idx + 271);

                auto g_yyy_xxxxxxxz = primBuffer.data(goff + 450 * idx + 272);

                auto g_yyy_xxxxxxyy = primBuffer.data(goff + 450 * idx + 273);

                auto g_yyy_xxxxxxyz = primBuffer.data(goff + 450 * idx + 274);

                auto g_yyy_xxxxxxzz = primBuffer.data(goff + 450 * idx + 275);

                auto g_yyy_xxxxxyyy = primBuffer.data(goff + 450 * idx + 276);

                auto g_yyy_xxxxxyyz = primBuffer.data(goff + 450 * idx + 277);

                auto g_yyy_xxxxxyzz = primBuffer.data(goff + 450 * idx + 278);

                auto g_yyy_xxxxxzzz = primBuffer.data(goff + 450 * idx + 279);

                auto g_yyy_xxxxyyyy = primBuffer.data(goff + 450 * idx + 280);

                auto g_yyy_xxxxyyyz = primBuffer.data(goff + 450 * idx + 281);

                auto g_yyy_xxxxyyzz = primBuffer.data(goff + 450 * idx + 282);

                auto g_yyy_xxxxyzzz = primBuffer.data(goff + 450 * idx + 283);

                auto g_yyy_xxxxzzzz = primBuffer.data(goff + 450 * idx + 284);

                auto g_yyy_xxxyyyyy = primBuffer.data(goff + 450 * idx + 285);

                auto g_yyy_xxxyyyyz = primBuffer.data(goff + 450 * idx + 286);

                auto g_yyy_xxxyyyzz = primBuffer.data(goff + 450 * idx + 287);

                auto g_yyy_xxxyyzzz = primBuffer.data(goff + 450 * idx + 288);

                auto g_yyy_xxxyzzzz = primBuffer.data(goff + 450 * idx + 289);

                auto g_yyy_xxxzzzzz = primBuffer.data(goff + 450 * idx + 290);

                auto g_yyy_xxyyyyyy = primBuffer.data(goff + 450 * idx + 291);

                auto g_yyy_xxyyyyyz = primBuffer.data(goff + 450 * idx + 292);

                auto g_yyy_xxyyyyzz = primBuffer.data(goff + 450 * idx + 293);

                auto g_yyy_xxyyyzzz = primBuffer.data(goff + 450 * idx + 294);

                auto g_yyy_xxyyzzzz = primBuffer.data(goff + 450 * idx + 295);

                auto g_yyy_xxyzzzzz = primBuffer.data(goff + 450 * idx + 296);

                auto g_yyy_xxzzzzzz = primBuffer.data(goff + 450 * idx + 297);

                auto g_yyy_xyyyyyyy = primBuffer.data(goff + 450 * idx + 298);

                auto g_yyy_xyyyyyyz = primBuffer.data(goff + 450 * idx + 299);

                auto g_yyy_xyyyyyzz = primBuffer.data(goff + 450 * idx + 300);

                auto g_yyy_xyyyyzzz = primBuffer.data(goff + 450 * idx + 301);

                auto g_yyy_xyyyzzzz = primBuffer.data(goff + 450 * idx + 302);

                auto g_yyy_xyyzzzzz = primBuffer.data(goff + 450 * idx + 303);

                auto g_yyy_xyzzzzzz = primBuffer.data(goff + 450 * idx + 304);

                auto g_yyy_xzzzzzzz = primBuffer.data(goff + 450 * idx + 305);

                auto g_yyy_yyyyyyyy = primBuffer.data(goff + 450 * idx + 306);

                auto g_yyy_yyyyyyyz = primBuffer.data(goff + 450 * idx + 307);

                auto g_yyy_yyyyyyzz = primBuffer.data(goff + 450 * idx + 308);

                auto g_yyy_yyyyyzzz = primBuffer.data(goff + 450 * idx + 309);

                auto g_yyy_yyyyzzzz = primBuffer.data(goff + 450 * idx + 310);

                auto g_yyy_yyyzzzzz = primBuffer.data(goff + 450 * idx + 311);

                auto g_yyy_yyzzzzzz = primBuffer.data(goff + 450 * idx + 312);

                auto g_yyy_yzzzzzzz = primBuffer.data(goff + 450 * idx + 313);

                auto g_yyy_zzzzzzzz = primBuffer.data(goff + 450 * idx + 314);

                auto g_yyz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 315);

                auto g_yyz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 316);

                auto g_yyz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 317);

                auto g_yyz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 318);

                auto g_yyz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 319);

                auto g_yyz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 320);

                auto g_yyz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 321);

                auto g_yyz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 322);

                auto g_yyz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 323);

                auto g_yyz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 324);

                auto g_yyz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 325);

                auto g_yyz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 326);

                auto g_yyz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 327);

                auto g_yyz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 328);

                auto g_yyz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 329);

                auto g_yyz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 330);

                auto g_yyz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 331);

                auto g_yyz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 332);

                auto g_yyz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 333);

                auto g_yyz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 334);

                auto g_yyz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 335);

                auto g_yyz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 336);

                auto g_yyz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 337);

                auto g_yyz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 338);

                auto g_yyz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 339);

                auto g_yyz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 340);

                auto g_yyz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 341);

                auto g_yyz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 342);

                auto g_yyz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 343);

                auto g_yyz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 344);

                auto g_yyz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 345);

                auto g_yyz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 346);

                auto g_yyz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 347);

                auto g_yyz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 348);

                auto g_yyz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 349);

                auto g_yyz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 350);

                auto g_yyz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 351);

                auto g_yyz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 352);

                auto g_yyz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 353);

                auto g_yyz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 354);

                auto g_yyz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 355);

                auto g_yyz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 356);

                auto g_yyz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 357);

                auto g_yyz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 358);

                auto g_yyz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 359);

                auto g_yzz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 360);

                auto g_yzz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 361);

                auto g_yzz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 362);

                auto g_yzz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 363);

                auto g_yzz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 364);

                auto g_yzz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 365);

                auto g_yzz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 366);

                auto g_yzz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 367);

                auto g_yzz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 368);

                auto g_yzz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 369);

                auto g_yzz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 370);

                auto g_yzz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 371);

                auto g_yzz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 372);

                auto g_yzz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 373);

                auto g_yzz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 374);

                auto g_yzz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 375);

                auto g_yzz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 376);

                auto g_yzz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 377);

                auto g_yzz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 378);

                auto g_yzz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 379);

                auto g_yzz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 380);

                auto g_yzz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 381);

                auto g_yzz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 382);

                auto g_yzz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 383);

                auto g_yzz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 384);

                auto g_yzz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 385);

                auto g_yzz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 386);

                auto g_yzz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 387);

                auto g_yzz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 388);

                auto g_yzz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 389);

                auto g_yzz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 390);

                auto g_yzz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 391);

                auto g_yzz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 392);

                auto g_yzz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 393);

                auto g_yzz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 394);

                auto g_yzz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 395);

                auto g_yzz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 396);

                auto g_yzz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 397);

                auto g_yzz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 398);

                auto g_yzz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 399);

                auto g_yzz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 400);

                auto g_yzz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 401);

                auto g_yzz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 402);

                auto g_yzz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 403);

                auto g_yzz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 404);

                auto g_zzz_xxxxxxxx = primBuffer.data(goff + 450 * idx + 405);

                auto g_zzz_xxxxxxxy = primBuffer.data(goff + 450 * idx + 406);

                auto g_zzz_xxxxxxxz = primBuffer.data(goff + 450 * idx + 407);

                auto g_zzz_xxxxxxyy = primBuffer.data(goff + 450 * idx + 408);

                auto g_zzz_xxxxxxyz = primBuffer.data(goff + 450 * idx + 409);

                auto g_zzz_xxxxxxzz = primBuffer.data(goff + 450 * idx + 410);

                auto g_zzz_xxxxxyyy = primBuffer.data(goff + 450 * idx + 411);

                auto g_zzz_xxxxxyyz = primBuffer.data(goff + 450 * idx + 412);

                auto g_zzz_xxxxxyzz = primBuffer.data(goff + 450 * idx + 413);

                auto g_zzz_xxxxxzzz = primBuffer.data(goff + 450 * idx + 414);

                auto g_zzz_xxxxyyyy = primBuffer.data(goff + 450 * idx + 415);

                auto g_zzz_xxxxyyyz = primBuffer.data(goff + 450 * idx + 416);

                auto g_zzz_xxxxyyzz = primBuffer.data(goff + 450 * idx + 417);

                auto g_zzz_xxxxyzzz = primBuffer.data(goff + 450 * idx + 418);

                auto g_zzz_xxxxzzzz = primBuffer.data(goff + 450 * idx + 419);

                auto g_zzz_xxxyyyyy = primBuffer.data(goff + 450 * idx + 420);

                auto g_zzz_xxxyyyyz = primBuffer.data(goff + 450 * idx + 421);

                auto g_zzz_xxxyyyzz = primBuffer.data(goff + 450 * idx + 422);

                auto g_zzz_xxxyyzzz = primBuffer.data(goff + 450 * idx + 423);

                auto g_zzz_xxxyzzzz = primBuffer.data(goff + 450 * idx + 424);

                auto g_zzz_xxxzzzzz = primBuffer.data(goff + 450 * idx + 425);

                auto g_zzz_xxyyyyyy = primBuffer.data(goff + 450 * idx + 426);

                auto g_zzz_xxyyyyyz = primBuffer.data(goff + 450 * idx + 427);

                auto g_zzz_xxyyyyzz = primBuffer.data(goff + 450 * idx + 428);

                auto g_zzz_xxyyyzzz = primBuffer.data(goff + 450 * idx + 429);

                auto g_zzz_xxyyzzzz = primBuffer.data(goff + 450 * idx + 430);

                auto g_zzz_xxyzzzzz = primBuffer.data(goff + 450 * idx + 431);

                auto g_zzz_xxzzzzzz = primBuffer.data(goff + 450 * idx + 432);

                auto g_zzz_xyyyyyyy = primBuffer.data(goff + 450 * idx + 433);

                auto g_zzz_xyyyyyyz = primBuffer.data(goff + 450 * idx + 434);

                auto g_zzz_xyyyyyzz = primBuffer.data(goff + 450 * idx + 435);

                auto g_zzz_xyyyyzzz = primBuffer.data(goff + 450 * idx + 436);

                auto g_zzz_xyyyzzzz = primBuffer.data(goff + 450 * idx + 437);

                auto g_zzz_xyyzzzzz = primBuffer.data(goff + 450 * idx + 438);

                auto g_zzz_xyzzzzzz = primBuffer.data(goff + 450 * idx + 439);

                auto g_zzz_xzzzzzzz = primBuffer.data(goff + 450 * idx + 440);

                auto g_zzz_yyyyyyyy = primBuffer.data(goff + 450 * idx + 441);

                auto g_zzz_yyyyyyyz = primBuffer.data(goff + 450 * idx + 442);

                auto g_zzz_yyyyyyzz = primBuffer.data(goff + 450 * idx + 443);

                auto g_zzz_yyyyyzzz = primBuffer.data(goff + 450 * idx + 444);

                auto g_zzz_yyyyzzzz = primBuffer.data(goff + 450 * idx + 445);

                auto g_zzz_yyyzzzzz = primBuffer.data(goff + 450 * idx + 446);

                auto g_zzz_yyzzzzzz = primBuffer.data(goff + 450 * idx + 447);

                auto g_zzz_yzzzzzzz = primBuffer.data(goff + 450 * idx + 448);

                auto g_zzz_zzzzzzzz = primBuffer.data(goff + 450 * idx + 449);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xx_xxxxxxx,\
                                         gk_xx_xxxxxxy, gk_xx_xxxxxxz, gk_xx_xxxxxyy,\
                                         gk_xx_xxxxxyz, gk_xx_xxxxxzz, gk_xx_xxxxyyy,\
                                         gk_xx_xxxxyyz, gk_xx_xxxxyzz, gk_xx_xxxxzzz,\
                                         gk_xx_xxxyyyy, gk_xx_xxxyyyz, gk_xx_xxxyyzz,\
                                         gk_xx_xxxyzzz, gk_xx_xxxzzzz, gk_xx_xxyyyyy,\
                                         gk_xx_xxyyyyz, gk_xx_xxyyyzz, gk_xx_xxyyzzz,\
                                         gk_xx_xxyzzzz, gk_xx_xxzzzzz, gk_xx_xyyyyyy,\
                                         gk_xx_xyyyyyz, gk_xx_xyyyyzz, gk_xx_xyyyzzz,\
                                         gk_xx_xyyzzzz, gk_xx_xyzzzzz, gk_xx_xzzzzzz,\
                                         gk_xx_yyyyyyy, gk_xx_yyyyyyz, gk_xx_yyyyyzz,\
                                         gk_xx_yyyyzzz, gk_xx_yyyzzzz, gk_xx_yyzzzzz,\
                                         gk_xx_yzzzzzz, gk_xx_zzzzzzz, gk_xy_xxxxxxx,\
                                         gk_xy_xxxxxxy, gk_xy_xxxxxxz, gk_xy_xxxxxyy,\
                                         gk_xy_xxxxxyz, gk_xy_xxxxxzz, gk_xy_xxxxyyy,\
                                         gk_xy_xxxxyyz, gk_xy_xxxxyzz, gk_xy_xxxxzzz,\
                                         gk_xy_xxxyyyy, gk_xy_xxxyyyz, gk_xy_xxxyyzz,\
                                         gk_xy_xxxyzzz, gk_xy_xxxzzzz, gk_xy_xxyyyyy,\
                                         gk_xy_xxyyyyz, gk_xy_xxyyyzz, gk_xy_xxyyzzz,\
                                         gk_xy_xxyzzzz, gk_xy_xxzzzzz, gk_xy_xyyyyyy,\
                                         gk_xy_xyyyyyz, gk_xy_xyyyyzz, gk_xy_xyyyzzz,\
                                         gk_xy_xyyzzzz, gk_xy_xyzzzzz, gk_xy_xzzzzzz,\
                                         gk_xy_yyyyyyy, gk_xy_yyyyyyz, gk_xy_yyyyyzz,\
                                         gk_xy_yyyyzzz, gk_xy_yyyzzzz, gk_xy_yyzzzzz,\
                                         gk_xy_yzzzzzz, gk_xy_zzzzzzz, gk_xz_xxxxxxx,\
                                         gk_xz_xxxxxxy, gk_xz_xxxxxxz, gk_xz_xxxxxyy,\
                                         gk_xz_xxxxxyz, gk_xz_xxxxxzz, gk_xz_xxxxyyy,\
                                         gk_xz_xxxxyyz, gk_xz_xxxxyzz, gk_xz_xxxxzzz,\
                                         gk_xz_xxxyyyy, gk_xz_xxxyyyz, gk_xz_xxxyyzz,\
                                         gk_xz_xxxyzzz, gk_xz_xxxzzzz, gk_xz_xxyyyyy,\
                                         gk_xz_xxyyyyz, gk_xz_xxyyyzz, gk_xz_xxyyzzz,\
                                         gk_xz_xxyzzzz, gk_xz_xxzzzzz, gk_xz_xyyyyyy,\
                                         gk_xz_xyyyyyz, gk_xz_xyyyyzz, gk_xz_xyyyzzz,\
                                         gk_xz_xyyzzzz, gk_xz_xyzzzzz, gk_xz_xzzzzzz,\
                                         gk_xz_yyyyyyy, gk_xz_yyyyyyz, gk_xz_yyyyyzz,\
                                         gk_xz_yyyyzzz, gk_xz_yyyzzzz, gk_xz_yyzzzzz,\
                                         gk_xz_yzzzzzz, gk_xz_zzzzzzz, gk_yy_xxxxxxx,\
                                         gk_yy_xxxxxxy, gk_yy_xxxxxxz, gk_yy_xxxxxyy,\
                                         gk_yy_xxxxxyz, gk_yy_xxxxxzz, gk_yy_xxxxyyy,\
                                         gk_yy_xxxxyyz, gk_yy_xxxxyzz, gk_yy_xxxxzzz,\
                                         gk_yy_xxxyyyy, gk_yy_xxxyyyz, gk_yy_xxxyyzz,\
                                         gk_yy_xxxyzzz, gk_yy_xxxzzzz, gk_yy_xxyyyyy,\
                                         gk_yy_xxyyyyz, gk_yy_xxyyyzz, gk_yy_xxyyzzz,\
                                         gk_yy_xxyzzzz, gk_yy_xxzzzzz, gk_yy_xyyyyyy,\
                                         gk_yy_xyyyyyz, gk_yy_xyyyyzz, gk_yy_xyyyzzz,\
                                         gk_yy_xyyzzzz, gk_yy_xyzzzzz, gk_yy_xzzzzzz,\
                                         gk_yy_yyyyyyy, gk_yy_yyyyyyz, gk_yy_yyyyyzz,\
                                         gk_yy_yyyyzzz, gk_yy_yyyzzzz, gk_yy_yyzzzzz,\
                                         gk_yy_yzzzzzz, gk_yy_zzzzzzz, gk_yz_xxxxxxx,\
                                         gk_yz_xxxxxxy, gk_yz_xxxxxxz, gk_yz_xxxxxyy,\
                                         gk_yz_xxxxxyz, gk_yz_xxxxxzz, gk_yz_xxxxyyy,\
                                         gk_yz_xxxxyyz, gk_yz_xxxxyzz, gk_yz_xxxxzzz,\
                                         gk_yz_xxxyyyy, gk_yz_xxxyyyz, gk_yz_xxxyyzz,\
                                         gk_yz_xxxyzzz, gk_yz_xxxzzzz, gk_yz_xxyyyyy,\
                                         gk_yz_xxyyyyz, gk_yz_xxyyyzz, gk_yz_xxyyzzz,\
                                         gk_yz_xxyzzzz, gk_yz_xxzzzzz, gk_yz_xyyyyyy,\
                                         gk_yz_xyyyyyz, gk_yz_xyyyyzz, gk_yz_xyyyzzz,\
                                         gk_yz_xyyzzzz, gk_yz_xyzzzzz, gk_yz_xzzzzzz,\
                                         gk_yz_yyyyyyy, gk_yz_yyyyyyz, gk_yz_yyyyyzz,\
                                         gk_yz_yyyyzzz, gk_yz_yyyzzzz, gk_yz_yyzzzzz,\
                                         gk_yz_yzzzzzz, gk_yz_zzzzzzz, gk_zz_xxxxxxx,\
                                         gk_zz_xxxxxxy, gk_zz_xxxxxxz, gk_zz_xxxxxyy,\
                                         gk_zz_xxxxxyz, gk_zz_xxxxxzz, gk_zz_xxxxyyy,\
                                         gk_zz_xxxxyyz, gk_zz_xxxxyzz, gk_zz_xxxxzzz,\
                                         gk_zz_xxxyyyy, gk_zz_xxxyyyz, gk_zz_xxxyyzz,\
                                         gk_zz_xxxyzzz, gk_zz_xxxzzzz, gk_zz_xxyyyyy,\
                                         gk_zz_xxyyyyz, gk_zz_xxyyyzz, gk_zz_xxyyzzz,\
                                         gk_zz_xxyzzzz, gk_zz_xxzzzzz, gk_zz_xyyyyyy,\
                                         gk_zz_xyyyyyz, gk_zz_xyyyyzz, gk_zz_xyyyzzz,\
                                         gk_zz_xyyzzzz, gk_zz_xyzzzzz, gk_zz_xzzzzzz,\
                                         gk_zz_yyyyyyy, gk_zz_yyyyyyz, gk_zz_yyyyyzz,\
                                         gk_zz_yyyyzzz, gk_zz_yyyzzzz, gk_zz_yyzzzzz,\
                                         gk_zz_yzzzzzz, gk_zz_zzzzzzz, g20_x_xxxxxxxx,\
                                         g20_x_xxxxxxxy, g20_x_xxxxxxxz, g20_x_xxxxxxyy,\
                                         g20_x_xxxxxxyz, g20_x_xxxxxxzz, g20_x_xxxxxyyy,\
                                         g20_x_xxxxxyyz, g20_x_xxxxxyzz, g20_x_xxxxxzzz,\
                                         g20_x_xxxxyyyy, g20_x_xxxxyyyz, g20_x_xxxxyyzz,\
                                         g20_x_xxxxyzzz, g20_x_xxxxzzzz, g20_x_xxxyyyyy,\
                                         g20_x_xxxyyyyz, g20_x_xxxyyyzz, g20_x_xxxyyzzz,\
                                         g20_x_xxxyzzzz, g20_x_xxxzzzzz, g20_x_xxyyyyyy,\
                                         g20_x_xxyyyyyz, g20_x_xxyyyyzz, g20_x_xxyyyzzz,\
                                         g20_x_xxyyzzzz, g20_x_xxyzzzzz, g20_x_xxzzzzzz,\
                                         g20_x_xyyyyyyy, g20_x_xyyyyyyz, g20_x_xyyyyyzz,\
                                         g20_x_xyyyyzzz, g20_x_xyyyzzzz, g20_x_xyyzzzzz,\
                                         g20_x_xyzzzzzz, g20_x_xzzzzzzz, g20_x_yyyyyyyy,\
                                         g20_x_yyyyyyyz, g20_x_yyyyyyzz, g20_x_yyyyyzzz,\
                                         g20_x_yyyyzzzz, g20_x_yyyzzzzz, g20_x_yyzzzzzz,\
                                         g20_x_yzzzzzzz, g20_x_zzzzzzzz, g20_y_xxxxxxxx,\
                                         g20_y_xxxxxxxy, g20_y_xxxxxxxz, g20_y_xxxxxxyy,\
                                         g20_y_xxxxxxyz, g20_y_xxxxxxzz, g20_y_xxxxxyyy,\
                                         g20_y_xxxxxyyz, g20_y_xxxxxyzz, g20_y_xxxxxzzz,\
                                         g20_y_xxxxyyyy, g20_y_xxxxyyyz, g20_y_xxxxyyzz,\
                                         g20_y_xxxxyzzz, g20_y_xxxxzzzz, g20_y_xxxyyyyy,\
                                         g20_y_xxxyyyyz, g20_y_xxxyyyzz, g20_y_xxxyyzzz,\
                                         g20_y_xxxyzzzz, g20_y_xxxzzzzz, g20_y_xxyyyyyy,\
                                         g20_y_xxyyyyyz, g20_y_xxyyyyzz, g20_y_xxyyyzzz,\
                                         g20_y_xxyyzzzz, g20_y_xxyzzzzz, g20_y_xxzzzzzz,\
                                         g20_y_xyyyyyyy, g20_y_xyyyyyyz, g20_y_xyyyyyzz,\
                                         g20_y_xyyyyzzz, g20_y_xyyyzzzz, g20_y_xyyzzzzz,\
                                         g20_y_xyzzzzzz, g20_y_xzzzzzzz, g20_y_yyyyyyyy,\
                                         g20_y_yyyyyyyz, g20_y_yyyyyyzz, g20_y_yyyyyzzz,\
                                         g20_y_yyyyzzzz, g20_y_yyyzzzzz, g20_y_yyzzzzzz,\
                                         g20_y_yzzzzzzz, g20_y_zzzzzzzz, g20_z_xxxxxxxx,\
                                         g20_z_xxxxxxxy, g20_z_xxxxxxxz, g20_z_xxxxxxyy,\
                                         g20_z_xxxxxxyz, g20_z_xxxxxxzz, g20_z_xxxxxyyy,\
                                         g20_z_xxxxxyyz, g20_z_xxxxxyzz, g20_z_xxxxxzzz,\
                                         g20_z_xxxxyyyy, g20_z_xxxxyyyz, g20_z_xxxxyyzz,\
                                         g20_z_xxxxyzzz, g20_z_xxxxzzzz, g20_z_xxxyyyyy,\
                                         g20_z_xxxyyyyz, g20_z_xxxyyyzz, g20_z_xxxyyzzz,\
                                         g20_z_xxxyzzzz, g20_z_xxxzzzzz, g20_z_xxyyyyyy,\
                                         g20_z_xxyyyyyz, g20_z_xxyyyyzz, g20_z_xxyyyzzz,\
                                         g20_z_xxyyzzzz, g20_z_xxyzzzzz, g20_z_xxzzzzzz,\
                                         g20_z_xyyyyyyy, g20_z_xyyyyyyz, g20_z_xyyyyyzz,\
                                         g20_z_xyyyyzzz, g20_z_xyyyzzzz, g20_z_xyyzzzzz,\
                                         g20_z_xyzzzzzz, g20_z_xzzzzzzz, g20_z_yyyyyyyy,\
                                         g20_z_yyyyyyyz, g20_z_yyyyyyzz, g20_z_yyyyyzzz,\
                                         g20_z_yyyyzzzz, g20_z_yyyzzzzz, g20_z_yyzzzzzz,\
                                         g20_z_yzzzzzzz, g20_z_zzzzzzzz, g21_x_xxxxxxxx,\
                                         g21_x_xxxxxxxy, g21_x_xxxxxxxz, g21_x_xxxxxxyy,\
                                         g21_x_xxxxxxyz, g21_x_xxxxxxzz, g21_x_xxxxxyyy,\
                                         g21_x_xxxxxyyz, g21_x_xxxxxyzz, g21_x_xxxxxzzz,\
                                         g21_x_xxxxyyyy, g21_x_xxxxyyyz, g21_x_xxxxyyzz,\
                                         g21_x_xxxxyzzz, g21_x_xxxxzzzz, g21_x_xxxyyyyy,\
                                         g21_x_xxxyyyyz, g21_x_xxxyyyzz, g21_x_xxxyyzzz,\
                                         g21_x_xxxyzzzz, g21_x_xxxzzzzz, g21_x_xxyyyyyy,\
                                         g21_x_xxyyyyyz, g21_x_xxyyyyzz, g21_x_xxyyyzzz,\
                                         g21_x_xxyyzzzz, g21_x_xxyzzzzz, g21_x_xxzzzzzz,\
                                         g21_x_xyyyyyyy, g21_x_xyyyyyyz, g21_x_xyyyyyzz,\
                                         g21_x_xyyyyzzz, g21_x_xyyyzzzz, g21_x_xyyzzzzz,\
                                         g21_x_xyzzzzzz, g21_x_xzzzzzzz, g21_x_yyyyyyyy,\
                                         g21_x_yyyyyyyz, g21_x_yyyyyyzz, g21_x_yyyyyzzz,\
                                         g21_x_yyyyzzzz, g21_x_yyyzzzzz, g21_x_yyzzzzzz,\
                                         g21_x_yzzzzzzz, g21_x_zzzzzzzz, g21_y_xxxxxxxx,\
                                         g21_y_xxxxxxxy, g21_y_xxxxxxxz, g21_y_xxxxxxyy,\
                                         g21_y_xxxxxxyz, g21_y_xxxxxxzz, g21_y_xxxxxyyy,\
                                         g21_y_xxxxxyyz, g21_y_xxxxxyzz, g21_y_xxxxxzzz,\
                                         g21_y_xxxxyyyy, g21_y_xxxxyyyz, g21_y_xxxxyyzz,\
                                         g21_y_xxxxyzzz, g21_y_xxxxzzzz, g21_y_xxxyyyyy,\
                                         g21_y_xxxyyyyz, g21_y_xxxyyyzz, g21_y_xxxyyzzz,\
                                         g21_y_xxxyzzzz, g21_y_xxxzzzzz, g21_y_xxyyyyyy,\
                                         g21_y_xxyyyyyz, g21_y_xxyyyyzz, g21_y_xxyyyzzz,\
                                         g21_y_xxyyzzzz, g21_y_xxyzzzzz, g21_y_xxzzzzzz,\
                                         g21_y_xyyyyyyy, g21_y_xyyyyyyz, g21_y_xyyyyyzz,\
                                         g21_y_xyyyyzzz, g21_y_xyyyzzzz, g21_y_xyyzzzzz,\
                                         g21_y_xyzzzzzz, g21_y_xzzzzzzz, g21_y_yyyyyyyy,\
                                         g21_y_yyyyyyyz, g21_y_yyyyyyzz, g21_y_yyyyyzzz,\
                                         g21_y_yyyyzzzz, g21_y_yyyzzzzz, g21_y_yyzzzzzz,\
                                         g21_y_yzzzzzzz, g21_y_zzzzzzzz, g21_z_xxxxxxxx,\
                                         g21_z_xxxxxxxy, g21_z_xxxxxxxz, g21_z_xxxxxxyy,\
                                         g21_z_xxxxxxyz, g21_z_xxxxxxzz, g21_z_xxxxxyyy,\
                                         g21_z_xxxxxyyz, g21_z_xxxxxyzz, g21_z_xxxxxzzz,\
                                         g21_z_xxxxyyyy, g21_z_xxxxyyyz, g21_z_xxxxyyzz,\
                                         g21_z_xxxxyzzz, g21_z_xxxxzzzz, g21_z_xxxyyyyy,\
                                         g21_z_xxxyyyyz, g21_z_xxxyyyzz, g21_z_xxxyyzzz,\
                                         g21_z_xxxyzzzz, g21_z_xxxzzzzz, g21_z_xxyyyyyy,\
                                         g21_z_xxyyyyyz, g21_z_xxyyyyzz, g21_z_xxyyyzzz,\
                                         g21_z_xxyyzzzz, g21_z_xxyzzzzz, g21_z_xxzzzzzz,\
                                         g21_z_xyyyyyyy, g21_z_xyyyyyyz, g21_z_xyyyyyzz,\
                                         g21_z_xyyyyzzz, g21_z_xyyyzzzz, g21_z_xyyzzzzz,\
                                         g21_z_xyzzzzzz, g21_z_xzzzzzzz, g21_z_yyyyyyyy,\
                                         g21_z_yyyyyyyz, g21_z_yyyyyyzz, g21_z_yyyyyzzz,\
                                         g21_z_yyyyzzzz, g21_z_yyyzzzzz, g21_z_yyzzzzzz,\
                                         g21_z_yzzzzzzz, g21_z_zzzzzzzz, g11_xx_xxxxxxxx,\
                                         g11_xx_xxxxxxxy, g11_xx_xxxxxxxz, g11_xx_xxxxxxyy,\
                                         g11_xx_xxxxxxyz, g11_xx_xxxxxxzz, g11_xx_xxxxxyyy,\
                                         g11_xx_xxxxxyyz, g11_xx_xxxxxyzz, g11_xx_xxxxxzzz,\
                                         g11_xx_xxxxyyyy, g11_xx_xxxxyyyz, g11_xx_xxxxyyzz,\
                                         g11_xx_xxxxyzzz, g11_xx_xxxxzzzz, g11_xx_xxxyyyyy,\
                                         g11_xx_xxxyyyyz, g11_xx_xxxyyyzz, g11_xx_xxxyyzzz,\
                                         g11_xx_xxxyzzzz, g11_xx_xxxzzzzz, g11_xx_xxyyyyyy,\
                                         g11_xx_xxyyyyyz, g11_xx_xxyyyyzz, g11_xx_xxyyyzzz,\
                                         g11_xx_xxyyzzzz, g11_xx_xxyzzzzz, g11_xx_xxzzzzzz,\
                                         g11_xx_xyyyyyyy, g11_xx_xyyyyyyz, g11_xx_xyyyyyzz,\
                                         g11_xx_xyyyyzzz, g11_xx_xyyyzzzz, g11_xx_xyyzzzzz,\
                                         g11_xx_xyzzzzzz, g11_xx_xzzzzzzz, g11_xx_yyyyyyyy,\
                                         g11_xx_yyyyyyyz, g11_xx_yyyyyyzz, g11_xx_yyyyyzzz,\
                                         g11_xx_yyyyzzzz, g11_xx_yyyzzzzz, g11_xx_yyzzzzzz,\
                                         g11_xx_yzzzzzzz, g11_xx_zzzzzzzz, g11_xy_xxxxxxxx,\
                                         g11_xy_xxxxxxxy, g11_xy_xxxxxxxz, g11_xy_xxxxxxyy,\
                                         g11_xy_xxxxxxyz, g11_xy_xxxxxxzz, g11_xy_xxxxxyyy,\
                                         g11_xy_xxxxxyyz, g11_xy_xxxxxyzz, g11_xy_xxxxxzzz,\
                                         g11_xy_xxxxyyyy, g11_xy_xxxxyyyz, g11_xy_xxxxyyzz,\
                                         g11_xy_xxxxyzzz, g11_xy_xxxxzzzz, g11_xy_xxxyyyyy,\
                                         g11_xy_xxxyyyyz, g11_xy_xxxyyyzz, g11_xy_xxxyyzzz,\
                                         g11_xy_xxxyzzzz, g11_xy_xxxzzzzz, g11_xy_xxyyyyyy,\
                                         g11_xy_xxyyyyyz, g11_xy_xxyyyyzz, g11_xy_xxyyyzzz,\
                                         g11_xy_xxyyzzzz, g11_xy_xxyzzzzz, g11_xy_xxzzzzzz,\
                                         g11_xy_xyyyyyyy, g11_xy_xyyyyyyz, g11_xy_xyyyyyzz,\
                                         g11_xy_xyyyyzzz, g11_xy_xyyyzzzz, g11_xy_xyyzzzzz,\
                                         g11_xy_xyzzzzzz, g11_xy_xzzzzzzz, g11_xy_yyyyyyyy,\
                                         g11_xy_yyyyyyyz, g11_xy_yyyyyyzz, g11_xy_yyyyyzzz,\
                                         g11_xy_yyyyzzzz, g11_xy_yyyzzzzz, g11_xy_yyzzzzzz,\
                                         g11_xy_yzzzzzzz, g11_xy_zzzzzzzz, g11_xz_xxxxxxxx,\
                                         g11_xz_xxxxxxxy, g11_xz_xxxxxxxz, g11_xz_xxxxxxyy,\
                                         g11_xz_xxxxxxyz, g11_xz_xxxxxxzz, g11_xz_xxxxxyyy,\
                                         g11_xz_xxxxxyyz, g11_xz_xxxxxyzz, g11_xz_xxxxxzzz,\
                                         g11_xz_xxxxyyyy, g11_xz_xxxxyyyz, g11_xz_xxxxyyzz,\
                                         g11_xz_xxxxyzzz, g11_xz_xxxxzzzz, g11_xz_xxxyyyyy,\
                                         g11_xz_xxxyyyyz, g11_xz_xxxyyyzz, g11_xz_xxxyyzzz,\
                                         g11_xz_xxxyzzzz, g11_xz_xxxzzzzz, g11_xz_xxyyyyyy,\
                                         g11_xz_xxyyyyyz, g11_xz_xxyyyyzz, g11_xz_xxyyyzzz,\
                                         g11_xz_xxyyzzzz, g11_xz_xxyzzzzz, g11_xz_xxzzzzzz,\
                                         g11_xz_xyyyyyyy, g11_xz_xyyyyyyz, g11_xz_xyyyyyzz,\
                                         g11_xz_xyyyyzzz, g11_xz_xyyyzzzz, g11_xz_xyyzzzzz,\
                                         g11_xz_xyzzzzzz, g11_xz_xzzzzzzz, g11_xz_yyyyyyyy,\
                                         g11_xz_yyyyyyyz, g11_xz_yyyyyyzz, g11_xz_yyyyyzzz,\
                                         g11_xz_yyyyzzzz, g11_xz_yyyzzzzz, g11_xz_yyzzzzzz,\
                                         g11_xz_yzzzzzzz, g11_xz_zzzzzzzz, g11_yy_xxxxxxxx,\
                                         g11_yy_xxxxxxxy, g11_yy_xxxxxxxz, g11_yy_xxxxxxyy,\
                                         g11_yy_xxxxxxyz, g11_yy_xxxxxxzz, g11_yy_xxxxxyyy,\
                                         g11_yy_xxxxxyyz, g11_yy_xxxxxyzz, g11_yy_xxxxxzzz,\
                                         g11_yy_xxxxyyyy, g11_yy_xxxxyyyz, g11_yy_xxxxyyzz,\
                                         g11_yy_xxxxyzzz, g11_yy_xxxxzzzz, g11_yy_xxxyyyyy,\
                                         g11_yy_xxxyyyyz, g11_yy_xxxyyyzz, g11_yy_xxxyyzzz,\
                                         g11_yy_xxxyzzzz, g11_yy_xxxzzzzz, g11_yy_xxyyyyyy,\
                                         g11_yy_xxyyyyyz, g11_yy_xxyyyyzz, g11_yy_xxyyyzzz,\
                                         g11_yy_xxyyzzzz, g11_yy_xxyzzzzz, g11_yy_xxzzzzzz,\
                                         g11_yy_xyyyyyyy, g11_yy_xyyyyyyz, g11_yy_xyyyyyzz,\
                                         g11_yy_xyyyyzzz, g11_yy_xyyyzzzz, g11_yy_xyyzzzzz,\
                                         g11_yy_xyzzzzzz, g11_yy_xzzzzzzz, g11_yy_yyyyyyyy,\
                                         g11_yy_yyyyyyyz, g11_yy_yyyyyyzz, g11_yy_yyyyyzzz,\
                                         g11_yy_yyyyzzzz, g11_yy_yyyzzzzz, g11_yy_yyzzzzzz,\
                                         g11_yy_yzzzzzzz, g11_yy_zzzzzzzz, g11_yz_xxxxxxxx,\
                                         g11_yz_xxxxxxxy, g11_yz_xxxxxxxz, g11_yz_xxxxxxyy,\
                                         g11_yz_xxxxxxyz, g11_yz_xxxxxxzz, g11_yz_xxxxxyyy,\
                                         g11_yz_xxxxxyyz, g11_yz_xxxxxyzz, g11_yz_xxxxxzzz,\
                                         g11_yz_xxxxyyyy, g11_yz_xxxxyyyz, g11_yz_xxxxyyzz,\
                                         g11_yz_xxxxyzzz, g11_yz_xxxxzzzz, g11_yz_xxxyyyyy,\
                                         g11_yz_xxxyyyyz, g11_yz_xxxyyyzz, g11_yz_xxxyyzzz,\
                                         g11_yz_xxxyzzzz, g11_yz_xxxzzzzz, g11_yz_xxyyyyyy,\
                                         g11_yz_xxyyyyyz, g11_yz_xxyyyyzz, g11_yz_xxyyyzzz,\
                                         g11_yz_xxyyzzzz, g11_yz_xxyzzzzz, g11_yz_xxzzzzzz,\
                                         g11_yz_xyyyyyyy, g11_yz_xyyyyyyz, g11_yz_xyyyyyzz,\
                                         g11_yz_xyyyyzzz, g11_yz_xyyyzzzz, g11_yz_xyyzzzzz,\
                                         g11_yz_xyzzzzzz, g11_yz_xzzzzzzz, g11_yz_yyyyyyyy,\
                                         g11_yz_yyyyyyyz, g11_yz_yyyyyyzz, g11_yz_yyyyyzzz,\
                                         g11_yz_yyyyzzzz, g11_yz_yyyzzzzz, g11_yz_yyzzzzzz,\
                                         g11_yz_yzzzzzzz, g11_yz_zzzzzzzz, g11_zz_xxxxxxxx,\
                                         g11_zz_xxxxxxxy, g11_zz_xxxxxxxz, g11_zz_xxxxxxyy,\
                                         g11_zz_xxxxxxyz, g11_zz_xxxxxxzz, g11_zz_xxxxxyyy,\
                                         g11_zz_xxxxxyyz, g11_zz_xxxxxyzz, g11_zz_xxxxxzzz,\
                                         g11_zz_xxxxyyyy, g11_zz_xxxxyyyz, g11_zz_xxxxyyzz,\
                                         g11_zz_xxxxyzzz, g11_zz_xxxxzzzz, g11_zz_xxxyyyyy,\
                                         g11_zz_xxxyyyyz, g11_zz_xxxyyyzz, g11_zz_xxxyyzzz,\
                                         g11_zz_xxxyzzzz, g11_zz_xxxzzzzz, g11_zz_xxyyyyyy,\
                                         g11_zz_xxyyyyyz, g11_zz_xxyyyyzz, g11_zz_xxyyyzzz,\
                                         g11_zz_xxyyzzzz, g11_zz_xxyzzzzz, g11_zz_xxzzzzzz,\
                                         g11_zz_xyyyyyyy, g11_zz_xyyyyyyz, g11_zz_xyyyyyzz,\
                                         g11_zz_xyyyyzzz, g11_zz_xyyyzzzz, g11_zz_xyyzzzzz,\
                                         g11_zz_xyzzzzzz, g11_zz_xzzzzzzz, g11_zz_yyyyyyyy,\
                                         g11_zz_yyyyyyyz, g11_zz_yyyyyyzz, g11_zz_yyyyyzzz,\
                                         g11_zz_yyyyzzzz, g11_zz_yyyzzzzz, g11_zz_yyzzzzzz,\
                                         g11_zz_yzzzzzzz, g11_zz_zzzzzzzz, g_xxx_xxxxxxxx,\
                                         g_xxx_xxxxxxxy, g_xxx_xxxxxxxz, g_xxx_xxxxxxyy,\
                                         g_xxx_xxxxxxyz, g_xxx_xxxxxxzz, g_xxx_xxxxxyyy,\
                                         g_xxx_xxxxxyyz, g_xxx_xxxxxyzz, g_xxx_xxxxxzzz,\
                                         g_xxx_xxxxyyyy, g_xxx_xxxxyyyz, g_xxx_xxxxyyzz,\
                                         g_xxx_xxxxyzzz, g_xxx_xxxxzzzz, g_xxx_xxxyyyyy,\
                                         g_xxx_xxxyyyyz, g_xxx_xxxyyyzz, g_xxx_xxxyyzzz,\
                                         g_xxx_xxxyzzzz, g_xxx_xxxzzzzz, g_xxx_xxyyyyyy,\
                                         g_xxx_xxyyyyyz, g_xxx_xxyyyyzz, g_xxx_xxyyyzzz,\
                                         g_xxx_xxyyzzzz, g_xxx_xxyzzzzz, g_xxx_xxzzzzzz,\
                                         g_xxx_xyyyyyyy, g_xxx_xyyyyyyz, g_xxx_xyyyyyzz,\
                                         g_xxx_xyyyyzzz, g_xxx_xyyyzzzz, g_xxx_xyyzzzzz,\
                                         g_xxx_xyzzzzzz, g_xxx_xzzzzzzz, g_xxx_yyyyyyyy,\
                                         g_xxx_yyyyyyyz, g_xxx_yyyyyyzz, g_xxx_yyyyyzzz,\
                                         g_xxx_yyyyzzzz, g_xxx_yyyzzzzz, g_xxx_yyzzzzzz,\
                                         g_xxx_yzzzzzzz, g_xxx_zzzzzzzz, g_xxy_xxxxxxxx,\
                                         g_xxy_xxxxxxxy, g_xxy_xxxxxxxz, g_xxy_xxxxxxyy,\
                                         g_xxy_xxxxxxyz, g_xxy_xxxxxxzz, g_xxy_xxxxxyyy,\
                                         g_xxy_xxxxxyyz, g_xxy_xxxxxyzz, g_xxy_xxxxxzzz,\
                                         g_xxy_xxxxyyyy, g_xxy_xxxxyyyz, g_xxy_xxxxyyzz,\
                                         g_xxy_xxxxyzzz, g_xxy_xxxxzzzz, g_xxy_xxxyyyyy,\
                                         g_xxy_xxxyyyyz, g_xxy_xxxyyyzz, g_xxy_xxxyyzzz,\
                                         g_xxy_xxxyzzzz, g_xxy_xxxzzzzz, g_xxy_xxyyyyyy,\
                                         g_xxy_xxyyyyyz, g_xxy_xxyyyyzz, g_xxy_xxyyyzzz,\
                                         g_xxy_xxyyzzzz, g_xxy_xxyzzzzz, g_xxy_xxzzzzzz,\
                                         g_xxy_xyyyyyyy, g_xxy_xyyyyyyz, g_xxy_xyyyyyzz,\
                                         g_xxy_xyyyyzzz, g_xxy_xyyyzzzz, g_xxy_xyyzzzzz,\
                                         g_xxy_xyzzzzzz, g_xxy_xzzzzzzz, g_xxy_yyyyyyyy,\
                                         g_xxy_yyyyyyyz, g_xxy_yyyyyyzz, g_xxy_yyyyyzzz,\
                                         g_xxy_yyyyzzzz, g_xxy_yyyzzzzz, g_xxy_yyzzzzzz,\
                                         g_xxy_yzzzzzzz, g_xxy_zzzzzzzz, g_xxz_xxxxxxxx,\
                                         g_xxz_xxxxxxxy, g_xxz_xxxxxxxz, g_xxz_xxxxxxyy,\
                                         g_xxz_xxxxxxyz, g_xxz_xxxxxxzz, g_xxz_xxxxxyyy,\
                                         g_xxz_xxxxxyyz, g_xxz_xxxxxyzz, g_xxz_xxxxxzzz,\
                                         g_xxz_xxxxyyyy, g_xxz_xxxxyyyz, g_xxz_xxxxyyzz,\
                                         g_xxz_xxxxyzzz, g_xxz_xxxxzzzz, g_xxz_xxxyyyyy,\
                                         g_xxz_xxxyyyyz, g_xxz_xxxyyyzz, g_xxz_xxxyyzzz,\
                                         g_xxz_xxxyzzzz, g_xxz_xxxzzzzz, g_xxz_xxyyyyyy,\
                                         g_xxz_xxyyyyyz, g_xxz_xxyyyyzz, g_xxz_xxyyyzzz,\
                                         g_xxz_xxyyzzzz, g_xxz_xxyzzzzz, g_xxz_xxzzzzzz,\
                                         g_xxz_xyyyyyyy, g_xxz_xyyyyyyz, g_xxz_xyyyyyzz,\
                                         g_xxz_xyyyyzzz, g_xxz_xyyyzzzz, g_xxz_xyyzzzzz,\
                                         g_xxz_xyzzzzzz, g_xxz_xzzzzzzz, g_xxz_yyyyyyyy,\
                                         g_xxz_yyyyyyyz, g_xxz_yyyyyyzz, g_xxz_yyyyyzzz,\
                                         g_xxz_yyyyzzzz, g_xxz_yyyzzzzz, g_xxz_yyzzzzzz,\
                                         g_xxz_yzzzzzzz, g_xxz_zzzzzzzz, g_xyy_xxxxxxxx,\
                                         g_xyy_xxxxxxxy, g_xyy_xxxxxxxz, g_xyy_xxxxxxyy,\
                                         g_xyy_xxxxxxyz, g_xyy_xxxxxxzz, g_xyy_xxxxxyyy,\
                                         g_xyy_xxxxxyyz, g_xyy_xxxxxyzz, g_xyy_xxxxxzzz,\
                                         g_xyy_xxxxyyyy, g_xyy_xxxxyyyz, g_xyy_xxxxyyzz,\
                                         g_xyy_xxxxyzzz, g_xyy_xxxxzzzz, g_xyy_xxxyyyyy,\
                                         g_xyy_xxxyyyyz, g_xyy_xxxyyyzz, g_xyy_xxxyyzzz,\
                                         g_xyy_xxxyzzzz, g_xyy_xxxzzzzz, g_xyy_xxyyyyyy,\
                                         g_xyy_xxyyyyyz, g_xyy_xxyyyyzz, g_xyy_xxyyyzzz,\
                                         g_xyy_xxyyzzzz, g_xyy_xxyzzzzz, g_xyy_xxzzzzzz,\
                                         g_xyy_xyyyyyyy, g_xyy_xyyyyyyz, g_xyy_xyyyyyzz,\
                                         g_xyy_xyyyyzzz, g_xyy_xyyyzzzz, g_xyy_xyyzzzzz,\
                                         g_xyy_xyzzzzzz, g_xyy_xzzzzzzz, g_xyy_yyyyyyyy,\
                                         g_xyy_yyyyyyyz, g_xyy_yyyyyyzz, g_xyy_yyyyyzzz,\
                                         g_xyy_yyyyzzzz, g_xyy_yyyzzzzz, g_xyy_yyzzzzzz,\
                                         g_xyy_yzzzzzzz, g_xyy_zzzzzzzz, g_xyz_xxxxxxxx,\
                                         g_xyz_xxxxxxxy, g_xyz_xxxxxxxz, g_xyz_xxxxxxyy,\
                                         g_xyz_xxxxxxyz, g_xyz_xxxxxxzz, g_xyz_xxxxxyyy,\
                                         g_xyz_xxxxxyyz, g_xyz_xxxxxyzz, g_xyz_xxxxxzzz,\
                                         g_xyz_xxxxyyyy, g_xyz_xxxxyyyz, g_xyz_xxxxyyzz,\
                                         g_xyz_xxxxyzzz, g_xyz_xxxxzzzz, g_xyz_xxxyyyyy,\
                                         g_xyz_xxxyyyyz, g_xyz_xxxyyyzz, g_xyz_xxxyyzzz,\
                                         g_xyz_xxxyzzzz, g_xyz_xxxzzzzz, g_xyz_xxyyyyyy,\
                                         g_xyz_xxyyyyyz, g_xyz_xxyyyyzz, g_xyz_xxyyyzzz,\
                                         g_xyz_xxyyzzzz, g_xyz_xxyzzzzz, g_xyz_xxzzzzzz,\
                                         g_xyz_xyyyyyyy, g_xyz_xyyyyyyz, g_xyz_xyyyyyzz,\
                                         g_xyz_xyyyyzzz, g_xyz_xyyyzzzz, g_xyz_xyyzzzzz,\
                                         g_xyz_xyzzzzzz, g_xyz_xzzzzzzz, g_xyz_yyyyyyyy,\
                                         g_xyz_yyyyyyyz, g_xyz_yyyyyyzz, g_xyz_yyyyyzzz,\
                                         g_xyz_yyyyzzzz, g_xyz_yyyzzzzz, g_xyz_yyzzzzzz,\
                                         g_xyz_yzzzzzzz, g_xyz_zzzzzzzz, g_xzz_xxxxxxxx,\
                                         g_xzz_xxxxxxxy, g_xzz_xxxxxxxz, g_xzz_xxxxxxyy,\
                                         g_xzz_xxxxxxyz, g_xzz_xxxxxxzz, g_xzz_xxxxxyyy,\
                                         g_xzz_xxxxxyyz, g_xzz_xxxxxyzz, g_xzz_xxxxxzzz,\
                                         g_xzz_xxxxyyyy, g_xzz_xxxxyyyz, g_xzz_xxxxyyzz,\
                                         g_xzz_xxxxyzzz, g_xzz_xxxxzzzz, g_xzz_xxxyyyyy,\
                                         g_xzz_xxxyyyyz, g_xzz_xxxyyyzz, g_xzz_xxxyyzzz,\
                                         g_xzz_xxxyzzzz, g_xzz_xxxzzzzz, g_xzz_xxyyyyyy,\
                                         g_xzz_xxyyyyyz, g_xzz_xxyyyyzz, g_xzz_xxyyyzzz,\
                                         g_xzz_xxyyzzzz, g_xzz_xxyzzzzz, g_xzz_xxzzzzzz,\
                                         g_xzz_xyyyyyyy, g_xzz_xyyyyyyz, g_xzz_xyyyyyzz,\
                                         g_xzz_xyyyyzzz, g_xzz_xyyyzzzz, g_xzz_xyyzzzzz,\
                                         g_xzz_xyzzzzzz, g_xzz_xzzzzzzz, g_xzz_yyyyyyyy,\
                                         g_xzz_yyyyyyyz, g_xzz_yyyyyyzz, g_xzz_yyyyyzzz,\
                                         g_xzz_yyyyzzzz, g_xzz_yyyzzzzz, g_xzz_yyzzzzzz,\
                                         g_xzz_yzzzzzzz, g_xzz_zzzzzzzz, g_yyy_xxxxxxxx,\
                                         g_yyy_xxxxxxxy, g_yyy_xxxxxxxz, g_yyy_xxxxxxyy,\
                                         g_yyy_xxxxxxyz, g_yyy_xxxxxxzz, g_yyy_xxxxxyyy,\
                                         g_yyy_xxxxxyyz, g_yyy_xxxxxyzz, g_yyy_xxxxxzzz,\
                                         g_yyy_xxxxyyyy, g_yyy_xxxxyyyz, g_yyy_xxxxyyzz,\
                                         g_yyy_xxxxyzzz, g_yyy_xxxxzzzz, g_yyy_xxxyyyyy,\
                                         g_yyy_xxxyyyyz, g_yyy_xxxyyyzz, g_yyy_xxxyyzzz,\
                                         g_yyy_xxxyzzzz, g_yyy_xxxzzzzz, g_yyy_xxyyyyyy,\
                                         g_yyy_xxyyyyyz, g_yyy_xxyyyyzz, g_yyy_xxyyyzzz,\
                                         g_yyy_xxyyzzzz, g_yyy_xxyzzzzz, g_yyy_xxzzzzzz,\
                                         g_yyy_xyyyyyyy, g_yyy_xyyyyyyz, g_yyy_xyyyyyzz,\
                                         g_yyy_xyyyyzzz, g_yyy_xyyyzzzz, g_yyy_xyyzzzzz,\
                                         g_yyy_xyzzzzzz, g_yyy_xzzzzzzz, g_yyy_yyyyyyyy,\
                                         g_yyy_yyyyyyyz, g_yyy_yyyyyyzz, g_yyy_yyyyyzzz,\
                                         g_yyy_yyyyzzzz, g_yyy_yyyzzzzz, g_yyy_yyzzzzzz,\
                                         g_yyy_yzzzzzzz, g_yyy_zzzzzzzz, g_yyz_xxxxxxxx,\
                                         g_yyz_xxxxxxxy, g_yyz_xxxxxxxz, g_yyz_xxxxxxyy,\
                                         g_yyz_xxxxxxyz, g_yyz_xxxxxxzz, g_yyz_xxxxxyyy,\
                                         g_yyz_xxxxxyyz, g_yyz_xxxxxyzz, g_yyz_xxxxxzzz,\
                                         g_yyz_xxxxyyyy, g_yyz_xxxxyyyz, g_yyz_xxxxyyzz,\
                                         g_yyz_xxxxyzzz, g_yyz_xxxxzzzz, g_yyz_xxxyyyyy,\
                                         g_yyz_xxxyyyyz, g_yyz_xxxyyyzz, g_yyz_xxxyyzzz,\
                                         g_yyz_xxxyzzzz, g_yyz_xxxzzzzz, g_yyz_xxyyyyyy,\
                                         g_yyz_xxyyyyyz, g_yyz_xxyyyyzz, g_yyz_xxyyyzzz,\
                                         g_yyz_xxyyzzzz, g_yyz_xxyzzzzz, g_yyz_xxzzzzzz,\
                                         g_yyz_xyyyyyyy, g_yyz_xyyyyyyz, g_yyz_xyyyyyzz,\
                                         g_yyz_xyyyyzzz, g_yyz_xyyyzzzz, g_yyz_xyyzzzzz,\
                                         g_yyz_xyzzzzzz, g_yyz_xzzzzzzz, g_yyz_yyyyyyyy,\
                                         g_yyz_yyyyyyyz, g_yyz_yyyyyyzz, g_yyz_yyyyyzzz,\
                                         g_yyz_yyyyzzzz, g_yyz_yyyzzzzz, g_yyz_yyzzzzzz,\
                                         g_yyz_yzzzzzzz, g_yyz_zzzzzzzz, g_yzz_xxxxxxxx,\
                                         g_yzz_xxxxxxxy, g_yzz_xxxxxxxz, g_yzz_xxxxxxyy,\
                                         g_yzz_xxxxxxyz, g_yzz_xxxxxxzz, g_yzz_xxxxxyyy,\
                                         g_yzz_xxxxxyyz, g_yzz_xxxxxyzz, g_yzz_xxxxxzzz,\
                                         g_yzz_xxxxyyyy, g_yzz_xxxxyyyz, g_yzz_xxxxyyzz,\
                                         g_yzz_xxxxyzzz, g_yzz_xxxxzzzz, g_yzz_xxxyyyyy,\
                                         g_yzz_xxxyyyyz, g_yzz_xxxyyyzz, g_yzz_xxxyyzzz,\
                                         g_yzz_xxxyzzzz, g_yzz_xxxzzzzz, g_yzz_xxyyyyyy,\
                                         g_yzz_xxyyyyyz, g_yzz_xxyyyyzz, g_yzz_xxyyyzzz,\
                                         g_yzz_xxyyzzzz, g_yzz_xxyzzzzz, g_yzz_xxzzzzzz,\
                                         g_yzz_xyyyyyyy, g_yzz_xyyyyyyz, g_yzz_xyyyyyzz,\
                                         g_yzz_xyyyyzzz, g_yzz_xyyyzzzz, g_yzz_xyyzzzzz,\
                                         g_yzz_xyzzzzzz, g_yzz_xzzzzzzz, g_yzz_yyyyyyyy,\
                                         g_yzz_yyyyyyyz, g_yzz_yyyyyyzz, g_yzz_yyyyyzzz,\
                                         g_yzz_yyyyzzzz, g_yzz_yyyzzzzz, g_yzz_yyzzzzzz,\
                                         g_yzz_yzzzzzzz, g_yzz_zzzzzzzz, g_zzz_xxxxxxxx,\
                                         g_zzz_xxxxxxxy, g_zzz_xxxxxxxz, g_zzz_xxxxxxyy,\
                                         g_zzz_xxxxxxyz, g_zzz_xxxxxxzz, g_zzz_xxxxxyyy,\
                                         g_zzz_xxxxxyyz, g_zzz_xxxxxyzz, g_zzz_xxxxxzzz,\
                                         g_zzz_xxxxyyyy, g_zzz_xxxxyyyz, g_zzz_xxxxyyzz,\
                                         g_zzz_xxxxyzzz, g_zzz_xxxxzzzz, g_zzz_xxxyyyyy,\
                                         g_zzz_xxxyyyyz, g_zzz_xxxyyyzz, g_zzz_xxxyyzzz,\
                                         g_zzz_xxxyzzzz, g_zzz_xxxzzzzz, g_zzz_xxyyyyyy,\
                                         g_zzz_xxyyyyyz, g_zzz_xxyyyyzz, g_zzz_xxyyyzzz,\
                                         g_zzz_xxyyzzzz, g_zzz_xxyzzzzz, g_zzz_xxzzzzzz,\
                                         g_zzz_xyyyyyyy, g_zzz_xyyyyyyz, g_zzz_xyyyyyzz,\
                                         g_zzz_xyyyyzzz, g_zzz_xyyyzzzz, g_zzz_xyyzzzzz,\
                                         g_zzz_xyzzzzzz, g_zzz_xzzzzzzz, g_zzz_yyyyyyyy,\
                                         g_zzz_yyyyyyyz, g_zzz_yyyyyyzz, g_zzz_yyyyyzzz,\
                                         g_zzz_yyyyzzzz, g_zzz_yyyzzzzz, g_zzz_yyzzzzzz,\
                                         g_zzz_yzzzzzzz, g_zzz_zzzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxx_xxxxxxxx[k] = fr * g11_xx_xxxxxxxx[k] + f2g * (2.0 * g20_x_xxxxxxxx[k] - 2.0 * fgz * g21_x_xxxxxxxx[k]) + 8.0 * f2t * gk_xx_xxxxxxx[k];

                    g_xxx_xxxxxxxy[k] = fr * g11_xx_xxxxxxxy[k] + f2g * (2.0 * g20_x_xxxxxxxy[k] - 2.0 * fgz * g21_x_xxxxxxxy[k]) + 7.0 * f2t * gk_xx_xxxxxxy[k];

                    g_xxx_xxxxxxxz[k] = fr * g11_xx_xxxxxxxz[k] + f2g * (2.0 * g20_x_xxxxxxxz[k] - 2.0 * fgz * g21_x_xxxxxxxz[k]) + 7.0 * f2t * gk_xx_xxxxxxz[k];

                    g_xxx_xxxxxxyy[k] = fr * g11_xx_xxxxxxyy[k] + f2g * (2.0 * g20_x_xxxxxxyy[k] - 2.0 * fgz * g21_x_xxxxxxyy[k]) + 6.0 * f2t * gk_xx_xxxxxyy[k];

                    g_xxx_xxxxxxyz[k] = fr * g11_xx_xxxxxxyz[k] + f2g * (2.0 * g20_x_xxxxxxyz[k] - 2.0 * fgz * g21_x_xxxxxxyz[k]) + 6.0 * f2t * gk_xx_xxxxxyz[k];

                    g_xxx_xxxxxxzz[k] = fr * g11_xx_xxxxxxzz[k] + f2g * (2.0 * g20_x_xxxxxxzz[k] - 2.0 * fgz * g21_x_xxxxxxzz[k]) + 6.0 * f2t * gk_xx_xxxxxzz[k];

                    g_xxx_xxxxxyyy[k] = fr * g11_xx_xxxxxyyy[k] + f2g * (2.0 * g20_x_xxxxxyyy[k] - 2.0 * fgz * g21_x_xxxxxyyy[k]) + 5.0 * f2t * gk_xx_xxxxyyy[k];

                    g_xxx_xxxxxyyz[k] = fr * g11_xx_xxxxxyyz[k] + f2g * (2.0 * g20_x_xxxxxyyz[k] - 2.0 * fgz * g21_x_xxxxxyyz[k]) + 5.0 * f2t * gk_xx_xxxxyyz[k];

                    g_xxx_xxxxxyzz[k] = fr * g11_xx_xxxxxyzz[k] + f2g * (2.0 * g20_x_xxxxxyzz[k] - 2.0 * fgz * g21_x_xxxxxyzz[k]) + 5.0 * f2t * gk_xx_xxxxyzz[k];

                    g_xxx_xxxxxzzz[k] = fr * g11_xx_xxxxxzzz[k] + f2g * (2.0 * g20_x_xxxxxzzz[k] - 2.0 * fgz * g21_x_xxxxxzzz[k]) + 5.0 * f2t * gk_xx_xxxxzzz[k];

                    g_xxx_xxxxyyyy[k] = fr * g11_xx_xxxxyyyy[k] + f2g * (2.0 * g20_x_xxxxyyyy[k] - 2.0 * fgz * g21_x_xxxxyyyy[k]) + 4.0 * f2t * gk_xx_xxxyyyy[k];

                    g_xxx_xxxxyyyz[k] = fr * g11_xx_xxxxyyyz[k] + f2g * (2.0 * g20_x_xxxxyyyz[k] - 2.0 * fgz * g21_x_xxxxyyyz[k]) + 4.0 * f2t * gk_xx_xxxyyyz[k];

                    g_xxx_xxxxyyzz[k] = fr * g11_xx_xxxxyyzz[k] + f2g * (2.0 * g20_x_xxxxyyzz[k] - 2.0 * fgz * g21_x_xxxxyyzz[k]) + 4.0 * f2t * gk_xx_xxxyyzz[k];

                    g_xxx_xxxxyzzz[k] = fr * g11_xx_xxxxyzzz[k] + f2g * (2.0 * g20_x_xxxxyzzz[k] - 2.0 * fgz * g21_x_xxxxyzzz[k]) + 4.0 * f2t * gk_xx_xxxyzzz[k];

                    g_xxx_xxxxzzzz[k] = fr * g11_xx_xxxxzzzz[k] + f2g * (2.0 * g20_x_xxxxzzzz[k] - 2.0 * fgz * g21_x_xxxxzzzz[k]) + 4.0 * f2t * gk_xx_xxxzzzz[k];

                    g_xxx_xxxyyyyy[k] = fr * g11_xx_xxxyyyyy[k] + f2g * (2.0 * g20_x_xxxyyyyy[k] - 2.0 * fgz * g21_x_xxxyyyyy[k]) + 3.0 * f2t * gk_xx_xxyyyyy[k];

                    g_xxx_xxxyyyyz[k] = fr * g11_xx_xxxyyyyz[k] + f2g * (2.0 * g20_x_xxxyyyyz[k] - 2.0 * fgz * g21_x_xxxyyyyz[k]) + 3.0 * f2t * gk_xx_xxyyyyz[k];

                    g_xxx_xxxyyyzz[k] = fr * g11_xx_xxxyyyzz[k] + f2g * (2.0 * g20_x_xxxyyyzz[k] - 2.0 * fgz * g21_x_xxxyyyzz[k]) + 3.0 * f2t * gk_xx_xxyyyzz[k];

                    g_xxx_xxxyyzzz[k] = fr * g11_xx_xxxyyzzz[k] + f2g * (2.0 * g20_x_xxxyyzzz[k] - 2.0 * fgz * g21_x_xxxyyzzz[k]) + 3.0 * f2t * gk_xx_xxyyzzz[k];

                    g_xxx_xxxyzzzz[k] = fr * g11_xx_xxxyzzzz[k] + f2g * (2.0 * g20_x_xxxyzzzz[k] - 2.0 * fgz * g21_x_xxxyzzzz[k]) + 3.0 * f2t * gk_xx_xxyzzzz[k];

                    g_xxx_xxxzzzzz[k] = fr * g11_xx_xxxzzzzz[k] + f2g * (2.0 * g20_x_xxxzzzzz[k] - 2.0 * fgz * g21_x_xxxzzzzz[k]) + 3.0 * f2t * gk_xx_xxzzzzz[k];

                    g_xxx_xxyyyyyy[k] = fr * g11_xx_xxyyyyyy[k] + f2g * (2.0 * g20_x_xxyyyyyy[k] - 2.0 * fgz * g21_x_xxyyyyyy[k]) + 2.0 * f2t * gk_xx_xyyyyyy[k];

                    g_xxx_xxyyyyyz[k] = fr * g11_xx_xxyyyyyz[k] + f2g * (2.0 * g20_x_xxyyyyyz[k] - 2.0 * fgz * g21_x_xxyyyyyz[k]) + 2.0 * f2t * gk_xx_xyyyyyz[k];

                    g_xxx_xxyyyyzz[k] = fr * g11_xx_xxyyyyzz[k] + f2g * (2.0 * g20_x_xxyyyyzz[k] - 2.0 * fgz * g21_x_xxyyyyzz[k]) + 2.0 * f2t * gk_xx_xyyyyzz[k];

                    g_xxx_xxyyyzzz[k] = fr * g11_xx_xxyyyzzz[k] + f2g * (2.0 * g20_x_xxyyyzzz[k] - 2.0 * fgz * g21_x_xxyyyzzz[k]) + 2.0 * f2t * gk_xx_xyyyzzz[k];

                    g_xxx_xxyyzzzz[k] = fr * g11_xx_xxyyzzzz[k] + f2g * (2.0 * g20_x_xxyyzzzz[k] - 2.0 * fgz * g21_x_xxyyzzzz[k]) + 2.0 * f2t * gk_xx_xyyzzzz[k];

                    g_xxx_xxyzzzzz[k] = fr * g11_xx_xxyzzzzz[k] + f2g * (2.0 * g20_x_xxyzzzzz[k] - 2.0 * fgz * g21_x_xxyzzzzz[k]) + 2.0 * f2t * gk_xx_xyzzzzz[k];

                    g_xxx_xxzzzzzz[k] = fr * g11_xx_xxzzzzzz[k] + f2g * (2.0 * g20_x_xxzzzzzz[k] - 2.0 * fgz * g21_x_xxzzzzzz[k]) + 2.0 * f2t * gk_xx_xzzzzzz[k];

                    g_xxx_xyyyyyyy[k] = fr * g11_xx_xyyyyyyy[k] + f2g * (2.0 * g20_x_xyyyyyyy[k] - 2.0 * fgz * g21_x_xyyyyyyy[k]) + f2t * gk_xx_yyyyyyy[k];

                    g_xxx_xyyyyyyz[k] = fr * g11_xx_xyyyyyyz[k] + f2g * (2.0 * g20_x_xyyyyyyz[k] - 2.0 * fgz * g21_x_xyyyyyyz[k]) + f2t * gk_xx_yyyyyyz[k];

                    g_xxx_xyyyyyzz[k] = fr * g11_xx_xyyyyyzz[k] + f2g * (2.0 * g20_x_xyyyyyzz[k] - 2.0 * fgz * g21_x_xyyyyyzz[k]) + f2t * gk_xx_yyyyyzz[k];

                    g_xxx_xyyyyzzz[k] = fr * g11_xx_xyyyyzzz[k] + f2g * (2.0 * g20_x_xyyyyzzz[k] - 2.0 * fgz * g21_x_xyyyyzzz[k]) + f2t * gk_xx_yyyyzzz[k];

                    g_xxx_xyyyzzzz[k] = fr * g11_xx_xyyyzzzz[k] + f2g * (2.0 * g20_x_xyyyzzzz[k] - 2.0 * fgz * g21_x_xyyyzzzz[k]) + f2t * gk_xx_yyyzzzz[k];

                    g_xxx_xyyzzzzz[k] = fr * g11_xx_xyyzzzzz[k] + f2g * (2.0 * g20_x_xyyzzzzz[k] - 2.0 * fgz * g21_x_xyyzzzzz[k]) + f2t * gk_xx_yyzzzzz[k];

                    g_xxx_xyzzzzzz[k] = fr * g11_xx_xyzzzzzz[k] + f2g * (2.0 * g20_x_xyzzzzzz[k] - 2.0 * fgz * g21_x_xyzzzzzz[k]) + f2t * gk_xx_yzzzzzz[k];

                    g_xxx_xzzzzzzz[k] = fr * g11_xx_xzzzzzzz[k] + f2g * (2.0 * g20_x_xzzzzzzz[k] - 2.0 * fgz * g21_x_xzzzzzzz[k]) + f2t * gk_xx_zzzzzzz[k];

                    g_xxx_yyyyyyyy[k] = fr * g11_xx_yyyyyyyy[k] + f2g * (2.0 * g20_x_yyyyyyyy[k] - 2.0 * fgz * g21_x_yyyyyyyy[k]);

                    g_xxx_yyyyyyyz[k] = fr * g11_xx_yyyyyyyz[k] + f2g * (2.0 * g20_x_yyyyyyyz[k] - 2.0 * fgz * g21_x_yyyyyyyz[k]);

                    g_xxx_yyyyyyzz[k] = fr * g11_xx_yyyyyyzz[k] + f2g * (2.0 * g20_x_yyyyyyzz[k] - 2.0 * fgz * g21_x_yyyyyyzz[k]);

                    g_xxx_yyyyyzzz[k] = fr * g11_xx_yyyyyzzz[k] + f2g * (2.0 * g20_x_yyyyyzzz[k] - 2.0 * fgz * g21_x_yyyyyzzz[k]);

                    g_xxx_yyyyzzzz[k] = fr * g11_xx_yyyyzzzz[k] + f2g * (2.0 * g20_x_yyyyzzzz[k] - 2.0 * fgz * g21_x_yyyyzzzz[k]);

                    g_xxx_yyyzzzzz[k] = fr * g11_xx_yyyzzzzz[k] + f2g * (2.0 * g20_x_yyyzzzzz[k] - 2.0 * fgz * g21_x_yyyzzzzz[k]);

                    g_xxx_yyzzzzzz[k] = fr * g11_xx_yyzzzzzz[k] + f2g * (2.0 * g20_x_yyzzzzzz[k] - 2.0 * fgz * g21_x_yyzzzzzz[k]);

                    g_xxx_yzzzzzzz[k] = fr * g11_xx_yzzzzzzz[k] + f2g * (2.0 * g20_x_yzzzzzzz[k] - 2.0 * fgz * g21_x_yzzzzzzz[k]);

                    g_xxx_zzzzzzzz[k] = fr * g11_xx_zzzzzzzz[k] + f2g * (2.0 * g20_x_zzzzzzzz[k] - 2.0 * fgz * g21_x_zzzzzzzz[k]);

                    g_xxy_xxxxxxxx[k] = fr * g11_xy_xxxxxxxx[k] + f2g * (g20_y_xxxxxxxx[k] - fgz * g21_y_xxxxxxxx[k]) + 8.0 * f2t * gk_xy_xxxxxxx[k];

                    g_xxy_xxxxxxxy[k] = fr * g11_xy_xxxxxxxy[k] + f2g * (g20_y_xxxxxxxy[k] - fgz * g21_y_xxxxxxxy[k]) + 7.0 * f2t * gk_xy_xxxxxxy[k];

                    g_xxy_xxxxxxxz[k] = fr * g11_xy_xxxxxxxz[k] + f2g * (g20_y_xxxxxxxz[k] - fgz * g21_y_xxxxxxxz[k]) + 7.0 * f2t * gk_xy_xxxxxxz[k];

                    g_xxy_xxxxxxyy[k] = fr * g11_xy_xxxxxxyy[k] + f2g * (g20_y_xxxxxxyy[k] - fgz * g21_y_xxxxxxyy[k]) + 6.0 * f2t * gk_xy_xxxxxyy[k];

                    g_xxy_xxxxxxyz[k] = fr * g11_xy_xxxxxxyz[k] + f2g * (g20_y_xxxxxxyz[k] - fgz * g21_y_xxxxxxyz[k]) + 6.0 * f2t * gk_xy_xxxxxyz[k];

                    g_xxy_xxxxxxzz[k] = fr * g11_xy_xxxxxxzz[k] + f2g * (g20_y_xxxxxxzz[k] - fgz * g21_y_xxxxxxzz[k]) + 6.0 * f2t * gk_xy_xxxxxzz[k];

                    g_xxy_xxxxxyyy[k] = fr * g11_xy_xxxxxyyy[k] + f2g * (g20_y_xxxxxyyy[k] - fgz * g21_y_xxxxxyyy[k]) + 5.0 * f2t * gk_xy_xxxxyyy[k];

                    g_xxy_xxxxxyyz[k] = fr * g11_xy_xxxxxyyz[k] + f2g * (g20_y_xxxxxyyz[k] - fgz * g21_y_xxxxxyyz[k]) + 5.0 * f2t * gk_xy_xxxxyyz[k];

                    g_xxy_xxxxxyzz[k] = fr * g11_xy_xxxxxyzz[k] + f2g * (g20_y_xxxxxyzz[k] - fgz * g21_y_xxxxxyzz[k]) + 5.0 * f2t * gk_xy_xxxxyzz[k];

                    g_xxy_xxxxxzzz[k] = fr * g11_xy_xxxxxzzz[k] + f2g * (g20_y_xxxxxzzz[k] - fgz * g21_y_xxxxxzzz[k]) + 5.0 * f2t * gk_xy_xxxxzzz[k];

                    g_xxy_xxxxyyyy[k] = fr * g11_xy_xxxxyyyy[k] + f2g * (g20_y_xxxxyyyy[k] - fgz * g21_y_xxxxyyyy[k]) + 4.0 * f2t * gk_xy_xxxyyyy[k];

                    g_xxy_xxxxyyyz[k] = fr * g11_xy_xxxxyyyz[k] + f2g * (g20_y_xxxxyyyz[k] - fgz * g21_y_xxxxyyyz[k]) + 4.0 * f2t * gk_xy_xxxyyyz[k];

                    g_xxy_xxxxyyzz[k] = fr * g11_xy_xxxxyyzz[k] + f2g * (g20_y_xxxxyyzz[k] - fgz * g21_y_xxxxyyzz[k]) + 4.0 * f2t * gk_xy_xxxyyzz[k];

                    g_xxy_xxxxyzzz[k] = fr * g11_xy_xxxxyzzz[k] + f2g * (g20_y_xxxxyzzz[k] - fgz * g21_y_xxxxyzzz[k]) + 4.0 * f2t * gk_xy_xxxyzzz[k];

                    g_xxy_xxxxzzzz[k] = fr * g11_xy_xxxxzzzz[k] + f2g * (g20_y_xxxxzzzz[k] - fgz * g21_y_xxxxzzzz[k]) + 4.0 * f2t * gk_xy_xxxzzzz[k];

                    g_xxy_xxxyyyyy[k] = fr * g11_xy_xxxyyyyy[k] + f2g * (g20_y_xxxyyyyy[k] - fgz * g21_y_xxxyyyyy[k]) + 3.0 * f2t * gk_xy_xxyyyyy[k];

                    g_xxy_xxxyyyyz[k] = fr * g11_xy_xxxyyyyz[k] + f2g * (g20_y_xxxyyyyz[k] - fgz * g21_y_xxxyyyyz[k]) + 3.0 * f2t * gk_xy_xxyyyyz[k];

                    g_xxy_xxxyyyzz[k] = fr * g11_xy_xxxyyyzz[k] + f2g * (g20_y_xxxyyyzz[k] - fgz * g21_y_xxxyyyzz[k]) + 3.0 * f2t * gk_xy_xxyyyzz[k];

                    g_xxy_xxxyyzzz[k] = fr * g11_xy_xxxyyzzz[k] + f2g * (g20_y_xxxyyzzz[k] - fgz * g21_y_xxxyyzzz[k]) + 3.0 * f2t * gk_xy_xxyyzzz[k];

                    g_xxy_xxxyzzzz[k] = fr * g11_xy_xxxyzzzz[k] + f2g * (g20_y_xxxyzzzz[k] - fgz * g21_y_xxxyzzzz[k]) + 3.0 * f2t * gk_xy_xxyzzzz[k];

                    g_xxy_xxxzzzzz[k] = fr * g11_xy_xxxzzzzz[k] + f2g * (g20_y_xxxzzzzz[k] - fgz * g21_y_xxxzzzzz[k]) + 3.0 * f2t * gk_xy_xxzzzzz[k];

                    g_xxy_xxyyyyyy[k] = fr * g11_xy_xxyyyyyy[k] + f2g * (g20_y_xxyyyyyy[k] - fgz * g21_y_xxyyyyyy[k]) + 2.0 * f2t * gk_xy_xyyyyyy[k];

                    g_xxy_xxyyyyyz[k] = fr * g11_xy_xxyyyyyz[k] + f2g * (g20_y_xxyyyyyz[k] - fgz * g21_y_xxyyyyyz[k]) + 2.0 * f2t * gk_xy_xyyyyyz[k];

                    g_xxy_xxyyyyzz[k] = fr * g11_xy_xxyyyyzz[k] + f2g * (g20_y_xxyyyyzz[k] - fgz * g21_y_xxyyyyzz[k]) + 2.0 * f2t * gk_xy_xyyyyzz[k];

                    g_xxy_xxyyyzzz[k] = fr * g11_xy_xxyyyzzz[k] + f2g * (g20_y_xxyyyzzz[k] - fgz * g21_y_xxyyyzzz[k]) + 2.0 * f2t * gk_xy_xyyyzzz[k];

                    g_xxy_xxyyzzzz[k] = fr * g11_xy_xxyyzzzz[k] + f2g * (g20_y_xxyyzzzz[k] - fgz * g21_y_xxyyzzzz[k]) + 2.0 * f2t * gk_xy_xyyzzzz[k];

                    g_xxy_xxyzzzzz[k] = fr * g11_xy_xxyzzzzz[k] + f2g * (g20_y_xxyzzzzz[k] - fgz * g21_y_xxyzzzzz[k]) + 2.0 * f2t * gk_xy_xyzzzzz[k];

                    g_xxy_xxzzzzzz[k] = fr * g11_xy_xxzzzzzz[k] + f2g * (g20_y_xxzzzzzz[k] - fgz * g21_y_xxzzzzzz[k]) + 2.0 * f2t * gk_xy_xzzzzzz[k];

                    g_xxy_xyyyyyyy[k] = fr * g11_xy_xyyyyyyy[k] + f2g * (g20_y_xyyyyyyy[k] - fgz * g21_y_xyyyyyyy[k]) + f2t * gk_xy_yyyyyyy[k];

                    g_xxy_xyyyyyyz[k] = fr * g11_xy_xyyyyyyz[k] + f2g * (g20_y_xyyyyyyz[k] - fgz * g21_y_xyyyyyyz[k]) + f2t * gk_xy_yyyyyyz[k];

                    g_xxy_xyyyyyzz[k] = fr * g11_xy_xyyyyyzz[k] + f2g * (g20_y_xyyyyyzz[k] - fgz * g21_y_xyyyyyzz[k]) + f2t * gk_xy_yyyyyzz[k];

                    g_xxy_xyyyyzzz[k] = fr * g11_xy_xyyyyzzz[k] + f2g * (g20_y_xyyyyzzz[k] - fgz * g21_y_xyyyyzzz[k]) + f2t * gk_xy_yyyyzzz[k];

                    g_xxy_xyyyzzzz[k] = fr * g11_xy_xyyyzzzz[k] + f2g * (g20_y_xyyyzzzz[k] - fgz * g21_y_xyyyzzzz[k]) + f2t * gk_xy_yyyzzzz[k];

                    g_xxy_xyyzzzzz[k] = fr * g11_xy_xyyzzzzz[k] + f2g * (g20_y_xyyzzzzz[k] - fgz * g21_y_xyyzzzzz[k]) + f2t * gk_xy_yyzzzzz[k];

                    g_xxy_xyzzzzzz[k] = fr * g11_xy_xyzzzzzz[k] + f2g * (g20_y_xyzzzzzz[k] - fgz * g21_y_xyzzzzzz[k]) + f2t * gk_xy_yzzzzzz[k];

                    g_xxy_xzzzzzzz[k] = fr * g11_xy_xzzzzzzz[k] + f2g * (g20_y_xzzzzzzz[k] - fgz * g21_y_xzzzzzzz[k]) + f2t * gk_xy_zzzzzzz[k];

                    g_xxy_yyyyyyyy[k] = fr * g11_xy_yyyyyyyy[k] + f2g * (g20_y_yyyyyyyy[k] - fgz * g21_y_yyyyyyyy[k]);

                    g_xxy_yyyyyyyz[k] = fr * g11_xy_yyyyyyyz[k] + f2g * (g20_y_yyyyyyyz[k] - fgz * g21_y_yyyyyyyz[k]);

                    g_xxy_yyyyyyzz[k] = fr * g11_xy_yyyyyyzz[k] + f2g * (g20_y_yyyyyyzz[k] - fgz * g21_y_yyyyyyzz[k]);

                    g_xxy_yyyyyzzz[k] = fr * g11_xy_yyyyyzzz[k] + f2g * (g20_y_yyyyyzzz[k] - fgz * g21_y_yyyyyzzz[k]);

                    g_xxy_yyyyzzzz[k] = fr * g11_xy_yyyyzzzz[k] + f2g * (g20_y_yyyyzzzz[k] - fgz * g21_y_yyyyzzzz[k]);

                    g_xxy_yyyzzzzz[k] = fr * g11_xy_yyyzzzzz[k] + f2g * (g20_y_yyyzzzzz[k] - fgz * g21_y_yyyzzzzz[k]);

                    g_xxy_yyzzzzzz[k] = fr * g11_xy_yyzzzzzz[k] + f2g * (g20_y_yyzzzzzz[k] - fgz * g21_y_yyzzzzzz[k]);

                    g_xxy_yzzzzzzz[k] = fr * g11_xy_yzzzzzzz[k] + f2g * (g20_y_yzzzzzzz[k] - fgz * g21_y_yzzzzzzz[k]);

                    g_xxy_zzzzzzzz[k] = fr * g11_xy_zzzzzzzz[k] + f2g * (g20_y_zzzzzzzz[k] - fgz * g21_y_zzzzzzzz[k]);

                    g_xxz_xxxxxxxx[k] = fr * g11_xz_xxxxxxxx[k] + f2g * (g20_z_xxxxxxxx[k] - fgz * g21_z_xxxxxxxx[k]) + 8.0 * f2t * gk_xz_xxxxxxx[k];

                    g_xxz_xxxxxxxy[k] = fr * g11_xz_xxxxxxxy[k] + f2g * (g20_z_xxxxxxxy[k] - fgz * g21_z_xxxxxxxy[k]) + 7.0 * f2t * gk_xz_xxxxxxy[k];

                    g_xxz_xxxxxxxz[k] = fr * g11_xz_xxxxxxxz[k] + f2g * (g20_z_xxxxxxxz[k] - fgz * g21_z_xxxxxxxz[k]) + 7.0 * f2t * gk_xz_xxxxxxz[k];

                    g_xxz_xxxxxxyy[k] = fr * g11_xz_xxxxxxyy[k] + f2g * (g20_z_xxxxxxyy[k] - fgz * g21_z_xxxxxxyy[k]) + 6.0 * f2t * gk_xz_xxxxxyy[k];

                    g_xxz_xxxxxxyz[k] = fr * g11_xz_xxxxxxyz[k] + f2g * (g20_z_xxxxxxyz[k] - fgz * g21_z_xxxxxxyz[k]) + 6.0 * f2t * gk_xz_xxxxxyz[k];

                    g_xxz_xxxxxxzz[k] = fr * g11_xz_xxxxxxzz[k] + f2g * (g20_z_xxxxxxzz[k] - fgz * g21_z_xxxxxxzz[k]) + 6.0 * f2t * gk_xz_xxxxxzz[k];

                    g_xxz_xxxxxyyy[k] = fr * g11_xz_xxxxxyyy[k] + f2g * (g20_z_xxxxxyyy[k] - fgz * g21_z_xxxxxyyy[k]) + 5.0 * f2t * gk_xz_xxxxyyy[k];

                    g_xxz_xxxxxyyz[k] = fr * g11_xz_xxxxxyyz[k] + f2g * (g20_z_xxxxxyyz[k] - fgz * g21_z_xxxxxyyz[k]) + 5.0 * f2t * gk_xz_xxxxyyz[k];

                    g_xxz_xxxxxyzz[k] = fr * g11_xz_xxxxxyzz[k] + f2g * (g20_z_xxxxxyzz[k] - fgz * g21_z_xxxxxyzz[k]) + 5.0 * f2t * gk_xz_xxxxyzz[k];

                    g_xxz_xxxxxzzz[k] = fr * g11_xz_xxxxxzzz[k] + f2g * (g20_z_xxxxxzzz[k] - fgz * g21_z_xxxxxzzz[k]) + 5.0 * f2t * gk_xz_xxxxzzz[k];

                    g_xxz_xxxxyyyy[k] = fr * g11_xz_xxxxyyyy[k] + f2g * (g20_z_xxxxyyyy[k] - fgz * g21_z_xxxxyyyy[k]) + 4.0 * f2t * gk_xz_xxxyyyy[k];

                    g_xxz_xxxxyyyz[k] = fr * g11_xz_xxxxyyyz[k] + f2g * (g20_z_xxxxyyyz[k] - fgz * g21_z_xxxxyyyz[k]) + 4.0 * f2t * gk_xz_xxxyyyz[k];

                    g_xxz_xxxxyyzz[k] = fr * g11_xz_xxxxyyzz[k] + f2g * (g20_z_xxxxyyzz[k] - fgz * g21_z_xxxxyyzz[k]) + 4.0 * f2t * gk_xz_xxxyyzz[k];

                    g_xxz_xxxxyzzz[k] = fr * g11_xz_xxxxyzzz[k] + f2g * (g20_z_xxxxyzzz[k] - fgz * g21_z_xxxxyzzz[k]) + 4.0 * f2t * gk_xz_xxxyzzz[k];

                    g_xxz_xxxxzzzz[k] = fr * g11_xz_xxxxzzzz[k] + f2g * (g20_z_xxxxzzzz[k] - fgz * g21_z_xxxxzzzz[k]) + 4.0 * f2t * gk_xz_xxxzzzz[k];

                    g_xxz_xxxyyyyy[k] = fr * g11_xz_xxxyyyyy[k] + f2g * (g20_z_xxxyyyyy[k] - fgz * g21_z_xxxyyyyy[k]) + 3.0 * f2t * gk_xz_xxyyyyy[k];

                    g_xxz_xxxyyyyz[k] = fr * g11_xz_xxxyyyyz[k] + f2g * (g20_z_xxxyyyyz[k] - fgz * g21_z_xxxyyyyz[k]) + 3.0 * f2t * gk_xz_xxyyyyz[k];

                    g_xxz_xxxyyyzz[k] = fr * g11_xz_xxxyyyzz[k] + f2g * (g20_z_xxxyyyzz[k] - fgz * g21_z_xxxyyyzz[k]) + 3.0 * f2t * gk_xz_xxyyyzz[k];

                    g_xxz_xxxyyzzz[k] = fr * g11_xz_xxxyyzzz[k] + f2g * (g20_z_xxxyyzzz[k] - fgz * g21_z_xxxyyzzz[k]) + 3.0 * f2t * gk_xz_xxyyzzz[k];

                    g_xxz_xxxyzzzz[k] = fr * g11_xz_xxxyzzzz[k] + f2g * (g20_z_xxxyzzzz[k] - fgz * g21_z_xxxyzzzz[k]) + 3.0 * f2t * gk_xz_xxyzzzz[k];

                    g_xxz_xxxzzzzz[k] = fr * g11_xz_xxxzzzzz[k] + f2g * (g20_z_xxxzzzzz[k] - fgz * g21_z_xxxzzzzz[k]) + 3.0 * f2t * gk_xz_xxzzzzz[k];

                    g_xxz_xxyyyyyy[k] = fr * g11_xz_xxyyyyyy[k] + f2g * (g20_z_xxyyyyyy[k] - fgz * g21_z_xxyyyyyy[k]) + 2.0 * f2t * gk_xz_xyyyyyy[k];

                    g_xxz_xxyyyyyz[k] = fr * g11_xz_xxyyyyyz[k] + f2g * (g20_z_xxyyyyyz[k] - fgz * g21_z_xxyyyyyz[k]) + 2.0 * f2t * gk_xz_xyyyyyz[k];

                    g_xxz_xxyyyyzz[k] = fr * g11_xz_xxyyyyzz[k] + f2g * (g20_z_xxyyyyzz[k] - fgz * g21_z_xxyyyyzz[k]) + 2.0 * f2t * gk_xz_xyyyyzz[k];

                    g_xxz_xxyyyzzz[k] = fr * g11_xz_xxyyyzzz[k] + f2g * (g20_z_xxyyyzzz[k] - fgz * g21_z_xxyyyzzz[k]) + 2.0 * f2t * gk_xz_xyyyzzz[k];

                    g_xxz_xxyyzzzz[k] = fr * g11_xz_xxyyzzzz[k] + f2g * (g20_z_xxyyzzzz[k] - fgz * g21_z_xxyyzzzz[k]) + 2.0 * f2t * gk_xz_xyyzzzz[k];

                    g_xxz_xxyzzzzz[k] = fr * g11_xz_xxyzzzzz[k] + f2g * (g20_z_xxyzzzzz[k] - fgz * g21_z_xxyzzzzz[k]) + 2.0 * f2t * gk_xz_xyzzzzz[k];

                    g_xxz_xxzzzzzz[k] = fr * g11_xz_xxzzzzzz[k] + f2g * (g20_z_xxzzzzzz[k] - fgz * g21_z_xxzzzzzz[k]) + 2.0 * f2t * gk_xz_xzzzzzz[k];

                    g_xxz_xyyyyyyy[k] = fr * g11_xz_xyyyyyyy[k] + f2g * (g20_z_xyyyyyyy[k] - fgz * g21_z_xyyyyyyy[k]) + f2t * gk_xz_yyyyyyy[k];

                    g_xxz_xyyyyyyz[k] = fr * g11_xz_xyyyyyyz[k] + f2g * (g20_z_xyyyyyyz[k] - fgz * g21_z_xyyyyyyz[k]) + f2t * gk_xz_yyyyyyz[k];

                    g_xxz_xyyyyyzz[k] = fr * g11_xz_xyyyyyzz[k] + f2g * (g20_z_xyyyyyzz[k] - fgz * g21_z_xyyyyyzz[k]) + f2t * gk_xz_yyyyyzz[k];

                    g_xxz_xyyyyzzz[k] = fr * g11_xz_xyyyyzzz[k] + f2g * (g20_z_xyyyyzzz[k] - fgz * g21_z_xyyyyzzz[k]) + f2t * gk_xz_yyyyzzz[k];

                    g_xxz_xyyyzzzz[k] = fr * g11_xz_xyyyzzzz[k] + f2g * (g20_z_xyyyzzzz[k] - fgz * g21_z_xyyyzzzz[k]) + f2t * gk_xz_yyyzzzz[k];

                    g_xxz_xyyzzzzz[k] = fr * g11_xz_xyyzzzzz[k] + f2g * (g20_z_xyyzzzzz[k] - fgz * g21_z_xyyzzzzz[k]) + f2t * gk_xz_yyzzzzz[k];

                    g_xxz_xyzzzzzz[k] = fr * g11_xz_xyzzzzzz[k] + f2g * (g20_z_xyzzzzzz[k] - fgz * g21_z_xyzzzzzz[k]) + f2t * gk_xz_yzzzzzz[k];

                    g_xxz_xzzzzzzz[k] = fr * g11_xz_xzzzzzzz[k] + f2g * (g20_z_xzzzzzzz[k] - fgz * g21_z_xzzzzzzz[k]) + f2t * gk_xz_zzzzzzz[k];

                    g_xxz_yyyyyyyy[k] = fr * g11_xz_yyyyyyyy[k] + f2g * (g20_z_yyyyyyyy[k] - fgz * g21_z_yyyyyyyy[k]);

                    g_xxz_yyyyyyyz[k] = fr * g11_xz_yyyyyyyz[k] + f2g * (g20_z_yyyyyyyz[k] - fgz * g21_z_yyyyyyyz[k]);

                    g_xxz_yyyyyyzz[k] = fr * g11_xz_yyyyyyzz[k] + f2g * (g20_z_yyyyyyzz[k] - fgz * g21_z_yyyyyyzz[k]);

                    g_xxz_yyyyyzzz[k] = fr * g11_xz_yyyyyzzz[k] + f2g * (g20_z_yyyyyzzz[k] - fgz * g21_z_yyyyyzzz[k]);

                    g_xxz_yyyyzzzz[k] = fr * g11_xz_yyyyzzzz[k] + f2g * (g20_z_yyyyzzzz[k] - fgz * g21_z_yyyyzzzz[k]);

                    g_xxz_yyyzzzzz[k] = fr * g11_xz_yyyzzzzz[k] + f2g * (g20_z_yyyzzzzz[k] - fgz * g21_z_yyyzzzzz[k]);

                    g_xxz_yyzzzzzz[k] = fr * g11_xz_yyzzzzzz[k] + f2g * (g20_z_yyzzzzzz[k] - fgz * g21_z_yyzzzzzz[k]);

                    g_xxz_yzzzzzzz[k] = fr * g11_xz_yzzzzzzz[k] + f2g * (g20_z_yzzzzzzz[k] - fgz * g21_z_yzzzzzzz[k]);

                    g_xxz_zzzzzzzz[k] = fr * g11_xz_zzzzzzzz[k] + f2g * (g20_z_zzzzzzzz[k] - fgz * g21_z_zzzzzzzz[k]);

                    g_xyy_xxxxxxxx[k] = fr * g11_yy_xxxxxxxx[k] + 8.0 * f2t * gk_yy_xxxxxxx[k];

                    g_xyy_xxxxxxxy[k] = fr * g11_yy_xxxxxxxy[k] + 7.0 * f2t * gk_yy_xxxxxxy[k];

                    g_xyy_xxxxxxxz[k] = fr * g11_yy_xxxxxxxz[k] + 7.0 * f2t * gk_yy_xxxxxxz[k];

                    g_xyy_xxxxxxyy[k] = fr * g11_yy_xxxxxxyy[k] + 6.0 * f2t * gk_yy_xxxxxyy[k];

                    g_xyy_xxxxxxyz[k] = fr * g11_yy_xxxxxxyz[k] + 6.0 * f2t * gk_yy_xxxxxyz[k];

                    g_xyy_xxxxxxzz[k] = fr * g11_yy_xxxxxxzz[k] + 6.0 * f2t * gk_yy_xxxxxzz[k];

                    g_xyy_xxxxxyyy[k] = fr * g11_yy_xxxxxyyy[k] + 5.0 * f2t * gk_yy_xxxxyyy[k];

                    g_xyy_xxxxxyyz[k] = fr * g11_yy_xxxxxyyz[k] + 5.0 * f2t * gk_yy_xxxxyyz[k];

                    g_xyy_xxxxxyzz[k] = fr * g11_yy_xxxxxyzz[k] + 5.0 * f2t * gk_yy_xxxxyzz[k];

                    g_xyy_xxxxxzzz[k] = fr * g11_yy_xxxxxzzz[k] + 5.0 * f2t * gk_yy_xxxxzzz[k];

                    g_xyy_xxxxyyyy[k] = fr * g11_yy_xxxxyyyy[k] + 4.0 * f2t * gk_yy_xxxyyyy[k];

                    g_xyy_xxxxyyyz[k] = fr * g11_yy_xxxxyyyz[k] + 4.0 * f2t * gk_yy_xxxyyyz[k];

                    g_xyy_xxxxyyzz[k] = fr * g11_yy_xxxxyyzz[k] + 4.0 * f2t * gk_yy_xxxyyzz[k];

                    g_xyy_xxxxyzzz[k] = fr * g11_yy_xxxxyzzz[k] + 4.0 * f2t * gk_yy_xxxyzzz[k];

                    g_xyy_xxxxzzzz[k] = fr * g11_yy_xxxxzzzz[k] + 4.0 * f2t * gk_yy_xxxzzzz[k];

                    g_xyy_xxxyyyyy[k] = fr * g11_yy_xxxyyyyy[k] + 3.0 * f2t * gk_yy_xxyyyyy[k];

                    g_xyy_xxxyyyyz[k] = fr * g11_yy_xxxyyyyz[k] + 3.0 * f2t * gk_yy_xxyyyyz[k];

                    g_xyy_xxxyyyzz[k] = fr * g11_yy_xxxyyyzz[k] + 3.0 * f2t * gk_yy_xxyyyzz[k];

                    g_xyy_xxxyyzzz[k] = fr * g11_yy_xxxyyzzz[k] + 3.0 * f2t * gk_yy_xxyyzzz[k];

                    g_xyy_xxxyzzzz[k] = fr * g11_yy_xxxyzzzz[k] + 3.0 * f2t * gk_yy_xxyzzzz[k];

                    g_xyy_xxxzzzzz[k] = fr * g11_yy_xxxzzzzz[k] + 3.0 * f2t * gk_yy_xxzzzzz[k];

                    g_xyy_xxyyyyyy[k] = fr * g11_yy_xxyyyyyy[k] + 2.0 * f2t * gk_yy_xyyyyyy[k];

                    g_xyy_xxyyyyyz[k] = fr * g11_yy_xxyyyyyz[k] + 2.0 * f2t * gk_yy_xyyyyyz[k];

                    g_xyy_xxyyyyzz[k] = fr * g11_yy_xxyyyyzz[k] + 2.0 * f2t * gk_yy_xyyyyzz[k];

                    g_xyy_xxyyyzzz[k] = fr * g11_yy_xxyyyzzz[k] + 2.0 * f2t * gk_yy_xyyyzzz[k];

                    g_xyy_xxyyzzzz[k] = fr * g11_yy_xxyyzzzz[k] + 2.0 * f2t * gk_yy_xyyzzzz[k];

                    g_xyy_xxyzzzzz[k] = fr * g11_yy_xxyzzzzz[k] + 2.0 * f2t * gk_yy_xyzzzzz[k];

                    g_xyy_xxzzzzzz[k] = fr * g11_yy_xxzzzzzz[k] + 2.0 * f2t * gk_yy_xzzzzzz[k];

                    g_xyy_xyyyyyyy[k] = fr * g11_yy_xyyyyyyy[k] + f2t * gk_yy_yyyyyyy[k];

                    g_xyy_xyyyyyyz[k] = fr * g11_yy_xyyyyyyz[k] + f2t * gk_yy_yyyyyyz[k];

                    g_xyy_xyyyyyzz[k] = fr * g11_yy_xyyyyyzz[k] + f2t * gk_yy_yyyyyzz[k];

                    g_xyy_xyyyyzzz[k] = fr * g11_yy_xyyyyzzz[k] + f2t * gk_yy_yyyyzzz[k];

                    g_xyy_xyyyzzzz[k] = fr * g11_yy_xyyyzzzz[k] + f2t * gk_yy_yyyzzzz[k];

                    g_xyy_xyyzzzzz[k] = fr * g11_yy_xyyzzzzz[k] + f2t * gk_yy_yyzzzzz[k];

                    g_xyy_xyzzzzzz[k] = fr * g11_yy_xyzzzzzz[k] + f2t * gk_yy_yzzzzzz[k];

                    g_xyy_xzzzzzzz[k] = fr * g11_yy_xzzzzzzz[k] + f2t * gk_yy_zzzzzzz[k];

                    g_xyy_yyyyyyyy[k] = fr * g11_yy_yyyyyyyy[k];

                    g_xyy_yyyyyyyz[k] = fr * g11_yy_yyyyyyyz[k];

                    g_xyy_yyyyyyzz[k] = fr * g11_yy_yyyyyyzz[k];

                    g_xyy_yyyyyzzz[k] = fr * g11_yy_yyyyyzzz[k];

                    g_xyy_yyyyzzzz[k] = fr * g11_yy_yyyyzzzz[k];

                    g_xyy_yyyzzzzz[k] = fr * g11_yy_yyyzzzzz[k];

                    g_xyy_yyzzzzzz[k] = fr * g11_yy_yyzzzzzz[k];

                    g_xyy_yzzzzzzz[k] = fr * g11_yy_yzzzzzzz[k];

                    g_xyy_zzzzzzzz[k] = fr * g11_yy_zzzzzzzz[k];

                    g_xyz_xxxxxxxx[k] = fr * g11_yz_xxxxxxxx[k] + 8.0 * f2t * gk_yz_xxxxxxx[k];

                    g_xyz_xxxxxxxy[k] = fr * g11_yz_xxxxxxxy[k] + 7.0 * f2t * gk_yz_xxxxxxy[k];

                    g_xyz_xxxxxxxz[k] = fr * g11_yz_xxxxxxxz[k] + 7.0 * f2t * gk_yz_xxxxxxz[k];

                    g_xyz_xxxxxxyy[k] = fr * g11_yz_xxxxxxyy[k] + 6.0 * f2t * gk_yz_xxxxxyy[k];

                    g_xyz_xxxxxxyz[k] = fr * g11_yz_xxxxxxyz[k] + 6.0 * f2t * gk_yz_xxxxxyz[k];

                    g_xyz_xxxxxxzz[k] = fr * g11_yz_xxxxxxzz[k] + 6.0 * f2t * gk_yz_xxxxxzz[k];

                    g_xyz_xxxxxyyy[k] = fr * g11_yz_xxxxxyyy[k] + 5.0 * f2t * gk_yz_xxxxyyy[k];

                    g_xyz_xxxxxyyz[k] = fr * g11_yz_xxxxxyyz[k] + 5.0 * f2t * gk_yz_xxxxyyz[k];

                    g_xyz_xxxxxyzz[k] = fr * g11_yz_xxxxxyzz[k] + 5.0 * f2t * gk_yz_xxxxyzz[k];

                    g_xyz_xxxxxzzz[k] = fr * g11_yz_xxxxxzzz[k] + 5.0 * f2t * gk_yz_xxxxzzz[k];

                    g_xyz_xxxxyyyy[k] = fr * g11_yz_xxxxyyyy[k] + 4.0 * f2t * gk_yz_xxxyyyy[k];

                    g_xyz_xxxxyyyz[k] = fr * g11_yz_xxxxyyyz[k] + 4.0 * f2t * gk_yz_xxxyyyz[k];

                    g_xyz_xxxxyyzz[k] = fr * g11_yz_xxxxyyzz[k] + 4.0 * f2t * gk_yz_xxxyyzz[k];

                    g_xyz_xxxxyzzz[k] = fr * g11_yz_xxxxyzzz[k] + 4.0 * f2t * gk_yz_xxxyzzz[k];

                    g_xyz_xxxxzzzz[k] = fr * g11_yz_xxxxzzzz[k] + 4.0 * f2t * gk_yz_xxxzzzz[k];

                    g_xyz_xxxyyyyy[k] = fr * g11_yz_xxxyyyyy[k] + 3.0 * f2t * gk_yz_xxyyyyy[k];

                    g_xyz_xxxyyyyz[k] = fr * g11_yz_xxxyyyyz[k] + 3.0 * f2t * gk_yz_xxyyyyz[k];

                    g_xyz_xxxyyyzz[k] = fr * g11_yz_xxxyyyzz[k] + 3.0 * f2t * gk_yz_xxyyyzz[k];

                    g_xyz_xxxyyzzz[k] = fr * g11_yz_xxxyyzzz[k] + 3.0 * f2t * gk_yz_xxyyzzz[k];

                    g_xyz_xxxyzzzz[k] = fr * g11_yz_xxxyzzzz[k] + 3.0 * f2t * gk_yz_xxyzzzz[k];

                    g_xyz_xxxzzzzz[k] = fr * g11_yz_xxxzzzzz[k] + 3.0 * f2t * gk_yz_xxzzzzz[k];

                    g_xyz_xxyyyyyy[k] = fr * g11_yz_xxyyyyyy[k] + 2.0 * f2t * gk_yz_xyyyyyy[k];

                    g_xyz_xxyyyyyz[k] = fr * g11_yz_xxyyyyyz[k] + 2.0 * f2t * gk_yz_xyyyyyz[k];

                    g_xyz_xxyyyyzz[k] = fr * g11_yz_xxyyyyzz[k] + 2.0 * f2t * gk_yz_xyyyyzz[k];

                    g_xyz_xxyyyzzz[k] = fr * g11_yz_xxyyyzzz[k] + 2.0 * f2t * gk_yz_xyyyzzz[k];

                    g_xyz_xxyyzzzz[k] = fr * g11_yz_xxyyzzzz[k] + 2.0 * f2t * gk_yz_xyyzzzz[k];

                    g_xyz_xxyzzzzz[k] = fr * g11_yz_xxyzzzzz[k] + 2.0 * f2t * gk_yz_xyzzzzz[k];

                    g_xyz_xxzzzzzz[k] = fr * g11_yz_xxzzzzzz[k] + 2.0 * f2t * gk_yz_xzzzzzz[k];

                    g_xyz_xyyyyyyy[k] = fr * g11_yz_xyyyyyyy[k] + f2t * gk_yz_yyyyyyy[k];

                    g_xyz_xyyyyyyz[k] = fr * g11_yz_xyyyyyyz[k] + f2t * gk_yz_yyyyyyz[k];

                    g_xyz_xyyyyyzz[k] = fr * g11_yz_xyyyyyzz[k] + f2t * gk_yz_yyyyyzz[k];

                    g_xyz_xyyyyzzz[k] = fr * g11_yz_xyyyyzzz[k] + f2t * gk_yz_yyyyzzz[k];

                    g_xyz_xyyyzzzz[k] = fr * g11_yz_xyyyzzzz[k] + f2t * gk_yz_yyyzzzz[k];

                    g_xyz_xyyzzzzz[k] = fr * g11_yz_xyyzzzzz[k] + f2t * gk_yz_yyzzzzz[k];

                    g_xyz_xyzzzzzz[k] = fr * g11_yz_xyzzzzzz[k] + f2t * gk_yz_yzzzzzz[k];

                    g_xyz_xzzzzzzz[k] = fr * g11_yz_xzzzzzzz[k] + f2t * gk_yz_zzzzzzz[k];

                    g_xyz_yyyyyyyy[k] = fr * g11_yz_yyyyyyyy[k];

                    g_xyz_yyyyyyyz[k] = fr * g11_yz_yyyyyyyz[k];

                    g_xyz_yyyyyyzz[k] = fr * g11_yz_yyyyyyzz[k];

                    g_xyz_yyyyyzzz[k] = fr * g11_yz_yyyyyzzz[k];

                    g_xyz_yyyyzzzz[k] = fr * g11_yz_yyyyzzzz[k];

                    g_xyz_yyyzzzzz[k] = fr * g11_yz_yyyzzzzz[k];

                    g_xyz_yyzzzzzz[k] = fr * g11_yz_yyzzzzzz[k];

                    g_xyz_yzzzzzzz[k] = fr * g11_yz_yzzzzzzz[k];

                    g_xyz_zzzzzzzz[k] = fr * g11_yz_zzzzzzzz[k];

                    g_xzz_xxxxxxxx[k] = fr * g11_zz_xxxxxxxx[k] + 8.0 * f2t * gk_zz_xxxxxxx[k];

                    g_xzz_xxxxxxxy[k] = fr * g11_zz_xxxxxxxy[k] + 7.0 * f2t * gk_zz_xxxxxxy[k];

                    g_xzz_xxxxxxxz[k] = fr * g11_zz_xxxxxxxz[k] + 7.0 * f2t * gk_zz_xxxxxxz[k];

                    g_xzz_xxxxxxyy[k] = fr * g11_zz_xxxxxxyy[k] + 6.0 * f2t * gk_zz_xxxxxyy[k];

                    g_xzz_xxxxxxyz[k] = fr * g11_zz_xxxxxxyz[k] + 6.0 * f2t * gk_zz_xxxxxyz[k];

                    g_xzz_xxxxxxzz[k] = fr * g11_zz_xxxxxxzz[k] + 6.0 * f2t * gk_zz_xxxxxzz[k];

                    g_xzz_xxxxxyyy[k] = fr * g11_zz_xxxxxyyy[k] + 5.0 * f2t * gk_zz_xxxxyyy[k];

                    g_xzz_xxxxxyyz[k] = fr * g11_zz_xxxxxyyz[k] + 5.0 * f2t * gk_zz_xxxxyyz[k];

                    g_xzz_xxxxxyzz[k] = fr * g11_zz_xxxxxyzz[k] + 5.0 * f2t * gk_zz_xxxxyzz[k];

                    g_xzz_xxxxxzzz[k] = fr * g11_zz_xxxxxzzz[k] + 5.0 * f2t * gk_zz_xxxxzzz[k];

                    g_xzz_xxxxyyyy[k] = fr * g11_zz_xxxxyyyy[k] + 4.0 * f2t * gk_zz_xxxyyyy[k];

                    g_xzz_xxxxyyyz[k] = fr * g11_zz_xxxxyyyz[k] + 4.0 * f2t * gk_zz_xxxyyyz[k];

                    g_xzz_xxxxyyzz[k] = fr * g11_zz_xxxxyyzz[k] + 4.0 * f2t * gk_zz_xxxyyzz[k];

                    g_xzz_xxxxyzzz[k] = fr * g11_zz_xxxxyzzz[k] + 4.0 * f2t * gk_zz_xxxyzzz[k];

                    g_xzz_xxxxzzzz[k] = fr * g11_zz_xxxxzzzz[k] + 4.0 * f2t * gk_zz_xxxzzzz[k];

                    g_xzz_xxxyyyyy[k] = fr * g11_zz_xxxyyyyy[k] + 3.0 * f2t * gk_zz_xxyyyyy[k];

                    g_xzz_xxxyyyyz[k] = fr * g11_zz_xxxyyyyz[k] + 3.0 * f2t * gk_zz_xxyyyyz[k];

                    g_xzz_xxxyyyzz[k] = fr * g11_zz_xxxyyyzz[k] + 3.0 * f2t * gk_zz_xxyyyzz[k];

                    g_xzz_xxxyyzzz[k] = fr * g11_zz_xxxyyzzz[k] + 3.0 * f2t * gk_zz_xxyyzzz[k];

                    g_xzz_xxxyzzzz[k] = fr * g11_zz_xxxyzzzz[k] + 3.0 * f2t * gk_zz_xxyzzzz[k];

                    g_xzz_xxxzzzzz[k] = fr * g11_zz_xxxzzzzz[k] + 3.0 * f2t * gk_zz_xxzzzzz[k];

                    g_xzz_xxyyyyyy[k] = fr * g11_zz_xxyyyyyy[k] + 2.0 * f2t * gk_zz_xyyyyyy[k];

                    g_xzz_xxyyyyyz[k] = fr * g11_zz_xxyyyyyz[k] + 2.0 * f2t * gk_zz_xyyyyyz[k];

                    g_xzz_xxyyyyzz[k] = fr * g11_zz_xxyyyyzz[k] + 2.0 * f2t * gk_zz_xyyyyzz[k];

                    g_xzz_xxyyyzzz[k] = fr * g11_zz_xxyyyzzz[k] + 2.0 * f2t * gk_zz_xyyyzzz[k];

                    g_xzz_xxyyzzzz[k] = fr * g11_zz_xxyyzzzz[k] + 2.0 * f2t * gk_zz_xyyzzzz[k];

                    g_xzz_xxyzzzzz[k] = fr * g11_zz_xxyzzzzz[k] + 2.0 * f2t * gk_zz_xyzzzzz[k];

                    g_xzz_xxzzzzzz[k] = fr * g11_zz_xxzzzzzz[k] + 2.0 * f2t * gk_zz_xzzzzzz[k];

                    g_xzz_xyyyyyyy[k] = fr * g11_zz_xyyyyyyy[k] + f2t * gk_zz_yyyyyyy[k];

                    g_xzz_xyyyyyyz[k] = fr * g11_zz_xyyyyyyz[k] + f2t * gk_zz_yyyyyyz[k];

                    g_xzz_xyyyyyzz[k] = fr * g11_zz_xyyyyyzz[k] + f2t * gk_zz_yyyyyzz[k];

                    g_xzz_xyyyyzzz[k] = fr * g11_zz_xyyyyzzz[k] + f2t * gk_zz_yyyyzzz[k];

                    g_xzz_xyyyzzzz[k] = fr * g11_zz_xyyyzzzz[k] + f2t * gk_zz_yyyzzzz[k];

                    g_xzz_xyyzzzzz[k] = fr * g11_zz_xyyzzzzz[k] + f2t * gk_zz_yyzzzzz[k];

                    g_xzz_xyzzzzzz[k] = fr * g11_zz_xyzzzzzz[k] + f2t * gk_zz_yzzzzzz[k];

                    g_xzz_xzzzzzzz[k] = fr * g11_zz_xzzzzzzz[k] + f2t * gk_zz_zzzzzzz[k];

                    g_xzz_yyyyyyyy[k] = fr * g11_zz_yyyyyyyy[k];

                    g_xzz_yyyyyyyz[k] = fr * g11_zz_yyyyyyyz[k];

                    g_xzz_yyyyyyzz[k] = fr * g11_zz_yyyyyyzz[k];

                    g_xzz_yyyyyzzz[k] = fr * g11_zz_yyyyyzzz[k];

                    g_xzz_yyyyzzzz[k] = fr * g11_zz_yyyyzzzz[k];

                    g_xzz_yyyzzzzz[k] = fr * g11_zz_yyyzzzzz[k];

                    g_xzz_yyzzzzzz[k] = fr * g11_zz_yyzzzzzz[k];

                    g_xzz_yzzzzzzz[k] = fr * g11_zz_yzzzzzzz[k];

                    g_xzz_zzzzzzzz[k] = fr * g11_zz_zzzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyy_xxxxxxxx[k] = fr * g11_yy_xxxxxxxx[k] + f2g * (2.0 * g20_y_xxxxxxxx[k] - 2.0 * fgz * g21_y_xxxxxxxx[k]);

                    g_yyy_xxxxxxxy[k] = fr * g11_yy_xxxxxxxy[k] + f2g * (2.0 * g20_y_xxxxxxxy[k] - 2.0 * fgz * g21_y_xxxxxxxy[k]) + f2t * gk_yy_xxxxxxx[k];

                    g_yyy_xxxxxxxz[k] = fr * g11_yy_xxxxxxxz[k] + f2g * (2.0 * g20_y_xxxxxxxz[k] - 2.0 * fgz * g21_y_xxxxxxxz[k]);

                    g_yyy_xxxxxxyy[k] = fr * g11_yy_xxxxxxyy[k] + f2g * (2.0 * g20_y_xxxxxxyy[k] - 2.0 * fgz * g21_y_xxxxxxyy[k]) + 2.0 * f2t * gk_yy_xxxxxxy[k];

                    g_yyy_xxxxxxyz[k] = fr * g11_yy_xxxxxxyz[k] + f2g * (2.0 * g20_y_xxxxxxyz[k] - 2.0 * fgz * g21_y_xxxxxxyz[k]) + f2t * gk_yy_xxxxxxz[k];

                    g_yyy_xxxxxxzz[k] = fr * g11_yy_xxxxxxzz[k] + f2g * (2.0 * g20_y_xxxxxxzz[k] - 2.0 * fgz * g21_y_xxxxxxzz[k]);

                    g_yyy_xxxxxyyy[k] = fr * g11_yy_xxxxxyyy[k] + f2g * (2.0 * g20_y_xxxxxyyy[k] - 2.0 * fgz * g21_y_xxxxxyyy[k]) + 3.0 * f2t * gk_yy_xxxxxyy[k];

                    g_yyy_xxxxxyyz[k] = fr * g11_yy_xxxxxyyz[k] + f2g * (2.0 * g20_y_xxxxxyyz[k] - 2.0 * fgz * g21_y_xxxxxyyz[k]) + 2.0 * f2t * gk_yy_xxxxxyz[k];

                    g_yyy_xxxxxyzz[k] = fr * g11_yy_xxxxxyzz[k] + f2g * (2.0 * g20_y_xxxxxyzz[k] - 2.0 * fgz * g21_y_xxxxxyzz[k]) + f2t * gk_yy_xxxxxzz[k];

                    g_yyy_xxxxxzzz[k] = fr * g11_yy_xxxxxzzz[k] + f2g * (2.0 * g20_y_xxxxxzzz[k] - 2.0 * fgz * g21_y_xxxxxzzz[k]);

                    g_yyy_xxxxyyyy[k] = fr * g11_yy_xxxxyyyy[k] + f2g * (2.0 * g20_y_xxxxyyyy[k] - 2.0 * fgz * g21_y_xxxxyyyy[k]) + 4.0 * f2t * gk_yy_xxxxyyy[k];

                    g_yyy_xxxxyyyz[k] = fr * g11_yy_xxxxyyyz[k] + f2g * (2.0 * g20_y_xxxxyyyz[k] - 2.0 * fgz * g21_y_xxxxyyyz[k]) + 3.0 * f2t * gk_yy_xxxxyyz[k];

                    g_yyy_xxxxyyzz[k] = fr * g11_yy_xxxxyyzz[k] + f2g * (2.0 * g20_y_xxxxyyzz[k] - 2.0 * fgz * g21_y_xxxxyyzz[k]) + 2.0 * f2t * gk_yy_xxxxyzz[k];

                    g_yyy_xxxxyzzz[k] = fr * g11_yy_xxxxyzzz[k] + f2g * (2.0 * g20_y_xxxxyzzz[k] - 2.0 * fgz * g21_y_xxxxyzzz[k]) + f2t * gk_yy_xxxxzzz[k];

                    g_yyy_xxxxzzzz[k] = fr * g11_yy_xxxxzzzz[k] + f2g * (2.0 * g20_y_xxxxzzzz[k] - 2.0 * fgz * g21_y_xxxxzzzz[k]);

                    g_yyy_xxxyyyyy[k] = fr * g11_yy_xxxyyyyy[k] + f2g * (2.0 * g20_y_xxxyyyyy[k] - 2.0 * fgz * g21_y_xxxyyyyy[k]) + 5.0 * f2t * gk_yy_xxxyyyy[k];

                    g_yyy_xxxyyyyz[k] = fr * g11_yy_xxxyyyyz[k] + f2g * (2.0 * g20_y_xxxyyyyz[k] - 2.0 * fgz * g21_y_xxxyyyyz[k]) + 4.0 * f2t * gk_yy_xxxyyyz[k];

                    g_yyy_xxxyyyzz[k] = fr * g11_yy_xxxyyyzz[k] + f2g * (2.0 * g20_y_xxxyyyzz[k] - 2.0 * fgz * g21_y_xxxyyyzz[k]) + 3.0 * f2t * gk_yy_xxxyyzz[k];

                    g_yyy_xxxyyzzz[k] = fr * g11_yy_xxxyyzzz[k] + f2g * (2.0 * g20_y_xxxyyzzz[k] - 2.0 * fgz * g21_y_xxxyyzzz[k]) + 2.0 * f2t * gk_yy_xxxyzzz[k];

                    g_yyy_xxxyzzzz[k] = fr * g11_yy_xxxyzzzz[k] + f2g * (2.0 * g20_y_xxxyzzzz[k] - 2.0 * fgz * g21_y_xxxyzzzz[k]) + f2t * gk_yy_xxxzzzz[k];

                    g_yyy_xxxzzzzz[k] = fr * g11_yy_xxxzzzzz[k] + f2g * (2.0 * g20_y_xxxzzzzz[k] - 2.0 * fgz * g21_y_xxxzzzzz[k]);

                    g_yyy_xxyyyyyy[k] = fr * g11_yy_xxyyyyyy[k] + f2g * (2.0 * g20_y_xxyyyyyy[k] - 2.0 * fgz * g21_y_xxyyyyyy[k]) + 6.0 * f2t * gk_yy_xxyyyyy[k];

                    g_yyy_xxyyyyyz[k] = fr * g11_yy_xxyyyyyz[k] + f2g * (2.0 * g20_y_xxyyyyyz[k] - 2.0 * fgz * g21_y_xxyyyyyz[k]) + 5.0 * f2t * gk_yy_xxyyyyz[k];

                    g_yyy_xxyyyyzz[k] = fr * g11_yy_xxyyyyzz[k] + f2g * (2.0 * g20_y_xxyyyyzz[k] - 2.0 * fgz * g21_y_xxyyyyzz[k]) + 4.0 * f2t * gk_yy_xxyyyzz[k];

                    g_yyy_xxyyyzzz[k] = fr * g11_yy_xxyyyzzz[k] + f2g * (2.0 * g20_y_xxyyyzzz[k] - 2.0 * fgz * g21_y_xxyyyzzz[k]) + 3.0 * f2t * gk_yy_xxyyzzz[k];

                    g_yyy_xxyyzzzz[k] = fr * g11_yy_xxyyzzzz[k] + f2g * (2.0 * g20_y_xxyyzzzz[k] - 2.0 * fgz * g21_y_xxyyzzzz[k]) + 2.0 * f2t * gk_yy_xxyzzzz[k];

                    g_yyy_xxyzzzzz[k] = fr * g11_yy_xxyzzzzz[k] + f2g * (2.0 * g20_y_xxyzzzzz[k] - 2.0 * fgz * g21_y_xxyzzzzz[k]) + f2t * gk_yy_xxzzzzz[k];

                    g_yyy_xxzzzzzz[k] = fr * g11_yy_xxzzzzzz[k] + f2g * (2.0 * g20_y_xxzzzzzz[k] - 2.0 * fgz * g21_y_xxzzzzzz[k]);

                    g_yyy_xyyyyyyy[k] = fr * g11_yy_xyyyyyyy[k] + f2g * (2.0 * g20_y_xyyyyyyy[k] - 2.0 * fgz * g21_y_xyyyyyyy[k]) + 7.0 * f2t * gk_yy_xyyyyyy[k];

                    g_yyy_xyyyyyyz[k] = fr * g11_yy_xyyyyyyz[k] + f2g * (2.0 * g20_y_xyyyyyyz[k] - 2.0 * fgz * g21_y_xyyyyyyz[k]) + 6.0 * f2t * gk_yy_xyyyyyz[k];

                    g_yyy_xyyyyyzz[k] = fr * g11_yy_xyyyyyzz[k] + f2g * (2.0 * g20_y_xyyyyyzz[k] - 2.0 * fgz * g21_y_xyyyyyzz[k]) + 5.0 * f2t * gk_yy_xyyyyzz[k];

                    g_yyy_xyyyyzzz[k] = fr * g11_yy_xyyyyzzz[k] + f2g * (2.0 * g20_y_xyyyyzzz[k] - 2.0 * fgz * g21_y_xyyyyzzz[k]) + 4.0 * f2t * gk_yy_xyyyzzz[k];

                    g_yyy_xyyyzzzz[k] = fr * g11_yy_xyyyzzzz[k] + f2g * (2.0 * g20_y_xyyyzzzz[k] - 2.0 * fgz * g21_y_xyyyzzzz[k]) + 3.0 * f2t * gk_yy_xyyzzzz[k];

                    g_yyy_xyyzzzzz[k] = fr * g11_yy_xyyzzzzz[k] + f2g * (2.0 * g20_y_xyyzzzzz[k] - 2.0 * fgz * g21_y_xyyzzzzz[k]) + 2.0 * f2t * gk_yy_xyzzzzz[k];

                    g_yyy_xyzzzzzz[k] = fr * g11_yy_xyzzzzzz[k] + f2g * (2.0 * g20_y_xyzzzzzz[k] - 2.0 * fgz * g21_y_xyzzzzzz[k]) + f2t * gk_yy_xzzzzzz[k];

                    g_yyy_xzzzzzzz[k] = fr * g11_yy_xzzzzzzz[k] + f2g * (2.0 * g20_y_xzzzzzzz[k] - 2.0 * fgz * g21_y_xzzzzzzz[k]);

                    g_yyy_yyyyyyyy[k] = fr * g11_yy_yyyyyyyy[k] + f2g * (2.0 * g20_y_yyyyyyyy[k] - 2.0 * fgz * g21_y_yyyyyyyy[k]) + 8.0 * f2t * gk_yy_yyyyyyy[k];

                    g_yyy_yyyyyyyz[k] = fr * g11_yy_yyyyyyyz[k] + f2g * (2.0 * g20_y_yyyyyyyz[k] - 2.0 * fgz * g21_y_yyyyyyyz[k]) + 7.0 * f2t * gk_yy_yyyyyyz[k];

                    g_yyy_yyyyyyzz[k] = fr * g11_yy_yyyyyyzz[k] + f2g * (2.0 * g20_y_yyyyyyzz[k] - 2.0 * fgz * g21_y_yyyyyyzz[k]) + 6.0 * f2t * gk_yy_yyyyyzz[k];

                    g_yyy_yyyyyzzz[k] = fr * g11_yy_yyyyyzzz[k] + f2g * (2.0 * g20_y_yyyyyzzz[k] - 2.0 * fgz * g21_y_yyyyyzzz[k]) + 5.0 * f2t * gk_yy_yyyyzzz[k];

                    g_yyy_yyyyzzzz[k] = fr * g11_yy_yyyyzzzz[k] + f2g * (2.0 * g20_y_yyyyzzzz[k] - 2.0 * fgz * g21_y_yyyyzzzz[k]) + 4.0 * f2t * gk_yy_yyyzzzz[k];

                    g_yyy_yyyzzzzz[k] = fr * g11_yy_yyyzzzzz[k] + f2g * (2.0 * g20_y_yyyzzzzz[k] - 2.0 * fgz * g21_y_yyyzzzzz[k]) + 3.0 * f2t * gk_yy_yyzzzzz[k];

                    g_yyy_yyzzzzzz[k] = fr * g11_yy_yyzzzzzz[k] + f2g * (2.0 * g20_y_yyzzzzzz[k] - 2.0 * fgz * g21_y_yyzzzzzz[k]) + 2.0 * f2t * gk_yy_yzzzzzz[k];

                    g_yyy_yzzzzzzz[k] = fr * g11_yy_yzzzzzzz[k] + f2g * (2.0 * g20_y_yzzzzzzz[k] - 2.0 * fgz * g21_y_yzzzzzzz[k]) + f2t * gk_yy_zzzzzzz[k];

                    g_yyy_zzzzzzzz[k] = fr * g11_yy_zzzzzzzz[k] + f2g * (2.0 * g20_y_zzzzzzzz[k] - 2.0 * fgz * g21_y_zzzzzzzz[k]);

                    g_yyz_xxxxxxxx[k] = fr * g11_yz_xxxxxxxx[k] + f2g * (g20_z_xxxxxxxx[k] - fgz * g21_z_xxxxxxxx[k]);

                    g_yyz_xxxxxxxy[k] = fr * g11_yz_xxxxxxxy[k] + f2g * (g20_z_xxxxxxxy[k] - fgz * g21_z_xxxxxxxy[k]) + f2t * gk_yz_xxxxxxx[k];

                    g_yyz_xxxxxxxz[k] = fr * g11_yz_xxxxxxxz[k] + f2g * (g20_z_xxxxxxxz[k] - fgz * g21_z_xxxxxxxz[k]);

                    g_yyz_xxxxxxyy[k] = fr * g11_yz_xxxxxxyy[k] + f2g * (g20_z_xxxxxxyy[k] - fgz * g21_z_xxxxxxyy[k]) + 2.0 * f2t * gk_yz_xxxxxxy[k];

                    g_yyz_xxxxxxyz[k] = fr * g11_yz_xxxxxxyz[k] + f2g * (g20_z_xxxxxxyz[k] - fgz * g21_z_xxxxxxyz[k]) + f2t * gk_yz_xxxxxxz[k];

                    g_yyz_xxxxxxzz[k] = fr * g11_yz_xxxxxxzz[k] + f2g * (g20_z_xxxxxxzz[k] - fgz * g21_z_xxxxxxzz[k]);

                    g_yyz_xxxxxyyy[k] = fr * g11_yz_xxxxxyyy[k] + f2g * (g20_z_xxxxxyyy[k] - fgz * g21_z_xxxxxyyy[k]) + 3.0 * f2t * gk_yz_xxxxxyy[k];

                    g_yyz_xxxxxyyz[k] = fr * g11_yz_xxxxxyyz[k] + f2g * (g20_z_xxxxxyyz[k] - fgz * g21_z_xxxxxyyz[k]) + 2.0 * f2t * gk_yz_xxxxxyz[k];

                    g_yyz_xxxxxyzz[k] = fr * g11_yz_xxxxxyzz[k] + f2g * (g20_z_xxxxxyzz[k] - fgz * g21_z_xxxxxyzz[k]) + f2t * gk_yz_xxxxxzz[k];

                    g_yyz_xxxxxzzz[k] = fr * g11_yz_xxxxxzzz[k] + f2g * (g20_z_xxxxxzzz[k] - fgz * g21_z_xxxxxzzz[k]);

                    g_yyz_xxxxyyyy[k] = fr * g11_yz_xxxxyyyy[k] + f2g * (g20_z_xxxxyyyy[k] - fgz * g21_z_xxxxyyyy[k]) + 4.0 * f2t * gk_yz_xxxxyyy[k];

                    g_yyz_xxxxyyyz[k] = fr * g11_yz_xxxxyyyz[k] + f2g * (g20_z_xxxxyyyz[k] - fgz * g21_z_xxxxyyyz[k]) + 3.0 * f2t * gk_yz_xxxxyyz[k];

                    g_yyz_xxxxyyzz[k] = fr * g11_yz_xxxxyyzz[k] + f2g * (g20_z_xxxxyyzz[k] - fgz * g21_z_xxxxyyzz[k]) + 2.0 * f2t * gk_yz_xxxxyzz[k];

                    g_yyz_xxxxyzzz[k] = fr * g11_yz_xxxxyzzz[k] + f2g * (g20_z_xxxxyzzz[k] - fgz * g21_z_xxxxyzzz[k]) + f2t * gk_yz_xxxxzzz[k];

                    g_yyz_xxxxzzzz[k] = fr * g11_yz_xxxxzzzz[k] + f2g * (g20_z_xxxxzzzz[k] - fgz * g21_z_xxxxzzzz[k]);

                    g_yyz_xxxyyyyy[k] = fr * g11_yz_xxxyyyyy[k] + f2g * (g20_z_xxxyyyyy[k] - fgz * g21_z_xxxyyyyy[k]) + 5.0 * f2t * gk_yz_xxxyyyy[k];

                    g_yyz_xxxyyyyz[k] = fr * g11_yz_xxxyyyyz[k] + f2g * (g20_z_xxxyyyyz[k] - fgz * g21_z_xxxyyyyz[k]) + 4.0 * f2t * gk_yz_xxxyyyz[k];

                    g_yyz_xxxyyyzz[k] = fr * g11_yz_xxxyyyzz[k] + f2g * (g20_z_xxxyyyzz[k] - fgz * g21_z_xxxyyyzz[k]) + 3.0 * f2t * gk_yz_xxxyyzz[k];

                    g_yyz_xxxyyzzz[k] = fr * g11_yz_xxxyyzzz[k] + f2g * (g20_z_xxxyyzzz[k] - fgz * g21_z_xxxyyzzz[k]) + 2.0 * f2t * gk_yz_xxxyzzz[k];

                    g_yyz_xxxyzzzz[k] = fr * g11_yz_xxxyzzzz[k] + f2g * (g20_z_xxxyzzzz[k] - fgz * g21_z_xxxyzzzz[k]) + f2t * gk_yz_xxxzzzz[k];

                    g_yyz_xxxzzzzz[k] = fr * g11_yz_xxxzzzzz[k] + f2g * (g20_z_xxxzzzzz[k] - fgz * g21_z_xxxzzzzz[k]);

                    g_yyz_xxyyyyyy[k] = fr * g11_yz_xxyyyyyy[k] + f2g * (g20_z_xxyyyyyy[k] - fgz * g21_z_xxyyyyyy[k]) + 6.0 * f2t * gk_yz_xxyyyyy[k];

                    g_yyz_xxyyyyyz[k] = fr * g11_yz_xxyyyyyz[k] + f2g * (g20_z_xxyyyyyz[k] - fgz * g21_z_xxyyyyyz[k]) + 5.0 * f2t * gk_yz_xxyyyyz[k];

                    g_yyz_xxyyyyzz[k] = fr * g11_yz_xxyyyyzz[k] + f2g * (g20_z_xxyyyyzz[k] - fgz * g21_z_xxyyyyzz[k]) + 4.0 * f2t * gk_yz_xxyyyzz[k];

                    g_yyz_xxyyyzzz[k] = fr * g11_yz_xxyyyzzz[k] + f2g * (g20_z_xxyyyzzz[k] - fgz * g21_z_xxyyyzzz[k]) + 3.0 * f2t * gk_yz_xxyyzzz[k];

                    g_yyz_xxyyzzzz[k] = fr * g11_yz_xxyyzzzz[k] + f2g * (g20_z_xxyyzzzz[k] - fgz * g21_z_xxyyzzzz[k]) + 2.0 * f2t * gk_yz_xxyzzzz[k];

                    g_yyz_xxyzzzzz[k] = fr * g11_yz_xxyzzzzz[k] + f2g * (g20_z_xxyzzzzz[k] - fgz * g21_z_xxyzzzzz[k]) + f2t * gk_yz_xxzzzzz[k];

                    g_yyz_xxzzzzzz[k] = fr * g11_yz_xxzzzzzz[k] + f2g * (g20_z_xxzzzzzz[k] - fgz * g21_z_xxzzzzzz[k]);

                    g_yyz_xyyyyyyy[k] = fr * g11_yz_xyyyyyyy[k] + f2g * (g20_z_xyyyyyyy[k] - fgz * g21_z_xyyyyyyy[k]) + 7.0 * f2t * gk_yz_xyyyyyy[k];

                    g_yyz_xyyyyyyz[k] = fr * g11_yz_xyyyyyyz[k] + f2g * (g20_z_xyyyyyyz[k] - fgz * g21_z_xyyyyyyz[k]) + 6.0 * f2t * gk_yz_xyyyyyz[k];

                    g_yyz_xyyyyyzz[k] = fr * g11_yz_xyyyyyzz[k] + f2g * (g20_z_xyyyyyzz[k] - fgz * g21_z_xyyyyyzz[k]) + 5.0 * f2t * gk_yz_xyyyyzz[k];

                    g_yyz_xyyyyzzz[k] = fr * g11_yz_xyyyyzzz[k] + f2g * (g20_z_xyyyyzzz[k] - fgz * g21_z_xyyyyzzz[k]) + 4.0 * f2t * gk_yz_xyyyzzz[k];

                    g_yyz_xyyyzzzz[k] = fr * g11_yz_xyyyzzzz[k] + f2g * (g20_z_xyyyzzzz[k] - fgz * g21_z_xyyyzzzz[k]) + 3.0 * f2t * gk_yz_xyyzzzz[k];

                    g_yyz_xyyzzzzz[k] = fr * g11_yz_xyyzzzzz[k] + f2g * (g20_z_xyyzzzzz[k] - fgz * g21_z_xyyzzzzz[k]) + 2.0 * f2t * gk_yz_xyzzzzz[k];

                    g_yyz_xyzzzzzz[k] = fr * g11_yz_xyzzzzzz[k] + f2g * (g20_z_xyzzzzzz[k] - fgz * g21_z_xyzzzzzz[k]) + f2t * gk_yz_xzzzzzz[k];

                    g_yyz_xzzzzzzz[k] = fr * g11_yz_xzzzzzzz[k] + f2g * (g20_z_xzzzzzzz[k] - fgz * g21_z_xzzzzzzz[k]);

                    g_yyz_yyyyyyyy[k] = fr * g11_yz_yyyyyyyy[k] + f2g * (g20_z_yyyyyyyy[k] - fgz * g21_z_yyyyyyyy[k]) + 8.0 * f2t * gk_yz_yyyyyyy[k];

                    g_yyz_yyyyyyyz[k] = fr * g11_yz_yyyyyyyz[k] + f2g * (g20_z_yyyyyyyz[k] - fgz * g21_z_yyyyyyyz[k]) + 7.0 * f2t * gk_yz_yyyyyyz[k];

                    g_yyz_yyyyyyzz[k] = fr * g11_yz_yyyyyyzz[k] + f2g * (g20_z_yyyyyyzz[k] - fgz * g21_z_yyyyyyzz[k]) + 6.0 * f2t * gk_yz_yyyyyzz[k];

                    g_yyz_yyyyyzzz[k] = fr * g11_yz_yyyyyzzz[k] + f2g * (g20_z_yyyyyzzz[k] - fgz * g21_z_yyyyyzzz[k]) + 5.0 * f2t * gk_yz_yyyyzzz[k];

                    g_yyz_yyyyzzzz[k] = fr * g11_yz_yyyyzzzz[k] + f2g * (g20_z_yyyyzzzz[k] - fgz * g21_z_yyyyzzzz[k]) + 4.0 * f2t * gk_yz_yyyzzzz[k];

                    g_yyz_yyyzzzzz[k] = fr * g11_yz_yyyzzzzz[k] + f2g * (g20_z_yyyzzzzz[k] - fgz * g21_z_yyyzzzzz[k]) + 3.0 * f2t * gk_yz_yyzzzzz[k];

                    g_yyz_yyzzzzzz[k] = fr * g11_yz_yyzzzzzz[k] + f2g * (g20_z_yyzzzzzz[k] - fgz * g21_z_yyzzzzzz[k]) + 2.0 * f2t * gk_yz_yzzzzzz[k];

                    g_yyz_yzzzzzzz[k] = fr * g11_yz_yzzzzzzz[k] + f2g * (g20_z_yzzzzzzz[k] - fgz * g21_z_yzzzzzzz[k]) + f2t * gk_yz_zzzzzzz[k];

                    g_yyz_zzzzzzzz[k] = fr * g11_yz_zzzzzzzz[k] + f2g * (g20_z_zzzzzzzz[k] - fgz * g21_z_zzzzzzzz[k]);

                    g_yzz_xxxxxxxx[k] = fr * g11_zz_xxxxxxxx[k];

                    g_yzz_xxxxxxxy[k] = fr * g11_zz_xxxxxxxy[k] + f2t * gk_zz_xxxxxxx[k];

                    g_yzz_xxxxxxxz[k] = fr * g11_zz_xxxxxxxz[k];

                    g_yzz_xxxxxxyy[k] = fr * g11_zz_xxxxxxyy[k] + 2.0 * f2t * gk_zz_xxxxxxy[k];

                    g_yzz_xxxxxxyz[k] = fr * g11_zz_xxxxxxyz[k] + f2t * gk_zz_xxxxxxz[k];

                    g_yzz_xxxxxxzz[k] = fr * g11_zz_xxxxxxzz[k];

                    g_yzz_xxxxxyyy[k] = fr * g11_zz_xxxxxyyy[k] + 3.0 * f2t * gk_zz_xxxxxyy[k];

                    g_yzz_xxxxxyyz[k] = fr * g11_zz_xxxxxyyz[k] + 2.0 * f2t * gk_zz_xxxxxyz[k];

                    g_yzz_xxxxxyzz[k] = fr * g11_zz_xxxxxyzz[k] + f2t * gk_zz_xxxxxzz[k];

                    g_yzz_xxxxxzzz[k] = fr * g11_zz_xxxxxzzz[k];

                    g_yzz_xxxxyyyy[k] = fr * g11_zz_xxxxyyyy[k] + 4.0 * f2t * gk_zz_xxxxyyy[k];

                    g_yzz_xxxxyyyz[k] = fr * g11_zz_xxxxyyyz[k] + 3.0 * f2t * gk_zz_xxxxyyz[k];

                    g_yzz_xxxxyyzz[k] = fr * g11_zz_xxxxyyzz[k] + 2.0 * f2t * gk_zz_xxxxyzz[k];

                    g_yzz_xxxxyzzz[k] = fr * g11_zz_xxxxyzzz[k] + f2t * gk_zz_xxxxzzz[k];

                    g_yzz_xxxxzzzz[k] = fr * g11_zz_xxxxzzzz[k];

                    g_yzz_xxxyyyyy[k] = fr * g11_zz_xxxyyyyy[k] + 5.0 * f2t * gk_zz_xxxyyyy[k];

                    g_yzz_xxxyyyyz[k] = fr * g11_zz_xxxyyyyz[k] + 4.0 * f2t * gk_zz_xxxyyyz[k];

                    g_yzz_xxxyyyzz[k] = fr * g11_zz_xxxyyyzz[k] + 3.0 * f2t * gk_zz_xxxyyzz[k];

                    g_yzz_xxxyyzzz[k] = fr * g11_zz_xxxyyzzz[k] + 2.0 * f2t * gk_zz_xxxyzzz[k];

                    g_yzz_xxxyzzzz[k] = fr * g11_zz_xxxyzzzz[k] + f2t * gk_zz_xxxzzzz[k];

                    g_yzz_xxxzzzzz[k] = fr * g11_zz_xxxzzzzz[k];

                    g_yzz_xxyyyyyy[k] = fr * g11_zz_xxyyyyyy[k] + 6.0 * f2t * gk_zz_xxyyyyy[k];

                    g_yzz_xxyyyyyz[k] = fr * g11_zz_xxyyyyyz[k] + 5.0 * f2t * gk_zz_xxyyyyz[k];

                    g_yzz_xxyyyyzz[k] = fr * g11_zz_xxyyyyzz[k] + 4.0 * f2t * gk_zz_xxyyyzz[k];

                    g_yzz_xxyyyzzz[k] = fr * g11_zz_xxyyyzzz[k] + 3.0 * f2t * gk_zz_xxyyzzz[k];

                    g_yzz_xxyyzzzz[k] = fr * g11_zz_xxyyzzzz[k] + 2.0 * f2t * gk_zz_xxyzzzz[k];

                    g_yzz_xxyzzzzz[k] = fr * g11_zz_xxyzzzzz[k] + f2t * gk_zz_xxzzzzz[k];

                    g_yzz_xxzzzzzz[k] = fr * g11_zz_xxzzzzzz[k];

                    g_yzz_xyyyyyyy[k] = fr * g11_zz_xyyyyyyy[k] + 7.0 * f2t * gk_zz_xyyyyyy[k];

                    g_yzz_xyyyyyyz[k] = fr * g11_zz_xyyyyyyz[k] + 6.0 * f2t * gk_zz_xyyyyyz[k];

                    g_yzz_xyyyyyzz[k] = fr * g11_zz_xyyyyyzz[k] + 5.0 * f2t * gk_zz_xyyyyzz[k];

                    g_yzz_xyyyyzzz[k] = fr * g11_zz_xyyyyzzz[k] + 4.0 * f2t * gk_zz_xyyyzzz[k];

                    g_yzz_xyyyzzzz[k] = fr * g11_zz_xyyyzzzz[k] + 3.0 * f2t * gk_zz_xyyzzzz[k];

                    g_yzz_xyyzzzzz[k] = fr * g11_zz_xyyzzzzz[k] + 2.0 * f2t * gk_zz_xyzzzzz[k];

                    g_yzz_xyzzzzzz[k] = fr * g11_zz_xyzzzzzz[k] + f2t * gk_zz_xzzzzzz[k];

                    g_yzz_xzzzzzzz[k] = fr * g11_zz_xzzzzzzz[k];

                    g_yzz_yyyyyyyy[k] = fr * g11_zz_yyyyyyyy[k] + 8.0 * f2t * gk_zz_yyyyyyy[k];

                    g_yzz_yyyyyyyz[k] = fr * g11_zz_yyyyyyyz[k] + 7.0 * f2t * gk_zz_yyyyyyz[k];

                    g_yzz_yyyyyyzz[k] = fr * g11_zz_yyyyyyzz[k] + 6.0 * f2t * gk_zz_yyyyyzz[k];

                    g_yzz_yyyyyzzz[k] = fr * g11_zz_yyyyyzzz[k] + 5.0 * f2t * gk_zz_yyyyzzz[k];

                    g_yzz_yyyyzzzz[k] = fr * g11_zz_yyyyzzzz[k] + 4.0 * f2t * gk_zz_yyyzzzz[k];

                    g_yzz_yyyzzzzz[k] = fr * g11_zz_yyyzzzzz[k] + 3.0 * f2t * gk_zz_yyzzzzz[k];

                    g_yzz_yyzzzzzz[k] = fr * g11_zz_yyzzzzzz[k] + 2.0 * f2t * gk_zz_yzzzzzz[k];

                    g_yzz_yzzzzzzz[k] = fr * g11_zz_yzzzzzzz[k] + f2t * gk_zz_zzzzzzz[k];

                    g_yzz_zzzzzzzz[k] = fr * g11_zz_zzzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzz_xxxxxxxx[k] = fr * g11_zz_xxxxxxxx[k] + f2g * (2.0 * g20_z_xxxxxxxx[k] - 2.0 * fgz * g21_z_xxxxxxxx[k]);

                    g_zzz_xxxxxxxy[k] = fr * g11_zz_xxxxxxxy[k] + f2g * (2.0 * g20_z_xxxxxxxy[k] - 2.0 * fgz * g21_z_xxxxxxxy[k]);

                    g_zzz_xxxxxxxz[k] = fr * g11_zz_xxxxxxxz[k] + f2g * (2.0 * g20_z_xxxxxxxz[k] - 2.0 * fgz * g21_z_xxxxxxxz[k]) + f2t * gk_zz_xxxxxxx[k];

                    g_zzz_xxxxxxyy[k] = fr * g11_zz_xxxxxxyy[k] + f2g * (2.0 * g20_z_xxxxxxyy[k] - 2.0 * fgz * g21_z_xxxxxxyy[k]);

                    g_zzz_xxxxxxyz[k] = fr * g11_zz_xxxxxxyz[k] + f2g * (2.0 * g20_z_xxxxxxyz[k] - 2.0 * fgz * g21_z_xxxxxxyz[k]) + f2t * gk_zz_xxxxxxy[k];

                    g_zzz_xxxxxxzz[k] = fr * g11_zz_xxxxxxzz[k] + f2g * (2.0 * g20_z_xxxxxxzz[k] - 2.0 * fgz * g21_z_xxxxxxzz[k]) + 2.0 * f2t * gk_zz_xxxxxxz[k];

                    g_zzz_xxxxxyyy[k] = fr * g11_zz_xxxxxyyy[k] + f2g * (2.0 * g20_z_xxxxxyyy[k] - 2.0 * fgz * g21_z_xxxxxyyy[k]);

                    g_zzz_xxxxxyyz[k] = fr * g11_zz_xxxxxyyz[k] + f2g * (2.0 * g20_z_xxxxxyyz[k] - 2.0 * fgz * g21_z_xxxxxyyz[k]) + f2t * gk_zz_xxxxxyy[k];

                    g_zzz_xxxxxyzz[k] = fr * g11_zz_xxxxxyzz[k] + f2g * (2.0 * g20_z_xxxxxyzz[k] - 2.0 * fgz * g21_z_xxxxxyzz[k]) + 2.0 * f2t * gk_zz_xxxxxyz[k];

                    g_zzz_xxxxxzzz[k] = fr * g11_zz_xxxxxzzz[k] + f2g * (2.0 * g20_z_xxxxxzzz[k] - 2.0 * fgz * g21_z_xxxxxzzz[k]) + 3.0 * f2t * gk_zz_xxxxxzz[k];

                    g_zzz_xxxxyyyy[k] = fr * g11_zz_xxxxyyyy[k] + f2g * (2.0 * g20_z_xxxxyyyy[k] - 2.0 * fgz * g21_z_xxxxyyyy[k]);

                    g_zzz_xxxxyyyz[k] = fr * g11_zz_xxxxyyyz[k] + f2g * (2.0 * g20_z_xxxxyyyz[k] - 2.0 * fgz * g21_z_xxxxyyyz[k]) + f2t * gk_zz_xxxxyyy[k];

                    g_zzz_xxxxyyzz[k] = fr * g11_zz_xxxxyyzz[k] + f2g * (2.0 * g20_z_xxxxyyzz[k] - 2.0 * fgz * g21_z_xxxxyyzz[k]) + 2.0 * f2t * gk_zz_xxxxyyz[k];

                    g_zzz_xxxxyzzz[k] = fr * g11_zz_xxxxyzzz[k] + f2g * (2.0 * g20_z_xxxxyzzz[k] - 2.0 * fgz * g21_z_xxxxyzzz[k]) + 3.0 * f2t * gk_zz_xxxxyzz[k];

                    g_zzz_xxxxzzzz[k] = fr * g11_zz_xxxxzzzz[k] + f2g * (2.0 * g20_z_xxxxzzzz[k] - 2.0 * fgz * g21_z_xxxxzzzz[k]) + 4.0 * f2t * gk_zz_xxxxzzz[k];

                    g_zzz_xxxyyyyy[k] = fr * g11_zz_xxxyyyyy[k] + f2g * (2.0 * g20_z_xxxyyyyy[k] - 2.0 * fgz * g21_z_xxxyyyyy[k]);

                    g_zzz_xxxyyyyz[k] = fr * g11_zz_xxxyyyyz[k] + f2g * (2.0 * g20_z_xxxyyyyz[k] - 2.0 * fgz * g21_z_xxxyyyyz[k]) + f2t * gk_zz_xxxyyyy[k];

                    g_zzz_xxxyyyzz[k] = fr * g11_zz_xxxyyyzz[k] + f2g * (2.0 * g20_z_xxxyyyzz[k] - 2.0 * fgz * g21_z_xxxyyyzz[k]) + 2.0 * f2t * gk_zz_xxxyyyz[k];

                    g_zzz_xxxyyzzz[k] = fr * g11_zz_xxxyyzzz[k] + f2g * (2.0 * g20_z_xxxyyzzz[k] - 2.0 * fgz * g21_z_xxxyyzzz[k]) + 3.0 * f2t * gk_zz_xxxyyzz[k];

                    g_zzz_xxxyzzzz[k] = fr * g11_zz_xxxyzzzz[k] + f2g * (2.0 * g20_z_xxxyzzzz[k] - 2.0 * fgz * g21_z_xxxyzzzz[k]) + 4.0 * f2t * gk_zz_xxxyzzz[k];

                    g_zzz_xxxzzzzz[k] = fr * g11_zz_xxxzzzzz[k] + f2g * (2.0 * g20_z_xxxzzzzz[k] - 2.0 * fgz * g21_z_xxxzzzzz[k]) + 5.0 * f2t * gk_zz_xxxzzzz[k];

                    g_zzz_xxyyyyyy[k] = fr * g11_zz_xxyyyyyy[k] + f2g * (2.0 * g20_z_xxyyyyyy[k] - 2.0 * fgz * g21_z_xxyyyyyy[k]);

                    g_zzz_xxyyyyyz[k] = fr * g11_zz_xxyyyyyz[k] + f2g * (2.0 * g20_z_xxyyyyyz[k] - 2.0 * fgz * g21_z_xxyyyyyz[k]) + f2t * gk_zz_xxyyyyy[k];

                    g_zzz_xxyyyyzz[k] = fr * g11_zz_xxyyyyzz[k] + f2g * (2.0 * g20_z_xxyyyyzz[k] - 2.0 * fgz * g21_z_xxyyyyzz[k]) + 2.0 * f2t * gk_zz_xxyyyyz[k];

                    g_zzz_xxyyyzzz[k] = fr * g11_zz_xxyyyzzz[k] + f2g * (2.0 * g20_z_xxyyyzzz[k] - 2.0 * fgz * g21_z_xxyyyzzz[k]) + 3.0 * f2t * gk_zz_xxyyyzz[k];

                    g_zzz_xxyyzzzz[k] = fr * g11_zz_xxyyzzzz[k] + f2g * (2.0 * g20_z_xxyyzzzz[k] - 2.0 * fgz * g21_z_xxyyzzzz[k]) + 4.0 * f2t * gk_zz_xxyyzzz[k];

                    g_zzz_xxyzzzzz[k] = fr * g11_zz_xxyzzzzz[k] + f2g * (2.0 * g20_z_xxyzzzzz[k] - 2.0 * fgz * g21_z_xxyzzzzz[k]) + 5.0 * f2t * gk_zz_xxyzzzz[k];

                    g_zzz_xxzzzzzz[k] = fr * g11_zz_xxzzzzzz[k] + f2g * (2.0 * g20_z_xxzzzzzz[k] - 2.0 * fgz * g21_z_xxzzzzzz[k]) + 6.0 * f2t * gk_zz_xxzzzzz[k];

                    g_zzz_xyyyyyyy[k] = fr * g11_zz_xyyyyyyy[k] + f2g * (2.0 * g20_z_xyyyyyyy[k] - 2.0 * fgz * g21_z_xyyyyyyy[k]);

                    g_zzz_xyyyyyyz[k] = fr * g11_zz_xyyyyyyz[k] + f2g * (2.0 * g20_z_xyyyyyyz[k] - 2.0 * fgz * g21_z_xyyyyyyz[k]) + f2t * gk_zz_xyyyyyy[k];

                    g_zzz_xyyyyyzz[k] = fr * g11_zz_xyyyyyzz[k] + f2g * (2.0 * g20_z_xyyyyyzz[k] - 2.0 * fgz * g21_z_xyyyyyzz[k]) + 2.0 * f2t * gk_zz_xyyyyyz[k];

                    g_zzz_xyyyyzzz[k] = fr * g11_zz_xyyyyzzz[k] + f2g * (2.0 * g20_z_xyyyyzzz[k] - 2.0 * fgz * g21_z_xyyyyzzz[k]) + 3.0 * f2t * gk_zz_xyyyyzz[k];

                    g_zzz_xyyyzzzz[k] = fr * g11_zz_xyyyzzzz[k] + f2g * (2.0 * g20_z_xyyyzzzz[k] - 2.0 * fgz * g21_z_xyyyzzzz[k]) + 4.0 * f2t * gk_zz_xyyyzzz[k];

                    g_zzz_xyyzzzzz[k] = fr * g11_zz_xyyzzzzz[k] + f2g * (2.0 * g20_z_xyyzzzzz[k] - 2.0 * fgz * g21_z_xyyzzzzz[k]) + 5.0 * f2t * gk_zz_xyyzzzz[k];

                    g_zzz_xyzzzzzz[k] = fr * g11_zz_xyzzzzzz[k] + f2g * (2.0 * g20_z_xyzzzzzz[k] - 2.0 * fgz * g21_z_xyzzzzzz[k]) + 6.0 * f2t * gk_zz_xyzzzzz[k];

                    g_zzz_xzzzzzzz[k] = fr * g11_zz_xzzzzzzz[k] + f2g * (2.0 * g20_z_xzzzzzzz[k] - 2.0 * fgz * g21_z_xzzzzzzz[k]) + 7.0 * f2t * gk_zz_xzzzzzz[k];

                    g_zzz_yyyyyyyy[k] = fr * g11_zz_yyyyyyyy[k] + f2g * (2.0 * g20_z_yyyyyyyy[k] - 2.0 * fgz * g21_z_yyyyyyyy[k]);

                    g_zzz_yyyyyyyz[k] = fr * g11_zz_yyyyyyyz[k] + f2g * (2.0 * g20_z_yyyyyyyz[k] - 2.0 * fgz * g21_z_yyyyyyyz[k]) + f2t * gk_zz_yyyyyyy[k];

                    g_zzz_yyyyyyzz[k] = fr * g11_zz_yyyyyyzz[k] + f2g * (2.0 * g20_z_yyyyyyzz[k] - 2.0 * fgz * g21_z_yyyyyyzz[k]) + 2.0 * f2t * gk_zz_yyyyyyz[k];

                    g_zzz_yyyyyzzz[k] = fr * g11_zz_yyyyyzzz[k] + f2g * (2.0 * g20_z_yyyyyzzz[k] - 2.0 * fgz * g21_z_yyyyyzzz[k]) + 3.0 * f2t * gk_zz_yyyyyzz[k];

                    g_zzz_yyyyzzzz[k] = fr * g11_zz_yyyyzzzz[k] + f2g * (2.0 * g20_z_yyyyzzzz[k] - 2.0 * fgz * g21_z_yyyyzzzz[k]) + 4.0 * f2t * gk_zz_yyyyzzz[k];

                    g_zzz_yyyzzzzz[k] = fr * g11_zz_yyyzzzzz[k] + f2g * (2.0 * g20_z_yyyzzzzz[k] - 2.0 * fgz * g21_z_yyyzzzzz[k]) + 5.0 * f2t * gk_zz_yyyzzzz[k];

                    g_zzz_yyzzzzzz[k] = fr * g11_zz_yyzzzzzz[k] + f2g * (2.0 * g20_z_yyzzzzzz[k] - 2.0 * fgz * g21_z_yyzzzzzz[k]) + 6.0 * f2t * gk_zz_yyzzzzz[k];

                    g_zzz_yzzzzzzz[k] = fr * g11_zz_yzzzzzzz[k] + f2g * (2.0 * g20_z_yzzzzzzz[k] - 2.0 * fgz * g21_z_yzzzzzzz[k]) + 7.0 * f2t * gk_zz_yzzzzzz[k];

                    g_zzz_zzzzzzzz[k] = fr * g11_zz_zzzzzzzz[k] + f2g * (2.0 * g20_z_zzzzzzzz[k] - 2.0 * fgz * g21_z_zzzzzzzz[k]) + 8.0 * f2t * gk_zz_zzzzzzz[k];
                }

                idx++;
            }
        }
    }
    
    void
    compElectronRepulsionForGSL(      CMemBlock2D<double>&  primBuffer,
                                const CVecThreeIndexes&     recPattern,
                                const std::vector<int32_t>& recIndexes,
                                const CMemBlock2D<double>&  osFactors,
                                const CMemBlock2D<double>&  waDistances,
                                const CGtoBlock&            braGtoBlock,
                                const CGtoPairsBlock&       ketGtoPairsBlock,
                                const int32_t               iContrGto)
    {
        auto bord = genfunc::maxOrderOfPair(recPattern, 4, 8);

        // skip integrals if not included in recursion pattern

        if (bord < 0) return;

        // set up pointers to primitives data on bra side

        auto spos = braGtoBlock.getStartPositions();

        auto epos = braGtoBlock.getEndPositions();

        // set up pointers to primitives data on ket side

        auto nprim = ketGtoPairsBlock.getNumberOfScreenedPrimPairs();

        // compute primitive integrals up to required order

        for (int32_t i = 0; i <= bord; i++)
        {
            // get position of integrals in primitves buffer

            auto goff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                 {4, 8, i});

            // skip integrals if this order is not required

            if (goff == -1) continue;

            auto g11off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {3, 8, i + 1});

            auto g20off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 8, i});

            auto g21off = genfunc::findTripleIndex(recIndexes, recPattern,
                                                   {2, 8, i + 1});

            auto gkoff = genfunc::findTripleIndex(recIndexes, recPattern,
                                                  {3, 7, i + 1});

            // loop over contracted GTO on bra side

            int32_t idx = 0;

            for (int32_t j = spos[iContrGto]; j < epos[iContrGto]; j++)
            {
                // set up pointers to Obara-Saika factors

                auto fx = osFactors.data(5 * idx);

                auto fga = osFactors.data(5 * idx + 2);

                auto fza = osFactors.data(5 * idx + 3);

                // set up pointers to distances R(WA)

                auto wax = waDistances.data(3 * idx);

                auto way = waDistances.data(3 * idx + 1);

                auto waz = waDistances.data(3 * idx + 2);

                // set up pointers to (F|g(r,r')|SK)^(m+1) integrals

                auto gk_xxx_xxxxxxx = primBuffer.data(gkoff + 360 * idx);

                auto gk_xxx_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 1);

                auto gk_xxx_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 2);

                auto gk_xxx_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 3);

                auto gk_xxx_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 4);

                auto gk_xxx_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 5);

                auto gk_xxx_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 6);

                auto gk_xxx_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 7);

                auto gk_xxx_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 8);

                auto gk_xxx_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 9);

                auto gk_xxx_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 10);

                auto gk_xxx_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 11);

                auto gk_xxx_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 12);

                auto gk_xxx_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 13);

                auto gk_xxx_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 14);

                auto gk_xxx_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 15);

                auto gk_xxx_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 16);

                auto gk_xxx_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 17);

                auto gk_xxx_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 18);

                auto gk_xxx_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 19);

                auto gk_xxx_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 20);

                auto gk_xxx_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 21);

                auto gk_xxx_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 22);

                auto gk_xxx_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 23);

                auto gk_xxx_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 24);

                auto gk_xxx_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 25);

                auto gk_xxx_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 26);

                auto gk_xxx_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 27);

                auto gk_xxx_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 28);

                auto gk_xxx_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 29);

                auto gk_xxx_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 30);

                auto gk_xxx_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 31);

                auto gk_xxx_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 32);

                auto gk_xxx_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 33);

                auto gk_xxx_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 34);

                auto gk_xxx_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 35);

                auto gk_xxy_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 36);

                auto gk_xxy_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 37);

                auto gk_xxy_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 38);

                auto gk_xxy_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 39);

                auto gk_xxy_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 40);

                auto gk_xxy_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 41);

                auto gk_xxy_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 42);

                auto gk_xxy_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 43);

                auto gk_xxy_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 44);

                auto gk_xxy_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 45);

                auto gk_xxy_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 46);

                auto gk_xxy_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 47);

                auto gk_xxy_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 48);

                auto gk_xxy_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 49);

                auto gk_xxy_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 50);

                auto gk_xxy_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 51);

                auto gk_xxy_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 52);

                auto gk_xxy_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 53);

                auto gk_xxy_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 54);

                auto gk_xxy_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 55);

                auto gk_xxy_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 56);

                auto gk_xxy_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 57);

                auto gk_xxy_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 58);

                auto gk_xxy_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 59);

                auto gk_xxy_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 60);

                auto gk_xxy_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 61);

                auto gk_xxy_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 62);

                auto gk_xxy_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 63);

                auto gk_xxy_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 64);

                auto gk_xxy_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 65);

                auto gk_xxy_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 66);

                auto gk_xxy_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 67);

                auto gk_xxy_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 68);

                auto gk_xxy_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 69);

                auto gk_xxy_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 70);

                auto gk_xxy_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 71);

                auto gk_xxz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 72);

                auto gk_xxz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 73);

                auto gk_xxz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 74);

                auto gk_xxz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 75);

                auto gk_xxz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 76);

                auto gk_xxz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 77);

                auto gk_xxz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 78);

                auto gk_xxz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 79);

                auto gk_xxz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 80);

                auto gk_xxz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 81);

                auto gk_xxz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 82);

                auto gk_xxz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 83);

                auto gk_xxz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 84);

                auto gk_xxz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 85);

                auto gk_xxz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 86);

                auto gk_xxz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 87);

                auto gk_xxz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 88);

                auto gk_xxz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 89);

                auto gk_xxz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 90);

                auto gk_xxz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 91);

                auto gk_xxz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 92);

                auto gk_xxz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 93);

                auto gk_xxz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 94);

                auto gk_xxz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 95);

                auto gk_xxz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 96);

                auto gk_xxz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 97);

                auto gk_xxz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 98);

                auto gk_xxz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 99);

                auto gk_xxz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 100);

                auto gk_xxz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 101);

                auto gk_xxz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 102);

                auto gk_xxz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 103);

                auto gk_xxz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 104);

                auto gk_xxz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 105);

                auto gk_xxz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 106);

                auto gk_xxz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 107);

                auto gk_xyy_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 108);

                auto gk_xyy_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 109);

                auto gk_xyy_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 110);

                auto gk_xyy_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 111);

                auto gk_xyy_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 112);

                auto gk_xyy_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 113);

                auto gk_xyy_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 114);

                auto gk_xyy_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 115);

                auto gk_xyy_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 116);

                auto gk_xyy_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 117);

                auto gk_xyy_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 118);

                auto gk_xyy_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 119);

                auto gk_xyy_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 120);

                auto gk_xyy_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 121);

                auto gk_xyy_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 122);

                auto gk_xyy_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 123);

                auto gk_xyy_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 124);

                auto gk_xyy_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 125);

                auto gk_xyy_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 126);

                auto gk_xyy_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 127);

                auto gk_xyy_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 128);

                auto gk_xyy_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 129);

                auto gk_xyy_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 130);

                auto gk_xyy_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 131);

                auto gk_xyy_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 132);

                auto gk_xyy_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 133);

                auto gk_xyy_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 134);

                auto gk_xyy_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 135);

                auto gk_xyy_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 136);

                auto gk_xyy_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 137);

                auto gk_xyy_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 138);

                auto gk_xyy_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 139);

                auto gk_xyy_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 140);

                auto gk_xyy_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 141);

                auto gk_xyy_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 142);

                auto gk_xyy_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 143);

                auto gk_xyz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 144);

                auto gk_xyz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 145);

                auto gk_xyz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 146);

                auto gk_xyz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 147);

                auto gk_xyz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 148);

                auto gk_xyz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 149);

                auto gk_xyz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 150);

                auto gk_xyz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 151);

                auto gk_xyz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 152);

                auto gk_xyz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 153);

                auto gk_xyz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 154);

                auto gk_xyz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 155);

                auto gk_xyz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 156);

                auto gk_xyz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 157);

                auto gk_xyz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 158);

                auto gk_xyz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 159);

                auto gk_xyz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 160);

                auto gk_xyz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 161);

                auto gk_xyz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 162);

                auto gk_xyz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 163);

                auto gk_xyz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 164);

                auto gk_xyz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 165);

                auto gk_xyz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 166);

                auto gk_xyz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 167);

                auto gk_xyz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 168);

                auto gk_xyz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 169);

                auto gk_xyz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 170);

                auto gk_xyz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 171);

                auto gk_xyz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 172);

                auto gk_xyz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 173);

                auto gk_xyz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 174);

                auto gk_xyz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 175);

                auto gk_xyz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 176);

                auto gk_xyz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 177);

                auto gk_xyz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 178);

                auto gk_xyz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 179);

                auto gk_xzz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 180);

                auto gk_xzz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 181);

                auto gk_xzz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 182);

                auto gk_xzz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 183);

                auto gk_xzz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 184);

                auto gk_xzz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 185);

                auto gk_xzz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 186);

                auto gk_xzz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 187);

                auto gk_xzz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 188);

                auto gk_xzz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 189);

                auto gk_xzz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 190);

                auto gk_xzz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 191);

                auto gk_xzz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 192);

                auto gk_xzz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 193);

                auto gk_xzz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 194);

                auto gk_xzz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 195);

                auto gk_xzz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 196);

                auto gk_xzz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 197);

                auto gk_xzz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 198);

                auto gk_xzz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 199);

                auto gk_xzz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 200);

                auto gk_xzz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 201);

                auto gk_xzz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 202);

                auto gk_xzz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 203);

                auto gk_xzz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 204);

                auto gk_xzz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 205);

                auto gk_xzz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 206);

                auto gk_xzz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 207);

                auto gk_xzz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 208);

                auto gk_xzz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 209);

                auto gk_xzz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 210);

                auto gk_xzz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 211);

                auto gk_xzz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 212);

                auto gk_xzz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 213);

                auto gk_xzz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 214);

                auto gk_xzz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 215);

                auto gk_yyy_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 216);

                auto gk_yyy_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 217);

                auto gk_yyy_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 218);

                auto gk_yyy_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 219);

                auto gk_yyy_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 220);

                auto gk_yyy_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 221);

                auto gk_yyy_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 222);

                auto gk_yyy_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 223);

                auto gk_yyy_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 224);

                auto gk_yyy_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 225);

                auto gk_yyy_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 226);

                auto gk_yyy_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 227);

                auto gk_yyy_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 228);

                auto gk_yyy_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 229);

                auto gk_yyy_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 230);

                auto gk_yyy_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 231);

                auto gk_yyy_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 232);

                auto gk_yyy_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 233);

                auto gk_yyy_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 234);

                auto gk_yyy_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 235);

                auto gk_yyy_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 236);

                auto gk_yyy_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 237);

                auto gk_yyy_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 238);

                auto gk_yyy_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 239);

                auto gk_yyy_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 240);

                auto gk_yyy_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 241);

                auto gk_yyy_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 242);

                auto gk_yyy_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 243);

                auto gk_yyy_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 244);

                auto gk_yyy_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 245);

                auto gk_yyy_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 246);

                auto gk_yyy_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 247);

                auto gk_yyy_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 248);

                auto gk_yyy_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 249);

                auto gk_yyy_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 250);

                auto gk_yyy_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 251);

                auto gk_yyz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 252);

                auto gk_yyz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 253);

                auto gk_yyz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 254);

                auto gk_yyz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 255);

                auto gk_yyz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 256);

                auto gk_yyz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 257);

                auto gk_yyz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 258);

                auto gk_yyz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 259);

                auto gk_yyz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 260);

                auto gk_yyz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 261);

                auto gk_yyz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 262);

                auto gk_yyz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 263);

                auto gk_yyz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 264);

                auto gk_yyz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 265);

                auto gk_yyz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 266);

                auto gk_yyz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 267);

                auto gk_yyz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 268);

                auto gk_yyz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 269);

                auto gk_yyz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 270);

                auto gk_yyz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 271);

                auto gk_yyz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 272);

                auto gk_yyz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 273);

                auto gk_yyz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 274);

                auto gk_yyz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 275);

                auto gk_yyz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 276);

                auto gk_yyz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 277);

                auto gk_yyz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 278);

                auto gk_yyz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 279);

                auto gk_yyz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 280);

                auto gk_yyz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 281);

                auto gk_yyz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 282);

                auto gk_yyz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 283);

                auto gk_yyz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 284);

                auto gk_yyz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 285);

                auto gk_yyz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 286);

                auto gk_yyz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 287);

                auto gk_yzz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 288);

                auto gk_yzz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 289);

                auto gk_yzz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 290);

                auto gk_yzz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 291);

                auto gk_yzz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 292);

                auto gk_yzz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 293);

                auto gk_yzz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 294);

                auto gk_yzz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 295);

                auto gk_yzz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 296);

                auto gk_yzz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 297);

                auto gk_yzz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 298);

                auto gk_yzz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 299);

                auto gk_yzz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 300);

                auto gk_yzz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 301);

                auto gk_yzz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 302);

                auto gk_yzz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 303);

                auto gk_yzz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 304);

                auto gk_yzz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 305);

                auto gk_yzz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 306);

                auto gk_yzz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 307);

                auto gk_yzz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 308);

                auto gk_yzz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 309);

                auto gk_yzz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 310);

                auto gk_yzz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 311);

                auto gk_yzz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 312);

                auto gk_yzz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 313);

                auto gk_yzz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 314);

                auto gk_yzz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 315);

                auto gk_yzz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 316);

                auto gk_yzz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 317);

                auto gk_yzz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 318);

                auto gk_yzz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 319);

                auto gk_yzz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 320);

                auto gk_yzz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 321);

                auto gk_yzz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 322);

                auto gk_yzz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 323);

                auto gk_zzz_xxxxxxx = primBuffer.data(gkoff + 360 * idx + 324);

                auto gk_zzz_xxxxxxy = primBuffer.data(gkoff + 360 * idx + 325);

                auto gk_zzz_xxxxxxz = primBuffer.data(gkoff + 360 * idx + 326);

                auto gk_zzz_xxxxxyy = primBuffer.data(gkoff + 360 * idx + 327);

                auto gk_zzz_xxxxxyz = primBuffer.data(gkoff + 360 * idx + 328);

                auto gk_zzz_xxxxxzz = primBuffer.data(gkoff + 360 * idx + 329);

                auto gk_zzz_xxxxyyy = primBuffer.data(gkoff + 360 * idx + 330);

                auto gk_zzz_xxxxyyz = primBuffer.data(gkoff + 360 * idx + 331);

                auto gk_zzz_xxxxyzz = primBuffer.data(gkoff + 360 * idx + 332);

                auto gk_zzz_xxxxzzz = primBuffer.data(gkoff + 360 * idx + 333);

                auto gk_zzz_xxxyyyy = primBuffer.data(gkoff + 360 * idx + 334);

                auto gk_zzz_xxxyyyz = primBuffer.data(gkoff + 360 * idx + 335);

                auto gk_zzz_xxxyyzz = primBuffer.data(gkoff + 360 * idx + 336);

                auto gk_zzz_xxxyzzz = primBuffer.data(gkoff + 360 * idx + 337);

                auto gk_zzz_xxxzzzz = primBuffer.data(gkoff + 360 * idx + 338);

                auto gk_zzz_xxyyyyy = primBuffer.data(gkoff + 360 * idx + 339);

                auto gk_zzz_xxyyyyz = primBuffer.data(gkoff + 360 * idx + 340);

                auto gk_zzz_xxyyyzz = primBuffer.data(gkoff + 360 * idx + 341);

                auto gk_zzz_xxyyzzz = primBuffer.data(gkoff + 360 * idx + 342);

                auto gk_zzz_xxyzzzz = primBuffer.data(gkoff + 360 * idx + 343);

                auto gk_zzz_xxzzzzz = primBuffer.data(gkoff + 360 * idx + 344);

                auto gk_zzz_xyyyyyy = primBuffer.data(gkoff + 360 * idx + 345);

                auto gk_zzz_xyyyyyz = primBuffer.data(gkoff + 360 * idx + 346);

                auto gk_zzz_xyyyyzz = primBuffer.data(gkoff + 360 * idx + 347);

                auto gk_zzz_xyyyzzz = primBuffer.data(gkoff + 360 * idx + 348);

                auto gk_zzz_xyyzzzz = primBuffer.data(gkoff + 360 * idx + 349);

                auto gk_zzz_xyzzzzz = primBuffer.data(gkoff + 360 * idx + 350);

                auto gk_zzz_xzzzzzz = primBuffer.data(gkoff + 360 * idx + 351);

                auto gk_zzz_yyyyyyy = primBuffer.data(gkoff + 360 * idx + 352);

                auto gk_zzz_yyyyyyz = primBuffer.data(gkoff + 360 * idx + 353);

                auto gk_zzz_yyyyyzz = primBuffer.data(gkoff + 360 * idx + 354);

                auto gk_zzz_yyyyzzz = primBuffer.data(gkoff + 360 * idx + 355);

                auto gk_zzz_yyyzzzz = primBuffer.data(gkoff + 360 * idx + 356);

                auto gk_zzz_yyzzzzz = primBuffer.data(gkoff + 360 * idx + 357);

                auto gk_zzz_yzzzzzz = primBuffer.data(gkoff + 360 * idx + 358);

                auto gk_zzz_zzzzzzz = primBuffer.data(gkoff + 360 * idx + 359);

                // set up pointers to (D|g(r,r')|SL)^(m) integrals

                auto g20_xx_xxxxxxxx = primBuffer.data(g20off + 270 * idx);

                auto g20_xx_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 1);

                auto g20_xx_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 2);

                auto g20_xx_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 3);

                auto g20_xx_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 4);

                auto g20_xx_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 5);

                auto g20_xx_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 6);

                auto g20_xx_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 7);

                auto g20_xx_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 8);

                auto g20_xx_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 9);

                auto g20_xx_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 10);

                auto g20_xx_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 11);

                auto g20_xx_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 12);

                auto g20_xx_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 13);

                auto g20_xx_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 14);

                auto g20_xx_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 15);

                auto g20_xx_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 16);

                auto g20_xx_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 17);

                auto g20_xx_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 18);

                auto g20_xx_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 19);

                auto g20_xx_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 20);

                auto g20_xx_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 21);

                auto g20_xx_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 22);

                auto g20_xx_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 23);

                auto g20_xx_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 24);

                auto g20_xx_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 25);

                auto g20_xx_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 26);

                auto g20_xx_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 27);

                auto g20_xx_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 28);

                auto g20_xx_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 29);

                auto g20_xx_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 30);

                auto g20_xx_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 31);

                auto g20_xx_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 32);

                auto g20_xx_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 33);

                auto g20_xx_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 34);

                auto g20_xx_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 35);

                auto g20_xx_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 36);

                auto g20_xx_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 37);

                auto g20_xx_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 38);

                auto g20_xx_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 39);

                auto g20_xx_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 40);

                auto g20_xx_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 41);

                auto g20_xx_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 42);

                auto g20_xx_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 43);

                auto g20_xx_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 44);

                auto g20_xy_xxxxxxxx = primBuffer.data(g20off + 270 * idx + 45);

                auto g20_xy_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 46);

                auto g20_xy_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 47);

                auto g20_xy_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 48);

                auto g20_xy_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 49);

                auto g20_xy_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 50);

                auto g20_xy_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 51);

                auto g20_xy_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 52);

                auto g20_xy_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 53);

                auto g20_xy_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 54);

                auto g20_xy_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 55);

                auto g20_xy_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 56);

                auto g20_xy_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 57);

                auto g20_xy_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 58);

                auto g20_xy_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 59);

                auto g20_xy_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 60);

                auto g20_xy_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 61);

                auto g20_xy_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 62);

                auto g20_xy_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 63);

                auto g20_xy_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 64);

                auto g20_xy_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 65);

                auto g20_xy_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 66);

                auto g20_xy_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 67);

                auto g20_xy_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 68);

                auto g20_xy_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 69);

                auto g20_xy_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 70);

                auto g20_xy_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 71);

                auto g20_xy_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 72);

                auto g20_xy_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 73);

                auto g20_xy_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 74);

                auto g20_xy_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 75);

                auto g20_xy_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 76);

                auto g20_xy_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 77);

                auto g20_xy_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 78);

                auto g20_xy_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 79);

                auto g20_xy_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 80);

                auto g20_xy_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 81);

                auto g20_xy_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 82);

                auto g20_xy_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 83);

                auto g20_xy_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 84);

                auto g20_xy_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 85);

                auto g20_xy_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 86);

                auto g20_xy_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 87);

                auto g20_xy_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 88);

                auto g20_xy_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 89);

                auto g20_xz_xxxxxxxx = primBuffer.data(g20off + 270 * idx + 90);

                auto g20_xz_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 91);

                auto g20_xz_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 92);

                auto g20_xz_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 93);

                auto g20_xz_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 94);

                auto g20_xz_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 95);

                auto g20_xz_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 96);

                auto g20_xz_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 97);

                auto g20_xz_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 98);

                auto g20_xz_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 99);

                auto g20_xz_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 100);

                auto g20_xz_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 101);

                auto g20_xz_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 102);

                auto g20_xz_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 103);

                auto g20_xz_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 104);

                auto g20_xz_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 105);

                auto g20_xz_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 106);

                auto g20_xz_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 107);

                auto g20_xz_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 108);

                auto g20_xz_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 109);

                auto g20_xz_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 110);

                auto g20_xz_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 111);

                auto g20_xz_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 112);

                auto g20_xz_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 113);

                auto g20_xz_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 114);

                auto g20_xz_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 115);

                auto g20_xz_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 116);

                auto g20_xz_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 117);

                auto g20_xz_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 118);

                auto g20_xz_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 119);

                auto g20_xz_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 120);

                auto g20_xz_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 121);

                auto g20_xz_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 122);

                auto g20_xz_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 123);

                auto g20_xz_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 124);

                auto g20_xz_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 125);

                auto g20_xz_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 126);

                auto g20_xz_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 127);

                auto g20_xz_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 128);

                auto g20_xz_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 129);

                auto g20_xz_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 130);

                auto g20_xz_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 131);

                auto g20_xz_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 132);

                auto g20_xz_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 133);

                auto g20_xz_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 134);

                auto g20_yy_xxxxxxxx = primBuffer.data(g20off + 270 * idx + 135);

                auto g20_yy_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 136);

                auto g20_yy_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 137);

                auto g20_yy_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 138);

                auto g20_yy_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 139);

                auto g20_yy_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 140);

                auto g20_yy_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 141);

                auto g20_yy_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 142);

                auto g20_yy_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 143);

                auto g20_yy_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 144);

                auto g20_yy_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 145);

                auto g20_yy_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 146);

                auto g20_yy_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 147);

                auto g20_yy_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 148);

                auto g20_yy_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 149);

                auto g20_yy_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 150);

                auto g20_yy_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 151);

                auto g20_yy_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 152);

                auto g20_yy_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 153);

                auto g20_yy_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 154);

                auto g20_yy_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 155);

                auto g20_yy_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 156);

                auto g20_yy_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 157);

                auto g20_yy_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 158);

                auto g20_yy_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 159);

                auto g20_yy_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 160);

                auto g20_yy_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 161);

                auto g20_yy_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 162);

                auto g20_yy_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 163);

                auto g20_yy_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 164);

                auto g20_yy_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 165);

                auto g20_yy_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 166);

                auto g20_yy_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 167);

                auto g20_yy_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 168);

                auto g20_yy_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 169);

                auto g20_yy_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 170);

                auto g20_yy_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 171);

                auto g20_yy_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 172);

                auto g20_yy_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 173);

                auto g20_yy_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 174);

                auto g20_yy_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 175);

                auto g20_yy_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 176);

                auto g20_yy_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 177);

                auto g20_yy_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 178);

                auto g20_yy_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 179);

                auto g20_yz_xxxxxxxx = primBuffer.data(g20off + 270 * idx + 180);

                auto g20_yz_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 181);

                auto g20_yz_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 182);

                auto g20_yz_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 183);

                auto g20_yz_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 184);

                auto g20_yz_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 185);

                auto g20_yz_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 186);

                auto g20_yz_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 187);

                auto g20_yz_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 188);

                auto g20_yz_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 189);

                auto g20_yz_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 190);

                auto g20_yz_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 191);

                auto g20_yz_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 192);

                auto g20_yz_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 193);

                auto g20_yz_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 194);

                auto g20_yz_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 195);

                auto g20_yz_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 196);

                auto g20_yz_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 197);

                auto g20_yz_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 198);

                auto g20_yz_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 199);

                auto g20_yz_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 200);

                auto g20_yz_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 201);

                auto g20_yz_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 202);

                auto g20_yz_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 203);

                auto g20_yz_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 204);

                auto g20_yz_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 205);

                auto g20_yz_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 206);

                auto g20_yz_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 207);

                auto g20_yz_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 208);

                auto g20_yz_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 209);

                auto g20_yz_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 210);

                auto g20_yz_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 211);

                auto g20_yz_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 212);

                auto g20_yz_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 213);

                auto g20_yz_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 214);

                auto g20_yz_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 215);

                auto g20_yz_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 216);

                auto g20_yz_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 217);

                auto g20_yz_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 218);

                auto g20_yz_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 219);

                auto g20_yz_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 220);

                auto g20_yz_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 221);

                auto g20_yz_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 222);

                auto g20_yz_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 223);

                auto g20_yz_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 224);

                auto g20_zz_xxxxxxxx = primBuffer.data(g20off + 270 * idx + 225);

                auto g20_zz_xxxxxxxy = primBuffer.data(g20off + 270 * idx + 226);

                auto g20_zz_xxxxxxxz = primBuffer.data(g20off + 270 * idx + 227);

                auto g20_zz_xxxxxxyy = primBuffer.data(g20off + 270 * idx + 228);

                auto g20_zz_xxxxxxyz = primBuffer.data(g20off + 270 * idx + 229);

                auto g20_zz_xxxxxxzz = primBuffer.data(g20off + 270 * idx + 230);

                auto g20_zz_xxxxxyyy = primBuffer.data(g20off + 270 * idx + 231);

                auto g20_zz_xxxxxyyz = primBuffer.data(g20off + 270 * idx + 232);

                auto g20_zz_xxxxxyzz = primBuffer.data(g20off + 270 * idx + 233);

                auto g20_zz_xxxxxzzz = primBuffer.data(g20off + 270 * idx + 234);

                auto g20_zz_xxxxyyyy = primBuffer.data(g20off + 270 * idx + 235);

                auto g20_zz_xxxxyyyz = primBuffer.data(g20off + 270 * idx + 236);

                auto g20_zz_xxxxyyzz = primBuffer.data(g20off + 270 * idx + 237);

                auto g20_zz_xxxxyzzz = primBuffer.data(g20off + 270 * idx + 238);

                auto g20_zz_xxxxzzzz = primBuffer.data(g20off + 270 * idx + 239);

                auto g20_zz_xxxyyyyy = primBuffer.data(g20off + 270 * idx + 240);

                auto g20_zz_xxxyyyyz = primBuffer.data(g20off + 270 * idx + 241);

                auto g20_zz_xxxyyyzz = primBuffer.data(g20off + 270 * idx + 242);

                auto g20_zz_xxxyyzzz = primBuffer.data(g20off + 270 * idx + 243);

                auto g20_zz_xxxyzzzz = primBuffer.data(g20off + 270 * idx + 244);

                auto g20_zz_xxxzzzzz = primBuffer.data(g20off + 270 * idx + 245);

                auto g20_zz_xxyyyyyy = primBuffer.data(g20off + 270 * idx + 246);

                auto g20_zz_xxyyyyyz = primBuffer.data(g20off + 270 * idx + 247);

                auto g20_zz_xxyyyyzz = primBuffer.data(g20off + 270 * idx + 248);

                auto g20_zz_xxyyyzzz = primBuffer.data(g20off + 270 * idx + 249);

                auto g20_zz_xxyyzzzz = primBuffer.data(g20off + 270 * idx + 250);

                auto g20_zz_xxyzzzzz = primBuffer.data(g20off + 270 * idx + 251);

                auto g20_zz_xxzzzzzz = primBuffer.data(g20off + 270 * idx + 252);

                auto g20_zz_xyyyyyyy = primBuffer.data(g20off + 270 * idx + 253);

                auto g20_zz_xyyyyyyz = primBuffer.data(g20off + 270 * idx + 254);

                auto g20_zz_xyyyyyzz = primBuffer.data(g20off + 270 * idx + 255);

                auto g20_zz_xyyyyzzz = primBuffer.data(g20off + 270 * idx + 256);

                auto g20_zz_xyyyzzzz = primBuffer.data(g20off + 270 * idx + 257);

                auto g20_zz_xyyzzzzz = primBuffer.data(g20off + 270 * idx + 258);

                auto g20_zz_xyzzzzzz = primBuffer.data(g20off + 270 * idx + 259);

                auto g20_zz_xzzzzzzz = primBuffer.data(g20off + 270 * idx + 260);

                auto g20_zz_yyyyyyyy = primBuffer.data(g20off + 270 * idx + 261);

                auto g20_zz_yyyyyyyz = primBuffer.data(g20off + 270 * idx + 262);

                auto g20_zz_yyyyyyzz = primBuffer.data(g20off + 270 * idx + 263);

                auto g20_zz_yyyyyzzz = primBuffer.data(g20off + 270 * idx + 264);

                auto g20_zz_yyyyzzzz = primBuffer.data(g20off + 270 * idx + 265);

                auto g20_zz_yyyzzzzz = primBuffer.data(g20off + 270 * idx + 266);

                auto g20_zz_yyzzzzzz = primBuffer.data(g20off + 270 * idx + 267);

                auto g20_zz_yzzzzzzz = primBuffer.data(g20off + 270 * idx + 268);

                auto g20_zz_zzzzzzzz = primBuffer.data(g20off + 270 * idx + 269);

                // set up pointers to (D|g(r,r')|SL)^(m+1) integrals

                auto g21_xx_xxxxxxxx = primBuffer.data(g21off + 270 * idx);

                auto g21_xx_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 1);

                auto g21_xx_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 2);

                auto g21_xx_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 3);

                auto g21_xx_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 4);

                auto g21_xx_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 5);

                auto g21_xx_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 6);

                auto g21_xx_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 7);

                auto g21_xx_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 8);

                auto g21_xx_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 9);

                auto g21_xx_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 10);

                auto g21_xx_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 11);

                auto g21_xx_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 12);

                auto g21_xx_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 13);

                auto g21_xx_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 14);

                auto g21_xx_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 15);

                auto g21_xx_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 16);

                auto g21_xx_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 17);

                auto g21_xx_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 18);

                auto g21_xx_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 19);

                auto g21_xx_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 20);

                auto g21_xx_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 21);

                auto g21_xx_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 22);

                auto g21_xx_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 23);

                auto g21_xx_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 24);

                auto g21_xx_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 25);

                auto g21_xx_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 26);

                auto g21_xx_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 27);

                auto g21_xx_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 28);

                auto g21_xx_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 29);

                auto g21_xx_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 30);

                auto g21_xx_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 31);

                auto g21_xx_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 32);

                auto g21_xx_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 33);

                auto g21_xx_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 34);

                auto g21_xx_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 35);

                auto g21_xx_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 36);

                auto g21_xx_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 37);

                auto g21_xx_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 38);

                auto g21_xx_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 39);

                auto g21_xx_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 40);

                auto g21_xx_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 41);

                auto g21_xx_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 42);

                auto g21_xx_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 43);

                auto g21_xx_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 44);

                auto g21_xy_xxxxxxxx = primBuffer.data(g21off + 270 * idx + 45);

                auto g21_xy_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 46);

                auto g21_xy_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 47);

                auto g21_xy_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 48);

                auto g21_xy_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 49);

                auto g21_xy_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 50);

                auto g21_xy_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 51);

                auto g21_xy_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 52);

                auto g21_xy_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 53);

                auto g21_xy_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 54);

                auto g21_xy_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 55);

                auto g21_xy_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 56);

                auto g21_xy_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 57);

                auto g21_xy_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 58);

                auto g21_xy_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 59);

                auto g21_xy_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 60);

                auto g21_xy_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 61);

                auto g21_xy_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 62);

                auto g21_xy_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 63);

                auto g21_xy_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 64);

                auto g21_xy_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 65);

                auto g21_xy_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 66);

                auto g21_xy_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 67);

                auto g21_xy_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 68);

                auto g21_xy_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 69);

                auto g21_xy_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 70);

                auto g21_xy_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 71);

                auto g21_xy_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 72);

                auto g21_xy_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 73);

                auto g21_xy_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 74);

                auto g21_xy_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 75);

                auto g21_xy_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 76);

                auto g21_xy_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 77);

                auto g21_xy_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 78);

                auto g21_xy_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 79);

                auto g21_xy_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 80);

                auto g21_xy_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 81);

                auto g21_xy_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 82);

                auto g21_xy_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 83);

                auto g21_xy_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 84);

                auto g21_xy_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 85);

                auto g21_xy_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 86);

                auto g21_xy_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 87);

                auto g21_xy_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 88);

                auto g21_xy_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 89);

                auto g21_xz_xxxxxxxx = primBuffer.data(g21off + 270 * idx + 90);

                auto g21_xz_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 91);

                auto g21_xz_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 92);

                auto g21_xz_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 93);

                auto g21_xz_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 94);

                auto g21_xz_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 95);

                auto g21_xz_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 96);

                auto g21_xz_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 97);

                auto g21_xz_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 98);

                auto g21_xz_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 99);

                auto g21_xz_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 100);

                auto g21_xz_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 101);

                auto g21_xz_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 102);

                auto g21_xz_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 103);

                auto g21_xz_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 104);

                auto g21_xz_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 105);

                auto g21_xz_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 106);

                auto g21_xz_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 107);

                auto g21_xz_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 108);

                auto g21_xz_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 109);

                auto g21_xz_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 110);

                auto g21_xz_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 111);

                auto g21_xz_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 112);

                auto g21_xz_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 113);

                auto g21_xz_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 114);

                auto g21_xz_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 115);

                auto g21_xz_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 116);

                auto g21_xz_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 117);

                auto g21_xz_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 118);

                auto g21_xz_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 119);

                auto g21_xz_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 120);

                auto g21_xz_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 121);

                auto g21_xz_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 122);

                auto g21_xz_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 123);

                auto g21_xz_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 124);

                auto g21_xz_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 125);

                auto g21_xz_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 126);

                auto g21_xz_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 127);

                auto g21_xz_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 128);

                auto g21_xz_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 129);

                auto g21_xz_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 130);

                auto g21_xz_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 131);

                auto g21_xz_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 132);

                auto g21_xz_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 133);

                auto g21_xz_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 134);

                auto g21_yy_xxxxxxxx = primBuffer.data(g21off + 270 * idx + 135);

                auto g21_yy_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 136);

                auto g21_yy_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 137);

                auto g21_yy_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 138);

                auto g21_yy_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 139);

                auto g21_yy_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 140);

                auto g21_yy_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 141);

                auto g21_yy_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 142);

                auto g21_yy_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 143);

                auto g21_yy_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 144);

                auto g21_yy_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 145);

                auto g21_yy_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 146);

                auto g21_yy_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 147);

                auto g21_yy_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 148);

                auto g21_yy_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 149);

                auto g21_yy_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 150);

                auto g21_yy_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 151);

                auto g21_yy_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 152);

                auto g21_yy_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 153);

                auto g21_yy_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 154);

                auto g21_yy_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 155);

                auto g21_yy_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 156);

                auto g21_yy_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 157);

                auto g21_yy_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 158);

                auto g21_yy_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 159);

                auto g21_yy_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 160);

                auto g21_yy_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 161);

                auto g21_yy_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 162);

                auto g21_yy_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 163);

                auto g21_yy_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 164);

                auto g21_yy_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 165);

                auto g21_yy_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 166);

                auto g21_yy_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 167);

                auto g21_yy_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 168);

                auto g21_yy_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 169);

                auto g21_yy_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 170);

                auto g21_yy_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 171);

                auto g21_yy_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 172);

                auto g21_yy_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 173);

                auto g21_yy_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 174);

                auto g21_yy_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 175);

                auto g21_yy_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 176);

                auto g21_yy_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 177);

                auto g21_yy_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 178);

                auto g21_yy_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 179);

                auto g21_yz_xxxxxxxx = primBuffer.data(g21off + 270 * idx + 180);

                auto g21_yz_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 181);

                auto g21_yz_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 182);

                auto g21_yz_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 183);

                auto g21_yz_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 184);

                auto g21_yz_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 185);

                auto g21_yz_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 186);

                auto g21_yz_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 187);

                auto g21_yz_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 188);

                auto g21_yz_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 189);

                auto g21_yz_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 190);

                auto g21_yz_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 191);

                auto g21_yz_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 192);

                auto g21_yz_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 193);

                auto g21_yz_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 194);

                auto g21_yz_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 195);

                auto g21_yz_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 196);

                auto g21_yz_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 197);

                auto g21_yz_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 198);

                auto g21_yz_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 199);

                auto g21_yz_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 200);

                auto g21_yz_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 201);

                auto g21_yz_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 202);

                auto g21_yz_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 203);

                auto g21_yz_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 204);

                auto g21_yz_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 205);

                auto g21_yz_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 206);

                auto g21_yz_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 207);

                auto g21_yz_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 208);

                auto g21_yz_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 209);

                auto g21_yz_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 210);

                auto g21_yz_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 211);

                auto g21_yz_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 212);

                auto g21_yz_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 213);

                auto g21_yz_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 214);

                auto g21_yz_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 215);

                auto g21_yz_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 216);

                auto g21_yz_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 217);

                auto g21_yz_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 218);

                auto g21_yz_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 219);

                auto g21_yz_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 220);

                auto g21_yz_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 221);

                auto g21_yz_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 222);

                auto g21_yz_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 223);

                auto g21_yz_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 224);

                auto g21_zz_xxxxxxxx = primBuffer.data(g21off + 270 * idx + 225);

                auto g21_zz_xxxxxxxy = primBuffer.data(g21off + 270 * idx + 226);

                auto g21_zz_xxxxxxxz = primBuffer.data(g21off + 270 * idx + 227);

                auto g21_zz_xxxxxxyy = primBuffer.data(g21off + 270 * idx + 228);

                auto g21_zz_xxxxxxyz = primBuffer.data(g21off + 270 * idx + 229);

                auto g21_zz_xxxxxxzz = primBuffer.data(g21off + 270 * idx + 230);

                auto g21_zz_xxxxxyyy = primBuffer.data(g21off + 270 * idx + 231);

                auto g21_zz_xxxxxyyz = primBuffer.data(g21off + 270 * idx + 232);

                auto g21_zz_xxxxxyzz = primBuffer.data(g21off + 270 * idx + 233);

                auto g21_zz_xxxxxzzz = primBuffer.data(g21off + 270 * idx + 234);

                auto g21_zz_xxxxyyyy = primBuffer.data(g21off + 270 * idx + 235);

                auto g21_zz_xxxxyyyz = primBuffer.data(g21off + 270 * idx + 236);

                auto g21_zz_xxxxyyzz = primBuffer.data(g21off + 270 * idx + 237);

                auto g21_zz_xxxxyzzz = primBuffer.data(g21off + 270 * idx + 238);

                auto g21_zz_xxxxzzzz = primBuffer.data(g21off + 270 * idx + 239);

                auto g21_zz_xxxyyyyy = primBuffer.data(g21off + 270 * idx + 240);

                auto g21_zz_xxxyyyyz = primBuffer.data(g21off + 270 * idx + 241);

                auto g21_zz_xxxyyyzz = primBuffer.data(g21off + 270 * idx + 242);

                auto g21_zz_xxxyyzzz = primBuffer.data(g21off + 270 * idx + 243);

                auto g21_zz_xxxyzzzz = primBuffer.data(g21off + 270 * idx + 244);

                auto g21_zz_xxxzzzzz = primBuffer.data(g21off + 270 * idx + 245);

                auto g21_zz_xxyyyyyy = primBuffer.data(g21off + 270 * idx + 246);

                auto g21_zz_xxyyyyyz = primBuffer.data(g21off + 270 * idx + 247);

                auto g21_zz_xxyyyyzz = primBuffer.data(g21off + 270 * idx + 248);

                auto g21_zz_xxyyyzzz = primBuffer.data(g21off + 270 * idx + 249);

                auto g21_zz_xxyyzzzz = primBuffer.data(g21off + 270 * idx + 250);

                auto g21_zz_xxyzzzzz = primBuffer.data(g21off + 270 * idx + 251);

                auto g21_zz_xxzzzzzz = primBuffer.data(g21off + 270 * idx + 252);

                auto g21_zz_xyyyyyyy = primBuffer.data(g21off + 270 * idx + 253);

                auto g21_zz_xyyyyyyz = primBuffer.data(g21off + 270 * idx + 254);

                auto g21_zz_xyyyyyzz = primBuffer.data(g21off + 270 * idx + 255);

                auto g21_zz_xyyyyzzz = primBuffer.data(g21off + 270 * idx + 256);

                auto g21_zz_xyyyzzzz = primBuffer.data(g21off + 270 * idx + 257);

                auto g21_zz_xyyzzzzz = primBuffer.data(g21off + 270 * idx + 258);

                auto g21_zz_xyzzzzzz = primBuffer.data(g21off + 270 * idx + 259);

                auto g21_zz_xzzzzzzz = primBuffer.data(g21off + 270 * idx + 260);

                auto g21_zz_yyyyyyyy = primBuffer.data(g21off + 270 * idx + 261);

                auto g21_zz_yyyyyyyz = primBuffer.data(g21off + 270 * idx + 262);

                auto g21_zz_yyyyyyzz = primBuffer.data(g21off + 270 * idx + 263);

                auto g21_zz_yyyyyzzz = primBuffer.data(g21off + 270 * idx + 264);

                auto g21_zz_yyyyzzzz = primBuffer.data(g21off + 270 * idx + 265);

                auto g21_zz_yyyzzzzz = primBuffer.data(g21off + 270 * idx + 266);

                auto g21_zz_yyzzzzzz = primBuffer.data(g21off + 270 * idx + 267);

                auto g21_zz_yzzzzzzz = primBuffer.data(g21off + 270 * idx + 268);

                auto g21_zz_zzzzzzzz = primBuffer.data(g21off + 270 * idx + 269);

                // set up pointers to (F|g(r,r')|SL)^(m+1) integrals

                auto g11_xxx_xxxxxxxx = primBuffer.data(g11off + 450 * idx);

                auto g11_xxx_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 1);

                auto g11_xxx_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 2);

                auto g11_xxx_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 3);

                auto g11_xxx_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 4);

                auto g11_xxx_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 5);

                auto g11_xxx_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 6);

                auto g11_xxx_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 7);

                auto g11_xxx_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 8);

                auto g11_xxx_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 9);

                auto g11_xxx_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 10);

                auto g11_xxx_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 11);

                auto g11_xxx_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 12);

                auto g11_xxx_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 13);

                auto g11_xxx_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 14);

                auto g11_xxx_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 15);

                auto g11_xxx_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 16);

                auto g11_xxx_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 17);

                auto g11_xxx_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 18);

                auto g11_xxx_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 19);

                auto g11_xxx_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 20);

                auto g11_xxx_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 21);

                auto g11_xxx_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 22);

                auto g11_xxx_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 23);

                auto g11_xxx_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 24);

                auto g11_xxx_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 25);

                auto g11_xxx_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 26);

                auto g11_xxx_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 27);

                auto g11_xxx_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 28);

                auto g11_xxx_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 29);

                auto g11_xxx_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 30);

                auto g11_xxx_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 31);

                auto g11_xxx_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 32);

                auto g11_xxx_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 33);

                auto g11_xxx_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 34);

                auto g11_xxx_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 35);

                auto g11_xxx_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 36);

                auto g11_xxx_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 37);

                auto g11_xxx_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 38);

                auto g11_xxx_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 39);

                auto g11_xxx_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 40);

                auto g11_xxx_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 41);

                auto g11_xxx_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 42);

                auto g11_xxx_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 43);

                auto g11_xxx_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 44);

                auto g11_xxy_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 45);

                auto g11_xxy_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 46);

                auto g11_xxy_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 47);

                auto g11_xxy_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 48);

                auto g11_xxy_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 49);

                auto g11_xxy_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 50);

                auto g11_xxy_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 51);

                auto g11_xxy_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 52);

                auto g11_xxy_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 53);

                auto g11_xxy_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 54);

                auto g11_xxy_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 55);

                auto g11_xxy_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 56);

                auto g11_xxy_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 57);

                auto g11_xxy_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 58);

                auto g11_xxy_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 59);

                auto g11_xxy_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 60);

                auto g11_xxy_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 61);

                auto g11_xxy_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 62);

                auto g11_xxy_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 63);

                auto g11_xxy_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 64);

                auto g11_xxy_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 65);

                auto g11_xxy_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 66);

                auto g11_xxy_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 67);

                auto g11_xxy_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 68);

                auto g11_xxy_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 69);

                auto g11_xxy_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 70);

                auto g11_xxy_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 71);

                auto g11_xxy_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 72);

                auto g11_xxy_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 73);

                auto g11_xxy_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 74);

                auto g11_xxy_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 75);

                auto g11_xxy_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 76);

                auto g11_xxy_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 77);

                auto g11_xxy_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 78);

                auto g11_xxy_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 79);

                auto g11_xxy_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 80);

                auto g11_xxy_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 81);

                auto g11_xxy_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 82);

                auto g11_xxy_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 83);

                auto g11_xxy_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 84);

                auto g11_xxy_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 85);

                auto g11_xxy_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 86);

                auto g11_xxy_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 87);

                auto g11_xxy_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 88);

                auto g11_xxy_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 89);

                auto g11_xxz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 90);

                auto g11_xxz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 91);

                auto g11_xxz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 92);

                auto g11_xxz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 93);

                auto g11_xxz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 94);

                auto g11_xxz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 95);

                auto g11_xxz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 96);

                auto g11_xxz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 97);

                auto g11_xxz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 98);

                auto g11_xxz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 99);

                auto g11_xxz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 100);

                auto g11_xxz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 101);

                auto g11_xxz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 102);

                auto g11_xxz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 103);

                auto g11_xxz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 104);

                auto g11_xxz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 105);

                auto g11_xxz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 106);

                auto g11_xxz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 107);

                auto g11_xxz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 108);

                auto g11_xxz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 109);

                auto g11_xxz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 110);

                auto g11_xxz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 111);

                auto g11_xxz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 112);

                auto g11_xxz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 113);

                auto g11_xxz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 114);

                auto g11_xxz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 115);

                auto g11_xxz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 116);

                auto g11_xxz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 117);

                auto g11_xxz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 118);

                auto g11_xxz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 119);

                auto g11_xxz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 120);

                auto g11_xxz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 121);

                auto g11_xxz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 122);

                auto g11_xxz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 123);

                auto g11_xxz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 124);

                auto g11_xxz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 125);

                auto g11_xxz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 126);

                auto g11_xxz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 127);

                auto g11_xxz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 128);

                auto g11_xxz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 129);

                auto g11_xxz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 130);

                auto g11_xxz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 131);

                auto g11_xxz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 132);

                auto g11_xxz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 133);

                auto g11_xxz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 134);

                auto g11_xyy_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 135);

                auto g11_xyy_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 136);

                auto g11_xyy_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 137);

                auto g11_xyy_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 138);

                auto g11_xyy_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 139);

                auto g11_xyy_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 140);

                auto g11_xyy_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 141);

                auto g11_xyy_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 142);

                auto g11_xyy_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 143);

                auto g11_xyy_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 144);

                auto g11_xyy_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 145);

                auto g11_xyy_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 146);

                auto g11_xyy_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 147);

                auto g11_xyy_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 148);

                auto g11_xyy_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 149);

                auto g11_xyy_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 150);

                auto g11_xyy_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 151);

                auto g11_xyy_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 152);

                auto g11_xyy_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 153);

                auto g11_xyy_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 154);

                auto g11_xyy_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 155);

                auto g11_xyy_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 156);

                auto g11_xyy_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 157);

                auto g11_xyy_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 158);

                auto g11_xyy_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 159);

                auto g11_xyy_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 160);

                auto g11_xyy_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 161);

                auto g11_xyy_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 162);

                auto g11_xyy_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 163);

                auto g11_xyy_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 164);

                auto g11_xyy_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 165);

                auto g11_xyy_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 166);

                auto g11_xyy_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 167);

                auto g11_xyy_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 168);

                auto g11_xyy_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 169);

                auto g11_xyy_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 170);

                auto g11_xyy_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 171);

                auto g11_xyy_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 172);

                auto g11_xyy_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 173);

                auto g11_xyy_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 174);

                auto g11_xyy_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 175);

                auto g11_xyy_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 176);

                auto g11_xyy_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 177);

                auto g11_xyy_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 178);

                auto g11_xyy_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 179);

                auto g11_xyz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 180);

                auto g11_xyz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 181);

                auto g11_xyz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 182);

                auto g11_xyz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 183);

                auto g11_xyz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 184);

                auto g11_xyz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 185);

                auto g11_xyz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 186);

                auto g11_xyz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 187);

                auto g11_xyz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 188);

                auto g11_xyz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 189);

                auto g11_xyz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 190);

                auto g11_xyz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 191);

                auto g11_xyz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 192);

                auto g11_xyz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 193);

                auto g11_xyz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 194);

                auto g11_xyz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 195);

                auto g11_xyz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 196);

                auto g11_xyz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 197);

                auto g11_xyz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 198);

                auto g11_xyz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 199);

                auto g11_xyz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 200);

                auto g11_xyz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 201);

                auto g11_xyz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 202);

                auto g11_xyz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 203);

                auto g11_xyz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 204);

                auto g11_xyz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 205);

                auto g11_xyz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 206);

                auto g11_xyz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 207);

                auto g11_xyz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 208);

                auto g11_xyz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 209);

                auto g11_xyz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 210);

                auto g11_xyz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 211);

                auto g11_xyz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 212);

                auto g11_xyz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 213);

                auto g11_xyz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 214);

                auto g11_xyz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 215);

                auto g11_xyz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 216);

                auto g11_xyz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 217);

                auto g11_xyz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 218);

                auto g11_xyz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 219);

                auto g11_xyz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 220);

                auto g11_xyz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 221);

                auto g11_xyz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 222);

                auto g11_xyz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 223);

                auto g11_xyz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 224);

                auto g11_xzz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 225);

                auto g11_xzz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 226);

                auto g11_xzz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 227);

                auto g11_xzz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 228);

                auto g11_xzz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 229);

                auto g11_xzz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 230);

                auto g11_xzz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 231);

                auto g11_xzz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 232);

                auto g11_xzz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 233);

                auto g11_xzz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 234);

                auto g11_xzz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 235);

                auto g11_xzz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 236);

                auto g11_xzz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 237);

                auto g11_xzz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 238);

                auto g11_xzz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 239);

                auto g11_xzz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 240);

                auto g11_xzz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 241);

                auto g11_xzz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 242);

                auto g11_xzz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 243);

                auto g11_xzz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 244);

                auto g11_xzz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 245);

                auto g11_xzz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 246);

                auto g11_xzz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 247);

                auto g11_xzz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 248);

                auto g11_xzz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 249);

                auto g11_xzz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 250);

                auto g11_xzz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 251);

                auto g11_xzz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 252);

                auto g11_xzz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 253);

                auto g11_xzz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 254);

                auto g11_xzz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 255);

                auto g11_xzz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 256);

                auto g11_xzz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 257);

                auto g11_xzz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 258);

                auto g11_xzz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 259);

                auto g11_xzz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 260);

                auto g11_xzz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 261);

                auto g11_xzz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 262);

                auto g11_xzz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 263);

                auto g11_xzz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 264);

                auto g11_xzz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 265);

                auto g11_xzz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 266);

                auto g11_xzz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 267);

                auto g11_xzz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 268);

                auto g11_xzz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 269);

                auto g11_yyy_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 270);

                auto g11_yyy_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 271);

                auto g11_yyy_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 272);

                auto g11_yyy_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 273);

                auto g11_yyy_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 274);

                auto g11_yyy_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 275);

                auto g11_yyy_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 276);

                auto g11_yyy_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 277);

                auto g11_yyy_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 278);

                auto g11_yyy_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 279);

                auto g11_yyy_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 280);

                auto g11_yyy_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 281);

                auto g11_yyy_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 282);

                auto g11_yyy_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 283);

                auto g11_yyy_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 284);

                auto g11_yyy_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 285);

                auto g11_yyy_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 286);

                auto g11_yyy_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 287);

                auto g11_yyy_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 288);

                auto g11_yyy_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 289);

                auto g11_yyy_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 290);

                auto g11_yyy_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 291);

                auto g11_yyy_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 292);

                auto g11_yyy_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 293);

                auto g11_yyy_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 294);

                auto g11_yyy_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 295);

                auto g11_yyy_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 296);

                auto g11_yyy_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 297);

                auto g11_yyy_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 298);

                auto g11_yyy_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 299);

                auto g11_yyy_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 300);

                auto g11_yyy_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 301);

                auto g11_yyy_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 302);

                auto g11_yyy_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 303);

                auto g11_yyy_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 304);

                auto g11_yyy_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 305);

                auto g11_yyy_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 306);

                auto g11_yyy_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 307);

                auto g11_yyy_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 308);

                auto g11_yyy_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 309);

                auto g11_yyy_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 310);

                auto g11_yyy_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 311);

                auto g11_yyy_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 312);

                auto g11_yyy_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 313);

                auto g11_yyy_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 314);

                auto g11_yyz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 315);

                auto g11_yyz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 316);

                auto g11_yyz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 317);

                auto g11_yyz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 318);

                auto g11_yyz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 319);

                auto g11_yyz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 320);

                auto g11_yyz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 321);

                auto g11_yyz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 322);

                auto g11_yyz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 323);

                auto g11_yyz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 324);

                auto g11_yyz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 325);

                auto g11_yyz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 326);

                auto g11_yyz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 327);

                auto g11_yyz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 328);

                auto g11_yyz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 329);

                auto g11_yyz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 330);

                auto g11_yyz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 331);

                auto g11_yyz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 332);

                auto g11_yyz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 333);

                auto g11_yyz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 334);

                auto g11_yyz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 335);

                auto g11_yyz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 336);

                auto g11_yyz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 337);

                auto g11_yyz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 338);

                auto g11_yyz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 339);

                auto g11_yyz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 340);

                auto g11_yyz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 341);

                auto g11_yyz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 342);

                auto g11_yyz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 343);

                auto g11_yyz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 344);

                auto g11_yyz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 345);

                auto g11_yyz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 346);

                auto g11_yyz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 347);

                auto g11_yyz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 348);

                auto g11_yyz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 349);

                auto g11_yyz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 350);

                auto g11_yyz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 351);

                auto g11_yyz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 352);

                auto g11_yyz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 353);

                auto g11_yyz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 354);

                auto g11_yyz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 355);

                auto g11_yyz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 356);

                auto g11_yyz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 357);

                auto g11_yyz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 358);

                auto g11_yyz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 359);

                auto g11_yzz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 360);

                auto g11_yzz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 361);

                auto g11_yzz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 362);

                auto g11_yzz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 363);

                auto g11_yzz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 364);

                auto g11_yzz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 365);

                auto g11_yzz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 366);

                auto g11_yzz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 367);

                auto g11_yzz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 368);

                auto g11_yzz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 369);

                auto g11_yzz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 370);

                auto g11_yzz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 371);

                auto g11_yzz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 372);

                auto g11_yzz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 373);

                auto g11_yzz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 374);

                auto g11_yzz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 375);

                auto g11_yzz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 376);

                auto g11_yzz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 377);

                auto g11_yzz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 378);

                auto g11_yzz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 379);

                auto g11_yzz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 380);

                auto g11_yzz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 381);

                auto g11_yzz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 382);

                auto g11_yzz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 383);

                auto g11_yzz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 384);

                auto g11_yzz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 385);

                auto g11_yzz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 386);

                auto g11_yzz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 387);

                auto g11_yzz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 388);

                auto g11_yzz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 389);

                auto g11_yzz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 390);

                auto g11_yzz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 391);

                auto g11_yzz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 392);

                auto g11_yzz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 393);

                auto g11_yzz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 394);

                auto g11_yzz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 395);

                auto g11_yzz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 396);

                auto g11_yzz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 397);

                auto g11_yzz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 398);

                auto g11_yzz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 399);

                auto g11_yzz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 400);

                auto g11_yzz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 401);

                auto g11_yzz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 402);

                auto g11_yzz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 403);

                auto g11_yzz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 404);

                auto g11_zzz_xxxxxxxx = primBuffer.data(g11off + 450 * idx + 405);

                auto g11_zzz_xxxxxxxy = primBuffer.data(g11off + 450 * idx + 406);

                auto g11_zzz_xxxxxxxz = primBuffer.data(g11off + 450 * idx + 407);

                auto g11_zzz_xxxxxxyy = primBuffer.data(g11off + 450 * idx + 408);

                auto g11_zzz_xxxxxxyz = primBuffer.data(g11off + 450 * idx + 409);

                auto g11_zzz_xxxxxxzz = primBuffer.data(g11off + 450 * idx + 410);

                auto g11_zzz_xxxxxyyy = primBuffer.data(g11off + 450 * idx + 411);

                auto g11_zzz_xxxxxyyz = primBuffer.data(g11off + 450 * idx + 412);

                auto g11_zzz_xxxxxyzz = primBuffer.data(g11off + 450 * idx + 413);

                auto g11_zzz_xxxxxzzz = primBuffer.data(g11off + 450 * idx + 414);

                auto g11_zzz_xxxxyyyy = primBuffer.data(g11off + 450 * idx + 415);

                auto g11_zzz_xxxxyyyz = primBuffer.data(g11off + 450 * idx + 416);

                auto g11_zzz_xxxxyyzz = primBuffer.data(g11off + 450 * idx + 417);

                auto g11_zzz_xxxxyzzz = primBuffer.data(g11off + 450 * idx + 418);

                auto g11_zzz_xxxxzzzz = primBuffer.data(g11off + 450 * idx + 419);

                auto g11_zzz_xxxyyyyy = primBuffer.data(g11off + 450 * idx + 420);

                auto g11_zzz_xxxyyyyz = primBuffer.data(g11off + 450 * idx + 421);

                auto g11_zzz_xxxyyyzz = primBuffer.data(g11off + 450 * idx + 422);

                auto g11_zzz_xxxyyzzz = primBuffer.data(g11off + 450 * idx + 423);

                auto g11_zzz_xxxyzzzz = primBuffer.data(g11off + 450 * idx + 424);

                auto g11_zzz_xxxzzzzz = primBuffer.data(g11off + 450 * idx + 425);

                auto g11_zzz_xxyyyyyy = primBuffer.data(g11off + 450 * idx + 426);

                auto g11_zzz_xxyyyyyz = primBuffer.data(g11off + 450 * idx + 427);

                auto g11_zzz_xxyyyyzz = primBuffer.data(g11off + 450 * idx + 428);

                auto g11_zzz_xxyyyzzz = primBuffer.data(g11off + 450 * idx + 429);

                auto g11_zzz_xxyyzzzz = primBuffer.data(g11off + 450 * idx + 430);

                auto g11_zzz_xxyzzzzz = primBuffer.data(g11off + 450 * idx + 431);

                auto g11_zzz_xxzzzzzz = primBuffer.data(g11off + 450 * idx + 432);

                auto g11_zzz_xyyyyyyy = primBuffer.data(g11off + 450 * idx + 433);

                auto g11_zzz_xyyyyyyz = primBuffer.data(g11off + 450 * idx + 434);

                auto g11_zzz_xyyyyyzz = primBuffer.data(g11off + 450 * idx + 435);

                auto g11_zzz_xyyyyzzz = primBuffer.data(g11off + 450 * idx + 436);

                auto g11_zzz_xyyyzzzz = primBuffer.data(g11off + 450 * idx + 437);

                auto g11_zzz_xyyzzzzz = primBuffer.data(g11off + 450 * idx + 438);

                auto g11_zzz_xyzzzzzz = primBuffer.data(g11off + 450 * idx + 439);

                auto g11_zzz_xzzzzzzz = primBuffer.data(g11off + 450 * idx + 440);

                auto g11_zzz_yyyyyyyy = primBuffer.data(g11off + 450 * idx + 441);

                auto g11_zzz_yyyyyyyz = primBuffer.data(g11off + 450 * idx + 442);

                auto g11_zzz_yyyyyyzz = primBuffer.data(g11off + 450 * idx + 443);

                auto g11_zzz_yyyyyzzz = primBuffer.data(g11off + 450 * idx + 444);

                auto g11_zzz_yyyyzzzz = primBuffer.data(g11off + 450 * idx + 445);

                auto g11_zzz_yyyzzzzz = primBuffer.data(g11off + 450 * idx + 446);

                auto g11_zzz_yyzzzzzz = primBuffer.data(g11off + 450 * idx + 447);

                auto g11_zzz_yzzzzzzz = primBuffer.data(g11off + 450 * idx + 448);

                auto g11_zzz_zzzzzzzz = primBuffer.data(g11off + 450 * idx + 449);

                // set up pointers to (G|g(r,r')|SL)^(m) integrals

                auto g_xxxx_xxxxxxxx = primBuffer.data(goff + 675 * idx);

                auto g_xxxx_xxxxxxxy = primBuffer.data(goff + 675 * idx + 1);

                auto g_xxxx_xxxxxxxz = primBuffer.data(goff + 675 * idx + 2);

                auto g_xxxx_xxxxxxyy = primBuffer.data(goff + 675 * idx + 3);

                auto g_xxxx_xxxxxxyz = primBuffer.data(goff + 675 * idx + 4);

                auto g_xxxx_xxxxxxzz = primBuffer.data(goff + 675 * idx + 5);

                auto g_xxxx_xxxxxyyy = primBuffer.data(goff + 675 * idx + 6);

                auto g_xxxx_xxxxxyyz = primBuffer.data(goff + 675 * idx + 7);

                auto g_xxxx_xxxxxyzz = primBuffer.data(goff + 675 * idx + 8);

                auto g_xxxx_xxxxxzzz = primBuffer.data(goff + 675 * idx + 9);

                auto g_xxxx_xxxxyyyy = primBuffer.data(goff + 675 * idx + 10);

                auto g_xxxx_xxxxyyyz = primBuffer.data(goff + 675 * idx + 11);

                auto g_xxxx_xxxxyyzz = primBuffer.data(goff + 675 * idx + 12);

                auto g_xxxx_xxxxyzzz = primBuffer.data(goff + 675 * idx + 13);

                auto g_xxxx_xxxxzzzz = primBuffer.data(goff + 675 * idx + 14);

                auto g_xxxx_xxxyyyyy = primBuffer.data(goff + 675 * idx + 15);

                auto g_xxxx_xxxyyyyz = primBuffer.data(goff + 675 * idx + 16);

                auto g_xxxx_xxxyyyzz = primBuffer.data(goff + 675 * idx + 17);

                auto g_xxxx_xxxyyzzz = primBuffer.data(goff + 675 * idx + 18);

                auto g_xxxx_xxxyzzzz = primBuffer.data(goff + 675 * idx + 19);

                auto g_xxxx_xxxzzzzz = primBuffer.data(goff + 675 * idx + 20);

                auto g_xxxx_xxyyyyyy = primBuffer.data(goff + 675 * idx + 21);

                auto g_xxxx_xxyyyyyz = primBuffer.data(goff + 675 * idx + 22);

                auto g_xxxx_xxyyyyzz = primBuffer.data(goff + 675 * idx + 23);

                auto g_xxxx_xxyyyzzz = primBuffer.data(goff + 675 * idx + 24);

                auto g_xxxx_xxyyzzzz = primBuffer.data(goff + 675 * idx + 25);

                auto g_xxxx_xxyzzzzz = primBuffer.data(goff + 675 * idx + 26);

                auto g_xxxx_xxzzzzzz = primBuffer.data(goff + 675 * idx + 27);

                auto g_xxxx_xyyyyyyy = primBuffer.data(goff + 675 * idx + 28);

                auto g_xxxx_xyyyyyyz = primBuffer.data(goff + 675 * idx + 29);

                auto g_xxxx_xyyyyyzz = primBuffer.data(goff + 675 * idx + 30);

                auto g_xxxx_xyyyyzzz = primBuffer.data(goff + 675 * idx + 31);

                auto g_xxxx_xyyyzzzz = primBuffer.data(goff + 675 * idx + 32);

                auto g_xxxx_xyyzzzzz = primBuffer.data(goff + 675 * idx + 33);

                auto g_xxxx_xyzzzzzz = primBuffer.data(goff + 675 * idx + 34);

                auto g_xxxx_xzzzzzzz = primBuffer.data(goff + 675 * idx + 35);

                auto g_xxxx_yyyyyyyy = primBuffer.data(goff + 675 * idx + 36);

                auto g_xxxx_yyyyyyyz = primBuffer.data(goff + 675 * idx + 37);

                auto g_xxxx_yyyyyyzz = primBuffer.data(goff + 675 * idx + 38);

                auto g_xxxx_yyyyyzzz = primBuffer.data(goff + 675 * idx + 39);

                auto g_xxxx_yyyyzzzz = primBuffer.data(goff + 675 * idx + 40);

                auto g_xxxx_yyyzzzzz = primBuffer.data(goff + 675 * idx + 41);

                auto g_xxxx_yyzzzzzz = primBuffer.data(goff + 675 * idx + 42);

                auto g_xxxx_yzzzzzzz = primBuffer.data(goff + 675 * idx + 43);

                auto g_xxxx_zzzzzzzz = primBuffer.data(goff + 675 * idx + 44);

                auto g_xxxy_xxxxxxxx = primBuffer.data(goff + 675 * idx + 45);

                auto g_xxxy_xxxxxxxy = primBuffer.data(goff + 675 * idx + 46);

                auto g_xxxy_xxxxxxxz = primBuffer.data(goff + 675 * idx + 47);

                auto g_xxxy_xxxxxxyy = primBuffer.data(goff + 675 * idx + 48);

                auto g_xxxy_xxxxxxyz = primBuffer.data(goff + 675 * idx + 49);

                auto g_xxxy_xxxxxxzz = primBuffer.data(goff + 675 * idx + 50);

                auto g_xxxy_xxxxxyyy = primBuffer.data(goff + 675 * idx + 51);

                auto g_xxxy_xxxxxyyz = primBuffer.data(goff + 675 * idx + 52);

                auto g_xxxy_xxxxxyzz = primBuffer.data(goff + 675 * idx + 53);

                auto g_xxxy_xxxxxzzz = primBuffer.data(goff + 675 * idx + 54);

                auto g_xxxy_xxxxyyyy = primBuffer.data(goff + 675 * idx + 55);

                auto g_xxxy_xxxxyyyz = primBuffer.data(goff + 675 * idx + 56);

                auto g_xxxy_xxxxyyzz = primBuffer.data(goff + 675 * idx + 57);

                auto g_xxxy_xxxxyzzz = primBuffer.data(goff + 675 * idx + 58);

                auto g_xxxy_xxxxzzzz = primBuffer.data(goff + 675 * idx + 59);

                auto g_xxxy_xxxyyyyy = primBuffer.data(goff + 675 * idx + 60);

                auto g_xxxy_xxxyyyyz = primBuffer.data(goff + 675 * idx + 61);

                auto g_xxxy_xxxyyyzz = primBuffer.data(goff + 675 * idx + 62);

                auto g_xxxy_xxxyyzzz = primBuffer.data(goff + 675 * idx + 63);

                auto g_xxxy_xxxyzzzz = primBuffer.data(goff + 675 * idx + 64);

                auto g_xxxy_xxxzzzzz = primBuffer.data(goff + 675 * idx + 65);

                auto g_xxxy_xxyyyyyy = primBuffer.data(goff + 675 * idx + 66);

                auto g_xxxy_xxyyyyyz = primBuffer.data(goff + 675 * idx + 67);

                auto g_xxxy_xxyyyyzz = primBuffer.data(goff + 675 * idx + 68);

                auto g_xxxy_xxyyyzzz = primBuffer.data(goff + 675 * idx + 69);

                auto g_xxxy_xxyyzzzz = primBuffer.data(goff + 675 * idx + 70);

                auto g_xxxy_xxyzzzzz = primBuffer.data(goff + 675 * idx + 71);

                auto g_xxxy_xxzzzzzz = primBuffer.data(goff + 675 * idx + 72);

                auto g_xxxy_xyyyyyyy = primBuffer.data(goff + 675 * idx + 73);

                auto g_xxxy_xyyyyyyz = primBuffer.data(goff + 675 * idx + 74);

                auto g_xxxy_xyyyyyzz = primBuffer.data(goff + 675 * idx + 75);

                auto g_xxxy_xyyyyzzz = primBuffer.data(goff + 675 * idx + 76);

                auto g_xxxy_xyyyzzzz = primBuffer.data(goff + 675 * idx + 77);

                auto g_xxxy_xyyzzzzz = primBuffer.data(goff + 675 * idx + 78);

                auto g_xxxy_xyzzzzzz = primBuffer.data(goff + 675 * idx + 79);

                auto g_xxxy_xzzzzzzz = primBuffer.data(goff + 675 * idx + 80);

                auto g_xxxy_yyyyyyyy = primBuffer.data(goff + 675 * idx + 81);

                auto g_xxxy_yyyyyyyz = primBuffer.data(goff + 675 * idx + 82);

                auto g_xxxy_yyyyyyzz = primBuffer.data(goff + 675 * idx + 83);

                auto g_xxxy_yyyyyzzz = primBuffer.data(goff + 675 * idx + 84);

                auto g_xxxy_yyyyzzzz = primBuffer.data(goff + 675 * idx + 85);

                auto g_xxxy_yyyzzzzz = primBuffer.data(goff + 675 * idx + 86);

                auto g_xxxy_yyzzzzzz = primBuffer.data(goff + 675 * idx + 87);

                auto g_xxxy_yzzzzzzz = primBuffer.data(goff + 675 * idx + 88);

                auto g_xxxy_zzzzzzzz = primBuffer.data(goff + 675 * idx + 89);

                auto g_xxxz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 90);

                auto g_xxxz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 91);

                auto g_xxxz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 92);

                auto g_xxxz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 93);

                auto g_xxxz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 94);

                auto g_xxxz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 95);

                auto g_xxxz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 96);

                auto g_xxxz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 97);

                auto g_xxxz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 98);

                auto g_xxxz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 99);

                auto g_xxxz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 100);

                auto g_xxxz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 101);

                auto g_xxxz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 102);

                auto g_xxxz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 103);

                auto g_xxxz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 104);

                auto g_xxxz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 105);

                auto g_xxxz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 106);

                auto g_xxxz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 107);

                auto g_xxxz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 108);

                auto g_xxxz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 109);

                auto g_xxxz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 110);

                auto g_xxxz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 111);

                auto g_xxxz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 112);

                auto g_xxxz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 113);

                auto g_xxxz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 114);

                auto g_xxxz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 115);

                auto g_xxxz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 116);

                auto g_xxxz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 117);

                auto g_xxxz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 118);

                auto g_xxxz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 119);

                auto g_xxxz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 120);

                auto g_xxxz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 121);

                auto g_xxxz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 122);

                auto g_xxxz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 123);

                auto g_xxxz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 124);

                auto g_xxxz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 125);

                auto g_xxxz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 126);

                auto g_xxxz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 127);

                auto g_xxxz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 128);

                auto g_xxxz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 129);

                auto g_xxxz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 130);

                auto g_xxxz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 131);

                auto g_xxxz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 132);

                auto g_xxxz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 133);

                auto g_xxxz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 134);

                auto g_xxyy_xxxxxxxx = primBuffer.data(goff + 675 * idx + 135);

                auto g_xxyy_xxxxxxxy = primBuffer.data(goff + 675 * idx + 136);

                auto g_xxyy_xxxxxxxz = primBuffer.data(goff + 675 * idx + 137);

                auto g_xxyy_xxxxxxyy = primBuffer.data(goff + 675 * idx + 138);

                auto g_xxyy_xxxxxxyz = primBuffer.data(goff + 675 * idx + 139);

                auto g_xxyy_xxxxxxzz = primBuffer.data(goff + 675 * idx + 140);

                auto g_xxyy_xxxxxyyy = primBuffer.data(goff + 675 * idx + 141);

                auto g_xxyy_xxxxxyyz = primBuffer.data(goff + 675 * idx + 142);

                auto g_xxyy_xxxxxyzz = primBuffer.data(goff + 675 * idx + 143);

                auto g_xxyy_xxxxxzzz = primBuffer.data(goff + 675 * idx + 144);

                auto g_xxyy_xxxxyyyy = primBuffer.data(goff + 675 * idx + 145);

                auto g_xxyy_xxxxyyyz = primBuffer.data(goff + 675 * idx + 146);

                auto g_xxyy_xxxxyyzz = primBuffer.data(goff + 675 * idx + 147);

                auto g_xxyy_xxxxyzzz = primBuffer.data(goff + 675 * idx + 148);

                auto g_xxyy_xxxxzzzz = primBuffer.data(goff + 675 * idx + 149);

                auto g_xxyy_xxxyyyyy = primBuffer.data(goff + 675 * idx + 150);

                auto g_xxyy_xxxyyyyz = primBuffer.data(goff + 675 * idx + 151);

                auto g_xxyy_xxxyyyzz = primBuffer.data(goff + 675 * idx + 152);

                auto g_xxyy_xxxyyzzz = primBuffer.data(goff + 675 * idx + 153);

                auto g_xxyy_xxxyzzzz = primBuffer.data(goff + 675 * idx + 154);

                auto g_xxyy_xxxzzzzz = primBuffer.data(goff + 675 * idx + 155);

                auto g_xxyy_xxyyyyyy = primBuffer.data(goff + 675 * idx + 156);

                auto g_xxyy_xxyyyyyz = primBuffer.data(goff + 675 * idx + 157);

                auto g_xxyy_xxyyyyzz = primBuffer.data(goff + 675 * idx + 158);

                auto g_xxyy_xxyyyzzz = primBuffer.data(goff + 675 * idx + 159);

                auto g_xxyy_xxyyzzzz = primBuffer.data(goff + 675 * idx + 160);

                auto g_xxyy_xxyzzzzz = primBuffer.data(goff + 675 * idx + 161);

                auto g_xxyy_xxzzzzzz = primBuffer.data(goff + 675 * idx + 162);

                auto g_xxyy_xyyyyyyy = primBuffer.data(goff + 675 * idx + 163);

                auto g_xxyy_xyyyyyyz = primBuffer.data(goff + 675 * idx + 164);

                auto g_xxyy_xyyyyyzz = primBuffer.data(goff + 675 * idx + 165);

                auto g_xxyy_xyyyyzzz = primBuffer.data(goff + 675 * idx + 166);

                auto g_xxyy_xyyyzzzz = primBuffer.data(goff + 675 * idx + 167);

                auto g_xxyy_xyyzzzzz = primBuffer.data(goff + 675 * idx + 168);

                auto g_xxyy_xyzzzzzz = primBuffer.data(goff + 675 * idx + 169);

                auto g_xxyy_xzzzzzzz = primBuffer.data(goff + 675 * idx + 170);

                auto g_xxyy_yyyyyyyy = primBuffer.data(goff + 675 * idx + 171);

                auto g_xxyy_yyyyyyyz = primBuffer.data(goff + 675 * idx + 172);

                auto g_xxyy_yyyyyyzz = primBuffer.data(goff + 675 * idx + 173);

                auto g_xxyy_yyyyyzzz = primBuffer.data(goff + 675 * idx + 174);

                auto g_xxyy_yyyyzzzz = primBuffer.data(goff + 675 * idx + 175);

                auto g_xxyy_yyyzzzzz = primBuffer.data(goff + 675 * idx + 176);

                auto g_xxyy_yyzzzzzz = primBuffer.data(goff + 675 * idx + 177);

                auto g_xxyy_yzzzzzzz = primBuffer.data(goff + 675 * idx + 178);

                auto g_xxyy_zzzzzzzz = primBuffer.data(goff + 675 * idx + 179);

                auto g_xxyz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 180);

                auto g_xxyz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 181);

                auto g_xxyz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 182);

                auto g_xxyz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 183);

                auto g_xxyz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 184);

                auto g_xxyz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 185);

                auto g_xxyz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 186);

                auto g_xxyz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 187);

                auto g_xxyz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 188);

                auto g_xxyz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 189);

                auto g_xxyz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 190);

                auto g_xxyz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 191);

                auto g_xxyz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 192);

                auto g_xxyz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 193);

                auto g_xxyz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 194);

                auto g_xxyz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 195);

                auto g_xxyz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 196);

                auto g_xxyz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 197);

                auto g_xxyz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 198);

                auto g_xxyz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 199);

                auto g_xxyz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 200);

                auto g_xxyz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 201);

                auto g_xxyz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 202);

                auto g_xxyz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 203);

                auto g_xxyz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 204);

                auto g_xxyz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 205);

                auto g_xxyz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 206);

                auto g_xxyz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 207);

                auto g_xxyz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 208);

                auto g_xxyz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 209);

                auto g_xxyz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 210);

                auto g_xxyz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 211);

                auto g_xxyz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 212);

                auto g_xxyz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 213);

                auto g_xxyz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 214);

                auto g_xxyz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 215);

                auto g_xxyz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 216);

                auto g_xxyz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 217);

                auto g_xxyz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 218);

                auto g_xxyz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 219);

                auto g_xxyz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 220);

                auto g_xxyz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 221);

                auto g_xxyz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 222);

                auto g_xxyz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 223);

                auto g_xxyz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 224);

                auto g_xxzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 225);

                auto g_xxzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 226);

                auto g_xxzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 227);

                auto g_xxzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 228);

                auto g_xxzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 229);

                auto g_xxzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 230);

                auto g_xxzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 231);

                auto g_xxzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 232);

                auto g_xxzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 233);

                auto g_xxzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 234);

                auto g_xxzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 235);

                auto g_xxzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 236);

                auto g_xxzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 237);

                auto g_xxzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 238);

                auto g_xxzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 239);

                auto g_xxzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 240);

                auto g_xxzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 241);

                auto g_xxzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 242);

                auto g_xxzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 243);

                auto g_xxzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 244);

                auto g_xxzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 245);

                auto g_xxzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 246);

                auto g_xxzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 247);

                auto g_xxzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 248);

                auto g_xxzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 249);

                auto g_xxzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 250);

                auto g_xxzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 251);

                auto g_xxzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 252);

                auto g_xxzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 253);

                auto g_xxzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 254);

                auto g_xxzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 255);

                auto g_xxzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 256);

                auto g_xxzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 257);

                auto g_xxzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 258);

                auto g_xxzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 259);

                auto g_xxzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 260);

                auto g_xxzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 261);

                auto g_xxzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 262);

                auto g_xxzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 263);

                auto g_xxzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 264);

                auto g_xxzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 265);

                auto g_xxzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 266);

                auto g_xxzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 267);

                auto g_xxzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 268);

                auto g_xxzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 269);

                auto g_xyyy_xxxxxxxx = primBuffer.data(goff + 675 * idx + 270);

                auto g_xyyy_xxxxxxxy = primBuffer.data(goff + 675 * idx + 271);

                auto g_xyyy_xxxxxxxz = primBuffer.data(goff + 675 * idx + 272);

                auto g_xyyy_xxxxxxyy = primBuffer.data(goff + 675 * idx + 273);

                auto g_xyyy_xxxxxxyz = primBuffer.data(goff + 675 * idx + 274);

                auto g_xyyy_xxxxxxzz = primBuffer.data(goff + 675 * idx + 275);

                auto g_xyyy_xxxxxyyy = primBuffer.data(goff + 675 * idx + 276);

                auto g_xyyy_xxxxxyyz = primBuffer.data(goff + 675 * idx + 277);

                auto g_xyyy_xxxxxyzz = primBuffer.data(goff + 675 * idx + 278);

                auto g_xyyy_xxxxxzzz = primBuffer.data(goff + 675 * idx + 279);

                auto g_xyyy_xxxxyyyy = primBuffer.data(goff + 675 * idx + 280);

                auto g_xyyy_xxxxyyyz = primBuffer.data(goff + 675 * idx + 281);

                auto g_xyyy_xxxxyyzz = primBuffer.data(goff + 675 * idx + 282);

                auto g_xyyy_xxxxyzzz = primBuffer.data(goff + 675 * idx + 283);

                auto g_xyyy_xxxxzzzz = primBuffer.data(goff + 675 * idx + 284);

                auto g_xyyy_xxxyyyyy = primBuffer.data(goff + 675 * idx + 285);

                auto g_xyyy_xxxyyyyz = primBuffer.data(goff + 675 * idx + 286);

                auto g_xyyy_xxxyyyzz = primBuffer.data(goff + 675 * idx + 287);

                auto g_xyyy_xxxyyzzz = primBuffer.data(goff + 675 * idx + 288);

                auto g_xyyy_xxxyzzzz = primBuffer.data(goff + 675 * idx + 289);

                auto g_xyyy_xxxzzzzz = primBuffer.data(goff + 675 * idx + 290);

                auto g_xyyy_xxyyyyyy = primBuffer.data(goff + 675 * idx + 291);

                auto g_xyyy_xxyyyyyz = primBuffer.data(goff + 675 * idx + 292);

                auto g_xyyy_xxyyyyzz = primBuffer.data(goff + 675 * idx + 293);

                auto g_xyyy_xxyyyzzz = primBuffer.data(goff + 675 * idx + 294);

                auto g_xyyy_xxyyzzzz = primBuffer.data(goff + 675 * idx + 295);

                auto g_xyyy_xxyzzzzz = primBuffer.data(goff + 675 * idx + 296);

                auto g_xyyy_xxzzzzzz = primBuffer.data(goff + 675 * idx + 297);

                auto g_xyyy_xyyyyyyy = primBuffer.data(goff + 675 * idx + 298);

                auto g_xyyy_xyyyyyyz = primBuffer.data(goff + 675 * idx + 299);

                auto g_xyyy_xyyyyyzz = primBuffer.data(goff + 675 * idx + 300);

                auto g_xyyy_xyyyyzzz = primBuffer.data(goff + 675 * idx + 301);

                auto g_xyyy_xyyyzzzz = primBuffer.data(goff + 675 * idx + 302);

                auto g_xyyy_xyyzzzzz = primBuffer.data(goff + 675 * idx + 303);

                auto g_xyyy_xyzzzzzz = primBuffer.data(goff + 675 * idx + 304);

                auto g_xyyy_xzzzzzzz = primBuffer.data(goff + 675 * idx + 305);

                auto g_xyyy_yyyyyyyy = primBuffer.data(goff + 675 * idx + 306);

                auto g_xyyy_yyyyyyyz = primBuffer.data(goff + 675 * idx + 307);

                auto g_xyyy_yyyyyyzz = primBuffer.data(goff + 675 * idx + 308);

                auto g_xyyy_yyyyyzzz = primBuffer.data(goff + 675 * idx + 309);

                auto g_xyyy_yyyyzzzz = primBuffer.data(goff + 675 * idx + 310);

                auto g_xyyy_yyyzzzzz = primBuffer.data(goff + 675 * idx + 311);

                auto g_xyyy_yyzzzzzz = primBuffer.data(goff + 675 * idx + 312);

                auto g_xyyy_yzzzzzzz = primBuffer.data(goff + 675 * idx + 313);

                auto g_xyyy_zzzzzzzz = primBuffer.data(goff + 675 * idx + 314);

                auto g_xyyz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 315);

                auto g_xyyz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 316);

                auto g_xyyz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 317);

                auto g_xyyz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 318);

                auto g_xyyz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 319);

                auto g_xyyz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 320);

                auto g_xyyz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 321);

                auto g_xyyz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 322);

                auto g_xyyz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 323);

                auto g_xyyz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 324);

                auto g_xyyz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 325);

                auto g_xyyz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 326);

                auto g_xyyz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 327);

                auto g_xyyz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 328);

                auto g_xyyz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 329);

                auto g_xyyz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 330);

                auto g_xyyz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 331);

                auto g_xyyz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 332);

                auto g_xyyz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 333);

                auto g_xyyz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 334);

                auto g_xyyz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 335);

                auto g_xyyz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 336);

                auto g_xyyz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 337);

                auto g_xyyz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 338);

                auto g_xyyz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 339);

                auto g_xyyz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 340);

                auto g_xyyz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 341);

                auto g_xyyz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 342);

                auto g_xyyz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 343);

                auto g_xyyz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 344);

                auto g_xyyz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 345);

                auto g_xyyz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 346);

                auto g_xyyz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 347);

                auto g_xyyz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 348);

                auto g_xyyz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 349);

                auto g_xyyz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 350);

                auto g_xyyz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 351);

                auto g_xyyz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 352);

                auto g_xyyz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 353);

                auto g_xyyz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 354);

                auto g_xyyz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 355);

                auto g_xyyz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 356);

                auto g_xyyz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 357);

                auto g_xyyz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 358);

                auto g_xyyz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 359);

                auto g_xyzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 360);

                auto g_xyzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 361);

                auto g_xyzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 362);

                auto g_xyzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 363);

                auto g_xyzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 364);

                auto g_xyzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 365);

                auto g_xyzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 366);

                auto g_xyzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 367);

                auto g_xyzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 368);

                auto g_xyzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 369);

                auto g_xyzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 370);

                auto g_xyzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 371);

                auto g_xyzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 372);

                auto g_xyzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 373);

                auto g_xyzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 374);

                auto g_xyzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 375);

                auto g_xyzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 376);

                auto g_xyzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 377);

                auto g_xyzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 378);

                auto g_xyzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 379);

                auto g_xyzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 380);

                auto g_xyzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 381);

                auto g_xyzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 382);

                auto g_xyzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 383);

                auto g_xyzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 384);

                auto g_xyzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 385);

                auto g_xyzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 386);

                auto g_xyzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 387);

                auto g_xyzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 388);

                auto g_xyzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 389);

                auto g_xyzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 390);

                auto g_xyzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 391);

                auto g_xyzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 392);

                auto g_xyzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 393);

                auto g_xyzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 394);

                auto g_xyzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 395);

                auto g_xyzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 396);

                auto g_xyzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 397);

                auto g_xyzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 398);

                auto g_xyzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 399);

                auto g_xyzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 400);

                auto g_xyzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 401);

                auto g_xyzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 402);

                auto g_xyzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 403);

                auto g_xyzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 404);

                auto g_xzzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 405);

                auto g_xzzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 406);

                auto g_xzzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 407);

                auto g_xzzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 408);

                auto g_xzzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 409);

                auto g_xzzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 410);

                auto g_xzzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 411);

                auto g_xzzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 412);

                auto g_xzzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 413);

                auto g_xzzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 414);

                auto g_xzzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 415);

                auto g_xzzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 416);

                auto g_xzzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 417);

                auto g_xzzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 418);

                auto g_xzzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 419);

                auto g_xzzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 420);

                auto g_xzzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 421);

                auto g_xzzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 422);

                auto g_xzzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 423);

                auto g_xzzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 424);

                auto g_xzzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 425);

                auto g_xzzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 426);

                auto g_xzzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 427);

                auto g_xzzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 428);

                auto g_xzzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 429);

                auto g_xzzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 430);

                auto g_xzzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 431);

                auto g_xzzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 432);

                auto g_xzzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 433);

                auto g_xzzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 434);

                auto g_xzzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 435);

                auto g_xzzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 436);

                auto g_xzzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 437);

                auto g_xzzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 438);

                auto g_xzzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 439);

                auto g_xzzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 440);

                auto g_xzzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 441);

                auto g_xzzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 442);

                auto g_xzzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 443);

                auto g_xzzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 444);

                auto g_xzzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 445);

                auto g_xzzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 446);

                auto g_xzzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 447);

                auto g_xzzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 448);

                auto g_xzzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 449);

                auto g_yyyy_xxxxxxxx = primBuffer.data(goff + 675 * idx + 450);

                auto g_yyyy_xxxxxxxy = primBuffer.data(goff + 675 * idx + 451);

                auto g_yyyy_xxxxxxxz = primBuffer.data(goff + 675 * idx + 452);

                auto g_yyyy_xxxxxxyy = primBuffer.data(goff + 675 * idx + 453);

                auto g_yyyy_xxxxxxyz = primBuffer.data(goff + 675 * idx + 454);

                auto g_yyyy_xxxxxxzz = primBuffer.data(goff + 675 * idx + 455);

                auto g_yyyy_xxxxxyyy = primBuffer.data(goff + 675 * idx + 456);

                auto g_yyyy_xxxxxyyz = primBuffer.data(goff + 675 * idx + 457);

                auto g_yyyy_xxxxxyzz = primBuffer.data(goff + 675 * idx + 458);

                auto g_yyyy_xxxxxzzz = primBuffer.data(goff + 675 * idx + 459);

                auto g_yyyy_xxxxyyyy = primBuffer.data(goff + 675 * idx + 460);

                auto g_yyyy_xxxxyyyz = primBuffer.data(goff + 675 * idx + 461);

                auto g_yyyy_xxxxyyzz = primBuffer.data(goff + 675 * idx + 462);

                auto g_yyyy_xxxxyzzz = primBuffer.data(goff + 675 * idx + 463);

                auto g_yyyy_xxxxzzzz = primBuffer.data(goff + 675 * idx + 464);

                auto g_yyyy_xxxyyyyy = primBuffer.data(goff + 675 * idx + 465);

                auto g_yyyy_xxxyyyyz = primBuffer.data(goff + 675 * idx + 466);

                auto g_yyyy_xxxyyyzz = primBuffer.data(goff + 675 * idx + 467);

                auto g_yyyy_xxxyyzzz = primBuffer.data(goff + 675 * idx + 468);

                auto g_yyyy_xxxyzzzz = primBuffer.data(goff + 675 * idx + 469);

                auto g_yyyy_xxxzzzzz = primBuffer.data(goff + 675 * idx + 470);

                auto g_yyyy_xxyyyyyy = primBuffer.data(goff + 675 * idx + 471);

                auto g_yyyy_xxyyyyyz = primBuffer.data(goff + 675 * idx + 472);

                auto g_yyyy_xxyyyyzz = primBuffer.data(goff + 675 * idx + 473);

                auto g_yyyy_xxyyyzzz = primBuffer.data(goff + 675 * idx + 474);

                auto g_yyyy_xxyyzzzz = primBuffer.data(goff + 675 * idx + 475);

                auto g_yyyy_xxyzzzzz = primBuffer.data(goff + 675 * idx + 476);

                auto g_yyyy_xxzzzzzz = primBuffer.data(goff + 675 * idx + 477);

                auto g_yyyy_xyyyyyyy = primBuffer.data(goff + 675 * idx + 478);

                auto g_yyyy_xyyyyyyz = primBuffer.data(goff + 675 * idx + 479);

                auto g_yyyy_xyyyyyzz = primBuffer.data(goff + 675 * idx + 480);

                auto g_yyyy_xyyyyzzz = primBuffer.data(goff + 675 * idx + 481);

                auto g_yyyy_xyyyzzzz = primBuffer.data(goff + 675 * idx + 482);

                auto g_yyyy_xyyzzzzz = primBuffer.data(goff + 675 * idx + 483);

                auto g_yyyy_xyzzzzzz = primBuffer.data(goff + 675 * idx + 484);

                auto g_yyyy_xzzzzzzz = primBuffer.data(goff + 675 * idx + 485);

                auto g_yyyy_yyyyyyyy = primBuffer.data(goff + 675 * idx + 486);

                auto g_yyyy_yyyyyyyz = primBuffer.data(goff + 675 * idx + 487);

                auto g_yyyy_yyyyyyzz = primBuffer.data(goff + 675 * idx + 488);

                auto g_yyyy_yyyyyzzz = primBuffer.data(goff + 675 * idx + 489);

                auto g_yyyy_yyyyzzzz = primBuffer.data(goff + 675 * idx + 490);

                auto g_yyyy_yyyzzzzz = primBuffer.data(goff + 675 * idx + 491);

                auto g_yyyy_yyzzzzzz = primBuffer.data(goff + 675 * idx + 492);

                auto g_yyyy_yzzzzzzz = primBuffer.data(goff + 675 * idx + 493);

                auto g_yyyy_zzzzzzzz = primBuffer.data(goff + 675 * idx + 494);

                auto g_yyyz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 495);

                auto g_yyyz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 496);

                auto g_yyyz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 497);

                auto g_yyyz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 498);

                auto g_yyyz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 499);

                auto g_yyyz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 500);

                auto g_yyyz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 501);

                auto g_yyyz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 502);

                auto g_yyyz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 503);

                auto g_yyyz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 504);

                auto g_yyyz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 505);

                auto g_yyyz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 506);

                auto g_yyyz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 507);

                auto g_yyyz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 508);

                auto g_yyyz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 509);

                auto g_yyyz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 510);

                auto g_yyyz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 511);

                auto g_yyyz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 512);

                auto g_yyyz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 513);

                auto g_yyyz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 514);

                auto g_yyyz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 515);

                auto g_yyyz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 516);

                auto g_yyyz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 517);

                auto g_yyyz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 518);

                auto g_yyyz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 519);

                auto g_yyyz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 520);

                auto g_yyyz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 521);

                auto g_yyyz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 522);

                auto g_yyyz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 523);

                auto g_yyyz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 524);

                auto g_yyyz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 525);

                auto g_yyyz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 526);

                auto g_yyyz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 527);

                auto g_yyyz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 528);

                auto g_yyyz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 529);

                auto g_yyyz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 530);

                auto g_yyyz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 531);

                auto g_yyyz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 532);

                auto g_yyyz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 533);

                auto g_yyyz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 534);

                auto g_yyyz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 535);

                auto g_yyyz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 536);

                auto g_yyyz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 537);

                auto g_yyyz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 538);

                auto g_yyyz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 539);

                auto g_yyzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 540);

                auto g_yyzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 541);

                auto g_yyzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 542);

                auto g_yyzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 543);

                auto g_yyzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 544);

                auto g_yyzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 545);

                auto g_yyzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 546);

                auto g_yyzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 547);

                auto g_yyzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 548);

                auto g_yyzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 549);

                auto g_yyzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 550);

                auto g_yyzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 551);

                auto g_yyzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 552);

                auto g_yyzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 553);

                auto g_yyzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 554);

                auto g_yyzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 555);

                auto g_yyzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 556);

                auto g_yyzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 557);

                auto g_yyzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 558);

                auto g_yyzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 559);

                auto g_yyzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 560);

                auto g_yyzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 561);

                auto g_yyzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 562);

                auto g_yyzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 563);

                auto g_yyzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 564);

                auto g_yyzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 565);

                auto g_yyzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 566);

                auto g_yyzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 567);

                auto g_yyzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 568);

                auto g_yyzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 569);

                auto g_yyzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 570);

                auto g_yyzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 571);

                auto g_yyzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 572);

                auto g_yyzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 573);

                auto g_yyzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 574);

                auto g_yyzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 575);

                auto g_yyzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 576);

                auto g_yyzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 577);

                auto g_yyzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 578);

                auto g_yyzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 579);

                auto g_yyzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 580);

                auto g_yyzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 581);

                auto g_yyzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 582);

                auto g_yyzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 583);

                auto g_yyzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 584);

                auto g_yzzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 585);

                auto g_yzzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 586);

                auto g_yzzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 587);

                auto g_yzzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 588);

                auto g_yzzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 589);

                auto g_yzzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 590);

                auto g_yzzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 591);

                auto g_yzzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 592);

                auto g_yzzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 593);

                auto g_yzzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 594);

                auto g_yzzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 595);

                auto g_yzzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 596);

                auto g_yzzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 597);

                auto g_yzzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 598);

                auto g_yzzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 599);

                auto g_yzzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 600);

                auto g_yzzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 601);

                auto g_yzzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 602);

                auto g_yzzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 603);

                auto g_yzzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 604);

                auto g_yzzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 605);

                auto g_yzzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 606);

                auto g_yzzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 607);

                auto g_yzzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 608);

                auto g_yzzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 609);

                auto g_yzzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 610);

                auto g_yzzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 611);

                auto g_yzzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 612);

                auto g_yzzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 613);

                auto g_yzzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 614);

                auto g_yzzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 615);

                auto g_yzzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 616);

                auto g_yzzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 617);

                auto g_yzzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 618);

                auto g_yzzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 619);

                auto g_yzzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 620);

                auto g_yzzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 621);

                auto g_yzzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 622);

                auto g_yzzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 623);

                auto g_yzzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 624);

                auto g_yzzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 625);

                auto g_yzzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 626);

                auto g_yzzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 627);

                auto g_yzzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 628);

                auto g_yzzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 629);

                auto g_zzzz_xxxxxxxx = primBuffer.data(goff + 675 * idx + 630);

                auto g_zzzz_xxxxxxxy = primBuffer.data(goff + 675 * idx + 631);

                auto g_zzzz_xxxxxxxz = primBuffer.data(goff + 675 * idx + 632);

                auto g_zzzz_xxxxxxyy = primBuffer.data(goff + 675 * idx + 633);

                auto g_zzzz_xxxxxxyz = primBuffer.data(goff + 675 * idx + 634);

                auto g_zzzz_xxxxxxzz = primBuffer.data(goff + 675 * idx + 635);

                auto g_zzzz_xxxxxyyy = primBuffer.data(goff + 675 * idx + 636);

                auto g_zzzz_xxxxxyyz = primBuffer.data(goff + 675 * idx + 637);

                auto g_zzzz_xxxxxyzz = primBuffer.data(goff + 675 * idx + 638);

                auto g_zzzz_xxxxxzzz = primBuffer.data(goff + 675 * idx + 639);

                auto g_zzzz_xxxxyyyy = primBuffer.data(goff + 675 * idx + 640);

                auto g_zzzz_xxxxyyyz = primBuffer.data(goff + 675 * idx + 641);

                auto g_zzzz_xxxxyyzz = primBuffer.data(goff + 675 * idx + 642);

                auto g_zzzz_xxxxyzzz = primBuffer.data(goff + 675 * idx + 643);

                auto g_zzzz_xxxxzzzz = primBuffer.data(goff + 675 * idx + 644);

                auto g_zzzz_xxxyyyyy = primBuffer.data(goff + 675 * idx + 645);

                auto g_zzzz_xxxyyyyz = primBuffer.data(goff + 675 * idx + 646);

                auto g_zzzz_xxxyyyzz = primBuffer.data(goff + 675 * idx + 647);

                auto g_zzzz_xxxyyzzz = primBuffer.data(goff + 675 * idx + 648);

                auto g_zzzz_xxxyzzzz = primBuffer.data(goff + 675 * idx + 649);

                auto g_zzzz_xxxzzzzz = primBuffer.data(goff + 675 * idx + 650);

                auto g_zzzz_xxyyyyyy = primBuffer.data(goff + 675 * idx + 651);

                auto g_zzzz_xxyyyyyz = primBuffer.data(goff + 675 * idx + 652);

                auto g_zzzz_xxyyyyzz = primBuffer.data(goff + 675 * idx + 653);

                auto g_zzzz_xxyyyzzz = primBuffer.data(goff + 675 * idx + 654);

                auto g_zzzz_xxyyzzzz = primBuffer.data(goff + 675 * idx + 655);

                auto g_zzzz_xxyzzzzz = primBuffer.data(goff + 675 * idx + 656);

                auto g_zzzz_xxzzzzzz = primBuffer.data(goff + 675 * idx + 657);

                auto g_zzzz_xyyyyyyy = primBuffer.data(goff + 675 * idx + 658);

                auto g_zzzz_xyyyyyyz = primBuffer.data(goff + 675 * idx + 659);

                auto g_zzzz_xyyyyyzz = primBuffer.data(goff + 675 * idx + 660);

                auto g_zzzz_xyyyyzzz = primBuffer.data(goff + 675 * idx + 661);

                auto g_zzzz_xyyyzzzz = primBuffer.data(goff + 675 * idx + 662);

                auto g_zzzz_xyyzzzzz = primBuffer.data(goff + 675 * idx + 663);

                auto g_zzzz_xyzzzzzz = primBuffer.data(goff + 675 * idx + 664);

                auto g_zzzz_xzzzzzzz = primBuffer.data(goff + 675 * idx + 665);

                auto g_zzzz_yyyyyyyy = primBuffer.data(goff + 675 * idx + 666);

                auto g_zzzz_yyyyyyyz = primBuffer.data(goff + 675 * idx + 667);

                auto g_zzzz_yyyyyyzz = primBuffer.data(goff + 675 * idx + 668);

                auto g_zzzz_yyyyyzzz = primBuffer.data(goff + 675 * idx + 669);

                auto g_zzzz_yyyyzzzz = primBuffer.data(goff + 675 * idx + 670);

                auto g_zzzz_yyyzzzzz = primBuffer.data(goff + 675 * idx + 671);

                auto g_zzzz_yyzzzzzz = primBuffer.data(goff + 675 * idx + 672);

                auto g_zzzz_yzzzzzzz = primBuffer.data(goff + 675 * idx + 673);

                auto g_zzzz_zzzzzzzz = primBuffer.data(goff + 675 * idx + 674);

                #pragma omp simd aligned(wax, way, waz, fga, fza, fx, gk_xxx_xxxxxxx,\
                                         gk_xxx_xxxxxxy, gk_xxx_xxxxxxz, gk_xxx_xxxxxyy,\
                                         gk_xxx_xxxxxyz, gk_xxx_xxxxxzz, gk_xxx_xxxxyyy,\
                                         gk_xxx_xxxxyyz, gk_xxx_xxxxyzz, gk_xxx_xxxxzzz,\
                                         gk_xxx_xxxyyyy, gk_xxx_xxxyyyz, gk_xxx_xxxyyzz,\
                                         gk_xxx_xxxyzzz, gk_xxx_xxxzzzz, gk_xxx_xxyyyyy,\
                                         gk_xxx_xxyyyyz, gk_xxx_xxyyyzz, gk_xxx_xxyyzzz,\
                                         gk_xxx_xxyzzzz, gk_xxx_xxzzzzz, gk_xxx_xyyyyyy,\
                                         gk_xxx_xyyyyyz, gk_xxx_xyyyyzz, gk_xxx_xyyyzzz,\
                                         gk_xxx_xyyzzzz, gk_xxx_xyzzzzz, gk_xxx_xzzzzzz,\
                                         gk_xxx_yyyyyyy, gk_xxx_yyyyyyz, gk_xxx_yyyyyzz,\
                                         gk_xxx_yyyyzzz, gk_xxx_yyyzzzz, gk_xxx_yyzzzzz,\
                                         gk_xxx_yzzzzzz, gk_xxx_zzzzzzz, gk_xxy_xxxxxxx,\
                                         gk_xxy_xxxxxxy, gk_xxy_xxxxxxz, gk_xxy_xxxxxyy,\
                                         gk_xxy_xxxxxyz, gk_xxy_xxxxxzz, gk_xxy_xxxxyyy,\
                                         gk_xxy_xxxxyyz, gk_xxy_xxxxyzz, gk_xxy_xxxxzzz,\
                                         gk_xxy_xxxyyyy, gk_xxy_xxxyyyz, gk_xxy_xxxyyzz,\
                                         gk_xxy_xxxyzzz, gk_xxy_xxxzzzz, gk_xxy_xxyyyyy,\
                                         gk_xxy_xxyyyyz, gk_xxy_xxyyyzz, gk_xxy_xxyyzzz,\
                                         gk_xxy_xxyzzzz, gk_xxy_xxzzzzz, gk_xxy_xyyyyyy,\
                                         gk_xxy_xyyyyyz, gk_xxy_xyyyyzz, gk_xxy_xyyyzzz,\
                                         gk_xxy_xyyzzzz, gk_xxy_xyzzzzz, gk_xxy_xzzzzzz,\
                                         gk_xxy_yyyyyyy, gk_xxy_yyyyyyz, gk_xxy_yyyyyzz,\
                                         gk_xxy_yyyyzzz, gk_xxy_yyyzzzz, gk_xxy_yyzzzzz,\
                                         gk_xxy_yzzzzzz, gk_xxy_zzzzzzz, gk_xxz_xxxxxxx,\
                                         gk_xxz_xxxxxxy, gk_xxz_xxxxxxz, gk_xxz_xxxxxyy,\
                                         gk_xxz_xxxxxyz, gk_xxz_xxxxxzz, gk_xxz_xxxxyyy,\
                                         gk_xxz_xxxxyyz, gk_xxz_xxxxyzz, gk_xxz_xxxxzzz,\
                                         gk_xxz_xxxyyyy, gk_xxz_xxxyyyz, gk_xxz_xxxyyzz,\
                                         gk_xxz_xxxyzzz, gk_xxz_xxxzzzz, gk_xxz_xxyyyyy,\
                                         gk_xxz_xxyyyyz, gk_xxz_xxyyyzz, gk_xxz_xxyyzzz,\
                                         gk_xxz_xxyzzzz, gk_xxz_xxzzzzz, gk_xxz_xyyyyyy,\
                                         gk_xxz_xyyyyyz, gk_xxz_xyyyyzz, gk_xxz_xyyyzzz,\
                                         gk_xxz_xyyzzzz, gk_xxz_xyzzzzz, gk_xxz_xzzzzzz,\
                                         gk_xxz_yyyyyyy, gk_xxz_yyyyyyz, gk_xxz_yyyyyzz,\
                                         gk_xxz_yyyyzzz, gk_xxz_yyyzzzz, gk_xxz_yyzzzzz,\
                                         gk_xxz_yzzzzzz, gk_xxz_zzzzzzz, gk_xyy_xxxxxxx,\
                                         gk_xyy_xxxxxxy, gk_xyy_xxxxxxz, gk_xyy_xxxxxyy,\
                                         gk_xyy_xxxxxyz, gk_xyy_xxxxxzz, gk_xyy_xxxxyyy,\
                                         gk_xyy_xxxxyyz, gk_xyy_xxxxyzz, gk_xyy_xxxxzzz,\
                                         gk_xyy_xxxyyyy, gk_xyy_xxxyyyz, gk_xyy_xxxyyzz,\
                                         gk_xyy_xxxyzzz, gk_xyy_xxxzzzz, gk_xyy_xxyyyyy,\
                                         gk_xyy_xxyyyyz, gk_xyy_xxyyyzz, gk_xyy_xxyyzzz,\
                                         gk_xyy_xxyzzzz, gk_xyy_xxzzzzz, gk_xyy_xyyyyyy,\
                                         gk_xyy_xyyyyyz, gk_xyy_xyyyyzz, gk_xyy_xyyyzzz,\
                                         gk_xyy_xyyzzzz, gk_xyy_xyzzzzz, gk_xyy_xzzzzzz,\
                                         gk_xyy_yyyyyyy, gk_xyy_yyyyyyz, gk_xyy_yyyyyzz,\
                                         gk_xyy_yyyyzzz, gk_xyy_yyyzzzz, gk_xyy_yyzzzzz,\
                                         gk_xyy_yzzzzzz, gk_xyy_zzzzzzz, gk_xyz_xxxxxxx,\
                                         gk_xyz_xxxxxxy, gk_xyz_xxxxxxz, gk_xyz_xxxxxyy,\
                                         gk_xyz_xxxxxyz, gk_xyz_xxxxxzz, gk_xyz_xxxxyyy,\
                                         gk_xyz_xxxxyyz, gk_xyz_xxxxyzz, gk_xyz_xxxxzzz,\
                                         gk_xyz_xxxyyyy, gk_xyz_xxxyyyz, gk_xyz_xxxyyzz,\
                                         gk_xyz_xxxyzzz, gk_xyz_xxxzzzz, gk_xyz_xxyyyyy,\
                                         gk_xyz_xxyyyyz, gk_xyz_xxyyyzz, gk_xyz_xxyyzzz,\
                                         gk_xyz_xxyzzzz, gk_xyz_xxzzzzz, gk_xyz_xyyyyyy,\
                                         gk_xyz_xyyyyyz, gk_xyz_xyyyyzz, gk_xyz_xyyyzzz,\
                                         gk_xyz_xyyzzzz, gk_xyz_xyzzzzz, gk_xyz_xzzzzzz,\
                                         gk_xyz_yyyyyyy, gk_xyz_yyyyyyz, gk_xyz_yyyyyzz,\
                                         gk_xyz_yyyyzzz, gk_xyz_yyyzzzz, gk_xyz_yyzzzzz,\
                                         gk_xyz_yzzzzzz, gk_xyz_zzzzzzz, gk_xzz_xxxxxxx,\
                                         gk_xzz_xxxxxxy, gk_xzz_xxxxxxz, gk_xzz_xxxxxyy,\
                                         gk_xzz_xxxxxyz, gk_xzz_xxxxxzz, gk_xzz_xxxxyyy,\
                                         gk_xzz_xxxxyyz, gk_xzz_xxxxyzz, gk_xzz_xxxxzzz,\
                                         gk_xzz_xxxyyyy, gk_xzz_xxxyyyz, gk_xzz_xxxyyzz,\
                                         gk_xzz_xxxyzzz, gk_xzz_xxxzzzz, gk_xzz_xxyyyyy,\
                                         gk_xzz_xxyyyyz, gk_xzz_xxyyyzz, gk_xzz_xxyyzzz,\
                                         gk_xzz_xxyzzzz, gk_xzz_xxzzzzz, gk_xzz_xyyyyyy,\
                                         gk_xzz_xyyyyyz, gk_xzz_xyyyyzz, gk_xzz_xyyyzzz,\
                                         gk_xzz_xyyzzzz, gk_xzz_xyzzzzz, gk_xzz_xzzzzzz,\
                                         gk_xzz_yyyyyyy, gk_xzz_yyyyyyz, gk_xzz_yyyyyzz,\
                                         gk_xzz_yyyyzzz, gk_xzz_yyyzzzz, gk_xzz_yyzzzzz,\
                                         gk_xzz_yzzzzzz, gk_xzz_zzzzzzz, gk_yyy_xxxxxxx,\
                                         gk_yyy_xxxxxxy, gk_yyy_xxxxxxz, gk_yyy_xxxxxyy,\
                                         gk_yyy_xxxxxyz, gk_yyy_xxxxxzz, gk_yyy_xxxxyyy,\
                                         gk_yyy_xxxxyyz, gk_yyy_xxxxyzz, gk_yyy_xxxxzzz,\
                                         gk_yyy_xxxyyyy, gk_yyy_xxxyyyz, gk_yyy_xxxyyzz,\
                                         gk_yyy_xxxyzzz, gk_yyy_xxxzzzz, gk_yyy_xxyyyyy,\
                                         gk_yyy_xxyyyyz, gk_yyy_xxyyyzz, gk_yyy_xxyyzzz,\
                                         gk_yyy_xxyzzzz, gk_yyy_xxzzzzz, gk_yyy_xyyyyyy,\
                                         gk_yyy_xyyyyyz, gk_yyy_xyyyyzz, gk_yyy_xyyyzzz,\
                                         gk_yyy_xyyzzzz, gk_yyy_xyzzzzz, gk_yyy_xzzzzzz,\
                                         gk_yyy_yyyyyyy, gk_yyy_yyyyyyz, gk_yyy_yyyyyzz,\
                                         gk_yyy_yyyyzzz, gk_yyy_yyyzzzz, gk_yyy_yyzzzzz,\
                                         gk_yyy_yzzzzzz, gk_yyy_zzzzzzz, gk_yyz_xxxxxxx,\
                                         gk_yyz_xxxxxxy, gk_yyz_xxxxxxz, gk_yyz_xxxxxyy,\
                                         gk_yyz_xxxxxyz, gk_yyz_xxxxxzz, gk_yyz_xxxxyyy,\
                                         gk_yyz_xxxxyyz, gk_yyz_xxxxyzz, gk_yyz_xxxxzzz,\
                                         gk_yyz_xxxyyyy, gk_yyz_xxxyyyz, gk_yyz_xxxyyzz,\
                                         gk_yyz_xxxyzzz, gk_yyz_xxxzzzz, gk_yyz_xxyyyyy,\
                                         gk_yyz_xxyyyyz, gk_yyz_xxyyyzz, gk_yyz_xxyyzzz,\
                                         gk_yyz_xxyzzzz, gk_yyz_xxzzzzz, gk_yyz_xyyyyyy,\
                                         gk_yyz_xyyyyyz, gk_yyz_xyyyyzz, gk_yyz_xyyyzzz,\
                                         gk_yyz_xyyzzzz, gk_yyz_xyzzzzz, gk_yyz_xzzzzzz,\
                                         gk_yyz_yyyyyyy, gk_yyz_yyyyyyz, gk_yyz_yyyyyzz,\
                                         gk_yyz_yyyyzzz, gk_yyz_yyyzzzz, gk_yyz_yyzzzzz,\
                                         gk_yyz_yzzzzzz, gk_yyz_zzzzzzz, gk_yzz_xxxxxxx,\
                                         gk_yzz_xxxxxxy, gk_yzz_xxxxxxz, gk_yzz_xxxxxyy,\
                                         gk_yzz_xxxxxyz, gk_yzz_xxxxxzz, gk_yzz_xxxxyyy,\
                                         gk_yzz_xxxxyyz, gk_yzz_xxxxyzz, gk_yzz_xxxxzzz,\
                                         gk_yzz_xxxyyyy, gk_yzz_xxxyyyz, gk_yzz_xxxyyzz,\
                                         gk_yzz_xxxyzzz, gk_yzz_xxxzzzz, gk_yzz_xxyyyyy,\
                                         gk_yzz_xxyyyyz, gk_yzz_xxyyyzz, gk_yzz_xxyyzzz,\
                                         gk_yzz_xxyzzzz, gk_yzz_xxzzzzz, gk_yzz_xyyyyyy,\
                                         gk_yzz_xyyyyyz, gk_yzz_xyyyyzz, gk_yzz_xyyyzzz,\
                                         gk_yzz_xyyzzzz, gk_yzz_xyzzzzz, gk_yzz_xzzzzzz,\
                                         gk_yzz_yyyyyyy, gk_yzz_yyyyyyz, gk_yzz_yyyyyzz,\
                                         gk_yzz_yyyyzzz, gk_yzz_yyyzzzz, gk_yzz_yyzzzzz,\
                                         gk_yzz_yzzzzzz, gk_yzz_zzzzzzz, gk_zzz_xxxxxxx,\
                                         gk_zzz_xxxxxxy, gk_zzz_xxxxxxz, gk_zzz_xxxxxyy,\
                                         gk_zzz_xxxxxyz, gk_zzz_xxxxxzz, gk_zzz_xxxxyyy,\
                                         gk_zzz_xxxxyyz, gk_zzz_xxxxyzz, gk_zzz_xxxxzzz,\
                                         gk_zzz_xxxyyyy, gk_zzz_xxxyyyz, gk_zzz_xxxyyzz,\
                                         gk_zzz_xxxyzzz, gk_zzz_xxxzzzz, gk_zzz_xxyyyyy,\
                                         gk_zzz_xxyyyyz, gk_zzz_xxyyyzz, gk_zzz_xxyyzzz,\
                                         gk_zzz_xxyzzzz, gk_zzz_xxzzzzz, gk_zzz_xyyyyyy,\
                                         gk_zzz_xyyyyyz, gk_zzz_xyyyyzz, gk_zzz_xyyyzzz,\
                                         gk_zzz_xyyzzzz, gk_zzz_xyzzzzz, gk_zzz_xzzzzzz,\
                                         gk_zzz_yyyyyyy, gk_zzz_yyyyyyz, gk_zzz_yyyyyzz,\
                                         gk_zzz_yyyyzzz, gk_zzz_yyyzzzz, gk_zzz_yyzzzzz,\
                                         gk_zzz_yzzzzzz, gk_zzz_zzzzzzz, g20_xx_xxxxxxxx,\
                                         g20_xx_xxxxxxxy, g20_xx_xxxxxxxz, g20_xx_xxxxxxyy,\
                                         g20_xx_xxxxxxyz, g20_xx_xxxxxxzz, g20_xx_xxxxxyyy,\
                                         g20_xx_xxxxxyyz, g20_xx_xxxxxyzz, g20_xx_xxxxxzzz,\
                                         g20_xx_xxxxyyyy, g20_xx_xxxxyyyz, g20_xx_xxxxyyzz,\
                                         g20_xx_xxxxyzzz, g20_xx_xxxxzzzz, g20_xx_xxxyyyyy,\
                                         g20_xx_xxxyyyyz, g20_xx_xxxyyyzz, g20_xx_xxxyyzzz,\
                                         g20_xx_xxxyzzzz, g20_xx_xxxzzzzz, g20_xx_xxyyyyyy,\
                                         g20_xx_xxyyyyyz, g20_xx_xxyyyyzz, g20_xx_xxyyyzzz,\
                                         g20_xx_xxyyzzzz, g20_xx_xxyzzzzz, g20_xx_xxzzzzzz,\
                                         g20_xx_xyyyyyyy, g20_xx_xyyyyyyz, g20_xx_xyyyyyzz,\
                                         g20_xx_xyyyyzzz, g20_xx_xyyyzzzz, g20_xx_xyyzzzzz,\
                                         g20_xx_xyzzzzzz, g20_xx_xzzzzzzz, g20_xx_yyyyyyyy,\
                                         g20_xx_yyyyyyyz, g20_xx_yyyyyyzz, g20_xx_yyyyyzzz,\
                                         g20_xx_yyyyzzzz, g20_xx_yyyzzzzz, g20_xx_yyzzzzzz,\
                                         g20_xx_yzzzzzzz, g20_xx_zzzzzzzz, g20_xy_xxxxxxxx,\
                                         g20_xy_xxxxxxxy, g20_xy_xxxxxxxz, g20_xy_xxxxxxyy,\
                                         g20_xy_xxxxxxyz, g20_xy_xxxxxxzz, g20_xy_xxxxxyyy,\
                                         g20_xy_xxxxxyyz, g20_xy_xxxxxyzz, g20_xy_xxxxxzzz,\
                                         g20_xy_xxxxyyyy, g20_xy_xxxxyyyz, g20_xy_xxxxyyzz,\
                                         g20_xy_xxxxyzzz, g20_xy_xxxxzzzz, g20_xy_xxxyyyyy,\
                                         g20_xy_xxxyyyyz, g20_xy_xxxyyyzz, g20_xy_xxxyyzzz,\
                                         g20_xy_xxxyzzzz, g20_xy_xxxzzzzz, g20_xy_xxyyyyyy,\
                                         g20_xy_xxyyyyyz, g20_xy_xxyyyyzz, g20_xy_xxyyyzzz,\
                                         g20_xy_xxyyzzzz, g20_xy_xxyzzzzz, g20_xy_xxzzzzzz,\
                                         g20_xy_xyyyyyyy, g20_xy_xyyyyyyz, g20_xy_xyyyyyzz,\
                                         g20_xy_xyyyyzzz, g20_xy_xyyyzzzz, g20_xy_xyyzzzzz,\
                                         g20_xy_xyzzzzzz, g20_xy_xzzzzzzz, g20_xy_yyyyyyyy,\
                                         g20_xy_yyyyyyyz, g20_xy_yyyyyyzz, g20_xy_yyyyyzzz,\
                                         g20_xy_yyyyzzzz, g20_xy_yyyzzzzz, g20_xy_yyzzzzzz,\
                                         g20_xy_yzzzzzzz, g20_xy_zzzzzzzz, g20_xz_xxxxxxxx,\
                                         g20_xz_xxxxxxxy, g20_xz_xxxxxxxz, g20_xz_xxxxxxyy,\
                                         g20_xz_xxxxxxyz, g20_xz_xxxxxxzz, g20_xz_xxxxxyyy,\
                                         g20_xz_xxxxxyyz, g20_xz_xxxxxyzz, g20_xz_xxxxxzzz,\
                                         g20_xz_xxxxyyyy, g20_xz_xxxxyyyz, g20_xz_xxxxyyzz,\
                                         g20_xz_xxxxyzzz, g20_xz_xxxxzzzz, g20_xz_xxxyyyyy,\
                                         g20_xz_xxxyyyyz, g20_xz_xxxyyyzz, g20_xz_xxxyyzzz,\
                                         g20_xz_xxxyzzzz, g20_xz_xxxzzzzz, g20_xz_xxyyyyyy,\
                                         g20_xz_xxyyyyyz, g20_xz_xxyyyyzz, g20_xz_xxyyyzzz,\
                                         g20_xz_xxyyzzzz, g20_xz_xxyzzzzz, g20_xz_xxzzzzzz,\
                                         g20_xz_xyyyyyyy, g20_xz_xyyyyyyz, g20_xz_xyyyyyzz,\
                                         g20_xz_xyyyyzzz, g20_xz_xyyyzzzz, g20_xz_xyyzzzzz,\
                                         g20_xz_xyzzzzzz, g20_xz_xzzzzzzz, g20_xz_yyyyyyyy,\
                                         g20_xz_yyyyyyyz, g20_xz_yyyyyyzz, g20_xz_yyyyyzzz,\
                                         g20_xz_yyyyzzzz, g20_xz_yyyzzzzz, g20_xz_yyzzzzzz,\
                                         g20_xz_yzzzzzzz, g20_xz_zzzzzzzz, g20_yy_xxxxxxxx,\
                                         g20_yy_xxxxxxxy, g20_yy_xxxxxxxz, g20_yy_xxxxxxyy,\
                                         g20_yy_xxxxxxyz, g20_yy_xxxxxxzz, g20_yy_xxxxxyyy,\
                                         g20_yy_xxxxxyyz, g20_yy_xxxxxyzz, g20_yy_xxxxxzzz,\
                                         g20_yy_xxxxyyyy, g20_yy_xxxxyyyz, g20_yy_xxxxyyzz,\
                                         g20_yy_xxxxyzzz, g20_yy_xxxxzzzz, g20_yy_xxxyyyyy,\
                                         g20_yy_xxxyyyyz, g20_yy_xxxyyyzz, g20_yy_xxxyyzzz,\
                                         g20_yy_xxxyzzzz, g20_yy_xxxzzzzz, g20_yy_xxyyyyyy,\
                                         g20_yy_xxyyyyyz, g20_yy_xxyyyyzz, g20_yy_xxyyyzzz,\
                                         g20_yy_xxyyzzzz, g20_yy_xxyzzzzz, g20_yy_xxzzzzzz,\
                                         g20_yy_xyyyyyyy, g20_yy_xyyyyyyz, g20_yy_xyyyyyzz,\
                                         g20_yy_xyyyyzzz, g20_yy_xyyyzzzz, g20_yy_xyyzzzzz,\
                                         g20_yy_xyzzzzzz, g20_yy_xzzzzzzz, g20_yy_yyyyyyyy,\
                                         g20_yy_yyyyyyyz, g20_yy_yyyyyyzz, g20_yy_yyyyyzzz,\
                                         g20_yy_yyyyzzzz, g20_yy_yyyzzzzz, g20_yy_yyzzzzzz,\
                                         g20_yy_yzzzzzzz, g20_yy_zzzzzzzz, g20_yz_xxxxxxxx,\
                                         g20_yz_xxxxxxxy, g20_yz_xxxxxxxz, g20_yz_xxxxxxyy,\
                                         g20_yz_xxxxxxyz, g20_yz_xxxxxxzz, g20_yz_xxxxxyyy,\
                                         g20_yz_xxxxxyyz, g20_yz_xxxxxyzz, g20_yz_xxxxxzzz,\
                                         g20_yz_xxxxyyyy, g20_yz_xxxxyyyz, g20_yz_xxxxyyzz,\
                                         g20_yz_xxxxyzzz, g20_yz_xxxxzzzz, g20_yz_xxxyyyyy,\
                                         g20_yz_xxxyyyyz, g20_yz_xxxyyyzz, g20_yz_xxxyyzzz,\
                                         g20_yz_xxxyzzzz, g20_yz_xxxzzzzz, g20_yz_xxyyyyyy,\
                                         g20_yz_xxyyyyyz, g20_yz_xxyyyyzz, g20_yz_xxyyyzzz,\
                                         g20_yz_xxyyzzzz, g20_yz_xxyzzzzz, g20_yz_xxzzzzzz,\
                                         g20_yz_xyyyyyyy, g20_yz_xyyyyyyz, g20_yz_xyyyyyzz,\
                                         g20_yz_xyyyyzzz, g20_yz_xyyyzzzz, g20_yz_xyyzzzzz,\
                                         g20_yz_xyzzzzzz, g20_yz_xzzzzzzz, g20_yz_yyyyyyyy,\
                                         g20_yz_yyyyyyyz, g20_yz_yyyyyyzz, g20_yz_yyyyyzzz,\
                                         g20_yz_yyyyzzzz, g20_yz_yyyzzzzz, g20_yz_yyzzzzzz,\
                                         g20_yz_yzzzzzzz, g20_yz_zzzzzzzz, g20_zz_xxxxxxxx,\
                                         g20_zz_xxxxxxxy, g20_zz_xxxxxxxz, g20_zz_xxxxxxyy,\
                                         g20_zz_xxxxxxyz, g20_zz_xxxxxxzz, g20_zz_xxxxxyyy,\
                                         g20_zz_xxxxxyyz, g20_zz_xxxxxyzz, g20_zz_xxxxxzzz,\
                                         g20_zz_xxxxyyyy, g20_zz_xxxxyyyz, g20_zz_xxxxyyzz,\
                                         g20_zz_xxxxyzzz, g20_zz_xxxxzzzz, g20_zz_xxxyyyyy,\
                                         g20_zz_xxxyyyyz, g20_zz_xxxyyyzz, g20_zz_xxxyyzzz,\
                                         g20_zz_xxxyzzzz, g20_zz_xxxzzzzz, g20_zz_xxyyyyyy,\
                                         g20_zz_xxyyyyyz, g20_zz_xxyyyyzz, g20_zz_xxyyyzzz,\
                                         g20_zz_xxyyzzzz, g20_zz_xxyzzzzz, g20_zz_xxzzzzzz,\
                                         g20_zz_xyyyyyyy, g20_zz_xyyyyyyz, g20_zz_xyyyyyzz,\
                                         g20_zz_xyyyyzzz, g20_zz_xyyyzzzz, g20_zz_xyyzzzzz,\
                                         g20_zz_xyzzzzzz, g20_zz_xzzzzzzz, g20_zz_yyyyyyyy,\
                                         g20_zz_yyyyyyyz, g20_zz_yyyyyyzz, g20_zz_yyyyyzzz,\
                                         g20_zz_yyyyzzzz, g20_zz_yyyzzzzz, g20_zz_yyzzzzzz,\
                                         g20_zz_yzzzzzzz, g20_zz_zzzzzzzz, g21_xx_xxxxxxxx,\
                                         g21_xx_xxxxxxxy, g21_xx_xxxxxxxz, g21_xx_xxxxxxyy,\
                                         g21_xx_xxxxxxyz, g21_xx_xxxxxxzz, g21_xx_xxxxxyyy,\
                                         g21_xx_xxxxxyyz, g21_xx_xxxxxyzz, g21_xx_xxxxxzzz,\
                                         g21_xx_xxxxyyyy, g21_xx_xxxxyyyz, g21_xx_xxxxyyzz,\
                                         g21_xx_xxxxyzzz, g21_xx_xxxxzzzz, g21_xx_xxxyyyyy,\
                                         g21_xx_xxxyyyyz, g21_xx_xxxyyyzz, g21_xx_xxxyyzzz,\
                                         g21_xx_xxxyzzzz, g21_xx_xxxzzzzz, g21_xx_xxyyyyyy,\
                                         g21_xx_xxyyyyyz, g21_xx_xxyyyyzz, g21_xx_xxyyyzzz,\
                                         g21_xx_xxyyzzzz, g21_xx_xxyzzzzz, g21_xx_xxzzzzzz,\
                                         g21_xx_xyyyyyyy, g21_xx_xyyyyyyz, g21_xx_xyyyyyzz,\
                                         g21_xx_xyyyyzzz, g21_xx_xyyyzzzz, g21_xx_xyyzzzzz,\
                                         g21_xx_xyzzzzzz, g21_xx_xzzzzzzz, g21_xx_yyyyyyyy,\
                                         g21_xx_yyyyyyyz, g21_xx_yyyyyyzz, g21_xx_yyyyyzzz,\
                                         g21_xx_yyyyzzzz, g21_xx_yyyzzzzz, g21_xx_yyzzzzzz,\
                                         g21_xx_yzzzzzzz, g21_xx_zzzzzzzz, g21_xy_xxxxxxxx,\
                                         g21_xy_xxxxxxxy, g21_xy_xxxxxxxz, g21_xy_xxxxxxyy,\
                                         g21_xy_xxxxxxyz, g21_xy_xxxxxxzz, g21_xy_xxxxxyyy,\
                                         g21_xy_xxxxxyyz, g21_xy_xxxxxyzz, g21_xy_xxxxxzzz,\
                                         g21_xy_xxxxyyyy, g21_xy_xxxxyyyz, g21_xy_xxxxyyzz,\
                                         g21_xy_xxxxyzzz, g21_xy_xxxxzzzz, g21_xy_xxxyyyyy,\
                                         g21_xy_xxxyyyyz, g21_xy_xxxyyyzz, g21_xy_xxxyyzzz,\
                                         g21_xy_xxxyzzzz, g21_xy_xxxzzzzz, g21_xy_xxyyyyyy,\
                                         g21_xy_xxyyyyyz, g21_xy_xxyyyyzz, g21_xy_xxyyyzzz,\
                                         g21_xy_xxyyzzzz, g21_xy_xxyzzzzz, g21_xy_xxzzzzzz,\
                                         g21_xy_xyyyyyyy, g21_xy_xyyyyyyz, g21_xy_xyyyyyzz,\
                                         g21_xy_xyyyyzzz, g21_xy_xyyyzzzz, g21_xy_xyyzzzzz,\
                                         g21_xy_xyzzzzzz, g21_xy_xzzzzzzz, g21_xy_yyyyyyyy,\
                                         g21_xy_yyyyyyyz, g21_xy_yyyyyyzz, g21_xy_yyyyyzzz,\
                                         g21_xy_yyyyzzzz, g21_xy_yyyzzzzz, g21_xy_yyzzzzzz,\
                                         g21_xy_yzzzzzzz, g21_xy_zzzzzzzz, g21_xz_xxxxxxxx,\
                                         g21_xz_xxxxxxxy, g21_xz_xxxxxxxz, g21_xz_xxxxxxyy,\
                                         g21_xz_xxxxxxyz, g21_xz_xxxxxxzz, g21_xz_xxxxxyyy,\
                                         g21_xz_xxxxxyyz, g21_xz_xxxxxyzz, g21_xz_xxxxxzzz,\
                                         g21_xz_xxxxyyyy, g21_xz_xxxxyyyz, g21_xz_xxxxyyzz,\
                                         g21_xz_xxxxyzzz, g21_xz_xxxxzzzz, g21_xz_xxxyyyyy,\
                                         g21_xz_xxxyyyyz, g21_xz_xxxyyyzz, g21_xz_xxxyyzzz,\
                                         g21_xz_xxxyzzzz, g21_xz_xxxzzzzz, g21_xz_xxyyyyyy,\
                                         g21_xz_xxyyyyyz, g21_xz_xxyyyyzz, g21_xz_xxyyyzzz,\
                                         g21_xz_xxyyzzzz, g21_xz_xxyzzzzz, g21_xz_xxzzzzzz,\
                                         g21_xz_xyyyyyyy, g21_xz_xyyyyyyz, g21_xz_xyyyyyzz,\
                                         g21_xz_xyyyyzzz, g21_xz_xyyyzzzz, g21_xz_xyyzzzzz,\
                                         g21_xz_xyzzzzzz, g21_xz_xzzzzzzz, g21_xz_yyyyyyyy,\
                                         g21_xz_yyyyyyyz, g21_xz_yyyyyyzz, g21_xz_yyyyyzzz,\
                                         g21_xz_yyyyzzzz, g21_xz_yyyzzzzz, g21_xz_yyzzzzzz,\
                                         g21_xz_yzzzzzzz, g21_xz_zzzzzzzz, g21_yy_xxxxxxxx,\
                                         g21_yy_xxxxxxxy, g21_yy_xxxxxxxz, g21_yy_xxxxxxyy,\
                                         g21_yy_xxxxxxyz, g21_yy_xxxxxxzz, g21_yy_xxxxxyyy,\
                                         g21_yy_xxxxxyyz, g21_yy_xxxxxyzz, g21_yy_xxxxxzzz,\
                                         g21_yy_xxxxyyyy, g21_yy_xxxxyyyz, g21_yy_xxxxyyzz,\
                                         g21_yy_xxxxyzzz, g21_yy_xxxxzzzz, g21_yy_xxxyyyyy,\
                                         g21_yy_xxxyyyyz, g21_yy_xxxyyyzz, g21_yy_xxxyyzzz,\
                                         g21_yy_xxxyzzzz, g21_yy_xxxzzzzz, g21_yy_xxyyyyyy,\
                                         g21_yy_xxyyyyyz, g21_yy_xxyyyyzz, g21_yy_xxyyyzzz,\
                                         g21_yy_xxyyzzzz, g21_yy_xxyzzzzz, g21_yy_xxzzzzzz,\
                                         g21_yy_xyyyyyyy, g21_yy_xyyyyyyz, g21_yy_xyyyyyzz,\
                                         g21_yy_xyyyyzzz, g21_yy_xyyyzzzz, g21_yy_xyyzzzzz,\
                                         g21_yy_xyzzzzzz, g21_yy_xzzzzzzz, g21_yy_yyyyyyyy,\
                                         g21_yy_yyyyyyyz, g21_yy_yyyyyyzz, g21_yy_yyyyyzzz,\
                                         g21_yy_yyyyzzzz, g21_yy_yyyzzzzz, g21_yy_yyzzzzzz,\
                                         g21_yy_yzzzzzzz, g21_yy_zzzzzzzz, g21_yz_xxxxxxxx,\
                                         g21_yz_xxxxxxxy, g21_yz_xxxxxxxz, g21_yz_xxxxxxyy,\
                                         g21_yz_xxxxxxyz, g21_yz_xxxxxxzz, g21_yz_xxxxxyyy,\
                                         g21_yz_xxxxxyyz, g21_yz_xxxxxyzz, g21_yz_xxxxxzzz,\
                                         g21_yz_xxxxyyyy, g21_yz_xxxxyyyz, g21_yz_xxxxyyzz,\
                                         g21_yz_xxxxyzzz, g21_yz_xxxxzzzz, g21_yz_xxxyyyyy,\
                                         g21_yz_xxxyyyyz, g21_yz_xxxyyyzz, g21_yz_xxxyyzzz,\
                                         g21_yz_xxxyzzzz, g21_yz_xxxzzzzz, g21_yz_xxyyyyyy,\
                                         g21_yz_xxyyyyyz, g21_yz_xxyyyyzz, g21_yz_xxyyyzzz,\
                                         g21_yz_xxyyzzzz, g21_yz_xxyzzzzz, g21_yz_xxzzzzzz,\
                                         g21_yz_xyyyyyyy, g21_yz_xyyyyyyz, g21_yz_xyyyyyzz,\
                                         g21_yz_xyyyyzzz, g21_yz_xyyyzzzz, g21_yz_xyyzzzzz,\
                                         g21_yz_xyzzzzzz, g21_yz_xzzzzzzz, g21_yz_yyyyyyyy,\
                                         g21_yz_yyyyyyyz, g21_yz_yyyyyyzz, g21_yz_yyyyyzzz,\
                                         g21_yz_yyyyzzzz, g21_yz_yyyzzzzz, g21_yz_yyzzzzzz,\
                                         g21_yz_yzzzzzzz, g21_yz_zzzzzzzz, g21_zz_xxxxxxxx,\
                                         g21_zz_xxxxxxxy, g21_zz_xxxxxxxz, g21_zz_xxxxxxyy,\
                                         g21_zz_xxxxxxyz, g21_zz_xxxxxxzz, g21_zz_xxxxxyyy,\
                                         g21_zz_xxxxxyyz, g21_zz_xxxxxyzz, g21_zz_xxxxxzzz,\
                                         g21_zz_xxxxyyyy, g21_zz_xxxxyyyz, g21_zz_xxxxyyzz,\
                                         g21_zz_xxxxyzzz, g21_zz_xxxxzzzz, g21_zz_xxxyyyyy,\
                                         g21_zz_xxxyyyyz, g21_zz_xxxyyyzz, g21_zz_xxxyyzzz,\
                                         g21_zz_xxxyzzzz, g21_zz_xxxzzzzz, g21_zz_xxyyyyyy,\
                                         g21_zz_xxyyyyyz, g21_zz_xxyyyyzz, g21_zz_xxyyyzzz,\
                                         g21_zz_xxyyzzzz, g21_zz_xxyzzzzz, g21_zz_xxzzzzzz,\
                                         g21_zz_xyyyyyyy, g21_zz_xyyyyyyz, g21_zz_xyyyyyzz,\
                                         g21_zz_xyyyyzzz, g21_zz_xyyyzzzz, g21_zz_xyyzzzzz,\
                                         g21_zz_xyzzzzzz, g21_zz_xzzzzzzz, g21_zz_yyyyyyyy,\
                                         g21_zz_yyyyyyyz, g21_zz_yyyyyyzz, g21_zz_yyyyyzzz,\
                                         g21_zz_yyyyzzzz, g21_zz_yyyzzzzz, g21_zz_yyzzzzzz,\
                                         g21_zz_yzzzzzzz, g21_zz_zzzzzzzz, g11_xxx_xxxxxxxx,\
                                         g11_xxx_xxxxxxxy, g11_xxx_xxxxxxxz, g11_xxx_xxxxxxyy,\
                                         g11_xxx_xxxxxxyz, g11_xxx_xxxxxxzz, g11_xxx_xxxxxyyy,\
                                         g11_xxx_xxxxxyyz, g11_xxx_xxxxxyzz, g11_xxx_xxxxxzzz,\
                                         g11_xxx_xxxxyyyy, g11_xxx_xxxxyyyz, g11_xxx_xxxxyyzz,\
                                         g11_xxx_xxxxyzzz, g11_xxx_xxxxzzzz, g11_xxx_xxxyyyyy,\
                                         g11_xxx_xxxyyyyz, g11_xxx_xxxyyyzz, g11_xxx_xxxyyzzz,\
                                         g11_xxx_xxxyzzzz, g11_xxx_xxxzzzzz, g11_xxx_xxyyyyyy,\
                                         g11_xxx_xxyyyyyz, g11_xxx_xxyyyyzz, g11_xxx_xxyyyzzz,\
                                         g11_xxx_xxyyzzzz, g11_xxx_xxyzzzzz, g11_xxx_xxzzzzzz,\
                                         g11_xxx_xyyyyyyy, g11_xxx_xyyyyyyz, g11_xxx_xyyyyyzz,\
                                         g11_xxx_xyyyyzzz, g11_xxx_xyyyzzzz, g11_xxx_xyyzzzzz,\
                                         g11_xxx_xyzzzzzz, g11_xxx_xzzzzzzz, g11_xxx_yyyyyyyy,\
                                         g11_xxx_yyyyyyyz, g11_xxx_yyyyyyzz, g11_xxx_yyyyyzzz,\
                                         g11_xxx_yyyyzzzz, g11_xxx_yyyzzzzz, g11_xxx_yyzzzzzz,\
                                         g11_xxx_yzzzzzzz, g11_xxx_zzzzzzzz, g11_xxy_xxxxxxxx,\
                                         g11_xxy_xxxxxxxy, g11_xxy_xxxxxxxz, g11_xxy_xxxxxxyy,\
                                         g11_xxy_xxxxxxyz, g11_xxy_xxxxxxzz, g11_xxy_xxxxxyyy,\
                                         g11_xxy_xxxxxyyz, g11_xxy_xxxxxyzz, g11_xxy_xxxxxzzz,\
                                         g11_xxy_xxxxyyyy, g11_xxy_xxxxyyyz, g11_xxy_xxxxyyzz,\
                                         g11_xxy_xxxxyzzz, g11_xxy_xxxxzzzz, g11_xxy_xxxyyyyy,\
                                         g11_xxy_xxxyyyyz, g11_xxy_xxxyyyzz, g11_xxy_xxxyyzzz,\
                                         g11_xxy_xxxyzzzz, g11_xxy_xxxzzzzz, g11_xxy_xxyyyyyy,\
                                         g11_xxy_xxyyyyyz, g11_xxy_xxyyyyzz, g11_xxy_xxyyyzzz,\
                                         g11_xxy_xxyyzzzz, g11_xxy_xxyzzzzz, g11_xxy_xxzzzzzz,\
                                         g11_xxy_xyyyyyyy, g11_xxy_xyyyyyyz, g11_xxy_xyyyyyzz,\
                                         g11_xxy_xyyyyzzz, g11_xxy_xyyyzzzz, g11_xxy_xyyzzzzz,\
                                         g11_xxy_xyzzzzzz, g11_xxy_xzzzzzzz, g11_xxy_yyyyyyyy,\
                                         g11_xxy_yyyyyyyz, g11_xxy_yyyyyyzz, g11_xxy_yyyyyzzz,\
                                         g11_xxy_yyyyzzzz, g11_xxy_yyyzzzzz, g11_xxy_yyzzzzzz,\
                                         g11_xxy_yzzzzzzz, g11_xxy_zzzzzzzz, g11_xxz_xxxxxxxx,\
                                         g11_xxz_xxxxxxxy, g11_xxz_xxxxxxxz, g11_xxz_xxxxxxyy,\
                                         g11_xxz_xxxxxxyz, g11_xxz_xxxxxxzz, g11_xxz_xxxxxyyy,\
                                         g11_xxz_xxxxxyyz, g11_xxz_xxxxxyzz, g11_xxz_xxxxxzzz,\
                                         g11_xxz_xxxxyyyy, g11_xxz_xxxxyyyz, g11_xxz_xxxxyyzz,\
                                         g11_xxz_xxxxyzzz, g11_xxz_xxxxzzzz, g11_xxz_xxxyyyyy,\
                                         g11_xxz_xxxyyyyz, g11_xxz_xxxyyyzz, g11_xxz_xxxyyzzz,\
                                         g11_xxz_xxxyzzzz, g11_xxz_xxxzzzzz, g11_xxz_xxyyyyyy,\
                                         g11_xxz_xxyyyyyz, g11_xxz_xxyyyyzz, g11_xxz_xxyyyzzz,\
                                         g11_xxz_xxyyzzzz, g11_xxz_xxyzzzzz, g11_xxz_xxzzzzzz,\
                                         g11_xxz_xyyyyyyy, g11_xxz_xyyyyyyz, g11_xxz_xyyyyyzz,\
                                         g11_xxz_xyyyyzzz, g11_xxz_xyyyzzzz, g11_xxz_xyyzzzzz,\
                                         g11_xxz_xyzzzzzz, g11_xxz_xzzzzzzz, g11_xxz_yyyyyyyy,\
                                         g11_xxz_yyyyyyyz, g11_xxz_yyyyyyzz, g11_xxz_yyyyyzzz,\
                                         g11_xxz_yyyyzzzz, g11_xxz_yyyzzzzz, g11_xxz_yyzzzzzz,\
                                         g11_xxz_yzzzzzzz, g11_xxz_zzzzzzzz, g11_xyy_xxxxxxxx,\
                                         g11_xyy_xxxxxxxy, g11_xyy_xxxxxxxz, g11_xyy_xxxxxxyy,\
                                         g11_xyy_xxxxxxyz, g11_xyy_xxxxxxzz, g11_xyy_xxxxxyyy,\
                                         g11_xyy_xxxxxyyz, g11_xyy_xxxxxyzz, g11_xyy_xxxxxzzz,\
                                         g11_xyy_xxxxyyyy, g11_xyy_xxxxyyyz, g11_xyy_xxxxyyzz,\
                                         g11_xyy_xxxxyzzz, g11_xyy_xxxxzzzz, g11_xyy_xxxyyyyy,\
                                         g11_xyy_xxxyyyyz, g11_xyy_xxxyyyzz, g11_xyy_xxxyyzzz,\
                                         g11_xyy_xxxyzzzz, g11_xyy_xxxzzzzz, g11_xyy_xxyyyyyy,\
                                         g11_xyy_xxyyyyyz, g11_xyy_xxyyyyzz, g11_xyy_xxyyyzzz,\
                                         g11_xyy_xxyyzzzz, g11_xyy_xxyzzzzz, g11_xyy_xxzzzzzz,\
                                         g11_xyy_xyyyyyyy, g11_xyy_xyyyyyyz, g11_xyy_xyyyyyzz,\
                                         g11_xyy_xyyyyzzz, g11_xyy_xyyyzzzz, g11_xyy_xyyzzzzz,\
                                         g11_xyy_xyzzzzzz, g11_xyy_xzzzzzzz, g11_xyy_yyyyyyyy,\
                                         g11_xyy_yyyyyyyz, g11_xyy_yyyyyyzz, g11_xyy_yyyyyzzz,\
                                         g11_xyy_yyyyzzzz, g11_xyy_yyyzzzzz, g11_xyy_yyzzzzzz,\
                                         g11_xyy_yzzzzzzz, g11_xyy_zzzzzzzz, g11_xyz_xxxxxxxx,\
                                         g11_xyz_xxxxxxxy, g11_xyz_xxxxxxxz, g11_xyz_xxxxxxyy,\
                                         g11_xyz_xxxxxxyz, g11_xyz_xxxxxxzz, g11_xyz_xxxxxyyy,\
                                         g11_xyz_xxxxxyyz, g11_xyz_xxxxxyzz, g11_xyz_xxxxxzzz,\
                                         g11_xyz_xxxxyyyy, g11_xyz_xxxxyyyz, g11_xyz_xxxxyyzz,\
                                         g11_xyz_xxxxyzzz, g11_xyz_xxxxzzzz, g11_xyz_xxxyyyyy,\
                                         g11_xyz_xxxyyyyz, g11_xyz_xxxyyyzz, g11_xyz_xxxyyzzz,\
                                         g11_xyz_xxxyzzzz, g11_xyz_xxxzzzzz, g11_xyz_xxyyyyyy,\
                                         g11_xyz_xxyyyyyz, g11_xyz_xxyyyyzz, g11_xyz_xxyyyzzz,\
                                         g11_xyz_xxyyzzzz, g11_xyz_xxyzzzzz, g11_xyz_xxzzzzzz,\
                                         g11_xyz_xyyyyyyy, g11_xyz_xyyyyyyz, g11_xyz_xyyyyyzz,\
                                         g11_xyz_xyyyyzzz, g11_xyz_xyyyzzzz, g11_xyz_xyyzzzzz,\
                                         g11_xyz_xyzzzzzz, g11_xyz_xzzzzzzz, g11_xyz_yyyyyyyy,\
                                         g11_xyz_yyyyyyyz, g11_xyz_yyyyyyzz, g11_xyz_yyyyyzzz,\
                                         g11_xyz_yyyyzzzz, g11_xyz_yyyzzzzz, g11_xyz_yyzzzzzz,\
                                         g11_xyz_yzzzzzzz, g11_xyz_zzzzzzzz, g11_xzz_xxxxxxxx,\
                                         g11_xzz_xxxxxxxy, g11_xzz_xxxxxxxz, g11_xzz_xxxxxxyy,\
                                         g11_xzz_xxxxxxyz, g11_xzz_xxxxxxzz, g11_xzz_xxxxxyyy,\
                                         g11_xzz_xxxxxyyz, g11_xzz_xxxxxyzz, g11_xzz_xxxxxzzz,\
                                         g11_xzz_xxxxyyyy, g11_xzz_xxxxyyyz, g11_xzz_xxxxyyzz,\
                                         g11_xzz_xxxxyzzz, g11_xzz_xxxxzzzz, g11_xzz_xxxyyyyy,\
                                         g11_xzz_xxxyyyyz, g11_xzz_xxxyyyzz, g11_xzz_xxxyyzzz,\
                                         g11_xzz_xxxyzzzz, g11_xzz_xxxzzzzz, g11_xzz_xxyyyyyy,\
                                         g11_xzz_xxyyyyyz, g11_xzz_xxyyyyzz, g11_xzz_xxyyyzzz,\
                                         g11_xzz_xxyyzzzz, g11_xzz_xxyzzzzz, g11_xzz_xxzzzzzz,\
                                         g11_xzz_xyyyyyyy, g11_xzz_xyyyyyyz, g11_xzz_xyyyyyzz,\
                                         g11_xzz_xyyyyzzz, g11_xzz_xyyyzzzz, g11_xzz_xyyzzzzz,\
                                         g11_xzz_xyzzzzzz, g11_xzz_xzzzzzzz, g11_xzz_yyyyyyyy,\
                                         g11_xzz_yyyyyyyz, g11_xzz_yyyyyyzz, g11_xzz_yyyyyzzz,\
                                         g11_xzz_yyyyzzzz, g11_xzz_yyyzzzzz, g11_xzz_yyzzzzzz,\
                                         g11_xzz_yzzzzzzz, g11_xzz_zzzzzzzz, g11_yyy_xxxxxxxx,\
                                         g11_yyy_xxxxxxxy, g11_yyy_xxxxxxxz, g11_yyy_xxxxxxyy,\
                                         g11_yyy_xxxxxxyz, g11_yyy_xxxxxxzz, g11_yyy_xxxxxyyy,\
                                         g11_yyy_xxxxxyyz, g11_yyy_xxxxxyzz, g11_yyy_xxxxxzzz,\
                                         g11_yyy_xxxxyyyy, g11_yyy_xxxxyyyz, g11_yyy_xxxxyyzz,\
                                         g11_yyy_xxxxyzzz, g11_yyy_xxxxzzzz, g11_yyy_xxxyyyyy,\
                                         g11_yyy_xxxyyyyz, g11_yyy_xxxyyyzz, g11_yyy_xxxyyzzz,\
                                         g11_yyy_xxxyzzzz, g11_yyy_xxxzzzzz, g11_yyy_xxyyyyyy,\
                                         g11_yyy_xxyyyyyz, g11_yyy_xxyyyyzz, g11_yyy_xxyyyzzz,\
                                         g11_yyy_xxyyzzzz, g11_yyy_xxyzzzzz, g11_yyy_xxzzzzzz,\
                                         g11_yyy_xyyyyyyy, g11_yyy_xyyyyyyz, g11_yyy_xyyyyyzz,\
                                         g11_yyy_xyyyyzzz, g11_yyy_xyyyzzzz, g11_yyy_xyyzzzzz,\
                                         g11_yyy_xyzzzzzz, g11_yyy_xzzzzzzz, g11_yyy_yyyyyyyy,\
                                         g11_yyy_yyyyyyyz, g11_yyy_yyyyyyzz, g11_yyy_yyyyyzzz,\
                                         g11_yyy_yyyyzzzz, g11_yyy_yyyzzzzz, g11_yyy_yyzzzzzz,\
                                         g11_yyy_yzzzzzzz, g11_yyy_zzzzzzzz, g11_yyz_xxxxxxxx,\
                                         g11_yyz_xxxxxxxy, g11_yyz_xxxxxxxz, g11_yyz_xxxxxxyy,\
                                         g11_yyz_xxxxxxyz, g11_yyz_xxxxxxzz, g11_yyz_xxxxxyyy,\
                                         g11_yyz_xxxxxyyz, g11_yyz_xxxxxyzz, g11_yyz_xxxxxzzz,\
                                         g11_yyz_xxxxyyyy, g11_yyz_xxxxyyyz, g11_yyz_xxxxyyzz,\
                                         g11_yyz_xxxxyzzz, g11_yyz_xxxxzzzz, g11_yyz_xxxyyyyy,\
                                         g11_yyz_xxxyyyyz, g11_yyz_xxxyyyzz, g11_yyz_xxxyyzzz,\
                                         g11_yyz_xxxyzzzz, g11_yyz_xxxzzzzz, g11_yyz_xxyyyyyy,\
                                         g11_yyz_xxyyyyyz, g11_yyz_xxyyyyzz, g11_yyz_xxyyyzzz,\
                                         g11_yyz_xxyyzzzz, g11_yyz_xxyzzzzz, g11_yyz_xxzzzzzz,\
                                         g11_yyz_xyyyyyyy, g11_yyz_xyyyyyyz, g11_yyz_xyyyyyzz,\
                                         g11_yyz_xyyyyzzz, g11_yyz_xyyyzzzz, g11_yyz_xyyzzzzz,\
                                         g11_yyz_xyzzzzzz, g11_yyz_xzzzzzzz, g11_yyz_yyyyyyyy,\
                                         g11_yyz_yyyyyyyz, g11_yyz_yyyyyyzz, g11_yyz_yyyyyzzz,\
                                         g11_yyz_yyyyzzzz, g11_yyz_yyyzzzzz, g11_yyz_yyzzzzzz,\
                                         g11_yyz_yzzzzzzz, g11_yyz_zzzzzzzz, g11_yzz_xxxxxxxx,\
                                         g11_yzz_xxxxxxxy, g11_yzz_xxxxxxxz, g11_yzz_xxxxxxyy,\
                                         g11_yzz_xxxxxxyz, g11_yzz_xxxxxxzz, g11_yzz_xxxxxyyy,\
                                         g11_yzz_xxxxxyyz, g11_yzz_xxxxxyzz, g11_yzz_xxxxxzzz,\
                                         g11_yzz_xxxxyyyy, g11_yzz_xxxxyyyz, g11_yzz_xxxxyyzz,\
                                         g11_yzz_xxxxyzzz, g11_yzz_xxxxzzzz, g11_yzz_xxxyyyyy,\
                                         g11_yzz_xxxyyyyz, g11_yzz_xxxyyyzz, g11_yzz_xxxyyzzz,\
                                         g11_yzz_xxxyzzzz, g11_yzz_xxxzzzzz, g11_yzz_xxyyyyyy,\
                                         g11_yzz_xxyyyyyz, g11_yzz_xxyyyyzz, g11_yzz_xxyyyzzz,\
                                         g11_yzz_xxyyzzzz, g11_yzz_xxyzzzzz, g11_yzz_xxzzzzzz,\
                                         g11_yzz_xyyyyyyy, g11_yzz_xyyyyyyz, g11_yzz_xyyyyyzz,\
                                         g11_yzz_xyyyyzzz, g11_yzz_xyyyzzzz, g11_yzz_xyyzzzzz,\
                                         g11_yzz_xyzzzzzz, g11_yzz_xzzzzzzz, g11_yzz_yyyyyyyy,\
                                         g11_yzz_yyyyyyyz, g11_yzz_yyyyyyzz, g11_yzz_yyyyyzzz,\
                                         g11_yzz_yyyyzzzz, g11_yzz_yyyzzzzz, g11_yzz_yyzzzzzz,\
                                         g11_yzz_yzzzzzzz, g11_yzz_zzzzzzzz, g11_zzz_xxxxxxxx,\
                                         g11_zzz_xxxxxxxy, g11_zzz_xxxxxxxz, g11_zzz_xxxxxxyy,\
                                         g11_zzz_xxxxxxyz, g11_zzz_xxxxxxzz, g11_zzz_xxxxxyyy,\
                                         g11_zzz_xxxxxyyz, g11_zzz_xxxxxyzz, g11_zzz_xxxxxzzz,\
                                         g11_zzz_xxxxyyyy, g11_zzz_xxxxyyyz, g11_zzz_xxxxyyzz,\
                                         g11_zzz_xxxxyzzz, g11_zzz_xxxxzzzz, g11_zzz_xxxyyyyy,\
                                         g11_zzz_xxxyyyyz, g11_zzz_xxxyyyzz, g11_zzz_xxxyyzzz,\
                                         g11_zzz_xxxyzzzz, g11_zzz_xxxzzzzz, g11_zzz_xxyyyyyy,\
                                         g11_zzz_xxyyyyyz, g11_zzz_xxyyyyzz, g11_zzz_xxyyyzzz,\
                                         g11_zzz_xxyyzzzz, g11_zzz_xxyzzzzz, g11_zzz_xxzzzzzz,\
                                         g11_zzz_xyyyyyyy, g11_zzz_xyyyyyyz, g11_zzz_xyyyyyzz,\
                                         g11_zzz_xyyyyzzz, g11_zzz_xyyyzzzz, g11_zzz_xyyzzzzz,\
                                         g11_zzz_xyzzzzzz, g11_zzz_xzzzzzzz, g11_zzz_yyyyyyyy,\
                                         g11_zzz_yyyyyyyz, g11_zzz_yyyyyyzz, g11_zzz_yyyyyzzz,\
                                         g11_zzz_yyyyzzzz, g11_zzz_yyyzzzzz, g11_zzz_yyzzzzzz,\
                                         g11_zzz_yzzzzzzz, g11_zzz_zzzzzzzz, g_xxxx_xxxxxxxx,\
                                         g_xxxx_xxxxxxxy, g_xxxx_xxxxxxxz, g_xxxx_xxxxxxyy,\
                                         g_xxxx_xxxxxxyz, g_xxxx_xxxxxxzz, g_xxxx_xxxxxyyy,\
                                         g_xxxx_xxxxxyyz, g_xxxx_xxxxxyzz, g_xxxx_xxxxxzzz,\
                                         g_xxxx_xxxxyyyy, g_xxxx_xxxxyyyz, g_xxxx_xxxxyyzz,\
                                         g_xxxx_xxxxyzzz, g_xxxx_xxxxzzzz, g_xxxx_xxxyyyyy,\
                                         g_xxxx_xxxyyyyz, g_xxxx_xxxyyyzz, g_xxxx_xxxyyzzz,\
                                         g_xxxx_xxxyzzzz, g_xxxx_xxxzzzzz, g_xxxx_xxyyyyyy,\
                                         g_xxxx_xxyyyyyz, g_xxxx_xxyyyyzz, g_xxxx_xxyyyzzz,\
                                         g_xxxx_xxyyzzzz, g_xxxx_xxyzzzzz, g_xxxx_xxzzzzzz,\
                                         g_xxxx_xyyyyyyy, g_xxxx_xyyyyyyz, g_xxxx_xyyyyyzz,\
                                         g_xxxx_xyyyyzzz, g_xxxx_xyyyzzzz, g_xxxx_xyyzzzzz,\
                                         g_xxxx_xyzzzzzz, g_xxxx_xzzzzzzz, g_xxxx_yyyyyyyy,\
                                         g_xxxx_yyyyyyyz, g_xxxx_yyyyyyzz, g_xxxx_yyyyyzzz,\
                                         g_xxxx_yyyyzzzz, g_xxxx_yyyzzzzz, g_xxxx_yyzzzzzz,\
                                         g_xxxx_yzzzzzzz, g_xxxx_zzzzzzzz, g_xxxy_xxxxxxxx,\
                                         g_xxxy_xxxxxxxy, g_xxxy_xxxxxxxz, g_xxxy_xxxxxxyy,\
                                         g_xxxy_xxxxxxyz, g_xxxy_xxxxxxzz, g_xxxy_xxxxxyyy,\
                                         g_xxxy_xxxxxyyz, g_xxxy_xxxxxyzz, g_xxxy_xxxxxzzz,\
                                         g_xxxy_xxxxyyyy, g_xxxy_xxxxyyyz, g_xxxy_xxxxyyzz,\
                                         g_xxxy_xxxxyzzz, g_xxxy_xxxxzzzz, g_xxxy_xxxyyyyy,\
                                         g_xxxy_xxxyyyyz, g_xxxy_xxxyyyzz, g_xxxy_xxxyyzzz,\
                                         g_xxxy_xxxyzzzz, g_xxxy_xxxzzzzz, g_xxxy_xxyyyyyy,\
                                         g_xxxy_xxyyyyyz, g_xxxy_xxyyyyzz, g_xxxy_xxyyyzzz,\
                                         g_xxxy_xxyyzzzz, g_xxxy_xxyzzzzz, g_xxxy_xxzzzzzz,\
                                         g_xxxy_xyyyyyyy, g_xxxy_xyyyyyyz, g_xxxy_xyyyyyzz,\
                                         g_xxxy_xyyyyzzz, g_xxxy_xyyyzzzz, g_xxxy_xyyzzzzz,\
                                         g_xxxy_xyzzzzzz, g_xxxy_xzzzzzzz, g_xxxy_yyyyyyyy,\
                                         g_xxxy_yyyyyyyz, g_xxxy_yyyyyyzz, g_xxxy_yyyyyzzz,\
                                         g_xxxy_yyyyzzzz, g_xxxy_yyyzzzzz, g_xxxy_yyzzzzzz,\
                                         g_xxxy_yzzzzzzz, g_xxxy_zzzzzzzz, g_xxxz_xxxxxxxx,\
                                         g_xxxz_xxxxxxxy, g_xxxz_xxxxxxxz, g_xxxz_xxxxxxyy,\
                                         g_xxxz_xxxxxxyz, g_xxxz_xxxxxxzz, g_xxxz_xxxxxyyy,\
                                         g_xxxz_xxxxxyyz, g_xxxz_xxxxxyzz, g_xxxz_xxxxxzzz,\
                                         g_xxxz_xxxxyyyy, g_xxxz_xxxxyyyz, g_xxxz_xxxxyyzz,\
                                         g_xxxz_xxxxyzzz, g_xxxz_xxxxzzzz, g_xxxz_xxxyyyyy,\
                                         g_xxxz_xxxyyyyz, g_xxxz_xxxyyyzz, g_xxxz_xxxyyzzz,\
                                         g_xxxz_xxxyzzzz, g_xxxz_xxxzzzzz, g_xxxz_xxyyyyyy,\
                                         g_xxxz_xxyyyyyz, g_xxxz_xxyyyyzz, g_xxxz_xxyyyzzz,\
                                         g_xxxz_xxyyzzzz, g_xxxz_xxyzzzzz, g_xxxz_xxzzzzzz,\
                                         g_xxxz_xyyyyyyy, g_xxxz_xyyyyyyz, g_xxxz_xyyyyyzz,\
                                         g_xxxz_xyyyyzzz, g_xxxz_xyyyzzzz, g_xxxz_xyyzzzzz,\
                                         g_xxxz_xyzzzzzz, g_xxxz_xzzzzzzz, g_xxxz_yyyyyyyy,\
                                         g_xxxz_yyyyyyyz, g_xxxz_yyyyyyzz, g_xxxz_yyyyyzzz,\
                                         g_xxxz_yyyyzzzz, g_xxxz_yyyzzzzz, g_xxxz_yyzzzzzz,\
                                         g_xxxz_yzzzzzzz, g_xxxz_zzzzzzzz, g_xxyy_xxxxxxxx,\
                                         g_xxyy_xxxxxxxy, g_xxyy_xxxxxxxz, g_xxyy_xxxxxxyy,\
                                         g_xxyy_xxxxxxyz, g_xxyy_xxxxxxzz, g_xxyy_xxxxxyyy,\
                                         g_xxyy_xxxxxyyz, g_xxyy_xxxxxyzz, g_xxyy_xxxxxzzz,\
                                         g_xxyy_xxxxyyyy, g_xxyy_xxxxyyyz, g_xxyy_xxxxyyzz,\
                                         g_xxyy_xxxxyzzz, g_xxyy_xxxxzzzz, g_xxyy_xxxyyyyy,\
                                         g_xxyy_xxxyyyyz, g_xxyy_xxxyyyzz, g_xxyy_xxxyyzzz,\
                                         g_xxyy_xxxyzzzz, g_xxyy_xxxzzzzz, g_xxyy_xxyyyyyy,\
                                         g_xxyy_xxyyyyyz, g_xxyy_xxyyyyzz, g_xxyy_xxyyyzzz,\
                                         g_xxyy_xxyyzzzz, g_xxyy_xxyzzzzz, g_xxyy_xxzzzzzz,\
                                         g_xxyy_xyyyyyyy, g_xxyy_xyyyyyyz, g_xxyy_xyyyyyzz,\
                                         g_xxyy_xyyyyzzz, g_xxyy_xyyyzzzz, g_xxyy_xyyzzzzz,\
                                         g_xxyy_xyzzzzzz, g_xxyy_xzzzzzzz, g_xxyy_yyyyyyyy,\
                                         g_xxyy_yyyyyyyz, g_xxyy_yyyyyyzz, g_xxyy_yyyyyzzz,\
                                         g_xxyy_yyyyzzzz, g_xxyy_yyyzzzzz, g_xxyy_yyzzzzzz,\
                                         g_xxyy_yzzzzzzz, g_xxyy_zzzzzzzz, g_xxyz_xxxxxxxx,\
                                         g_xxyz_xxxxxxxy, g_xxyz_xxxxxxxz, g_xxyz_xxxxxxyy,\
                                         g_xxyz_xxxxxxyz, g_xxyz_xxxxxxzz, g_xxyz_xxxxxyyy,\
                                         g_xxyz_xxxxxyyz, g_xxyz_xxxxxyzz, g_xxyz_xxxxxzzz,\
                                         g_xxyz_xxxxyyyy, g_xxyz_xxxxyyyz, g_xxyz_xxxxyyzz,\
                                         g_xxyz_xxxxyzzz, g_xxyz_xxxxzzzz, g_xxyz_xxxyyyyy,\
                                         g_xxyz_xxxyyyyz, g_xxyz_xxxyyyzz, g_xxyz_xxxyyzzz,\
                                         g_xxyz_xxxyzzzz, g_xxyz_xxxzzzzz, g_xxyz_xxyyyyyy,\
                                         g_xxyz_xxyyyyyz, g_xxyz_xxyyyyzz, g_xxyz_xxyyyzzz,\
                                         g_xxyz_xxyyzzzz, g_xxyz_xxyzzzzz, g_xxyz_xxzzzzzz,\
                                         g_xxyz_xyyyyyyy, g_xxyz_xyyyyyyz, g_xxyz_xyyyyyzz,\
                                         g_xxyz_xyyyyzzz, g_xxyz_xyyyzzzz, g_xxyz_xyyzzzzz,\
                                         g_xxyz_xyzzzzzz, g_xxyz_xzzzzzzz, g_xxyz_yyyyyyyy,\
                                         g_xxyz_yyyyyyyz, g_xxyz_yyyyyyzz, g_xxyz_yyyyyzzz,\
                                         g_xxyz_yyyyzzzz, g_xxyz_yyyzzzzz, g_xxyz_yyzzzzzz,\
                                         g_xxyz_yzzzzzzz, g_xxyz_zzzzzzzz, g_xxzz_xxxxxxxx,\
                                         g_xxzz_xxxxxxxy, g_xxzz_xxxxxxxz, g_xxzz_xxxxxxyy,\
                                         g_xxzz_xxxxxxyz, g_xxzz_xxxxxxzz, g_xxzz_xxxxxyyy,\
                                         g_xxzz_xxxxxyyz, g_xxzz_xxxxxyzz, g_xxzz_xxxxxzzz,\
                                         g_xxzz_xxxxyyyy, g_xxzz_xxxxyyyz, g_xxzz_xxxxyyzz,\
                                         g_xxzz_xxxxyzzz, g_xxzz_xxxxzzzz, g_xxzz_xxxyyyyy,\
                                         g_xxzz_xxxyyyyz, g_xxzz_xxxyyyzz, g_xxzz_xxxyyzzz,\
                                         g_xxzz_xxxyzzzz, g_xxzz_xxxzzzzz, g_xxzz_xxyyyyyy,\
                                         g_xxzz_xxyyyyyz, g_xxzz_xxyyyyzz, g_xxzz_xxyyyzzz,\
                                         g_xxzz_xxyyzzzz, g_xxzz_xxyzzzzz, g_xxzz_xxzzzzzz,\
                                         g_xxzz_xyyyyyyy, g_xxzz_xyyyyyyz, g_xxzz_xyyyyyzz,\
                                         g_xxzz_xyyyyzzz, g_xxzz_xyyyzzzz, g_xxzz_xyyzzzzz,\
                                         g_xxzz_xyzzzzzz, g_xxzz_xzzzzzzz, g_xxzz_yyyyyyyy,\
                                         g_xxzz_yyyyyyyz, g_xxzz_yyyyyyzz, g_xxzz_yyyyyzzz,\
                                         g_xxzz_yyyyzzzz, g_xxzz_yyyzzzzz, g_xxzz_yyzzzzzz,\
                                         g_xxzz_yzzzzzzz, g_xxzz_zzzzzzzz, g_xyyy_xxxxxxxx,\
                                         g_xyyy_xxxxxxxy, g_xyyy_xxxxxxxz, g_xyyy_xxxxxxyy,\
                                         g_xyyy_xxxxxxyz, g_xyyy_xxxxxxzz, g_xyyy_xxxxxyyy,\
                                         g_xyyy_xxxxxyyz, g_xyyy_xxxxxyzz, g_xyyy_xxxxxzzz,\
                                         g_xyyy_xxxxyyyy, g_xyyy_xxxxyyyz, g_xyyy_xxxxyyzz,\
                                         g_xyyy_xxxxyzzz, g_xyyy_xxxxzzzz, g_xyyy_xxxyyyyy,\
                                         g_xyyy_xxxyyyyz, g_xyyy_xxxyyyzz, g_xyyy_xxxyyzzz,\
                                         g_xyyy_xxxyzzzz, g_xyyy_xxxzzzzz, g_xyyy_xxyyyyyy,\
                                         g_xyyy_xxyyyyyz, g_xyyy_xxyyyyzz, g_xyyy_xxyyyzzz,\
                                         g_xyyy_xxyyzzzz, g_xyyy_xxyzzzzz, g_xyyy_xxzzzzzz,\
                                         g_xyyy_xyyyyyyy, g_xyyy_xyyyyyyz, g_xyyy_xyyyyyzz,\
                                         g_xyyy_xyyyyzzz, g_xyyy_xyyyzzzz, g_xyyy_xyyzzzzz,\
                                         g_xyyy_xyzzzzzz, g_xyyy_xzzzzzzz, g_xyyy_yyyyyyyy,\
                                         g_xyyy_yyyyyyyz, g_xyyy_yyyyyyzz, g_xyyy_yyyyyzzz,\
                                         g_xyyy_yyyyzzzz, g_xyyy_yyyzzzzz, g_xyyy_yyzzzzzz,\
                                         g_xyyy_yzzzzzzz, g_xyyy_zzzzzzzz, g_xyyz_xxxxxxxx,\
                                         g_xyyz_xxxxxxxy, g_xyyz_xxxxxxxz, g_xyyz_xxxxxxyy,\
                                         g_xyyz_xxxxxxyz, g_xyyz_xxxxxxzz, g_xyyz_xxxxxyyy,\
                                         g_xyyz_xxxxxyyz, g_xyyz_xxxxxyzz, g_xyyz_xxxxxzzz,\
                                         g_xyyz_xxxxyyyy, g_xyyz_xxxxyyyz, g_xyyz_xxxxyyzz,\
                                         g_xyyz_xxxxyzzz, g_xyyz_xxxxzzzz, g_xyyz_xxxyyyyy,\
                                         g_xyyz_xxxyyyyz, g_xyyz_xxxyyyzz, g_xyyz_xxxyyzzz,\
                                         g_xyyz_xxxyzzzz, g_xyyz_xxxzzzzz, g_xyyz_xxyyyyyy,\
                                         g_xyyz_xxyyyyyz, g_xyyz_xxyyyyzz, g_xyyz_xxyyyzzz,\
                                         g_xyyz_xxyyzzzz, g_xyyz_xxyzzzzz, g_xyyz_xxzzzzzz,\
                                         g_xyyz_xyyyyyyy, g_xyyz_xyyyyyyz, g_xyyz_xyyyyyzz,\
                                         g_xyyz_xyyyyzzz, g_xyyz_xyyyzzzz, g_xyyz_xyyzzzzz,\
                                         g_xyyz_xyzzzzzz, g_xyyz_xzzzzzzz, g_xyyz_yyyyyyyy,\
                                         g_xyyz_yyyyyyyz, g_xyyz_yyyyyyzz, g_xyyz_yyyyyzzz,\
                                         g_xyyz_yyyyzzzz, g_xyyz_yyyzzzzz, g_xyyz_yyzzzzzz,\
                                         g_xyyz_yzzzzzzz, g_xyyz_zzzzzzzz, g_xyzz_xxxxxxxx,\
                                         g_xyzz_xxxxxxxy, g_xyzz_xxxxxxxz, g_xyzz_xxxxxxyy,\
                                         g_xyzz_xxxxxxyz, g_xyzz_xxxxxxzz, g_xyzz_xxxxxyyy,\
                                         g_xyzz_xxxxxyyz, g_xyzz_xxxxxyzz, g_xyzz_xxxxxzzz,\
                                         g_xyzz_xxxxyyyy, g_xyzz_xxxxyyyz, g_xyzz_xxxxyyzz,\
                                         g_xyzz_xxxxyzzz, g_xyzz_xxxxzzzz, g_xyzz_xxxyyyyy,\
                                         g_xyzz_xxxyyyyz, g_xyzz_xxxyyyzz, g_xyzz_xxxyyzzz,\
                                         g_xyzz_xxxyzzzz, g_xyzz_xxxzzzzz, g_xyzz_xxyyyyyy,\
                                         g_xyzz_xxyyyyyz, g_xyzz_xxyyyyzz, g_xyzz_xxyyyzzz,\
                                         g_xyzz_xxyyzzzz, g_xyzz_xxyzzzzz, g_xyzz_xxzzzzzz,\
                                         g_xyzz_xyyyyyyy, g_xyzz_xyyyyyyz, g_xyzz_xyyyyyzz,\
                                         g_xyzz_xyyyyzzz, g_xyzz_xyyyzzzz, g_xyzz_xyyzzzzz,\
                                         g_xyzz_xyzzzzzz, g_xyzz_xzzzzzzz, g_xyzz_yyyyyyyy,\
                                         g_xyzz_yyyyyyyz, g_xyzz_yyyyyyzz, g_xyzz_yyyyyzzz,\
                                         g_xyzz_yyyyzzzz, g_xyzz_yyyzzzzz, g_xyzz_yyzzzzzz,\
                                         g_xyzz_yzzzzzzz, g_xyzz_zzzzzzzz, g_xzzz_xxxxxxxx,\
                                         g_xzzz_xxxxxxxy, g_xzzz_xxxxxxxz, g_xzzz_xxxxxxyy,\
                                         g_xzzz_xxxxxxyz, g_xzzz_xxxxxxzz, g_xzzz_xxxxxyyy,\
                                         g_xzzz_xxxxxyyz, g_xzzz_xxxxxyzz, g_xzzz_xxxxxzzz,\
                                         g_xzzz_xxxxyyyy, g_xzzz_xxxxyyyz, g_xzzz_xxxxyyzz,\
                                         g_xzzz_xxxxyzzz, g_xzzz_xxxxzzzz, g_xzzz_xxxyyyyy,\
                                         g_xzzz_xxxyyyyz, g_xzzz_xxxyyyzz, g_xzzz_xxxyyzzz,\
                                         g_xzzz_xxxyzzzz, g_xzzz_xxxzzzzz, g_xzzz_xxyyyyyy,\
                                         g_xzzz_xxyyyyyz, g_xzzz_xxyyyyzz, g_xzzz_xxyyyzzz,\
                                         g_xzzz_xxyyzzzz, g_xzzz_xxyzzzzz, g_xzzz_xxzzzzzz,\
                                         g_xzzz_xyyyyyyy, g_xzzz_xyyyyyyz, g_xzzz_xyyyyyzz,\
                                         g_xzzz_xyyyyzzz, g_xzzz_xyyyzzzz, g_xzzz_xyyzzzzz,\
                                         g_xzzz_xyzzzzzz, g_xzzz_xzzzzzzz, g_xzzz_yyyyyyyy,\
                                         g_xzzz_yyyyyyyz, g_xzzz_yyyyyyzz, g_xzzz_yyyyyzzz,\
                                         g_xzzz_yyyyzzzz, g_xzzz_yyyzzzzz, g_xzzz_yyzzzzzz,\
                                         g_xzzz_yzzzzzzz, g_xzzz_zzzzzzzz, g_yyyy_xxxxxxxx,\
                                         g_yyyy_xxxxxxxy, g_yyyy_xxxxxxxz, g_yyyy_xxxxxxyy,\
                                         g_yyyy_xxxxxxyz, g_yyyy_xxxxxxzz, g_yyyy_xxxxxyyy,\
                                         g_yyyy_xxxxxyyz, g_yyyy_xxxxxyzz, g_yyyy_xxxxxzzz,\
                                         g_yyyy_xxxxyyyy, g_yyyy_xxxxyyyz, g_yyyy_xxxxyyzz,\
                                         g_yyyy_xxxxyzzz, g_yyyy_xxxxzzzz, g_yyyy_xxxyyyyy,\
                                         g_yyyy_xxxyyyyz, g_yyyy_xxxyyyzz, g_yyyy_xxxyyzzz,\
                                         g_yyyy_xxxyzzzz, g_yyyy_xxxzzzzz, g_yyyy_xxyyyyyy,\
                                         g_yyyy_xxyyyyyz, g_yyyy_xxyyyyzz, g_yyyy_xxyyyzzz,\
                                         g_yyyy_xxyyzzzz, g_yyyy_xxyzzzzz, g_yyyy_xxzzzzzz,\
                                         g_yyyy_xyyyyyyy, g_yyyy_xyyyyyyz, g_yyyy_xyyyyyzz,\
                                         g_yyyy_xyyyyzzz, g_yyyy_xyyyzzzz, g_yyyy_xyyzzzzz,\
                                         g_yyyy_xyzzzzzz, g_yyyy_xzzzzzzz, g_yyyy_yyyyyyyy,\
                                         g_yyyy_yyyyyyyz, g_yyyy_yyyyyyzz, g_yyyy_yyyyyzzz,\
                                         g_yyyy_yyyyzzzz, g_yyyy_yyyzzzzz, g_yyyy_yyzzzzzz,\
                                         g_yyyy_yzzzzzzz, g_yyyy_zzzzzzzz, g_yyyz_xxxxxxxx,\
                                         g_yyyz_xxxxxxxy, g_yyyz_xxxxxxxz, g_yyyz_xxxxxxyy,\
                                         g_yyyz_xxxxxxyz, g_yyyz_xxxxxxzz, g_yyyz_xxxxxyyy,\
                                         g_yyyz_xxxxxyyz, g_yyyz_xxxxxyzz, g_yyyz_xxxxxzzz,\
                                         g_yyyz_xxxxyyyy, g_yyyz_xxxxyyyz, g_yyyz_xxxxyyzz,\
                                         g_yyyz_xxxxyzzz, g_yyyz_xxxxzzzz, g_yyyz_xxxyyyyy,\
                                         g_yyyz_xxxyyyyz, g_yyyz_xxxyyyzz, g_yyyz_xxxyyzzz,\
                                         g_yyyz_xxxyzzzz, g_yyyz_xxxzzzzz, g_yyyz_xxyyyyyy,\
                                         g_yyyz_xxyyyyyz, g_yyyz_xxyyyyzz, g_yyyz_xxyyyzzz,\
                                         g_yyyz_xxyyzzzz, g_yyyz_xxyzzzzz, g_yyyz_xxzzzzzz,\
                                         g_yyyz_xyyyyyyy, g_yyyz_xyyyyyyz, g_yyyz_xyyyyyzz,\
                                         g_yyyz_xyyyyzzz, g_yyyz_xyyyzzzz, g_yyyz_xyyzzzzz,\
                                         g_yyyz_xyzzzzzz, g_yyyz_xzzzzzzz, g_yyyz_yyyyyyyy,\
                                         g_yyyz_yyyyyyyz, g_yyyz_yyyyyyzz, g_yyyz_yyyyyzzz,\
                                         g_yyyz_yyyyzzzz, g_yyyz_yyyzzzzz, g_yyyz_yyzzzzzz,\
                                         g_yyyz_yzzzzzzz, g_yyyz_zzzzzzzz, g_yyzz_xxxxxxxx,\
                                         g_yyzz_xxxxxxxy, g_yyzz_xxxxxxxz, g_yyzz_xxxxxxyy,\
                                         g_yyzz_xxxxxxyz, g_yyzz_xxxxxxzz, g_yyzz_xxxxxyyy,\
                                         g_yyzz_xxxxxyyz, g_yyzz_xxxxxyzz, g_yyzz_xxxxxzzz,\
                                         g_yyzz_xxxxyyyy, g_yyzz_xxxxyyyz, g_yyzz_xxxxyyzz,\
                                         g_yyzz_xxxxyzzz, g_yyzz_xxxxzzzz, g_yyzz_xxxyyyyy,\
                                         g_yyzz_xxxyyyyz, g_yyzz_xxxyyyzz, g_yyzz_xxxyyzzz,\
                                         g_yyzz_xxxyzzzz, g_yyzz_xxxzzzzz, g_yyzz_xxyyyyyy,\
                                         g_yyzz_xxyyyyyz, g_yyzz_xxyyyyzz, g_yyzz_xxyyyzzz,\
                                         g_yyzz_xxyyzzzz, g_yyzz_xxyzzzzz, g_yyzz_xxzzzzzz,\
                                         g_yyzz_xyyyyyyy, g_yyzz_xyyyyyyz, g_yyzz_xyyyyyzz,\
                                         g_yyzz_xyyyyzzz, g_yyzz_xyyyzzzz, g_yyzz_xyyzzzzz,\
                                         g_yyzz_xyzzzzzz, g_yyzz_xzzzzzzz, g_yyzz_yyyyyyyy,\
                                         g_yyzz_yyyyyyyz, g_yyzz_yyyyyyzz, g_yyzz_yyyyyzzz,\
                                         g_yyzz_yyyyzzzz, g_yyzz_yyyzzzzz, g_yyzz_yyzzzzzz,\
                                         g_yyzz_yzzzzzzz, g_yyzz_zzzzzzzz, g_yzzz_xxxxxxxx,\
                                         g_yzzz_xxxxxxxy, g_yzzz_xxxxxxxz, g_yzzz_xxxxxxyy,\
                                         g_yzzz_xxxxxxyz, g_yzzz_xxxxxxzz, g_yzzz_xxxxxyyy,\
                                         g_yzzz_xxxxxyyz, g_yzzz_xxxxxyzz, g_yzzz_xxxxxzzz,\
                                         g_yzzz_xxxxyyyy, g_yzzz_xxxxyyyz, g_yzzz_xxxxyyzz,\
                                         g_yzzz_xxxxyzzz, g_yzzz_xxxxzzzz, g_yzzz_xxxyyyyy,\
                                         g_yzzz_xxxyyyyz, g_yzzz_xxxyyyzz, g_yzzz_xxxyyzzz,\
                                         g_yzzz_xxxyzzzz, g_yzzz_xxxzzzzz, g_yzzz_xxyyyyyy,\
                                         g_yzzz_xxyyyyyz, g_yzzz_xxyyyyzz, g_yzzz_xxyyyzzz,\
                                         g_yzzz_xxyyzzzz, g_yzzz_xxyzzzzz, g_yzzz_xxzzzzzz,\
                                         g_yzzz_xyyyyyyy, g_yzzz_xyyyyyyz, g_yzzz_xyyyyyzz,\
                                         g_yzzz_xyyyyzzz, g_yzzz_xyyyzzzz, g_yzzz_xyyzzzzz,\
                                         g_yzzz_xyzzzzzz, g_yzzz_xzzzzzzz, g_yzzz_yyyyyyyy,\
                                         g_yzzz_yyyyyyyz, g_yzzz_yyyyyyzz, g_yzzz_yyyyyzzz,\
                                         g_yzzz_yyyyzzzz, g_yzzz_yyyzzzzz, g_yzzz_yyzzzzzz,\
                                         g_yzzz_yzzzzzzz, g_yzzz_zzzzzzzz, g_zzzz_xxxxxxxx,\
                                         g_zzzz_xxxxxxxy, g_zzzz_xxxxxxxz, g_zzzz_xxxxxxyy,\
                                         g_zzzz_xxxxxxyz, g_zzzz_xxxxxxzz, g_zzzz_xxxxxyyy,\
                                         g_zzzz_xxxxxyyz, g_zzzz_xxxxxyzz, g_zzzz_xxxxxzzz,\
                                         g_zzzz_xxxxyyyy, g_zzzz_xxxxyyyz, g_zzzz_xxxxyyzz,\
                                         g_zzzz_xxxxyzzz, g_zzzz_xxxxzzzz, g_zzzz_xxxyyyyy,\
                                         g_zzzz_xxxyyyyz, g_zzzz_xxxyyyzz, g_zzzz_xxxyyzzz,\
                                         g_zzzz_xxxyzzzz, g_zzzz_xxxzzzzz, g_zzzz_xxyyyyyy,\
                                         g_zzzz_xxyyyyyz, g_zzzz_xxyyyyzz, g_zzzz_xxyyyzzz,\
                                         g_zzzz_xxyyzzzz, g_zzzz_xxyzzzzz, g_zzzz_xxzzzzzz,\
                                         g_zzzz_xyyyyyyy, g_zzzz_xyyyyyyz, g_zzzz_xyyyyyzz,\
                                         g_zzzz_xyyyyzzz, g_zzzz_xyyyzzzz, g_zzzz_xyyzzzzz,\
                                         g_zzzz_xyzzzzzz, g_zzzz_xzzzzzzz, g_zzzz_yyyyyyyy,\
                                         g_zzzz_yyyyyyyz, g_zzzz_yyyyyyzz, g_zzzz_yyyyyzzz,\
                                         g_zzzz_yyyyzzzz, g_zzzz_yyyzzzzz, g_zzzz_yyzzzzzz,\
                                         g_zzzz_yzzzzzzz, g_zzzz_zzzzzzzz: VLX_ALIGN)
                for (int32_t k = 0; k < nprim; k++)
                {
                    // scaled prefactor for ket

                    double f2t = 0.50 * fx[k];

                    // scaled prefactors for bra

                    double f2g = 0.50 * fga[k];

                    double fgz = fza[k];

                    // leading x component

                    double fr = wax[k];

                    g_xxxx_xxxxxxxx[k] = fr * g11_xxx_xxxxxxxx[k] + f2g * (3.0 * g20_xx_xxxxxxxx[k] - 3.0 * fgz * g21_xx_xxxxxxxx[k]) + 8.0 * f2t * gk_xxx_xxxxxxx[k];

                    g_xxxx_xxxxxxxy[k] = fr * g11_xxx_xxxxxxxy[k] + f2g * (3.0 * g20_xx_xxxxxxxy[k] - 3.0 * fgz * g21_xx_xxxxxxxy[k]) + 7.0 * f2t * gk_xxx_xxxxxxy[k];

                    g_xxxx_xxxxxxxz[k] = fr * g11_xxx_xxxxxxxz[k] + f2g * (3.0 * g20_xx_xxxxxxxz[k] - 3.0 * fgz * g21_xx_xxxxxxxz[k]) + 7.0 * f2t * gk_xxx_xxxxxxz[k];

                    g_xxxx_xxxxxxyy[k] = fr * g11_xxx_xxxxxxyy[k] + f2g * (3.0 * g20_xx_xxxxxxyy[k] - 3.0 * fgz * g21_xx_xxxxxxyy[k]) + 6.0 * f2t * gk_xxx_xxxxxyy[k];

                    g_xxxx_xxxxxxyz[k] = fr * g11_xxx_xxxxxxyz[k] + f2g * (3.0 * g20_xx_xxxxxxyz[k] - 3.0 * fgz * g21_xx_xxxxxxyz[k]) + 6.0 * f2t * gk_xxx_xxxxxyz[k];

                    g_xxxx_xxxxxxzz[k] = fr * g11_xxx_xxxxxxzz[k] + f2g * (3.0 * g20_xx_xxxxxxzz[k] - 3.0 * fgz * g21_xx_xxxxxxzz[k]) + 6.0 * f2t * gk_xxx_xxxxxzz[k];

                    g_xxxx_xxxxxyyy[k] = fr * g11_xxx_xxxxxyyy[k] + f2g * (3.0 * g20_xx_xxxxxyyy[k] - 3.0 * fgz * g21_xx_xxxxxyyy[k]) + 5.0 * f2t * gk_xxx_xxxxyyy[k];

                    g_xxxx_xxxxxyyz[k] = fr * g11_xxx_xxxxxyyz[k] + f2g * (3.0 * g20_xx_xxxxxyyz[k] - 3.0 * fgz * g21_xx_xxxxxyyz[k]) + 5.0 * f2t * gk_xxx_xxxxyyz[k];

                    g_xxxx_xxxxxyzz[k] = fr * g11_xxx_xxxxxyzz[k] + f2g * (3.0 * g20_xx_xxxxxyzz[k] - 3.0 * fgz * g21_xx_xxxxxyzz[k]) + 5.0 * f2t * gk_xxx_xxxxyzz[k];

                    g_xxxx_xxxxxzzz[k] = fr * g11_xxx_xxxxxzzz[k] + f2g * (3.0 * g20_xx_xxxxxzzz[k] - 3.0 * fgz * g21_xx_xxxxxzzz[k]) + 5.0 * f2t * gk_xxx_xxxxzzz[k];

                    g_xxxx_xxxxyyyy[k] = fr * g11_xxx_xxxxyyyy[k] + f2g * (3.0 * g20_xx_xxxxyyyy[k] - 3.0 * fgz * g21_xx_xxxxyyyy[k]) + 4.0 * f2t * gk_xxx_xxxyyyy[k];

                    g_xxxx_xxxxyyyz[k] = fr * g11_xxx_xxxxyyyz[k] + f2g * (3.0 * g20_xx_xxxxyyyz[k] - 3.0 * fgz * g21_xx_xxxxyyyz[k]) + 4.0 * f2t * gk_xxx_xxxyyyz[k];

                    g_xxxx_xxxxyyzz[k] = fr * g11_xxx_xxxxyyzz[k] + f2g * (3.0 * g20_xx_xxxxyyzz[k] - 3.0 * fgz * g21_xx_xxxxyyzz[k]) + 4.0 * f2t * gk_xxx_xxxyyzz[k];

                    g_xxxx_xxxxyzzz[k] = fr * g11_xxx_xxxxyzzz[k] + f2g * (3.0 * g20_xx_xxxxyzzz[k] - 3.0 * fgz * g21_xx_xxxxyzzz[k]) + 4.0 * f2t * gk_xxx_xxxyzzz[k];

                    g_xxxx_xxxxzzzz[k] = fr * g11_xxx_xxxxzzzz[k] + f2g * (3.0 * g20_xx_xxxxzzzz[k] - 3.0 * fgz * g21_xx_xxxxzzzz[k]) + 4.0 * f2t * gk_xxx_xxxzzzz[k];

                    g_xxxx_xxxyyyyy[k] = fr * g11_xxx_xxxyyyyy[k] + f2g * (3.0 * g20_xx_xxxyyyyy[k] - 3.0 * fgz * g21_xx_xxxyyyyy[k]) + 3.0 * f2t * gk_xxx_xxyyyyy[k];

                    g_xxxx_xxxyyyyz[k] = fr * g11_xxx_xxxyyyyz[k] + f2g * (3.0 * g20_xx_xxxyyyyz[k] - 3.0 * fgz * g21_xx_xxxyyyyz[k]) + 3.0 * f2t * gk_xxx_xxyyyyz[k];

                    g_xxxx_xxxyyyzz[k] = fr * g11_xxx_xxxyyyzz[k] + f2g * (3.0 * g20_xx_xxxyyyzz[k] - 3.0 * fgz * g21_xx_xxxyyyzz[k]) + 3.0 * f2t * gk_xxx_xxyyyzz[k];

                    g_xxxx_xxxyyzzz[k] = fr * g11_xxx_xxxyyzzz[k] + f2g * (3.0 * g20_xx_xxxyyzzz[k] - 3.0 * fgz * g21_xx_xxxyyzzz[k]) + 3.0 * f2t * gk_xxx_xxyyzzz[k];

                    g_xxxx_xxxyzzzz[k] = fr * g11_xxx_xxxyzzzz[k] + f2g * (3.0 * g20_xx_xxxyzzzz[k] - 3.0 * fgz * g21_xx_xxxyzzzz[k]) + 3.0 * f2t * gk_xxx_xxyzzzz[k];

                    g_xxxx_xxxzzzzz[k] = fr * g11_xxx_xxxzzzzz[k] + f2g * (3.0 * g20_xx_xxxzzzzz[k] - 3.0 * fgz * g21_xx_xxxzzzzz[k]) + 3.0 * f2t * gk_xxx_xxzzzzz[k];

                    g_xxxx_xxyyyyyy[k] = fr * g11_xxx_xxyyyyyy[k] + f2g * (3.0 * g20_xx_xxyyyyyy[k] - 3.0 * fgz * g21_xx_xxyyyyyy[k]) + 2.0 * f2t * gk_xxx_xyyyyyy[k];

                    g_xxxx_xxyyyyyz[k] = fr * g11_xxx_xxyyyyyz[k] + f2g * (3.0 * g20_xx_xxyyyyyz[k] - 3.0 * fgz * g21_xx_xxyyyyyz[k]) + 2.0 * f2t * gk_xxx_xyyyyyz[k];

                    g_xxxx_xxyyyyzz[k] = fr * g11_xxx_xxyyyyzz[k] + f2g * (3.0 * g20_xx_xxyyyyzz[k] - 3.0 * fgz * g21_xx_xxyyyyzz[k]) + 2.0 * f2t * gk_xxx_xyyyyzz[k];

                    g_xxxx_xxyyyzzz[k] = fr * g11_xxx_xxyyyzzz[k] + f2g * (3.0 * g20_xx_xxyyyzzz[k] - 3.0 * fgz * g21_xx_xxyyyzzz[k]) + 2.0 * f2t * gk_xxx_xyyyzzz[k];

                    g_xxxx_xxyyzzzz[k] = fr * g11_xxx_xxyyzzzz[k] + f2g * (3.0 * g20_xx_xxyyzzzz[k] - 3.0 * fgz * g21_xx_xxyyzzzz[k]) + 2.0 * f2t * gk_xxx_xyyzzzz[k];

                    g_xxxx_xxyzzzzz[k] = fr * g11_xxx_xxyzzzzz[k] + f2g * (3.0 * g20_xx_xxyzzzzz[k] - 3.0 * fgz * g21_xx_xxyzzzzz[k]) + 2.0 * f2t * gk_xxx_xyzzzzz[k];

                    g_xxxx_xxzzzzzz[k] = fr * g11_xxx_xxzzzzzz[k] + f2g * (3.0 * g20_xx_xxzzzzzz[k] - 3.0 * fgz * g21_xx_xxzzzzzz[k]) + 2.0 * f2t * gk_xxx_xzzzzzz[k];

                    g_xxxx_xyyyyyyy[k] = fr * g11_xxx_xyyyyyyy[k] + f2g * (3.0 * g20_xx_xyyyyyyy[k] - 3.0 * fgz * g21_xx_xyyyyyyy[k]) + f2t * gk_xxx_yyyyyyy[k];

                    g_xxxx_xyyyyyyz[k] = fr * g11_xxx_xyyyyyyz[k] + f2g * (3.0 * g20_xx_xyyyyyyz[k] - 3.0 * fgz * g21_xx_xyyyyyyz[k]) + f2t * gk_xxx_yyyyyyz[k];

                    g_xxxx_xyyyyyzz[k] = fr * g11_xxx_xyyyyyzz[k] + f2g * (3.0 * g20_xx_xyyyyyzz[k] - 3.0 * fgz * g21_xx_xyyyyyzz[k]) + f2t * gk_xxx_yyyyyzz[k];

                    g_xxxx_xyyyyzzz[k] = fr * g11_xxx_xyyyyzzz[k] + f2g * (3.0 * g20_xx_xyyyyzzz[k] - 3.0 * fgz * g21_xx_xyyyyzzz[k]) + f2t * gk_xxx_yyyyzzz[k];

                    g_xxxx_xyyyzzzz[k] = fr * g11_xxx_xyyyzzzz[k] + f2g * (3.0 * g20_xx_xyyyzzzz[k] - 3.0 * fgz * g21_xx_xyyyzzzz[k]) + f2t * gk_xxx_yyyzzzz[k];

                    g_xxxx_xyyzzzzz[k] = fr * g11_xxx_xyyzzzzz[k] + f2g * (3.0 * g20_xx_xyyzzzzz[k] - 3.0 * fgz * g21_xx_xyyzzzzz[k]) + f2t * gk_xxx_yyzzzzz[k];

                    g_xxxx_xyzzzzzz[k] = fr * g11_xxx_xyzzzzzz[k] + f2g * (3.0 * g20_xx_xyzzzzzz[k] - 3.0 * fgz * g21_xx_xyzzzzzz[k]) + f2t * gk_xxx_yzzzzzz[k];

                    g_xxxx_xzzzzzzz[k] = fr * g11_xxx_xzzzzzzz[k] + f2g * (3.0 * g20_xx_xzzzzzzz[k] - 3.0 * fgz * g21_xx_xzzzzzzz[k]) + f2t * gk_xxx_zzzzzzz[k];

                    g_xxxx_yyyyyyyy[k] = fr * g11_xxx_yyyyyyyy[k] + f2g * (3.0 * g20_xx_yyyyyyyy[k] - 3.0 * fgz * g21_xx_yyyyyyyy[k]);

                    g_xxxx_yyyyyyyz[k] = fr * g11_xxx_yyyyyyyz[k] + f2g * (3.0 * g20_xx_yyyyyyyz[k] - 3.0 * fgz * g21_xx_yyyyyyyz[k]);

                    g_xxxx_yyyyyyzz[k] = fr * g11_xxx_yyyyyyzz[k] + f2g * (3.0 * g20_xx_yyyyyyzz[k] - 3.0 * fgz * g21_xx_yyyyyyzz[k]);

                    g_xxxx_yyyyyzzz[k] = fr * g11_xxx_yyyyyzzz[k] + f2g * (3.0 * g20_xx_yyyyyzzz[k] - 3.0 * fgz * g21_xx_yyyyyzzz[k]);

                    g_xxxx_yyyyzzzz[k] = fr * g11_xxx_yyyyzzzz[k] + f2g * (3.0 * g20_xx_yyyyzzzz[k] - 3.0 * fgz * g21_xx_yyyyzzzz[k]);

                    g_xxxx_yyyzzzzz[k] = fr * g11_xxx_yyyzzzzz[k] + f2g * (3.0 * g20_xx_yyyzzzzz[k] - 3.0 * fgz * g21_xx_yyyzzzzz[k]);

                    g_xxxx_yyzzzzzz[k] = fr * g11_xxx_yyzzzzzz[k] + f2g * (3.0 * g20_xx_yyzzzzzz[k] - 3.0 * fgz * g21_xx_yyzzzzzz[k]);

                    g_xxxx_yzzzzzzz[k] = fr * g11_xxx_yzzzzzzz[k] + f2g * (3.0 * g20_xx_yzzzzzzz[k] - 3.0 * fgz * g21_xx_yzzzzzzz[k]);

                    g_xxxx_zzzzzzzz[k] = fr * g11_xxx_zzzzzzzz[k] + f2g * (3.0 * g20_xx_zzzzzzzz[k] - 3.0 * fgz * g21_xx_zzzzzzzz[k]);

                    g_xxxy_xxxxxxxx[k] = fr * g11_xxy_xxxxxxxx[k] + f2g * (2.0 * g20_xy_xxxxxxxx[k] - 2.0 * fgz * g21_xy_xxxxxxxx[k]) + 8.0 * f2t * gk_xxy_xxxxxxx[k];

                    g_xxxy_xxxxxxxy[k] = fr * g11_xxy_xxxxxxxy[k] + f2g * (2.0 * g20_xy_xxxxxxxy[k] - 2.0 * fgz * g21_xy_xxxxxxxy[k]) + 7.0 * f2t * gk_xxy_xxxxxxy[k];

                    g_xxxy_xxxxxxxz[k] = fr * g11_xxy_xxxxxxxz[k] + f2g * (2.0 * g20_xy_xxxxxxxz[k] - 2.0 * fgz * g21_xy_xxxxxxxz[k]) + 7.0 * f2t * gk_xxy_xxxxxxz[k];

                    g_xxxy_xxxxxxyy[k] = fr * g11_xxy_xxxxxxyy[k] + f2g * (2.0 * g20_xy_xxxxxxyy[k] - 2.0 * fgz * g21_xy_xxxxxxyy[k]) + 6.0 * f2t * gk_xxy_xxxxxyy[k];

                    g_xxxy_xxxxxxyz[k] = fr * g11_xxy_xxxxxxyz[k] + f2g * (2.0 * g20_xy_xxxxxxyz[k] - 2.0 * fgz * g21_xy_xxxxxxyz[k]) + 6.0 * f2t * gk_xxy_xxxxxyz[k];

                    g_xxxy_xxxxxxzz[k] = fr * g11_xxy_xxxxxxzz[k] + f2g * (2.0 * g20_xy_xxxxxxzz[k] - 2.0 * fgz * g21_xy_xxxxxxzz[k]) + 6.0 * f2t * gk_xxy_xxxxxzz[k];

                    g_xxxy_xxxxxyyy[k] = fr * g11_xxy_xxxxxyyy[k] + f2g * (2.0 * g20_xy_xxxxxyyy[k] - 2.0 * fgz * g21_xy_xxxxxyyy[k]) + 5.0 * f2t * gk_xxy_xxxxyyy[k];

                    g_xxxy_xxxxxyyz[k] = fr * g11_xxy_xxxxxyyz[k] + f2g * (2.0 * g20_xy_xxxxxyyz[k] - 2.0 * fgz * g21_xy_xxxxxyyz[k]) + 5.0 * f2t * gk_xxy_xxxxyyz[k];

                    g_xxxy_xxxxxyzz[k] = fr * g11_xxy_xxxxxyzz[k] + f2g * (2.0 * g20_xy_xxxxxyzz[k] - 2.0 * fgz * g21_xy_xxxxxyzz[k]) + 5.0 * f2t * gk_xxy_xxxxyzz[k];

                    g_xxxy_xxxxxzzz[k] = fr * g11_xxy_xxxxxzzz[k] + f2g * (2.0 * g20_xy_xxxxxzzz[k] - 2.0 * fgz * g21_xy_xxxxxzzz[k]) + 5.0 * f2t * gk_xxy_xxxxzzz[k];

                    g_xxxy_xxxxyyyy[k] = fr * g11_xxy_xxxxyyyy[k] + f2g * (2.0 * g20_xy_xxxxyyyy[k] - 2.0 * fgz * g21_xy_xxxxyyyy[k]) + 4.0 * f2t * gk_xxy_xxxyyyy[k];

                    g_xxxy_xxxxyyyz[k] = fr * g11_xxy_xxxxyyyz[k] + f2g * (2.0 * g20_xy_xxxxyyyz[k] - 2.0 * fgz * g21_xy_xxxxyyyz[k]) + 4.0 * f2t * gk_xxy_xxxyyyz[k];

                    g_xxxy_xxxxyyzz[k] = fr * g11_xxy_xxxxyyzz[k] + f2g * (2.0 * g20_xy_xxxxyyzz[k] - 2.0 * fgz * g21_xy_xxxxyyzz[k]) + 4.0 * f2t * gk_xxy_xxxyyzz[k];

                    g_xxxy_xxxxyzzz[k] = fr * g11_xxy_xxxxyzzz[k] + f2g * (2.0 * g20_xy_xxxxyzzz[k] - 2.0 * fgz * g21_xy_xxxxyzzz[k]) + 4.0 * f2t * gk_xxy_xxxyzzz[k];

                    g_xxxy_xxxxzzzz[k] = fr * g11_xxy_xxxxzzzz[k] + f2g * (2.0 * g20_xy_xxxxzzzz[k] - 2.0 * fgz * g21_xy_xxxxzzzz[k]) + 4.0 * f2t * gk_xxy_xxxzzzz[k];

                    g_xxxy_xxxyyyyy[k] = fr * g11_xxy_xxxyyyyy[k] + f2g * (2.0 * g20_xy_xxxyyyyy[k] - 2.0 * fgz * g21_xy_xxxyyyyy[k]) + 3.0 * f2t * gk_xxy_xxyyyyy[k];

                    g_xxxy_xxxyyyyz[k] = fr * g11_xxy_xxxyyyyz[k] + f2g * (2.0 * g20_xy_xxxyyyyz[k] - 2.0 * fgz * g21_xy_xxxyyyyz[k]) + 3.0 * f2t * gk_xxy_xxyyyyz[k];

                    g_xxxy_xxxyyyzz[k] = fr * g11_xxy_xxxyyyzz[k] + f2g * (2.0 * g20_xy_xxxyyyzz[k] - 2.0 * fgz * g21_xy_xxxyyyzz[k]) + 3.0 * f2t * gk_xxy_xxyyyzz[k];

                    g_xxxy_xxxyyzzz[k] = fr * g11_xxy_xxxyyzzz[k] + f2g * (2.0 * g20_xy_xxxyyzzz[k] - 2.0 * fgz * g21_xy_xxxyyzzz[k]) + 3.0 * f2t * gk_xxy_xxyyzzz[k];

                    g_xxxy_xxxyzzzz[k] = fr * g11_xxy_xxxyzzzz[k] + f2g * (2.0 * g20_xy_xxxyzzzz[k] - 2.0 * fgz * g21_xy_xxxyzzzz[k]) + 3.0 * f2t * gk_xxy_xxyzzzz[k];

                    g_xxxy_xxxzzzzz[k] = fr * g11_xxy_xxxzzzzz[k] + f2g * (2.0 * g20_xy_xxxzzzzz[k] - 2.0 * fgz * g21_xy_xxxzzzzz[k]) + 3.0 * f2t * gk_xxy_xxzzzzz[k];

                    g_xxxy_xxyyyyyy[k] = fr * g11_xxy_xxyyyyyy[k] + f2g * (2.0 * g20_xy_xxyyyyyy[k] - 2.0 * fgz * g21_xy_xxyyyyyy[k]) + 2.0 * f2t * gk_xxy_xyyyyyy[k];

                    g_xxxy_xxyyyyyz[k] = fr * g11_xxy_xxyyyyyz[k] + f2g * (2.0 * g20_xy_xxyyyyyz[k] - 2.0 * fgz * g21_xy_xxyyyyyz[k]) + 2.0 * f2t * gk_xxy_xyyyyyz[k];

                    g_xxxy_xxyyyyzz[k] = fr * g11_xxy_xxyyyyzz[k] + f2g * (2.0 * g20_xy_xxyyyyzz[k] - 2.0 * fgz * g21_xy_xxyyyyzz[k]) + 2.0 * f2t * gk_xxy_xyyyyzz[k];

                    g_xxxy_xxyyyzzz[k] = fr * g11_xxy_xxyyyzzz[k] + f2g * (2.0 * g20_xy_xxyyyzzz[k] - 2.0 * fgz * g21_xy_xxyyyzzz[k]) + 2.0 * f2t * gk_xxy_xyyyzzz[k];

                    g_xxxy_xxyyzzzz[k] = fr * g11_xxy_xxyyzzzz[k] + f2g * (2.0 * g20_xy_xxyyzzzz[k] - 2.0 * fgz * g21_xy_xxyyzzzz[k]) + 2.0 * f2t * gk_xxy_xyyzzzz[k];

                    g_xxxy_xxyzzzzz[k] = fr * g11_xxy_xxyzzzzz[k] + f2g * (2.0 * g20_xy_xxyzzzzz[k] - 2.0 * fgz * g21_xy_xxyzzzzz[k]) + 2.0 * f2t * gk_xxy_xyzzzzz[k];

                    g_xxxy_xxzzzzzz[k] = fr * g11_xxy_xxzzzzzz[k] + f2g * (2.0 * g20_xy_xxzzzzzz[k] - 2.0 * fgz * g21_xy_xxzzzzzz[k]) + 2.0 * f2t * gk_xxy_xzzzzzz[k];

                    g_xxxy_xyyyyyyy[k] = fr * g11_xxy_xyyyyyyy[k] + f2g * (2.0 * g20_xy_xyyyyyyy[k] - 2.0 * fgz * g21_xy_xyyyyyyy[k]) + f2t * gk_xxy_yyyyyyy[k];

                    g_xxxy_xyyyyyyz[k] = fr * g11_xxy_xyyyyyyz[k] + f2g * (2.0 * g20_xy_xyyyyyyz[k] - 2.0 * fgz * g21_xy_xyyyyyyz[k]) + f2t * gk_xxy_yyyyyyz[k];

                    g_xxxy_xyyyyyzz[k] = fr * g11_xxy_xyyyyyzz[k] + f2g * (2.0 * g20_xy_xyyyyyzz[k] - 2.0 * fgz * g21_xy_xyyyyyzz[k]) + f2t * gk_xxy_yyyyyzz[k];

                    g_xxxy_xyyyyzzz[k] = fr * g11_xxy_xyyyyzzz[k] + f2g * (2.0 * g20_xy_xyyyyzzz[k] - 2.0 * fgz * g21_xy_xyyyyzzz[k]) + f2t * gk_xxy_yyyyzzz[k];

                    g_xxxy_xyyyzzzz[k] = fr * g11_xxy_xyyyzzzz[k] + f2g * (2.0 * g20_xy_xyyyzzzz[k] - 2.0 * fgz * g21_xy_xyyyzzzz[k]) + f2t * gk_xxy_yyyzzzz[k];

                    g_xxxy_xyyzzzzz[k] = fr * g11_xxy_xyyzzzzz[k] + f2g * (2.0 * g20_xy_xyyzzzzz[k] - 2.0 * fgz * g21_xy_xyyzzzzz[k]) + f2t * gk_xxy_yyzzzzz[k];

                    g_xxxy_xyzzzzzz[k] = fr * g11_xxy_xyzzzzzz[k] + f2g * (2.0 * g20_xy_xyzzzzzz[k] - 2.0 * fgz * g21_xy_xyzzzzzz[k]) + f2t * gk_xxy_yzzzzzz[k];

                    g_xxxy_xzzzzzzz[k] = fr * g11_xxy_xzzzzzzz[k] + f2g * (2.0 * g20_xy_xzzzzzzz[k] - 2.0 * fgz * g21_xy_xzzzzzzz[k]) + f2t * gk_xxy_zzzzzzz[k];

                    g_xxxy_yyyyyyyy[k] = fr * g11_xxy_yyyyyyyy[k] + f2g * (2.0 * g20_xy_yyyyyyyy[k] - 2.0 * fgz * g21_xy_yyyyyyyy[k]);

                    g_xxxy_yyyyyyyz[k] = fr * g11_xxy_yyyyyyyz[k] + f2g * (2.0 * g20_xy_yyyyyyyz[k] - 2.0 * fgz * g21_xy_yyyyyyyz[k]);

                    g_xxxy_yyyyyyzz[k] = fr * g11_xxy_yyyyyyzz[k] + f2g * (2.0 * g20_xy_yyyyyyzz[k] - 2.0 * fgz * g21_xy_yyyyyyzz[k]);

                    g_xxxy_yyyyyzzz[k] = fr * g11_xxy_yyyyyzzz[k] + f2g * (2.0 * g20_xy_yyyyyzzz[k] - 2.0 * fgz * g21_xy_yyyyyzzz[k]);

                    g_xxxy_yyyyzzzz[k] = fr * g11_xxy_yyyyzzzz[k] + f2g * (2.0 * g20_xy_yyyyzzzz[k] - 2.0 * fgz * g21_xy_yyyyzzzz[k]);

                    g_xxxy_yyyzzzzz[k] = fr * g11_xxy_yyyzzzzz[k] + f2g * (2.0 * g20_xy_yyyzzzzz[k] - 2.0 * fgz * g21_xy_yyyzzzzz[k]);

                    g_xxxy_yyzzzzzz[k] = fr * g11_xxy_yyzzzzzz[k] + f2g * (2.0 * g20_xy_yyzzzzzz[k] - 2.0 * fgz * g21_xy_yyzzzzzz[k]);

                    g_xxxy_yzzzzzzz[k] = fr * g11_xxy_yzzzzzzz[k] + f2g * (2.0 * g20_xy_yzzzzzzz[k] - 2.0 * fgz * g21_xy_yzzzzzzz[k]);

                    g_xxxy_zzzzzzzz[k] = fr * g11_xxy_zzzzzzzz[k] + f2g * (2.0 * g20_xy_zzzzzzzz[k] - 2.0 * fgz * g21_xy_zzzzzzzz[k]);

                    g_xxxz_xxxxxxxx[k] = fr * g11_xxz_xxxxxxxx[k] + f2g * (2.0 * g20_xz_xxxxxxxx[k] - 2.0 * fgz * g21_xz_xxxxxxxx[k]) + 8.0 * f2t * gk_xxz_xxxxxxx[k];

                    g_xxxz_xxxxxxxy[k] = fr * g11_xxz_xxxxxxxy[k] + f2g * (2.0 * g20_xz_xxxxxxxy[k] - 2.0 * fgz * g21_xz_xxxxxxxy[k]) + 7.0 * f2t * gk_xxz_xxxxxxy[k];

                    g_xxxz_xxxxxxxz[k] = fr * g11_xxz_xxxxxxxz[k] + f2g * (2.0 * g20_xz_xxxxxxxz[k] - 2.0 * fgz * g21_xz_xxxxxxxz[k]) + 7.0 * f2t * gk_xxz_xxxxxxz[k];

                    g_xxxz_xxxxxxyy[k] = fr * g11_xxz_xxxxxxyy[k] + f2g * (2.0 * g20_xz_xxxxxxyy[k] - 2.0 * fgz * g21_xz_xxxxxxyy[k]) + 6.0 * f2t * gk_xxz_xxxxxyy[k];

                    g_xxxz_xxxxxxyz[k] = fr * g11_xxz_xxxxxxyz[k] + f2g * (2.0 * g20_xz_xxxxxxyz[k] - 2.0 * fgz * g21_xz_xxxxxxyz[k]) + 6.0 * f2t * gk_xxz_xxxxxyz[k];

                    g_xxxz_xxxxxxzz[k] = fr * g11_xxz_xxxxxxzz[k] + f2g * (2.0 * g20_xz_xxxxxxzz[k] - 2.0 * fgz * g21_xz_xxxxxxzz[k]) + 6.0 * f2t * gk_xxz_xxxxxzz[k];

                    g_xxxz_xxxxxyyy[k] = fr * g11_xxz_xxxxxyyy[k] + f2g * (2.0 * g20_xz_xxxxxyyy[k] - 2.0 * fgz * g21_xz_xxxxxyyy[k]) + 5.0 * f2t * gk_xxz_xxxxyyy[k];

                    g_xxxz_xxxxxyyz[k] = fr * g11_xxz_xxxxxyyz[k] + f2g * (2.0 * g20_xz_xxxxxyyz[k] - 2.0 * fgz * g21_xz_xxxxxyyz[k]) + 5.0 * f2t * gk_xxz_xxxxyyz[k];

                    g_xxxz_xxxxxyzz[k] = fr * g11_xxz_xxxxxyzz[k] + f2g * (2.0 * g20_xz_xxxxxyzz[k] - 2.0 * fgz * g21_xz_xxxxxyzz[k]) + 5.0 * f2t * gk_xxz_xxxxyzz[k];

                    g_xxxz_xxxxxzzz[k] = fr * g11_xxz_xxxxxzzz[k] + f2g * (2.0 * g20_xz_xxxxxzzz[k] - 2.0 * fgz * g21_xz_xxxxxzzz[k]) + 5.0 * f2t * gk_xxz_xxxxzzz[k];

                    g_xxxz_xxxxyyyy[k] = fr * g11_xxz_xxxxyyyy[k] + f2g * (2.0 * g20_xz_xxxxyyyy[k] - 2.0 * fgz * g21_xz_xxxxyyyy[k]) + 4.0 * f2t * gk_xxz_xxxyyyy[k];

                    g_xxxz_xxxxyyyz[k] = fr * g11_xxz_xxxxyyyz[k] + f2g * (2.0 * g20_xz_xxxxyyyz[k] - 2.0 * fgz * g21_xz_xxxxyyyz[k]) + 4.0 * f2t * gk_xxz_xxxyyyz[k];

                    g_xxxz_xxxxyyzz[k] = fr * g11_xxz_xxxxyyzz[k] + f2g * (2.0 * g20_xz_xxxxyyzz[k] - 2.0 * fgz * g21_xz_xxxxyyzz[k]) + 4.0 * f2t * gk_xxz_xxxyyzz[k];

                    g_xxxz_xxxxyzzz[k] = fr * g11_xxz_xxxxyzzz[k] + f2g * (2.0 * g20_xz_xxxxyzzz[k] - 2.0 * fgz * g21_xz_xxxxyzzz[k]) + 4.0 * f2t * gk_xxz_xxxyzzz[k];

                    g_xxxz_xxxxzzzz[k] = fr * g11_xxz_xxxxzzzz[k] + f2g * (2.0 * g20_xz_xxxxzzzz[k] - 2.0 * fgz * g21_xz_xxxxzzzz[k]) + 4.0 * f2t * gk_xxz_xxxzzzz[k];

                    g_xxxz_xxxyyyyy[k] = fr * g11_xxz_xxxyyyyy[k] + f2g * (2.0 * g20_xz_xxxyyyyy[k] - 2.0 * fgz * g21_xz_xxxyyyyy[k]) + 3.0 * f2t * gk_xxz_xxyyyyy[k];

                    g_xxxz_xxxyyyyz[k] = fr * g11_xxz_xxxyyyyz[k] + f2g * (2.0 * g20_xz_xxxyyyyz[k] - 2.0 * fgz * g21_xz_xxxyyyyz[k]) + 3.0 * f2t * gk_xxz_xxyyyyz[k];

                    g_xxxz_xxxyyyzz[k] = fr * g11_xxz_xxxyyyzz[k] + f2g * (2.0 * g20_xz_xxxyyyzz[k] - 2.0 * fgz * g21_xz_xxxyyyzz[k]) + 3.0 * f2t * gk_xxz_xxyyyzz[k];

                    g_xxxz_xxxyyzzz[k] = fr * g11_xxz_xxxyyzzz[k] + f2g * (2.0 * g20_xz_xxxyyzzz[k] - 2.0 * fgz * g21_xz_xxxyyzzz[k]) + 3.0 * f2t * gk_xxz_xxyyzzz[k];

                    g_xxxz_xxxyzzzz[k] = fr * g11_xxz_xxxyzzzz[k] + f2g * (2.0 * g20_xz_xxxyzzzz[k] - 2.0 * fgz * g21_xz_xxxyzzzz[k]) + 3.0 * f2t * gk_xxz_xxyzzzz[k];

                    g_xxxz_xxxzzzzz[k] = fr * g11_xxz_xxxzzzzz[k] + f2g * (2.0 * g20_xz_xxxzzzzz[k] - 2.0 * fgz * g21_xz_xxxzzzzz[k]) + 3.0 * f2t * gk_xxz_xxzzzzz[k];

                    g_xxxz_xxyyyyyy[k] = fr * g11_xxz_xxyyyyyy[k] + f2g * (2.0 * g20_xz_xxyyyyyy[k] - 2.0 * fgz * g21_xz_xxyyyyyy[k]) + 2.0 * f2t * gk_xxz_xyyyyyy[k];

                    g_xxxz_xxyyyyyz[k] = fr * g11_xxz_xxyyyyyz[k] + f2g * (2.0 * g20_xz_xxyyyyyz[k] - 2.0 * fgz * g21_xz_xxyyyyyz[k]) + 2.0 * f2t * gk_xxz_xyyyyyz[k];

                    g_xxxz_xxyyyyzz[k] = fr * g11_xxz_xxyyyyzz[k] + f2g * (2.0 * g20_xz_xxyyyyzz[k] - 2.0 * fgz * g21_xz_xxyyyyzz[k]) + 2.0 * f2t * gk_xxz_xyyyyzz[k];

                    g_xxxz_xxyyyzzz[k] = fr * g11_xxz_xxyyyzzz[k] + f2g * (2.0 * g20_xz_xxyyyzzz[k] - 2.0 * fgz * g21_xz_xxyyyzzz[k]) + 2.0 * f2t * gk_xxz_xyyyzzz[k];

                    g_xxxz_xxyyzzzz[k] = fr * g11_xxz_xxyyzzzz[k] + f2g * (2.0 * g20_xz_xxyyzzzz[k] - 2.0 * fgz * g21_xz_xxyyzzzz[k]) + 2.0 * f2t * gk_xxz_xyyzzzz[k];

                    g_xxxz_xxyzzzzz[k] = fr * g11_xxz_xxyzzzzz[k] + f2g * (2.0 * g20_xz_xxyzzzzz[k] - 2.0 * fgz * g21_xz_xxyzzzzz[k]) + 2.0 * f2t * gk_xxz_xyzzzzz[k];

                    g_xxxz_xxzzzzzz[k] = fr * g11_xxz_xxzzzzzz[k] + f2g * (2.0 * g20_xz_xxzzzzzz[k] - 2.0 * fgz * g21_xz_xxzzzzzz[k]) + 2.0 * f2t * gk_xxz_xzzzzzz[k];

                    g_xxxz_xyyyyyyy[k] = fr * g11_xxz_xyyyyyyy[k] + f2g * (2.0 * g20_xz_xyyyyyyy[k] - 2.0 * fgz * g21_xz_xyyyyyyy[k]) + f2t * gk_xxz_yyyyyyy[k];

                    g_xxxz_xyyyyyyz[k] = fr * g11_xxz_xyyyyyyz[k] + f2g * (2.0 * g20_xz_xyyyyyyz[k] - 2.0 * fgz * g21_xz_xyyyyyyz[k]) + f2t * gk_xxz_yyyyyyz[k];

                    g_xxxz_xyyyyyzz[k] = fr * g11_xxz_xyyyyyzz[k] + f2g * (2.0 * g20_xz_xyyyyyzz[k] - 2.0 * fgz * g21_xz_xyyyyyzz[k]) + f2t * gk_xxz_yyyyyzz[k];

                    g_xxxz_xyyyyzzz[k] = fr * g11_xxz_xyyyyzzz[k] + f2g * (2.0 * g20_xz_xyyyyzzz[k] - 2.0 * fgz * g21_xz_xyyyyzzz[k]) + f2t * gk_xxz_yyyyzzz[k];

                    g_xxxz_xyyyzzzz[k] = fr * g11_xxz_xyyyzzzz[k] + f2g * (2.0 * g20_xz_xyyyzzzz[k] - 2.0 * fgz * g21_xz_xyyyzzzz[k]) + f2t * gk_xxz_yyyzzzz[k];

                    g_xxxz_xyyzzzzz[k] = fr * g11_xxz_xyyzzzzz[k] + f2g * (2.0 * g20_xz_xyyzzzzz[k] - 2.0 * fgz * g21_xz_xyyzzzzz[k]) + f2t * gk_xxz_yyzzzzz[k];

                    g_xxxz_xyzzzzzz[k] = fr * g11_xxz_xyzzzzzz[k] + f2g * (2.0 * g20_xz_xyzzzzzz[k] - 2.0 * fgz * g21_xz_xyzzzzzz[k]) + f2t * gk_xxz_yzzzzzz[k];

                    g_xxxz_xzzzzzzz[k] = fr * g11_xxz_xzzzzzzz[k] + f2g * (2.0 * g20_xz_xzzzzzzz[k] - 2.0 * fgz * g21_xz_xzzzzzzz[k]) + f2t * gk_xxz_zzzzzzz[k];

                    g_xxxz_yyyyyyyy[k] = fr * g11_xxz_yyyyyyyy[k] + f2g * (2.0 * g20_xz_yyyyyyyy[k] - 2.0 * fgz * g21_xz_yyyyyyyy[k]);

                    g_xxxz_yyyyyyyz[k] = fr * g11_xxz_yyyyyyyz[k] + f2g * (2.0 * g20_xz_yyyyyyyz[k] - 2.0 * fgz * g21_xz_yyyyyyyz[k]);

                    g_xxxz_yyyyyyzz[k] = fr * g11_xxz_yyyyyyzz[k] + f2g * (2.0 * g20_xz_yyyyyyzz[k] - 2.0 * fgz * g21_xz_yyyyyyzz[k]);

                    g_xxxz_yyyyyzzz[k] = fr * g11_xxz_yyyyyzzz[k] + f2g * (2.0 * g20_xz_yyyyyzzz[k] - 2.0 * fgz * g21_xz_yyyyyzzz[k]);

                    g_xxxz_yyyyzzzz[k] = fr * g11_xxz_yyyyzzzz[k] + f2g * (2.0 * g20_xz_yyyyzzzz[k] - 2.0 * fgz * g21_xz_yyyyzzzz[k]);

                    g_xxxz_yyyzzzzz[k] = fr * g11_xxz_yyyzzzzz[k] + f2g * (2.0 * g20_xz_yyyzzzzz[k] - 2.0 * fgz * g21_xz_yyyzzzzz[k]);

                    g_xxxz_yyzzzzzz[k] = fr * g11_xxz_yyzzzzzz[k] + f2g * (2.0 * g20_xz_yyzzzzzz[k] - 2.0 * fgz * g21_xz_yyzzzzzz[k]);

                    g_xxxz_yzzzzzzz[k] = fr * g11_xxz_yzzzzzzz[k] + f2g * (2.0 * g20_xz_yzzzzzzz[k] - 2.0 * fgz * g21_xz_yzzzzzzz[k]);

                    g_xxxz_zzzzzzzz[k] = fr * g11_xxz_zzzzzzzz[k] + f2g * (2.0 * g20_xz_zzzzzzzz[k] - 2.0 * fgz * g21_xz_zzzzzzzz[k]);

                    g_xxyy_xxxxxxxx[k] = fr * g11_xyy_xxxxxxxx[k] + f2g * (g20_yy_xxxxxxxx[k] - fgz * g21_yy_xxxxxxxx[k]) + 8.0 * f2t * gk_xyy_xxxxxxx[k];

                    g_xxyy_xxxxxxxy[k] = fr * g11_xyy_xxxxxxxy[k] + f2g * (g20_yy_xxxxxxxy[k] - fgz * g21_yy_xxxxxxxy[k]) + 7.0 * f2t * gk_xyy_xxxxxxy[k];

                    g_xxyy_xxxxxxxz[k] = fr * g11_xyy_xxxxxxxz[k] + f2g * (g20_yy_xxxxxxxz[k] - fgz * g21_yy_xxxxxxxz[k]) + 7.0 * f2t * gk_xyy_xxxxxxz[k];

                    g_xxyy_xxxxxxyy[k] = fr * g11_xyy_xxxxxxyy[k] + f2g * (g20_yy_xxxxxxyy[k] - fgz * g21_yy_xxxxxxyy[k]) + 6.0 * f2t * gk_xyy_xxxxxyy[k];

                    g_xxyy_xxxxxxyz[k] = fr * g11_xyy_xxxxxxyz[k] + f2g * (g20_yy_xxxxxxyz[k] - fgz * g21_yy_xxxxxxyz[k]) + 6.0 * f2t * gk_xyy_xxxxxyz[k];

                    g_xxyy_xxxxxxzz[k] = fr * g11_xyy_xxxxxxzz[k] + f2g * (g20_yy_xxxxxxzz[k] - fgz * g21_yy_xxxxxxzz[k]) + 6.0 * f2t * gk_xyy_xxxxxzz[k];

                    g_xxyy_xxxxxyyy[k] = fr * g11_xyy_xxxxxyyy[k] + f2g * (g20_yy_xxxxxyyy[k] - fgz * g21_yy_xxxxxyyy[k]) + 5.0 * f2t * gk_xyy_xxxxyyy[k];

                    g_xxyy_xxxxxyyz[k] = fr * g11_xyy_xxxxxyyz[k] + f2g * (g20_yy_xxxxxyyz[k] - fgz * g21_yy_xxxxxyyz[k]) + 5.0 * f2t * gk_xyy_xxxxyyz[k];

                    g_xxyy_xxxxxyzz[k] = fr * g11_xyy_xxxxxyzz[k] + f2g * (g20_yy_xxxxxyzz[k] - fgz * g21_yy_xxxxxyzz[k]) + 5.0 * f2t * gk_xyy_xxxxyzz[k];

                    g_xxyy_xxxxxzzz[k] = fr * g11_xyy_xxxxxzzz[k] + f2g * (g20_yy_xxxxxzzz[k] - fgz * g21_yy_xxxxxzzz[k]) + 5.0 * f2t * gk_xyy_xxxxzzz[k];

                    g_xxyy_xxxxyyyy[k] = fr * g11_xyy_xxxxyyyy[k] + f2g * (g20_yy_xxxxyyyy[k] - fgz * g21_yy_xxxxyyyy[k]) + 4.0 * f2t * gk_xyy_xxxyyyy[k];

                    g_xxyy_xxxxyyyz[k] = fr * g11_xyy_xxxxyyyz[k] + f2g * (g20_yy_xxxxyyyz[k] - fgz * g21_yy_xxxxyyyz[k]) + 4.0 * f2t * gk_xyy_xxxyyyz[k];

                    g_xxyy_xxxxyyzz[k] = fr * g11_xyy_xxxxyyzz[k] + f2g * (g20_yy_xxxxyyzz[k] - fgz * g21_yy_xxxxyyzz[k]) + 4.0 * f2t * gk_xyy_xxxyyzz[k];

                    g_xxyy_xxxxyzzz[k] = fr * g11_xyy_xxxxyzzz[k] + f2g * (g20_yy_xxxxyzzz[k] - fgz * g21_yy_xxxxyzzz[k]) + 4.0 * f2t * gk_xyy_xxxyzzz[k];

                    g_xxyy_xxxxzzzz[k] = fr * g11_xyy_xxxxzzzz[k] + f2g * (g20_yy_xxxxzzzz[k] - fgz * g21_yy_xxxxzzzz[k]) + 4.0 * f2t * gk_xyy_xxxzzzz[k];

                    g_xxyy_xxxyyyyy[k] = fr * g11_xyy_xxxyyyyy[k] + f2g * (g20_yy_xxxyyyyy[k] - fgz * g21_yy_xxxyyyyy[k]) + 3.0 * f2t * gk_xyy_xxyyyyy[k];

                    g_xxyy_xxxyyyyz[k] = fr * g11_xyy_xxxyyyyz[k] + f2g * (g20_yy_xxxyyyyz[k] - fgz * g21_yy_xxxyyyyz[k]) + 3.0 * f2t * gk_xyy_xxyyyyz[k];

                    g_xxyy_xxxyyyzz[k] = fr * g11_xyy_xxxyyyzz[k] + f2g * (g20_yy_xxxyyyzz[k] - fgz * g21_yy_xxxyyyzz[k]) + 3.0 * f2t * gk_xyy_xxyyyzz[k];

                    g_xxyy_xxxyyzzz[k] = fr * g11_xyy_xxxyyzzz[k] + f2g * (g20_yy_xxxyyzzz[k] - fgz * g21_yy_xxxyyzzz[k]) + 3.0 * f2t * gk_xyy_xxyyzzz[k];

                    g_xxyy_xxxyzzzz[k] = fr * g11_xyy_xxxyzzzz[k] + f2g * (g20_yy_xxxyzzzz[k] - fgz * g21_yy_xxxyzzzz[k]) + 3.0 * f2t * gk_xyy_xxyzzzz[k];

                    g_xxyy_xxxzzzzz[k] = fr * g11_xyy_xxxzzzzz[k] + f2g * (g20_yy_xxxzzzzz[k] - fgz * g21_yy_xxxzzzzz[k]) + 3.0 * f2t * gk_xyy_xxzzzzz[k];

                    g_xxyy_xxyyyyyy[k] = fr * g11_xyy_xxyyyyyy[k] + f2g * (g20_yy_xxyyyyyy[k] - fgz * g21_yy_xxyyyyyy[k]) + 2.0 * f2t * gk_xyy_xyyyyyy[k];

                    g_xxyy_xxyyyyyz[k] = fr * g11_xyy_xxyyyyyz[k] + f2g * (g20_yy_xxyyyyyz[k] - fgz * g21_yy_xxyyyyyz[k]) + 2.0 * f2t * gk_xyy_xyyyyyz[k];

                    g_xxyy_xxyyyyzz[k] = fr * g11_xyy_xxyyyyzz[k] + f2g * (g20_yy_xxyyyyzz[k] - fgz * g21_yy_xxyyyyzz[k]) + 2.0 * f2t * gk_xyy_xyyyyzz[k];

                    g_xxyy_xxyyyzzz[k] = fr * g11_xyy_xxyyyzzz[k] + f2g * (g20_yy_xxyyyzzz[k] - fgz * g21_yy_xxyyyzzz[k]) + 2.0 * f2t * gk_xyy_xyyyzzz[k];

                    g_xxyy_xxyyzzzz[k] = fr * g11_xyy_xxyyzzzz[k] + f2g * (g20_yy_xxyyzzzz[k] - fgz * g21_yy_xxyyzzzz[k]) + 2.0 * f2t * gk_xyy_xyyzzzz[k];

                    g_xxyy_xxyzzzzz[k] = fr * g11_xyy_xxyzzzzz[k] + f2g * (g20_yy_xxyzzzzz[k] - fgz * g21_yy_xxyzzzzz[k]) + 2.0 * f2t * gk_xyy_xyzzzzz[k];

                    g_xxyy_xxzzzzzz[k] = fr * g11_xyy_xxzzzzzz[k] + f2g * (g20_yy_xxzzzzzz[k] - fgz * g21_yy_xxzzzzzz[k]) + 2.0 * f2t * gk_xyy_xzzzzzz[k];

                    g_xxyy_xyyyyyyy[k] = fr * g11_xyy_xyyyyyyy[k] + f2g * (g20_yy_xyyyyyyy[k] - fgz * g21_yy_xyyyyyyy[k]) + f2t * gk_xyy_yyyyyyy[k];

                    g_xxyy_xyyyyyyz[k] = fr * g11_xyy_xyyyyyyz[k] + f2g * (g20_yy_xyyyyyyz[k] - fgz * g21_yy_xyyyyyyz[k]) + f2t * gk_xyy_yyyyyyz[k];

                    g_xxyy_xyyyyyzz[k] = fr * g11_xyy_xyyyyyzz[k] + f2g * (g20_yy_xyyyyyzz[k] - fgz * g21_yy_xyyyyyzz[k]) + f2t * gk_xyy_yyyyyzz[k];

                    g_xxyy_xyyyyzzz[k] = fr * g11_xyy_xyyyyzzz[k] + f2g * (g20_yy_xyyyyzzz[k] - fgz * g21_yy_xyyyyzzz[k]) + f2t * gk_xyy_yyyyzzz[k];

                    g_xxyy_xyyyzzzz[k] = fr * g11_xyy_xyyyzzzz[k] + f2g * (g20_yy_xyyyzzzz[k] - fgz * g21_yy_xyyyzzzz[k]) + f2t * gk_xyy_yyyzzzz[k];

                    g_xxyy_xyyzzzzz[k] = fr * g11_xyy_xyyzzzzz[k] + f2g * (g20_yy_xyyzzzzz[k] - fgz * g21_yy_xyyzzzzz[k]) + f2t * gk_xyy_yyzzzzz[k];

                    g_xxyy_xyzzzzzz[k] = fr * g11_xyy_xyzzzzzz[k] + f2g * (g20_yy_xyzzzzzz[k] - fgz * g21_yy_xyzzzzzz[k]) + f2t * gk_xyy_yzzzzzz[k];

                    g_xxyy_xzzzzzzz[k] = fr * g11_xyy_xzzzzzzz[k] + f2g * (g20_yy_xzzzzzzz[k] - fgz * g21_yy_xzzzzzzz[k]) + f2t * gk_xyy_zzzzzzz[k];

                    g_xxyy_yyyyyyyy[k] = fr * g11_xyy_yyyyyyyy[k] + f2g * (g20_yy_yyyyyyyy[k] - fgz * g21_yy_yyyyyyyy[k]);

                    g_xxyy_yyyyyyyz[k] = fr * g11_xyy_yyyyyyyz[k] + f2g * (g20_yy_yyyyyyyz[k] - fgz * g21_yy_yyyyyyyz[k]);

                    g_xxyy_yyyyyyzz[k] = fr * g11_xyy_yyyyyyzz[k] + f2g * (g20_yy_yyyyyyzz[k] - fgz * g21_yy_yyyyyyzz[k]);

                    g_xxyy_yyyyyzzz[k] = fr * g11_xyy_yyyyyzzz[k] + f2g * (g20_yy_yyyyyzzz[k] - fgz * g21_yy_yyyyyzzz[k]);

                    g_xxyy_yyyyzzzz[k] = fr * g11_xyy_yyyyzzzz[k] + f2g * (g20_yy_yyyyzzzz[k] - fgz * g21_yy_yyyyzzzz[k]);

                    g_xxyy_yyyzzzzz[k] = fr * g11_xyy_yyyzzzzz[k] + f2g * (g20_yy_yyyzzzzz[k] - fgz * g21_yy_yyyzzzzz[k]);

                    g_xxyy_yyzzzzzz[k] = fr * g11_xyy_yyzzzzzz[k] + f2g * (g20_yy_yyzzzzzz[k] - fgz * g21_yy_yyzzzzzz[k]);

                    g_xxyy_yzzzzzzz[k] = fr * g11_xyy_yzzzzzzz[k] + f2g * (g20_yy_yzzzzzzz[k] - fgz * g21_yy_yzzzzzzz[k]);

                    g_xxyy_zzzzzzzz[k] = fr * g11_xyy_zzzzzzzz[k] + f2g * (g20_yy_zzzzzzzz[k] - fgz * g21_yy_zzzzzzzz[k]);

                    g_xxyz_xxxxxxxx[k] = fr * g11_xyz_xxxxxxxx[k] + f2g * (g20_yz_xxxxxxxx[k] - fgz * g21_yz_xxxxxxxx[k]) + 8.0 * f2t * gk_xyz_xxxxxxx[k];

                    g_xxyz_xxxxxxxy[k] = fr * g11_xyz_xxxxxxxy[k] + f2g * (g20_yz_xxxxxxxy[k] - fgz * g21_yz_xxxxxxxy[k]) + 7.0 * f2t * gk_xyz_xxxxxxy[k];

                    g_xxyz_xxxxxxxz[k] = fr * g11_xyz_xxxxxxxz[k] + f2g * (g20_yz_xxxxxxxz[k] - fgz * g21_yz_xxxxxxxz[k]) + 7.0 * f2t * gk_xyz_xxxxxxz[k];

                    g_xxyz_xxxxxxyy[k] = fr * g11_xyz_xxxxxxyy[k] + f2g * (g20_yz_xxxxxxyy[k] - fgz * g21_yz_xxxxxxyy[k]) + 6.0 * f2t * gk_xyz_xxxxxyy[k];

                    g_xxyz_xxxxxxyz[k] = fr * g11_xyz_xxxxxxyz[k] + f2g * (g20_yz_xxxxxxyz[k] - fgz * g21_yz_xxxxxxyz[k]) + 6.0 * f2t * gk_xyz_xxxxxyz[k];

                    g_xxyz_xxxxxxzz[k] = fr * g11_xyz_xxxxxxzz[k] + f2g * (g20_yz_xxxxxxzz[k] - fgz * g21_yz_xxxxxxzz[k]) + 6.0 * f2t * gk_xyz_xxxxxzz[k];

                    g_xxyz_xxxxxyyy[k] = fr * g11_xyz_xxxxxyyy[k] + f2g * (g20_yz_xxxxxyyy[k] - fgz * g21_yz_xxxxxyyy[k]) + 5.0 * f2t * gk_xyz_xxxxyyy[k];

                    g_xxyz_xxxxxyyz[k] = fr * g11_xyz_xxxxxyyz[k] + f2g * (g20_yz_xxxxxyyz[k] - fgz * g21_yz_xxxxxyyz[k]) + 5.0 * f2t * gk_xyz_xxxxyyz[k];

                    g_xxyz_xxxxxyzz[k] = fr * g11_xyz_xxxxxyzz[k] + f2g * (g20_yz_xxxxxyzz[k] - fgz * g21_yz_xxxxxyzz[k]) + 5.0 * f2t * gk_xyz_xxxxyzz[k];

                    g_xxyz_xxxxxzzz[k] = fr * g11_xyz_xxxxxzzz[k] + f2g * (g20_yz_xxxxxzzz[k] - fgz * g21_yz_xxxxxzzz[k]) + 5.0 * f2t * gk_xyz_xxxxzzz[k];

                    g_xxyz_xxxxyyyy[k] = fr * g11_xyz_xxxxyyyy[k] + f2g * (g20_yz_xxxxyyyy[k] - fgz * g21_yz_xxxxyyyy[k]) + 4.0 * f2t * gk_xyz_xxxyyyy[k];

                    g_xxyz_xxxxyyyz[k] = fr * g11_xyz_xxxxyyyz[k] + f2g * (g20_yz_xxxxyyyz[k] - fgz * g21_yz_xxxxyyyz[k]) + 4.0 * f2t * gk_xyz_xxxyyyz[k];

                    g_xxyz_xxxxyyzz[k] = fr * g11_xyz_xxxxyyzz[k] + f2g * (g20_yz_xxxxyyzz[k] - fgz * g21_yz_xxxxyyzz[k]) + 4.0 * f2t * gk_xyz_xxxyyzz[k];

                    g_xxyz_xxxxyzzz[k] = fr * g11_xyz_xxxxyzzz[k] + f2g * (g20_yz_xxxxyzzz[k] - fgz * g21_yz_xxxxyzzz[k]) + 4.0 * f2t * gk_xyz_xxxyzzz[k];

                    g_xxyz_xxxxzzzz[k] = fr * g11_xyz_xxxxzzzz[k] + f2g * (g20_yz_xxxxzzzz[k] - fgz * g21_yz_xxxxzzzz[k]) + 4.0 * f2t * gk_xyz_xxxzzzz[k];

                    g_xxyz_xxxyyyyy[k] = fr * g11_xyz_xxxyyyyy[k] + f2g * (g20_yz_xxxyyyyy[k] - fgz * g21_yz_xxxyyyyy[k]) + 3.0 * f2t * gk_xyz_xxyyyyy[k];

                    g_xxyz_xxxyyyyz[k] = fr * g11_xyz_xxxyyyyz[k] + f2g * (g20_yz_xxxyyyyz[k] - fgz * g21_yz_xxxyyyyz[k]) + 3.0 * f2t * gk_xyz_xxyyyyz[k];

                    g_xxyz_xxxyyyzz[k] = fr * g11_xyz_xxxyyyzz[k] + f2g * (g20_yz_xxxyyyzz[k] - fgz * g21_yz_xxxyyyzz[k]) + 3.0 * f2t * gk_xyz_xxyyyzz[k];

                    g_xxyz_xxxyyzzz[k] = fr * g11_xyz_xxxyyzzz[k] + f2g * (g20_yz_xxxyyzzz[k] - fgz * g21_yz_xxxyyzzz[k]) + 3.0 * f2t * gk_xyz_xxyyzzz[k];

                    g_xxyz_xxxyzzzz[k] = fr * g11_xyz_xxxyzzzz[k] + f2g * (g20_yz_xxxyzzzz[k] - fgz * g21_yz_xxxyzzzz[k]) + 3.0 * f2t * gk_xyz_xxyzzzz[k];

                    g_xxyz_xxxzzzzz[k] = fr * g11_xyz_xxxzzzzz[k] + f2g * (g20_yz_xxxzzzzz[k] - fgz * g21_yz_xxxzzzzz[k]) + 3.0 * f2t * gk_xyz_xxzzzzz[k];

                    g_xxyz_xxyyyyyy[k] = fr * g11_xyz_xxyyyyyy[k] + f2g * (g20_yz_xxyyyyyy[k] - fgz * g21_yz_xxyyyyyy[k]) + 2.0 * f2t * gk_xyz_xyyyyyy[k];

                    g_xxyz_xxyyyyyz[k] = fr * g11_xyz_xxyyyyyz[k] + f2g * (g20_yz_xxyyyyyz[k] - fgz * g21_yz_xxyyyyyz[k]) + 2.0 * f2t * gk_xyz_xyyyyyz[k];

                    g_xxyz_xxyyyyzz[k] = fr * g11_xyz_xxyyyyzz[k] + f2g * (g20_yz_xxyyyyzz[k] - fgz * g21_yz_xxyyyyzz[k]) + 2.0 * f2t * gk_xyz_xyyyyzz[k];

                    g_xxyz_xxyyyzzz[k] = fr * g11_xyz_xxyyyzzz[k] + f2g * (g20_yz_xxyyyzzz[k] - fgz * g21_yz_xxyyyzzz[k]) + 2.0 * f2t * gk_xyz_xyyyzzz[k];

                    g_xxyz_xxyyzzzz[k] = fr * g11_xyz_xxyyzzzz[k] + f2g * (g20_yz_xxyyzzzz[k] - fgz * g21_yz_xxyyzzzz[k]) + 2.0 * f2t * gk_xyz_xyyzzzz[k];

                    g_xxyz_xxyzzzzz[k] = fr * g11_xyz_xxyzzzzz[k] + f2g * (g20_yz_xxyzzzzz[k] - fgz * g21_yz_xxyzzzzz[k]) + 2.0 * f2t * gk_xyz_xyzzzzz[k];

                    g_xxyz_xxzzzzzz[k] = fr * g11_xyz_xxzzzzzz[k] + f2g * (g20_yz_xxzzzzzz[k] - fgz * g21_yz_xxzzzzzz[k]) + 2.0 * f2t * gk_xyz_xzzzzzz[k];

                    g_xxyz_xyyyyyyy[k] = fr * g11_xyz_xyyyyyyy[k] + f2g * (g20_yz_xyyyyyyy[k] - fgz * g21_yz_xyyyyyyy[k]) + f2t * gk_xyz_yyyyyyy[k];

                    g_xxyz_xyyyyyyz[k] = fr * g11_xyz_xyyyyyyz[k] + f2g * (g20_yz_xyyyyyyz[k] - fgz * g21_yz_xyyyyyyz[k]) + f2t * gk_xyz_yyyyyyz[k];

                    g_xxyz_xyyyyyzz[k] = fr * g11_xyz_xyyyyyzz[k] + f2g * (g20_yz_xyyyyyzz[k] - fgz * g21_yz_xyyyyyzz[k]) + f2t * gk_xyz_yyyyyzz[k];

                    g_xxyz_xyyyyzzz[k] = fr * g11_xyz_xyyyyzzz[k] + f2g * (g20_yz_xyyyyzzz[k] - fgz * g21_yz_xyyyyzzz[k]) + f2t * gk_xyz_yyyyzzz[k];

                    g_xxyz_xyyyzzzz[k] = fr * g11_xyz_xyyyzzzz[k] + f2g * (g20_yz_xyyyzzzz[k] - fgz * g21_yz_xyyyzzzz[k]) + f2t * gk_xyz_yyyzzzz[k];

                    g_xxyz_xyyzzzzz[k] = fr * g11_xyz_xyyzzzzz[k] + f2g * (g20_yz_xyyzzzzz[k] - fgz * g21_yz_xyyzzzzz[k]) + f2t * gk_xyz_yyzzzzz[k];

                    g_xxyz_xyzzzzzz[k] = fr * g11_xyz_xyzzzzzz[k] + f2g * (g20_yz_xyzzzzzz[k] - fgz * g21_yz_xyzzzzzz[k]) + f2t * gk_xyz_yzzzzzz[k];

                    g_xxyz_xzzzzzzz[k] = fr * g11_xyz_xzzzzzzz[k] + f2g * (g20_yz_xzzzzzzz[k] - fgz * g21_yz_xzzzzzzz[k]) + f2t * gk_xyz_zzzzzzz[k];

                    g_xxyz_yyyyyyyy[k] = fr * g11_xyz_yyyyyyyy[k] + f2g * (g20_yz_yyyyyyyy[k] - fgz * g21_yz_yyyyyyyy[k]);

                    g_xxyz_yyyyyyyz[k] = fr * g11_xyz_yyyyyyyz[k] + f2g * (g20_yz_yyyyyyyz[k] - fgz * g21_yz_yyyyyyyz[k]);

                    g_xxyz_yyyyyyzz[k] = fr * g11_xyz_yyyyyyzz[k] + f2g * (g20_yz_yyyyyyzz[k] - fgz * g21_yz_yyyyyyzz[k]);

                    g_xxyz_yyyyyzzz[k] = fr * g11_xyz_yyyyyzzz[k] + f2g * (g20_yz_yyyyyzzz[k] - fgz * g21_yz_yyyyyzzz[k]);

                    g_xxyz_yyyyzzzz[k] = fr * g11_xyz_yyyyzzzz[k] + f2g * (g20_yz_yyyyzzzz[k] - fgz * g21_yz_yyyyzzzz[k]);

                    g_xxyz_yyyzzzzz[k] = fr * g11_xyz_yyyzzzzz[k] + f2g * (g20_yz_yyyzzzzz[k] - fgz * g21_yz_yyyzzzzz[k]);

                    g_xxyz_yyzzzzzz[k] = fr * g11_xyz_yyzzzzzz[k] + f2g * (g20_yz_yyzzzzzz[k] - fgz * g21_yz_yyzzzzzz[k]);

                    g_xxyz_yzzzzzzz[k] = fr * g11_xyz_yzzzzzzz[k] + f2g * (g20_yz_yzzzzzzz[k] - fgz * g21_yz_yzzzzzzz[k]);

                    g_xxyz_zzzzzzzz[k] = fr * g11_xyz_zzzzzzzz[k] + f2g * (g20_yz_zzzzzzzz[k] - fgz * g21_yz_zzzzzzzz[k]);

                    g_xxzz_xxxxxxxx[k] = fr * g11_xzz_xxxxxxxx[k] + f2g * (g20_zz_xxxxxxxx[k] - fgz * g21_zz_xxxxxxxx[k]) + 8.0 * f2t * gk_xzz_xxxxxxx[k];

                    g_xxzz_xxxxxxxy[k] = fr * g11_xzz_xxxxxxxy[k] + f2g * (g20_zz_xxxxxxxy[k] - fgz * g21_zz_xxxxxxxy[k]) + 7.0 * f2t * gk_xzz_xxxxxxy[k];

                    g_xxzz_xxxxxxxz[k] = fr * g11_xzz_xxxxxxxz[k] + f2g * (g20_zz_xxxxxxxz[k] - fgz * g21_zz_xxxxxxxz[k]) + 7.0 * f2t * gk_xzz_xxxxxxz[k];

                    g_xxzz_xxxxxxyy[k] = fr * g11_xzz_xxxxxxyy[k] + f2g * (g20_zz_xxxxxxyy[k] - fgz * g21_zz_xxxxxxyy[k]) + 6.0 * f2t * gk_xzz_xxxxxyy[k];

                    g_xxzz_xxxxxxyz[k] = fr * g11_xzz_xxxxxxyz[k] + f2g * (g20_zz_xxxxxxyz[k] - fgz * g21_zz_xxxxxxyz[k]) + 6.0 * f2t * gk_xzz_xxxxxyz[k];

                    g_xxzz_xxxxxxzz[k] = fr * g11_xzz_xxxxxxzz[k] + f2g * (g20_zz_xxxxxxzz[k] - fgz * g21_zz_xxxxxxzz[k]) + 6.0 * f2t * gk_xzz_xxxxxzz[k];

                    g_xxzz_xxxxxyyy[k] = fr * g11_xzz_xxxxxyyy[k] + f2g * (g20_zz_xxxxxyyy[k] - fgz * g21_zz_xxxxxyyy[k]) + 5.0 * f2t * gk_xzz_xxxxyyy[k];

                    g_xxzz_xxxxxyyz[k] = fr * g11_xzz_xxxxxyyz[k] + f2g * (g20_zz_xxxxxyyz[k] - fgz * g21_zz_xxxxxyyz[k]) + 5.0 * f2t * gk_xzz_xxxxyyz[k];

                    g_xxzz_xxxxxyzz[k] = fr * g11_xzz_xxxxxyzz[k] + f2g * (g20_zz_xxxxxyzz[k] - fgz * g21_zz_xxxxxyzz[k]) + 5.0 * f2t * gk_xzz_xxxxyzz[k];

                    g_xxzz_xxxxxzzz[k] = fr * g11_xzz_xxxxxzzz[k] + f2g * (g20_zz_xxxxxzzz[k] - fgz * g21_zz_xxxxxzzz[k]) + 5.0 * f2t * gk_xzz_xxxxzzz[k];

                    g_xxzz_xxxxyyyy[k] = fr * g11_xzz_xxxxyyyy[k] + f2g * (g20_zz_xxxxyyyy[k] - fgz * g21_zz_xxxxyyyy[k]) + 4.0 * f2t * gk_xzz_xxxyyyy[k];

                    g_xxzz_xxxxyyyz[k] = fr * g11_xzz_xxxxyyyz[k] + f2g * (g20_zz_xxxxyyyz[k] - fgz * g21_zz_xxxxyyyz[k]) + 4.0 * f2t * gk_xzz_xxxyyyz[k];

                    g_xxzz_xxxxyyzz[k] = fr * g11_xzz_xxxxyyzz[k] + f2g * (g20_zz_xxxxyyzz[k] - fgz * g21_zz_xxxxyyzz[k]) + 4.0 * f2t * gk_xzz_xxxyyzz[k];

                    g_xxzz_xxxxyzzz[k] = fr * g11_xzz_xxxxyzzz[k] + f2g * (g20_zz_xxxxyzzz[k] - fgz * g21_zz_xxxxyzzz[k]) + 4.0 * f2t * gk_xzz_xxxyzzz[k];

                    g_xxzz_xxxxzzzz[k] = fr * g11_xzz_xxxxzzzz[k] + f2g * (g20_zz_xxxxzzzz[k] - fgz * g21_zz_xxxxzzzz[k]) + 4.0 * f2t * gk_xzz_xxxzzzz[k];

                    g_xxzz_xxxyyyyy[k] = fr * g11_xzz_xxxyyyyy[k] + f2g * (g20_zz_xxxyyyyy[k] - fgz * g21_zz_xxxyyyyy[k]) + 3.0 * f2t * gk_xzz_xxyyyyy[k];

                    g_xxzz_xxxyyyyz[k] = fr * g11_xzz_xxxyyyyz[k] + f2g * (g20_zz_xxxyyyyz[k] - fgz * g21_zz_xxxyyyyz[k]) + 3.0 * f2t * gk_xzz_xxyyyyz[k];

                    g_xxzz_xxxyyyzz[k] = fr * g11_xzz_xxxyyyzz[k] + f2g * (g20_zz_xxxyyyzz[k] - fgz * g21_zz_xxxyyyzz[k]) + 3.0 * f2t * gk_xzz_xxyyyzz[k];

                    g_xxzz_xxxyyzzz[k] = fr * g11_xzz_xxxyyzzz[k] + f2g * (g20_zz_xxxyyzzz[k] - fgz * g21_zz_xxxyyzzz[k]) + 3.0 * f2t * gk_xzz_xxyyzzz[k];

                    g_xxzz_xxxyzzzz[k] = fr * g11_xzz_xxxyzzzz[k] + f2g * (g20_zz_xxxyzzzz[k] - fgz * g21_zz_xxxyzzzz[k]) + 3.0 * f2t * gk_xzz_xxyzzzz[k];

                    g_xxzz_xxxzzzzz[k] = fr * g11_xzz_xxxzzzzz[k] + f2g * (g20_zz_xxxzzzzz[k] - fgz * g21_zz_xxxzzzzz[k]) + 3.0 * f2t * gk_xzz_xxzzzzz[k];

                    g_xxzz_xxyyyyyy[k] = fr * g11_xzz_xxyyyyyy[k] + f2g * (g20_zz_xxyyyyyy[k] - fgz * g21_zz_xxyyyyyy[k]) + 2.0 * f2t * gk_xzz_xyyyyyy[k];

                    g_xxzz_xxyyyyyz[k] = fr * g11_xzz_xxyyyyyz[k] + f2g * (g20_zz_xxyyyyyz[k] - fgz * g21_zz_xxyyyyyz[k]) + 2.0 * f2t * gk_xzz_xyyyyyz[k];

                    g_xxzz_xxyyyyzz[k] = fr * g11_xzz_xxyyyyzz[k] + f2g * (g20_zz_xxyyyyzz[k] - fgz * g21_zz_xxyyyyzz[k]) + 2.0 * f2t * gk_xzz_xyyyyzz[k];

                    g_xxzz_xxyyyzzz[k] = fr * g11_xzz_xxyyyzzz[k] + f2g * (g20_zz_xxyyyzzz[k] - fgz * g21_zz_xxyyyzzz[k]) + 2.0 * f2t * gk_xzz_xyyyzzz[k];

                    g_xxzz_xxyyzzzz[k] = fr * g11_xzz_xxyyzzzz[k] + f2g * (g20_zz_xxyyzzzz[k] - fgz * g21_zz_xxyyzzzz[k]) + 2.0 * f2t * gk_xzz_xyyzzzz[k];

                    g_xxzz_xxyzzzzz[k] = fr * g11_xzz_xxyzzzzz[k] + f2g * (g20_zz_xxyzzzzz[k] - fgz * g21_zz_xxyzzzzz[k]) + 2.0 * f2t * gk_xzz_xyzzzzz[k];

                    g_xxzz_xxzzzzzz[k] = fr * g11_xzz_xxzzzzzz[k] + f2g * (g20_zz_xxzzzzzz[k] - fgz * g21_zz_xxzzzzzz[k]) + 2.0 * f2t * gk_xzz_xzzzzzz[k];

                    g_xxzz_xyyyyyyy[k] = fr * g11_xzz_xyyyyyyy[k] + f2g * (g20_zz_xyyyyyyy[k] - fgz * g21_zz_xyyyyyyy[k]) + f2t * gk_xzz_yyyyyyy[k];

                    g_xxzz_xyyyyyyz[k] = fr * g11_xzz_xyyyyyyz[k] + f2g * (g20_zz_xyyyyyyz[k] - fgz * g21_zz_xyyyyyyz[k]) + f2t * gk_xzz_yyyyyyz[k];

                    g_xxzz_xyyyyyzz[k] = fr * g11_xzz_xyyyyyzz[k] + f2g * (g20_zz_xyyyyyzz[k] - fgz * g21_zz_xyyyyyzz[k]) + f2t * gk_xzz_yyyyyzz[k];

                    g_xxzz_xyyyyzzz[k] = fr * g11_xzz_xyyyyzzz[k] + f2g * (g20_zz_xyyyyzzz[k] - fgz * g21_zz_xyyyyzzz[k]) + f2t * gk_xzz_yyyyzzz[k];

                    g_xxzz_xyyyzzzz[k] = fr * g11_xzz_xyyyzzzz[k] + f2g * (g20_zz_xyyyzzzz[k] - fgz * g21_zz_xyyyzzzz[k]) + f2t * gk_xzz_yyyzzzz[k];

                    g_xxzz_xyyzzzzz[k] = fr * g11_xzz_xyyzzzzz[k] + f2g * (g20_zz_xyyzzzzz[k] - fgz * g21_zz_xyyzzzzz[k]) + f2t * gk_xzz_yyzzzzz[k];

                    g_xxzz_xyzzzzzz[k] = fr * g11_xzz_xyzzzzzz[k] + f2g * (g20_zz_xyzzzzzz[k] - fgz * g21_zz_xyzzzzzz[k]) + f2t * gk_xzz_yzzzzzz[k];

                    g_xxzz_xzzzzzzz[k] = fr * g11_xzz_xzzzzzzz[k] + f2g * (g20_zz_xzzzzzzz[k] - fgz * g21_zz_xzzzzzzz[k]) + f2t * gk_xzz_zzzzzzz[k];

                    g_xxzz_yyyyyyyy[k] = fr * g11_xzz_yyyyyyyy[k] + f2g * (g20_zz_yyyyyyyy[k] - fgz * g21_zz_yyyyyyyy[k]);

                    g_xxzz_yyyyyyyz[k] = fr * g11_xzz_yyyyyyyz[k] + f2g * (g20_zz_yyyyyyyz[k] - fgz * g21_zz_yyyyyyyz[k]);

                    g_xxzz_yyyyyyzz[k] = fr * g11_xzz_yyyyyyzz[k] + f2g * (g20_zz_yyyyyyzz[k] - fgz * g21_zz_yyyyyyzz[k]);

                    g_xxzz_yyyyyzzz[k] = fr * g11_xzz_yyyyyzzz[k] + f2g * (g20_zz_yyyyyzzz[k] - fgz * g21_zz_yyyyyzzz[k]);

                    g_xxzz_yyyyzzzz[k] = fr * g11_xzz_yyyyzzzz[k] + f2g * (g20_zz_yyyyzzzz[k] - fgz * g21_zz_yyyyzzzz[k]);

                    g_xxzz_yyyzzzzz[k] = fr * g11_xzz_yyyzzzzz[k] + f2g * (g20_zz_yyyzzzzz[k] - fgz * g21_zz_yyyzzzzz[k]);

                    g_xxzz_yyzzzzzz[k] = fr * g11_xzz_yyzzzzzz[k] + f2g * (g20_zz_yyzzzzzz[k] - fgz * g21_zz_yyzzzzzz[k]);

                    g_xxzz_yzzzzzzz[k] = fr * g11_xzz_yzzzzzzz[k] + f2g * (g20_zz_yzzzzzzz[k] - fgz * g21_zz_yzzzzzzz[k]);

                    g_xxzz_zzzzzzzz[k] = fr * g11_xzz_zzzzzzzz[k] + f2g * (g20_zz_zzzzzzzz[k] - fgz * g21_zz_zzzzzzzz[k]);

                    g_xyyy_xxxxxxxx[k] = fr * g11_yyy_xxxxxxxx[k] + 8.0 * f2t * gk_yyy_xxxxxxx[k];

                    g_xyyy_xxxxxxxy[k] = fr * g11_yyy_xxxxxxxy[k] + 7.0 * f2t * gk_yyy_xxxxxxy[k];

                    g_xyyy_xxxxxxxz[k] = fr * g11_yyy_xxxxxxxz[k] + 7.0 * f2t * gk_yyy_xxxxxxz[k];

                    g_xyyy_xxxxxxyy[k] = fr * g11_yyy_xxxxxxyy[k] + 6.0 * f2t * gk_yyy_xxxxxyy[k];

                    g_xyyy_xxxxxxyz[k] = fr * g11_yyy_xxxxxxyz[k] + 6.0 * f2t * gk_yyy_xxxxxyz[k];

                    g_xyyy_xxxxxxzz[k] = fr * g11_yyy_xxxxxxzz[k] + 6.0 * f2t * gk_yyy_xxxxxzz[k];

                    g_xyyy_xxxxxyyy[k] = fr * g11_yyy_xxxxxyyy[k] + 5.0 * f2t * gk_yyy_xxxxyyy[k];

                    g_xyyy_xxxxxyyz[k] = fr * g11_yyy_xxxxxyyz[k] + 5.0 * f2t * gk_yyy_xxxxyyz[k];

                    g_xyyy_xxxxxyzz[k] = fr * g11_yyy_xxxxxyzz[k] + 5.0 * f2t * gk_yyy_xxxxyzz[k];

                    g_xyyy_xxxxxzzz[k] = fr * g11_yyy_xxxxxzzz[k] + 5.0 * f2t * gk_yyy_xxxxzzz[k];

                    g_xyyy_xxxxyyyy[k] = fr * g11_yyy_xxxxyyyy[k] + 4.0 * f2t * gk_yyy_xxxyyyy[k];

                    g_xyyy_xxxxyyyz[k] = fr * g11_yyy_xxxxyyyz[k] + 4.0 * f2t * gk_yyy_xxxyyyz[k];

                    g_xyyy_xxxxyyzz[k] = fr * g11_yyy_xxxxyyzz[k] + 4.0 * f2t * gk_yyy_xxxyyzz[k];

                    g_xyyy_xxxxyzzz[k] = fr * g11_yyy_xxxxyzzz[k] + 4.0 * f2t * gk_yyy_xxxyzzz[k];

                    g_xyyy_xxxxzzzz[k] = fr * g11_yyy_xxxxzzzz[k] + 4.0 * f2t * gk_yyy_xxxzzzz[k];

                    g_xyyy_xxxyyyyy[k] = fr * g11_yyy_xxxyyyyy[k] + 3.0 * f2t * gk_yyy_xxyyyyy[k];

                    g_xyyy_xxxyyyyz[k] = fr * g11_yyy_xxxyyyyz[k] + 3.0 * f2t * gk_yyy_xxyyyyz[k];

                    g_xyyy_xxxyyyzz[k] = fr * g11_yyy_xxxyyyzz[k] + 3.0 * f2t * gk_yyy_xxyyyzz[k];

                    g_xyyy_xxxyyzzz[k] = fr * g11_yyy_xxxyyzzz[k] + 3.0 * f2t * gk_yyy_xxyyzzz[k];

                    g_xyyy_xxxyzzzz[k] = fr * g11_yyy_xxxyzzzz[k] + 3.0 * f2t * gk_yyy_xxyzzzz[k];

                    g_xyyy_xxxzzzzz[k] = fr * g11_yyy_xxxzzzzz[k] + 3.0 * f2t * gk_yyy_xxzzzzz[k];

                    g_xyyy_xxyyyyyy[k] = fr * g11_yyy_xxyyyyyy[k] + 2.0 * f2t * gk_yyy_xyyyyyy[k];

                    g_xyyy_xxyyyyyz[k] = fr * g11_yyy_xxyyyyyz[k] + 2.0 * f2t * gk_yyy_xyyyyyz[k];

                    g_xyyy_xxyyyyzz[k] = fr * g11_yyy_xxyyyyzz[k] + 2.0 * f2t * gk_yyy_xyyyyzz[k];

                    g_xyyy_xxyyyzzz[k] = fr * g11_yyy_xxyyyzzz[k] + 2.0 * f2t * gk_yyy_xyyyzzz[k];

                    g_xyyy_xxyyzzzz[k] = fr * g11_yyy_xxyyzzzz[k] + 2.0 * f2t * gk_yyy_xyyzzzz[k];

                    g_xyyy_xxyzzzzz[k] = fr * g11_yyy_xxyzzzzz[k] + 2.0 * f2t * gk_yyy_xyzzzzz[k];

                    g_xyyy_xxzzzzzz[k] = fr * g11_yyy_xxzzzzzz[k] + 2.0 * f2t * gk_yyy_xzzzzzz[k];

                    g_xyyy_xyyyyyyy[k] = fr * g11_yyy_xyyyyyyy[k] + f2t * gk_yyy_yyyyyyy[k];

                    g_xyyy_xyyyyyyz[k] = fr * g11_yyy_xyyyyyyz[k] + f2t * gk_yyy_yyyyyyz[k];

                    g_xyyy_xyyyyyzz[k] = fr * g11_yyy_xyyyyyzz[k] + f2t * gk_yyy_yyyyyzz[k];

                    g_xyyy_xyyyyzzz[k] = fr * g11_yyy_xyyyyzzz[k] + f2t * gk_yyy_yyyyzzz[k];

                    g_xyyy_xyyyzzzz[k] = fr * g11_yyy_xyyyzzzz[k] + f2t * gk_yyy_yyyzzzz[k];

                    g_xyyy_xyyzzzzz[k] = fr * g11_yyy_xyyzzzzz[k] + f2t * gk_yyy_yyzzzzz[k];

                    g_xyyy_xyzzzzzz[k] = fr * g11_yyy_xyzzzzzz[k] + f2t * gk_yyy_yzzzzzz[k];

                    g_xyyy_xzzzzzzz[k] = fr * g11_yyy_xzzzzzzz[k] + f2t * gk_yyy_zzzzzzz[k];

                    g_xyyy_yyyyyyyy[k] = fr * g11_yyy_yyyyyyyy[k];

                    g_xyyy_yyyyyyyz[k] = fr * g11_yyy_yyyyyyyz[k];

                    g_xyyy_yyyyyyzz[k] = fr * g11_yyy_yyyyyyzz[k];

                    g_xyyy_yyyyyzzz[k] = fr * g11_yyy_yyyyyzzz[k];

                    g_xyyy_yyyyzzzz[k] = fr * g11_yyy_yyyyzzzz[k];

                    g_xyyy_yyyzzzzz[k] = fr * g11_yyy_yyyzzzzz[k];

                    g_xyyy_yyzzzzzz[k] = fr * g11_yyy_yyzzzzzz[k];

                    g_xyyy_yzzzzzzz[k] = fr * g11_yyy_yzzzzzzz[k];

                    g_xyyy_zzzzzzzz[k] = fr * g11_yyy_zzzzzzzz[k];

                    g_xyyz_xxxxxxxx[k] = fr * g11_yyz_xxxxxxxx[k] + 8.0 * f2t * gk_yyz_xxxxxxx[k];

                    g_xyyz_xxxxxxxy[k] = fr * g11_yyz_xxxxxxxy[k] + 7.0 * f2t * gk_yyz_xxxxxxy[k];

                    g_xyyz_xxxxxxxz[k] = fr * g11_yyz_xxxxxxxz[k] + 7.0 * f2t * gk_yyz_xxxxxxz[k];

                    g_xyyz_xxxxxxyy[k] = fr * g11_yyz_xxxxxxyy[k] + 6.0 * f2t * gk_yyz_xxxxxyy[k];

                    g_xyyz_xxxxxxyz[k] = fr * g11_yyz_xxxxxxyz[k] + 6.0 * f2t * gk_yyz_xxxxxyz[k];

                    g_xyyz_xxxxxxzz[k] = fr * g11_yyz_xxxxxxzz[k] + 6.0 * f2t * gk_yyz_xxxxxzz[k];

                    g_xyyz_xxxxxyyy[k] = fr * g11_yyz_xxxxxyyy[k] + 5.0 * f2t * gk_yyz_xxxxyyy[k];

                    g_xyyz_xxxxxyyz[k] = fr * g11_yyz_xxxxxyyz[k] + 5.0 * f2t * gk_yyz_xxxxyyz[k];

                    g_xyyz_xxxxxyzz[k] = fr * g11_yyz_xxxxxyzz[k] + 5.0 * f2t * gk_yyz_xxxxyzz[k];

                    g_xyyz_xxxxxzzz[k] = fr * g11_yyz_xxxxxzzz[k] + 5.0 * f2t * gk_yyz_xxxxzzz[k];

                    g_xyyz_xxxxyyyy[k] = fr * g11_yyz_xxxxyyyy[k] + 4.0 * f2t * gk_yyz_xxxyyyy[k];

                    g_xyyz_xxxxyyyz[k] = fr * g11_yyz_xxxxyyyz[k] + 4.0 * f2t * gk_yyz_xxxyyyz[k];

                    g_xyyz_xxxxyyzz[k] = fr * g11_yyz_xxxxyyzz[k] + 4.0 * f2t * gk_yyz_xxxyyzz[k];

                    g_xyyz_xxxxyzzz[k] = fr * g11_yyz_xxxxyzzz[k] + 4.0 * f2t * gk_yyz_xxxyzzz[k];

                    g_xyyz_xxxxzzzz[k] = fr * g11_yyz_xxxxzzzz[k] + 4.0 * f2t * gk_yyz_xxxzzzz[k];

                    g_xyyz_xxxyyyyy[k] = fr * g11_yyz_xxxyyyyy[k] + 3.0 * f2t * gk_yyz_xxyyyyy[k];

                    g_xyyz_xxxyyyyz[k] = fr * g11_yyz_xxxyyyyz[k] + 3.0 * f2t * gk_yyz_xxyyyyz[k];

                    g_xyyz_xxxyyyzz[k] = fr * g11_yyz_xxxyyyzz[k] + 3.0 * f2t * gk_yyz_xxyyyzz[k];

                    g_xyyz_xxxyyzzz[k] = fr * g11_yyz_xxxyyzzz[k] + 3.0 * f2t * gk_yyz_xxyyzzz[k];

                    g_xyyz_xxxyzzzz[k] = fr * g11_yyz_xxxyzzzz[k] + 3.0 * f2t * gk_yyz_xxyzzzz[k];

                    g_xyyz_xxxzzzzz[k] = fr * g11_yyz_xxxzzzzz[k] + 3.0 * f2t * gk_yyz_xxzzzzz[k];

                    g_xyyz_xxyyyyyy[k] = fr * g11_yyz_xxyyyyyy[k] + 2.0 * f2t * gk_yyz_xyyyyyy[k];

                    g_xyyz_xxyyyyyz[k] = fr * g11_yyz_xxyyyyyz[k] + 2.0 * f2t * gk_yyz_xyyyyyz[k];

                    g_xyyz_xxyyyyzz[k] = fr * g11_yyz_xxyyyyzz[k] + 2.0 * f2t * gk_yyz_xyyyyzz[k];

                    g_xyyz_xxyyyzzz[k] = fr * g11_yyz_xxyyyzzz[k] + 2.0 * f2t * gk_yyz_xyyyzzz[k];

                    g_xyyz_xxyyzzzz[k] = fr * g11_yyz_xxyyzzzz[k] + 2.0 * f2t * gk_yyz_xyyzzzz[k];

                    g_xyyz_xxyzzzzz[k] = fr * g11_yyz_xxyzzzzz[k] + 2.0 * f2t * gk_yyz_xyzzzzz[k];

                    g_xyyz_xxzzzzzz[k] = fr * g11_yyz_xxzzzzzz[k] + 2.0 * f2t * gk_yyz_xzzzzzz[k];

                    g_xyyz_xyyyyyyy[k] = fr * g11_yyz_xyyyyyyy[k] + f2t * gk_yyz_yyyyyyy[k];

                    g_xyyz_xyyyyyyz[k] = fr * g11_yyz_xyyyyyyz[k] + f2t * gk_yyz_yyyyyyz[k];

                    g_xyyz_xyyyyyzz[k] = fr * g11_yyz_xyyyyyzz[k] + f2t * gk_yyz_yyyyyzz[k];

                    g_xyyz_xyyyyzzz[k] = fr * g11_yyz_xyyyyzzz[k] + f2t * gk_yyz_yyyyzzz[k];

                    g_xyyz_xyyyzzzz[k] = fr * g11_yyz_xyyyzzzz[k] + f2t * gk_yyz_yyyzzzz[k];

                    g_xyyz_xyyzzzzz[k] = fr * g11_yyz_xyyzzzzz[k] + f2t * gk_yyz_yyzzzzz[k];

                    g_xyyz_xyzzzzzz[k] = fr * g11_yyz_xyzzzzzz[k] + f2t * gk_yyz_yzzzzzz[k];

                    g_xyyz_xzzzzzzz[k] = fr * g11_yyz_xzzzzzzz[k] + f2t * gk_yyz_zzzzzzz[k];

                    g_xyyz_yyyyyyyy[k] = fr * g11_yyz_yyyyyyyy[k];

                    g_xyyz_yyyyyyyz[k] = fr * g11_yyz_yyyyyyyz[k];

                    g_xyyz_yyyyyyzz[k] = fr * g11_yyz_yyyyyyzz[k];

                    g_xyyz_yyyyyzzz[k] = fr * g11_yyz_yyyyyzzz[k];

                    g_xyyz_yyyyzzzz[k] = fr * g11_yyz_yyyyzzzz[k];

                    g_xyyz_yyyzzzzz[k] = fr * g11_yyz_yyyzzzzz[k];

                    g_xyyz_yyzzzzzz[k] = fr * g11_yyz_yyzzzzzz[k];

                    g_xyyz_yzzzzzzz[k] = fr * g11_yyz_yzzzzzzz[k];

                    g_xyyz_zzzzzzzz[k] = fr * g11_yyz_zzzzzzzz[k];

                    g_xyzz_xxxxxxxx[k] = fr * g11_yzz_xxxxxxxx[k] + 8.0 * f2t * gk_yzz_xxxxxxx[k];

                    g_xyzz_xxxxxxxy[k] = fr * g11_yzz_xxxxxxxy[k] + 7.0 * f2t * gk_yzz_xxxxxxy[k];

                    g_xyzz_xxxxxxxz[k] = fr * g11_yzz_xxxxxxxz[k] + 7.0 * f2t * gk_yzz_xxxxxxz[k];

                    g_xyzz_xxxxxxyy[k] = fr * g11_yzz_xxxxxxyy[k] + 6.0 * f2t * gk_yzz_xxxxxyy[k];

                    g_xyzz_xxxxxxyz[k] = fr * g11_yzz_xxxxxxyz[k] + 6.0 * f2t * gk_yzz_xxxxxyz[k];

                    g_xyzz_xxxxxxzz[k] = fr * g11_yzz_xxxxxxzz[k] + 6.0 * f2t * gk_yzz_xxxxxzz[k];

                    g_xyzz_xxxxxyyy[k] = fr * g11_yzz_xxxxxyyy[k] + 5.0 * f2t * gk_yzz_xxxxyyy[k];

                    g_xyzz_xxxxxyyz[k] = fr * g11_yzz_xxxxxyyz[k] + 5.0 * f2t * gk_yzz_xxxxyyz[k];

                    g_xyzz_xxxxxyzz[k] = fr * g11_yzz_xxxxxyzz[k] + 5.0 * f2t * gk_yzz_xxxxyzz[k];

                    g_xyzz_xxxxxzzz[k] = fr * g11_yzz_xxxxxzzz[k] + 5.0 * f2t * gk_yzz_xxxxzzz[k];

                    g_xyzz_xxxxyyyy[k] = fr * g11_yzz_xxxxyyyy[k] + 4.0 * f2t * gk_yzz_xxxyyyy[k];

                    g_xyzz_xxxxyyyz[k] = fr * g11_yzz_xxxxyyyz[k] + 4.0 * f2t * gk_yzz_xxxyyyz[k];

                    g_xyzz_xxxxyyzz[k] = fr * g11_yzz_xxxxyyzz[k] + 4.0 * f2t * gk_yzz_xxxyyzz[k];

                    g_xyzz_xxxxyzzz[k] = fr * g11_yzz_xxxxyzzz[k] + 4.0 * f2t * gk_yzz_xxxyzzz[k];

                    g_xyzz_xxxxzzzz[k] = fr * g11_yzz_xxxxzzzz[k] + 4.0 * f2t * gk_yzz_xxxzzzz[k];

                    g_xyzz_xxxyyyyy[k] = fr * g11_yzz_xxxyyyyy[k] + 3.0 * f2t * gk_yzz_xxyyyyy[k];

                    g_xyzz_xxxyyyyz[k] = fr * g11_yzz_xxxyyyyz[k] + 3.0 * f2t * gk_yzz_xxyyyyz[k];

                    g_xyzz_xxxyyyzz[k] = fr * g11_yzz_xxxyyyzz[k] + 3.0 * f2t * gk_yzz_xxyyyzz[k];

                    g_xyzz_xxxyyzzz[k] = fr * g11_yzz_xxxyyzzz[k] + 3.0 * f2t * gk_yzz_xxyyzzz[k];

                    g_xyzz_xxxyzzzz[k] = fr * g11_yzz_xxxyzzzz[k] + 3.0 * f2t * gk_yzz_xxyzzzz[k];

                    g_xyzz_xxxzzzzz[k] = fr * g11_yzz_xxxzzzzz[k] + 3.0 * f2t * gk_yzz_xxzzzzz[k];

                    g_xyzz_xxyyyyyy[k] = fr * g11_yzz_xxyyyyyy[k] + 2.0 * f2t * gk_yzz_xyyyyyy[k];

                    g_xyzz_xxyyyyyz[k] = fr * g11_yzz_xxyyyyyz[k] + 2.0 * f2t * gk_yzz_xyyyyyz[k];

                    g_xyzz_xxyyyyzz[k] = fr * g11_yzz_xxyyyyzz[k] + 2.0 * f2t * gk_yzz_xyyyyzz[k];

                    g_xyzz_xxyyyzzz[k] = fr * g11_yzz_xxyyyzzz[k] + 2.0 * f2t * gk_yzz_xyyyzzz[k];

                    g_xyzz_xxyyzzzz[k] = fr * g11_yzz_xxyyzzzz[k] + 2.0 * f2t * gk_yzz_xyyzzzz[k];

                    g_xyzz_xxyzzzzz[k] = fr * g11_yzz_xxyzzzzz[k] + 2.0 * f2t * gk_yzz_xyzzzzz[k];

                    g_xyzz_xxzzzzzz[k] = fr * g11_yzz_xxzzzzzz[k] + 2.0 * f2t * gk_yzz_xzzzzzz[k];

                    g_xyzz_xyyyyyyy[k] = fr * g11_yzz_xyyyyyyy[k] + f2t * gk_yzz_yyyyyyy[k];

                    g_xyzz_xyyyyyyz[k] = fr * g11_yzz_xyyyyyyz[k] + f2t * gk_yzz_yyyyyyz[k];

                    g_xyzz_xyyyyyzz[k] = fr * g11_yzz_xyyyyyzz[k] + f2t * gk_yzz_yyyyyzz[k];

                    g_xyzz_xyyyyzzz[k] = fr * g11_yzz_xyyyyzzz[k] + f2t * gk_yzz_yyyyzzz[k];

                    g_xyzz_xyyyzzzz[k] = fr * g11_yzz_xyyyzzzz[k] + f2t * gk_yzz_yyyzzzz[k];

                    g_xyzz_xyyzzzzz[k] = fr * g11_yzz_xyyzzzzz[k] + f2t * gk_yzz_yyzzzzz[k];

                    g_xyzz_xyzzzzzz[k] = fr * g11_yzz_xyzzzzzz[k] + f2t * gk_yzz_yzzzzzz[k];

                    g_xyzz_xzzzzzzz[k] = fr * g11_yzz_xzzzzzzz[k] + f2t * gk_yzz_zzzzzzz[k];

                    g_xyzz_yyyyyyyy[k] = fr * g11_yzz_yyyyyyyy[k];

                    g_xyzz_yyyyyyyz[k] = fr * g11_yzz_yyyyyyyz[k];

                    g_xyzz_yyyyyyzz[k] = fr * g11_yzz_yyyyyyzz[k];

                    g_xyzz_yyyyyzzz[k] = fr * g11_yzz_yyyyyzzz[k];

                    g_xyzz_yyyyzzzz[k] = fr * g11_yzz_yyyyzzzz[k];

                    g_xyzz_yyyzzzzz[k] = fr * g11_yzz_yyyzzzzz[k];

                    g_xyzz_yyzzzzzz[k] = fr * g11_yzz_yyzzzzzz[k];

                    g_xyzz_yzzzzzzz[k] = fr * g11_yzz_yzzzzzzz[k];

                    g_xyzz_zzzzzzzz[k] = fr * g11_yzz_zzzzzzzz[k];

                    g_xzzz_xxxxxxxx[k] = fr * g11_zzz_xxxxxxxx[k] + 8.0 * f2t * gk_zzz_xxxxxxx[k];

                    g_xzzz_xxxxxxxy[k] = fr * g11_zzz_xxxxxxxy[k] + 7.0 * f2t * gk_zzz_xxxxxxy[k];

                    g_xzzz_xxxxxxxz[k] = fr * g11_zzz_xxxxxxxz[k] + 7.0 * f2t * gk_zzz_xxxxxxz[k];

                    g_xzzz_xxxxxxyy[k] = fr * g11_zzz_xxxxxxyy[k] + 6.0 * f2t * gk_zzz_xxxxxyy[k];

                    g_xzzz_xxxxxxyz[k] = fr * g11_zzz_xxxxxxyz[k] + 6.0 * f2t * gk_zzz_xxxxxyz[k];

                    g_xzzz_xxxxxxzz[k] = fr * g11_zzz_xxxxxxzz[k] + 6.0 * f2t * gk_zzz_xxxxxzz[k];

                    g_xzzz_xxxxxyyy[k] = fr * g11_zzz_xxxxxyyy[k] + 5.0 * f2t * gk_zzz_xxxxyyy[k];

                    g_xzzz_xxxxxyyz[k] = fr * g11_zzz_xxxxxyyz[k] + 5.0 * f2t * gk_zzz_xxxxyyz[k];

                    g_xzzz_xxxxxyzz[k] = fr * g11_zzz_xxxxxyzz[k] + 5.0 * f2t * gk_zzz_xxxxyzz[k];

                    g_xzzz_xxxxxzzz[k] = fr * g11_zzz_xxxxxzzz[k] + 5.0 * f2t * gk_zzz_xxxxzzz[k];

                    g_xzzz_xxxxyyyy[k] = fr * g11_zzz_xxxxyyyy[k] + 4.0 * f2t * gk_zzz_xxxyyyy[k];

                    g_xzzz_xxxxyyyz[k] = fr * g11_zzz_xxxxyyyz[k] + 4.0 * f2t * gk_zzz_xxxyyyz[k];

                    g_xzzz_xxxxyyzz[k] = fr * g11_zzz_xxxxyyzz[k] + 4.0 * f2t * gk_zzz_xxxyyzz[k];

                    g_xzzz_xxxxyzzz[k] = fr * g11_zzz_xxxxyzzz[k] + 4.0 * f2t * gk_zzz_xxxyzzz[k];

                    g_xzzz_xxxxzzzz[k] = fr * g11_zzz_xxxxzzzz[k] + 4.0 * f2t * gk_zzz_xxxzzzz[k];

                    g_xzzz_xxxyyyyy[k] = fr * g11_zzz_xxxyyyyy[k] + 3.0 * f2t * gk_zzz_xxyyyyy[k];

                    g_xzzz_xxxyyyyz[k] = fr * g11_zzz_xxxyyyyz[k] + 3.0 * f2t * gk_zzz_xxyyyyz[k];

                    g_xzzz_xxxyyyzz[k] = fr * g11_zzz_xxxyyyzz[k] + 3.0 * f2t * gk_zzz_xxyyyzz[k];

                    g_xzzz_xxxyyzzz[k] = fr * g11_zzz_xxxyyzzz[k] + 3.0 * f2t * gk_zzz_xxyyzzz[k];

                    g_xzzz_xxxyzzzz[k] = fr * g11_zzz_xxxyzzzz[k] + 3.0 * f2t * gk_zzz_xxyzzzz[k];

                    g_xzzz_xxxzzzzz[k] = fr * g11_zzz_xxxzzzzz[k] + 3.0 * f2t * gk_zzz_xxzzzzz[k];

                    g_xzzz_xxyyyyyy[k] = fr * g11_zzz_xxyyyyyy[k] + 2.0 * f2t * gk_zzz_xyyyyyy[k];

                    g_xzzz_xxyyyyyz[k] = fr * g11_zzz_xxyyyyyz[k] + 2.0 * f2t * gk_zzz_xyyyyyz[k];

                    g_xzzz_xxyyyyzz[k] = fr * g11_zzz_xxyyyyzz[k] + 2.0 * f2t * gk_zzz_xyyyyzz[k];

                    g_xzzz_xxyyyzzz[k] = fr * g11_zzz_xxyyyzzz[k] + 2.0 * f2t * gk_zzz_xyyyzzz[k];

                    g_xzzz_xxyyzzzz[k] = fr * g11_zzz_xxyyzzzz[k] + 2.0 * f2t * gk_zzz_xyyzzzz[k];

                    g_xzzz_xxyzzzzz[k] = fr * g11_zzz_xxyzzzzz[k] + 2.0 * f2t * gk_zzz_xyzzzzz[k];

                    g_xzzz_xxzzzzzz[k] = fr * g11_zzz_xxzzzzzz[k] + 2.0 * f2t * gk_zzz_xzzzzzz[k];

                    g_xzzz_xyyyyyyy[k] = fr * g11_zzz_xyyyyyyy[k] + f2t * gk_zzz_yyyyyyy[k];

                    g_xzzz_xyyyyyyz[k] = fr * g11_zzz_xyyyyyyz[k] + f2t * gk_zzz_yyyyyyz[k];

                    g_xzzz_xyyyyyzz[k] = fr * g11_zzz_xyyyyyzz[k] + f2t * gk_zzz_yyyyyzz[k];

                    g_xzzz_xyyyyzzz[k] = fr * g11_zzz_xyyyyzzz[k] + f2t * gk_zzz_yyyyzzz[k];

                    g_xzzz_xyyyzzzz[k] = fr * g11_zzz_xyyyzzzz[k] + f2t * gk_zzz_yyyzzzz[k];

                    g_xzzz_xyyzzzzz[k] = fr * g11_zzz_xyyzzzzz[k] + f2t * gk_zzz_yyzzzzz[k];

                    g_xzzz_xyzzzzzz[k] = fr * g11_zzz_xyzzzzzz[k] + f2t * gk_zzz_yzzzzzz[k];

                    g_xzzz_xzzzzzzz[k] = fr * g11_zzz_xzzzzzzz[k] + f2t * gk_zzz_zzzzzzz[k];

                    g_xzzz_yyyyyyyy[k] = fr * g11_zzz_yyyyyyyy[k];

                    g_xzzz_yyyyyyyz[k] = fr * g11_zzz_yyyyyyyz[k];

                    g_xzzz_yyyyyyzz[k] = fr * g11_zzz_yyyyyyzz[k];

                    g_xzzz_yyyyyzzz[k] = fr * g11_zzz_yyyyyzzz[k];

                    g_xzzz_yyyyzzzz[k] = fr * g11_zzz_yyyyzzzz[k];

                    g_xzzz_yyyzzzzz[k] = fr * g11_zzz_yyyzzzzz[k];

                    g_xzzz_yyzzzzzz[k] = fr * g11_zzz_yyzzzzzz[k];

                    g_xzzz_yzzzzzzz[k] = fr * g11_zzz_yzzzzzzz[k];

                    g_xzzz_zzzzzzzz[k] = fr * g11_zzz_zzzzzzzz[k];

                    // leading y component

                    fr = way[k];

                    g_yyyy_xxxxxxxx[k] = fr * g11_yyy_xxxxxxxx[k] + f2g * (3.0 * g20_yy_xxxxxxxx[k] - 3.0 * fgz * g21_yy_xxxxxxxx[k]);

                    g_yyyy_xxxxxxxy[k] = fr * g11_yyy_xxxxxxxy[k] + f2g * (3.0 * g20_yy_xxxxxxxy[k] - 3.0 * fgz * g21_yy_xxxxxxxy[k]) + f2t * gk_yyy_xxxxxxx[k];

                    g_yyyy_xxxxxxxz[k] = fr * g11_yyy_xxxxxxxz[k] + f2g * (3.0 * g20_yy_xxxxxxxz[k] - 3.0 * fgz * g21_yy_xxxxxxxz[k]);

                    g_yyyy_xxxxxxyy[k] = fr * g11_yyy_xxxxxxyy[k] + f2g * (3.0 * g20_yy_xxxxxxyy[k] - 3.0 * fgz * g21_yy_xxxxxxyy[k]) + 2.0 * f2t * gk_yyy_xxxxxxy[k];

                    g_yyyy_xxxxxxyz[k] = fr * g11_yyy_xxxxxxyz[k] + f2g * (3.0 * g20_yy_xxxxxxyz[k] - 3.0 * fgz * g21_yy_xxxxxxyz[k]) + f2t * gk_yyy_xxxxxxz[k];

                    g_yyyy_xxxxxxzz[k] = fr * g11_yyy_xxxxxxzz[k] + f2g * (3.0 * g20_yy_xxxxxxzz[k] - 3.0 * fgz * g21_yy_xxxxxxzz[k]);

                    g_yyyy_xxxxxyyy[k] = fr * g11_yyy_xxxxxyyy[k] + f2g * (3.0 * g20_yy_xxxxxyyy[k] - 3.0 * fgz * g21_yy_xxxxxyyy[k]) + 3.0 * f2t * gk_yyy_xxxxxyy[k];

                    g_yyyy_xxxxxyyz[k] = fr * g11_yyy_xxxxxyyz[k] + f2g * (3.0 * g20_yy_xxxxxyyz[k] - 3.0 * fgz * g21_yy_xxxxxyyz[k]) + 2.0 * f2t * gk_yyy_xxxxxyz[k];

                    g_yyyy_xxxxxyzz[k] = fr * g11_yyy_xxxxxyzz[k] + f2g * (3.0 * g20_yy_xxxxxyzz[k] - 3.0 * fgz * g21_yy_xxxxxyzz[k]) + f2t * gk_yyy_xxxxxzz[k];

                    g_yyyy_xxxxxzzz[k] = fr * g11_yyy_xxxxxzzz[k] + f2g * (3.0 * g20_yy_xxxxxzzz[k] - 3.0 * fgz * g21_yy_xxxxxzzz[k]);

                    g_yyyy_xxxxyyyy[k] = fr * g11_yyy_xxxxyyyy[k] + f2g * (3.0 * g20_yy_xxxxyyyy[k] - 3.0 * fgz * g21_yy_xxxxyyyy[k]) + 4.0 * f2t * gk_yyy_xxxxyyy[k];

                    g_yyyy_xxxxyyyz[k] = fr * g11_yyy_xxxxyyyz[k] + f2g * (3.0 * g20_yy_xxxxyyyz[k] - 3.0 * fgz * g21_yy_xxxxyyyz[k]) + 3.0 * f2t * gk_yyy_xxxxyyz[k];

                    g_yyyy_xxxxyyzz[k] = fr * g11_yyy_xxxxyyzz[k] + f2g * (3.0 * g20_yy_xxxxyyzz[k] - 3.0 * fgz * g21_yy_xxxxyyzz[k]) + 2.0 * f2t * gk_yyy_xxxxyzz[k];

                    g_yyyy_xxxxyzzz[k] = fr * g11_yyy_xxxxyzzz[k] + f2g * (3.0 * g20_yy_xxxxyzzz[k] - 3.0 * fgz * g21_yy_xxxxyzzz[k]) + f2t * gk_yyy_xxxxzzz[k];

                    g_yyyy_xxxxzzzz[k] = fr * g11_yyy_xxxxzzzz[k] + f2g * (3.0 * g20_yy_xxxxzzzz[k] - 3.0 * fgz * g21_yy_xxxxzzzz[k]);

                    g_yyyy_xxxyyyyy[k] = fr * g11_yyy_xxxyyyyy[k] + f2g * (3.0 * g20_yy_xxxyyyyy[k] - 3.0 * fgz * g21_yy_xxxyyyyy[k]) + 5.0 * f2t * gk_yyy_xxxyyyy[k];

                    g_yyyy_xxxyyyyz[k] = fr * g11_yyy_xxxyyyyz[k] + f2g * (3.0 * g20_yy_xxxyyyyz[k] - 3.0 * fgz * g21_yy_xxxyyyyz[k]) + 4.0 * f2t * gk_yyy_xxxyyyz[k];

                    g_yyyy_xxxyyyzz[k] = fr * g11_yyy_xxxyyyzz[k] + f2g * (3.0 * g20_yy_xxxyyyzz[k] - 3.0 * fgz * g21_yy_xxxyyyzz[k]) + 3.0 * f2t * gk_yyy_xxxyyzz[k];

                    g_yyyy_xxxyyzzz[k] = fr * g11_yyy_xxxyyzzz[k] + f2g * (3.0 * g20_yy_xxxyyzzz[k] - 3.0 * fgz * g21_yy_xxxyyzzz[k]) + 2.0 * f2t * gk_yyy_xxxyzzz[k];

                    g_yyyy_xxxyzzzz[k] = fr * g11_yyy_xxxyzzzz[k] + f2g * (3.0 * g20_yy_xxxyzzzz[k] - 3.0 * fgz * g21_yy_xxxyzzzz[k]) + f2t * gk_yyy_xxxzzzz[k];

                    g_yyyy_xxxzzzzz[k] = fr * g11_yyy_xxxzzzzz[k] + f2g * (3.0 * g20_yy_xxxzzzzz[k] - 3.0 * fgz * g21_yy_xxxzzzzz[k]);

                    g_yyyy_xxyyyyyy[k] = fr * g11_yyy_xxyyyyyy[k] + f2g * (3.0 * g20_yy_xxyyyyyy[k] - 3.0 * fgz * g21_yy_xxyyyyyy[k]) + 6.0 * f2t * gk_yyy_xxyyyyy[k];

                    g_yyyy_xxyyyyyz[k] = fr * g11_yyy_xxyyyyyz[k] + f2g * (3.0 * g20_yy_xxyyyyyz[k] - 3.0 * fgz * g21_yy_xxyyyyyz[k]) + 5.0 * f2t * gk_yyy_xxyyyyz[k];

                    g_yyyy_xxyyyyzz[k] = fr * g11_yyy_xxyyyyzz[k] + f2g * (3.0 * g20_yy_xxyyyyzz[k] - 3.0 * fgz * g21_yy_xxyyyyzz[k]) + 4.0 * f2t * gk_yyy_xxyyyzz[k];

                    g_yyyy_xxyyyzzz[k] = fr * g11_yyy_xxyyyzzz[k] + f2g * (3.0 * g20_yy_xxyyyzzz[k] - 3.0 * fgz * g21_yy_xxyyyzzz[k]) + 3.0 * f2t * gk_yyy_xxyyzzz[k];

                    g_yyyy_xxyyzzzz[k] = fr * g11_yyy_xxyyzzzz[k] + f2g * (3.0 * g20_yy_xxyyzzzz[k] - 3.0 * fgz * g21_yy_xxyyzzzz[k]) + 2.0 * f2t * gk_yyy_xxyzzzz[k];

                    g_yyyy_xxyzzzzz[k] = fr * g11_yyy_xxyzzzzz[k] + f2g * (3.0 * g20_yy_xxyzzzzz[k] - 3.0 * fgz * g21_yy_xxyzzzzz[k]) + f2t * gk_yyy_xxzzzzz[k];

                    g_yyyy_xxzzzzzz[k] = fr * g11_yyy_xxzzzzzz[k] + f2g * (3.0 * g20_yy_xxzzzzzz[k] - 3.0 * fgz * g21_yy_xxzzzzzz[k]);

                    g_yyyy_xyyyyyyy[k] = fr * g11_yyy_xyyyyyyy[k] + f2g * (3.0 * g20_yy_xyyyyyyy[k] - 3.0 * fgz * g21_yy_xyyyyyyy[k]) + 7.0 * f2t * gk_yyy_xyyyyyy[k];

                    g_yyyy_xyyyyyyz[k] = fr * g11_yyy_xyyyyyyz[k] + f2g * (3.0 * g20_yy_xyyyyyyz[k] - 3.0 * fgz * g21_yy_xyyyyyyz[k]) + 6.0 * f2t * gk_yyy_xyyyyyz[k];

                    g_yyyy_xyyyyyzz[k] = fr * g11_yyy_xyyyyyzz[k] + f2g * (3.0 * g20_yy_xyyyyyzz[k] - 3.0 * fgz * g21_yy_xyyyyyzz[k]) + 5.0 * f2t * gk_yyy_xyyyyzz[k];

                    g_yyyy_xyyyyzzz[k] = fr * g11_yyy_xyyyyzzz[k] + f2g * (3.0 * g20_yy_xyyyyzzz[k] - 3.0 * fgz * g21_yy_xyyyyzzz[k]) + 4.0 * f2t * gk_yyy_xyyyzzz[k];

                    g_yyyy_xyyyzzzz[k] = fr * g11_yyy_xyyyzzzz[k] + f2g * (3.0 * g20_yy_xyyyzzzz[k] - 3.0 * fgz * g21_yy_xyyyzzzz[k]) + 3.0 * f2t * gk_yyy_xyyzzzz[k];

                    g_yyyy_xyyzzzzz[k] = fr * g11_yyy_xyyzzzzz[k] + f2g * (3.0 * g20_yy_xyyzzzzz[k] - 3.0 * fgz * g21_yy_xyyzzzzz[k]) + 2.0 * f2t * gk_yyy_xyzzzzz[k];

                    g_yyyy_xyzzzzzz[k] = fr * g11_yyy_xyzzzzzz[k] + f2g * (3.0 * g20_yy_xyzzzzzz[k] - 3.0 * fgz * g21_yy_xyzzzzzz[k]) + f2t * gk_yyy_xzzzzzz[k];

                    g_yyyy_xzzzzzzz[k] = fr * g11_yyy_xzzzzzzz[k] + f2g * (3.0 * g20_yy_xzzzzzzz[k] - 3.0 * fgz * g21_yy_xzzzzzzz[k]);

                    g_yyyy_yyyyyyyy[k] = fr * g11_yyy_yyyyyyyy[k] + f2g * (3.0 * g20_yy_yyyyyyyy[k] - 3.0 * fgz * g21_yy_yyyyyyyy[k]) + 8.0 * f2t * gk_yyy_yyyyyyy[k];

                    g_yyyy_yyyyyyyz[k] = fr * g11_yyy_yyyyyyyz[k] + f2g * (3.0 * g20_yy_yyyyyyyz[k] - 3.0 * fgz * g21_yy_yyyyyyyz[k]) + 7.0 * f2t * gk_yyy_yyyyyyz[k];

                    g_yyyy_yyyyyyzz[k] = fr * g11_yyy_yyyyyyzz[k] + f2g * (3.0 * g20_yy_yyyyyyzz[k] - 3.0 * fgz * g21_yy_yyyyyyzz[k]) + 6.0 * f2t * gk_yyy_yyyyyzz[k];

                    g_yyyy_yyyyyzzz[k] = fr * g11_yyy_yyyyyzzz[k] + f2g * (3.0 * g20_yy_yyyyyzzz[k] - 3.0 * fgz * g21_yy_yyyyyzzz[k]) + 5.0 * f2t * gk_yyy_yyyyzzz[k];

                    g_yyyy_yyyyzzzz[k] = fr * g11_yyy_yyyyzzzz[k] + f2g * (3.0 * g20_yy_yyyyzzzz[k] - 3.0 * fgz * g21_yy_yyyyzzzz[k]) + 4.0 * f2t * gk_yyy_yyyzzzz[k];

                    g_yyyy_yyyzzzzz[k] = fr * g11_yyy_yyyzzzzz[k] + f2g * (3.0 * g20_yy_yyyzzzzz[k] - 3.0 * fgz * g21_yy_yyyzzzzz[k]) + 3.0 * f2t * gk_yyy_yyzzzzz[k];

                    g_yyyy_yyzzzzzz[k] = fr * g11_yyy_yyzzzzzz[k] + f2g * (3.0 * g20_yy_yyzzzzzz[k] - 3.0 * fgz * g21_yy_yyzzzzzz[k]) + 2.0 * f2t * gk_yyy_yzzzzzz[k];

                    g_yyyy_yzzzzzzz[k] = fr * g11_yyy_yzzzzzzz[k] + f2g * (3.0 * g20_yy_yzzzzzzz[k] - 3.0 * fgz * g21_yy_yzzzzzzz[k]) + f2t * gk_yyy_zzzzzzz[k];

                    g_yyyy_zzzzzzzz[k] = fr * g11_yyy_zzzzzzzz[k] + f2g * (3.0 * g20_yy_zzzzzzzz[k] - 3.0 * fgz * g21_yy_zzzzzzzz[k]);

                    g_yyyz_xxxxxxxx[k] = fr * g11_yyz_xxxxxxxx[k] + f2g * (2.0 * g20_yz_xxxxxxxx[k] - 2.0 * fgz * g21_yz_xxxxxxxx[k]);

                    g_yyyz_xxxxxxxy[k] = fr * g11_yyz_xxxxxxxy[k] + f2g * (2.0 * g20_yz_xxxxxxxy[k] - 2.0 * fgz * g21_yz_xxxxxxxy[k]) + f2t * gk_yyz_xxxxxxx[k];

                    g_yyyz_xxxxxxxz[k] = fr * g11_yyz_xxxxxxxz[k] + f2g * (2.0 * g20_yz_xxxxxxxz[k] - 2.0 * fgz * g21_yz_xxxxxxxz[k]);

                    g_yyyz_xxxxxxyy[k] = fr * g11_yyz_xxxxxxyy[k] + f2g * (2.0 * g20_yz_xxxxxxyy[k] - 2.0 * fgz * g21_yz_xxxxxxyy[k]) + 2.0 * f2t * gk_yyz_xxxxxxy[k];

                    g_yyyz_xxxxxxyz[k] = fr * g11_yyz_xxxxxxyz[k] + f2g * (2.0 * g20_yz_xxxxxxyz[k] - 2.0 * fgz * g21_yz_xxxxxxyz[k]) + f2t * gk_yyz_xxxxxxz[k];

                    g_yyyz_xxxxxxzz[k] = fr * g11_yyz_xxxxxxzz[k] + f2g * (2.0 * g20_yz_xxxxxxzz[k] - 2.0 * fgz * g21_yz_xxxxxxzz[k]);

                    g_yyyz_xxxxxyyy[k] = fr * g11_yyz_xxxxxyyy[k] + f2g * (2.0 * g20_yz_xxxxxyyy[k] - 2.0 * fgz * g21_yz_xxxxxyyy[k]) + 3.0 * f2t * gk_yyz_xxxxxyy[k];

                    g_yyyz_xxxxxyyz[k] = fr * g11_yyz_xxxxxyyz[k] + f2g * (2.0 * g20_yz_xxxxxyyz[k] - 2.0 * fgz * g21_yz_xxxxxyyz[k]) + 2.0 * f2t * gk_yyz_xxxxxyz[k];

                    g_yyyz_xxxxxyzz[k] = fr * g11_yyz_xxxxxyzz[k] + f2g * (2.0 * g20_yz_xxxxxyzz[k] - 2.0 * fgz * g21_yz_xxxxxyzz[k]) + f2t * gk_yyz_xxxxxzz[k];

                    g_yyyz_xxxxxzzz[k] = fr * g11_yyz_xxxxxzzz[k] + f2g * (2.0 * g20_yz_xxxxxzzz[k] - 2.0 * fgz * g21_yz_xxxxxzzz[k]);

                    g_yyyz_xxxxyyyy[k] = fr * g11_yyz_xxxxyyyy[k] + f2g * (2.0 * g20_yz_xxxxyyyy[k] - 2.0 * fgz * g21_yz_xxxxyyyy[k]) + 4.0 * f2t * gk_yyz_xxxxyyy[k];

                    g_yyyz_xxxxyyyz[k] = fr * g11_yyz_xxxxyyyz[k] + f2g * (2.0 * g20_yz_xxxxyyyz[k] - 2.0 * fgz * g21_yz_xxxxyyyz[k]) + 3.0 * f2t * gk_yyz_xxxxyyz[k];

                    g_yyyz_xxxxyyzz[k] = fr * g11_yyz_xxxxyyzz[k] + f2g * (2.0 * g20_yz_xxxxyyzz[k] - 2.0 * fgz * g21_yz_xxxxyyzz[k]) + 2.0 * f2t * gk_yyz_xxxxyzz[k];

                    g_yyyz_xxxxyzzz[k] = fr * g11_yyz_xxxxyzzz[k] + f2g * (2.0 * g20_yz_xxxxyzzz[k] - 2.0 * fgz * g21_yz_xxxxyzzz[k]) + f2t * gk_yyz_xxxxzzz[k];

                    g_yyyz_xxxxzzzz[k] = fr * g11_yyz_xxxxzzzz[k] + f2g * (2.0 * g20_yz_xxxxzzzz[k] - 2.0 * fgz * g21_yz_xxxxzzzz[k]);

                    g_yyyz_xxxyyyyy[k] = fr * g11_yyz_xxxyyyyy[k] + f2g * (2.0 * g20_yz_xxxyyyyy[k] - 2.0 * fgz * g21_yz_xxxyyyyy[k]) + 5.0 * f2t * gk_yyz_xxxyyyy[k];

                    g_yyyz_xxxyyyyz[k] = fr * g11_yyz_xxxyyyyz[k] + f2g * (2.0 * g20_yz_xxxyyyyz[k] - 2.0 * fgz * g21_yz_xxxyyyyz[k]) + 4.0 * f2t * gk_yyz_xxxyyyz[k];

                    g_yyyz_xxxyyyzz[k] = fr * g11_yyz_xxxyyyzz[k] + f2g * (2.0 * g20_yz_xxxyyyzz[k] - 2.0 * fgz * g21_yz_xxxyyyzz[k]) + 3.0 * f2t * gk_yyz_xxxyyzz[k];

                    g_yyyz_xxxyyzzz[k] = fr * g11_yyz_xxxyyzzz[k] + f2g * (2.0 * g20_yz_xxxyyzzz[k] - 2.0 * fgz * g21_yz_xxxyyzzz[k]) + 2.0 * f2t * gk_yyz_xxxyzzz[k];

                    g_yyyz_xxxyzzzz[k] = fr * g11_yyz_xxxyzzzz[k] + f2g * (2.0 * g20_yz_xxxyzzzz[k] - 2.0 * fgz * g21_yz_xxxyzzzz[k]) + f2t * gk_yyz_xxxzzzz[k];

                    g_yyyz_xxxzzzzz[k] = fr * g11_yyz_xxxzzzzz[k] + f2g * (2.0 * g20_yz_xxxzzzzz[k] - 2.0 * fgz * g21_yz_xxxzzzzz[k]);

                    g_yyyz_xxyyyyyy[k] = fr * g11_yyz_xxyyyyyy[k] + f2g * (2.0 * g20_yz_xxyyyyyy[k] - 2.0 * fgz * g21_yz_xxyyyyyy[k]) + 6.0 * f2t * gk_yyz_xxyyyyy[k];

                    g_yyyz_xxyyyyyz[k] = fr * g11_yyz_xxyyyyyz[k] + f2g * (2.0 * g20_yz_xxyyyyyz[k] - 2.0 * fgz * g21_yz_xxyyyyyz[k]) + 5.0 * f2t * gk_yyz_xxyyyyz[k];

                    g_yyyz_xxyyyyzz[k] = fr * g11_yyz_xxyyyyzz[k] + f2g * (2.0 * g20_yz_xxyyyyzz[k] - 2.0 * fgz * g21_yz_xxyyyyzz[k]) + 4.0 * f2t * gk_yyz_xxyyyzz[k];

                    g_yyyz_xxyyyzzz[k] = fr * g11_yyz_xxyyyzzz[k] + f2g * (2.0 * g20_yz_xxyyyzzz[k] - 2.0 * fgz * g21_yz_xxyyyzzz[k]) + 3.0 * f2t * gk_yyz_xxyyzzz[k];

                    g_yyyz_xxyyzzzz[k] = fr * g11_yyz_xxyyzzzz[k] + f2g * (2.0 * g20_yz_xxyyzzzz[k] - 2.0 * fgz * g21_yz_xxyyzzzz[k]) + 2.0 * f2t * gk_yyz_xxyzzzz[k];

                    g_yyyz_xxyzzzzz[k] = fr * g11_yyz_xxyzzzzz[k] + f2g * (2.0 * g20_yz_xxyzzzzz[k] - 2.0 * fgz * g21_yz_xxyzzzzz[k]) + f2t * gk_yyz_xxzzzzz[k];

                    g_yyyz_xxzzzzzz[k] = fr * g11_yyz_xxzzzzzz[k] + f2g * (2.0 * g20_yz_xxzzzzzz[k] - 2.0 * fgz * g21_yz_xxzzzzzz[k]);

                    g_yyyz_xyyyyyyy[k] = fr * g11_yyz_xyyyyyyy[k] + f2g * (2.0 * g20_yz_xyyyyyyy[k] - 2.0 * fgz * g21_yz_xyyyyyyy[k]) + 7.0 * f2t * gk_yyz_xyyyyyy[k];

                    g_yyyz_xyyyyyyz[k] = fr * g11_yyz_xyyyyyyz[k] + f2g * (2.0 * g20_yz_xyyyyyyz[k] - 2.0 * fgz * g21_yz_xyyyyyyz[k]) + 6.0 * f2t * gk_yyz_xyyyyyz[k];

                    g_yyyz_xyyyyyzz[k] = fr * g11_yyz_xyyyyyzz[k] + f2g * (2.0 * g20_yz_xyyyyyzz[k] - 2.0 * fgz * g21_yz_xyyyyyzz[k]) + 5.0 * f2t * gk_yyz_xyyyyzz[k];

                    g_yyyz_xyyyyzzz[k] = fr * g11_yyz_xyyyyzzz[k] + f2g * (2.0 * g20_yz_xyyyyzzz[k] - 2.0 * fgz * g21_yz_xyyyyzzz[k]) + 4.0 * f2t * gk_yyz_xyyyzzz[k];

                    g_yyyz_xyyyzzzz[k] = fr * g11_yyz_xyyyzzzz[k] + f2g * (2.0 * g20_yz_xyyyzzzz[k] - 2.0 * fgz * g21_yz_xyyyzzzz[k]) + 3.0 * f2t * gk_yyz_xyyzzzz[k];

                    g_yyyz_xyyzzzzz[k] = fr * g11_yyz_xyyzzzzz[k] + f2g * (2.0 * g20_yz_xyyzzzzz[k] - 2.0 * fgz * g21_yz_xyyzzzzz[k]) + 2.0 * f2t * gk_yyz_xyzzzzz[k];

                    g_yyyz_xyzzzzzz[k] = fr * g11_yyz_xyzzzzzz[k] + f2g * (2.0 * g20_yz_xyzzzzzz[k] - 2.0 * fgz * g21_yz_xyzzzzzz[k]) + f2t * gk_yyz_xzzzzzz[k];

                    g_yyyz_xzzzzzzz[k] = fr * g11_yyz_xzzzzzzz[k] + f2g * (2.0 * g20_yz_xzzzzzzz[k] - 2.0 * fgz * g21_yz_xzzzzzzz[k]);

                    g_yyyz_yyyyyyyy[k] = fr * g11_yyz_yyyyyyyy[k] + f2g * (2.0 * g20_yz_yyyyyyyy[k] - 2.0 * fgz * g21_yz_yyyyyyyy[k]) + 8.0 * f2t * gk_yyz_yyyyyyy[k];

                    g_yyyz_yyyyyyyz[k] = fr * g11_yyz_yyyyyyyz[k] + f2g * (2.0 * g20_yz_yyyyyyyz[k] - 2.0 * fgz * g21_yz_yyyyyyyz[k]) + 7.0 * f2t * gk_yyz_yyyyyyz[k];

                    g_yyyz_yyyyyyzz[k] = fr * g11_yyz_yyyyyyzz[k] + f2g * (2.0 * g20_yz_yyyyyyzz[k] - 2.0 * fgz * g21_yz_yyyyyyzz[k]) + 6.0 * f2t * gk_yyz_yyyyyzz[k];

                    g_yyyz_yyyyyzzz[k] = fr * g11_yyz_yyyyyzzz[k] + f2g * (2.0 * g20_yz_yyyyyzzz[k] - 2.0 * fgz * g21_yz_yyyyyzzz[k]) + 5.0 * f2t * gk_yyz_yyyyzzz[k];

                    g_yyyz_yyyyzzzz[k] = fr * g11_yyz_yyyyzzzz[k] + f2g * (2.0 * g20_yz_yyyyzzzz[k] - 2.0 * fgz * g21_yz_yyyyzzzz[k]) + 4.0 * f2t * gk_yyz_yyyzzzz[k];

                    g_yyyz_yyyzzzzz[k] = fr * g11_yyz_yyyzzzzz[k] + f2g * (2.0 * g20_yz_yyyzzzzz[k] - 2.0 * fgz * g21_yz_yyyzzzzz[k]) + 3.0 * f2t * gk_yyz_yyzzzzz[k];

                    g_yyyz_yyzzzzzz[k] = fr * g11_yyz_yyzzzzzz[k] + f2g * (2.0 * g20_yz_yyzzzzzz[k] - 2.0 * fgz * g21_yz_yyzzzzzz[k]) + 2.0 * f2t * gk_yyz_yzzzzzz[k];

                    g_yyyz_yzzzzzzz[k] = fr * g11_yyz_yzzzzzzz[k] + f2g * (2.0 * g20_yz_yzzzzzzz[k] - 2.0 * fgz * g21_yz_yzzzzzzz[k]) + f2t * gk_yyz_zzzzzzz[k];

                    g_yyyz_zzzzzzzz[k] = fr * g11_yyz_zzzzzzzz[k] + f2g * (2.0 * g20_yz_zzzzzzzz[k] - 2.0 * fgz * g21_yz_zzzzzzzz[k]);

                    g_yyzz_xxxxxxxx[k] = fr * g11_yzz_xxxxxxxx[k] + f2g * (g20_zz_xxxxxxxx[k] - fgz * g21_zz_xxxxxxxx[k]);

                    g_yyzz_xxxxxxxy[k] = fr * g11_yzz_xxxxxxxy[k] + f2g * (g20_zz_xxxxxxxy[k] - fgz * g21_zz_xxxxxxxy[k]) + f2t * gk_yzz_xxxxxxx[k];

                    g_yyzz_xxxxxxxz[k] = fr * g11_yzz_xxxxxxxz[k] + f2g * (g20_zz_xxxxxxxz[k] - fgz * g21_zz_xxxxxxxz[k]);

                    g_yyzz_xxxxxxyy[k] = fr * g11_yzz_xxxxxxyy[k] + f2g * (g20_zz_xxxxxxyy[k] - fgz * g21_zz_xxxxxxyy[k]) + 2.0 * f2t * gk_yzz_xxxxxxy[k];

                    g_yyzz_xxxxxxyz[k] = fr * g11_yzz_xxxxxxyz[k] + f2g * (g20_zz_xxxxxxyz[k] - fgz * g21_zz_xxxxxxyz[k]) + f2t * gk_yzz_xxxxxxz[k];

                    g_yyzz_xxxxxxzz[k] = fr * g11_yzz_xxxxxxzz[k] + f2g * (g20_zz_xxxxxxzz[k] - fgz * g21_zz_xxxxxxzz[k]);

                    g_yyzz_xxxxxyyy[k] = fr * g11_yzz_xxxxxyyy[k] + f2g * (g20_zz_xxxxxyyy[k] - fgz * g21_zz_xxxxxyyy[k]) + 3.0 * f2t * gk_yzz_xxxxxyy[k];

                    g_yyzz_xxxxxyyz[k] = fr * g11_yzz_xxxxxyyz[k] + f2g * (g20_zz_xxxxxyyz[k] - fgz * g21_zz_xxxxxyyz[k]) + 2.0 * f2t * gk_yzz_xxxxxyz[k];

                    g_yyzz_xxxxxyzz[k] = fr * g11_yzz_xxxxxyzz[k] + f2g * (g20_zz_xxxxxyzz[k] - fgz * g21_zz_xxxxxyzz[k]) + f2t * gk_yzz_xxxxxzz[k];

                    g_yyzz_xxxxxzzz[k] = fr * g11_yzz_xxxxxzzz[k] + f2g * (g20_zz_xxxxxzzz[k] - fgz * g21_zz_xxxxxzzz[k]);

                    g_yyzz_xxxxyyyy[k] = fr * g11_yzz_xxxxyyyy[k] + f2g * (g20_zz_xxxxyyyy[k] - fgz * g21_zz_xxxxyyyy[k]) + 4.0 * f2t * gk_yzz_xxxxyyy[k];

                    g_yyzz_xxxxyyyz[k] = fr * g11_yzz_xxxxyyyz[k] + f2g * (g20_zz_xxxxyyyz[k] - fgz * g21_zz_xxxxyyyz[k]) + 3.0 * f2t * gk_yzz_xxxxyyz[k];

                    g_yyzz_xxxxyyzz[k] = fr * g11_yzz_xxxxyyzz[k] + f2g * (g20_zz_xxxxyyzz[k] - fgz * g21_zz_xxxxyyzz[k]) + 2.0 * f2t * gk_yzz_xxxxyzz[k];

                    g_yyzz_xxxxyzzz[k] = fr * g11_yzz_xxxxyzzz[k] + f2g * (g20_zz_xxxxyzzz[k] - fgz * g21_zz_xxxxyzzz[k]) + f2t * gk_yzz_xxxxzzz[k];

                    g_yyzz_xxxxzzzz[k] = fr * g11_yzz_xxxxzzzz[k] + f2g * (g20_zz_xxxxzzzz[k] - fgz * g21_zz_xxxxzzzz[k]);

                    g_yyzz_xxxyyyyy[k] = fr * g11_yzz_xxxyyyyy[k] + f2g * (g20_zz_xxxyyyyy[k] - fgz * g21_zz_xxxyyyyy[k]) + 5.0 * f2t * gk_yzz_xxxyyyy[k];

                    g_yyzz_xxxyyyyz[k] = fr * g11_yzz_xxxyyyyz[k] + f2g * (g20_zz_xxxyyyyz[k] - fgz * g21_zz_xxxyyyyz[k]) + 4.0 * f2t * gk_yzz_xxxyyyz[k];

                    g_yyzz_xxxyyyzz[k] = fr * g11_yzz_xxxyyyzz[k] + f2g * (g20_zz_xxxyyyzz[k] - fgz * g21_zz_xxxyyyzz[k]) + 3.0 * f2t * gk_yzz_xxxyyzz[k];

                    g_yyzz_xxxyyzzz[k] = fr * g11_yzz_xxxyyzzz[k] + f2g * (g20_zz_xxxyyzzz[k] - fgz * g21_zz_xxxyyzzz[k]) + 2.0 * f2t * gk_yzz_xxxyzzz[k];

                    g_yyzz_xxxyzzzz[k] = fr * g11_yzz_xxxyzzzz[k] + f2g * (g20_zz_xxxyzzzz[k] - fgz * g21_zz_xxxyzzzz[k]) + f2t * gk_yzz_xxxzzzz[k];

                    g_yyzz_xxxzzzzz[k] = fr * g11_yzz_xxxzzzzz[k] + f2g * (g20_zz_xxxzzzzz[k] - fgz * g21_zz_xxxzzzzz[k]);

                    g_yyzz_xxyyyyyy[k] = fr * g11_yzz_xxyyyyyy[k] + f2g * (g20_zz_xxyyyyyy[k] - fgz * g21_zz_xxyyyyyy[k]) + 6.0 * f2t * gk_yzz_xxyyyyy[k];

                    g_yyzz_xxyyyyyz[k] = fr * g11_yzz_xxyyyyyz[k] + f2g * (g20_zz_xxyyyyyz[k] - fgz * g21_zz_xxyyyyyz[k]) + 5.0 * f2t * gk_yzz_xxyyyyz[k];

                    g_yyzz_xxyyyyzz[k] = fr * g11_yzz_xxyyyyzz[k] + f2g * (g20_zz_xxyyyyzz[k] - fgz * g21_zz_xxyyyyzz[k]) + 4.0 * f2t * gk_yzz_xxyyyzz[k];

                    g_yyzz_xxyyyzzz[k] = fr * g11_yzz_xxyyyzzz[k] + f2g * (g20_zz_xxyyyzzz[k] - fgz * g21_zz_xxyyyzzz[k]) + 3.0 * f2t * gk_yzz_xxyyzzz[k];

                    g_yyzz_xxyyzzzz[k] = fr * g11_yzz_xxyyzzzz[k] + f2g * (g20_zz_xxyyzzzz[k] - fgz * g21_zz_xxyyzzzz[k]) + 2.0 * f2t * gk_yzz_xxyzzzz[k];

                    g_yyzz_xxyzzzzz[k] = fr * g11_yzz_xxyzzzzz[k] + f2g * (g20_zz_xxyzzzzz[k] - fgz * g21_zz_xxyzzzzz[k]) + f2t * gk_yzz_xxzzzzz[k];

                    g_yyzz_xxzzzzzz[k] = fr * g11_yzz_xxzzzzzz[k] + f2g * (g20_zz_xxzzzzzz[k] - fgz * g21_zz_xxzzzzzz[k]);

                    g_yyzz_xyyyyyyy[k] = fr * g11_yzz_xyyyyyyy[k] + f2g * (g20_zz_xyyyyyyy[k] - fgz * g21_zz_xyyyyyyy[k]) + 7.0 * f2t * gk_yzz_xyyyyyy[k];

                    g_yyzz_xyyyyyyz[k] = fr * g11_yzz_xyyyyyyz[k] + f2g * (g20_zz_xyyyyyyz[k] - fgz * g21_zz_xyyyyyyz[k]) + 6.0 * f2t * gk_yzz_xyyyyyz[k];

                    g_yyzz_xyyyyyzz[k] = fr * g11_yzz_xyyyyyzz[k] + f2g * (g20_zz_xyyyyyzz[k] - fgz * g21_zz_xyyyyyzz[k]) + 5.0 * f2t * gk_yzz_xyyyyzz[k];

                    g_yyzz_xyyyyzzz[k] = fr * g11_yzz_xyyyyzzz[k] + f2g * (g20_zz_xyyyyzzz[k] - fgz * g21_zz_xyyyyzzz[k]) + 4.0 * f2t * gk_yzz_xyyyzzz[k];

                    g_yyzz_xyyyzzzz[k] = fr * g11_yzz_xyyyzzzz[k] + f2g * (g20_zz_xyyyzzzz[k] - fgz * g21_zz_xyyyzzzz[k]) + 3.0 * f2t * gk_yzz_xyyzzzz[k];

                    g_yyzz_xyyzzzzz[k] = fr * g11_yzz_xyyzzzzz[k] + f2g * (g20_zz_xyyzzzzz[k] - fgz * g21_zz_xyyzzzzz[k]) + 2.0 * f2t * gk_yzz_xyzzzzz[k];

                    g_yyzz_xyzzzzzz[k] = fr * g11_yzz_xyzzzzzz[k] + f2g * (g20_zz_xyzzzzzz[k] - fgz * g21_zz_xyzzzzzz[k]) + f2t * gk_yzz_xzzzzzz[k];

                    g_yyzz_xzzzzzzz[k] = fr * g11_yzz_xzzzzzzz[k] + f2g * (g20_zz_xzzzzzzz[k] - fgz * g21_zz_xzzzzzzz[k]);

                    g_yyzz_yyyyyyyy[k] = fr * g11_yzz_yyyyyyyy[k] + f2g * (g20_zz_yyyyyyyy[k] - fgz * g21_zz_yyyyyyyy[k]) + 8.0 * f2t * gk_yzz_yyyyyyy[k];

                    g_yyzz_yyyyyyyz[k] = fr * g11_yzz_yyyyyyyz[k] + f2g * (g20_zz_yyyyyyyz[k] - fgz * g21_zz_yyyyyyyz[k]) + 7.0 * f2t * gk_yzz_yyyyyyz[k];

                    g_yyzz_yyyyyyzz[k] = fr * g11_yzz_yyyyyyzz[k] + f2g * (g20_zz_yyyyyyzz[k] - fgz * g21_zz_yyyyyyzz[k]) + 6.0 * f2t * gk_yzz_yyyyyzz[k];

                    g_yyzz_yyyyyzzz[k] = fr * g11_yzz_yyyyyzzz[k] + f2g * (g20_zz_yyyyyzzz[k] - fgz * g21_zz_yyyyyzzz[k]) + 5.0 * f2t * gk_yzz_yyyyzzz[k];

                    g_yyzz_yyyyzzzz[k] = fr * g11_yzz_yyyyzzzz[k] + f2g * (g20_zz_yyyyzzzz[k] - fgz * g21_zz_yyyyzzzz[k]) + 4.0 * f2t * gk_yzz_yyyzzzz[k];

                    g_yyzz_yyyzzzzz[k] = fr * g11_yzz_yyyzzzzz[k] + f2g * (g20_zz_yyyzzzzz[k] - fgz * g21_zz_yyyzzzzz[k]) + 3.0 * f2t * gk_yzz_yyzzzzz[k];

                    g_yyzz_yyzzzzzz[k] = fr * g11_yzz_yyzzzzzz[k] + f2g * (g20_zz_yyzzzzzz[k] - fgz * g21_zz_yyzzzzzz[k]) + 2.0 * f2t * gk_yzz_yzzzzzz[k];

                    g_yyzz_yzzzzzzz[k] = fr * g11_yzz_yzzzzzzz[k] + f2g * (g20_zz_yzzzzzzz[k] - fgz * g21_zz_yzzzzzzz[k]) + f2t * gk_yzz_zzzzzzz[k];

                    g_yyzz_zzzzzzzz[k] = fr * g11_yzz_zzzzzzzz[k] + f2g * (g20_zz_zzzzzzzz[k] - fgz * g21_zz_zzzzzzzz[k]);

                    g_yzzz_xxxxxxxx[k] = fr * g11_zzz_xxxxxxxx[k];

                    g_yzzz_xxxxxxxy[k] = fr * g11_zzz_xxxxxxxy[k] + f2t * gk_zzz_xxxxxxx[k];

                    g_yzzz_xxxxxxxz[k] = fr * g11_zzz_xxxxxxxz[k];

                    g_yzzz_xxxxxxyy[k] = fr * g11_zzz_xxxxxxyy[k] + 2.0 * f2t * gk_zzz_xxxxxxy[k];

                    g_yzzz_xxxxxxyz[k] = fr * g11_zzz_xxxxxxyz[k] + f2t * gk_zzz_xxxxxxz[k];

                    g_yzzz_xxxxxxzz[k] = fr * g11_zzz_xxxxxxzz[k];

                    g_yzzz_xxxxxyyy[k] = fr * g11_zzz_xxxxxyyy[k] + 3.0 * f2t * gk_zzz_xxxxxyy[k];

                    g_yzzz_xxxxxyyz[k] = fr * g11_zzz_xxxxxyyz[k] + 2.0 * f2t * gk_zzz_xxxxxyz[k];

                    g_yzzz_xxxxxyzz[k] = fr * g11_zzz_xxxxxyzz[k] + f2t * gk_zzz_xxxxxzz[k];

                    g_yzzz_xxxxxzzz[k] = fr * g11_zzz_xxxxxzzz[k];

                    g_yzzz_xxxxyyyy[k] = fr * g11_zzz_xxxxyyyy[k] + 4.0 * f2t * gk_zzz_xxxxyyy[k];

                    g_yzzz_xxxxyyyz[k] = fr * g11_zzz_xxxxyyyz[k] + 3.0 * f2t * gk_zzz_xxxxyyz[k];

                    g_yzzz_xxxxyyzz[k] = fr * g11_zzz_xxxxyyzz[k] + 2.0 * f2t * gk_zzz_xxxxyzz[k];

                    g_yzzz_xxxxyzzz[k] = fr * g11_zzz_xxxxyzzz[k] + f2t * gk_zzz_xxxxzzz[k];

                    g_yzzz_xxxxzzzz[k] = fr * g11_zzz_xxxxzzzz[k];

                    g_yzzz_xxxyyyyy[k] = fr * g11_zzz_xxxyyyyy[k] + 5.0 * f2t * gk_zzz_xxxyyyy[k];

                    g_yzzz_xxxyyyyz[k] = fr * g11_zzz_xxxyyyyz[k] + 4.0 * f2t * gk_zzz_xxxyyyz[k];

                    g_yzzz_xxxyyyzz[k] = fr * g11_zzz_xxxyyyzz[k] + 3.0 * f2t * gk_zzz_xxxyyzz[k];

                    g_yzzz_xxxyyzzz[k] = fr * g11_zzz_xxxyyzzz[k] + 2.0 * f2t * gk_zzz_xxxyzzz[k];

                    g_yzzz_xxxyzzzz[k] = fr * g11_zzz_xxxyzzzz[k] + f2t * gk_zzz_xxxzzzz[k];

                    g_yzzz_xxxzzzzz[k] = fr * g11_zzz_xxxzzzzz[k];

                    g_yzzz_xxyyyyyy[k] = fr * g11_zzz_xxyyyyyy[k] + 6.0 * f2t * gk_zzz_xxyyyyy[k];

                    g_yzzz_xxyyyyyz[k] = fr * g11_zzz_xxyyyyyz[k] + 5.0 * f2t * gk_zzz_xxyyyyz[k];

                    g_yzzz_xxyyyyzz[k] = fr * g11_zzz_xxyyyyzz[k] + 4.0 * f2t * gk_zzz_xxyyyzz[k];

                    g_yzzz_xxyyyzzz[k] = fr * g11_zzz_xxyyyzzz[k] + 3.0 * f2t * gk_zzz_xxyyzzz[k];

                    g_yzzz_xxyyzzzz[k] = fr * g11_zzz_xxyyzzzz[k] + 2.0 * f2t * gk_zzz_xxyzzzz[k];

                    g_yzzz_xxyzzzzz[k] = fr * g11_zzz_xxyzzzzz[k] + f2t * gk_zzz_xxzzzzz[k];

                    g_yzzz_xxzzzzzz[k] = fr * g11_zzz_xxzzzzzz[k];

                    g_yzzz_xyyyyyyy[k] = fr * g11_zzz_xyyyyyyy[k] + 7.0 * f2t * gk_zzz_xyyyyyy[k];

                    g_yzzz_xyyyyyyz[k] = fr * g11_zzz_xyyyyyyz[k] + 6.0 * f2t * gk_zzz_xyyyyyz[k];

                    g_yzzz_xyyyyyzz[k] = fr * g11_zzz_xyyyyyzz[k] + 5.0 * f2t * gk_zzz_xyyyyzz[k];

                    g_yzzz_xyyyyzzz[k] = fr * g11_zzz_xyyyyzzz[k] + 4.0 * f2t * gk_zzz_xyyyzzz[k];

                    g_yzzz_xyyyzzzz[k] = fr * g11_zzz_xyyyzzzz[k] + 3.0 * f2t * gk_zzz_xyyzzzz[k];

                    g_yzzz_xyyzzzzz[k] = fr * g11_zzz_xyyzzzzz[k] + 2.0 * f2t * gk_zzz_xyzzzzz[k];

                    g_yzzz_xyzzzzzz[k] = fr * g11_zzz_xyzzzzzz[k] + f2t * gk_zzz_xzzzzzz[k];

                    g_yzzz_xzzzzzzz[k] = fr * g11_zzz_xzzzzzzz[k];

                    g_yzzz_yyyyyyyy[k] = fr * g11_zzz_yyyyyyyy[k] + 8.0 * f2t * gk_zzz_yyyyyyy[k];

                    g_yzzz_yyyyyyyz[k] = fr * g11_zzz_yyyyyyyz[k] + 7.0 * f2t * gk_zzz_yyyyyyz[k];

                    g_yzzz_yyyyyyzz[k] = fr * g11_zzz_yyyyyyzz[k] + 6.0 * f2t * gk_zzz_yyyyyzz[k];

                    g_yzzz_yyyyyzzz[k] = fr * g11_zzz_yyyyyzzz[k] + 5.0 * f2t * gk_zzz_yyyyzzz[k];

                    g_yzzz_yyyyzzzz[k] = fr * g11_zzz_yyyyzzzz[k] + 4.0 * f2t * gk_zzz_yyyzzzz[k];

                    g_yzzz_yyyzzzzz[k] = fr * g11_zzz_yyyzzzzz[k] + 3.0 * f2t * gk_zzz_yyzzzzz[k];

                    g_yzzz_yyzzzzzz[k] = fr * g11_zzz_yyzzzzzz[k] + 2.0 * f2t * gk_zzz_yzzzzzz[k];

                    g_yzzz_yzzzzzzz[k] = fr * g11_zzz_yzzzzzzz[k] + f2t * gk_zzz_zzzzzzz[k];

                    g_yzzz_zzzzzzzz[k] = fr * g11_zzz_zzzzzzzz[k];

                    // leading z component

                    fr = waz[k];

                    g_zzzz_xxxxxxxx[k] = fr * g11_zzz_xxxxxxxx[k] + f2g * (3.0 * g20_zz_xxxxxxxx[k] - 3.0 * fgz * g21_zz_xxxxxxxx[k]);

                    g_zzzz_xxxxxxxy[k] = fr * g11_zzz_xxxxxxxy[k] + f2g * (3.0 * g20_zz_xxxxxxxy[k] - 3.0 * fgz * g21_zz_xxxxxxxy[k]);

                    g_zzzz_xxxxxxxz[k] = fr * g11_zzz_xxxxxxxz[k] + f2g * (3.0 * g20_zz_xxxxxxxz[k] - 3.0 * fgz * g21_zz_xxxxxxxz[k]) + f2t * gk_zzz_xxxxxxx[k];

                    g_zzzz_xxxxxxyy[k] = fr * g11_zzz_xxxxxxyy[k] + f2g * (3.0 * g20_zz_xxxxxxyy[k] - 3.0 * fgz * g21_zz_xxxxxxyy[k]);

                    g_zzzz_xxxxxxyz[k] = fr * g11_zzz_xxxxxxyz[k] + f2g * (3.0 * g20_zz_xxxxxxyz[k] - 3.0 * fgz * g21_zz_xxxxxxyz[k]) + f2t * gk_zzz_xxxxxxy[k];

                    g_zzzz_xxxxxxzz[k] = fr * g11_zzz_xxxxxxzz[k] + f2g * (3.0 * g20_zz_xxxxxxzz[k] - 3.0 * fgz * g21_zz_xxxxxxzz[k]) + 2.0 * f2t * gk_zzz_xxxxxxz[k];

                    g_zzzz_xxxxxyyy[k] = fr * g11_zzz_xxxxxyyy[k] + f2g * (3.0 * g20_zz_xxxxxyyy[k] - 3.0 * fgz * g21_zz_xxxxxyyy[k]);

                    g_zzzz_xxxxxyyz[k] = fr * g11_zzz_xxxxxyyz[k] + f2g * (3.0 * g20_zz_xxxxxyyz[k] - 3.0 * fgz * g21_zz_xxxxxyyz[k]) + f2t * gk_zzz_xxxxxyy[k];

                    g_zzzz_xxxxxyzz[k] = fr * g11_zzz_xxxxxyzz[k] + f2g * (3.0 * g20_zz_xxxxxyzz[k] - 3.0 * fgz * g21_zz_xxxxxyzz[k]) + 2.0 * f2t * gk_zzz_xxxxxyz[k];

                    g_zzzz_xxxxxzzz[k] = fr * g11_zzz_xxxxxzzz[k] + f2g * (3.0 * g20_zz_xxxxxzzz[k] - 3.0 * fgz * g21_zz_xxxxxzzz[k]) + 3.0 * f2t * gk_zzz_xxxxxzz[k];

                    g_zzzz_xxxxyyyy[k] = fr * g11_zzz_xxxxyyyy[k] + f2g * (3.0 * g20_zz_xxxxyyyy[k] - 3.0 * fgz * g21_zz_xxxxyyyy[k]);

                    g_zzzz_xxxxyyyz[k] = fr * g11_zzz_xxxxyyyz[k] + f2g * (3.0 * g20_zz_xxxxyyyz[k] - 3.0 * fgz * g21_zz_xxxxyyyz[k]) + f2t * gk_zzz_xxxxyyy[k];

                    g_zzzz_xxxxyyzz[k] = fr * g11_zzz_xxxxyyzz[k] + f2g * (3.0 * g20_zz_xxxxyyzz[k] - 3.0 * fgz * g21_zz_xxxxyyzz[k]) + 2.0 * f2t * gk_zzz_xxxxyyz[k];

                    g_zzzz_xxxxyzzz[k] = fr * g11_zzz_xxxxyzzz[k] + f2g * (3.0 * g20_zz_xxxxyzzz[k] - 3.0 * fgz * g21_zz_xxxxyzzz[k]) + 3.0 * f2t * gk_zzz_xxxxyzz[k];

                    g_zzzz_xxxxzzzz[k] = fr * g11_zzz_xxxxzzzz[k] + f2g * (3.0 * g20_zz_xxxxzzzz[k] - 3.0 * fgz * g21_zz_xxxxzzzz[k]) + 4.0 * f2t * gk_zzz_xxxxzzz[k];

                    g_zzzz_xxxyyyyy[k] = fr * g11_zzz_xxxyyyyy[k] + f2g * (3.0 * g20_zz_xxxyyyyy[k] - 3.0 * fgz * g21_zz_xxxyyyyy[k]);

                    g_zzzz_xxxyyyyz[k] = fr * g11_zzz_xxxyyyyz[k] + f2g * (3.0 * g20_zz_xxxyyyyz[k] - 3.0 * fgz * g21_zz_xxxyyyyz[k]) + f2t * gk_zzz_xxxyyyy[k];

                    g_zzzz_xxxyyyzz[k] = fr * g11_zzz_xxxyyyzz[k] + f2g * (3.0 * g20_zz_xxxyyyzz[k] - 3.0 * fgz * g21_zz_xxxyyyzz[k]) + 2.0 * f2t * gk_zzz_xxxyyyz[k];

                    g_zzzz_xxxyyzzz[k] = fr * g11_zzz_xxxyyzzz[k] + f2g * (3.0 * g20_zz_xxxyyzzz[k] - 3.0 * fgz * g21_zz_xxxyyzzz[k]) + 3.0 * f2t * gk_zzz_xxxyyzz[k];

                    g_zzzz_xxxyzzzz[k] = fr * g11_zzz_xxxyzzzz[k] + f2g * (3.0 * g20_zz_xxxyzzzz[k] - 3.0 * fgz * g21_zz_xxxyzzzz[k]) + 4.0 * f2t * gk_zzz_xxxyzzz[k];

                    g_zzzz_xxxzzzzz[k] = fr * g11_zzz_xxxzzzzz[k] + f2g * (3.0 * g20_zz_xxxzzzzz[k] - 3.0 * fgz * g21_zz_xxxzzzzz[k]) + 5.0 * f2t * gk_zzz_xxxzzzz[k];

                    g_zzzz_xxyyyyyy[k] = fr * g11_zzz_xxyyyyyy[k] + f2g * (3.0 * g20_zz_xxyyyyyy[k] - 3.0 * fgz * g21_zz_xxyyyyyy[k]);

                    g_zzzz_xxyyyyyz[k] = fr * g11_zzz_xxyyyyyz[k] + f2g * (3.0 * g20_zz_xxyyyyyz[k] - 3.0 * fgz * g21_zz_xxyyyyyz[k]) + f2t * gk_zzz_xxyyyyy[k];

                    g_zzzz_xxyyyyzz[k] = fr * g11_zzz_xxyyyyzz[k] + f2g * (3.0 * g20_zz_xxyyyyzz[k] - 3.0 * fgz * g21_zz_xxyyyyzz[k]) + 2.0 * f2t * gk_zzz_xxyyyyz[k];

                    g_zzzz_xxyyyzzz[k] = fr * g11_zzz_xxyyyzzz[k] + f2g * (3.0 * g20_zz_xxyyyzzz[k] - 3.0 * fgz * g21_zz_xxyyyzzz[k]) + 3.0 * f2t * gk_zzz_xxyyyzz[k];

                    g_zzzz_xxyyzzzz[k] = fr * g11_zzz_xxyyzzzz[k] + f2g * (3.0 * g20_zz_xxyyzzzz[k] - 3.0 * fgz * g21_zz_xxyyzzzz[k]) + 4.0 * f2t * gk_zzz_xxyyzzz[k];

                    g_zzzz_xxyzzzzz[k] = fr * g11_zzz_xxyzzzzz[k] + f2g * (3.0 * g20_zz_xxyzzzzz[k] - 3.0 * fgz * g21_zz_xxyzzzzz[k]) + 5.0 * f2t * gk_zzz_xxyzzzz[k];

                    g_zzzz_xxzzzzzz[k] = fr * g11_zzz_xxzzzzzz[k] + f2g * (3.0 * g20_zz_xxzzzzzz[k] - 3.0 * fgz * g21_zz_xxzzzzzz[k]) + 6.0 * f2t * gk_zzz_xxzzzzz[k];

                    g_zzzz_xyyyyyyy[k] = fr * g11_zzz_xyyyyyyy[k] + f2g * (3.0 * g20_zz_xyyyyyyy[k] - 3.0 * fgz * g21_zz_xyyyyyyy[k]);

                    g_zzzz_xyyyyyyz[k] = fr * g11_zzz_xyyyyyyz[k] + f2g * (3.0 * g20_zz_xyyyyyyz[k] - 3.0 * fgz * g21_zz_xyyyyyyz[k]) + f2t * gk_zzz_xyyyyyy[k];

                    g_zzzz_xyyyyyzz[k] = fr * g11_zzz_xyyyyyzz[k] + f2g * (3.0 * g20_zz_xyyyyyzz[k] - 3.0 * fgz * g21_zz_xyyyyyzz[k]) + 2.0 * f2t * gk_zzz_xyyyyyz[k];

                    g_zzzz_xyyyyzzz[k] = fr * g11_zzz_xyyyyzzz[k] + f2g * (3.0 * g20_zz_xyyyyzzz[k] - 3.0 * fgz * g21_zz_xyyyyzzz[k]) + 3.0 * f2t * gk_zzz_xyyyyzz[k];

                    g_zzzz_xyyyzzzz[k] = fr * g11_zzz_xyyyzzzz[k] + f2g * (3.0 * g20_zz_xyyyzzzz[k] - 3.0 * fgz * g21_zz_xyyyzzzz[k]) + 4.0 * f2t * gk_zzz_xyyyzzz[k];

                    g_zzzz_xyyzzzzz[k] = fr * g11_zzz_xyyzzzzz[k] + f2g * (3.0 * g20_zz_xyyzzzzz[k] - 3.0 * fgz * g21_zz_xyyzzzzz[k]) + 5.0 * f2t * gk_zzz_xyyzzzz[k];

                    g_zzzz_xyzzzzzz[k] = fr * g11_zzz_xyzzzzzz[k] + f2g * (3.0 * g20_zz_xyzzzzzz[k] - 3.0 * fgz * g21_zz_xyzzzzzz[k]) + 6.0 * f2t * gk_zzz_xyzzzzz[k];

                    g_zzzz_xzzzzzzz[k] = fr * g11_zzz_xzzzzzzz[k] + f2g * (3.0 * g20_zz_xzzzzzzz[k] - 3.0 * fgz * g21_zz_xzzzzzzz[k]) + 7.0 * f2t * gk_zzz_xzzzzzz[k];

                    g_zzzz_yyyyyyyy[k] = fr * g11_zzz_yyyyyyyy[k] + f2g * (3.0 * g20_zz_yyyyyyyy[k] - 3.0 * fgz * g21_zz_yyyyyyyy[k]);

                    g_zzzz_yyyyyyyz[k] = fr * g11_zzz_yyyyyyyz[k] + f2g * (3.0 * g20_zz_yyyyyyyz[k] - 3.0 * fgz * g21_zz_yyyyyyyz[k]) + f2t * gk_zzz_yyyyyyy[k];

                    g_zzzz_yyyyyyzz[k] = fr * g11_zzz_yyyyyyzz[k] + f2g * (3.0 * g20_zz_yyyyyyzz[k] - 3.0 * fgz * g21_zz_yyyyyyzz[k]) + 2.0 * f2t * gk_zzz_yyyyyyz[k];

                    g_zzzz_yyyyyzzz[k] = fr * g11_zzz_yyyyyzzz[k] + f2g * (3.0 * g20_zz_yyyyyzzz[k] - 3.0 * fgz * g21_zz_yyyyyzzz[k]) + 3.0 * f2t * gk_zzz_yyyyyzz[k];

                    g_zzzz_yyyyzzzz[k] = fr * g11_zzz_yyyyzzzz[k] + f2g * (3.0 * g20_zz_yyyyzzzz[k] - 3.0 * fgz * g21_zz_yyyyzzzz[k]) + 4.0 * f2t * gk_zzz_yyyyzzz[k];

                    g_zzzz_yyyzzzzz[k] = fr * g11_zzz_yyyzzzzz[k] + f2g * (3.0 * g20_zz_yyyzzzzz[k] - 3.0 * fgz * g21_zz_yyyzzzzz[k]) + 5.0 * f2t * gk_zzz_yyyzzzz[k];

                    g_zzzz_yyzzzzzz[k] = fr * g11_zzz_yyzzzzzz[k] + f2g * (3.0 * g20_zz_yyzzzzzz[k] - 3.0 * fgz * g21_zz_yyzzzzzz[k]) + 6.0 * f2t * gk_zzz_yyzzzzz[k];

                    g_zzzz_yzzzzzzz[k] = fr * g11_zzz_yzzzzzzz[k] + f2g * (3.0 * g20_zz_yzzzzzzz[k] - 3.0 * fgz * g21_zz_yzzzzzzz[k]) + 7.0 * f2t * gk_zzz_yzzzzzz[k];

                    g_zzzz_zzzzzzzz[k] = fr * g11_zzz_zzzzzzzz[k] + f2g * (3.0 * g20_zz_zzzzzzzz[k] - 3.0 * fgz * g21_zz_zzzzzzzz[k]) + 8.0 * f2t * gk_zzz_zzzzzzz[k];
                }

                idx++;
            }
        }
    }
    
}  // t3erifunc namespace
