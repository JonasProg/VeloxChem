#include "GeomDeriv1100OfScalarForDDPD.hpp"

namespace t4c_geom { // t4c_geom namespace

auto
comp_geom1100_ddpd_0(CSimdArray<double>& buffer_1100_ddpd,
                     const CSimdArray<double>& buffer_pppd,
                     const CSimdArray<double>& buffer_pfpd,
                     const CSimdArray<double>& buffer_fppd,
                     const CSimdArray<double>& buffer_ffpd,
                     const double a_exp,
                     const double b_exp) -> void
{
    const auto ndims = buffer_1100_ddpd.number_of_columns();

    /// Set up components of auxilary buffer : buffer_pppd

    auto g_x_x_x_xx = buffer_pppd[0];

    auto g_x_x_x_xy = buffer_pppd[1];

    auto g_x_x_x_xz = buffer_pppd[2];

    auto g_x_x_x_yy = buffer_pppd[3];

    auto g_x_x_x_yz = buffer_pppd[4];

    auto g_x_x_x_zz = buffer_pppd[5];

    auto g_x_x_y_xx = buffer_pppd[6];

    auto g_x_x_y_xy = buffer_pppd[7];

    auto g_x_x_y_xz = buffer_pppd[8];

    auto g_x_x_y_yy = buffer_pppd[9];

    auto g_x_x_y_yz = buffer_pppd[10];

    auto g_x_x_y_zz = buffer_pppd[11];

    auto g_x_x_z_xx = buffer_pppd[12];

    auto g_x_x_z_xy = buffer_pppd[13];

    auto g_x_x_z_xz = buffer_pppd[14];

    auto g_x_x_z_yy = buffer_pppd[15];

    auto g_x_x_z_yz = buffer_pppd[16];

    auto g_x_x_z_zz = buffer_pppd[17];

    auto g_x_y_x_xx = buffer_pppd[18];

    auto g_x_y_x_xy = buffer_pppd[19];

    auto g_x_y_x_xz = buffer_pppd[20];

    auto g_x_y_x_yy = buffer_pppd[21];

    auto g_x_y_x_yz = buffer_pppd[22];

    auto g_x_y_x_zz = buffer_pppd[23];

    auto g_x_y_y_xx = buffer_pppd[24];

    auto g_x_y_y_xy = buffer_pppd[25];

    auto g_x_y_y_xz = buffer_pppd[26];

    auto g_x_y_y_yy = buffer_pppd[27];

    auto g_x_y_y_yz = buffer_pppd[28];

    auto g_x_y_y_zz = buffer_pppd[29];

    auto g_x_y_z_xx = buffer_pppd[30];

    auto g_x_y_z_xy = buffer_pppd[31];

    auto g_x_y_z_xz = buffer_pppd[32];

    auto g_x_y_z_yy = buffer_pppd[33];

    auto g_x_y_z_yz = buffer_pppd[34];

    auto g_x_y_z_zz = buffer_pppd[35];

    auto g_x_z_x_xx = buffer_pppd[36];

    auto g_x_z_x_xy = buffer_pppd[37];

    auto g_x_z_x_xz = buffer_pppd[38];

    auto g_x_z_x_yy = buffer_pppd[39];

    auto g_x_z_x_yz = buffer_pppd[40];

    auto g_x_z_x_zz = buffer_pppd[41];

    auto g_x_z_y_xx = buffer_pppd[42];

    auto g_x_z_y_xy = buffer_pppd[43];

    auto g_x_z_y_xz = buffer_pppd[44];

    auto g_x_z_y_yy = buffer_pppd[45];

    auto g_x_z_y_yz = buffer_pppd[46];

    auto g_x_z_y_zz = buffer_pppd[47];

    auto g_x_z_z_xx = buffer_pppd[48];

    auto g_x_z_z_xy = buffer_pppd[49];

    auto g_x_z_z_xz = buffer_pppd[50];

    auto g_x_z_z_yy = buffer_pppd[51];

    auto g_x_z_z_yz = buffer_pppd[52];

    auto g_x_z_z_zz = buffer_pppd[53];

    auto g_y_x_x_xx = buffer_pppd[54];

    auto g_y_x_x_xy = buffer_pppd[55];

    auto g_y_x_x_xz = buffer_pppd[56];

    auto g_y_x_x_yy = buffer_pppd[57];

    auto g_y_x_x_yz = buffer_pppd[58];

    auto g_y_x_x_zz = buffer_pppd[59];

    auto g_y_x_y_xx = buffer_pppd[60];

    auto g_y_x_y_xy = buffer_pppd[61];

    auto g_y_x_y_xz = buffer_pppd[62];

    auto g_y_x_y_yy = buffer_pppd[63];

    auto g_y_x_y_yz = buffer_pppd[64];

    auto g_y_x_y_zz = buffer_pppd[65];

    auto g_y_x_z_xx = buffer_pppd[66];

    auto g_y_x_z_xy = buffer_pppd[67];

    auto g_y_x_z_xz = buffer_pppd[68];

    auto g_y_x_z_yy = buffer_pppd[69];

    auto g_y_x_z_yz = buffer_pppd[70];

    auto g_y_x_z_zz = buffer_pppd[71];

    auto g_y_y_x_xx = buffer_pppd[72];

    auto g_y_y_x_xy = buffer_pppd[73];

    auto g_y_y_x_xz = buffer_pppd[74];

    auto g_y_y_x_yy = buffer_pppd[75];

    auto g_y_y_x_yz = buffer_pppd[76];

    auto g_y_y_x_zz = buffer_pppd[77];

    auto g_y_y_y_xx = buffer_pppd[78];

    auto g_y_y_y_xy = buffer_pppd[79];

    auto g_y_y_y_xz = buffer_pppd[80];

    auto g_y_y_y_yy = buffer_pppd[81];

    auto g_y_y_y_yz = buffer_pppd[82];

    auto g_y_y_y_zz = buffer_pppd[83];

    auto g_y_y_z_xx = buffer_pppd[84];

    auto g_y_y_z_xy = buffer_pppd[85];

    auto g_y_y_z_xz = buffer_pppd[86];

    auto g_y_y_z_yy = buffer_pppd[87];

    auto g_y_y_z_yz = buffer_pppd[88];

    auto g_y_y_z_zz = buffer_pppd[89];

    auto g_y_z_x_xx = buffer_pppd[90];

    auto g_y_z_x_xy = buffer_pppd[91];

    auto g_y_z_x_xz = buffer_pppd[92];

    auto g_y_z_x_yy = buffer_pppd[93];

    auto g_y_z_x_yz = buffer_pppd[94];

    auto g_y_z_x_zz = buffer_pppd[95];

    auto g_y_z_y_xx = buffer_pppd[96];

    auto g_y_z_y_xy = buffer_pppd[97];

    auto g_y_z_y_xz = buffer_pppd[98];

    auto g_y_z_y_yy = buffer_pppd[99];

    auto g_y_z_y_yz = buffer_pppd[100];

    auto g_y_z_y_zz = buffer_pppd[101];

    auto g_y_z_z_xx = buffer_pppd[102];

    auto g_y_z_z_xy = buffer_pppd[103];

    auto g_y_z_z_xz = buffer_pppd[104];

    auto g_y_z_z_yy = buffer_pppd[105];

    auto g_y_z_z_yz = buffer_pppd[106];

    auto g_y_z_z_zz = buffer_pppd[107];

    auto g_z_x_x_xx = buffer_pppd[108];

    auto g_z_x_x_xy = buffer_pppd[109];

    auto g_z_x_x_xz = buffer_pppd[110];

    auto g_z_x_x_yy = buffer_pppd[111];

    auto g_z_x_x_yz = buffer_pppd[112];

    auto g_z_x_x_zz = buffer_pppd[113];

    auto g_z_x_y_xx = buffer_pppd[114];

    auto g_z_x_y_xy = buffer_pppd[115];

    auto g_z_x_y_xz = buffer_pppd[116];

    auto g_z_x_y_yy = buffer_pppd[117];

    auto g_z_x_y_yz = buffer_pppd[118];

    auto g_z_x_y_zz = buffer_pppd[119];

    auto g_z_x_z_xx = buffer_pppd[120];

    auto g_z_x_z_xy = buffer_pppd[121];

    auto g_z_x_z_xz = buffer_pppd[122];

    auto g_z_x_z_yy = buffer_pppd[123];

    auto g_z_x_z_yz = buffer_pppd[124];

    auto g_z_x_z_zz = buffer_pppd[125];

    auto g_z_y_x_xx = buffer_pppd[126];

    auto g_z_y_x_xy = buffer_pppd[127];

    auto g_z_y_x_xz = buffer_pppd[128];

    auto g_z_y_x_yy = buffer_pppd[129];

    auto g_z_y_x_yz = buffer_pppd[130];

    auto g_z_y_x_zz = buffer_pppd[131];

    auto g_z_y_y_xx = buffer_pppd[132];

    auto g_z_y_y_xy = buffer_pppd[133];

    auto g_z_y_y_xz = buffer_pppd[134];

    auto g_z_y_y_yy = buffer_pppd[135];

    auto g_z_y_y_yz = buffer_pppd[136];

    auto g_z_y_y_zz = buffer_pppd[137];

    auto g_z_y_z_xx = buffer_pppd[138];

    auto g_z_y_z_xy = buffer_pppd[139];

    auto g_z_y_z_xz = buffer_pppd[140];

    auto g_z_y_z_yy = buffer_pppd[141];

    auto g_z_y_z_yz = buffer_pppd[142];

    auto g_z_y_z_zz = buffer_pppd[143];

    auto g_z_z_x_xx = buffer_pppd[144];

    auto g_z_z_x_xy = buffer_pppd[145];

    auto g_z_z_x_xz = buffer_pppd[146];

    auto g_z_z_x_yy = buffer_pppd[147];

    auto g_z_z_x_yz = buffer_pppd[148];

    auto g_z_z_x_zz = buffer_pppd[149];

    auto g_z_z_y_xx = buffer_pppd[150];

    auto g_z_z_y_xy = buffer_pppd[151];

    auto g_z_z_y_xz = buffer_pppd[152];

    auto g_z_z_y_yy = buffer_pppd[153];

    auto g_z_z_y_yz = buffer_pppd[154];

    auto g_z_z_y_zz = buffer_pppd[155];

    auto g_z_z_z_xx = buffer_pppd[156];

    auto g_z_z_z_xy = buffer_pppd[157];

    auto g_z_z_z_xz = buffer_pppd[158];

    auto g_z_z_z_yy = buffer_pppd[159];

    auto g_z_z_z_yz = buffer_pppd[160];

    auto g_z_z_z_zz = buffer_pppd[161];

    /// Set up components of auxilary buffer : buffer_pfpd

    auto g_x_xxx_x_xx = buffer_pfpd[0];

    auto g_x_xxx_x_xy = buffer_pfpd[1];

    auto g_x_xxx_x_xz = buffer_pfpd[2];

    auto g_x_xxx_x_yy = buffer_pfpd[3];

    auto g_x_xxx_x_yz = buffer_pfpd[4];

    auto g_x_xxx_x_zz = buffer_pfpd[5];

    auto g_x_xxx_y_xx = buffer_pfpd[6];

    auto g_x_xxx_y_xy = buffer_pfpd[7];

    auto g_x_xxx_y_xz = buffer_pfpd[8];

    auto g_x_xxx_y_yy = buffer_pfpd[9];

    auto g_x_xxx_y_yz = buffer_pfpd[10];

    auto g_x_xxx_y_zz = buffer_pfpd[11];

    auto g_x_xxx_z_xx = buffer_pfpd[12];

    auto g_x_xxx_z_xy = buffer_pfpd[13];

    auto g_x_xxx_z_xz = buffer_pfpd[14];

    auto g_x_xxx_z_yy = buffer_pfpd[15];

    auto g_x_xxx_z_yz = buffer_pfpd[16];

    auto g_x_xxx_z_zz = buffer_pfpd[17];

    auto g_x_xxy_x_xx = buffer_pfpd[18];

    auto g_x_xxy_x_xy = buffer_pfpd[19];

    auto g_x_xxy_x_xz = buffer_pfpd[20];

    auto g_x_xxy_x_yy = buffer_pfpd[21];

    auto g_x_xxy_x_yz = buffer_pfpd[22];

    auto g_x_xxy_x_zz = buffer_pfpd[23];

    auto g_x_xxy_y_xx = buffer_pfpd[24];

    auto g_x_xxy_y_xy = buffer_pfpd[25];

    auto g_x_xxy_y_xz = buffer_pfpd[26];

    auto g_x_xxy_y_yy = buffer_pfpd[27];

    auto g_x_xxy_y_yz = buffer_pfpd[28];

    auto g_x_xxy_y_zz = buffer_pfpd[29];

    auto g_x_xxy_z_xx = buffer_pfpd[30];

    auto g_x_xxy_z_xy = buffer_pfpd[31];

    auto g_x_xxy_z_xz = buffer_pfpd[32];

    auto g_x_xxy_z_yy = buffer_pfpd[33];

    auto g_x_xxy_z_yz = buffer_pfpd[34];

    auto g_x_xxy_z_zz = buffer_pfpd[35];

    auto g_x_xxz_x_xx = buffer_pfpd[36];

    auto g_x_xxz_x_xy = buffer_pfpd[37];

    auto g_x_xxz_x_xz = buffer_pfpd[38];

    auto g_x_xxz_x_yy = buffer_pfpd[39];

    auto g_x_xxz_x_yz = buffer_pfpd[40];

    auto g_x_xxz_x_zz = buffer_pfpd[41];

    auto g_x_xxz_y_xx = buffer_pfpd[42];

    auto g_x_xxz_y_xy = buffer_pfpd[43];

    auto g_x_xxz_y_xz = buffer_pfpd[44];

    auto g_x_xxz_y_yy = buffer_pfpd[45];

    auto g_x_xxz_y_yz = buffer_pfpd[46];

    auto g_x_xxz_y_zz = buffer_pfpd[47];

    auto g_x_xxz_z_xx = buffer_pfpd[48];

    auto g_x_xxz_z_xy = buffer_pfpd[49];

    auto g_x_xxz_z_xz = buffer_pfpd[50];

    auto g_x_xxz_z_yy = buffer_pfpd[51];

    auto g_x_xxz_z_yz = buffer_pfpd[52];

    auto g_x_xxz_z_zz = buffer_pfpd[53];

    auto g_x_xyy_x_xx = buffer_pfpd[54];

    auto g_x_xyy_x_xy = buffer_pfpd[55];

    auto g_x_xyy_x_xz = buffer_pfpd[56];

    auto g_x_xyy_x_yy = buffer_pfpd[57];

    auto g_x_xyy_x_yz = buffer_pfpd[58];

    auto g_x_xyy_x_zz = buffer_pfpd[59];

    auto g_x_xyy_y_xx = buffer_pfpd[60];

    auto g_x_xyy_y_xy = buffer_pfpd[61];

    auto g_x_xyy_y_xz = buffer_pfpd[62];

    auto g_x_xyy_y_yy = buffer_pfpd[63];

    auto g_x_xyy_y_yz = buffer_pfpd[64];

    auto g_x_xyy_y_zz = buffer_pfpd[65];

    auto g_x_xyy_z_xx = buffer_pfpd[66];

    auto g_x_xyy_z_xy = buffer_pfpd[67];

    auto g_x_xyy_z_xz = buffer_pfpd[68];

    auto g_x_xyy_z_yy = buffer_pfpd[69];

    auto g_x_xyy_z_yz = buffer_pfpd[70];

    auto g_x_xyy_z_zz = buffer_pfpd[71];

    auto g_x_xyz_x_xx = buffer_pfpd[72];

    auto g_x_xyz_x_xy = buffer_pfpd[73];

    auto g_x_xyz_x_xz = buffer_pfpd[74];

    auto g_x_xyz_x_yy = buffer_pfpd[75];

    auto g_x_xyz_x_yz = buffer_pfpd[76];

    auto g_x_xyz_x_zz = buffer_pfpd[77];

    auto g_x_xyz_y_xx = buffer_pfpd[78];

    auto g_x_xyz_y_xy = buffer_pfpd[79];

    auto g_x_xyz_y_xz = buffer_pfpd[80];

    auto g_x_xyz_y_yy = buffer_pfpd[81];

    auto g_x_xyz_y_yz = buffer_pfpd[82];

    auto g_x_xyz_y_zz = buffer_pfpd[83];

    auto g_x_xyz_z_xx = buffer_pfpd[84];

    auto g_x_xyz_z_xy = buffer_pfpd[85];

    auto g_x_xyz_z_xz = buffer_pfpd[86];

    auto g_x_xyz_z_yy = buffer_pfpd[87];

    auto g_x_xyz_z_yz = buffer_pfpd[88];

    auto g_x_xyz_z_zz = buffer_pfpd[89];

    auto g_x_xzz_x_xx = buffer_pfpd[90];

    auto g_x_xzz_x_xy = buffer_pfpd[91];

    auto g_x_xzz_x_xz = buffer_pfpd[92];

    auto g_x_xzz_x_yy = buffer_pfpd[93];

    auto g_x_xzz_x_yz = buffer_pfpd[94];

    auto g_x_xzz_x_zz = buffer_pfpd[95];

    auto g_x_xzz_y_xx = buffer_pfpd[96];

    auto g_x_xzz_y_xy = buffer_pfpd[97];

    auto g_x_xzz_y_xz = buffer_pfpd[98];

    auto g_x_xzz_y_yy = buffer_pfpd[99];

    auto g_x_xzz_y_yz = buffer_pfpd[100];

    auto g_x_xzz_y_zz = buffer_pfpd[101];

    auto g_x_xzz_z_xx = buffer_pfpd[102];

    auto g_x_xzz_z_xy = buffer_pfpd[103];

    auto g_x_xzz_z_xz = buffer_pfpd[104];

    auto g_x_xzz_z_yy = buffer_pfpd[105];

    auto g_x_xzz_z_yz = buffer_pfpd[106];

    auto g_x_xzz_z_zz = buffer_pfpd[107];

    auto g_x_yyy_x_xx = buffer_pfpd[108];

    auto g_x_yyy_x_xy = buffer_pfpd[109];

    auto g_x_yyy_x_xz = buffer_pfpd[110];

    auto g_x_yyy_x_yy = buffer_pfpd[111];

    auto g_x_yyy_x_yz = buffer_pfpd[112];

    auto g_x_yyy_x_zz = buffer_pfpd[113];

    auto g_x_yyy_y_xx = buffer_pfpd[114];

    auto g_x_yyy_y_xy = buffer_pfpd[115];

    auto g_x_yyy_y_xz = buffer_pfpd[116];

    auto g_x_yyy_y_yy = buffer_pfpd[117];

    auto g_x_yyy_y_yz = buffer_pfpd[118];

    auto g_x_yyy_y_zz = buffer_pfpd[119];

    auto g_x_yyy_z_xx = buffer_pfpd[120];

    auto g_x_yyy_z_xy = buffer_pfpd[121];

    auto g_x_yyy_z_xz = buffer_pfpd[122];

    auto g_x_yyy_z_yy = buffer_pfpd[123];

    auto g_x_yyy_z_yz = buffer_pfpd[124];

    auto g_x_yyy_z_zz = buffer_pfpd[125];

    auto g_x_yyz_x_xx = buffer_pfpd[126];

    auto g_x_yyz_x_xy = buffer_pfpd[127];

    auto g_x_yyz_x_xz = buffer_pfpd[128];

    auto g_x_yyz_x_yy = buffer_pfpd[129];

    auto g_x_yyz_x_yz = buffer_pfpd[130];

    auto g_x_yyz_x_zz = buffer_pfpd[131];

    auto g_x_yyz_y_xx = buffer_pfpd[132];

    auto g_x_yyz_y_xy = buffer_pfpd[133];

    auto g_x_yyz_y_xz = buffer_pfpd[134];

    auto g_x_yyz_y_yy = buffer_pfpd[135];

    auto g_x_yyz_y_yz = buffer_pfpd[136];

    auto g_x_yyz_y_zz = buffer_pfpd[137];

    auto g_x_yyz_z_xx = buffer_pfpd[138];

    auto g_x_yyz_z_xy = buffer_pfpd[139];

    auto g_x_yyz_z_xz = buffer_pfpd[140];

    auto g_x_yyz_z_yy = buffer_pfpd[141];

    auto g_x_yyz_z_yz = buffer_pfpd[142];

    auto g_x_yyz_z_zz = buffer_pfpd[143];

    auto g_x_yzz_x_xx = buffer_pfpd[144];

    auto g_x_yzz_x_xy = buffer_pfpd[145];

    auto g_x_yzz_x_xz = buffer_pfpd[146];

    auto g_x_yzz_x_yy = buffer_pfpd[147];

    auto g_x_yzz_x_yz = buffer_pfpd[148];

    auto g_x_yzz_x_zz = buffer_pfpd[149];

    auto g_x_yzz_y_xx = buffer_pfpd[150];

    auto g_x_yzz_y_xy = buffer_pfpd[151];

    auto g_x_yzz_y_xz = buffer_pfpd[152];

    auto g_x_yzz_y_yy = buffer_pfpd[153];

    auto g_x_yzz_y_yz = buffer_pfpd[154];

    auto g_x_yzz_y_zz = buffer_pfpd[155];

    auto g_x_yzz_z_xx = buffer_pfpd[156];

    auto g_x_yzz_z_xy = buffer_pfpd[157];

    auto g_x_yzz_z_xz = buffer_pfpd[158];

    auto g_x_yzz_z_yy = buffer_pfpd[159];

    auto g_x_yzz_z_yz = buffer_pfpd[160];

    auto g_x_yzz_z_zz = buffer_pfpd[161];

    auto g_x_zzz_x_xx = buffer_pfpd[162];

    auto g_x_zzz_x_xy = buffer_pfpd[163];

    auto g_x_zzz_x_xz = buffer_pfpd[164];

    auto g_x_zzz_x_yy = buffer_pfpd[165];

    auto g_x_zzz_x_yz = buffer_pfpd[166];

    auto g_x_zzz_x_zz = buffer_pfpd[167];

    auto g_x_zzz_y_xx = buffer_pfpd[168];

    auto g_x_zzz_y_xy = buffer_pfpd[169];

    auto g_x_zzz_y_xz = buffer_pfpd[170];

    auto g_x_zzz_y_yy = buffer_pfpd[171];

    auto g_x_zzz_y_yz = buffer_pfpd[172];

    auto g_x_zzz_y_zz = buffer_pfpd[173];

    auto g_x_zzz_z_xx = buffer_pfpd[174];

    auto g_x_zzz_z_xy = buffer_pfpd[175];

    auto g_x_zzz_z_xz = buffer_pfpd[176];

    auto g_x_zzz_z_yy = buffer_pfpd[177];

    auto g_x_zzz_z_yz = buffer_pfpd[178];

    auto g_x_zzz_z_zz = buffer_pfpd[179];

    auto g_y_xxx_x_xx = buffer_pfpd[180];

    auto g_y_xxx_x_xy = buffer_pfpd[181];

    auto g_y_xxx_x_xz = buffer_pfpd[182];

    auto g_y_xxx_x_yy = buffer_pfpd[183];

    auto g_y_xxx_x_yz = buffer_pfpd[184];

    auto g_y_xxx_x_zz = buffer_pfpd[185];

    auto g_y_xxx_y_xx = buffer_pfpd[186];

    auto g_y_xxx_y_xy = buffer_pfpd[187];

    auto g_y_xxx_y_xz = buffer_pfpd[188];

    auto g_y_xxx_y_yy = buffer_pfpd[189];

    auto g_y_xxx_y_yz = buffer_pfpd[190];

    auto g_y_xxx_y_zz = buffer_pfpd[191];

    auto g_y_xxx_z_xx = buffer_pfpd[192];

    auto g_y_xxx_z_xy = buffer_pfpd[193];

    auto g_y_xxx_z_xz = buffer_pfpd[194];

    auto g_y_xxx_z_yy = buffer_pfpd[195];

    auto g_y_xxx_z_yz = buffer_pfpd[196];

    auto g_y_xxx_z_zz = buffer_pfpd[197];

    auto g_y_xxy_x_xx = buffer_pfpd[198];

    auto g_y_xxy_x_xy = buffer_pfpd[199];

    auto g_y_xxy_x_xz = buffer_pfpd[200];

    auto g_y_xxy_x_yy = buffer_pfpd[201];

    auto g_y_xxy_x_yz = buffer_pfpd[202];

    auto g_y_xxy_x_zz = buffer_pfpd[203];

    auto g_y_xxy_y_xx = buffer_pfpd[204];

    auto g_y_xxy_y_xy = buffer_pfpd[205];

    auto g_y_xxy_y_xz = buffer_pfpd[206];

    auto g_y_xxy_y_yy = buffer_pfpd[207];

    auto g_y_xxy_y_yz = buffer_pfpd[208];

    auto g_y_xxy_y_zz = buffer_pfpd[209];

    auto g_y_xxy_z_xx = buffer_pfpd[210];

    auto g_y_xxy_z_xy = buffer_pfpd[211];

    auto g_y_xxy_z_xz = buffer_pfpd[212];

    auto g_y_xxy_z_yy = buffer_pfpd[213];

    auto g_y_xxy_z_yz = buffer_pfpd[214];

    auto g_y_xxy_z_zz = buffer_pfpd[215];

    auto g_y_xxz_x_xx = buffer_pfpd[216];

    auto g_y_xxz_x_xy = buffer_pfpd[217];

    auto g_y_xxz_x_xz = buffer_pfpd[218];

    auto g_y_xxz_x_yy = buffer_pfpd[219];

    auto g_y_xxz_x_yz = buffer_pfpd[220];

    auto g_y_xxz_x_zz = buffer_pfpd[221];

    auto g_y_xxz_y_xx = buffer_pfpd[222];

    auto g_y_xxz_y_xy = buffer_pfpd[223];

    auto g_y_xxz_y_xz = buffer_pfpd[224];

    auto g_y_xxz_y_yy = buffer_pfpd[225];

    auto g_y_xxz_y_yz = buffer_pfpd[226];

    auto g_y_xxz_y_zz = buffer_pfpd[227];

    auto g_y_xxz_z_xx = buffer_pfpd[228];

    auto g_y_xxz_z_xy = buffer_pfpd[229];

    auto g_y_xxz_z_xz = buffer_pfpd[230];

    auto g_y_xxz_z_yy = buffer_pfpd[231];

    auto g_y_xxz_z_yz = buffer_pfpd[232];

    auto g_y_xxz_z_zz = buffer_pfpd[233];

    auto g_y_xyy_x_xx = buffer_pfpd[234];

    auto g_y_xyy_x_xy = buffer_pfpd[235];

    auto g_y_xyy_x_xz = buffer_pfpd[236];

    auto g_y_xyy_x_yy = buffer_pfpd[237];

    auto g_y_xyy_x_yz = buffer_pfpd[238];

    auto g_y_xyy_x_zz = buffer_pfpd[239];

    auto g_y_xyy_y_xx = buffer_pfpd[240];

    auto g_y_xyy_y_xy = buffer_pfpd[241];

    auto g_y_xyy_y_xz = buffer_pfpd[242];

    auto g_y_xyy_y_yy = buffer_pfpd[243];

    auto g_y_xyy_y_yz = buffer_pfpd[244];

    auto g_y_xyy_y_zz = buffer_pfpd[245];

    auto g_y_xyy_z_xx = buffer_pfpd[246];

    auto g_y_xyy_z_xy = buffer_pfpd[247];

    auto g_y_xyy_z_xz = buffer_pfpd[248];

    auto g_y_xyy_z_yy = buffer_pfpd[249];

    auto g_y_xyy_z_yz = buffer_pfpd[250];

    auto g_y_xyy_z_zz = buffer_pfpd[251];

    auto g_y_xyz_x_xx = buffer_pfpd[252];

    auto g_y_xyz_x_xy = buffer_pfpd[253];

    auto g_y_xyz_x_xz = buffer_pfpd[254];

    auto g_y_xyz_x_yy = buffer_pfpd[255];

    auto g_y_xyz_x_yz = buffer_pfpd[256];

    auto g_y_xyz_x_zz = buffer_pfpd[257];

    auto g_y_xyz_y_xx = buffer_pfpd[258];

    auto g_y_xyz_y_xy = buffer_pfpd[259];

    auto g_y_xyz_y_xz = buffer_pfpd[260];

    auto g_y_xyz_y_yy = buffer_pfpd[261];

    auto g_y_xyz_y_yz = buffer_pfpd[262];

    auto g_y_xyz_y_zz = buffer_pfpd[263];

    auto g_y_xyz_z_xx = buffer_pfpd[264];

    auto g_y_xyz_z_xy = buffer_pfpd[265];

    auto g_y_xyz_z_xz = buffer_pfpd[266];

    auto g_y_xyz_z_yy = buffer_pfpd[267];

    auto g_y_xyz_z_yz = buffer_pfpd[268];

    auto g_y_xyz_z_zz = buffer_pfpd[269];

    auto g_y_xzz_x_xx = buffer_pfpd[270];

    auto g_y_xzz_x_xy = buffer_pfpd[271];

    auto g_y_xzz_x_xz = buffer_pfpd[272];

    auto g_y_xzz_x_yy = buffer_pfpd[273];

    auto g_y_xzz_x_yz = buffer_pfpd[274];

    auto g_y_xzz_x_zz = buffer_pfpd[275];

    auto g_y_xzz_y_xx = buffer_pfpd[276];

    auto g_y_xzz_y_xy = buffer_pfpd[277];

    auto g_y_xzz_y_xz = buffer_pfpd[278];

    auto g_y_xzz_y_yy = buffer_pfpd[279];

    auto g_y_xzz_y_yz = buffer_pfpd[280];

    auto g_y_xzz_y_zz = buffer_pfpd[281];

    auto g_y_xzz_z_xx = buffer_pfpd[282];

    auto g_y_xzz_z_xy = buffer_pfpd[283];

    auto g_y_xzz_z_xz = buffer_pfpd[284];

    auto g_y_xzz_z_yy = buffer_pfpd[285];

    auto g_y_xzz_z_yz = buffer_pfpd[286];

    auto g_y_xzz_z_zz = buffer_pfpd[287];

    auto g_y_yyy_x_xx = buffer_pfpd[288];

    auto g_y_yyy_x_xy = buffer_pfpd[289];

    auto g_y_yyy_x_xz = buffer_pfpd[290];

    auto g_y_yyy_x_yy = buffer_pfpd[291];

    auto g_y_yyy_x_yz = buffer_pfpd[292];

    auto g_y_yyy_x_zz = buffer_pfpd[293];

    auto g_y_yyy_y_xx = buffer_pfpd[294];

    auto g_y_yyy_y_xy = buffer_pfpd[295];

    auto g_y_yyy_y_xz = buffer_pfpd[296];

    auto g_y_yyy_y_yy = buffer_pfpd[297];

    auto g_y_yyy_y_yz = buffer_pfpd[298];

    auto g_y_yyy_y_zz = buffer_pfpd[299];

    auto g_y_yyy_z_xx = buffer_pfpd[300];

    auto g_y_yyy_z_xy = buffer_pfpd[301];

    auto g_y_yyy_z_xz = buffer_pfpd[302];

    auto g_y_yyy_z_yy = buffer_pfpd[303];

    auto g_y_yyy_z_yz = buffer_pfpd[304];

    auto g_y_yyy_z_zz = buffer_pfpd[305];

    auto g_y_yyz_x_xx = buffer_pfpd[306];

    auto g_y_yyz_x_xy = buffer_pfpd[307];

    auto g_y_yyz_x_xz = buffer_pfpd[308];

    auto g_y_yyz_x_yy = buffer_pfpd[309];

    auto g_y_yyz_x_yz = buffer_pfpd[310];

    auto g_y_yyz_x_zz = buffer_pfpd[311];

    auto g_y_yyz_y_xx = buffer_pfpd[312];

    auto g_y_yyz_y_xy = buffer_pfpd[313];

    auto g_y_yyz_y_xz = buffer_pfpd[314];

    auto g_y_yyz_y_yy = buffer_pfpd[315];

    auto g_y_yyz_y_yz = buffer_pfpd[316];

    auto g_y_yyz_y_zz = buffer_pfpd[317];

    auto g_y_yyz_z_xx = buffer_pfpd[318];

    auto g_y_yyz_z_xy = buffer_pfpd[319];

    auto g_y_yyz_z_xz = buffer_pfpd[320];

    auto g_y_yyz_z_yy = buffer_pfpd[321];

    auto g_y_yyz_z_yz = buffer_pfpd[322];

    auto g_y_yyz_z_zz = buffer_pfpd[323];

    auto g_y_yzz_x_xx = buffer_pfpd[324];

    auto g_y_yzz_x_xy = buffer_pfpd[325];

    auto g_y_yzz_x_xz = buffer_pfpd[326];

    auto g_y_yzz_x_yy = buffer_pfpd[327];

    auto g_y_yzz_x_yz = buffer_pfpd[328];

    auto g_y_yzz_x_zz = buffer_pfpd[329];

    auto g_y_yzz_y_xx = buffer_pfpd[330];

    auto g_y_yzz_y_xy = buffer_pfpd[331];

    auto g_y_yzz_y_xz = buffer_pfpd[332];

    auto g_y_yzz_y_yy = buffer_pfpd[333];

    auto g_y_yzz_y_yz = buffer_pfpd[334];

    auto g_y_yzz_y_zz = buffer_pfpd[335];

    auto g_y_yzz_z_xx = buffer_pfpd[336];

    auto g_y_yzz_z_xy = buffer_pfpd[337];

    auto g_y_yzz_z_xz = buffer_pfpd[338];

    auto g_y_yzz_z_yy = buffer_pfpd[339];

    auto g_y_yzz_z_yz = buffer_pfpd[340];

    auto g_y_yzz_z_zz = buffer_pfpd[341];

    auto g_y_zzz_x_xx = buffer_pfpd[342];

    auto g_y_zzz_x_xy = buffer_pfpd[343];

    auto g_y_zzz_x_xz = buffer_pfpd[344];

    auto g_y_zzz_x_yy = buffer_pfpd[345];

    auto g_y_zzz_x_yz = buffer_pfpd[346];

    auto g_y_zzz_x_zz = buffer_pfpd[347];

    auto g_y_zzz_y_xx = buffer_pfpd[348];

    auto g_y_zzz_y_xy = buffer_pfpd[349];

    auto g_y_zzz_y_xz = buffer_pfpd[350];

    auto g_y_zzz_y_yy = buffer_pfpd[351];

    auto g_y_zzz_y_yz = buffer_pfpd[352];

    auto g_y_zzz_y_zz = buffer_pfpd[353];

    auto g_y_zzz_z_xx = buffer_pfpd[354];

    auto g_y_zzz_z_xy = buffer_pfpd[355];

    auto g_y_zzz_z_xz = buffer_pfpd[356];

    auto g_y_zzz_z_yy = buffer_pfpd[357];

    auto g_y_zzz_z_yz = buffer_pfpd[358];

    auto g_y_zzz_z_zz = buffer_pfpd[359];

    auto g_z_xxx_x_xx = buffer_pfpd[360];

    auto g_z_xxx_x_xy = buffer_pfpd[361];

    auto g_z_xxx_x_xz = buffer_pfpd[362];

    auto g_z_xxx_x_yy = buffer_pfpd[363];

    auto g_z_xxx_x_yz = buffer_pfpd[364];

    auto g_z_xxx_x_zz = buffer_pfpd[365];

    auto g_z_xxx_y_xx = buffer_pfpd[366];

    auto g_z_xxx_y_xy = buffer_pfpd[367];

    auto g_z_xxx_y_xz = buffer_pfpd[368];

    auto g_z_xxx_y_yy = buffer_pfpd[369];

    auto g_z_xxx_y_yz = buffer_pfpd[370];

    auto g_z_xxx_y_zz = buffer_pfpd[371];

    auto g_z_xxx_z_xx = buffer_pfpd[372];

    auto g_z_xxx_z_xy = buffer_pfpd[373];

    auto g_z_xxx_z_xz = buffer_pfpd[374];

    auto g_z_xxx_z_yy = buffer_pfpd[375];

    auto g_z_xxx_z_yz = buffer_pfpd[376];

    auto g_z_xxx_z_zz = buffer_pfpd[377];

    auto g_z_xxy_x_xx = buffer_pfpd[378];

    auto g_z_xxy_x_xy = buffer_pfpd[379];

    auto g_z_xxy_x_xz = buffer_pfpd[380];

    auto g_z_xxy_x_yy = buffer_pfpd[381];

    auto g_z_xxy_x_yz = buffer_pfpd[382];

    auto g_z_xxy_x_zz = buffer_pfpd[383];

    auto g_z_xxy_y_xx = buffer_pfpd[384];

    auto g_z_xxy_y_xy = buffer_pfpd[385];

    auto g_z_xxy_y_xz = buffer_pfpd[386];

    auto g_z_xxy_y_yy = buffer_pfpd[387];

    auto g_z_xxy_y_yz = buffer_pfpd[388];

    auto g_z_xxy_y_zz = buffer_pfpd[389];

    auto g_z_xxy_z_xx = buffer_pfpd[390];

    auto g_z_xxy_z_xy = buffer_pfpd[391];

    auto g_z_xxy_z_xz = buffer_pfpd[392];

    auto g_z_xxy_z_yy = buffer_pfpd[393];

    auto g_z_xxy_z_yz = buffer_pfpd[394];

    auto g_z_xxy_z_zz = buffer_pfpd[395];

    auto g_z_xxz_x_xx = buffer_pfpd[396];

    auto g_z_xxz_x_xy = buffer_pfpd[397];

    auto g_z_xxz_x_xz = buffer_pfpd[398];

    auto g_z_xxz_x_yy = buffer_pfpd[399];

    auto g_z_xxz_x_yz = buffer_pfpd[400];

    auto g_z_xxz_x_zz = buffer_pfpd[401];

    auto g_z_xxz_y_xx = buffer_pfpd[402];

    auto g_z_xxz_y_xy = buffer_pfpd[403];

    auto g_z_xxz_y_xz = buffer_pfpd[404];

    auto g_z_xxz_y_yy = buffer_pfpd[405];

    auto g_z_xxz_y_yz = buffer_pfpd[406];

    auto g_z_xxz_y_zz = buffer_pfpd[407];

    auto g_z_xxz_z_xx = buffer_pfpd[408];

    auto g_z_xxz_z_xy = buffer_pfpd[409];

    auto g_z_xxz_z_xz = buffer_pfpd[410];

    auto g_z_xxz_z_yy = buffer_pfpd[411];

    auto g_z_xxz_z_yz = buffer_pfpd[412];

    auto g_z_xxz_z_zz = buffer_pfpd[413];

    auto g_z_xyy_x_xx = buffer_pfpd[414];

    auto g_z_xyy_x_xy = buffer_pfpd[415];

    auto g_z_xyy_x_xz = buffer_pfpd[416];

    auto g_z_xyy_x_yy = buffer_pfpd[417];

    auto g_z_xyy_x_yz = buffer_pfpd[418];

    auto g_z_xyy_x_zz = buffer_pfpd[419];

    auto g_z_xyy_y_xx = buffer_pfpd[420];

    auto g_z_xyy_y_xy = buffer_pfpd[421];

    auto g_z_xyy_y_xz = buffer_pfpd[422];

    auto g_z_xyy_y_yy = buffer_pfpd[423];

    auto g_z_xyy_y_yz = buffer_pfpd[424];

    auto g_z_xyy_y_zz = buffer_pfpd[425];

    auto g_z_xyy_z_xx = buffer_pfpd[426];

    auto g_z_xyy_z_xy = buffer_pfpd[427];

    auto g_z_xyy_z_xz = buffer_pfpd[428];

    auto g_z_xyy_z_yy = buffer_pfpd[429];

    auto g_z_xyy_z_yz = buffer_pfpd[430];

    auto g_z_xyy_z_zz = buffer_pfpd[431];

    auto g_z_xyz_x_xx = buffer_pfpd[432];

    auto g_z_xyz_x_xy = buffer_pfpd[433];

    auto g_z_xyz_x_xz = buffer_pfpd[434];

    auto g_z_xyz_x_yy = buffer_pfpd[435];

    auto g_z_xyz_x_yz = buffer_pfpd[436];

    auto g_z_xyz_x_zz = buffer_pfpd[437];

    auto g_z_xyz_y_xx = buffer_pfpd[438];

    auto g_z_xyz_y_xy = buffer_pfpd[439];

    auto g_z_xyz_y_xz = buffer_pfpd[440];

    auto g_z_xyz_y_yy = buffer_pfpd[441];

    auto g_z_xyz_y_yz = buffer_pfpd[442];

    auto g_z_xyz_y_zz = buffer_pfpd[443];

    auto g_z_xyz_z_xx = buffer_pfpd[444];

    auto g_z_xyz_z_xy = buffer_pfpd[445];

    auto g_z_xyz_z_xz = buffer_pfpd[446];

    auto g_z_xyz_z_yy = buffer_pfpd[447];

    auto g_z_xyz_z_yz = buffer_pfpd[448];

    auto g_z_xyz_z_zz = buffer_pfpd[449];

    auto g_z_xzz_x_xx = buffer_pfpd[450];

    auto g_z_xzz_x_xy = buffer_pfpd[451];

    auto g_z_xzz_x_xz = buffer_pfpd[452];

    auto g_z_xzz_x_yy = buffer_pfpd[453];

    auto g_z_xzz_x_yz = buffer_pfpd[454];

    auto g_z_xzz_x_zz = buffer_pfpd[455];

    auto g_z_xzz_y_xx = buffer_pfpd[456];

    auto g_z_xzz_y_xy = buffer_pfpd[457];

    auto g_z_xzz_y_xz = buffer_pfpd[458];

    auto g_z_xzz_y_yy = buffer_pfpd[459];

    auto g_z_xzz_y_yz = buffer_pfpd[460];

    auto g_z_xzz_y_zz = buffer_pfpd[461];

    auto g_z_xzz_z_xx = buffer_pfpd[462];

    auto g_z_xzz_z_xy = buffer_pfpd[463];

    auto g_z_xzz_z_xz = buffer_pfpd[464];

    auto g_z_xzz_z_yy = buffer_pfpd[465];

    auto g_z_xzz_z_yz = buffer_pfpd[466];

    auto g_z_xzz_z_zz = buffer_pfpd[467];

    auto g_z_yyy_x_xx = buffer_pfpd[468];

    auto g_z_yyy_x_xy = buffer_pfpd[469];

    auto g_z_yyy_x_xz = buffer_pfpd[470];

    auto g_z_yyy_x_yy = buffer_pfpd[471];

    auto g_z_yyy_x_yz = buffer_pfpd[472];

    auto g_z_yyy_x_zz = buffer_pfpd[473];

    auto g_z_yyy_y_xx = buffer_pfpd[474];

    auto g_z_yyy_y_xy = buffer_pfpd[475];

    auto g_z_yyy_y_xz = buffer_pfpd[476];

    auto g_z_yyy_y_yy = buffer_pfpd[477];

    auto g_z_yyy_y_yz = buffer_pfpd[478];

    auto g_z_yyy_y_zz = buffer_pfpd[479];

    auto g_z_yyy_z_xx = buffer_pfpd[480];

    auto g_z_yyy_z_xy = buffer_pfpd[481];

    auto g_z_yyy_z_xz = buffer_pfpd[482];

    auto g_z_yyy_z_yy = buffer_pfpd[483];

    auto g_z_yyy_z_yz = buffer_pfpd[484];

    auto g_z_yyy_z_zz = buffer_pfpd[485];

    auto g_z_yyz_x_xx = buffer_pfpd[486];

    auto g_z_yyz_x_xy = buffer_pfpd[487];

    auto g_z_yyz_x_xz = buffer_pfpd[488];

    auto g_z_yyz_x_yy = buffer_pfpd[489];

    auto g_z_yyz_x_yz = buffer_pfpd[490];

    auto g_z_yyz_x_zz = buffer_pfpd[491];

    auto g_z_yyz_y_xx = buffer_pfpd[492];

    auto g_z_yyz_y_xy = buffer_pfpd[493];

    auto g_z_yyz_y_xz = buffer_pfpd[494];

    auto g_z_yyz_y_yy = buffer_pfpd[495];

    auto g_z_yyz_y_yz = buffer_pfpd[496];

    auto g_z_yyz_y_zz = buffer_pfpd[497];

    auto g_z_yyz_z_xx = buffer_pfpd[498];

    auto g_z_yyz_z_xy = buffer_pfpd[499];

    auto g_z_yyz_z_xz = buffer_pfpd[500];

    auto g_z_yyz_z_yy = buffer_pfpd[501];

    auto g_z_yyz_z_yz = buffer_pfpd[502];

    auto g_z_yyz_z_zz = buffer_pfpd[503];

    auto g_z_yzz_x_xx = buffer_pfpd[504];

    auto g_z_yzz_x_xy = buffer_pfpd[505];

    auto g_z_yzz_x_xz = buffer_pfpd[506];

    auto g_z_yzz_x_yy = buffer_pfpd[507];

    auto g_z_yzz_x_yz = buffer_pfpd[508];

    auto g_z_yzz_x_zz = buffer_pfpd[509];

    auto g_z_yzz_y_xx = buffer_pfpd[510];

    auto g_z_yzz_y_xy = buffer_pfpd[511];

    auto g_z_yzz_y_xz = buffer_pfpd[512];

    auto g_z_yzz_y_yy = buffer_pfpd[513];

    auto g_z_yzz_y_yz = buffer_pfpd[514];

    auto g_z_yzz_y_zz = buffer_pfpd[515];

    auto g_z_yzz_z_xx = buffer_pfpd[516];

    auto g_z_yzz_z_xy = buffer_pfpd[517];

    auto g_z_yzz_z_xz = buffer_pfpd[518];

    auto g_z_yzz_z_yy = buffer_pfpd[519];

    auto g_z_yzz_z_yz = buffer_pfpd[520];

    auto g_z_yzz_z_zz = buffer_pfpd[521];

    auto g_z_zzz_x_xx = buffer_pfpd[522];

    auto g_z_zzz_x_xy = buffer_pfpd[523];

    auto g_z_zzz_x_xz = buffer_pfpd[524];

    auto g_z_zzz_x_yy = buffer_pfpd[525];

    auto g_z_zzz_x_yz = buffer_pfpd[526];

    auto g_z_zzz_x_zz = buffer_pfpd[527];

    auto g_z_zzz_y_xx = buffer_pfpd[528];

    auto g_z_zzz_y_xy = buffer_pfpd[529];

    auto g_z_zzz_y_xz = buffer_pfpd[530];

    auto g_z_zzz_y_yy = buffer_pfpd[531];

    auto g_z_zzz_y_yz = buffer_pfpd[532];

    auto g_z_zzz_y_zz = buffer_pfpd[533];

    auto g_z_zzz_z_xx = buffer_pfpd[534];

    auto g_z_zzz_z_xy = buffer_pfpd[535];

    auto g_z_zzz_z_xz = buffer_pfpd[536];

    auto g_z_zzz_z_yy = buffer_pfpd[537];

    auto g_z_zzz_z_yz = buffer_pfpd[538];

    auto g_z_zzz_z_zz = buffer_pfpd[539];

    /// Set up components of auxilary buffer : buffer_fppd

    auto g_xxx_x_x_xx = buffer_fppd[0];

    auto g_xxx_x_x_xy = buffer_fppd[1];

    auto g_xxx_x_x_xz = buffer_fppd[2];

    auto g_xxx_x_x_yy = buffer_fppd[3];

    auto g_xxx_x_x_yz = buffer_fppd[4];

    auto g_xxx_x_x_zz = buffer_fppd[5];

    auto g_xxx_x_y_xx = buffer_fppd[6];

    auto g_xxx_x_y_xy = buffer_fppd[7];

    auto g_xxx_x_y_xz = buffer_fppd[8];

    auto g_xxx_x_y_yy = buffer_fppd[9];

    auto g_xxx_x_y_yz = buffer_fppd[10];

    auto g_xxx_x_y_zz = buffer_fppd[11];

    auto g_xxx_x_z_xx = buffer_fppd[12];

    auto g_xxx_x_z_xy = buffer_fppd[13];

    auto g_xxx_x_z_xz = buffer_fppd[14];

    auto g_xxx_x_z_yy = buffer_fppd[15];

    auto g_xxx_x_z_yz = buffer_fppd[16];

    auto g_xxx_x_z_zz = buffer_fppd[17];

    auto g_xxx_y_x_xx = buffer_fppd[18];

    auto g_xxx_y_x_xy = buffer_fppd[19];

    auto g_xxx_y_x_xz = buffer_fppd[20];

    auto g_xxx_y_x_yy = buffer_fppd[21];

    auto g_xxx_y_x_yz = buffer_fppd[22];

    auto g_xxx_y_x_zz = buffer_fppd[23];

    auto g_xxx_y_y_xx = buffer_fppd[24];

    auto g_xxx_y_y_xy = buffer_fppd[25];

    auto g_xxx_y_y_xz = buffer_fppd[26];

    auto g_xxx_y_y_yy = buffer_fppd[27];

    auto g_xxx_y_y_yz = buffer_fppd[28];

    auto g_xxx_y_y_zz = buffer_fppd[29];

    auto g_xxx_y_z_xx = buffer_fppd[30];

    auto g_xxx_y_z_xy = buffer_fppd[31];

    auto g_xxx_y_z_xz = buffer_fppd[32];

    auto g_xxx_y_z_yy = buffer_fppd[33];

    auto g_xxx_y_z_yz = buffer_fppd[34];

    auto g_xxx_y_z_zz = buffer_fppd[35];

    auto g_xxx_z_x_xx = buffer_fppd[36];

    auto g_xxx_z_x_xy = buffer_fppd[37];

    auto g_xxx_z_x_xz = buffer_fppd[38];

    auto g_xxx_z_x_yy = buffer_fppd[39];

    auto g_xxx_z_x_yz = buffer_fppd[40];

    auto g_xxx_z_x_zz = buffer_fppd[41];

    auto g_xxx_z_y_xx = buffer_fppd[42];

    auto g_xxx_z_y_xy = buffer_fppd[43];

    auto g_xxx_z_y_xz = buffer_fppd[44];

    auto g_xxx_z_y_yy = buffer_fppd[45];

    auto g_xxx_z_y_yz = buffer_fppd[46];

    auto g_xxx_z_y_zz = buffer_fppd[47];

    auto g_xxx_z_z_xx = buffer_fppd[48];

    auto g_xxx_z_z_xy = buffer_fppd[49];

    auto g_xxx_z_z_xz = buffer_fppd[50];

    auto g_xxx_z_z_yy = buffer_fppd[51];

    auto g_xxx_z_z_yz = buffer_fppd[52];

    auto g_xxx_z_z_zz = buffer_fppd[53];

    auto g_xxy_x_x_xx = buffer_fppd[54];

    auto g_xxy_x_x_xy = buffer_fppd[55];

    auto g_xxy_x_x_xz = buffer_fppd[56];

    auto g_xxy_x_x_yy = buffer_fppd[57];

    auto g_xxy_x_x_yz = buffer_fppd[58];

    auto g_xxy_x_x_zz = buffer_fppd[59];

    auto g_xxy_x_y_xx = buffer_fppd[60];

    auto g_xxy_x_y_xy = buffer_fppd[61];

    auto g_xxy_x_y_xz = buffer_fppd[62];

    auto g_xxy_x_y_yy = buffer_fppd[63];

    auto g_xxy_x_y_yz = buffer_fppd[64];

    auto g_xxy_x_y_zz = buffer_fppd[65];

    auto g_xxy_x_z_xx = buffer_fppd[66];

    auto g_xxy_x_z_xy = buffer_fppd[67];

    auto g_xxy_x_z_xz = buffer_fppd[68];

    auto g_xxy_x_z_yy = buffer_fppd[69];

    auto g_xxy_x_z_yz = buffer_fppd[70];

    auto g_xxy_x_z_zz = buffer_fppd[71];

    auto g_xxy_y_x_xx = buffer_fppd[72];

    auto g_xxy_y_x_xy = buffer_fppd[73];

    auto g_xxy_y_x_xz = buffer_fppd[74];

    auto g_xxy_y_x_yy = buffer_fppd[75];

    auto g_xxy_y_x_yz = buffer_fppd[76];

    auto g_xxy_y_x_zz = buffer_fppd[77];

    auto g_xxy_y_y_xx = buffer_fppd[78];

    auto g_xxy_y_y_xy = buffer_fppd[79];

    auto g_xxy_y_y_xz = buffer_fppd[80];

    auto g_xxy_y_y_yy = buffer_fppd[81];

    auto g_xxy_y_y_yz = buffer_fppd[82];

    auto g_xxy_y_y_zz = buffer_fppd[83];

    auto g_xxy_y_z_xx = buffer_fppd[84];

    auto g_xxy_y_z_xy = buffer_fppd[85];

    auto g_xxy_y_z_xz = buffer_fppd[86];

    auto g_xxy_y_z_yy = buffer_fppd[87];

    auto g_xxy_y_z_yz = buffer_fppd[88];

    auto g_xxy_y_z_zz = buffer_fppd[89];

    auto g_xxy_z_x_xx = buffer_fppd[90];

    auto g_xxy_z_x_xy = buffer_fppd[91];

    auto g_xxy_z_x_xz = buffer_fppd[92];

    auto g_xxy_z_x_yy = buffer_fppd[93];

    auto g_xxy_z_x_yz = buffer_fppd[94];

    auto g_xxy_z_x_zz = buffer_fppd[95];

    auto g_xxy_z_y_xx = buffer_fppd[96];

    auto g_xxy_z_y_xy = buffer_fppd[97];

    auto g_xxy_z_y_xz = buffer_fppd[98];

    auto g_xxy_z_y_yy = buffer_fppd[99];

    auto g_xxy_z_y_yz = buffer_fppd[100];

    auto g_xxy_z_y_zz = buffer_fppd[101];

    auto g_xxy_z_z_xx = buffer_fppd[102];

    auto g_xxy_z_z_xy = buffer_fppd[103];

    auto g_xxy_z_z_xz = buffer_fppd[104];

    auto g_xxy_z_z_yy = buffer_fppd[105];

    auto g_xxy_z_z_yz = buffer_fppd[106];

    auto g_xxy_z_z_zz = buffer_fppd[107];

    auto g_xxz_x_x_xx = buffer_fppd[108];

    auto g_xxz_x_x_xy = buffer_fppd[109];

    auto g_xxz_x_x_xz = buffer_fppd[110];

    auto g_xxz_x_x_yy = buffer_fppd[111];

    auto g_xxz_x_x_yz = buffer_fppd[112];

    auto g_xxz_x_x_zz = buffer_fppd[113];

    auto g_xxz_x_y_xx = buffer_fppd[114];

    auto g_xxz_x_y_xy = buffer_fppd[115];

    auto g_xxz_x_y_xz = buffer_fppd[116];

    auto g_xxz_x_y_yy = buffer_fppd[117];

    auto g_xxz_x_y_yz = buffer_fppd[118];

    auto g_xxz_x_y_zz = buffer_fppd[119];

    auto g_xxz_x_z_xx = buffer_fppd[120];

    auto g_xxz_x_z_xy = buffer_fppd[121];

    auto g_xxz_x_z_xz = buffer_fppd[122];

    auto g_xxz_x_z_yy = buffer_fppd[123];

    auto g_xxz_x_z_yz = buffer_fppd[124];

    auto g_xxz_x_z_zz = buffer_fppd[125];

    auto g_xxz_y_x_xx = buffer_fppd[126];

    auto g_xxz_y_x_xy = buffer_fppd[127];

    auto g_xxz_y_x_xz = buffer_fppd[128];

    auto g_xxz_y_x_yy = buffer_fppd[129];

    auto g_xxz_y_x_yz = buffer_fppd[130];

    auto g_xxz_y_x_zz = buffer_fppd[131];

    auto g_xxz_y_y_xx = buffer_fppd[132];

    auto g_xxz_y_y_xy = buffer_fppd[133];

    auto g_xxz_y_y_xz = buffer_fppd[134];

    auto g_xxz_y_y_yy = buffer_fppd[135];

    auto g_xxz_y_y_yz = buffer_fppd[136];

    auto g_xxz_y_y_zz = buffer_fppd[137];

    auto g_xxz_y_z_xx = buffer_fppd[138];

    auto g_xxz_y_z_xy = buffer_fppd[139];

    auto g_xxz_y_z_xz = buffer_fppd[140];

    auto g_xxz_y_z_yy = buffer_fppd[141];

    auto g_xxz_y_z_yz = buffer_fppd[142];

    auto g_xxz_y_z_zz = buffer_fppd[143];

    auto g_xxz_z_x_xx = buffer_fppd[144];

    auto g_xxz_z_x_xy = buffer_fppd[145];

    auto g_xxz_z_x_xz = buffer_fppd[146];

    auto g_xxz_z_x_yy = buffer_fppd[147];

    auto g_xxz_z_x_yz = buffer_fppd[148];

    auto g_xxz_z_x_zz = buffer_fppd[149];

    auto g_xxz_z_y_xx = buffer_fppd[150];

    auto g_xxz_z_y_xy = buffer_fppd[151];

    auto g_xxz_z_y_xz = buffer_fppd[152];

    auto g_xxz_z_y_yy = buffer_fppd[153];

    auto g_xxz_z_y_yz = buffer_fppd[154];

    auto g_xxz_z_y_zz = buffer_fppd[155];

    auto g_xxz_z_z_xx = buffer_fppd[156];

    auto g_xxz_z_z_xy = buffer_fppd[157];

    auto g_xxz_z_z_xz = buffer_fppd[158];

    auto g_xxz_z_z_yy = buffer_fppd[159];

    auto g_xxz_z_z_yz = buffer_fppd[160];

    auto g_xxz_z_z_zz = buffer_fppd[161];

    auto g_xyy_x_x_xx = buffer_fppd[162];

    auto g_xyy_x_x_xy = buffer_fppd[163];

    auto g_xyy_x_x_xz = buffer_fppd[164];

    auto g_xyy_x_x_yy = buffer_fppd[165];

    auto g_xyy_x_x_yz = buffer_fppd[166];

    auto g_xyy_x_x_zz = buffer_fppd[167];

    auto g_xyy_x_y_xx = buffer_fppd[168];

    auto g_xyy_x_y_xy = buffer_fppd[169];

    auto g_xyy_x_y_xz = buffer_fppd[170];

    auto g_xyy_x_y_yy = buffer_fppd[171];

    auto g_xyy_x_y_yz = buffer_fppd[172];

    auto g_xyy_x_y_zz = buffer_fppd[173];

    auto g_xyy_x_z_xx = buffer_fppd[174];

    auto g_xyy_x_z_xy = buffer_fppd[175];

    auto g_xyy_x_z_xz = buffer_fppd[176];

    auto g_xyy_x_z_yy = buffer_fppd[177];

    auto g_xyy_x_z_yz = buffer_fppd[178];

    auto g_xyy_x_z_zz = buffer_fppd[179];

    auto g_xyy_y_x_xx = buffer_fppd[180];

    auto g_xyy_y_x_xy = buffer_fppd[181];

    auto g_xyy_y_x_xz = buffer_fppd[182];

    auto g_xyy_y_x_yy = buffer_fppd[183];

    auto g_xyy_y_x_yz = buffer_fppd[184];

    auto g_xyy_y_x_zz = buffer_fppd[185];

    auto g_xyy_y_y_xx = buffer_fppd[186];

    auto g_xyy_y_y_xy = buffer_fppd[187];

    auto g_xyy_y_y_xz = buffer_fppd[188];

    auto g_xyy_y_y_yy = buffer_fppd[189];

    auto g_xyy_y_y_yz = buffer_fppd[190];

    auto g_xyy_y_y_zz = buffer_fppd[191];

    auto g_xyy_y_z_xx = buffer_fppd[192];

    auto g_xyy_y_z_xy = buffer_fppd[193];

    auto g_xyy_y_z_xz = buffer_fppd[194];

    auto g_xyy_y_z_yy = buffer_fppd[195];

    auto g_xyy_y_z_yz = buffer_fppd[196];

    auto g_xyy_y_z_zz = buffer_fppd[197];

    auto g_xyy_z_x_xx = buffer_fppd[198];

    auto g_xyy_z_x_xy = buffer_fppd[199];

    auto g_xyy_z_x_xz = buffer_fppd[200];

    auto g_xyy_z_x_yy = buffer_fppd[201];

    auto g_xyy_z_x_yz = buffer_fppd[202];

    auto g_xyy_z_x_zz = buffer_fppd[203];

    auto g_xyy_z_y_xx = buffer_fppd[204];

    auto g_xyy_z_y_xy = buffer_fppd[205];

    auto g_xyy_z_y_xz = buffer_fppd[206];

    auto g_xyy_z_y_yy = buffer_fppd[207];

    auto g_xyy_z_y_yz = buffer_fppd[208];

    auto g_xyy_z_y_zz = buffer_fppd[209];

    auto g_xyy_z_z_xx = buffer_fppd[210];

    auto g_xyy_z_z_xy = buffer_fppd[211];

    auto g_xyy_z_z_xz = buffer_fppd[212];

    auto g_xyy_z_z_yy = buffer_fppd[213];

    auto g_xyy_z_z_yz = buffer_fppd[214];

    auto g_xyy_z_z_zz = buffer_fppd[215];

    auto g_xyz_x_x_xx = buffer_fppd[216];

    auto g_xyz_x_x_xy = buffer_fppd[217];

    auto g_xyz_x_x_xz = buffer_fppd[218];

    auto g_xyz_x_x_yy = buffer_fppd[219];

    auto g_xyz_x_x_yz = buffer_fppd[220];

    auto g_xyz_x_x_zz = buffer_fppd[221];

    auto g_xyz_x_y_xx = buffer_fppd[222];

    auto g_xyz_x_y_xy = buffer_fppd[223];

    auto g_xyz_x_y_xz = buffer_fppd[224];

    auto g_xyz_x_y_yy = buffer_fppd[225];

    auto g_xyz_x_y_yz = buffer_fppd[226];

    auto g_xyz_x_y_zz = buffer_fppd[227];

    auto g_xyz_x_z_xx = buffer_fppd[228];

    auto g_xyz_x_z_xy = buffer_fppd[229];

    auto g_xyz_x_z_xz = buffer_fppd[230];

    auto g_xyz_x_z_yy = buffer_fppd[231];

    auto g_xyz_x_z_yz = buffer_fppd[232];

    auto g_xyz_x_z_zz = buffer_fppd[233];

    auto g_xyz_y_x_xx = buffer_fppd[234];

    auto g_xyz_y_x_xy = buffer_fppd[235];

    auto g_xyz_y_x_xz = buffer_fppd[236];

    auto g_xyz_y_x_yy = buffer_fppd[237];

    auto g_xyz_y_x_yz = buffer_fppd[238];

    auto g_xyz_y_x_zz = buffer_fppd[239];

    auto g_xyz_y_y_xx = buffer_fppd[240];

    auto g_xyz_y_y_xy = buffer_fppd[241];

    auto g_xyz_y_y_xz = buffer_fppd[242];

    auto g_xyz_y_y_yy = buffer_fppd[243];

    auto g_xyz_y_y_yz = buffer_fppd[244];

    auto g_xyz_y_y_zz = buffer_fppd[245];

    auto g_xyz_y_z_xx = buffer_fppd[246];

    auto g_xyz_y_z_xy = buffer_fppd[247];

    auto g_xyz_y_z_xz = buffer_fppd[248];

    auto g_xyz_y_z_yy = buffer_fppd[249];

    auto g_xyz_y_z_yz = buffer_fppd[250];

    auto g_xyz_y_z_zz = buffer_fppd[251];

    auto g_xyz_z_x_xx = buffer_fppd[252];

    auto g_xyz_z_x_xy = buffer_fppd[253];

    auto g_xyz_z_x_xz = buffer_fppd[254];

    auto g_xyz_z_x_yy = buffer_fppd[255];

    auto g_xyz_z_x_yz = buffer_fppd[256];

    auto g_xyz_z_x_zz = buffer_fppd[257];

    auto g_xyz_z_y_xx = buffer_fppd[258];

    auto g_xyz_z_y_xy = buffer_fppd[259];

    auto g_xyz_z_y_xz = buffer_fppd[260];

    auto g_xyz_z_y_yy = buffer_fppd[261];

    auto g_xyz_z_y_yz = buffer_fppd[262];

    auto g_xyz_z_y_zz = buffer_fppd[263];

    auto g_xyz_z_z_xx = buffer_fppd[264];

    auto g_xyz_z_z_xy = buffer_fppd[265];

    auto g_xyz_z_z_xz = buffer_fppd[266];

    auto g_xyz_z_z_yy = buffer_fppd[267];

    auto g_xyz_z_z_yz = buffer_fppd[268];

    auto g_xyz_z_z_zz = buffer_fppd[269];

    auto g_xzz_x_x_xx = buffer_fppd[270];

    auto g_xzz_x_x_xy = buffer_fppd[271];

    auto g_xzz_x_x_xz = buffer_fppd[272];

    auto g_xzz_x_x_yy = buffer_fppd[273];

    auto g_xzz_x_x_yz = buffer_fppd[274];

    auto g_xzz_x_x_zz = buffer_fppd[275];

    auto g_xzz_x_y_xx = buffer_fppd[276];

    auto g_xzz_x_y_xy = buffer_fppd[277];

    auto g_xzz_x_y_xz = buffer_fppd[278];

    auto g_xzz_x_y_yy = buffer_fppd[279];

    auto g_xzz_x_y_yz = buffer_fppd[280];

    auto g_xzz_x_y_zz = buffer_fppd[281];

    auto g_xzz_x_z_xx = buffer_fppd[282];

    auto g_xzz_x_z_xy = buffer_fppd[283];

    auto g_xzz_x_z_xz = buffer_fppd[284];

    auto g_xzz_x_z_yy = buffer_fppd[285];

    auto g_xzz_x_z_yz = buffer_fppd[286];

    auto g_xzz_x_z_zz = buffer_fppd[287];

    auto g_xzz_y_x_xx = buffer_fppd[288];

    auto g_xzz_y_x_xy = buffer_fppd[289];

    auto g_xzz_y_x_xz = buffer_fppd[290];

    auto g_xzz_y_x_yy = buffer_fppd[291];

    auto g_xzz_y_x_yz = buffer_fppd[292];

    auto g_xzz_y_x_zz = buffer_fppd[293];

    auto g_xzz_y_y_xx = buffer_fppd[294];

    auto g_xzz_y_y_xy = buffer_fppd[295];

    auto g_xzz_y_y_xz = buffer_fppd[296];

    auto g_xzz_y_y_yy = buffer_fppd[297];

    auto g_xzz_y_y_yz = buffer_fppd[298];

    auto g_xzz_y_y_zz = buffer_fppd[299];

    auto g_xzz_y_z_xx = buffer_fppd[300];

    auto g_xzz_y_z_xy = buffer_fppd[301];

    auto g_xzz_y_z_xz = buffer_fppd[302];

    auto g_xzz_y_z_yy = buffer_fppd[303];

    auto g_xzz_y_z_yz = buffer_fppd[304];

    auto g_xzz_y_z_zz = buffer_fppd[305];

    auto g_xzz_z_x_xx = buffer_fppd[306];

    auto g_xzz_z_x_xy = buffer_fppd[307];

    auto g_xzz_z_x_xz = buffer_fppd[308];

    auto g_xzz_z_x_yy = buffer_fppd[309];

    auto g_xzz_z_x_yz = buffer_fppd[310];

    auto g_xzz_z_x_zz = buffer_fppd[311];

    auto g_xzz_z_y_xx = buffer_fppd[312];

    auto g_xzz_z_y_xy = buffer_fppd[313];

    auto g_xzz_z_y_xz = buffer_fppd[314];

    auto g_xzz_z_y_yy = buffer_fppd[315];

    auto g_xzz_z_y_yz = buffer_fppd[316];

    auto g_xzz_z_y_zz = buffer_fppd[317];

    auto g_xzz_z_z_xx = buffer_fppd[318];

    auto g_xzz_z_z_xy = buffer_fppd[319];

    auto g_xzz_z_z_xz = buffer_fppd[320];

    auto g_xzz_z_z_yy = buffer_fppd[321];

    auto g_xzz_z_z_yz = buffer_fppd[322];

    auto g_xzz_z_z_zz = buffer_fppd[323];

    auto g_yyy_x_x_xx = buffer_fppd[324];

    auto g_yyy_x_x_xy = buffer_fppd[325];

    auto g_yyy_x_x_xz = buffer_fppd[326];

    auto g_yyy_x_x_yy = buffer_fppd[327];

    auto g_yyy_x_x_yz = buffer_fppd[328];

    auto g_yyy_x_x_zz = buffer_fppd[329];

    auto g_yyy_x_y_xx = buffer_fppd[330];

    auto g_yyy_x_y_xy = buffer_fppd[331];

    auto g_yyy_x_y_xz = buffer_fppd[332];

    auto g_yyy_x_y_yy = buffer_fppd[333];

    auto g_yyy_x_y_yz = buffer_fppd[334];

    auto g_yyy_x_y_zz = buffer_fppd[335];

    auto g_yyy_x_z_xx = buffer_fppd[336];

    auto g_yyy_x_z_xy = buffer_fppd[337];

    auto g_yyy_x_z_xz = buffer_fppd[338];

    auto g_yyy_x_z_yy = buffer_fppd[339];

    auto g_yyy_x_z_yz = buffer_fppd[340];

    auto g_yyy_x_z_zz = buffer_fppd[341];

    auto g_yyy_y_x_xx = buffer_fppd[342];

    auto g_yyy_y_x_xy = buffer_fppd[343];

    auto g_yyy_y_x_xz = buffer_fppd[344];

    auto g_yyy_y_x_yy = buffer_fppd[345];

    auto g_yyy_y_x_yz = buffer_fppd[346];

    auto g_yyy_y_x_zz = buffer_fppd[347];

    auto g_yyy_y_y_xx = buffer_fppd[348];

    auto g_yyy_y_y_xy = buffer_fppd[349];

    auto g_yyy_y_y_xz = buffer_fppd[350];

    auto g_yyy_y_y_yy = buffer_fppd[351];

    auto g_yyy_y_y_yz = buffer_fppd[352];

    auto g_yyy_y_y_zz = buffer_fppd[353];

    auto g_yyy_y_z_xx = buffer_fppd[354];

    auto g_yyy_y_z_xy = buffer_fppd[355];

    auto g_yyy_y_z_xz = buffer_fppd[356];

    auto g_yyy_y_z_yy = buffer_fppd[357];

    auto g_yyy_y_z_yz = buffer_fppd[358];

    auto g_yyy_y_z_zz = buffer_fppd[359];

    auto g_yyy_z_x_xx = buffer_fppd[360];

    auto g_yyy_z_x_xy = buffer_fppd[361];

    auto g_yyy_z_x_xz = buffer_fppd[362];

    auto g_yyy_z_x_yy = buffer_fppd[363];

    auto g_yyy_z_x_yz = buffer_fppd[364];

    auto g_yyy_z_x_zz = buffer_fppd[365];

    auto g_yyy_z_y_xx = buffer_fppd[366];

    auto g_yyy_z_y_xy = buffer_fppd[367];

    auto g_yyy_z_y_xz = buffer_fppd[368];

    auto g_yyy_z_y_yy = buffer_fppd[369];

    auto g_yyy_z_y_yz = buffer_fppd[370];

    auto g_yyy_z_y_zz = buffer_fppd[371];

    auto g_yyy_z_z_xx = buffer_fppd[372];

    auto g_yyy_z_z_xy = buffer_fppd[373];

    auto g_yyy_z_z_xz = buffer_fppd[374];

    auto g_yyy_z_z_yy = buffer_fppd[375];

    auto g_yyy_z_z_yz = buffer_fppd[376];

    auto g_yyy_z_z_zz = buffer_fppd[377];

    auto g_yyz_x_x_xx = buffer_fppd[378];

    auto g_yyz_x_x_xy = buffer_fppd[379];

    auto g_yyz_x_x_xz = buffer_fppd[380];

    auto g_yyz_x_x_yy = buffer_fppd[381];

    auto g_yyz_x_x_yz = buffer_fppd[382];

    auto g_yyz_x_x_zz = buffer_fppd[383];

    auto g_yyz_x_y_xx = buffer_fppd[384];

    auto g_yyz_x_y_xy = buffer_fppd[385];

    auto g_yyz_x_y_xz = buffer_fppd[386];

    auto g_yyz_x_y_yy = buffer_fppd[387];

    auto g_yyz_x_y_yz = buffer_fppd[388];

    auto g_yyz_x_y_zz = buffer_fppd[389];

    auto g_yyz_x_z_xx = buffer_fppd[390];

    auto g_yyz_x_z_xy = buffer_fppd[391];

    auto g_yyz_x_z_xz = buffer_fppd[392];

    auto g_yyz_x_z_yy = buffer_fppd[393];

    auto g_yyz_x_z_yz = buffer_fppd[394];

    auto g_yyz_x_z_zz = buffer_fppd[395];

    auto g_yyz_y_x_xx = buffer_fppd[396];

    auto g_yyz_y_x_xy = buffer_fppd[397];

    auto g_yyz_y_x_xz = buffer_fppd[398];

    auto g_yyz_y_x_yy = buffer_fppd[399];

    auto g_yyz_y_x_yz = buffer_fppd[400];

    auto g_yyz_y_x_zz = buffer_fppd[401];

    auto g_yyz_y_y_xx = buffer_fppd[402];

    auto g_yyz_y_y_xy = buffer_fppd[403];

    auto g_yyz_y_y_xz = buffer_fppd[404];

    auto g_yyz_y_y_yy = buffer_fppd[405];

    auto g_yyz_y_y_yz = buffer_fppd[406];

    auto g_yyz_y_y_zz = buffer_fppd[407];

    auto g_yyz_y_z_xx = buffer_fppd[408];

    auto g_yyz_y_z_xy = buffer_fppd[409];

    auto g_yyz_y_z_xz = buffer_fppd[410];

    auto g_yyz_y_z_yy = buffer_fppd[411];

    auto g_yyz_y_z_yz = buffer_fppd[412];

    auto g_yyz_y_z_zz = buffer_fppd[413];

    auto g_yyz_z_x_xx = buffer_fppd[414];

    auto g_yyz_z_x_xy = buffer_fppd[415];

    auto g_yyz_z_x_xz = buffer_fppd[416];

    auto g_yyz_z_x_yy = buffer_fppd[417];

    auto g_yyz_z_x_yz = buffer_fppd[418];

    auto g_yyz_z_x_zz = buffer_fppd[419];

    auto g_yyz_z_y_xx = buffer_fppd[420];

    auto g_yyz_z_y_xy = buffer_fppd[421];

    auto g_yyz_z_y_xz = buffer_fppd[422];

    auto g_yyz_z_y_yy = buffer_fppd[423];

    auto g_yyz_z_y_yz = buffer_fppd[424];

    auto g_yyz_z_y_zz = buffer_fppd[425];

    auto g_yyz_z_z_xx = buffer_fppd[426];

    auto g_yyz_z_z_xy = buffer_fppd[427];

    auto g_yyz_z_z_xz = buffer_fppd[428];

    auto g_yyz_z_z_yy = buffer_fppd[429];

    auto g_yyz_z_z_yz = buffer_fppd[430];

    auto g_yyz_z_z_zz = buffer_fppd[431];

    auto g_yzz_x_x_xx = buffer_fppd[432];

    auto g_yzz_x_x_xy = buffer_fppd[433];

    auto g_yzz_x_x_xz = buffer_fppd[434];

    auto g_yzz_x_x_yy = buffer_fppd[435];

    auto g_yzz_x_x_yz = buffer_fppd[436];

    auto g_yzz_x_x_zz = buffer_fppd[437];

    auto g_yzz_x_y_xx = buffer_fppd[438];

    auto g_yzz_x_y_xy = buffer_fppd[439];

    auto g_yzz_x_y_xz = buffer_fppd[440];

    auto g_yzz_x_y_yy = buffer_fppd[441];

    auto g_yzz_x_y_yz = buffer_fppd[442];

    auto g_yzz_x_y_zz = buffer_fppd[443];

    auto g_yzz_x_z_xx = buffer_fppd[444];

    auto g_yzz_x_z_xy = buffer_fppd[445];

    auto g_yzz_x_z_xz = buffer_fppd[446];

    auto g_yzz_x_z_yy = buffer_fppd[447];

    auto g_yzz_x_z_yz = buffer_fppd[448];

    auto g_yzz_x_z_zz = buffer_fppd[449];

    auto g_yzz_y_x_xx = buffer_fppd[450];

    auto g_yzz_y_x_xy = buffer_fppd[451];

    auto g_yzz_y_x_xz = buffer_fppd[452];

    auto g_yzz_y_x_yy = buffer_fppd[453];

    auto g_yzz_y_x_yz = buffer_fppd[454];

    auto g_yzz_y_x_zz = buffer_fppd[455];

    auto g_yzz_y_y_xx = buffer_fppd[456];

    auto g_yzz_y_y_xy = buffer_fppd[457];

    auto g_yzz_y_y_xz = buffer_fppd[458];

    auto g_yzz_y_y_yy = buffer_fppd[459];

    auto g_yzz_y_y_yz = buffer_fppd[460];

    auto g_yzz_y_y_zz = buffer_fppd[461];

    auto g_yzz_y_z_xx = buffer_fppd[462];

    auto g_yzz_y_z_xy = buffer_fppd[463];

    auto g_yzz_y_z_xz = buffer_fppd[464];

    auto g_yzz_y_z_yy = buffer_fppd[465];

    auto g_yzz_y_z_yz = buffer_fppd[466];

    auto g_yzz_y_z_zz = buffer_fppd[467];

    auto g_yzz_z_x_xx = buffer_fppd[468];

    auto g_yzz_z_x_xy = buffer_fppd[469];

    auto g_yzz_z_x_xz = buffer_fppd[470];

    auto g_yzz_z_x_yy = buffer_fppd[471];

    auto g_yzz_z_x_yz = buffer_fppd[472];

    auto g_yzz_z_x_zz = buffer_fppd[473];

    auto g_yzz_z_y_xx = buffer_fppd[474];

    auto g_yzz_z_y_xy = buffer_fppd[475];

    auto g_yzz_z_y_xz = buffer_fppd[476];

    auto g_yzz_z_y_yy = buffer_fppd[477];

    auto g_yzz_z_y_yz = buffer_fppd[478];

    auto g_yzz_z_y_zz = buffer_fppd[479];

    auto g_yzz_z_z_xx = buffer_fppd[480];

    auto g_yzz_z_z_xy = buffer_fppd[481];

    auto g_yzz_z_z_xz = buffer_fppd[482];

    auto g_yzz_z_z_yy = buffer_fppd[483];

    auto g_yzz_z_z_yz = buffer_fppd[484];

    auto g_yzz_z_z_zz = buffer_fppd[485];

    auto g_zzz_x_x_xx = buffer_fppd[486];

    auto g_zzz_x_x_xy = buffer_fppd[487];

    auto g_zzz_x_x_xz = buffer_fppd[488];

    auto g_zzz_x_x_yy = buffer_fppd[489];

    auto g_zzz_x_x_yz = buffer_fppd[490];

    auto g_zzz_x_x_zz = buffer_fppd[491];

    auto g_zzz_x_y_xx = buffer_fppd[492];

    auto g_zzz_x_y_xy = buffer_fppd[493];

    auto g_zzz_x_y_xz = buffer_fppd[494];

    auto g_zzz_x_y_yy = buffer_fppd[495];

    auto g_zzz_x_y_yz = buffer_fppd[496];

    auto g_zzz_x_y_zz = buffer_fppd[497];

    auto g_zzz_x_z_xx = buffer_fppd[498];

    auto g_zzz_x_z_xy = buffer_fppd[499];

    auto g_zzz_x_z_xz = buffer_fppd[500];

    auto g_zzz_x_z_yy = buffer_fppd[501];

    auto g_zzz_x_z_yz = buffer_fppd[502];

    auto g_zzz_x_z_zz = buffer_fppd[503];

    auto g_zzz_y_x_xx = buffer_fppd[504];

    auto g_zzz_y_x_xy = buffer_fppd[505];

    auto g_zzz_y_x_xz = buffer_fppd[506];

    auto g_zzz_y_x_yy = buffer_fppd[507];

    auto g_zzz_y_x_yz = buffer_fppd[508];

    auto g_zzz_y_x_zz = buffer_fppd[509];

    auto g_zzz_y_y_xx = buffer_fppd[510];

    auto g_zzz_y_y_xy = buffer_fppd[511];

    auto g_zzz_y_y_xz = buffer_fppd[512];

    auto g_zzz_y_y_yy = buffer_fppd[513];

    auto g_zzz_y_y_yz = buffer_fppd[514];

    auto g_zzz_y_y_zz = buffer_fppd[515];

    auto g_zzz_y_z_xx = buffer_fppd[516];

    auto g_zzz_y_z_xy = buffer_fppd[517];

    auto g_zzz_y_z_xz = buffer_fppd[518];

    auto g_zzz_y_z_yy = buffer_fppd[519];

    auto g_zzz_y_z_yz = buffer_fppd[520];

    auto g_zzz_y_z_zz = buffer_fppd[521];

    auto g_zzz_z_x_xx = buffer_fppd[522];

    auto g_zzz_z_x_xy = buffer_fppd[523];

    auto g_zzz_z_x_xz = buffer_fppd[524];

    auto g_zzz_z_x_yy = buffer_fppd[525];

    auto g_zzz_z_x_yz = buffer_fppd[526];

    auto g_zzz_z_x_zz = buffer_fppd[527];

    auto g_zzz_z_y_xx = buffer_fppd[528];

    auto g_zzz_z_y_xy = buffer_fppd[529];

    auto g_zzz_z_y_xz = buffer_fppd[530];

    auto g_zzz_z_y_yy = buffer_fppd[531];

    auto g_zzz_z_y_yz = buffer_fppd[532];

    auto g_zzz_z_y_zz = buffer_fppd[533];

    auto g_zzz_z_z_xx = buffer_fppd[534];

    auto g_zzz_z_z_xy = buffer_fppd[535];

    auto g_zzz_z_z_xz = buffer_fppd[536];

    auto g_zzz_z_z_yy = buffer_fppd[537];

    auto g_zzz_z_z_yz = buffer_fppd[538];

    auto g_zzz_z_z_zz = buffer_fppd[539];

    /// Set up components of auxilary buffer : buffer_ffpd

    auto g_xxx_xxx_x_xx = buffer_ffpd[0];

    auto g_xxx_xxx_x_xy = buffer_ffpd[1];

    auto g_xxx_xxx_x_xz = buffer_ffpd[2];

    auto g_xxx_xxx_x_yy = buffer_ffpd[3];

    auto g_xxx_xxx_x_yz = buffer_ffpd[4];

    auto g_xxx_xxx_x_zz = buffer_ffpd[5];

    auto g_xxx_xxx_y_xx = buffer_ffpd[6];

    auto g_xxx_xxx_y_xy = buffer_ffpd[7];

    auto g_xxx_xxx_y_xz = buffer_ffpd[8];

    auto g_xxx_xxx_y_yy = buffer_ffpd[9];

    auto g_xxx_xxx_y_yz = buffer_ffpd[10];

    auto g_xxx_xxx_y_zz = buffer_ffpd[11];

    auto g_xxx_xxx_z_xx = buffer_ffpd[12];

    auto g_xxx_xxx_z_xy = buffer_ffpd[13];

    auto g_xxx_xxx_z_xz = buffer_ffpd[14];

    auto g_xxx_xxx_z_yy = buffer_ffpd[15];

    auto g_xxx_xxx_z_yz = buffer_ffpd[16];

    auto g_xxx_xxx_z_zz = buffer_ffpd[17];

    auto g_xxx_xxy_x_xx = buffer_ffpd[18];

    auto g_xxx_xxy_x_xy = buffer_ffpd[19];

    auto g_xxx_xxy_x_xz = buffer_ffpd[20];

    auto g_xxx_xxy_x_yy = buffer_ffpd[21];

    auto g_xxx_xxy_x_yz = buffer_ffpd[22];

    auto g_xxx_xxy_x_zz = buffer_ffpd[23];

    auto g_xxx_xxy_y_xx = buffer_ffpd[24];

    auto g_xxx_xxy_y_xy = buffer_ffpd[25];

    auto g_xxx_xxy_y_xz = buffer_ffpd[26];

    auto g_xxx_xxy_y_yy = buffer_ffpd[27];

    auto g_xxx_xxy_y_yz = buffer_ffpd[28];

    auto g_xxx_xxy_y_zz = buffer_ffpd[29];

    auto g_xxx_xxy_z_xx = buffer_ffpd[30];

    auto g_xxx_xxy_z_xy = buffer_ffpd[31];

    auto g_xxx_xxy_z_xz = buffer_ffpd[32];

    auto g_xxx_xxy_z_yy = buffer_ffpd[33];

    auto g_xxx_xxy_z_yz = buffer_ffpd[34];

    auto g_xxx_xxy_z_zz = buffer_ffpd[35];

    auto g_xxx_xxz_x_xx = buffer_ffpd[36];

    auto g_xxx_xxz_x_xy = buffer_ffpd[37];

    auto g_xxx_xxz_x_xz = buffer_ffpd[38];

    auto g_xxx_xxz_x_yy = buffer_ffpd[39];

    auto g_xxx_xxz_x_yz = buffer_ffpd[40];

    auto g_xxx_xxz_x_zz = buffer_ffpd[41];

    auto g_xxx_xxz_y_xx = buffer_ffpd[42];

    auto g_xxx_xxz_y_xy = buffer_ffpd[43];

    auto g_xxx_xxz_y_xz = buffer_ffpd[44];

    auto g_xxx_xxz_y_yy = buffer_ffpd[45];

    auto g_xxx_xxz_y_yz = buffer_ffpd[46];

    auto g_xxx_xxz_y_zz = buffer_ffpd[47];

    auto g_xxx_xxz_z_xx = buffer_ffpd[48];

    auto g_xxx_xxz_z_xy = buffer_ffpd[49];

    auto g_xxx_xxz_z_xz = buffer_ffpd[50];

    auto g_xxx_xxz_z_yy = buffer_ffpd[51];

    auto g_xxx_xxz_z_yz = buffer_ffpd[52];

    auto g_xxx_xxz_z_zz = buffer_ffpd[53];

    auto g_xxx_xyy_x_xx = buffer_ffpd[54];

    auto g_xxx_xyy_x_xy = buffer_ffpd[55];

    auto g_xxx_xyy_x_xz = buffer_ffpd[56];

    auto g_xxx_xyy_x_yy = buffer_ffpd[57];

    auto g_xxx_xyy_x_yz = buffer_ffpd[58];

    auto g_xxx_xyy_x_zz = buffer_ffpd[59];

    auto g_xxx_xyy_y_xx = buffer_ffpd[60];

    auto g_xxx_xyy_y_xy = buffer_ffpd[61];

    auto g_xxx_xyy_y_xz = buffer_ffpd[62];

    auto g_xxx_xyy_y_yy = buffer_ffpd[63];

    auto g_xxx_xyy_y_yz = buffer_ffpd[64];

    auto g_xxx_xyy_y_zz = buffer_ffpd[65];

    auto g_xxx_xyy_z_xx = buffer_ffpd[66];

    auto g_xxx_xyy_z_xy = buffer_ffpd[67];

    auto g_xxx_xyy_z_xz = buffer_ffpd[68];

    auto g_xxx_xyy_z_yy = buffer_ffpd[69];

    auto g_xxx_xyy_z_yz = buffer_ffpd[70];

    auto g_xxx_xyy_z_zz = buffer_ffpd[71];

    auto g_xxx_xyz_x_xx = buffer_ffpd[72];

    auto g_xxx_xyz_x_xy = buffer_ffpd[73];

    auto g_xxx_xyz_x_xz = buffer_ffpd[74];

    auto g_xxx_xyz_x_yy = buffer_ffpd[75];

    auto g_xxx_xyz_x_yz = buffer_ffpd[76];

    auto g_xxx_xyz_x_zz = buffer_ffpd[77];

    auto g_xxx_xyz_y_xx = buffer_ffpd[78];

    auto g_xxx_xyz_y_xy = buffer_ffpd[79];

    auto g_xxx_xyz_y_xz = buffer_ffpd[80];

    auto g_xxx_xyz_y_yy = buffer_ffpd[81];

    auto g_xxx_xyz_y_yz = buffer_ffpd[82];

    auto g_xxx_xyz_y_zz = buffer_ffpd[83];

    auto g_xxx_xyz_z_xx = buffer_ffpd[84];

    auto g_xxx_xyz_z_xy = buffer_ffpd[85];

    auto g_xxx_xyz_z_xz = buffer_ffpd[86];

    auto g_xxx_xyz_z_yy = buffer_ffpd[87];

    auto g_xxx_xyz_z_yz = buffer_ffpd[88];

    auto g_xxx_xyz_z_zz = buffer_ffpd[89];

    auto g_xxx_xzz_x_xx = buffer_ffpd[90];

    auto g_xxx_xzz_x_xy = buffer_ffpd[91];

    auto g_xxx_xzz_x_xz = buffer_ffpd[92];

    auto g_xxx_xzz_x_yy = buffer_ffpd[93];

    auto g_xxx_xzz_x_yz = buffer_ffpd[94];

    auto g_xxx_xzz_x_zz = buffer_ffpd[95];

    auto g_xxx_xzz_y_xx = buffer_ffpd[96];

    auto g_xxx_xzz_y_xy = buffer_ffpd[97];

    auto g_xxx_xzz_y_xz = buffer_ffpd[98];

    auto g_xxx_xzz_y_yy = buffer_ffpd[99];

    auto g_xxx_xzz_y_yz = buffer_ffpd[100];

    auto g_xxx_xzz_y_zz = buffer_ffpd[101];

    auto g_xxx_xzz_z_xx = buffer_ffpd[102];

    auto g_xxx_xzz_z_xy = buffer_ffpd[103];

    auto g_xxx_xzz_z_xz = buffer_ffpd[104];

    auto g_xxx_xzz_z_yy = buffer_ffpd[105];

    auto g_xxx_xzz_z_yz = buffer_ffpd[106];

    auto g_xxx_xzz_z_zz = buffer_ffpd[107];

    auto g_xxx_yyy_x_xx = buffer_ffpd[108];

    auto g_xxx_yyy_x_xy = buffer_ffpd[109];

    auto g_xxx_yyy_x_xz = buffer_ffpd[110];

    auto g_xxx_yyy_x_yy = buffer_ffpd[111];

    auto g_xxx_yyy_x_yz = buffer_ffpd[112];

    auto g_xxx_yyy_x_zz = buffer_ffpd[113];

    auto g_xxx_yyy_y_xx = buffer_ffpd[114];

    auto g_xxx_yyy_y_xy = buffer_ffpd[115];

    auto g_xxx_yyy_y_xz = buffer_ffpd[116];

    auto g_xxx_yyy_y_yy = buffer_ffpd[117];

    auto g_xxx_yyy_y_yz = buffer_ffpd[118];

    auto g_xxx_yyy_y_zz = buffer_ffpd[119];

    auto g_xxx_yyy_z_xx = buffer_ffpd[120];

    auto g_xxx_yyy_z_xy = buffer_ffpd[121];

    auto g_xxx_yyy_z_xz = buffer_ffpd[122];

    auto g_xxx_yyy_z_yy = buffer_ffpd[123];

    auto g_xxx_yyy_z_yz = buffer_ffpd[124];

    auto g_xxx_yyy_z_zz = buffer_ffpd[125];

    auto g_xxx_yyz_x_xx = buffer_ffpd[126];

    auto g_xxx_yyz_x_xy = buffer_ffpd[127];

    auto g_xxx_yyz_x_xz = buffer_ffpd[128];

    auto g_xxx_yyz_x_yy = buffer_ffpd[129];

    auto g_xxx_yyz_x_yz = buffer_ffpd[130];

    auto g_xxx_yyz_x_zz = buffer_ffpd[131];

    auto g_xxx_yyz_y_xx = buffer_ffpd[132];

    auto g_xxx_yyz_y_xy = buffer_ffpd[133];

    auto g_xxx_yyz_y_xz = buffer_ffpd[134];

    auto g_xxx_yyz_y_yy = buffer_ffpd[135];

    auto g_xxx_yyz_y_yz = buffer_ffpd[136];

    auto g_xxx_yyz_y_zz = buffer_ffpd[137];

    auto g_xxx_yyz_z_xx = buffer_ffpd[138];

    auto g_xxx_yyz_z_xy = buffer_ffpd[139];

    auto g_xxx_yyz_z_xz = buffer_ffpd[140];

    auto g_xxx_yyz_z_yy = buffer_ffpd[141];

    auto g_xxx_yyz_z_yz = buffer_ffpd[142];

    auto g_xxx_yyz_z_zz = buffer_ffpd[143];

    auto g_xxx_yzz_x_xx = buffer_ffpd[144];

    auto g_xxx_yzz_x_xy = buffer_ffpd[145];

    auto g_xxx_yzz_x_xz = buffer_ffpd[146];

    auto g_xxx_yzz_x_yy = buffer_ffpd[147];

    auto g_xxx_yzz_x_yz = buffer_ffpd[148];

    auto g_xxx_yzz_x_zz = buffer_ffpd[149];

    auto g_xxx_yzz_y_xx = buffer_ffpd[150];

    auto g_xxx_yzz_y_xy = buffer_ffpd[151];

    auto g_xxx_yzz_y_xz = buffer_ffpd[152];

    auto g_xxx_yzz_y_yy = buffer_ffpd[153];

    auto g_xxx_yzz_y_yz = buffer_ffpd[154];

    auto g_xxx_yzz_y_zz = buffer_ffpd[155];

    auto g_xxx_yzz_z_xx = buffer_ffpd[156];

    auto g_xxx_yzz_z_xy = buffer_ffpd[157];

    auto g_xxx_yzz_z_xz = buffer_ffpd[158];

    auto g_xxx_yzz_z_yy = buffer_ffpd[159];

    auto g_xxx_yzz_z_yz = buffer_ffpd[160];

    auto g_xxx_yzz_z_zz = buffer_ffpd[161];

    auto g_xxx_zzz_x_xx = buffer_ffpd[162];

    auto g_xxx_zzz_x_xy = buffer_ffpd[163];

    auto g_xxx_zzz_x_xz = buffer_ffpd[164];

    auto g_xxx_zzz_x_yy = buffer_ffpd[165];

    auto g_xxx_zzz_x_yz = buffer_ffpd[166];

    auto g_xxx_zzz_x_zz = buffer_ffpd[167];

    auto g_xxx_zzz_y_xx = buffer_ffpd[168];

    auto g_xxx_zzz_y_xy = buffer_ffpd[169];

    auto g_xxx_zzz_y_xz = buffer_ffpd[170];

    auto g_xxx_zzz_y_yy = buffer_ffpd[171];

    auto g_xxx_zzz_y_yz = buffer_ffpd[172];

    auto g_xxx_zzz_y_zz = buffer_ffpd[173];

    auto g_xxx_zzz_z_xx = buffer_ffpd[174];

    auto g_xxx_zzz_z_xy = buffer_ffpd[175];

    auto g_xxx_zzz_z_xz = buffer_ffpd[176];

    auto g_xxx_zzz_z_yy = buffer_ffpd[177];

    auto g_xxx_zzz_z_yz = buffer_ffpd[178];

    auto g_xxx_zzz_z_zz = buffer_ffpd[179];

    auto g_xxy_xxx_x_xx = buffer_ffpd[180];

    auto g_xxy_xxx_x_xy = buffer_ffpd[181];

    auto g_xxy_xxx_x_xz = buffer_ffpd[182];

    auto g_xxy_xxx_x_yy = buffer_ffpd[183];

    auto g_xxy_xxx_x_yz = buffer_ffpd[184];

    auto g_xxy_xxx_x_zz = buffer_ffpd[185];

    auto g_xxy_xxx_y_xx = buffer_ffpd[186];

    auto g_xxy_xxx_y_xy = buffer_ffpd[187];

    auto g_xxy_xxx_y_xz = buffer_ffpd[188];

    auto g_xxy_xxx_y_yy = buffer_ffpd[189];

    auto g_xxy_xxx_y_yz = buffer_ffpd[190];

    auto g_xxy_xxx_y_zz = buffer_ffpd[191];

    auto g_xxy_xxx_z_xx = buffer_ffpd[192];

    auto g_xxy_xxx_z_xy = buffer_ffpd[193];

    auto g_xxy_xxx_z_xz = buffer_ffpd[194];

    auto g_xxy_xxx_z_yy = buffer_ffpd[195];

    auto g_xxy_xxx_z_yz = buffer_ffpd[196];

    auto g_xxy_xxx_z_zz = buffer_ffpd[197];

    auto g_xxy_xxy_x_xx = buffer_ffpd[198];

    auto g_xxy_xxy_x_xy = buffer_ffpd[199];

    auto g_xxy_xxy_x_xz = buffer_ffpd[200];

    auto g_xxy_xxy_x_yy = buffer_ffpd[201];

    auto g_xxy_xxy_x_yz = buffer_ffpd[202];

    auto g_xxy_xxy_x_zz = buffer_ffpd[203];

    auto g_xxy_xxy_y_xx = buffer_ffpd[204];

    auto g_xxy_xxy_y_xy = buffer_ffpd[205];

    auto g_xxy_xxy_y_xz = buffer_ffpd[206];

    auto g_xxy_xxy_y_yy = buffer_ffpd[207];

    auto g_xxy_xxy_y_yz = buffer_ffpd[208];

    auto g_xxy_xxy_y_zz = buffer_ffpd[209];

    auto g_xxy_xxy_z_xx = buffer_ffpd[210];

    auto g_xxy_xxy_z_xy = buffer_ffpd[211];

    auto g_xxy_xxy_z_xz = buffer_ffpd[212];

    auto g_xxy_xxy_z_yy = buffer_ffpd[213];

    auto g_xxy_xxy_z_yz = buffer_ffpd[214];

    auto g_xxy_xxy_z_zz = buffer_ffpd[215];

    auto g_xxy_xxz_x_xx = buffer_ffpd[216];

    auto g_xxy_xxz_x_xy = buffer_ffpd[217];

    auto g_xxy_xxz_x_xz = buffer_ffpd[218];

    auto g_xxy_xxz_x_yy = buffer_ffpd[219];

    auto g_xxy_xxz_x_yz = buffer_ffpd[220];

    auto g_xxy_xxz_x_zz = buffer_ffpd[221];

    auto g_xxy_xxz_y_xx = buffer_ffpd[222];

    auto g_xxy_xxz_y_xy = buffer_ffpd[223];

    auto g_xxy_xxz_y_xz = buffer_ffpd[224];

    auto g_xxy_xxz_y_yy = buffer_ffpd[225];

    auto g_xxy_xxz_y_yz = buffer_ffpd[226];

    auto g_xxy_xxz_y_zz = buffer_ffpd[227];

    auto g_xxy_xxz_z_xx = buffer_ffpd[228];

    auto g_xxy_xxz_z_xy = buffer_ffpd[229];

    auto g_xxy_xxz_z_xz = buffer_ffpd[230];

    auto g_xxy_xxz_z_yy = buffer_ffpd[231];

    auto g_xxy_xxz_z_yz = buffer_ffpd[232];

    auto g_xxy_xxz_z_zz = buffer_ffpd[233];

    auto g_xxy_xyy_x_xx = buffer_ffpd[234];

    auto g_xxy_xyy_x_xy = buffer_ffpd[235];

    auto g_xxy_xyy_x_xz = buffer_ffpd[236];

    auto g_xxy_xyy_x_yy = buffer_ffpd[237];

    auto g_xxy_xyy_x_yz = buffer_ffpd[238];

    auto g_xxy_xyy_x_zz = buffer_ffpd[239];

    auto g_xxy_xyy_y_xx = buffer_ffpd[240];

    auto g_xxy_xyy_y_xy = buffer_ffpd[241];

    auto g_xxy_xyy_y_xz = buffer_ffpd[242];

    auto g_xxy_xyy_y_yy = buffer_ffpd[243];

    auto g_xxy_xyy_y_yz = buffer_ffpd[244];

    auto g_xxy_xyy_y_zz = buffer_ffpd[245];

    auto g_xxy_xyy_z_xx = buffer_ffpd[246];

    auto g_xxy_xyy_z_xy = buffer_ffpd[247];

    auto g_xxy_xyy_z_xz = buffer_ffpd[248];

    auto g_xxy_xyy_z_yy = buffer_ffpd[249];

    auto g_xxy_xyy_z_yz = buffer_ffpd[250];

    auto g_xxy_xyy_z_zz = buffer_ffpd[251];

    auto g_xxy_xyz_x_xx = buffer_ffpd[252];

    auto g_xxy_xyz_x_xy = buffer_ffpd[253];

    auto g_xxy_xyz_x_xz = buffer_ffpd[254];

    auto g_xxy_xyz_x_yy = buffer_ffpd[255];

    auto g_xxy_xyz_x_yz = buffer_ffpd[256];

    auto g_xxy_xyz_x_zz = buffer_ffpd[257];

    auto g_xxy_xyz_y_xx = buffer_ffpd[258];

    auto g_xxy_xyz_y_xy = buffer_ffpd[259];

    auto g_xxy_xyz_y_xz = buffer_ffpd[260];

    auto g_xxy_xyz_y_yy = buffer_ffpd[261];

    auto g_xxy_xyz_y_yz = buffer_ffpd[262];

    auto g_xxy_xyz_y_zz = buffer_ffpd[263];

    auto g_xxy_xyz_z_xx = buffer_ffpd[264];

    auto g_xxy_xyz_z_xy = buffer_ffpd[265];

    auto g_xxy_xyz_z_xz = buffer_ffpd[266];

    auto g_xxy_xyz_z_yy = buffer_ffpd[267];

    auto g_xxy_xyz_z_yz = buffer_ffpd[268];

    auto g_xxy_xyz_z_zz = buffer_ffpd[269];

    auto g_xxy_xzz_x_xx = buffer_ffpd[270];

    auto g_xxy_xzz_x_xy = buffer_ffpd[271];

    auto g_xxy_xzz_x_xz = buffer_ffpd[272];

    auto g_xxy_xzz_x_yy = buffer_ffpd[273];

    auto g_xxy_xzz_x_yz = buffer_ffpd[274];

    auto g_xxy_xzz_x_zz = buffer_ffpd[275];

    auto g_xxy_xzz_y_xx = buffer_ffpd[276];

    auto g_xxy_xzz_y_xy = buffer_ffpd[277];

    auto g_xxy_xzz_y_xz = buffer_ffpd[278];

    auto g_xxy_xzz_y_yy = buffer_ffpd[279];

    auto g_xxy_xzz_y_yz = buffer_ffpd[280];

    auto g_xxy_xzz_y_zz = buffer_ffpd[281];

    auto g_xxy_xzz_z_xx = buffer_ffpd[282];

    auto g_xxy_xzz_z_xy = buffer_ffpd[283];

    auto g_xxy_xzz_z_xz = buffer_ffpd[284];

    auto g_xxy_xzz_z_yy = buffer_ffpd[285];

    auto g_xxy_xzz_z_yz = buffer_ffpd[286];

    auto g_xxy_xzz_z_zz = buffer_ffpd[287];

    auto g_xxy_yyy_x_xx = buffer_ffpd[288];

    auto g_xxy_yyy_x_xy = buffer_ffpd[289];

    auto g_xxy_yyy_x_xz = buffer_ffpd[290];

    auto g_xxy_yyy_x_yy = buffer_ffpd[291];

    auto g_xxy_yyy_x_yz = buffer_ffpd[292];

    auto g_xxy_yyy_x_zz = buffer_ffpd[293];

    auto g_xxy_yyy_y_xx = buffer_ffpd[294];

    auto g_xxy_yyy_y_xy = buffer_ffpd[295];

    auto g_xxy_yyy_y_xz = buffer_ffpd[296];

    auto g_xxy_yyy_y_yy = buffer_ffpd[297];

    auto g_xxy_yyy_y_yz = buffer_ffpd[298];

    auto g_xxy_yyy_y_zz = buffer_ffpd[299];

    auto g_xxy_yyy_z_xx = buffer_ffpd[300];

    auto g_xxy_yyy_z_xy = buffer_ffpd[301];

    auto g_xxy_yyy_z_xz = buffer_ffpd[302];

    auto g_xxy_yyy_z_yy = buffer_ffpd[303];

    auto g_xxy_yyy_z_yz = buffer_ffpd[304];

    auto g_xxy_yyy_z_zz = buffer_ffpd[305];

    auto g_xxy_yyz_x_xx = buffer_ffpd[306];

    auto g_xxy_yyz_x_xy = buffer_ffpd[307];

    auto g_xxy_yyz_x_xz = buffer_ffpd[308];

    auto g_xxy_yyz_x_yy = buffer_ffpd[309];

    auto g_xxy_yyz_x_yz = buffer_ffpd[310];

    auto g_xxy_yyz_x_zz = buffer_ffpd[311];

    auto g_xxy_yyz_y_xx = buffer_ffpd[312];

    auto g_xxy_yyz_y_xy = buffer_ffpd[313];

    auto g_xxy_yyz_y_xz = buffer_ffpd[314];

    auto g_xxy_yyz_y_yy = buffer_ffpd[315];

    auto g_xxy_yyz_y_yz = buffer_ffpd[316];

    auto g_xxy_yyz_y_zz = buffer_ffpd[317];

    auto g_xxy_yyz_z_xx = buffer_ffpd[318];

    auto g_xxy_yyz_z_xy = buffer_ffpd[319];

    auto g_xxy_yyz_z_xz = buffer_ffpd[320];

    auto g_xxy_yyz_z_yy = buffer_ffpd[321];

    auto g_xxy_yyz_z_yz = buffer_ffpd[322];

    auto g_xxy_yyz_z_zz = buffer_ffpd[323];

    auto g_xxy_yzz_x_xx = buffer_ffpd[324];

    auto g_xxy_yzz_x_xy = buffer_ffpd[325];

    auto g_xxy_yzz_x_xz = buffer_ffpd[326];

    auto g_xxy_yzz_x_yy = buffer_ffpd[327];

    auto g_xxy_yzz_x_yz = buffer_ffpd[328];

    auto g_xxy_yzz_x_zz = buffer_ffpd[329];

    auto g_xxy_yzz_y_xx = buffer_ffpd[330];

    auto g_xxy_yzz_y_xy = buffer_ffpd[331];

    auto g_xxy_yzz_y_xz = buffer_ffpd[332];

    auto g_xxy_yzz_y_yy = buffer_ffpd[333];

    auto g_xxy_yzz_y_yz = buffer_ffpd[334];

    auto g_xxy_yzz_y_zz = buffer_ffpd[335];

    auto g_xxy_yzz_z_xx = buffer_ffpd[336];

    auto g_xxy_yzz_z_xy = buffer_ffpd[337];

    auto g_xxy_yzz_z_xz = buffer_ffpd[338];

    auto g_xxy_yzz_z_yy = buffer_ffpd[339];

    auto g_xxy_yzz_z_yz = buffer_ffpd[340];

    auto g_xxy_yzz_z_zz = buffer_ffpd[341];

    auto g_xxy_zzz_x_xx = buffer_ffpd[342];

    auto g_xxy_zzz_x_xy = buffer_ffpd[343];

    auto g_xxy_zzz_x_xz = buffer_ffpd[344];

    auto g_xxy_zzz_x_yy = buffer_ffpd[345];

    auto g_xxy_zzz_x_yz = buffer_ffpd[346];

    auto g_xxy_zzz_x_zz = buffer_ffpd[347];

    auto g_xxy_zzz_y_xx = buffer_ffpd[348];

    auto g_xxy_zzz_y_xy = buffer_ffpd[349];

    auto g_xxy_zzz_y_xz = buffer_ffpd[350];

    auto g_xxy_zzz_y_yy = buffer_ffpd[351];

    auto g_xxy_zzz_y_yz = buffer_ffpd[352];

    auto g_xxy_zzz_y_zz = buffer_ffpd[353];

    auto g_xxy_zzz_z_xx = buffer_ffpd[354];

    auto g_xxy_zzz_z_xy = buffer_ffpd[355];

    auto g_xxy_zzz_z_xz = buffer_ffpd[356];

    auto g_xxy_zzz_z_yy = buffer_ffpd[357];

    auto g_xxy_zzz_z_yz = buffer_ffpd[358];

    auto g_xxy_zzz_z_zz = buffer_ffpd[359];

    auto g_xxz_xxx_x_xx = buffer_ffpd[360];

    auto g_xxz_xxx_x_xy = buffer_ffpd[361];

    auto g_xxz_xxx_x_xz = buffer_ffpd[362];

    auto g_xxz_xxx_x_yy = buffer_ffpd[363];

    auto g_xxz_xxx_x_yz = buffer_ffpd[364];

    auto g_xxz_xxx_x_zz = buffer_ffpd[365];

    auto g_xxz_xxx_y_xx = buffer_ffpd[366];

    auto g_xxz_xxx_y_xy = buffer_ffpd[367];

    auto g_xxz_xxx_y_xz = buffer_ffpd[368];

    auto g_xxz_xxx_y_yy = buffer_ffpd[369];

    auto g_xxz_xxx_y_yz = buffer_ffpd[370];

    auto g_xxz_xxx_y_zz = buffer_ffpd[371];

    auto g_xxz_xxx_z_xx = buffer_ffpd[372];

    auto g_xxz_xxx_z_xy = buffer_ffpd[373];

    auto g_xxz_xxx_z_xz = buffer_ffpd[374];

    auto g_xxz_xxx_z_yy = buffer_ffpd[375];

    auto g_xxz_xxx_z_yz = buffer_ffpd[376];

    auto g_xxz_xxx_z_zz = buffer_ffpd[377];

    auto g_xxz_xxy_x_xx = buffer_ffpd[378];

    auto g_xxz_xxy_x_xy = buffer_ffpd[379];

    auto g_xxz_xxy_x_xz = buffer_ffpd[380];

    auto g_xxz_xxy_x_yy = buffer_ffpd[381];

    auto g_xxz_xxy_x_yz = buffer_ffpd[382];

    auto g_xxz_xxy_x_zz = buffer_ffpd[383];

    auto g_xxz_xxy_y_xx = buffer_ffpd[384];

    auto g_xxz_xxy_y_xy = buffer_ffpd[385];

    auto g_xxz_xxy_y_xz = buffer_ffpd[386];

    auto g_xxz_xxy_y_yy = buffer_ffpd[387];

    auto g_xxz_xxy_y_yz = buffer_ffpd[388];

    auto g_xxz_xxy_y_zz = buffer_ffpd[389];

    auto g_xxz_xxy_z_xx = buffer_ffpd[390];

    auto g_xxz_xxy_z_xy = buffer_ffpd[391];

    auto g_xxz_xxy_z_xz = buffer_ffpd[392];

    auto g_xxz_xxy_z_yy = buffer_ffpd[393];

    auto g_xxz_xxy_z_yz = buffer_ffpd[394];

    auto g_xxz_xxy_z_zz = buffer_ffpd[395];

    auto g_xxz_xxz_x_xx = buffer_ffpd[396];

    auto g_xxz_xxz_x_xy = buffer_ffpd[397];

    auto g_xxz_xxz_x_xz = buffer_ffpd[398];

    auto g_xxz_xxz_x_yy = buffer_ffpd[399];

    auto g_xxz_xxz_x_yz = buffer_ffpd[400];

    auto g_xxz_xxz_x_zz = buffer_ffpd[401];

    auto g_xxz_xxz_y_xx = buffer_ffpd[402];

    auto g_xxz_xxz_y_xy = buffer_ffpd[403];

    auto g_xxz_xxz_y_xz = buffer_ffpd[404];

    auto g_xxz_xxz_y_yy = buffer_ffpd[405];

    auto g_xxz_xxz_y_yz = buffer_ffpd[406];

    auto g_xxz_xxz_y_zz = buffer_ffpd[407];

    auto g_xxz_xxz_z_xx = buffer_ffpd[408];

    auto g_xxz_xxz_z_xy = buffer_ffpd[409];

    auto g_xxz_xxz_z_xz = buffer_ffpd[410];

    auto g_xxz_xxz_z_yy = buffer_ffpd[411];

    auto g_xxz_xxz_z_yz = buffer_ffpd[412];

    auto g_xxz_xxz_z_zz = buffer_ffpd[413];

    auto g_xxz_xyy_x_xx = buffer_ffpd[414];

    auto g_xxz_xyy_x_xy = buffer_ffpd[415];

    auto g_xxz_xyy_x_xz = buffer_ffpd[416];

    auto g_xxz_xyy_x_yy = buffer_ffpd[417];

    auto g_xxz_xyy_x_yz = buffer_ffpd[418];

    auto g_xxz_xyy_x_zz = buffer_ffpd[419];

    auto g_xxz_xyy_y_xx = buffer_ffpd[420];

    auto g_xxz_xyy_y_xy = buffer_ffpd[421];

    auto g_xxz_xyy_y_xz = buffer_ffpd[422];

    auto g_xxz_xyy_y_yy = buffer_ffpd[423];

    auto g_xxz_xyy_y_yz = buffer_ffpd[424];

    auto g_xxz_xyy_y_zz = buffer_ffpd[425];

    auto g_xxz_xyy_z_xx = buffer_ffpd[426];

    auto g_xxz_xyy_z_xy = buffer_ffpd[427];

    auto g_xxz_xyy_z_xz = buffer_ffpd[428];

    auto g_xxz_xyy_z_yy = buffer_ffpd[429];

    auto g_xxz_xyy_z_yz = buffer_ffpd[430];

    auto g_xxz_xyy_z_zz = buffer_ffpd[431];

    auto g_xxz_xyz_x_xx = buffer_ffpd[432];

    auto g_xxz_xyz_x_xy = buffer_ffpd[433];

    auto g_xxz_xyz_x_xz = buffer_ffpd[434];

    auto g_xxz_xyz_x_yy = buffer_ffpd[435];

    auto g_xxz_xyz_x_yz = buffer_ffpd[436];

    auto g_xxz_xyz_x_zz = buffer_ffpd[437];

    auto g_xxz_xyz_y_xx = buffer_ffpd[438];

    auto g_xxz_xyz_y_xy = buffer_ffpd[439];

    auto g_xxz_xyz_y_xz = buffer_ffpd[440];

    auto g_xxz_xyz_y_yy = buffer_ffpd[441];

    auto g_xxz_xyz_y_yz = buffer_ffpd[442];

    auto g_xxz_xyz_y_zz = buffer_ffpd[443];

    auto g_xxz_xyz_z_xx = buffer_ffpd[444];

    auto g_xxz_xyz_z_xy = buffer_ffpd[445];

    auto g_xxz_xyz_z_xz = buffer_ffpd[446];

    auto g_xxz_xyz_z_yy = buffer_ffpd[447];

    auto g_xxz_xyz_z_yz = buffer_ffpd[448];

    auto g_xxz_xyz_z_zz = buffer_ffpd[449];

    auto g_xxz_xzz_x_xx = buffer_ffpd[450];

    auto g_xxz_xzz_x_xy = buffer_ffpd[451];

    auto g_xxz_xzz_x_xz = buffer_ffpd[452];

    auto g_xxz_xzz_x_yy = buffer_ffpd[453];

    auto g_xxz_xzz_x_yz = buffer_ffpd[454];

    auto g_xxz_xzz_x_zz = buffer_ffpd[455];

    auto g_xxz_xzz_y_xx = buffer_ffpd[456];

    auto g_xxz_xzz_y_xy = buffer_ffpd[457];

    auto g_xxz_xzz_y_xz = buffer_ffpd[458];

    auto g_xxz_xzz_y_yy = buffer_ffpd[459];

    auto g_xxz_xzz_y_yz = buffer_ffpd[460];

    auto g_xxz_xzz_y_zz = buffer_ffpd[461];

    auto g_xxz_xzz_z_xx = buffer_ffpd[462];

    auto g_xxz_xzz_z_xy = buffer_ffpd[463];

    auto g_xxz_xzz_z_xz = buffer_ffpd[464];

    auto g_xxz_xzz_z_yy = buffer_ffpd[465];

    auto g_xxz_xzz_z_yz = buffer_ffpd[466];

    auto g_xxz_xzz_z_zz = buffer_ffpd[467];

    auto g_xxz_yyy_x_xx = buffer_ffpd[468];

    auto g_xxz_yyy_x_xy = buffer_ffpd[469];

    auto g_xxz_yyy_x_xz = buffer_ffpd[470];

    auto g_xxz_yyy_x_yy = buffer_ffpd[471];

    auto g_xxz_yyy_x_yz = buffer_ffpd[472];

    auto g_xxz_yyy_x_zz = buffer_ffpd[473];

    auto g_xxz_yyy_y_xx = buffer_ffpd[474];

    auto g_xxz_yyy_y_xy = buffer_ffpd[475];

    auto g_xxz_yyy_y_xz = buffer_ffpd[476];

    auto g_xxz_yyy_y_yy = buffer_ffpd[477];

    auto g_xxz_yyy_y_yz = buffer_ffpd[478];

    auto g_xxz_yyy_y_zz = buffer_ffpd[479];

    auto g_xxz_yyy_z_xx = buffer_ffpd[480];

    auto g_xxz_yyy_z_xy = buffer_ffpd[481];

    auto g_xxz_yyy_z_xz = buffer_ffpd[482];

    auto g_xxz_yyy_z_yy = buffer_ffpd[483];

    auto g_xxz_yyy_z_yz = buffer_ffpd[484];

    auto g_xxz_yyy_z_zz = buffer_ffpd[485];

    auto g_xxz_yyz_x_xx = buffer_ffpd[486];

    auto g_xxz_yyz_x_xy = buffer_ffpd[487];

    auto g_xxz_yyz_x_xz = buffer_ffpd[488];

    auto g_xxz_yyz_x_yy = buffer_ffpd[489];

    auto g_xxz_yyz_x_yz = buffer_ffpd[490];

    auto g_xxz_yyz_x_zz = buffer_ffpd[491];

    auto g_xxz_yyz_y_xx = buffer_ffpd[492];

    auto g_xxz_yyz_y_xy = buffer_ffpd[493];

    auto g_xxz_yyz_y_xz = buffer_ffpd[494];

    auto g_xxz_yyz_y_yy = buffer_ffpd[495];

    auto g_xxz_yyz_y_yz = buffer_ffpd[496];

    auto g_xxz_yyz_y_zz = buffer_ffpd[497];

    auto g_xxz_yyz_z_xx = buffer_ffpd[498];

    auto g_xxz_yyz_z_xy = buffer_ffpd[499];

    auto g_xxz_yyz_z_xz = buffer_ffpd[500];

    auto g_xxz_yyz_z_yy = buffer_ffpd[501];

    auto g_xxz_yyz_z_yz = buffer_ffpd[502];

    auto g_xxz_yyz_z_zz = buffer_ffpd[503];

    auto g_xxz_yzz_x_xx = buffer_ffpd[504];

    auto g_xxz_yzz_x_xy = buffer_ffpd[505];

    auto g_xxz_yzz_x_xz = buffer_ffpd[506];

    auto g_xxz_yzz_x_yy = buffer_ffpd[507];

    auto g_xxz_yzz_x_yz = buffer_ffpd[508];

    auto g_xxz_yzz_x_zz = buffer_ffpd[509];

    auto g_xxz_yzz_y_xx = buffer_ffpd[510];

    auto g_xxz_yzz_y_xy = buffer_ffpd[511];

    auto g_xxz_yzz_y_xz = buffer_ffpd[512];

    auto g_xxz_yzz_y_yy = buffer_ffpd[513];

    auto g_xxz_yzz_y_yz = buffer_ffpd[514];

    auto g_xxz_yzz_y_zz = buffer_ffpd[515];

    auto g_xxz_yzz_z_xx = buffer_ffpd[516];

    auto g_xxz_yzz_z_xy = buffer_ffpd[517];

    auto g_xxz_yzz_z_xz = buffer_ffpd[518];

    auto g_xxz_yzz_z_yy = buffer_ffpd[519];

    auto g_xxz_yzz_z_yz = buffer_ffpd[520];

    auto g_xxz_yzz_z_zz = buffer_ffpd[521];

    auto g_xxz_zzz_x_xx = buffer_ffpd[522];

    auto g_xxz_zzz_x_xy = buffer_ffpd[523];

    auto g_xxz_zzz_x_xz = buffer_ffpd[524];

    auto g_xxz_zzz_x_yy = buffer_ffpd[525];

    auto g_xxz_zzz_x_yz = buffer_ffpd[526];

    auto g_xxz_zzz_x_zz = buffer_ffpd[527];

    auto g_xxz_zzz_y_xx = buffer_ffpd[528];

    auto g_xxz_zzz_y_xy = buffer_ffpd[529];

    auto g_xxz_zzz_y_xz = buffer_ffpd[530];

    auto g_xxz_zzz_y_yy = buffer_ffpd[531];

    auto g_xxz_zzz_y_yz = buffer_ffpd[532];

    auto g_xxz_zzz_y_zz = buffer_ffpd[533];

    auto g_xxz_zzz_z_xx = buffer_ffpd[534];

    auto g_xxz_zzz_z_xy = buffer_ffpd[535];

    auto g_xxz_zzz_z_xz = buffer_ffpd[536];

    auto g_xxz_zzz_z_yy = buffer_ffpd[537];

    auto g_xxz_zzz_z_yz = buffer_ffpd[538];

    auto g_xxz_zzz_z_zz = buffer_ffpd[539];

    auto g_xyy_xxx_x_xx = buffer_ffpd[540];

    auto g_xyy_xxx_x_xy = buffer_ffpd[541];

    auto g_xyy_xxx_x_xz = buffer_ffpd[542];

    auto g_xyy_xxx_x_yy = buffer_ffpd[543];

    auto g_xyy_xxx_x_yz = buffer_ffpd[544];

    auto g_xyy_xxx_x_zz = buffer_ffpd[545];

    auto g_xyy_xxx_y_xx = buffer_ffpd[546];

    auto g_xyy_xxx_y_xy = buffer_ffpd[547];

    auto g_xyy_xxx_y_xz = buffer_ffpd[548];

    auto g_xyy_xxx_y_yy = buffer_ffpd[549];

    auto g_xyy_xxx_y_yz = buffer_ffpd[550];

    auto g_xyy_xxx_y_zz = buffer_ffpd[551];

    auto g_xyy_xxx_z_xx = buffer_ffpd[552];

    auto g_xyy_xxx_z_xy = buffer_ffpd[553];

    auto g_xyy_xxx_z_xz = buffer_ffpd[554];

    auto g_xyy_xxx_z_yy = buffer_ffpd[555];

    auto g_xyy_xxx_z_yz = buffer_ffpd[556];

    auto g_xyy_xxx_z_zz = buffer_ffpd[557];

    auto g_xyy_xxy_x_xx = buffer_ffpd[558];

    auto g_xyy_xxy_x_xy = buffer_ffpd[559];

    auto g_xyy_xxy_x_xz = buffer_ffpd[560];

    auto g_xyy_xxy_x_yy = buffer_ffpd[561];

    auto g_xyy_xxy_x_yz = buffer_ffpd[562];

    auto g_xyy_xxy_x_zz = buffer_ffpd[563];

    auto g_xyy_xxy_y_xx = buffer_ffpd[564];

    auto g_xyy_xxy_y_xy = buffer_ffpd[565];

    auto g_xyy_xxy_y_xz = buffer_ffpd[566];

    auto g_xyy_xxy_y_yy = buffer_ffpd[567];

    auto g_xyy_xxy_y_yz = buffer_ffpd[568];

    auto g_xyy_xxy_y_zz = buffer_ffpd[569];

    auto g_xyy_xxy_z_xx = buffer_ffpd[570];

    auto g_xyy_xxy_z_xy = buffer_ffpd[571];

    auto g_xyy_xxy_z_xz = buffer_ffpd[572];

    auto g_xyy_xxy_z_yy = buffer_ffpd[573];

    auto g_xyy_xxy_z_yz = buffer_ffpd[574];

    auto g_xyy_xxy_z_zz = buffer_ffpd[575];

    auto g_xyy_xxz_x_xx = buffer_ffpd[576];

    auto g_xyy_xxz_x_xy = buffer_ffpd[577];

    auto g_xyy_xxz_x_xz = buffer_ffpd[578];

    auto g_xyy_xxz_x_yy = buffer_ffpd[579];

    auto g_xyy_xxz_x_yz = buffer_ffpd[580];

    auto g_xyy_xxz_x_zz = buffer_ffpd[581];

    auto g_xyy_xxz_y_xx = buffer_ffpd[582];

    auto g_xyy_xxz_y_xy = buffer_ffpd[583];

    auto g_xyy_xxz_y_xz = buffer_ffpd[584];

    auto g_xyy_xxz_y_yy = buffer_ffpd[585];

    auto g_xyy_xxz_y_yz = buffer_ffpd[586];

    auto g_xyy_xxz_y_zz = buffer_ffpd[587];

    auto g_xyy_xxz_z_xx = buffer_ffpd[588];

    auto g_xyy_xxz_z_xy = buffer_ffpd[589];

    auto g_xyy_xxz_z_xz = buffer_ffpd[590];

    auto g_xyy_xxz_z_yy = buffer_ffpd[591];

    auto g_xyy_xxz_z_yz = buffer_ffpd[592];

    auto g_xyy_xxz_z_zz = buffer_ffpd[593];

    auto g_xyy_xyy_x_xx = buffer_ffpd[594];

    auto g_xyy_xyy_x_xy = buffer_ffpd[595];

    auto g_xyy_xyy_x_xz = buffer_ffpd[596];

    auto g_xyy_xyy_x_yy = buffer_ffpd[597];

    auto g_xyy_xyy_x_yz = buffer_ffpd[598];

    auto g_xyy_xyy_x_zz = buffer_ffpd[599];

    auto g_xyy_xyy_y_xx = buffer_ffpd[600];

    auto g_xyy_xyy_y_xy = buffer_ffpd[601];

    auto g_xyy_xyy_y_xz = buffer_ffpd[602];

    auto g_xyy_xyy_y_yy = buffer_ffpd[603];

    auto g_xyy_xyy_y_yz = buffer_ffpd[604];

    auto g_xyy_xyy_y_zz = buffer_ffpd[605];

    auto g_xyy_xyy_z_xx = buffer_ffpd[606];

    auto g_xyy_xyy_z_xy = buffer_ffpd[607];

    auto g_xyy_xyy_z_xz = buffer_ffpd[608];

    auto g_xyy_xyy_z_yy = buffer_ffpd[609];

    auto g_xyy_xyy_z_yz = buffer_ffpd[610];

    auto g_xyy_xyy_z_zz = buffer_ffpd[611];

    auto g_xyy_xyz_x_xx = buffer_ffpd[612];

    auto g_xyy_xyz_x_xy = buffer_ffpd[613];

    auto g_xyy_xyz_x_xz = buffer_ffpd[614];

    auto g_xyy_xyz_x_yy = buffer_ffpd[615];

    auto g_xyy_xyz_x_yz = buffer_ffpd[616];

    auto g_xyy_xyz_x_zz = buffer_ffpd[617];

    auto g_xyy_xyz_y_xx = buffer_ffpd[618];

    auto g_xyy_xyz_y_xy = buffer_ffpd[619];

    auto g_xyy_xyz_y_xz = buffer_ffpd[620];

    auto g_xyy_xyz_y_yy = buffer_ffpd[621];

    auto g_xyy_xyz_y_yz = buffer_ffpd[622];

    auto g_xyy_xyz_y_zz = buffer_ffpd[623];

    auto g_xyy_xyz_z_xx = buffer_ffpd[624];

    auto g_xyy_xyz_z_xy = buffer_ffpd[625];

    auto g_xyy_xyz_z_xz = buffer_ffpd[626];

    auto g_xyy_xyz_z_yy = buffer_ffpd[627];

    auto g_xyy_xyz_z_yz = buffer_ffpd[628];

    auto g_xyy_xyz_z_zz = buffer_ffpd[629];

    auto g_xyy_xzz_x_xx = buffer_ffpd[630];

    auto g_xyy_xzz_x_xy = buffer_ffpd[631];

    auto g_xyy_xzz_x_xz = buffer_ffpd[632];

    auto g_xyy_xzz_x_yy = buffer_ffpd[633];

    auto g_xyy_xzz_x_yz = buffer_ffpd[634];

    auto g_xyy_xzz_x_zz = buffer_ffpd[635];

    auto g_xyy_xzz_y_xx = buffer_ffpd[636];

    auto g_xyy_xzz_y_xy = buffer_ffpd[637];

    auto g_xyy_xzz_y_xz = buffer_ffpd[638];

    auto g_xyy_xzz_y_yy = buffer_ffpd[639];

    auto g_xyy_xzz_y_yz = buffer_ffpd[640];

    auto g_xyy_xzz_y_zz = buffer_ffpd[641];

    auto g_xyy_xzz_z_xx = buffer_ffpd[642];

    auto g_xyy_xzz_z_xy = buffer_ffpd[643];

    auto g_xyy_xzz_z_xz = buffer_ffpd[644];

    auto g_xyy_xzz_z_yy = buffer_ffpd[645];

    auto g_xyy_xzz_z_yz = buffer_ffpd[646];

    auto g_xyy_xzz_z_zz = buffer_ffpd[647];

    auto g_xyy_yyy_x_xx = buffer_ffpd[648];

    auto g_xyy_yyy_x_xy = buffer_ffpd[649];

    auto g_xyy_yyy_x_xz = buffer_ffpd[650];

    auto g_xyy_yyy_x_yy = buffer_ffpd[651];

    auto g_xyy_yyy_x_yz = buffer_ffpd[652];

    auto g_xyy_yyy_x_zz = buffer_ffpd[653];

    auto g_xyy_yyy_y_xx = buffer_ffpd[654];

    auto g_xyy_yyy_y_xy = buffer_ffpd[655];

    auto g_xyy_yyy_y_xz = buffer_ffpd[656];

    auto g_xyy_yyy_y_yy = buffer_ffpd[657];

    auto g_xyy_yyy_y_yz = buffer_ffpd[658];

    auto g_xyy_yyy_y_zz = buffer_ffpd[659];

    auto g_xyy_yyy_z_xx = buffer_ffpd[660];

    auto g_xyy_yyy_z_xy = buffer_ffpd[661];

    auto g_xyy_yyy_z_xz = buffer_ffpd[662];

    auto g_xyy_yyy_z_yy = buffer_ffpd[663];

    auto g_xyy_yyy_z_yz = buffer_ffpd[664];

    auto g_xyy_yyy_z_zz = buffer_ffpd[665];

    auto g_xyy_yyz_x_xx = buffer_ffpd[666];

    auto g_xyy_yyz_x_xy = buffer_ffpd[667];

    auto g_xyy_yyz_x_xz = buffer_ffpd[668];

    auto g_xyy_yyz_x_yy = buffer_ffpd[669];

    auto g_xyy_yyz_x_yz = buffer_ffpd[670];

    auto g_xyy_yyz_x_zz = buffer_ffpd[671];

    auto g_xyy_yyz_y_xx = buffer_ffpd[672];

    auto g_xyy_yyz_y_xy = buffer_ffpd[673];

    auto g_xyy_yyz_y_xz = buffer_ffpd[674];

    auto g_xyy_yyz_y_yy = buffer_ffpd[675];

    auto g_xyy_yyz_y_yz = buffer_ffpd[676];

    auto g_xyy_yyz_y_zz = buffer_ffpd[677];

    auto g_xyy_yyz_z_xx = buffer_ffpd[678];

    auto g_xyy_yyz_z_xy = buffer_ffpd[679];

    auto g_xyy_yyz_z_xz = buffer_ffpd[680];

    auto g_xyy_yyz_z_yy = buffer_ffpd[681];

    auto g_xyy_yyz_z_yz = buffer_ffpd[682];

    auto g_xyy_yyz_z_zz = buffer_ffpd[683];

    auto g_xyy_yzz_x_xx = buffer_ffpd[684];

    auto g_xyy_yzz_x_xy = buffer_ffpd[685];

    auto g_xyy_yzz_x_xz = buffer_ffpd[686];

    auto g_xyy_yzz_x_yy = buffer_ffpd[687];

    auto g_xyy_yzz_x_yz = buffer_ffpd[688];

    auto g_xyy_yzz_x_zz = buffer_ffpd[689];

    auto g_xyy_yzz_y_xx = buffer_ffpd[690];

    auto g_xyy_yzz_y_xy = buffer_ffpd[691];

    auto g_xyy_yzz_y_xz = buffer_ffpd[692];

    auto g_xyy_yzz_y_yy = buffer_ffpd[693];

    auto g_xyy_yzz_y_yz = buffer_ffpd[694];

    auto g_xyy_yzz_y_zz = buffer_ffpd[695];

    auto g_xyy_yzz_z_xx = buffer_ffpd[696];

    auto g_xyy_yzz_z_xy = buffer_ffpd[697];

    auto g_xyy_yzz_z_xz = buffer_ffpd[698];

    auto g_xyy_yzz_z_yy = buffer_ffpd[699];

    auto g_xyy_yzz_z_yz = buffer_ffpd[700];

    auto g_xyy_yzz_z_zz = buffer_ffpd[701];

    auto g_xyy_zzz_x_xx = buffer_ffpd[702];

    auto g_xyy_zzz_x_xy = buffer_ffpd[703];

    auto g_xyy_zzz_x_xz = buffer_ffpd[704];

    auto g_xyy_zzz_x_yy = buffer_ffpd[705];

    auto g_xyy_zzz_x_yz = buffer_ffpd[706];

    auto g_xyy_zzz_x_zz = buffer_ffpd[707];

    auto g_xyy_zzz_y_xx = buffer_ffpd[708];

    auto g_xyy_zzz_y_xy = buffer_ffpd[709];

    auto g_xyy_zzz_y_xz = buffer_ffpd[710];

    auto g_xyy_zzz_y_yy = buffer_ffpd[711];

    auto g_xyy_zzz_y_yz = buffer_ffpd[712];

    auto g_xyy_zzz_y_zz = buffer_ffpd[713];

    auto g_xyy_zzz_z_xx = buffer_ffpd[714];

    auto g_xyy_zzz_z_xy = buffer_ffpd[715];

    auto g_xyy_zzz_z_xz = buffer_ffpd[716];

    auto g_xyy_zzz_z_yy = buffer_ffpd[717];

    auto g_xyy_zzz_z_yz = buffer_ffpd[718];

    auto g_xyy_zzz_z_zz = buffer_ffpd[719];

    auto g_xyz_xxx_x_xx = buffer_ffpd[720];

    auto g_xyz_xxx_x_xy = buffer_ffpd[721];

    auto g_xyz_xxx_x_xz = buffer_ffpd[722];

    auto g_xyz_xxx_x_yy = buffer_ffpd[723];

    auto g_xyz_xxx_x_yz = buffer_ffpd[724];

    auto g_xyz_xxx_x_zz = buffer_ffpd[725];

    auto g_xyz_xxx_y_xx = buffer_ffpd[726];

    auto g_xyz_xxx_y_xy = buffer_ffpd[727];

    auto g_xyz_xxx_y_xz = buffer_ffpd[728];

    auto g_xyz_xxx_y_yy = buffer_ffpd[729];

    auto g_xyz_xxx_y_yz = buffer_ffpd[730];

    auto g_xyz_xxx_y_zz = buffer_ffpd[731];

    auto g_xyz_xxx_z_xx = buffer_ffpd[732];

    auto g_xyz_xxx_z_xy = buffer_ffpd[733];

    auto g_xyz_xxx_z_xz = buffer_ffpd[734];

    auto g_xyz_xxx_z_yy = buffer_ffpd[735];

    auto g_xyz_xxx_z_yz = buffer_ffpd[736];

    auto g_xyz_xxx_z_zz = buffer_ffpd[737];

    auto g_xyz_xxy_x_xx = buffer_ffpd[738];

    auto g_xyz_xxy_x_xy = buffer_ffpd[739];

    auto g_xyz_xxy_x_xz = buffer_ffpd[740];

    auto g_xyz_xxy_x_yy = buffer_ffpd[741];

    auto g_xyz_xxy_x_yz = buffer_ffpd[742];

    auto g_xyz_xxy_x_zz = buffer_ffpd[743];

    auto g_xyz_xxy_y_xx = buffer_ffpd[744];

    auto g_xyz_xxy_y_xy = buffer_ffpd[745];

    auto g_xyz_xxy_y_xz = buffer_ffpd[746];

    auto g_xyz_xxy_y_yy = buffer_ffpd[747];

    auto g_xyz_xxy_y_yz = buffer_ffpd[748];

    auto g_xyz_xxy_y_zz = buffer_ffpd[749];

    auto g_xyz_xxy_z_xx = buffer_ffpd[750];

    auto g_xyz_xxy_z_xy = buffer_ffpd[751];

    auto g_xyz_xxy_z_xz = buffer_ffpd[752];

    auto g_xyz_xxy_z_yy = buffer_ffpd[753];

    auto g_xyz_xxy_z_yz = buffer_ffpd[754];

    auto g_xyz_xxy_z_zz = buffer_ffpd[755];

    auto g_xyz_xxz_x_xx = buffer_ffpd[756];

    auto g_xyz_xxz_x_xy = buffer_ffpd[757];

    auto g_xyz_xxz_x_xz = buffer_ffpd[758];

    auto g_xyz_xxz_x_yy = buffer_ffpd[759];

    auto g_xyz_xxz_x_yz = buffer_ffpd[760];

    auto g_xyz_xxz_x_zz = buffer_ffpd[761];

    auto g_xyz_xxz_y_xx = buffer_ffpd[762];

    auto g_xyz_xxz_y_xy = buffer_ffpd[763];

    auto g_xyz_xxz_y_xz = buffer_ffpd[764];

    auto g_xyz_xxz_y_yy = buffer_ffpd[765];

    auto g_xyz_xxz_y_yz = buffer_ffpd[766];

    auto g_xyz_xxz_y_zz = buffer_ffpd[767];

    auto g_xyz_xxz_z_xx = buffer_ffpd[768];

    auto g_xyz_xxz_z_xy = buffer_ffpd[769];

    auto g_xyz_xxz_z_xz = buffer_ffpd[770];

    auto g_xyz_xxz_z_yy = buffer_ffpd[771];

    auto g_xyz_xxz_z_yz = buffer_ffpd[772];

    auto g_xyz_xxz_z_zz = buffer_ffpd[773];

    auto g_xyz_xyy_x_xx = buffer_ffpd[774];

    auto g_xyz_xyy_x_xy = buffer_ffpd[775];

    auto g_xyz_xyy_x_xz = buffer_ffpd[776];

    auto g_xyz_xyy_x_yy = buffer_ffpd[777];

    auto g_xyz_xyy_x_yz = buffer_ffpd[778];

    auto g_xyz_xyy_x_zz = buffer_ffpd[779];

    auto g_xyz_xyy_y_xx = buffer_ffpd[780];

    auto g_xyz_xyy_y_xy = buffer_ffpd[781];

    auto g_xyz_xyy_y_xz = buffer_ffpd[782];

    auto g_xyz_xyy_y_yy = buffer_ffpd[783];

    auto g_xyz_xyy_y_yz = buffer_ffpd[784];

    auto g_xyz_xyy_y_zz = buffer_ffpd[785];

    auto g_xyz_xyy_z_xx = buffer_ffpd[786];

    auto g_xyz_xyy_z_xy = buffer_ffpd[787];

    auto g_xyz_xyy_z_xz = buffer_ffpd[788];

    auto g_xyz_xyy_z_yy = buffer_ffpd[789];

    auto g_xyz_xyy_z_yz = buffer_ffpd[790];

    auto g_xyz_xyy_z_zz = buffer_ffpd[791];

    auto g_xyz_xyz_x_xx = buffer_ffpd[792];

    auto g_xyz_xyz_x_xy = buffer_ffpd[793];

    auto g_xyz_xyz_x_xz = buffer_ffpd[794];

    auto g_xyz_xyz_x_yy = buffer_ffpd[795];

    auto g_xyz_xyz_x_yz = buffer_ffpd[796];

    auto g_xyz_xyz_x_zz = buffer_ffpd[797];

    auto g_xyz_xyz_y_xx = buffer_ffpd[798];

    auto g_xyz_xyz_y_xy = buffer_ffpd[799];

    auto g_xyz_xyz_y_xz = buffer_ffpd[800];

    auto g_xyz_xyz_y_yy = buffer_ffpd[801];

    auto g_xyz_xyz_y_yz = buffer_ffpd[802];

    auto g_xyz_xyz_y_zz = buffer_ffpd[803];

    auto g_xyz_xyz_z_xx = buffer_ffpd[804];

    auto g_xyz_xyz_z_xy = buffer_ffpd[805];

    auto g_xyz_xyz_z_xz = buffer_ffpd[806];

    auto g_xyz_xyz_z_yy = buffer_ffpd[807];

    auto g_xyz_xyz_z_yz = buffer_ffpd[808];

    auto g_xyz_xyz_z_zz = buffer_ffpd[809];

    auto g_xyz_xzz_x_xx = buffer_ffpd[810];

    auto g_xyz_xzz_x_xy = buffer_ffpd[811];

    auto g_xyz_xzz_x_xz = buffer_ffpd[812];

    auto g_xyz_xzz_x_yy = buffer_ffpd[813];

    auto g_xyz_xzz_x_yz = buffer_ffpd[814];

    auto g_xyz_xzz_x_zz = buffer_ffpd[815];

    auto g_xyz_xzz_y_xx = buffer_ffpd[816];

    auto g_xyz_xzz_y_xy = buffer_ffpd[817];

    auto g_xyz_xzz_y_xz = buffer_ffpd[818];

    auto g_xyz_xzz_y_yy = buffer_ffpd[819];

    auto g_xyz_xzz_y_yz = buffer_ffpd[820];

    auto g_xyz_xzz_y_zz = buffer_ffpd[821];

    auto g_xyz_xzz_z_xx = buffer_ffpd[822];

    auto g_xyz_xzz_z_xy = buffer_ffpd[823];

    auto g_xyz_xzz_z_xz = buffer_ffpd[824];

    auto g_xyz_xzz_z_yy = buffer_ffpd[825];

    auto g_xyz_xzz_z_yz = buffer_ffpd[826];

    auto g_xyz_xzz_z_zz = buffer_ffpd[827];

    auto g_xyz_yyy_x_xx = buffer_ffpd[828];

    auto g_xyz_yyy_x_xy = buffer_ffpd[829];

    auto g_xyz_yyy_x_xz = buffer_ffpd[830];

    auto g_xyz_yyy_x_yy = buffer_ffpd[831];

    auto g_xyz_yyy_x_yz = buffer_ffpd[832];

    auto g_xyz_yyy_x_zz = buffer_ffpd[833];

    auto g_xyz_yyy_y_xx = buffer_ffpd[834];

    auto g_xyz_yyy_y_xy = buffer_ffpd[835];

    auto g_xyz_yyy_y_xz = buffer_ffpd[836];

    auto g_xyz_yyy_y_yy = buffer_ffpd[837];

    auto g_xyz_yyy_y_yz = buffer_ffpd[838];

    auto g_xyz_yyy_y_zz = buffer_ffpd[839];

    auto g_xyz_yyy_z_xx = buffer_ffpd[840];

    auto g_xyz_yyy_z_xy = buffer_ffpd[841];

    auto g_xyz_yyy_z_xz = buffer_ffpd[842];

    auto g_xyz_yyy_z_yy = buffer_ffpd[843];

    auto g_xyz_yyy_z_yz = buffer_ffpd[844];

    auto g_xyz_yyy_z_zz = buffer_ffpd[845];

    auto g_xyz_yyz_x_xx = buffer_ffpd[846];

    auto g_xyz_yyz_x_xy = buffer_ffpd[847];

    auto g_xyz_yyz_x_xz = buffer_ffpd[848];

    auto g_xyz_yyz_x_yy = buffer_ffpd[849];

    auto g_xyz_yyz_x_yz = buffer_ffpd[850];

    auto g_xyz_yyz_x_zz = buffer_ffpd[851];

    auto g_xyz_yyz_y_xx = buffer_ffpd[852];

    auto g_xyz_yyz_y_xy = buffer_ffpd[853];

    auto g_xyz_yyz_y_xz = buffer_ffpd[854];

    auto g_xyz_yyz_y_yy = buffer_ffpd[855];

    auto g_xyz_yyz_y_yz = buffer_ffpd[856];

    auto g_xyz_yyz_y_zz = buffer_ffpd[857];

    auto g_xyz_yyz_z_xx = buffer_ffpd[858];

    auto g_xyz_yyz_z_xy = buffer_ffpd[859];

    auto g_xyz_yyz_z_xz = buffer_ffpd[860];

    auto g_xyz_yyz_z_yy = buffer_ffpd[861];

    auto g_xyz_yyz_z_yz = buffer_ffpd[862];

    auto g_xyz_yyz_z_zz = buffer_ffpd[863];

    auto g_xyz_yzz_x_xx = buffer_ffpd[864];

    auto g_xyz_yzz_x_xy = buffer_ffpd[865];

    auto g_xyz_yzz_x_xz = buffer_ffpd[866];

    auto g_xyz_yzz_x_yy = buffer_ffpd[867];

    auto g_xyz_yzz_x_yz = buffer_ffpd[868];

    auto g_xyz_yzz_x_zz = buffer_ffpd[869];

    auto g_xyz_yzz_y_xx = buffer_ffpd[870];

    auto g_xyz_yzz_y_xy = buffer_ffpd[871];

    auto g_xyz_yzz_y_xz = buffer_ffpd[872];

    auto g_xyz_yzz_y_yy = buffer_ffpd[873];

    auto g_xyz_yzz_y_yz = buffer_ffpd[874];

    auto g_xyz_yzz_y_zz = buffer_ffpd[875];

    auto g_xyz_yzz_z_xx = buffer_ffpd[876];

    auto g_xyz_yzz_z_xy = buffer_ffpd[877];

    auto g_xyz_yzz_z_xz = buffer_ffpd[878];

    auto g_xyz_yzz_z_yy = buffer_ffpd[879];

    auto g_xyz_yzz_z_yz = buffer_ffpd[880];

    auto g_xyz_yzz_z_zz = buffer_ffpd[881];

    auto g_xyz_zzz_x_xx = buffer_ffpd[882];

    auto g_xyz_zzz_x_xy = buffer_ffpd[883];

    auto g_xyz_zzz_x_xz = buffer_ffpd[884];

    auto g_xyz_zzz_x_yy = buffer_ffpd[885];

    auto g_xyz_zzz_x_yz = buffer_ffpd[886];

    auto g_xyz_zzz_x_zz = buffer_ffpd[887];

    auto g_xyz_zzz_y_xx = buffer_ffpd[888];

    auto g_xyz_zzz_y_xy = buffer_ffpd[889];

    auto g_xyz_zzz_y_xz = buffer_ffpd[890];

    auto g_xyz_zzz_y_yy = buffer_ffpd[891];

    auto g_xyz_zzz_y_yz = buffer_ffpd[892];

    auto g_xyz_zzz_y_zz = buffer_ffpd[893];

    auto g_xyz_zzz_z_xx = buffer_ffpd[894];

    auto g_xyz_zzz_z_xy = buffer_ffpd[895];

    auto g_xyz_zzz_z_xz = buffer_ffpd[896];

    auto g_xyz_zzz_z_yy = buffer_ffpd[897];

    auto g_xyz_zzz_z_yz = buffer_ffpd[898];

    auto g_xyz_zzz_z_zz = buffer_ffpd[899];

    auto g_xzz_xxx_x_xx = buffer_ffpd[900];

    auto g_xzz_xxx_x_xy = buffer_ffpd[901];

    auto g_xzz_xxx_x_xz = buffer_ffpd[902];

    auto g_xzz_xxx_x_yy = buffer_ffpd[903];

    auto g_xzz_xxx_x_yz = buffer_ffpd[904];

    auto g_xzz_xxx_x_zz = buffer_ffpd[905];

    auto g_xzz_xxx_y_xx = buffer_ffpd[906];

    auto g_xzz_xxx_y_xy = buffer_ffpd[907];

    auto g_xzz_xxx_y_xz = buffer_ffpd[908];

    auto g_xzz_xxx_y_yy = buffer_ffpd[909];

    auto g_xzz_xxx_y_yz = buffer_ffpd[910];

    auto g_xzz_xxx_y_zz = buffer_ffpd[911];

    auto g_xzz_xxx_z_xx = buffer_ffpd[912];

    auto g_xzz_xxx_z_xy = buffer_ffpd[913];

    auto g_xzz_xxx_z_xz = buffer_ffpd[914];

    auto g_xzz_xxx_z_yy = buffer_ffpd[915];

    auto g_xzz_xxx_z_yz = buffer_ffpd[916];

    auto g_xzz_xxx_z_zz = buffer_ffpd[917];

    auto g_xzz_xxy_x_xx = buffer_ffpd[918];

    auto g_xzz_xxy_x_xy = buffer_ffpd[919];

    auto g_xzz_xxy_x_xz = buffer_ffpd[920];

    auto g_xzz_xxy_x_yy = buffer_ffpd[921];

    auto g_xzz_xxy_x_yz = buffer_ffpd[922];

    auto g_xzz_xxy_x_zz = buffer_ffpd[923];

    auto g_xzz_xxy_y_xx = buffer_ffpd[924];

    auto g_xzz_xxy_y_xy = buffer_ffpd[925];

    auto g_xzz_xxy_y_xz = buffer_ffpd[926];

    auto g_xzz_xxy_y_yy = buffer_ffpd[927];

    auto g_xzz_xxy_y_yz = buffer_ffpd[928];

    auto g_xzz_xxy_y_zz = buffer_ffpd[929];

    auto g_xzz_xxy_z_xx = buffer_ffpd[930];

    auto g_xzz_xxy_z_xy = buffer_ffpd[931];

    auto g_xzz_xxy_z_xz = buffer_ffpd[932];

    auto g_xzz_xxy_z_yy = buffer_ffpd[933];

    auto g_xzz_xxy_z_yz = buffer_ffpd[934];

    auto g_xzz_xxy_z_zz = buffer_ffpd[935];

    auto g_xzz_xxz_x_xx = buffer_ffpd[936];

    auto g_xzz_xxz_x_xy = buffer_ffpd[937];

    auto g_xzz_xxz_x_xz = buffer_ffpd[938];

    auto g_xzz_xxz_x_yy = buffer_ffpd[939];

    auto g_xzz_xxz_x_yz = buffer_ffpd[940];

    auto g_xzz_xxz_x_zz = buffer_ffpd[941];

    auto g_xzz_xxz_y_xx = buffer_ffpd[942];

    auto g_xzz_xxz_y_xy = buffer_ffpd[943];

    auto g_xzz_xxz_y_xz = buffer_ffpd[944];

    auto g_xzz_xxz_y_yy = buffer_ffpd[945];

    auto g_xzz_xxz_y_yz = buffer_ffpd[946];

    auto g_xzz_xxz_y_zz = buffer_ffpd[947];

    auto g_xzz_xxz_z_xx = buffer_ffpd[948];

    auto g_xzz_xxz_z_xy = buffer_ffpd[949];

    auto g_xzz_xxz_z_xz = buffer_ffpd[950];

    auto g_xzz_xxz_z_yy = buffer_ffpd[951];

    auto g_xzz_xxz_z_yz = buffer_ffpd[952];

    auto g_xzz_xxz_z_zz = buffer_ffpd[953];

    auto g_xzz_xyy_x_xx = buffer_ffpd[954];

    auto g_xzz_xyy_x_xy = buffer_ffpd[955];

    auto g_xzz_xyy_x_xz = buffer_ffpd[956];

    auto g_xzz_xyy_x_yy = buffer_ffpd[957];

    auto g_xzz_xyy_x_yz = buffer_ffpd[958];

    auto g_xzz_xyy_x_zz = buffer_ffpd[959];

    auto g_xzz_xyy_y_xx = buffer_ffpd[960];

    auto g_xzz_xyy_y_xy = buffer_ffpd[961];

    auto g_xzz_xyy_y_xz = buffer_ffpd[962];

    auto g_xzz_xyy_y_yy = buffer_ffpd[963];

    auto g_xzz_xyy_y_yz = buffer_ffpd[964];

    auto g_xzz_xyy_y_zz = buffer_ffpd[965];

    auto g_xzz_xyy_z_xx = buffer_ffpd[966];

    auto g_xzz_xyy_z_xy = buffer_ffpd[967];

    auto g_xzz_xyy_z_xz = buffer_ffpd[968];

    auto g_xzz_xyy_z_yy = buffer_ffpd[969];

    auto g_xzz_xyy_z_yz = buffer_ffpd[970];

    auto g_xzz_xyy_z_zz = buffer_ffpd[971];

    auto g_xzz_xyz_x_xx = buffer_ffpd[972];

    auto g_xzz_xyz_x_xy = buffer_ffpd[973];

    auto g_xzz_xyz_x_xz = buffer_ffpd[974];

    auto g_xzz_xyz_x_yy = buffer_ffpd[975];

    auto g_xzz_xyz_x_yz = buffer_ffpd[976];

    auto g_xzz_xyz_x_zz = buffer_ffpd[977];

    auto g_xzz_xyz_y_xx = buffer_ffpd[978];

    auto g_xzz_xyz_y_xy = buffer_ffpd[979];

    auto g_xzz_xyz_y_xz = buffer_ffpd[980];

    auto g_xzz_xyz_y_yy = buffer_ffpd[981];

    auto g_xzz_xyz_y_yz = buffer_ffpd[982];

    auto g_xzz_xyz_y_zz = buffer_ffpd[983];

    auto g_xzz_xyz_z_xx = buffer_ffpd[984];

    auto g_xzz_xyz_z_xy = buffer_ffpd[985];

    auto g_xzz_xyz_z_xz = buffer_ffpd[986];

    auto g_xzz_xyz_z_yy = buffer_ffpd[987];

    auto g_xzz_xyz_z_yz = buffer_ffpd[988];

    auto g_xzz_xyz_z_zz = buffer_ffpd[989];

    auto g_xzz_xzz_x_xx = buffer_ffpd[990];

    auto g_xzz_xzz_x_xy = buffer_ffpd[991];

    auto g_xzz_xzz_x_xz = buffer_ffpd[992];

    auto g_xzz_xzz_x_yy = buffer_ffpd[993];

    auto g_xzz_xzz_x_yz = buffer_ffpd[994];

    auto g_xzz_xzz_x_zz = buffer_ffpd[995];

    auto g_xzz_xzz_y_xx = buffer_ffpd[996];

    auto g_xzz_xzz_y_xy = buffer_ffpd[997];

    auto g_xzz_xzz_y_xz = buffer_ffpd[998];

    auto g_xzz_xzz_y_yy = buffer_ffpd[999];

    auto g_xzz_xzz_y_yz = buffer_ffpd[1000];

    auto g_xzz_xzz_y_zz = buffer_ffpd[1001];

    auto g_xzz_xzz_z_xx = buffer_ffpd[1002];

    auto g_xzz_xzz_z_xy = buffer_ffpd[1003];

    auto g_xzz_xzz_z_xz = buffer_ffpd[1004];

    auto g_xzz_xzz_z_yy = buffer_ffpd[1005];

    auto g_xzz_xzz_z_yz = buffer_ffpd[1006];

    auto g_xzz_xzz_z_zz = buffer_ffpd[1007];

    auto g_xzz_yyy_x_xx = buffer_ffpd[1008];

    auto g_xzz_yyy_x_xy = buffer_ffpd[1009];

    auto g_xzz_yyy_x_xz = buffer_ffpd[1010];

    auto g_xzz_yyy_x_yy = buffer_ffpd[1011];

    auto g_xzz_yyy_x_yz = buffer_ffpd[1012];

    auto g_xzz_yyy_x_zz = buffer_ffpd[1013];

    auto g_xzz_yyy_y_xx = buffer_ffpd[1014];

    auto g_xzz_yyy_y_xy = buffer_ffpd[1015];

    auto g_xzz_yyy_y_xz = buffer_ffpd[1016];

    auto g_xzz_yyy_y_yy = buffer_ffpd[1017];

    auto g_xzz_yyy_y_yz = buffer_ffpd[1018];

    auto g_xzz_yyy_y_zz = buffer_ffpd[1019];

    auto g_xzz_yyy_z_xx = buffer_ffpd[1020];

    auto g_xzz_yyy_z_xy = buffer_ffpd[1021];

    auto g_xzz_yyy_z_xz = buffer_ffpd[1022];

    auto g_xzz_yyy_z_yy = buffer_ffpd[1023];

    auto g_xzz_yyy_z_yz = buffer_ffpd[1024];

    auto g_xzz_yyy_z_zz = buffer_ffpd[1025];

    auto g_xzz_yyz_x_xx = buffer_ffpd[1026];

    auto g_xzz_yyz_x_xy = buffer_ffpd[1027];

    auto g_xzz_yyz_x_xz = buffer_ffpd[1028];

    auto g_xzz_yyz_x_yy = buffer_ffpd[1029];

    auto g_xzz_yyz_x_yz = buffer_ffpd[1030];

    auto g_xzz_yyz_x_zz = buffer_ffpd[1031];

    auto g_xzz_yyz_y_xx = buffer_ffpd[1032];

    auto g_xzz_yyz_y_xy = buffer_ffpd[1033];

    auto g_xzz_yyz_y_xz = buffer_ffpd[1034];

    auto g_xzz_yyz_y_yy = buffer_ffpd[1035];

    auto g_xzz_yyz_y_yz = buffer_ffpd[1036];

    auto g_xzz_yyz_y_zz = buffer_ffpd[1037];

    auto g_xzz_yyz_z_xx = buffer_ffpd[1038];

    auto g_xzz_yyz_z_xy = buffer_ffpd[1039];

    auto g_xzz_yyz_z_xz = buffer_ffpd[1040];

    auto g_xzz_yyz_z_yy = buffer_ffpd[1041];

    auto g_xzz_yyz_z_yz = buffer_ffpd[1042];

    auto g_xzz_yyz_z_zz = buffer_ffpd[1043];

    auto g_xzz_yzz_x_xx = buffer_ffpd[1044];

    auto g_xzz_yzz_x_xy = buffer_ffpd[1045];

    auto g_xzz_yzz_x_xz = buffer_ffpd[1046];

    auto g_xzz_yzz_x_yy = buffer_ffpd[1047];

    auto g_xzz_yzz_x_yz = buffer_ffpd[1048];

    auto g_xzz_yzz_x_zz = buffer_ffpd[1049];

    auto g_xzz_yzz_y_xx = buffer_ffpd[1050];

    auto g_xzz_yzz_y_xy = buffer_ffpd[1051];

    auto g_xzz_yzz_y_xz = buffer_ffpd[1052];

    auto g_xzz_yzz_y_yy = buffer_ffpd[1053];

    auto g_xzz_yzz_y_yz = buffer_ffpd[1054];

    auto g_xzz_yzz_y_zz = buffer_ffpd[1055];

    auto g_xzz_yzz_z_xx = buffer_ffpd[1056];

    auto g_xzz_yzz_z_xy = buffer_ffpd[1057];

    auto g_xzz_yzz_z_xz = buffer_ffpd[1058];

    auto g_xzz_yzz_z_yy = buffer_ffpd[1059];

    auto g_xzz_yzz_z_yz = buffer_ffpd[1060];

    auto g_xzz_yzz_z_zz = buffer_ffpd[1061];

    auto g_xzz_zzz_x_xx = buffer_ffpd[1062];

    auto g_xzz_zzz_x_xy = buffer_ffpd[1063];

    auto g_xzz_zzz_x_xz = buffer_ffpd[1064];

    auto g_xzz_zzz_x_yy = buffer_ffpd[1065];

    auto g_xzz_zzz_x_yz = buffer_ffpd[1066];

    auto g_xzz_zzz_x_zz = buffer_ffpd[1067];

    auto g_xzz_zzz_y_xx = buffer_ffpd[1068];

    auto g_xzz_zzz_y_xy = buffer_ffpd[1069];

    auto g_xzz_zzz_y_xz = buffer_ffpd[1070];

    auto g_xzz_zzz_y_yy = buffer_ffpd[1071];

    auto g_xzz_zzz_y_yz = buffer_ffpd[1072];

    auto g_xzz_zzz_y_zz = buffer_ffpd[1073];

    auto g_xzz_zzz_z_xx = buffer_ffpd[1074];

    auto g_xzz_zzz_z_xy = buffer_ffpd[1075];

    auto g_xzz_zzz_z_xz = buffer_ffpd[1076];

    auto g_xzz_zzz_z_yy = buffer_ffpd[1077];

    auto g_xzz_zzz_z_yz = buffer_ffpd[1078];

    auto g_xzz_zzz_z_zz = buffer_ffpd[1079];

    auto g_yyy_xxx_x_xx = buffer_ffpd[1080];

    auto g_yyy_xxx_x_xy = buffer_ffpd[1081];

    auto g_yyy_xxx_x_xz = buffer_ffpd[1082];

    auto g_yyy_xxx_x_yy = buffer_ffpd[1083];

    auto g_yyy_xxx_x_yz = buffer_ffpd[1084];

    auto g_yyy_xxx_x_zz = buffer_ffpd[1085];

    auto g_yyy_xxx_y_xx = buffer_ffpd[1086];

    auto g_yyy_xxx_y_xy = buffer_ffpd[1087];

    auto g_yyy_xxx_y_xz = buffer_ffpd[1088];

    auto g_yyy_xxx_y_yy = buffer_ffpd[1089];

    auto g_yyy_xxx_y_yz = buffer_ffpd[1090];

    auto g_yyy_xxx_y_zz = buffer_ffpd[1091];

    auto g_yyy_xxx_z_xx = buffer_ffpd[1092];

    auto g_yyy_xxx_z_xy = buffer_ffpd[1093];

    auto g_yyy_xxx_z_xz = buffer_ffpd[1094];

    auto g_yyy_xxx_z_yy = buffer_ffpd[1095];

    auto g_yyy_xxx_z_yz = buffer_ffpd[1096];

    auto g_yyy_xxx_z_zz = buffer_ffpd[1097];

    auto g_yyy_xxy_x_xx = buffer_ffpd[1098];

    auto g_yyy_xxy_x_xy = buffer_ffpd[1099];

    auto g_yyy_xxy_x_xz = buffer_ffpd[1100];

    auto g_yyy_xxy_x_yy = buffer_ffpd[1101];

    auto g_yyy_xxy_x_yz = buffer_ffpd[1102];

    auto g_yyy_xxy_x_zz = buffer_ffpd[1103];

    auto g_yyy_xxy_y_xx = buffer_ffpd[1104];

    auto g_yyy_xxy_y_xy = buffer_ffpd[1105];

    auto g_yyy_xxy_y_xz = buffer_ffpd[1106];

    auto g_yyy_xxy_y_yy = buffer_ffpd[1107];

    auto g_yyy_xxy_y_yz = buffer_ffpd[1108];

    auto g_yyy_xxy_y_zz = buffer_ffpd[1109];

    auto g_yyy_xxy_z_xx = buffer_ffpd[1110];

    auto g_yyy_xxy_z_xy = buffer_ffpd[1111];

    auto g_yyy_xxy_z_xz = buffer_ffpd[1112];

    auto g_yyy_xxy_z_yy = buffer_ffpd[1113];

    auto g_yyy_xxy_z_yz = buffer_ffpd[1114];

    auto g_yyy_xxy_z_zz = buffer_ffpd[1115];

    auto g_yyy_xxz_x_xx = buffer_ffpd[1116];

    auto g_yyy_xxz_x_xy = buffer_ffpd[1117];

    auto g_yyy_xxz_x_xz = buffer_ffpd[1118];

    auto g_yyy_xxz_x_yy = buffer_ffpd[1119];

    auto g_yyy_xxz_x_yz = buffer_ffpd[1120];

    auto g_yyy_xxz_x_zz = buffer_ffpd[1121];

    auto g_yyy_xxz_y_xx = buffer_ffpd[1122];

    auto g_yyy_xxz_y_xy = buffer_ffpd[1123];

    auto g_yyy_xxz_y_xz = buffer_ffpd[1124];

    auto g_yyy_xxz_y_yy = buffer_ffpd[1125];

    auto g_yyy_xxz_y_yz = buffer_ffpd[1126];

    auto g_yyy_xxz_y_zz = buffer_ffpd[1127];

    auto g_yyy_xxz_z_xx = buffer_ffpd[1128];

    auto g_yyy_xxz_z_xy = buffer_ffpd[1129];

    auto g_yyy_xxz_z_xz = buffer_ffpd[1130];

    auto g_yyy_xxz_z_yy = buffer_ffpd[1131];

    auto g_yyy_xxz_z_yz = buffer_ffpd[1132];

    auto g_yyy_xxz_z_zz = buffer_ffpd[1133];

    auto g_yyy_xyy_x_xx = buffer_ffpd[1134];

    auto g_yyy_xyy_x_xy = buffer_ffpd[1135];

    auto g_yyy_xyy_x_xz = buffer_ffpd[1136];

    auto g_yyy_xyy_x_yy = buffer_ffpd[1137];

    auto g_yyy_xyy_x_yz = buffer_ffpd[1138];

    auto g_yyy_xyy_x_zz = buffer_ffpd[1139];

    auto g_yyy_xyy_y_xx = buffer_ffpd[1140];

    auto g_yyy_xyy_y_xy = buffer_ffpd[1141];

    auto g_yyy_xyy_y_xz = buffer_ffpd[1142];

    auto g_yyy_xyy_y_yy = buffer_ffpd[1143];

    auto g_yyy_xyy_y_yz = buffer_ffpd[1144];

    auto g_yyy_xyy_y_zz = buffer_ffpd[1145];

    auto g_yyy_xyy_z_xx = buffer_ffpd[1146];

    auto g_yyy_xyy_z_xy = buffer_ffpd[1147];

    auto g_yyy_xyy_z_xz = buffer_ffpd[1148];

    auto g_yyy_xyy_z_yy = buffer_ffpd[1149];

    auto g_yyy_xyy_z_yz = buffer_ffpd[1150];

    auto g_yyy_xyy_z_zz = buffer_ffpd[1151];

    auto g_yyy_xyz_x_xx = buffer_ffpd[1152];

    auto g_yyy_xyz_x_xy = buffer_ffpd[1153];

    auto g_yyy_xyz_x_xz = buffer_ffpd[1154];

    auto g_yyy_xyz_x_yy = buffer_ffpd[1155];

    auto g_yyy_xyz_x_yz = buffer_ffpd[1156];

    auto g_yyy_xyz_x_zz = buffer_ffpd[1157];

    auto g_yyy_xyz_y_xx = buffer_ffpd[1158];

    auto g_yyy_xyz_y_xy = buffer_ffpd[1159];

    auto g_yyy_xyz_y_xz = buffer_ffpd[1160];

    auto g_yyy_xyz_y_yy = buffer_ffpd[1161];

    auto g_yyy_xyz_y_yz = buffer_ffpd[1162];

    auto g_yyy_xyz_y_zz = buffer_ffpd[1163];

    auto g_yyy_xyz_z_xx = buffer_ffpd[1164];

    auto g_yyy_xyz_z_xy = buffer_ffpd[1165];

    auto g_yyy_xyz_z_xz = buffer_ffpd[1166];

    auto g_yyy_xyz_z_yy = buffer_ffpd[1167];

    auto g_yyy_xyz_z_yz = buffer_ffpd[1168];

    auto g_yyy_xyz_z_zz = buffer_ffpd[1169];

    auto g_yyy_xzz_x_xx = buffer_ffpd[1170];

    auto g_yyy_xzz_x_xy = buffer_ffpd[1171];

    auto g_yyy_xzz_x_xz = buffer_ffpd[1172];

    auto g_yyy_xzz_x_yy = buffer_ffpd[1173];

    auto g_yyy_xzz_x_yz = buffer_ffpd[1174];

    auto g_yyy_xzz_x_zz = buffer_ffpd[1175];

    auto g_yyy_xzz_y_xx = buffer_ffpd[1176];

    auto g_yyy_xzz_y_xy = buffer_ffpd[1177];

    auto g_yyy_xzz_y_xz = buffer_ffpd[1178];

    auto g_yyy_xzz_y_yy = buffer_ffpd[1179];

    auto g_yyy_xzz_y_yz = buffer_ffpd[1180];

    auto g_yyy_xzz_y_zz = buffer_ffpd[1181];

    auto g_yyy_xzz_z_xx = buffer_ffpd[1182];

    auto g_yyy_xzz_z_xy = buffer_ffpd[1183];

    auto g_yyy_xzz_z_xz = buffer_ffpd[1184];

    auto g_yyy_xzz_z_yy = buffer_ffpd[1185];

    auto g_yyy_xzz_z_yz = buffer_ffpd[1186];

    auto g_yyy_xzz_z_zz = buffer_ffpd[1187];

    auto g_yyy_yyy_x_xx = buffer_ffpd[1188];

    auto g_yyy_yyy_x_xy = buffer_ffpd[1189];

    auto g_yyy_yyy_x_xz = buffer_ffpd[1190];

    auto g_yyy_yyy_x_yy = buffer_ffpd[1191];

    auto g_yyy_yyy_x_yz = buffer_ffpd[1192];

    auto g_yyy_yyy_x_zz = buffer_ffpd[1193];

    auto g_yyy_yyy_y_xx = buffer_ffpd[1194];

    auto g_yyy_yyy_y_xy = buffer_ffpd[1195];

    auto g_yyy_yyy_y_xz = buffer_ffpd[1196];

    auto g_yyy_yyy_y_yy = buffer_ffpd[1197];

    auto g_yyy_yyy_y_yz = buffer_ffpd[1198];

    auto g_yyy_yyy_y_zz = buffer_ffpd[1199];

    auto g_yyy_yyy_z_xx = buffer_ffpd[1200];

    auto g_yyy_yyy_z_xy = buffer_ffpd[1201];

    auto g_yyy_yyy_z_xz = buffer_ffpd[1202];

    auto g_yyy_yyy_z_yy = buffer_ffpd[1203];

    auto g_yyy_yyy_z_yz = buffer_ffpd[1204];

    auto g_yyy_yyy_z_zz = buffer_ffpd[1205];

    auto g_yyy_yyz_x_xx = buffer_ffpd[1206];

    auto g_yyy_yyz_x_xy = buffer_ffpd[1207];

    auto g_yyy_yyz_x_xz = buffer_ffpd[1208];

    auto g_yyy_yyz_x_yy = buffer_ffpd[1209];

    auto g_yyy_yyz_x_yz = buffer_ffpd[1210];

    auto g_yyy_yyz_x_zz = buffer_ffpd[1211];

    auto g_yyy_yyz_y_xx = buffer_ffpd[1212];

    auto g_yyy_yyz_y_xy = buffer_ffpd[1213];

    auto g_yyy_yyz_y_xz = buffer_ffpd[1214];

    auto g_yyy_yyz_y_yy = buffer_ffpd[1215];

    auto g_yyy_yyz_y_yz = buffer_ffpd[1216];

    auto g_yyy_yyz_y_zz = buffer_ffpd[1217];

    auto g_yyy_yyz_z_xx = buffer_ffpd[1218];

    auto g_yyy_yyz_z_xy = buffer_ffpd[1219];

    auto g_yyy_yyz_z_xz = buffer_ffpd[1220];

    auto g_yyy_yyz_z_yy = buffer_ffpd[1221];

    auto g_yyy_yyz_z_yz = buffer_ffpd[1222];

    auto g_yyy_yyz_z_zz = buffer_ffpd[1223];

    auto g_yyy_yzz_x_xx = buffer_ffpd[1224];

    auto g_yyy_yzz_x_xy = buffer_ffpd[1225];

    auto g_yyy_yzz_x_xz = buffer_ffpd[1226];

    auto g_yyy_yzz_x_yy = buffer_ffpd[1227];

    auto g_yyy_yzz_x_yz = buffer_ffpd[1228];

    auto g_yyy_yzz_x_zz = buffer_ffpd[1229];

    auto g_yyy_yzz_y_xx = buffer_ffpd[1230];

    auto g_yyy_yzz_y_xy = buffer_ffpd[1231];

    auto g_yyy_yzz_y_xz = buffer_ffpd[1232];

    auto g_yyy_yzz_y_yy = buffer_ffpd[1233];

    auto g_yyy_yzz_y_yz = buffer_ffpd[1234];

    auto g_yyy_yzz_y_zz = buffer_ffpd[1235];

    auto g_yyy_yzz_z_xx = buffer_ffpd[1236];

    auto g_yyy_yzz_z_xy = buffer_ffpd[1237];

    auto g_yyy_yzz_z_xz = buffer_ffpd[1238];

    auto g_yyy_yzz_z_yy = buffer_ffpd[1239];

    auto g_yyy_yzz_z_yz = buffer_ffpd[1240];

    auto g_yyy_yzz_z_zz = buffer_ffpd[1241];

    auto g_yyy_zzz_x_xx = buffer_ffpd[1242];

    auto g_yyy_zzz_x_xy = buffer_ffpd[1243];

    auto g_yyy_zzz_x_xz = buffer_ffpd[1244];

    auto g_yyy_zzz_x_yy = buffer_ffpd[1245];

    auto g_yyy_zzz_x_yz = buffer_ffpd[1246];

    auto g_yyy_zzz_x_zz = buffer_ffpd[1247];

    auto g_yyy_zzz_y_xx = buffer_ffpd[1248];

    auto g_yyy_zzz_y_xy = buffer_ffpd[1249];

    auto g_yyy_zzz_y_xz = buffer_ffpd[1250];

    auto g_yyy_zzz_y_yy = buffer_ffpd[1251];

    auto g_yyy_zzz_y_yz = buffer_ffpd[1252];

    auto g_yyy_zzz_y_zz = buffer_ffpd[1253];

    auto g_yyy_zzz_z_xx = buffer_ffpd[1254];

    auto g_yyy_zzz_z_xy = buffer_ffpd[1255];

    auto g_yyy_zzz_z_xz = buffer_ffpd[1256];

    auto g_yyy_zzz_z_yy = buffer_ffpd[1257];

    auto g_yyy_zzz_z_yz = buffer_ffpd[1258];

    auto g_yyy_zzz_z_zz = buffer_ffpd[1259];

    auto g_yyz_xxx_x_xx = buffer_ffpd[1260];

    auto g_yyz_xxx_x_xy = buffer_ffpd[1261];

    auto g_yyz_xxx_x_xz = buffer_ffpd[1262];

    auto g_yyz_xxx_x_yy = buffer_ffpd[1263];

    auto g_yyz_xxx_x_yz = buffer_ffpd[1264];

    auto g_yyz_xxx_x_zz = buffer_ffpd[1265];

    auto g_yyz_xxx_y_xx = buffer_ffpd[1266];

    auto g_yyz_xxx_y_xy = buffer_ffpd[1267];

    auto g_yyz_xxx_y_xz = buffer_ffpd[1268];

    auto g_yyz_xxx_y_yy = buffer_ffpd[1269];

    auto g_yyz_xxx_y_yz = buffer_ffpd[1270];

    auto g_yyz_xxx_y_zz = buffer_ffpd[1271];

    auto g_yyz_xxx_z_xx = buffer_ffpd[1272];

    auto g_yyz_xxx_z_xy = buffer_ffpd[1273];

    auto g_yyz_xxx_z_xz = buffer_ffpd[1274];

    auto g_yyz_xxx_z_yy = buffer_ffpd[1275];

    auto g_yyz_xxx_z_yz = buffer_ffpd[1276];

    auto g_yyz_xxx_z_zz = buffer_ffpd[1277];

    auto g_yyz_xxy_x_xx = buffer_ffpd[1278];

    auto g_yyz_xxy_x_xy = buffer_ffpd[1279];

    auto g_yyz_xxy_x_xz = buffer_ffpd[1280];

    auto g_yyz_xxy_x_yy = buffer_ffpd[1281];

    auto g_yyz_xxy_x_yz = buffer_ffpd[1282];

    auto g_yyz_xxy_x_zz = buffer_ffpd[1283];

    auto g_yyz_xxy_y_xx = buffer_ffpd[1284];

    auto g_yyz_xxy_y_xy = buffer_ffpd[1285];

    auto g_yyz_xxy_y_xz = buffer_ffpd[1286];

    auto g_yyz_xxy_y_yy = buffer_ffpd[1287];

    auto g_yyz_xxy_y_yz = buffer_ffpd[1288];

    auto g_yyz_xxy_y_zz = buffer_ffpd[1289];

    auto g_yyz_xxy_z_xx = buffer_ffpd[1290];

    auto g_yyz_xxy_z_xy = buffer_ffpd[1291];

    auto g_yyz_xxy_z_xz = buffer_ffpd[1292];

    auto g_yyz_xxy_z_yy = buffer_ffpd[1293];

    auto g_yyz_xxy_z_yz = buffer_ffpd[1294];

    auto g_yyz_xxy_z_zz = buffer_ffpd[1295];

    auto g_yyz_xxz_x_xx = buffer_ffpd[1296];

    auto g_yyz_xxz_x_xy = buffer_ffpd[1297];

    auto g_yyz_xxz_x_xz = buffer_ffpd[1298];

    auto g_yyz_xxz_x_yy = buffer_ffpd[1299];

    auto g_yyz_xxz_x_yz = buffer_ffpd[1300];

    auto g_yyz_xxz_x_zz = buffer_ffpd[1301];

    auto g_yyz_xxz_y_xx = buffer_ffpd[1302];

    auto g_yyz_xxz_y_xy = buffer_ffpd[1303];

    auto g_yyz_xxz_y_xz = buffer_ffpd[1304];

    auto g_yyz_xxz_y_yy = buffer_ffpd[1305];

    auto g_yyz_xxz_y_yz = buffer_ffpd[1306];

    auto g_yyz_xxz_y_zz = buffer_ffpd[1307];

    auto g_yyz_xxz_z_xx = buffer_ffpd[1308];

    auto g_yyz_xxz_z_xy = buffer_ffpd[1309];

    auto g_yyz_xxz_z_xz = buffer_ffpd[1310];

    auto g_yyz_xxz_z_yy = buffer_ffpd[1311];

    auto g_yyz_xxz_z_yz = buffer_ffpd[1312];

    auto g_yyz_xxz_z_zz = buffer_ffpd[1313];

    auto g_yyz_xyy_x_xx = buffer_ffpd[1314];

    auto g_yyz_xyy_x_xy = buffer_ffpd[1315];

    auto g_yyz_xyy_x_xz = buffer_ffpd[1316];

    auto g_yyz_xyy_x_yy = buffer_ffpd[1317];

    auto g_yyz_xyy_x_yz = buffer_ffpd[1318];

    auto g_yyz_xyy_x_zz = buffer_ffpd[1319];

    auto g_yyz_xyy_y_xx = buffer_ffpd[1320];

    auto g_yyz_xyy_y_xy = buffer_ffpd[1321];

    auto g_yyz_xyy_y_xz = buffer_ffpd[1322];

    auto g_yyz_xyy_y_yy = buffer_ffpd[1323];

    auto g_yyz_xyy_y_yz = buffer_ffpd[1324];

    auto g_yyz_xyy_y_zz = buffer_ffpd[1325];

    auto g_yyz_xyy_z_xx = buffer_ffpd[1326];

    auto g_yyz_xyy_z_xy = buffer_ffpd[1327];

    auto g_yyz_xyy_z_xz = buffer_ffpd[1328];

    auto g_yyz_xyy_z_yy = buffer_ffpd[1329];

    auto g_yyz_xyy_z_yz = buffer_ffpd[1330];

    auto g_yyz_xyy_z_zz = buffer_ffpd[1331];

    auto g_yyz_xyz_x_xx = buffer_ffpd[1332];

    auto g_yyz_xyz_x_xy = buffer_ffpd[1333];

    auto g_yyz_xyz_x_xz = buffer_ffpd[1334];

    auto g_yyz_xyz_x_yy = buffer_ffpd[1335];

    auto g_yyz_xyz_x_yz = buffer_ffpd[1336];

    auto g_yyz_xyz_x_zz = buffer_ffpd[1337];

    auto g_yyz_xyz_y_xx = buffer_ffpd[1338];

    auto g_yyz_xyz_y_xy = buffer_ffpd[1339];

    auto g_yyz_xyz_y_xz = buffer_ffpd[1340];

    auto g_yyz_xyz_y_yy = buffer_ffpd[1341];

    auto g_yyz_xyz_y_yz = buffer_ffpd[1342];

    auto g_yyz_xyz_y_zz = buffer_ffpd[1343];

    auto g_yyz_xyz_z_xx = buffer_ffpd[1344];

    auto g_yyz_xyz_z_xy = buffer_ffpd[1345];

    auto g_yyz_xyz_z_xz = buffer_ffpd[1346];

    auto g_yyz_xyz_z_yy = buffer_ffpd[1347];

    auto g_yyz_xyz_z_yz = buffer_ffpd[1348];

    auto g_yyz_xyz_z_zz = buffer_ffpd[1349];

    auto g_yyz_xzz_x_xx = buffer_ffpd[1350];

    auto g_yyz_xzz_x_xy = buffer_ffpd[1351];

    auto g_yyz_xzz_x_xz = buffer_ffpd[1352];

    auto g_yyz_xzz_x_yy = buffer_ffpd[1353];

    auto g_yyz_xzz_x_yz = buffer_ffpd[1354];

    auto g_yyz_xzz_x_zz = buffer_ffpd[1355];

    auto g_yyz_xzz_y_xx = buffer_ffpd[1356];

    auto g_yyz_xzz_y_xy = buffer_ffpd[1357];

    auto g_yyz_xzz_y_xz = buffer_ffpd[1358];

    auto g_yyz_xzz_y_yy = buffer_ffpd[1359];

    auto g_yyz_xzz_y_yz = buffer_ffpd[1360];

    auto g_yyz_xzz_y_zz = buffer_ffpd[1361];

    auto g_yyz_xzz_z_xx = buffer_ffpd[1362];

    auto g_yyz_xzz_z_xy = buffer_ffpd[1363];

    auto g_yyz_xzz_z_xz = buffer_ffpd[1364];

    auto g_yyz_xzz_z_yy = buffer_ffpd[1365];

    auto g_yyz_xzz_z_yz = buffer_ffpd[1366];

    auto g_yyz_xzz_z_zz = buffer_ffpd[1367];

    auto g_yyz_yyy_x_xx = buffer_ffpd[1368];

    auto g_yyz_yyy_x_xy = buffer_ffpd[1369];

    auto g_yyz_yyy_x_xz = buffer_ffpd[1370];

    auto g_yyz_yyy_x_yy = buffer_ffpd[1371];

    auto g_yyz_yyy_x_yz = buffer_ffpd[1372];

    auto g_yyz_yyy_x_zz = buffer_ffpd[1373];

    auto g_yyz_yyy_y_xx = buffer_ffpd[1374];

    auto g_yyz_yyy_y_xy = buffer_ffpd[1375];

    auto g_yyz_yyy_y_xz = buffer_ffpd[1376];

    auto g_yyz_yyy_y_yy = buffer_ffpd[1377];

    auto g_yyz_yyy_y_yz = buffer_ffpd[1378];

    auto g_yyz_yyy_y_zz = buffer_ffpd[1379];

    auto g_yyz_yyy_z_xx = buffer_ffpd[1380];

    auto g_yyz_yyy_z_xy = buffer_ffpd[1381];

    auto g_yyz_yyy_z_xz = buffer_ffpd[1382];

    auto g_yyz_yyy_z_yy = buffer_ffpd[1383];

    auto g_yyz_yyy_z_yz = buffer_ffpd[1384];

    auto g_yyz_yyy_z_zz = buffer_ffpd[1385];

    auto g_yyz_yyz_x_xx = buffer_ffpd[1386];

    auto g_yyz_yyz_x_xy = buffer_ffpd[1387];

    auto g_yyz_yyz_x_xz = buffer_ffpd[1388];

    auto g_yyz_yyz_x_yy = buffer_ffpd[1389];

    auto g_yyz_yyz_x_yz = buffer_ffpd[1390];

    auto g_yyz_yyz_x_zz = buffer_ffpd[1391];

    auto g_yyz_yyz_y_xx = buffer_ffpd[1392];

    auto g_yyz_yyz_y_xy = buffer_ffpd[1393];

    auto g_yyz_yyz_y_xz = buffer_ffpd[1394];

    auto g_yyz_yyz_y_yy = buffer_ffpd[1395];

    auto g_yyz_yyz_y_yz = buffer_ffpd[1396];

    auto g_yyz_yyz_y_zz = buffer_ffpd[1397];

    auto g_yyz_yyz_z_xx = buffer_ffpd[1398];

    auto g_yyz_yyz_z_xy = buffer_ffpd[1399];

    auto g_yyz_yyz_z_xz = buffer_ffpd[1400];

    auto g_yyz_yyz_z_yy = buffer_ffpd[1401];

    auto g_yyz_yyz_z_yz = buffer_ffpd[1402];

    auto g_yyz_yyz_z_zz = buffer_ffpd[1403];

    auto g_yyz_yzz_x_xx = buffer_ffpd[1404];

    auto g_yyz_yzz_x_xy = buffer_ffpd[1405];

    auto g_yyz_yzz_x_xz = buffer_ffpd[1406];

    auto g_yyz_yzz_x_yy = buffer_ffpd[1407];

    auto g_yyz_yzz_x_yz = buffer_ffpd[1408];

    auto g_yyz_yzz_x_zz = buffer_ffpd[1409];

    auto g_yyz_yzz_y_xx = buffer_ffpd[1410];

    auto g_yyz_yzz_y_xy = buffer_ffpd[1411];

    auto g_yyz_yzz_y_xz = buffer_ffpd[1412];

    auto g_yyz_yzz_y_yy = buffer_ffpd[1413];

    auto g_yyz_yzz_y_yz = buffer_ffpd[1414];

    auto g_yyz_yzz_y_zz = buffer_ffpd[1415];

    auto g_yyz_yzz_z_xx = buffer_ffpd[1416];

    auto g_yyz_yzz_z_xy = buffer_ffpd[1417];

    auto g_yyz_yzz_z_xz = buffer_ffpd[1418];

    auto g_yyz_yzz_z_yy = buffer_ffpd[1419];

    auto g_yyz_yzz_z_yz = buffer_ffpd[1420];

    auto g_yyz_yzz_z_zz = buffer_ffpd[1421];

    auto g_yyz_zzz_x_xx = buffer_ffpd[1422];

    auto g_yyz_zzz_x_xy = buffer_ffpd[1423];

    auto g_yyz_zzz_x_xz = buffer_ffpd[1424];

    auto g_yyz_zzz_x_yy = buffer_ffpd[1425];

    auto g_yyz_zzz_x_yz = buffer_ffpd[1426];

    auto g_yyz_zzz_x_zz = buffer_ffpd[1427];

    auto g_yyz_zzz_y_xx = buffer_ffpd[1428];

    auto g_yyz_zzz_y_xy = buffer_ffpd[1429];

    auto g_yyz_zzz_y_xz = buffer_ffpd[1430];

    auto g_yyz_zzz_y_yy = buffer_ffpd[1431];

    auto g_yyz_zzz_y_yz = buffer_ffpd[1432];

    auto g_yyz_zzz_y_zz = buffer_ffpd[1433];

    auto g_yyz_zzz_z_xx = buffer_ffpd[1434];

    auto g_yyz_zzz_z_xy = buffer_ffpd[1435];

    auto g_yyz_zzz_z_xz = buffer_ffpd[1436];

    auto g_yyz_zzz_z_yy = buffer_ffpd[1437];

    auto g_yyz_zzz_z_yz = buffer_ffpd[1438];

    auto g_yyz_zzz_z_zz = buffer_ffpd[1439];

    auto g_yzz_xxx_x_xx = buffer_ffpd[1440];

    auto g_yzz_xxx_x_xy = buffer_ffpd[1441];

    auto g_yzz_xxx_x_xz = buffer_ffpd[1442];

    auto g_yzz_xxx_x_yy = buffer_ffpd[1443];

    auto g_yzz_xxx_x_yz = buffer_ffpd[1444];

    auto g_yzz_xxx_x_zz = buffer_ffpd[1445];

    auto g_yzz_xxx_y_xx = buffer_ffpd[1446];

    auto g_yzz_xxx_y_xy = buffer_ffpd[1447];

    auto g_yzz_xxx_y_xz = buffer_ffpd[1448];

    auto g_yzz_xxx_y_yy = buffer_ffpd[1449];

    auto g_yzz_xxx_y_yz = buffer_ffpd[1450];

    auto g_yzz_xxx_y_zz = buffer_ffpd[1451];

    auto g_yzz_xxx_z_xx = buffer_ffpd[1452];

    auto g_yzz_xxx_z_xy = buffer_ffpd[1453];

    auto g_yzz_xxx_z_xz = buffer_ffpd[1454];

    auto g_yzz_xxx_z_yy = buffer_ffpd[1455];

    auto g_yzz_xxx_z_yz = buffer_ffpd[1456];

    auto g_yzz_xxx_z_zz = buffer_ffpd[1457];

    auto g_yzz_xxy_x_xx = buffer_ffpd[1458];

    auto g_yzz_xxy_x_xy = buffer_ffpd[1459];

    auto g_yzz_xxy_x_xz = buffer_ffpd[1460];

    auto g_yzz_xxy_x_yy = buffer_ffpd[1461];

    auto g_yzz_xxy_x_yz = buffer_ffpd[1462];

    auto g_yzz_xxy_x_zz = buffer_ffpd[1463];

    auto g_yzz_xxy_y_xx = buffer_ffpd[1464];

    auto g_yzz_xxy_y_xy = buffer_ffpd[1465];

    auto g_yzz_xxy_y_xz = buffer_ffpd[1466];

    auto g_yzz_xxy_y_yy = buffer_ffpd[1467];

    auto g_yzz_xxy_y_yz = buffer_ffpd[1468];

    auto g_yzz_xxy_y_zz = buffer_ffpd[1469];

    auto g_yzz_xxy_z_xx = buffer_ffpd[1470];

    auto g_yzz_xxy_z_xy = buffer_ffpd[1471];

    auto g_yzz_xxy_z_xz = buffer_ffpd[1472];

    auto g_yzz_xxy_z_yy = buffer_ffpd[1473];

    auto g_yzz_xxy_z_yz = buffer_ffpd[1474];

    auto g_yzz_xxy_z_zz = buffer_ffpd[1475];

    auto g_yzz_xxz_x_xx = buffer_ffpd[1476];

    auto g_yzz_xxz_x_xy = buffer_ffpd[1477];

    auto g_yzz_xxz_x_xz = buffer_ffpd[1478];

    auto g_yzz_xxz_x_yy = buffer_ffpd[1479];

    auto g_yzz_xxz_x_yz = buffer_ffpd[1480];

    auto g_yzz_xxz_x_zz = buffer_ffpd[1481];

    auto g_yzz_xxz_y_xx = buffer_ffpd[1482];

    auto g_yzz_xxz_y_xy = buffer_ffpd[1483];

    auto g_yzz_xxz_y_xz = buffer_ffpd[1484];

    auto g_yzz_xxz_y_yy = buffer_ffpd[1485];

    auto g_yzz_xxz_y_yz = buffer_ffpd[1486];

    auto g_yzz_xxz_y_zz = buffer_ffpd[1487];

    auto g_yzz_xxz_z_xx = buffer_ffpd[1488];

    auto g_yzz_xxz_z_xy = buffer_ffpd[1489];

    auto g_yzz_xxz_z_xz = buffer_ffpd[1490];

    auto g_yzz_xxz_z_yy = buffer_ffpd[1491];

    auto g_yzz_xxz_z_yz = buffer_ffpd[1492];

    auto g_yzz_xxz_z_zz = buffer_ffpd[1493];

    auto g_yzz_xyy_x_xx = buffer_ffpd[1494];

    auto g_yzz_xyy_x_xy = buffer_ffpd[1495];

    auto g_yzz_xyy_x_xz = buffer_ffpd[1496];

    auto g_yzz_xyy_x_yy = buffer_ffpd[1497];

    auto g_yzz_xyy_x_yz = buffer_ffpd[1498];

    auto g_yzz_xyy_x_zz = buffer_ffpd[1499];

    auto g_yzz_xyy_y_xx = buffer_ffpd[1500];

    auto g_yzz_xyy_y_xy = buffer_ffpd[1501];

    auto g_yzz_xyy_y_xz = buffer_ffpd[1502];

    auto g_yzz_xyy_y_yy = buffer_ffpd[1503];

    auto g_yzz_xyy_y_yz = buffer_ffpd[1504];

    auto g_yzz_xyy_y_zz = buffer_ffpd[1505];

    auto g_yzz_xyy_z_xx = buffer_ffpd[1506];

    auto g_yzz_xyy_z_xy = buffer_ffpd[1507];

    auto g_yzz_xyy_z_xz = buffer_ffpd[1508];

    auto g_yzz_xyy_z_yy = buffer_ffpd[1509];

    auto g_yzz_xyy_z_yz = buffer_ffpd[1510];

    auto g_yzz_xyy_z_zz = buffer_ffpd[1511];

    auto g_yzz_xyz_x_xx = buffer_ffpd[1512];

    auto g_yzz_xyz_x_xy = buffer_ffpd[1513];

    auto g_yzz_xyz_x_xz = buffer_ffpd[1514];

    auto g_yzz_xyz_x_yy = buffer_ffpd[1515];

    auto g_yzz_xyz_x_yz = buffer_ffpd[1516];

    auto g_yzz_xyz_x_zz = buffer_ffpd[1517];

    auto g_yzz_xyz_y_xx = buffer_ffpd[1518];

    auto g_yzz_xyz_y_xy = buffer_ffpd[1519];

    auto g_yzz_xyz_y_xz = buffer_ffpd[1520];

    auto g_yzz_xyz_y_yy = buffer_ffpd[1521];

    auto g_yzz_xyz_y_yz = buffer_ffpd[1522];

    auto g_yzz_xyz_y_zz = buffer_ffpd[1523];

    auto g_yzz_xyz_z_xx = buffer_ffpd[1524];

    auto g_yzz_xyz_z_xy = buffer_ffpd[1525];

    auto g_yzz_xyz_z_xz = buffer_ffpd[1526];

    auto g_yzz_xyz_z_yy = buffer_ffpd[1527];

    auto g_yzz_xyz_z_yz = buffer_ffpd[1528];

    auto g_yzz_xyz_z_zz = buffer_ffpd[1529];

    auto g_yzz_xzz_x_xx = buffer_ffpd[1530];

    auto g_yzz_xzz_x_xy = buffer_ffpd[1531];

    auto g_yzz_xzz_x_xz = buffer_ffpd[1532];

    auto g_yzz_xzz_x_yy = buffer_ffpd[1533];

    auto g_yzz_xzz_x_yz = buffer_ffpd[1534];

    auto g_yzz_xzz_x_zz = buffer_ffpd[1535];

    auto g_yzz_xzz_y_xx = buffer_ffpd[1536];

    auto g_yzz_xzz_y_xy = buffer_ffpd[1537];

    auto g_yzz_xzz_y_xz = buffer_ffpd[1538];

    auto g_yzz_xzz_y_yy = buffer_ffpd[1539];

    auto g_yzz_xzz_y_yz = buffer_ffpd[1540];

    auto g_yzz_xzz_y_zz = buffer_ffpd[1541];

    auto g_yzz_xzz_z_xx = buffer_ffpd[1542];

    auto g_yzz_xzz_z_xy = buffer_ffpd[1543];

    auto g_yzz_xzz_z_xz = buffer_ffpd[1544];

    auto g_yzz_xzz_z_yy = buffer_ffpd[1545];

    auto g_yzz_xzz_z_yz = buffer_ffpd[1546];

    auto g_yzz_xzz_z_zz = buffer_ffpd[1547];

    auto g_yzz_yyy_x_xx = buffer_ffpd[1548];

    auto g_yzz_yyy_x_xy = buffer_ffpd[1549];

    auto g_yzz_yyy_x_xz = buffer_ffpd[1550];

    auto g_yzz_yyy_x_yy = buffer_ffpd[1551];

    auto g_yzz_yyy_x_yz = buffer_ffpd[1552];

    auto g_yzz_yyy_x_zz = buffer_ffpd[1553];

    auto g_yzz_yyy_y_xx = buffer_ffpd[1554];

    auto g_yzz_yyy_y_xy = buffer_ffpd[1555];

    auto g_yzz_yyy_y_xz = buffer_ffpd[1556];

    auto g_yzz_yyy_y_yy = buffer_ffpd[1557];

    auto g_yzz_yyy_y_yz = buffer_ffpd[1558];

    auto g_yzz_yyy_y_zz = buffer_ffpd[1559];

    auto g_yzz_yyy_z_xx = buffer_ffpd[1560];

    auto g_yzz_yyy_z_xy = buffer_ffpd[1561];

    auto g_yzz_yyy_z_xz = buffer_ffpd[1562];

    auto g_yzz_yyy_z_yy = buffer_ffpd[1563];

    auto g_yzz_yyy_z_yz = buffer_ffpd[1564];

    auto g_yzz_yyy_z_zz = buffer_ffpd[1565];

    auto g_yzz_yyz_x_xx = buffer_ffpd[1566];

    auto g_yzz_yyz_x_xy = buffer_ffpd[1567];

    auto g_yzz_yyz_x_xz = buffer_ffpd[1568];

    auto g_yzz_yyz_x_yy = buffer_ffpd[1569];

    auto g_yzz_yyz_x_yz = buffer_ffpd[1570];

    auto g_yzz_yyz_x_zz = buffer_ffpd[1571];

    auto g_yzz_yyz_y_xx = buffer_ffpd[1572];

    auto g_yzz_yyz_y_xy = buffer_ffpd[1573];

    auto g_yzz_yyz_y_xz = buffer_ffpd[1574];

    auto g_yzz_yyz_y_yy = buffer_ffpd[1575];

    auto g_yzz_yyz_y_yz = buffer_ffpd[1576];

    auto g_yzz_yyz_y_zz = buffer_ffpd[1577];

    auto g_yzz_yyz_z_xx = buffer_ffpd[1578];

    auto g_yzz_yyz_z_xy = buffer_ffpd[1579];

    auto g_yzz_yyz_z_xz = buffer_ffpd[1580];

    auto g_yzz_yyz_z_yy = buffer_ffpd[1581];

    auto g_yzz_yyz_z_yz = buffer_ffpd[1582];

    auto g_yzz_yyz_z_zz = buffer_ffpd[1583];

    auto g_yzz_yzz_x_xx = buffer_ffpd[1584];

    auto g_yzz_yzz_x_xy = buffer_ffpd[1585];

    auto g_yzz_yzz_x_xz = buffer_ffpd[1586];

    auto g_yzz_yzz_x_yy = buffer_ffpd[1587];

    auto g_yzz_yzz_x_yz = buffer_ffpd[1588];

    auto g_yzz_yzz_x_zz = buffer_ffpd[1589];

    auto g_yzz_yzz_y_xx = buffer_ffpd[1590];

    auto g_yzz_yzz_y_xy = buffer_ffpd[1591];

    auto g_yzz_yzz_y_xz = buffer_ffpd[1592];

    auto g_yzz_yzz_y_yy = buffer_ffpd[1593];

    auto g_yzz_yzz_y_yz = buffer_ffpd[1594];

    auto g_yzz_yzz_y_zz = buffer_ffpd[1595];

    auto g_yzz_yzz_z_xx = buffer_ffpd[1596];

    auto g_yzz_yzz_z_xy = buffer_ffpd[1597];

    auto g_yzz_yzz_z_xz = buffer_ffpd[1598];

    auto g_yzz_yzz_z_yy = buffer_ffpd[1599];

    auto g_yzz_yzz_z_yz = buffer_ffpd[1600];

    auto g_yzz_yzz_z_zz = buffer_ffpd[1601];

    auto g_yzz_zzz_x_xx = buffer_ffpd[1602];

    auto g_yzz_zzz_x_xy = buffer_ffpd[1603];

    auto g_yzz_zzz_x_xz = buffer_ffpd[1604];

    auto g_yzz_zzz_x_yy = buffer_ffpd[1605];

    auto g_yzz_zzz_x_yz = buffer_ffpd[1606];

    auto g_yzz_zzz_x_zz = buffer_ffpd[1607];

    auto g_yzz_zzz_y_xx = buffer_ffpd[1608];

    auto g_yzz_zzz_y_xy = buffer_ffpd[1609];

    auto g_yzz_zzz_y_xz = buffer_ffpd[1610];

    auto g_yzz_zzz_y_yy = buffer_ffpd[1611];

    auto g_yzz_zzz_y_yz = buffer_ffpd[1612];

    auto g_yzz_zzz_y_zz = buffer_ffpd[1613];

    auto g_yzz_zzz_z_xx = buffer_ffpd[1614];

    auto g_yzz_zzz_z_xy = buffer_ffpd[1615];

    auto g_yzz_zzz_z_xz = buffer_ffpd[1616];

    auto g_yzz_zzz_z_yy = buffer_ffpd[1617];

    auto g_yzz_zzz_z_yz = buffer_ffpd[1618];

    auto g_yzz_zzz_z_zz = buffer_ffpd[1619];

    auto g_zzz_xxx_x_xx = buffer_ffpd[1620];

    auto g_zzz_xxx_x_xy = buffer_ffpd[1621];

    auto g_zzz_xxx_x_xz = buffer_ffpd[1622];

    auto g_zzz_xxx_x_yy = buffer_ffpd[1623];

    auto g_zzz_xxx_x_yz = buffer_ffpd[1624];

    auto g_zzz_xxx_x_zz = buffer_ffpd[1625];

    auto g_zzz_xxx_y_xx = buffer_ffpd[1626];

    auto g_zzz_xxx_y_xy = buffer_ffpd[1627];

    auto g_zzz_xxx_y_xz = buffer_ffpd[1628];

    auto g_zzz_xxx_y_yy = buffer_ffpd[1629];

    auto g_zzz_xxx_y_yz = buffer_ffpd[1630];

    auto g_zzz_xxx_y_zz = buffer_ffpd[1631];

    auto g_zzz_xxx_z_xx = buffer_ffpd[1632];

    auto g_zzz_xxx_z_xy = buffer_ffpd[1633];

    auto g_zzz_xxx_z_xz = buffer_ffpd[1634];

    auto g_zzz_xxx_z_yy = buffer_ffpd[1635];

    auto g_zzz_xxx_z_yz = buffer_ffpd[1636];

    auto g_zzz_xxx_z_zz = buffer_ffpd[1637];

    auto g_zzz_xxy_x_xx = buffer_ffpd[1638];

    auto g_zzz_xxy_x_xy = buffer_ffpd[1639];

    auto g_zzz_xxy_x_xz = buffer_ffpd[1640];

    auto g_zzz_xxy_x_yy = buffer_ffpd[1641];

    auto g_zzz_xxy_x_yz = buffer_ffpd[1642];

    auto g_zzz_xxy_x_zz = buffer_ffpd[1643];

    auto g_zzz_xxy_y_xx = buffer_ffpd[1644];

    auto g_zzz_xxy_y_xy = buffer_ffpd[1645];

    auto g_zzz_xxy_y_xz = buffer_ffpd[1646];

    auto g_zzz_xxy_y_yy = buffer_ffpd[1647];

    auto g_zzz_xxy_y_yz = buffer_ffpd[1648];

    auto g_zzz_xxy_y_zz = buffer_ffpd[1649];

    auto g_zzz_xxy_z_xx = buffer_ffpd[1650];

    auto g_zzz_xxy_z_xy = buffer_ffpd[1651];

    auto g_zzz_xxy_z_xz = buffer_ffpd[1652];

    auto g_zzz_xxy_z_yy = buffer_ffpd[1653];

    auto g_zzz_xxy_z_yz = buffer_ffpd[1654];

    auto g_zzz_xxy_z_zz = buffer_ffpd[1655];

    auto g_zzz_xxz_x_xx = buffer_ffpd[1656];

    auto g_zzz_xxz_x_xy = buffer_ffpd[1657];

    auto g_zzz_xxz_x_xz = buffer_ffpd[1658];

    auto g_zzz_xxz_x_yy = buffer_ffpd[1659];

    auto g_zzz_xxz_x_yz = buffer_ffpd[1660];

    auto g_zzz_xxz_x_zz = buffer_ffpd[1661];

    auto g_zzz_xxz_y_xx = buffer_ffpd[1662];

    auto g_zzz_xxz_y_xy = buffer_ffpd[1663];

    auto g_zzz_xxz_y_xz = buffer_ffpd[1664];

    auto g_zzz_xxz_y_yy = buffer_ffpd[1665];

    auto g_zzz_xxz_y_yz = buffer_ffpd[1666];

    auto g_zzz_xxz_y_zz = buffer_ffpd[1667];

    auto g_zzz_xxz_z_xx = buffer_ffpd[1668];

    auto g_zzz_xxz_z_xy = buffer_ffpd[1669];

    auto g_zzz_xxz_z_xz = buffer_ffpd[1670];

    auto g_zzz_xxz_z_yy = buffer_ffpd[1671];

    auto g_zzz_xxz_z_yz = buffer_ffpd[1672];

    auto g_zzz_xxz_z_zz = buffer_ffpd[1673];

    auto g_zzz_xyy_x_xx = buffer_ffpd[1674];

    auto g_zzz_xyy_x_xy = buffer_ffpd[1675];

    auto g_zzz_xyy_x_xz = buffer_ffpd[1676];

    auto g_zzz_xyy_x_yy = buffer_ffpd[1677];

    auto g_zzz_xyy_x_yz = buffer_ffpd[1678];

    auto g_zzz_xyy_x_zz = buffer_ffpd[1679];

    auto g_zzz_xyy_y_xx = buffer_ffpd[1680];

    auto g_zzz_xyy_y_xy = buffer_ffpd[1681];

    auto g_zzz_xyy_y_xz = buffer_ffpd[1682];

    auto g_zzz_xyy_y_yy = buffer_ffpd[1683];

    auto g_zzz_xyy_y_yz = buffer_ffpd[1684];

    auto g_zzz_xyy_y_zz = buffer_ffpd[1685];

    auto g_zzz_xyy_z_xx = buffer_ffpd[1686];

    auto g_zzz_xyy_z_xy = buffer_ffpd[1687];

    auto g_zzz_xyy_z_xz = buffer_ffpd[1688];

    auto g_zzz_xyy_z_yy = buffer_ffpd[1689];

    auto g_zzz_xyy_z_yz = buffer_ffpd[1690];

    auto g_zzz_xyy_z_zz = buffer_ffpd[1691];

    auto g_zzz_xyz_x_xx = buffer_ffpd[1692];

    auto g_zzz_xyz_x_xy = buffer_ffpd[1693];

    auto g_zzz_xyz_x_xz = buffer_ffpd[1694];

    auto g_zzz_xyz_x_yy = buffer_ffpd[1695];

    auto g_zzz_xyz_x_yz = buffer_ffpd[1696];

    auto g_zzz_xyz_x_zz = buffer_ffpd[1697];

    auto g_zzz_xyz_y_xx = buffer_ffpd[1698];

    auto g_zzz_xyz_y_xy = buffer_ffpd[1699];

    auto g_zzz_xyz_y_xz = buffer_ffpd[1700];

    auto g_zzz_xyz_y_yy = buffer_ffpd[1701];

    auto g_zzz_xyz_y_yz = buffer_ffpd[1702];

    auto g_zzz_xyz_y_zz = buffer_ffpd[1703];

    auto g_zzz_xyz_z_xx = buffer_ffpd[1704];

    auto g_zzz_xyz_z_xy = buffer_ffpd[1705];

    auto g_zzz_xyz_z_xz = buffer_ffpd[1706];

    auto g_zzz_xyz_z_yy = buffer_ffpd[1707];

    auto g_zzz_xyz_z_yz = buffer_ffpd[1708];

    auto g_zzz_xyz_z_zz = buffer_ffpd[1709];

    auto g_zzz_xzz_x_xx = buffer_ffpd[1710];

    auto g_zzz_xzz_x_xy = buffer_ffpd[1711];

    auto g_zzz_xzz_x_xz = buffer_ffpd[1712];

    auto g_zzz_xzz_x_yy = buffer_ffpd[1713];

    auto g_zzz_xzz_x_yz = buffer_ffpd[1714];

    auto g_zzz_xzz_x_zz = buffer_ffpd[1715];

    auto g_zzz_xzz_y_xx = buffer_ffpd[1716];

    auto g_zzz_xzz_y_xy = buffer_ffpd[1717];

    auto g_zzz_xzz_y_xz = buffer_ffpd[1718];

    auto g_zzz_xzz_y_yy = buffer_ffpd[1719];

    auto g_zzz_xzz_y_yz = buffer_ffpd[1720];

    auto g_zzz_xzz_y_zz = buffer_ffpd[1721];

    auto g_zzz_xzz_z_xx = buffer_ffpd[1722];

    auto g_zzz_xzz_z_xy = buffer_ffpd[1723];

    auto g_zzz_xzz_z_xz = buffer_ffpd[1724];

    auto g_zzz_xzz_z_yy = buffer_ffpd[1725];

    auto g_zzz_xzz_z_yz = buffer_ffpd[1726];

    auto g_zzz_xzz_z_zz = buffer_ffpd[1727];

    auto g_zzz_yyy_x_xx = buffer_ffpd[1728];

    auto g_zzz_yyy_x_xy = buffer_ffpd[1729];

    auto g_zzz_yyy_x_xz = buffer_ffpd[1730];

    auto g_zzz_yyy_x_yy = buffer_ffpd[1731];

    auto g_zzz_yyy_x_yz = buffer_ffpd[1732];

    auto g_zzz_yyy_x_zz = buffer_ffpd[1733];

    auto g_zzz_yyy_y_xx = buffer_ffpd[1734];

    auto g_zzz_yyy_y_xy = buffer_ffpd[1735];

    auto g_zzz_yyy_y_xz = buffer_ffpd[1736];

    auto g_zzz_yyy_y_yy = buffer_ffpd[1737];

    auto g_zzz_yyy_y_yz = buffer_ffpd[1738];

    auto g_zzz_yyy_y_zz = buffer_ffpd[1739];

    auto g_zzz_yyy_z_xx = buffer_ffpd[1740];

    auto g_zzz_yyy_z_xy = buffer_ffpd[1741];

    auto g_zzz_yyy_z_xz = buffer_ffpd[1742];

    auto g_zzz_yyy_z_yy = buffer_ffpd[1743];

    auto g_zzz_yyy_z_yz = buffer_ffpd[1744];

    auto g_zzz_yyy_z_zz = buffer_ffpd[1745];

    auto g_zzz_yyz_x_xx = buffer_ffpd[1746];

    auto g_zzz_yyz_x_xy = buffer_ffpd[1747];

    auto g_zzz_yyz_x_xz = buffer_ffpd[1748];

    auto g_zzz_yyz_x_yy = buffer_ffpd[1749];

    auto g_zzz_yyz_x_yz = buffer_ffpd[1750];

    auto g_zzz_yyz_x_zz = buffer_ffpd[1751];

    auto g_zzz_yyz_y_xx = buffer_ffpd[1752];

    auto g_zzz_yyz_y_xy = buffer_ffpd[1753];

    auto g_zzz_yyz_y_xz = buffer_ffpd[1754];

    auto g_zzz_yyz_y_yy = buffer_ffpd[1755];

    auto g_zzz_yyz_y_yz = buffer_ffpd[1756];

    auto g_zzz_yyz_y_zz = buffer_ffpd[1757];

    auto g_zzz_yyz_z_xx = buffer_ffpd[1758];

    auto g_zzz_yyz_z_xy = buffer_ffpd[1759];

    auto g_zzz_yyz_z_xz = buffer_ffpd[1760];

    auto g_zzz_yyz_z_yy = buffer_ffpd[1761];

    auto g_zzz_yyz_z_yz = buffer_ffpd[1762];

    auto g_zzz_yyz_z_zz = buffer_ffpd[1763];

    auto g_zzz_yzz_x_xx = buffer_ffpd[1764];

    auto g_zzz_yzz_x_xy = buffer_ffpd[1765];

    auto g_zzz_yzz_x_xz = buffer_ffpd[1766];

    auto g_zzz_yzz_x_yy = buffer_ffpd[1767];

    auto g_zzz_yzz_x_yz = buffer_ffpd[1768];

    auto g_zzz_yzz_x_zz = buffer_ffpd[1769];

    auto g_zzz_yzz_y_xx = buffer_ffpd[1770];

    auto g_zzz_yzz_y_xy = buffer_ffpd[1771];

    auto g_zzz_yzz_y_xz = buffer_ffpd[1772];

    auto g_zzz_yzz_y_yy = buffer_ffpd[1773];

    auto g_zzz_yzz_y_yz = buffer_ffpd[1774];

    auto g_zzz_yzz_y_zz = buffer_ffpd[1775];

    auto g_zzz_yzz_z_xx = buffer_ffpd[1776];

    auto g_zzz_yzz_z_xy = buffer_ffpd[1777];

    auto g_zzz_yzz_z_xz = buffer_ffpd[1778];

    auto g_zzz_yzz_z_yy = buffer_ffpd[1779];

    auto g_zzz_yzz_z_yz = buffer_ffpd[1780];

    auto g_zzz_yzz_z_zz = buffer_ffpd[1781];

    auto g_zzz_zzz_x_xx = buffer_ffpd[1782];

    auto g_zzz_zzz_x_xy = buffer_ffpd[1783];

    auto g_zzz_zzz_x_xz = buffer_ffpd[1784];

    auto g_zzz_zzz_x_yy = buffer_ffpd[1785];

    auto g_zzz_zzz_x_yz = buffer_ffpd[1786];

    auto g_zzz_zzz_x_zz = buffer_ffpd[1787];

    auto g_zzz_zzz_y_xx = buffer_ffpd[1788];

    auto g_zzz_zzz_y_xy = buffer_ffpd[1789];

    auto g_zzz_zzz_y_xz = buffer_ffpd[1790];

    auto g_zzz_zzz_y_yy = buffer_ffpd[1791];

    auto g_zzz_zzz_y_yz = buffer_ffpd[1792];

    auto g_zzz_zzz_y_zz = buffer_ffpd[1793];

    auto g_zzz_zzz_z_xx = buffer_ffpd[1794];

    auto g_zzz_zzz_z_xy = buffer_ffpd[1795];

    auto g_zzz_zzz_z_xz = buffer_ffpd[1796];

    auto g_zzz_zzz_z_yy = buffer_ffpd[1797];

    auto g_zzz_zzz_z_yz = buffer_ffpd[1798];

    auto g_zzz_zzz_z_zz = buffer_ffpd[1799];

    /// Set up components of integrals buffer : buffer_1100_ddpd

    auto g_x_x_0_0_xx_xx_x_xx = buffer_1100_ddpd[0];

    auto g_x_x_0_0_xx_xx_x_xy = buffer_1100_ddpd[1];

    auto g_x_x_0_0_xx_xx_x_xz = buffer_1100_ddpd[2];

    auto g_x_x_0_0_xx_xx_x_yy = buffer_1100_ddpd[3];

    auto g_x_x_0_0_xx_xx_x_yz = buffer_1100_ddpd[4];

    auto g_x_x_0_0_xx_xx_x_zz = buffer_1100_ddpd[5];

    auto g_x_x_0_0_xx_xx_y_xx = buffer_1100_ddpd[6];

    auto g_x_x_0_0_xx_xx_y_xy = buffer_1100_ddpd[7];

    auto g_x_x_0_0_xx_xx_y_xz = buffer_1100_ddpd[8];

    auto g_x_x_0_0_xx_xx_y_yy = buffer_1100_ddpd[9];

    auto g_x_x_0_0_xx_xx_y_yz = buffer_1100_ddpd[10];

    auto g_x_x_0_0_xx_xx_y_zz = buffer_1100_ddpd[11];

    auto g_x_x_0_0_xx_xx_z_xx = buffer_1100_ddpd[12];

    auto g_x_x_0_0_xx_xx_z_xy = buffer_1100_ddpd[13];

    auto g_x_x_0_0_xx_xx_z_xz = buffer_1100_ddpd[14];

    auto g_x_x_0_0_xx_xx_z_yy = buffer_1100_ddpd[15];

    auto g_x_x_0_0_xx_xx_z_yz = buffer_1100_ddpd[16];

    auto g_x_x_0_0_xx_xx_z_zz = buffer_1100_ddpd[17];

    auto g_x_x_0_0_xx_xy_x_xx = buffer_1100_ddpd[18];

    auto g_x_x_0_0_xx_xy_x_xy = buffer_1100_ddpd[19];

    auto g_x_x_0_0_xx_xy_x_xz = buffer_1100_ddpd[20];

    auto g_x_x_0_0_xx_xy_x_yy = buffer_1100_ddpd[21];

    auto g_x_x_0_0_xx_xy_x_yz = buffer_1100_ddpd[22];

    auto g_x_x_0_0_xx_xy_x_zz = buffer_1100_ddpd[23];

    auto g_x_x_0_0_xx_xy_y_xx = buffer_1100_ddpd[24];

    auto g_x_x_0_0_xx_xy_y_xy = buffer_1100_ddpd[25];

    auto g_x_x_0_0_xx_xy_y_xz = buffer_1100_ddpd[26];

    auto g_x_x_0_0_xx_xy_y_yy = buffer_1100_ddpd[27];

    auto g_x_x_0_0_xx_xy_y_yz = buffer_1100_ddpd[28];

    auto g_x_x_0_0_xx_xy_y_zz = buffer_1100_ddpd[29];

    auto g_x_x_0_0_xx_xy_z_xx = buffer_1100_ddpd[30];

    auto g_x_x_0_0_xx_xy_z_xy = buffer_1100_ddpd[31];

    auto g_x_x_0_0_xx_xy_z_xz = buffer_1100_ddpd[32];

    auto g_x_x_0_0_xx_xy_z_yy = buffer_1100_ddpd[33];

    auto g_x_x_0_0_xx_xy_z_yz = buffer_1100_ddpd[34];

    auto g_x_x_0_0_xx_xy_z_zz = buffer_1100_ddpd[35];

    auto g_x_x_0_0_xx_xz_x_xx = buffer_1100_ddpd[36];

    auto g_x_x_0_0_xx_xz_x_xy = buffer_1100_ddpd[37];

    auto g_x_x_0_0_xx_xz_x_xz = buffer_1100_ddpd[38];

    auto g_x_x_0_0_xx_xz_x_yy = buffer_1100_ddpd[39];

    auto g_x_x_0_0_xx_xz_x_yz = buffer_1100_ddpd[40];

    auto g_x_x_0_0_xx_xz_x_zz = buffer_1100_ddpd[41];

    auto g_x_x_0_0_xx_xz_y_xx = buffer_1100_ddpd[42];

    auto g_x_x_0_0_xx_xz_y_xy = buffer_1100_ddpd[43];

    auto g_x_x_0_0_xx_xz_y_xz = buffer_1100_ddpd[44];

    auto g_x_x_0_0_xx_xz_y_yy = buffer_1100_ddpd[45];

    auto g_x_x_0_0_xx_xz_y_yz = buffer_1100_ddpd[46];

    auto g_x_x_0_0_xx_xz_y_zz = buffer_1100_ddpd[47];

    auto g_x_x_0_0_xx_xz_z_xx = buffer_1100_ddpd[48];

    auto g_x_x_0_0_xx_xz_z_xy = buffer_1100_ddpd[49];

    auto g_x_x_0_0_xx_xz_z_xz = buffer_1100_ddpd[50];

    auto g_x_x_0_0_xx_xz_z_yy = buffer_1100_ddpd[51];

    auto g_x_x_0_0_xx_xz_z_yz = buffer_1100_ddpd[52];

    auto g_x_x_0_0_xx_xz_z_zz = buffer_1100_ddpd[53];

    auto g_x_x_0_0_xx_yy_x_xx = buffer_1100_ddpd[54];

    auto g_x_x_0_0_xx_yy_x_xy = buffer_1100_ddpd[55];

    auto g_x_x_0_0_xx_yy_x_xz = buffer_1100_ddpd[56];

    auto g_x_x_0_0_xx_yy_x_yy = buffer_1100_ddpd[57];

    auto g_x_x_0_0_xx_yy_x_yz = buffer_1100_ddpd[58];

    auto g_x_x_0_0_xx_yy_x_zz = buffer_1100_ddpd[59];

    auto g_x_x_0_0_xx_yy_y_xx = buffer_1100_ddpd[60];

    auto g_x_x_0_0_xx_yy_y_xy = buffer_1100_ddpd[61];

    auto g_x_x_0_0_xx_yy_y_xz = buffer_1100_ddpd[62];

    auto g_x_x_0_0_xx_yy_y_yy = buffer_1100_ddpd[63];

    auto g_x_x_0_0_xx_yy_y_yz = buffer_1100_ddpd[64];

    auto g_x_x_0_0_xx_yy_y_zz = buffer_1100_ddpd[65];

    auto g_x_x_0_0_xx_yy_z_xx = buffer_1100_ddpd[66];

    auto g_x_x_0_0_xx_yy_z_xy = buffer_1100_ddpd[67];

    auto g_x_x_0_0_xx_yy_z_xz = buffer_1100_ddpd[68];

    auto g_x_x_0_0_xx_yy_z_yy = buffer_1100_ddpd[69];

    auto g_x_x_0_0_xx_yy_z_yz = buffer_1100_ddpd[70];

    auto g_x_x_0_0_xx_yy_z_zz = buffer_1100_ddpd[71];

    auto g_x_x_0_0_xx_yz_x_xx = buffer_1100_ddpd[72];

    auto g_x_x_0_0_xx_yz_x_xy = buffer_1100_ddpd[73];

    auto g_x_x_0_0_xx_yz_x_xz = buffer_1100_ddpd[74];

    auto g_x_x_0_0_xx_yz_x_yy = buffer_1100_ddpd[75];

    auto g_x_x_0_0_xx_yz_x_yz = buffer_1100_ddpd[76];

    auto g_x_x_0_0_xx_yz_x_zz = buffer_1100_ddpd[77];

    auto g_x_x_0_0_xx_yz_y_xx = buffer_1100_ddpd[78];

    auto g_x_x_0_0_xx_yz_y_xy = buffer_1100_ddpd[79];

    auto g_x_x_0_0_xx_yz_y_xz = buffer_1100_ddpd[80];

    auto g_x_x_0_0_xx_yz_y_yy = buffer_1100_ddpd[81];

    auto g_x_x_0_0_xx_yz_y_yz = buffer_1100_ddpd[82];

    auto g_x_x_0_0_xx_yz_y_zz = buffer_1100_ddpd[83];

    auto g_x_x_0_0_xx_yz_z_xx = buffer_1100_ddpd[84];

    auto g_x_x_0_0_xx_yz_z_xy = buffer_1100_ddpd[85];

    auto g_x_x_0_0_xx_yz_z_xz = buffer_1100_ddpd[86];

    auto g_x_x_0_0_xx_yz_z_yy = buffer_1100_ddpd[87];

    auto g_x_x_0_0_xx_yz_z_yz = buffer_1100_ddpd[88];

    auto g_x_x_0_0_xx_yz_z_zz = buffer_1100_ddpd[89];

    auto g_x_x_0_0_xx_zz_x_xx = buffer_1100_ddpd[90];

    auto g_x_x_0_0_xx_zz_x_xy = buffer_1100_ddpd[91];

    auto g_x_x_0_0_xx_zz_x_xz = buffer_1100_ddpd[92];

    auto g_x_x_0_0_xx_zz_x_yy = buffer_1100_ddpd[93];

    auto g_x_x_0_0_xx_zz_x_yz = buffer_1100_ddpd[94];

    auto g_x_x_0_0_xx_zz_x_zz = buffer_1100_ddpd[95];

    auto g_x_x_0_0_xx_zz_y_xx = buffer_1100_ddpd[96];

    auto g_x_x_0_0_xx_zz_y_xy = buffer_1100_ddpd[97];

    auto g_x_x_0_0_xx_zz_y_xz = buffer_1100_ddpd[98];

    auto g_x_x_0_0_xx_zz_y_yy = buffer_1100_ddpd[99];

    auto g_x_x_0_0_xx_zz_y_yz = buffer_1100_ddpd[100];

    auto g_x_x_0_0_xx_zz_y_zz = buffer_1100_ddpd[101];

    auto g_x_x_0_0_xx_zz_z_xx = buffer_1100_ddpd[102];

    auto g_x_x_0_0_xx_zz_z_xy = buffer_1100_ddpd[103];

    auto g_x_x_0_0_xx_zz_z_xz = buffer_1100_ddpd[104];

    auto g_x_x_0_0_xx_zz_z_yy = buffer_1100_ddpd[105];

    auto g_x_x_0_0_xx_zz_z_yz = buffer_1100_ddpd[106];

    auto g_x_x_0_0_xx_zz_z_zz = buffer_1100_ddpd[107];

    auto g_x_x_0_0_xy_xx_x_xx = buffer_1100_ddpd[108];

    auto g_x_x_0_0_xy_xx_x_xy = buffer_1100_ddpd[109];

    auto g_x_x_0_0_xy_xx_x_xz = buffer_1100_ddpd[110];

    auto g_x_x_0_0_xy_xx_x_yy = buffer_1100_ddpd[111];

    auto g_x_x_0_0_xy_xx_x_yz = buffer_1100_ddpd[112];

    auto g_x_x_0_0_xy_xx_x_zz = buffer_1100_ddpd[113];

    auto g_x_x_0_0_xy_xx_y_xx = buffer_1100_ddpd[114];

    auto g_x_x_0_0_xy_xx_y_xy = buffer_1100_ddpd[115];

    auto g_x_x_0_0_xy_xx_y_xz = buffer_1100_ddpd[116];

    auto g_x_x_0_0_xy_xx_y_yy = buffer_1100_ddpd[117];

    auto g_x_x_0_0_xy_xx_y_yz = buffer_1100_ddpd[118];

    auto g_x_x_0_0_xy_xx_y_zz = buffer_1100_ddpd[119];

    auto g_x_x_0_0_xy_xx_z_xx = buffer_1100_ddpd[120];

    auto g_x_x_0_0_xy_xx_z_xy = buffer_1100_ddpd[121];

    auto g_x_x_0_0_xy_xx_z_xz = buffer_1100_ddpd[122];

    auto g_x_x_0_0_xy_xx_z_yy = buffer_1100_ddpd[123];

    auto g_x_x_0_0_xy_xx_z_yz = buffer_1100_ddpd[124];

    auto g_x_x_0_0_xy_xx_z_zz = buffer_1100_ddpd[125];

    auto g_x_x_0_0_xy_xy_x_xx = buffer_1100_ddpd[126];

    auto g_x_x_0_0_xy_xy_x_xy = buffer_1100_ddpd[127];

    auto g_x_x_0_0_xy_xy_x_xz = buffer_1100_ddpd[128];

    auto g_x_x_0_0_xy_xy_x_yy = buffer_1100_ddpd[129];

    auto g_x_x_0_0_xy_xy_x_yz = buffer_1100_ddpd[130];

    auto g_x_x_0_0_xy_xy_x_zz = buffer_1100_ddpd[131];

    auto g_x_x_0_0_xy_xy_y_xx = buffer_1100_ddpd[132];

    auto g_x_x_0_0_xy_xy_y_xy = buffer_1100_ddpd[133];

    auto g_x_x_0_0_xy_xy_y_xz = buffer_1100_ddpd[134];

    auto g_x_x_0_0_xy_xy_y_yy = buffer_1100_ddpd[135];

    auto g_x_x_0_0_xy_xy_y_yz = buffer_1100_ddpd[136];

    auto g_x_x_0_0_xy_xy_y_zz = buffer_1100_ddpd[137];

    auto g_x_x_0_0_xy_xy_z_xx = buffer_1100_ddpd[138];

    auto g_x_x_0_0_xy_xy_z_xy = buffer_1100_ddpd[139];

    auto g_x_x_0_0_xy_xy_z_xz = buffer_1100_ddpd[140];

    auto g_x_x_0_0_xy_xy_z_yy = buffer_1100_ddpd[141];

    auto g_x_x_0_0_xy_xy_z_yz = buffer_1100_ddpd[142];

    auto g_x_x_0_0_xy_xy_z_zz = buffer_1100_ddpd[143];

    auto g_x_x_0_0_xy_xz_x_xx = buffer_1100_ddpd[144];

    auto g_x_x_0_0_xy_xz_x_xy = buffer_1100_ddpd[145];

    auto g_x_x_0_0_xy_xz_x_xz = buffer_1100_ddpd[146];

    auto g_x_x_0_0_xy_xz_x_yy = buffer_1100_ddpd[147];

    auto g_x_x_0_0_xy_xz_x_yz = buffer_1100_ddpd[148];

    auto g_x_x_0_0_xy_xz_x_zz = buffer_1100_ddpd[149];

    auto g_x_x_0_0_xy_xz_y_xx = buffer_1100_ddpd[150];

    auto g_x_x_0_0_xy_xz_y_xy = buffer_1100_ddpd[151];

    auto g_x_x_0_0_xy_xz_y_xz = buffer_1100_ddpd[152];

    auto g_x_x_0_0_xy_xz_y_yy = buffer_1100_ddpd[153];

    auto g_x_x_0_0_xy_xz_y_yz = buffer_1100_ddpd[154];

    auto g_x_x_0_0_xy_xz_y_zz = buffer_1100_ddpd[155];

    auto g_x_x_0_0_xy_xz_z_xx = buffer_1100_ddpd[156];

    auto g_x_x_0_0_xy_xz_z_xy = buffer_1100_ddpd[157];

    auto g_x_x_0_0_xy_xz_z_xz = buffer_1100_ddpd[158];

    auto g_x_x_0_0_xy_xz_z_yy = buffer_1100_ddpd[159];

    auto g_x_x_0_0_xy_xz_z_yz = buffer_1100_ddpd[160];

    auto g_x_x_0_0_xy_xz_z_zz = buffer_1100_ddpd[161];

    auto g_x_x_0_0_xy_yy_x_xx = buffer_1100_ddpd[162];

    auto g_x_x_0_0_xy_yy_x_xy = buffer_1100_ddpd[163];

    auto g_x_x_0_0_xy_yy_x_xz = buffer_1100_ddpd[164];

    auto g_x_x_0_0_xy_yy_x_yy = buffer_1100_ddpd[165];

    auto g_x_x_0_0_xy_yy_x_yz = buffer_1100_ddpd[166];

    auto g_x_x_0_0_xy_yy_x_zz = buffer_1100_ddpd[167];

    auto g_x_x_0_0_xy_yy_y_xx = buffer_1100_ddpd[168];

    auto g_x_x_0_0_xy_yy_y_xy = buffer_1100_ddpd[169];

    auto g_x_x_0_0_xy_yy_y_xz = buffer_1100_ddpd[170];

    auto g_x_x_0_0_xy_yy_y_yy = buffer_1100_ddpd[171];

    auto g_x_x_0_0_xy_yy_y_yz = buffer_1100_ddpd[172];

    auto g_x_x_0_0_xy_yy_y_zz = buffer_1100_ddpd[173];

    auto g_x_x_0_0_xy_yy_z_xx = buffer_1100_ddpd[174];

    auto g_x_x_0_0_xy_yy_z_xy = buffer_1100_ddpd[175];

    auto g_x_x_0_0_xy_yy_z_xz = buffer_1100_ddpd[176];

    auto g_x_x_0_0_xy_yy_z_yy = buffer_1100_ddpd[177];

    auto g_x_x_0_0_xy_yy_z_yz = buffer_1100_ddpd[178];

    auto g_x_x_0_0_xy_yy_z_zz = buffer_1100_ddpd[179];

    auto g_x_x_0_0_xy_yz_x_xx = buffer_1100_ddpd[180];

    auto g_x_x_0_0_xy_yz_x_xy = buffer_1100_ddpd[181];

    auto g_x_x_0_0_xy_yz_x_xz = buffer_1100_ddpd[182];

    auto g_x_x_0_0_xy_yz_x_yy = buffer_1100_ddpd[183];

    auto g_x_x_0_0_xy_yz_x_yz = buffer_1100_ddpd[184];

    auto g_x_x_0_0_xy_yz_x_zz = buffer_1100_ddpd[185];

    auto g_x_x_0_0_xy_yz_y_xx = buffer_1100_ddpd[186];

    auto g_x_x_0_0_xy_yz_y_xy = buffer_1100_ddpd[187];

    auto g_x_x_0_0_xy_yz_y_xz = buffer_1100_ddpd[188];

    auto g_x_x_0_0_xy_yz_y_yy = buffer_1100_ddpd[189];

    auto g_x_x_0_0_xy_yz_y_yz = buffer_1100_ddpd[190];

    auto g_x_x_0_0_xy_yz_y_zz = buffer_1100_ddpd[191];

    auto g_x_x_0_0_xy_yz_z_xx = buffer_1100_ddpd[192];

    auto g_x_x_0_0_xy_yz_z_xy = buffer_1100_ddpd[193];

    auto g_x_x_0_0_xy_yz_z_xz = buffer_1100_ddpd[194];

    auto g_x_x_0_0_xy_yz_z_yy = buffer_1100_ddpd[195];

    auto g_x_x_0_0_xy_yz_z_yz = buffer_1100_ddpd[196];

    auto g_x_x_0_0_xy_yz_z_zz = buffer_1100_ddpd[197];

    auto g_x_x_0_0_xy_zz_x_xx = buffer_1100_ddpd[198];

    auto g_x_x_0_0_xy_zz_x_xy = buffer_1100_ddpd[199];

    auto g_x_x_0_0_xy_zz_x_xz = buffer_1100_ddpd[200];

    auto g_x_x_0_0_xy_zz_x_yy = buffer_1100_ddpd[201];

    auto g_x_x_0_0_xy_zz_x_yz = buffer_1100_ddpd[202];

    auto g_x_x_0_0_xy_zz_x_zz = buffer_1100_ddpd[203];

    auto g_x_x_0_0_xy_zz_y_xx = buffer_1100_ddpd[204];

    auto g_x_x_0_0_xy_zz_y_xy = buffer_1100_ddpd[205];

    auto g_x_x_0_0_xy_zz_y_xz = buffer_1100_ddpd[206];

    auto g_x_x_0_0_xy_zz_y_yy = buffer_1100_ddpd[207];

    auto g_x_x_0_0_xy_zz_y_yz = buffer_1100_ddpd[208];

    auto g_x_x_0_0_xy_zz_y_zz = buffer_1100_ddpd[209];

    auto g_x_x_0_0_xy_zz_z_xx = buffer_1100_ddpd[210];

    auto g_x_x_0_0_xy_zz_z_xy = buffer_1100_ddpd[211];

    auto g_x_x_0_0_xy_zz_z_xz = buffer_1100_ddpd[212];

    auto g_x_x_0_0_xy_zz_z_yy = buffer_1100_ddpd[213];

    auto g_x_x_0_0_xy_zz_z_yz = buffer_1100_ddpd[214];

    auto g_x_x_0_0_xy_zz_z_zz = buffer_1100_ddpd[215];

    auto g_x_x_0_0_xz_xx_x_xx = buffer_1100_ddpd[216];

    auto g_x_x_0_0_xz_xx_x_xy = buffer_1100_ddpd[217];

    auto g_x_x_0_0_xz_xx_x_xz = buffer_1100_ddpd[218];

    auto g_x_x_0_0_xz_xx_x_yy = buffer_1100_ddpd[219];

    auto g_x_x_0_0_xz_xx_x_yz = buffer_1100_ddpd[220];

    auto g_x_x_0_0_xz_xx_x_zz = buffer_1100_ddpd[221];

    auto g_x_x_0_0_xz_xx_y_xx = buffer_1100_ddpd[222];

    auto g_x_x_0_0_xz_xx_y_xy = buffer_1100_ddpd[223];

    auto g_x_x_0_0_xz_xx_y_xz = buffer_1100_ddpd[224];

    auto g_x_x_0_0_xz_xx_y_yy = buffer_1100_ddpd[225];

    auto g_x_x_0_0_xz_xx_y_yz = buffer_1100_ddpd[226];

    auto g_x_x_0_0_xz_xx_y_zz = buffer_1100_ddpd[227];

    auto g_x_x_0_0_xz_xx_z_xx = buffer_1100_ddpd[228];

    auto g_x_x_0_0_xz_xx_z_xy = buffer_1100_ddpd[229];

    auto g_x_x_0_0_xz_xx_z_xz = buffer_1100_ddpd[230];

    auto g_x_x_0_0_xz_xx_z_yy = buffer_1100_ddpd[231];

    auto g_x_x_0_0_xz_xx_z_yz = buffer_1100_ddpd[232];

    auto g_x_x_0_0_xz_xx_z_zz = buffer_1100_ddpd[233];

    auto g_x_x_0_0_xz_xy_x_xx = buffer_1100_ddpd[234];

    auto g_x_x_0_0_xz_xy_x_xy = buffer_1100_ddpd[235];

    auto g_x_x_0_0_xz_xy_x_xz = buffer_1100_ddpd[236];

    auto g_x_x_0_0_xz_xy_x_yy = buffer_1100_ddpd[237];

    auto g_x_x_0_0_xz_xy_x_yz = buffer_1100_ddpd[238];

    auto g_x_x_0_0_xz_xy_x_zz = buffer_1100_ddpd[239];

    auto g_x_x_0_0_xz_xy_y_xx = buffer_1100_ddpd[240];

    auto g_x_x_0_0_xz_xy_y_xy = buffer_1100_ddpd[241];

    auto g_x_x_0_0_xz_xy_y_xz = buffer_1100_ddpd[242];

    auto g_x_x_0_0_xz_xy_y_yy = buffer_1100_ddpd[243];

    auto g_x_x_0_0_xz_xy_y_yz = buffer_1100_ddpd[244];

    auto g_x_x_0_0_xz_xy_y_zz = buffer_1100_ddpd[245];

    auto g_x_x_0_0_xz_xy_z_xx = buffer_1100_ddpd[246];

    auto g_x_x_0_0_xz_xy_z_xy = buffer_1100_ddpd[247];

    auto g_x_x_0_0_xz_xy_z_xz = buffer_1100_ddpd[248];

    auto g_x_x_0_0_xz_xy_z_yy = buffer_1100_ddpd[249];

    auto g_x_x_0_0_xz_xy_z_yz = buffer_1100_ddpd[250];

    auto g_x_x_0_0_xz_xy_z_zz = buffer_1100_ddpd[251];

    auto g_x_x_0_0_xz_xz_x_xx = buffer_1100_ddpd[252];

    auto g_x_x_0_0_xz_xz_x_xy = buffer_1100_ddpd[253];

    auto g_x_x_0_0_xz_xz_x_xz = buffer_1100_ddpd[254];

    auto g_x_x_0_0_xz_xz_x_yy = buffer_1100_ddpd[255];

    auto g_x_x_0_0_xz_xz_x_yz = buffer_1100_ddpd[256];

    auto g_x_x_0_0_xz_xz_x_zz = buffer_1100_ddpd[257];

    auto g_x_x_0_0_xz_xz_y_xx = buffer_1100_ddpd[258];

    auto g_x_x_0_0_xz_xz_y_xy = buffer_1100_ddpd[259];

    auto g_x_x_0_0_xz_xz_y_xz = buffer_1100_ddpd[260];

    auto g_x_x_0_0_xz_xz_y_yy = buffer_1100_ddpd[261];

    auto g_x_x_0_0_xz_xz_y_yz = buffer_1100_ddpd[262];

    auto g_x_x_0_0_xz_xz_y_zz = buffer_1100_ddpd[263];

    auto g_x_x_0_0_xz_xz_z_xx = buffer_1100_ddpd[264];

    auto g_x_x_0_0_xz_xz_z_xy = buffer_1100_ddpd[265];

    auto g_x_x_0_0_xz_xz_z_xz = buffer_1100_ddpd[266];

    auto g_x_x_0_0_xz_xz_z_yy = buffer_1100_ddpd[267];

    auto g_x_x_0_0_xz_xz_z_yz = buffer_1100_ddpd[268];

    auto g_x_x_0_0_xz_xz_z_zz = buffer_1100_ddpd[269];

    auto g_x_x_0_0_xz_yy_x_xx = buffer_1100_ddpd[270];

    auto g_x_x_0_0_xz_yy_x_xy = buffer_1100_ddpd[271];

    auto g_x_x_0_0_xz_yy_x_xz = buffer_1100_ddpd[272];

    auto g_x_x_0_0_xz_yy_x_yy = buffer_1100_ddpd[273];

    auto g_x_x_0_0_xz_yy_x_yz = buffer_1100_ddpd[274];

    auto g_x_x_0_0_xz_yy_x_zz = buffer_1100_ddpd[275];

    auto g_x_x_0_0_xz_yy_y_xx = buffer_1100_ddpd[276];

    auto g_x_x_0_0_xz_yy_y_xy = buffer_1100_ddpd[277];

    auto g_x_x_0_0_xz_yy_y_xz = buffer_1100_ddpd[278];

    auto g_x_x_0_0_xz_yy_y_yy = buffer_1100_ddpd[279];

    auto g_x_x_0_0_xz_yy_y_yz = buffer_1100_ddpd[280];

    auto g_x_x_0_0_xz_yy_y_zz = buffer_1100_ddpd[281];

    auto g_x_x_0_0_xz_yy_z_xx = buffer_1100_ddpd[282];

    auto g_x_x_0_0_xz_yy_z_xy = buffer_1100_ddpd[283];

    auto g_x_x_0_0_xz_yy_z_xz = buffer_1100_ddpd[284];

    auto g_x_x_0_0_xz_yy_z_yy = buffer_1100_ddpd[285];

    auto g_x_x_0_0_xz_yy_z_yz = buffer_1100_ddpd[286];

    auto g_x_x_0_0_xz_yy_z_zz = buffer_1100_ddpd[287];

    auto g_x_x_0_0_xz_yz_x_xx = buffer_1100_ddpd[288];

    auto g_x_x_0_0_xz_yz_x_xy = buffer_1100_ddpd[289];

    auto g_x_x_0_0_xz_yz_x_xz = buffer_1100_ddpd[290];

    auto g_x_x_0_0_xz_yz_x_yy = buffer_1100_ddpd[291];

    auto g_x_x_0_0_xz_yz_x_yz = buffer_1100_ddpd[292];

    auto g_x_x_0_0_xz_yz_x_zz = buffer_1100_ddpd[293];

    auto g_x_x_0_0_xz_yz_y_xx = buffer_1100_ddpd[294];

    auto g_x_x_0_0_xz_yz_y_xy = buffer_1100_ddpd[295];

    auto g_x_x_0_0_xz_yz_y_xz = buffer_1100_ddpd[296];

    auto g_x_x_0_0_xz_yz_y_yy = buffer_1100_ddpd[297];

    auto g_x_x_0_0_xz_yz_y_yz = buffer_1100_ddpd[298];

    auto g_x_x_0_0_xz_yz_y_zz = buffer_1100_ddpd[299];

    auto g_x_x_0_0_xz_yz_z_xx = buffer_1100_ddpd[300];

    auto g_x_x_0_0_xz_yz_z_xy = buffer_1100_ddpd[301];

    auto g_x_x_0_0_xz_yz_z_xz = buffer_1100_ddpd[302];

    auto g_x_x_0_0_xz_yz_z_yy = buffer_1100_ddpd[303];

    auto g_x_x_0_0_xz_yz_z_yz = buffer_1100_ddpd[304];

    auto g_x_x_0_0_xz_yz_z_zz = buffer_1100_ddpd[305];

    auto g_x_x_0_0_xz_zz_x_xx = buffer_1100_ddpd[306];

    auto g_x_x_0_0_xz_zz_x_xy = buffer_1100_ddpd[307];

    auto g_x_x_0_0_xz_zz_x_xz = buffer_1100_ddpd[308];

    auto g_x_x_0_0_xz_zz_x_yy = buffer_1100_ddpd[309];

    auto g_x_x_0_0_xz_zz_x_yz = buffer_1100_ddpd[310];

    auto g_x_x_0_0_xz_zz_x_zz = buffer_1100_ddpd[311];

    auto g_x_x_0_0_xz_zz_y_xx = buffer_1100_ddpd[312];

    auto g_x_x_0_0_xz_zz_y_xy = buffer_1100_ddpd[313];

    auto g_x_x_0_0_xz_zz_y_xz = buffer_1100_ddpd[314];

    auto g_x_x_0_0_xz_zz_y_yy = buffer_1100_ddpd[315];

    auto g_x_x_0_0_xz_zz_y_yz = buffer_1100_ddpd[316];

    auto g_x_x_0_0_xz_zz_y_zz = buffer_1100_ddpd[317];

    auto g_x_x_0_0_xz_zz_z_xx = buffer_1100_ddpd[318];

    auto g_x_x_0_0_xz_zz_z_xy = buffer_1100_ddpd[319];

    auto g_x_x_0_0_xz_zz_z_xz = buffer_1100_ddpd[320];

    auto g_x_x_0_0_xz_zz_z_yy = buffer_1100_ddpd[321];

    auto g_x_x_0_0_xz_zz_z_yz = buffer_1100_ddpd[322];

    auto g_x_x_0_0_xz_zz_z_zz = buffer_1100_ddpd[323];

    auto g_x_x_0_0_yy_xx_x_xx = buffer_1100_ddpd[324];

    auto g_x_x_0_0_yy_xx_x_xy = buffer_1100_ddpd[325];

    auto g_x_x_0_0_yy_xx_x_xz = buffer_1100_ddpd[326];

    auto g_x_x_0_0_yy_xx_x_yy = buffer_1100_ddpd[327];

    auto g_x_x_0_0_yy_xx_x_yz = buffer_1100_ddpd[328];

    auto g_x_x_0_0_yy_xx_x_zz = buffer_1100_ddpd[329];

    auto g_x_x_0_0_yy_xx_y_xx = buffer_1100_ddpd[330];

    auto g_x_x_0_0_yy_xx_y_xy = buffer_1100_ddpd[331];

    auto g_x_x_0_0_yy_xx_y_xz = buffer_1100_ddpd[332];

    auto g_x_x_0_0_yy_xx_y_yy = buffer_1100_ddpd[333];

    auto g_x_x_0_0_yy_xx_y_yz = buffer_1100_ddpd[334];

    auto g_x_x_0_0_yy_xx_y_zz = buffer_1100_ddpd[335];

    auto g_x_x_0_0_yy_xx_z_xx = buffer_1100_ddpd[336];

    auto g_x_x_0_0_yy_xx_z_xy = buffer_1100_ddpd[337];

    auto g_x_x_0_0_yy_xx_z_xz = buffer_1100_ddpd[338];

    auto g_x_x_0_0_yy_xx_z_yy = buffer_1100_ddpd[339];

    auto g_x_x_0_0_yy_xx_z_yz = buffer_1100_ddpd[340];

    auto g_x_x_0_0_yy_xx_z_zz = buffer_1100_ddpd[341];

    auto g_x_x_0_0_yy_xy_x_xx = buffer_1100_ddpd[342];

    auto g_x_x_0_0_yy_xy_x_xy = buffer_1100_ddpd[343];

    auto g_x_x_0_0_yy_xy_x_xz = buffer_1100_ddpd[344];

    auto g_x_x_0_0_yy_xy_x_yy = buffer_1100_ddpd[345];

    auto g_x_x_0_0_yy_xy_x_yz = buffer_1100_ddpd[346];

    auto g_x_x_0_0_yy_xy_x_zz = buffer_1100_ddpd[347];

    auto g_x_x_0_0_yy_xy_y_xx = buffer_1100_ddpd[348];

    auto g_x_x_0_0_yy_xy_y_xy = buffer_1100_ddpd[349];

    auto g_x_x_0_0_yy_xy_y_xz = buffer_1100_ddpd[350];

    auto g_x_x_0_0_yy_xy_y_yy = buffer_1100_ddpd[351];

    auto g_x_x_0_0_yy_xy_y_yz = buffer_1100_ddpd[352];

    auto g_x_x_0_0_yy_xy_y_zz = buffer_1100_ddpd[353];

    auto g_x_x_0_0_yy_xy_z_xx = buffer_1100_ddpd[354];

    auto g_x_x_0_0_yy_xy_z_xy = buffer_1100_ddpd[355];

    auto g_x_x_0_0_yy_xy_z_xz = buffer_1100_ddpd[356];

    auto g_x_x_0_0_yy_xy_z_yy = buffer_1100_ddpd[357];

    auto g_x_x_0_0_yy_xy_z_yz = buffer_1100_ddpd[358];

    auto g_x_x_0_0_yy_xy_z_zz = buffer_1100_ddpd[359];

    auto g_x_x_0_0_yy_xz_x_xx = buffer_1100_ddpd[360];

    auto g_x_x_0_0_yy_xz_x_xy = buffer_1100_ddpd[361];

    auto g_x_x_0_0_yy_xz_x_xz = buffer_1100_ddpd[362];

    auto g_x_x_0_0_yy_xz_x_yy = buffer_1100_ddpd[363];

    auto g_x_x_0_0_yy_xz_x_yz = buffer_1100_ddpd[364];

    auto g_x_x_0_0_yy_xz_x_zz = buffer_1100_ddpd[365];

    auto g_x_x_0_0_yy_xz_y_xx = buffer_1100_ddpd[366];

    auto g_x_x_0_0_yy_xz_y_xy = buffer_1100_ddpd[367];

    auto g_x_x_0_0_yy_xz_y_xz = buffer_1100_ddpd[368];

    auto g_x_x_0_0_yy_xz_y_yy = buffer_1100_ddpd[369];

    auto g_x_x_0_0_yy_xz_y_yz = buffer_1100_ddpd[370];

    auto g_x_x_0_0_yy_xz_y_zz = buffer_1100_ddpd[371];

    auto g_x_x_0_0_yy_xz_z_xx = buffer_1100_ddpd[372];

    auto g_x_x_0_0_yy_xz_z_xy = buffer_1100_ddpd[373];

    auto g_x_x_0_0_yy_xz_z_xz = buffer_1100_ddpd[374];

    auto g_x_x_0_0_yy_xz_z_yy = buffer_1100_ddpd[375];

    auto g_x_x_0_0_yy_xz_z_yz = buffer_1100_ddpd[376];

    auto g_x_x_0_0_yy_xz_z_zz = buffer_1100_ddpd[377];

    auto g_x_x_0_0_yy_yy_x_xx = buffer_1100_ddpd[378];

    auto g_x_x_0_0_yy_yy_x_xy = buffer_1100_ddpd[379];

    auto g_x_x_0_0_yy_yy_x_xz = buffer_1100_ddpd[380];

    auto g_x_x_0_0_yy_yy_x_yy = buffer_1100_ddpd[381];

    auto g_x_x_0_0_yy_yy_x_yz = buffer_1100_ddpd[382];

    auto g_x_x_0_0_yy_yy_x_zz = buffer_1100_ddpd[383];

    auto g_x_x_0_0_yy_yy_y_xx = buffer_1100_ddpd[384];

    auto g_x_x_0_0_yy_yy_y_xy = buffer_1100_ddpd[385];

    auto g_x_x_0_0_yy_yy_y_xz = buffer_1100_ddpd[386];

    auto g_x_x_0_0_yy_yy_y_yy = buffer_1100_ddpd[387];

    auto g_x_x_0_0_yy_yy_y_yz = buffer_1100_ddpd[388];

    auto g_x_x_0_0_yy_yy_y_zz = buffer_1100_ddpd[389];

    auto g_x_x_0_0_yy_yy_z_xx = buffer_1100_ddpd[390];

    auto g_x_x_0_0_yy_yy_z_xy = buffer_1100_ddpd[391];

    auto g_x_x_0_0_yy_yy_z_xz = buffer_1100_ddpd[392];

    auto g_x_x_0_0_yy_yy_z_yy = buffer_1100_ddpd[393];

    auto g_x_x_0_0_yy_yy_z_yz = buffer_1100_ddpd[394];

    auto g_x_x_0_0_yy_yy_z_zz = buffer_1100_ddpd[395];

    auto g_x_x_0_0_yy_yz_x_xx = buffer_1100_ddpd[396];

    auto g_x_x_0_0_yy_yz_x_xy = buffer_1100_ddpd[397];

    auto g_x_x_0_0_yy_yz_x_xz = buffer_1100_ddpd[398];

    auto g_x_x_0_0_yy_yz_x_yy = buffer_1100_ddpd[399];

    auto g_x_x_0_0_yy_yz_x_yz = buffer_1100_ddpd[400];

    auto g_x_x_0_0_yy_yz_x_zz = buffer_1100_ddpd[401];

    auto g_x_x_0_0_yy_yz_y_xx = buffer_1100_ddpd[402];

    auto g_x_x_0_0_yy_yz_y_xy = buffer_1100_ddpd[403];

    auto g_x_x_0_0_yy_yz_y_xz = buffer_1100_ddpd[404];

    auto g_x_x_0_0_yy_yz_y_yy = buffer_1100_ddpd[405];

    auto g_x_x_0_0_yy_yz_y_yz = buffer_1100_ddpd[406];

    auto g_x_x_0_0_yy_yz_y_zz = buffer_1100_ddpd[407];

    auto g_x_x_0_0_yy_yz_z_xx = buffer_1100_ddpd[408];

    auto g_x_x_0_0_yy_yz_z_xy = buffer_1100_ddpd[409];

    auto g_x_x_0_0_yy_yz_z_xz = buffer_1100_ddpd[410];

    auto g_x_x_0_0_yy_yz_z_yy = buffer_1100_ddpd[411];

    auto g_x_x_0_0_yy_yz_z_yz = buffer_1100_ddpd[412];

    auto g_x_x_0_0_yy_yz_z_zz = buffer_1100_ddpd[413];

    auto g_x_x_0_0_yy_zz_x_xx = buffer_1100_ddpd[414];

    auto g_x_x_0_0_yy_zz_x_xy = buffer_1100_ddpd[415];

    auto g_x_x_0_0_yy_zz_x_xz = buffer_1100_ddpd[416];

    auto g_x_x_0_0_yy_zz_x_yy = buffer_1100_ddpd[417];

    auto g_x_x_0_0_yy_zz_x_yz = buffer_1100_ddpd[418];

    auto g_x_x_0_0_yy_zz_x_zz = buffer_1100_ddpd[419];

    auto g_x_x_0_0_yy_zz_y_xx = buffer_1100_ddpd[420];

    auto g_x_x_0_0_yy_zz_y_xy = buffer_1100_ddpd[421];

    auto g_x_x_0_0_yy_zz_y_xz = buffer_1100_ddpd[422];

    auto g_x_x_0_0_yy_zz_y_yy = buffer_1100_ddpd[423];

    auto g_x_x_0_0_yy_zz_y_yz = buffer_1100_ddpd[424];

    auto g_x_x_0_0_yy_zz_y_zz = buffer_1100_ddpd[425];

    auto g_x_x_0_0_yy_zz_z_xx = buffer_1100_ddpd[426];

    auto g_x_x_0_0_yy_zz_z_xy = buffer_1100_ddpd[427];

    auto g_x_x_0_0_yy_zz_z_xz = buffer_1100_ddpd[428];

    auto g_x_x_0_0_yy_zz_z_yy = buffer_1100_ddpd[429];

    auto g_x_x_0_0_yy_zz_z_yz = buffer_1100_ddpd[430];

    auto g_x_x_0_0_yy_zz_z_zz = buffer_1100_ddpd[431];

    auto g_x_x_0_0_yz_xx_x_xx = buffer_1100_ddpd[432];

    auto g_x_x_0_0_yz_xx_x_xy = buffer_1100_ddpd[433];

    auto g_x_x_0_0_yz_xx_x_xz = buffer_1100_ddpd[434];

    auto g_x_x_0_0_yz_xx_x_yy = buffer_1100_ddpd[435];

    auto g_x_x_0_0_yz_xx_x_yz = buffer_1100_ddpd[436];

    auto g_x_x_0_0_yz_xx_x_zz = buffer_1100_ddpd[437];

    auto g_x_x_0_0_yz_xx_y_xx = buffer_1100_ddpd[438];

    auto g_x_x_0_0_yz_xx_y_xy = buffer_1100_ddpd[439];

    auto g_x_x_0_0_yz_xx_y_xz = buffer_1100_ddpd[440];

    auto g_x_x_0_0_yz_xx_y_yy = buffer_1100_ddpd[441];

    auto g_x_x_0_0_yz_xx_y_yz = buffer_1100_ddpd[442];

    auto g_x_x_0_0_yz_xx_y_zz = buffer_1100_ddpd[443];

    auto g_x_x_0_0_yz_xx_z_xx = buffer_1100_ddpd[444];

    auto g_x_x_0_0_yz_xx_z_xy = buffer_1100_ddpd[445];

    auto g_x_x_0_0_yz_xx_z_xz = buffer_1100_ddpd[446];

    auto g_x_x_0_0_yz_xx_z_yy = buffer_1100_ddpd[447];

    auto g_x_x_0_0_yz_xx_z_yz = buffer_1100_ddpd[448];

    auto g_x_x_0_0_yz_xx_z_zz = buffer_1100_ddpd[449];

    auto g_x_x_0_0_yz_xy_x_xx = buffer_1100_ddpd[450];

    auto g_x_x_0_0_yz_xy_x_xy = buffer_1100_ddpd[451];

    auto g_x_x_0_0_yz_xy_x_xz = buffer_1100_ddpd[452];

    auto g_x_x_0_0_yz_xy_x_yy = buffer_1100_ddpd[453];

    auto g_x_x_0_0_yz_xy_x_yz = buffer_1100_ddpd[454];

    auto g_x_x_0_0_yz_xy_x_zz = buffer_1100_ddpd[455];

    auto g_x_x_0_0_yz_xy_y_xx = buffer_1100_ddpd[456];

    auto g_x_x_0_0_yz_xy_y_xy = buffer_1100_ddpd[457];

    auto g_x_x_0_0_yz_xy_y_xz = buffer_1100_ddpd[458];

    auto g_x_x_0_0_yz_xy_y_yy = buffer_1100_ddpd[459];

    auto g_x_x_0_0_yz_xy_y_yz = buffer_1100_ddpd[460];

    auto g_x_x_0_0_yz_xy_y_zz = buffer_1100_ddpd[461];

    auto g_x_x_0_0_yz_xy_z_xx = buffer_1100_ddpd[462];

    auto g_x_x_0_0_yz_xy_z_xy = buffer_1100_ddpd[463];

    auto g_x_x_0_0_yz_xy_z_xz = buffer_1100_ddpd[464];

    auto g_x_x_0_0_yz_xy_z_yy = buffer_1100_ddpd[465];

    auto g_x_x_0_0_yz_xy_z_yz = buffer_1100_ddpd[466];

    auto g_x_x_0_0_yz_xy_z_zz = buffer_1100_ddpd[467];

    auto g_x_x_0_0_yz_xz_x_xx = buffer_1100_ddpd[468];

    auto g_x_x_0_0_yz_xz_x_xy = buffer_1100_ddpd[469];

    auto g_x_x_0_0_yz_xz_x_xz = buffer_1100_ddpd[470];

    auto g_x_x_0_0_yz_xz_x_yy = buffer_1100_ddpd[471];

    auto g_x_x_0_0_yz_xz_x_yz = buffer_1100_ddpd[472];

    auto g_x_x_0_0_yz_xz_x_zz = buffer_1100_ddpd[473];

    auto g_x_x_0_0_yz_xz_y_xx = buffer_1100_ddpd[474];

    auto g_x_x_0_0_yz_xz_y_xy = buffer_1100_ddpd[475];

    auto g_x_x_0_0_yz_xz_y_xz = buffer_1100_ddpd[476];

    auto g_x_x_0_0_yz_xz_y_yy = buffer_1100_ddpd[477];

    auto g_x_x_0_0_yz_xz_y_yz = buffer_1100_ddpd[478];

    auto g_x_x_0_0_yz_xz_y_zz = buffer_1100_ddpd[479];

    auto g_x_x_0_0_yz_xz_z_xx = buffer_1100_ddpd[480];

    auto g_x_x_0_0_yz_xz_z_xy = buffer_1100_ddpd[481];

    auto g_x_x_0_0_yz_xz_z_xz = buffer_1100_ddpd[482];

    auto g_x_x_0_0_yz_xz_z_yy = buffer_1100_ddpd[483];

    auto g_x_x_0_0_yz_xz_z_yz = buffer_1100_ddpd[484];

    auto g_x_x_0_0_yz_xz_z_zz = buffer_1100_ddpd[485];

    auto g_x_x_0_0_yz_yy_x_xx = buffer_1100_ddpd[486];

    auto g_x_x_0_0_yz_yy_x_xy = buffer_1100_ddpd[487];

    auto g_x_x_0_0_yz_yy_x_xz = buffer_1100_ddpd[488];

    auto g_x_x_0_0_yz_yy_x_yy = buffer_1100_ddpd[489];

    auto g_x_x_0_0_yz_yy_x_yz = buffer_1100_ddpd[490];

    auto g_x_x_0_0_yz_yy_x_zz = buffer_1100_ddpd[491];

    auto g_x_x_0_0_yz_yy_y_xx = buffer_1100_ddpd[492];

    auto g_x_x_0_0_yz_yy_y_xy = buffer_1100_ddpd[493];

    auto g_x_x_0_0_yz_yy_y_xz = buffer_1100_ddpd[494];

    auto g_x_x_0_0_yz_yy_y_yy = buffer_1100_ddpd[495];

    auto g_x_x_0_0_yz_yy_y_yz = buffer_1100_ddpd[496];

    auto g_x_x_0_0_yz_yy_y_zz = buffer_1100_ddpd[497];

    auto g_x_x_0_0_yz_yy_z_xx = buffer_1100_ddpd[498];

    auto g_x_x_0_0_yz_yy_z_xy = buffer_1100_ddpd[499];

    auto g_x_x_0_0_yz_yy_z_xz = buffer_1100_ddpd[500];

    auto g_x_x_0_0_yz_yy_z_yy = buffer_1100_ddpd[501];

    auto g_x_x_0_0_yz_yy_z_yz = buffer_1100_ddpd[502];

    auto g_x_x_0_0_yz_yy_z_zz = buffer_1100_ddpd[503];

    auto g_x_x_0_0_yz_yz_x_xx = buffer_1100_ddpd[504];

    auto g_x_x_0_0_yz_yz_x_xy = buffer_1100_ddpd[505];

    auto g_x_x_0_0_yz_yz_x_xz = buffer_1100_ddpd[506];

    auto g_x_x_0_0_yz_yz_x_yy = buffer_1100_ddpd[507];

    auto g_x_x_0_0_yz_yz_x_yz = buffer_1100_ddpd[508];

    auto g_x_x_0_0_yz_yz_x_zz = buffer_1100_ddpd[509];

    auto g_x_x_0_0_yz_yz_y_xx = buffer_1100_ddpd[510];

    auto g_x_x_0_0_yz_yz_y_xy = buffer_1100_ddpd[511];

    auto g_x_x_0_0_yz_yz_y_xz = buffer_1100_ddpd[512];

    auto g_x_x_0_0_yz_yz_y_yy = buffer_1100_ddpd[513];

    auto g_x_x_0_0_yz_yz_y_yz = buffer_1100_ddpd[514];

    auto g_x_x_0_0_yz_yz_y_zz = buffer_1100_ddpd[515];

    auto g_x_x_0_0_yz_yz_z_xx = buffer_1100_ddpd[516];

    auto g_x_x_0_0_yz_yz_z_xy = buffer_1100_ddpd[517];

    auto g_x_x_0_0_yz_yz_z_xz = buffer_1100_ddpd[518];

    auto g_x_x_0_0_yz_yz_z_yy = buffer_1100_ddpd[519];

    auto g_x_x_0_0_yz_yz_z_yz = buffer_1100_ddpd[520];

    auto g_x_x_0_0_yz_yz_z_zz = buffer_1100_ddpd[521];

    auto g_x_x_0_0_yz_zz_x_xx = buffer_1100_ddpd[522];

    auto g_x_x_0_0_yz_zz_x_xy = buffer_1100_ddpd[523];

    auto g_x_x_0_0_yz_zz_x_xz = buffer_1100_ddpd[524];

    auto g_x_x_0_0_yz_zz_x_yy = buffer_1100_ddpd[525];

    auto g_x_x_0_0_yz_zz_x_yz = buffer_1100_ddpd[526];

    auto g_x_x_0_0_yz_zz_x_zz = buffer_1100_ddpd[527];

    auto g_x_x_0_0_yz_zz_y_xx = buffer_1100_ddpd[528];

    auto g_x_x_0_0_yz_zz_y_xy = buffer_1100_ddpd[529];

    auto g_x_x_0_0_yz_zz_y_xz = buffer_1100_ddpd[530];

    auto g_x_x_0_0_yz_zz_y_yy = buffer_1100_ddpd[531];

    auto g_x_x_0_0_yz_zz_y_yz = buffer_1100_ddpd[532];

    auto g_x_x_0_0_yz_zz_y_zz = buffer_1100_ddpd[533];

    auto g_x_x_0_0_yz_zz_z_xx = buffer_1100_ddpd[534];

    auto g_x_x_0_0_yz_zz_z_xy = buffer_1100_ddpd[535];

    auto g_x_x_0_0_yz_zz_z_xz = buffer_1100_ddpd[536];

    auto g_x_x_0_0_yz_zz_z_yy = buffer_1100_ddpd[537];

    auto g_x_x_0_0_yz_zz_z_yz = buffer_1100_ddpd[538];

    auto g_x_x_0_0_yz_zz_z_zz = buffer_1100_ddpd[539];

    auto g_x_x_0_0_zz_xx_x_xx = buffer_1100_ddpd[540];

    auto g_x_x_0_0_zz_xx_x_xy = buffer_1100_ddpd[541];

    auto g_x_x_0_0_zz_xx_x_xz = buffer_1100_ddpd[542];

    auto g_x_x_0_0_zz_xx_x_yy = buffer_1100_ddpd[543];

    auto g_x_x_0_0_zz_xx_x_yz = buffer_1100_ddpd[544];

    auto g_x_x_0_0_zz_xx_x_zz = buffer_1100_ddpd[545];

    auto g_x_x_0_0_zz_xx_y_xx = buffer_1100_ddpd[546];

    auto g_x_x_0_0_zz_xx_y_xy = buffer_1100_ddpd[547];

    auto g_x_x_0_0_zz_xx_y_xz = buffer_1100_ddpd[548];

    auto g_x_x_0_0_zz_xx_y_yy = buffer_1100_ddpd[549];

    auto g_x_x_0_0_zz_xx_y_yz = buffer_1100_ddpd[550];

    auto g_x_x_0_0_zz_xx_y_zz = buffer_1100_ddpd[551];

    auto g_x_x_0_0_zz_xx_z_xx = buffer_1100_ddpd[552];

    auto g_x_x_0_0_zz_xx_z_xy = buffer_1100_ddpd[553];

    auto g_x_x_0_0_zz_xx_z_xz = buffer_1100_ddpd[554];

    auto g_x_x_0_0_zz_xx_z_yy = buffer_1100_ddpd[555];

    auto g_x_x_0_0_zz_xx_z_yz = buffer_1100_ddpd[556];

    auto g_x_x_0_0_zz_xx_z_zz = buffer_1100_ddpd[557];

    auto g_x_x_0_0_zz_xy_x_xx = buffer_1100_ddpd[558];

    auto g_x_x_0_0_zz_xy_x_xy = buffer_1100_ddpd[559];

    auto g_x_x_0_0_zz_xy_x_xz = buffer_1100_ddpd[560];

    auto g_x_x_0_0_zz_xy_x_yy = buffer_1100_ddpd[561];

    auto g_x_x_0_0_zz_xy_x_yz = buffer_1100_ddpd[562];

    auto g_x_x_0_0_zz_xy_x_zz = buffer_1100_ddpd[563];

    auto g_x_x_0_0_zz_xy_y_xx = buffer_1100_ddpd[564];

    auto g_x_x_0_0_zz_xy_y_xy = buffer_1100_ddpd[565];

    auto g_x_x_0_0_zz_xy_y_xz = buffer_1100_ddpd[566];

    auto g_x_x_0_0_zz_xy_y_yy = buffer_1100_ddpd[567];

    auto g_x_x_0_0_zz_xy_y_yz = buffer_1100_ddpd[568];

    auto g_x_x_0_0_zz_xy_y_zz = buffer_1100_ddpd[569];

    auto g_x_x_0_0_zz_xy_z_xx = buffer_1100_ddpd[570];

    auto g_x_x_0_0_zz_xy_z_xy = buffer_1100_ddpd[571];

    auto g_x_x_0_0_zz_xy_z_xz = buffer_1100_ddpd[572];

    auto g_x_x_0_0_zz_xy_z_yy = buffer_1100_ddpd[573];

    auto g_x_x_0_0_zz_xy_z_yz = buffer_1100_ddpd[574];

    auto g_x_x_0_0_zz_xy_z_zz = buffer_1100_ddpd[575];

    auto g_x_x_0_0_zz_xz_x_xx = buffer_1100_ddpd[576];

    auto g_x_x_0_0_zz_xz_x_xy = buffer_1100_ddpd[577];

    auto g_x_x_0_0_zz_xz_x_xz = buffer_1100_ddpd[578];

    auto g_x_x_0_0_zz_xz_x_yy = buffer_1100_ddpd[579];

    auto g_x_x_0_0_zz_xz_x_yz = buffer_1100_ddpd[580];

    auto g_x_x_0_0_zz_xz_x_zz = buffer_1100_ddpd[581];

    auto g_x_x_0_0_zz_xz_y_xx = buffer_1100_ddpd[582];

    auto g_x_x_0_0_zz_xz_y_xy = buffer_1100_ddpd[583];

    auto g_x_x_0_0_zz_xz_y_xz = buffer_1100_ddpd[584];

    auto g_x_x_0_0_zz_xz_y_yy = buffer_1100_ddpd[585];

    auto g_x_x_0_0_zz_xz_y_yz = buffer_1100_ddpd[586];

    auto g_x_x_0_0_zz_xz_y_zz = buffer_1100_ddpd[587];

    auto g_x_x_0_0_zz_xz_z_xx = buffer_1100_ddpd[588];

    auto g_x_x_0_0_zz_xz_z_xy = buffer_1100_ddpd[589];

    auto g_x_x_0_0_zz_xz_z_xz = buffer_1100_ddpd[590];

    auto g_x_x_0_0_zz_xz_z_yy = buffer_1100_ddpd[591];

    auto g_x_x_0_0_zz_xz_z_yz = buffer_1100_ddpd[592];

    auto g_x_x_0_0_zz_xz_z_zz = buffer_1100_ddpd[593];

    auto g_x_x_0_0_zz_yy_x_xx = buffer_1100_ddpd[594];

    auto g_x_x_0_0_zz_yy_x_xy = buffer_1100_ddpd[595];

    auto g_x_x_0_0_zz_yy_x_xz = buffer_1100_ddpd[596];

    auto g_x_x_0_0_zz_yy_x_yy = buffer_1100_ddpd[597];

    auto g_x_x_0_0_zz_yy_x_yz = buffer_1100_ddpd[598];

    auto g_x_x_0_0_zz_yy_x_zz = buffer_1100_ddpd[599];

    auto g_x_x_0_0_zz_yy_y_xx = buffer_1100_ddpd[600];

    auto g_x_x_0_0_zz_yy_y_xy = buffer_1100_ddpd[601];

    auto g_x_x_0_0_zz_yy_y_xz = buffer_1100_ddpd[602];

    auto g_x_x_0_0_zz_yy_y_yy = buffer_1100_ddpd[603];

    auto g_x_x_0_0_zz_yy_y_yz = buffer_1100_ddpd[604];

    auto g_x_x_0_0_zz_yy_y_zz = buffer_1100_ddpd[605];

    auto g_x_x_0_0_zz_yy_z_xx = buffer_1100_ddpd[606];

    auto g_x_x_0_0_zz_yy_z_xy = buffer_1100_ddpd[607];

    auto g_x_x_0_0_zz_yy_z_xz = buffer_1100_ddpd[608];

    auto g_x_x_0_0_zz_yy_z_yy = buffer_1100_ddpd[609];

    auto g_x_x_0_0_zz_yy_z_yz = buffer_1100_ddpd[610];

    auto g_x_x_0_0_zz_yy_z_zz = buffer_1100_ddpd[611];

    auto g_x_x_0_0_zz_yz_x_xx = buffer_1100_ddpd[612];

    auto g_x_x_0_0_zz_yz_x_xy = buffer_1100_ddpd[613];

    auto g_x_x_0_0_zz_yz_x_xz = buffer_1100_ddpd[614];

    auto g_x_x_0_0_zz_yz_x_yy = buffer_1100_ddpd[615];

    auto g_x_x_0_0_zz_yz_x_yz = buffer_1100_ddpd[616];

    auto g_x_x_0_0_zz_yz_x_zz = buffer_1100_ddpd[617];

    auto g_x_x_0_0_zz_yz_y_xx = buffer_1100_ddpd[618];

    auto g_x_x_0_0_zz_yz_y_xy = buffer_1100_ddpd[619];

    auto g_x_x_0_0_zz_yz_y_xz = buffer_1100_ddpd[620];

    auto g_x_x_0_0_zz_yz_y_yy = buffer_1100_ddpd[621];

    auto g_x_x_0_0_zz_yz_y_yz = buffer_1100_ddpd[622];

    auto g_x_x_0_0_zz_yz_y_zz = buffer_1100_ddpd[623];

    auto g_x_x_0_0_zz_yz_z_xx = buffer_1100_ddpd[624];

    auto g_x_x_0_0_zz_yz_z_xy = buffer_1100_ddpd[625];

    auto g_x_x_0_0_zz_yz_z_xz = buffer_1100_ddpd[626];

    auto g_x_x_0_0_zz_yz_z_yy = buffer_1100_ddpd[627];

    auto g_x_x_0_0_zz_yz_z_yz = buffer_1100_ddpd[628];

    auto g_x_x_0_0_zz_yz_z_zz = buffer_1100_ddpd[629];

    auto g_x_x_0_0_zz_zz_x_xx = buffer_1100_ddpd[630];

    auto g_x_x_0_0_zz_zz_x_xy = buffer_1100_ddpd[631];

    auto g_x_x_0_0_zz_zz_x_xz = buffer_1100_ddpd[632];

    auto g_x_x_0_0_zz_zz_x_yy = buffer_1100_ddpd[633];

    auto g_x_x_0_0_zz_zz_x_yz = buffer_1100_ddpd[634];

    auto g_x_x_0_0_zz_zz_x_zz = buffer_1100_ddpd[635];

    auto g_x_x_0_0_zz_zz_y_xx = buffer_1100_ddpd[636];

    auto g_x_x_0_0_zz_zz_y_xy = buffer_1100_ddpd[637];

    auto g_x_x_0_0_zz_zz_y_xz = buffer_1100_ddpd[638];

    auto g_x_x_0_0_zz_zz_y_yy = buffer_1100_ddpd[639];

    auto g_x_x_0_0_zz_zz_y_yz = buffer_1100_ddpd[640];

    auto g_x_x_0_0_zz_zz_y_zz = buffer_1100_ddpd[641];

    auto g_x_x_0_0_zz_zz_z_xx = buffer_1100_ddpd[642];

    auto g_x_x_0_0_zz_zz_z_xy = buffer_1100_ddpd[643];

    auto g_x_x_0_0_zz_zz_z_xz = buffer_1100_ddpd[644];

    auto g_x_x_0_0_zz_zz_z_yy = buffer_1100_ddpd[645];

    auto g_x_x_0_0_zz_zz_z_yz = buffer_1100_ddpd[646];

    auto g_x_x_0_0_zz_zz_z_zz = buffer_1100_ddpd[647];

    auto g_x_y_0_0_xx_xx_x_xx = buffer_1100_ddpd[648];

    auto g_x_y_0_0_xx_xx_x_xy = buffer_1100_ddpd[649];

    auto g_x_y_0_0_xx_xx_x_xz = buffer_1100_ddpd[650];

    auto g_x_y_0_0_xx_xx_x_yy = buffer_1100_ddpd[651];

    auto g_x_y_0_0_xx_xx_x_yz = buffer_1100_ddpd[652];

    auto g_x_y_0_0_xx_xx_x_zz = buffer_1100_ddpd[653];

    auto g_x_y_0_0_xx_xx_y_xx = buffer_1100_ddpd[654];

    auto g_x_y_0_0_xx_xx_y_xy = buffer_1100_ddpd[655];

    auto g_x_y_0_0_xx_xx_y_xz = buffer_1100_ddpd[656];

    auto g_x_y_0_0_xx_xx_y_yy = buffer_1100_ddpd[657];

    auto g_x_y_0_0_xx_xx_y_yz = buffer_1100_ddpd[658];

    auto g_x_y_0_0_xx_xx_y_zz = buffer_1100_ddpd[659];

    auto g_x_y_0_0_xx_xx_z_xx = buffer_1100_ddpd[660];

    auto g_x_y_0_0_xx_xx_z_xy = buffer_1100_ddpd[661];

    auto g_x_y_0_0_xx_xx_z_xz = buffer_1100_ddpd[662];

    auto g_x_y_0_0_xx_xx_z_yy = buffer_1100_ddpd[663];

    auto g_x_y_0_0_xx_xx_z_yz = buffer_1100_ddpd[664];

    auto g_x_y_0_0_xx_xx_z_zz = buffer_1100_ddpd[665];

    auto g_x_y_0_0_xx_xy_x_xx = buffer_1100_ddpd[666];

    auto g_x_y_0_0_xx_xy_x_xy = buffer_1100_ddpd[667];

    auto g_x_y_0_0_xx_xy_x_xz = buffer_1100_ddpd[668];

    auto g_x_y_0_0_xx_xy_x_yy = buffer_1100_ddpd[669];

    auto g_x_y_0_0_xx_xy_x_yz = buffer_1100_ddpd[670];

    auto g_x_y_0_0_xx_xy_x_zz = buffer_1100_ddpd[671];

    auto g_x_y_0_0_xx_xy_y_xx = buffer_1100_ddpd[672];

    auto g_x_y_0_0_xx_xy_y_xy = buffer_1100_ddpd[673];

    auto g_x_y_0_0_xx_xy_y_xz = buffer_1100_ddpd[674];

    auto g_x_y_0_0_xx_xy_y_yy = buffer_1100_ddpd[675];

    auto g_x_y_0_0_xx_xy_y_yz = buffer_1100_ddpd[676];

    auto g_x_y_0_0_xx_xy_y_zz = buffer_1100_ddpd[677];

    auto g_x_y_0_0_xx_xy_z_xx = buffer_1100_ddpd[678];

    auto g_x_y_0_0_xx_xy_z_xy = buffer_1100_ddpd[679];

    auto g_x_y_0_0_xx_xy_z_xz = buffer_1100_ddpd[680];

    auto g_x_y_0_0_xx_xy_z_yy = buffer_1100_ddpd[681];

    auto g_x_y_0_0_xx_xy_z_yz = buffer_1100_ddpd[682];

    auto g_x_y_0_0_xx_xy_z_zz = buffer_1100_ddpd[683];

    auto g_x_y_0_0_xx_xz_x_xx = buffer_1100_ddpd[684];

    auto g_x_y_0_0_xx_xz_x_xy = buffer_1100_ddpd[685];

    auto g_x_y_0_0_xx_xz_x_xz = buffer_1100_ddpd[686];

    auto g_x_y_0_0_xx_xz_x_yy = buffer_1100_ddpd[687];

    auto g_x_y_0_0_xx_xz_x_yz = buffer_1100_ddpd[688];

    auto g_x_y_0_0_xx_xz_x_zz = buffer_1100_ddpd[689];

    auto g_x_y_0_0_xx_xz_y_xx = buffer_1100_ddpd[690];

    auto g_x_y_0_0_xx_xz_y_xy = buffer_1100_ddpd[691];

    auto g_x_y_0_0_xx_xz_y_xz = buffer_1100_ddpd[692];

    auto g_x_y_0_0_xx_xz_y_yy = buffer_1100_ddpd[693];

    auto g_x_y_0_0_xx_xz_y_yz = buffer_1100_ddpd[694];

    auto g_x_y_0_0_xx_xz_y_zz = buffer_1100_ddpd[695];

    auto g_x_y_0_0_xx_xz_z_xx = buffer_1100_ddpd[696];

    auto g_x_y_0_0_xx_xz_z_xy = buffer_1100_ddpd[697];

    auto g_x_y_0_0_xx_xz_z_xz = buffer_1100_ddpd[698];

    auto g_x_y_0_0_xx_xz_z_yy = buffer_1100_ddpd[699];

    auto g_x_y_0_0_xx_xz_z_yz = buffer_1100_ddpd[700];

    auto g_x_y_0_0_xx_xz_z_zz = buffer_1100_ddpd[701];

    auto g_x_y_0_0_xx_yy_x_xx = buffer_1100_ddpd[702];

    auto g_x_y_0_0_xx_yy_x_xy = buffer_1100_ddpd[703];

    auto g_x_y_0_0_xx_yy_x_xz = buffer_1100_ddpd[704];

    auto g_x_y_0_0_xx_yy_x_yy = buffer_1100_ddpd[705];

    auto g_x_y_0_0_xx_yy_x_yz = buffer_1100_ddpd[706];

    auto g_x_y_0_0_xx_yy_x_zz = buffer_1100_ddpd[707];

    auto g_x_y_0_0_xx_yy_y_xx = buffer_1100_ddpd[708];

    auto g_x_y_0_0_xx_yy_y_xy = buffer_1100_ddpd[709];

    auto g_x_y_0_0_xx_yy_y_xz = buffer_1100_ddpd[710];

    auto g_x_y_0_0_xx_yy_y_yy = buffer_1100_ddpd[711];

    auto g_x_y_0_0_xx_yy_y_yz = buffer_1100_ddpd[712];

    auto g_x_y_0_0_xx_yy_y_zz = buffer_1100_ddpd[713];

    auto g_x_y_0_0_xx_yy_z_xx = buffer_1100_ddpd[714];

    auto g_x_y_0_0_xx_yy_z_xy = buffer_1100_ddpd[715];

    auto g_x_y_0_0_xx_yy_z_xz = buffer_1100_ddpd[716];

    auto g_x_y_0_0_xx_yy_z_yy = buffer_1100_ddpd[717];

    auto g_x_y_0_0_xx_yy_z_yz = buffer_1100_ddpd[718];

    auto g_x_y_0_0_xx_yy_z_zz = buffer_1100_ddpd[719];

    auto g_x_y_0_0_xx_yz_x_xx = buffer_1100_ddpd[720];

    auto g_x_y_0_0_xx_yz_x_xy = buffer_1100_ddpd[721];

    auto g_x_y_0_0_xx_yz_x_xz = buffer_1100_ddpd[722];

    auto g_x_y_0_0_xx_yz_x_yy = buffer_1100_ddpd[723];

    auto g_x_y_0_0_xx_yz_x_yz = buffer_1100_ddpd[724];

    auto g_x_y_0_0_xx_yz_x_zz = buffer_1100_ddpd[725];

    auto g_x_y_0_0_xx_yz_y_xx = buffer_1100_ddpd[726];

    auto g_x_y_0_0_xx_yz_y_xy = buffer_1100_ddpd[727];

    auto g_x_y_0_0_xx_yz_y_xz = buffer_1100_ddpd[728];

    auto g_x_y_0_0_xx_yz_y_yy = buffer_1100_ddpd[729];

    auto g_x_y_0_0_xx_yz_y_yz = buffer_1100_ddpd[730];

    auto g_x_y_0_0_xx_yz_y_zz = buffer_1100_ddpd[731];

    auto g_x_y_0_0_xx_yz_z_xx = buffer_1100_ddpd[732];

    auto g_x_y_0_0_xx_yz_z_xy = buffer_1100_ddpd[733];

    auto g_x_y_0_0_xx_yz_z_xz = buffer_1100_ddpd[734];

    auto g_x_y_0_0_xx_yz_z_yy = buffer_1100_ddpd[735];

    auto g_x_y_0_0_xx_yz_z_yz = buffer_1100_ddpd[736];

    auto g_x_y_0_0_xx_yz_z_zz = buffer_1100_ddpd[737];

    auto g_x_y_0_0_xx_zz_x_xx = buffer_1100_ddpd[738];

    auto g_x_y_0_0_xx_zz_x_xy = buffer_1100_ddpd[739];

    auto g_x_y_0_0_xx_zz_x_xz = buffer_1100_ddpd[740];

    auto g_x_y_0_0_xx_zz_x_yy = buffer_1100_ddpd[741];

    auto g_x_y_0_0_xx_zz_x_yz = buffer_1100_ddpd[742];

    auto g_x_y_0_0_xx_zz_x_zz = buffer_1100_ddpd[743];

    auto g_x_y_0_0_xx_zz_y_xx = buffer_1100_ddpd[744];

    auto g_x_y_0_0_xx_zz_y_xy = buffer_1100_ddpd[745];

    auto g_x_y_0_0_xx_zz_y_xz = buffer_1100_ddpd[746];

    auto g_x_y_0_0_xx_zz_y_yy = buffer_1100_ddpd[747];

    auto g_x_y_0_0_xx_zz_y_yz = buffer_1100_ddpd[748];

    auto g_x_y_0_0_xx_zz_y_zz = buffer_1100_ddpd[749];

    auto g_x_y_0_0_xx_zz_z_xx = buffer_1100_ddpd[750];

    auto g_x_y_0_0_xx_zz_z_xy = buffer_1100_ddpd[751];

    auto g_x_y_0_0_xx_zz_z_xz = buffer_1100_ddpd[752];

    auto g_x_y_0_0_xx_zz_z_yy = buffer_1100_ddpd[753];

    auto g_x_y_0_0_xx_zz_z_yz = buffer_1100_ddpd[754];

    auto g_x_y_0_0_xx_zz_z_zz = buffer_1100_ddpd[755];

    auto g_x_y_0_0_xy_xx_x_xx = buffer_1100_ddpd[756];

    auto g_x_y_0_0_xy_xx_x_xy = buffer_1100_ddpd[757];

    auto g_x_y_0_0_xy_xx_x_xz = buffer_1100_ddpd[758];

    auto g_x_y_0_0_xy_xx_x_yy = buffer_1100_ddpd[759];

    auto g_x_y_0_0_xy_xx_x_yz = buffer_1100_ddpd[760];

    auto g_x_y_0_0_xy_xx_x_zz = buffer_1100_ddpd[761];

    auto g_x_y_0_0_xy_xx_y_xx = buffer_1100_ddpd[762];

    auto g_x_y_0_0_xy_xx_y_xy = buffer_1100_ddpd[763];

    auto g_x_y_0_0_xy_xx_y_xz = buffer_1100_ddpd[764];

    auto g_x_y_0_0_xy_xx_y_yy = buffer_1100_ddpd[765];

    auto g_x_y_0_0_xy_xx_y_yz = buffer_1100_ddpd[766];

    auto g_x_y_0_0_xy_xx_y_zz = buffer_1100_ddpd[767];

    auto g_x_y_0_0_xy_xx_z_xx = buffer_1100_ddpd[768];

    auto g_x_y_0_0_xy_xx_z_xy = buffer_1100_ddpd[769];

    auto g_x_y_0_0_xy_xx_z_xz = buffer_1100_ddpd[770];

    auto g_x_y_0_0_xy_xx_z_yy = buffer_1100_ddpd[771];

    auto g_x_y_0_0_xy_xx_z_yz = buffer_1100_ddpd[772];

    auto g_x_y_0_0_xy_xx_z_zz = buffer_1100_ddpd[773];

    auto g_x_y_0_0_xy_xy_x_xx = buffer_1100_ddpd[774];

    auto g_x_y_0_0_xy_xy_x_xy = buffer_1100_ddpd[775];

    auto g_x_y_0_0_xy_xy_x_xz = buffer_1100_ddpd[776];

    auto g_x_y_0_0_xy_xy_x_yy = buffer_1100_ddpd[777];

    auto g_x_y_0_0_xy_xy_x_yz = buffer_1100_ddpd[778];

    auto g_x_y_0_0_xy_xy_x_zz = buffer_1100_ddpd[779];

    auto g_x_y_0_0_xy_xy_y_xx = buffer_1100_ddpd[780];

    auto g_x_y_0_0_xy_xy_y_xy = buffer_1100_ddpd[781];

    auto g_x_y_0_0_xy_xy_y_xz = buffer_1100_ddpd[782];

    auto g_x_y_0_0_xy_xy_y_yy = buffer_1100_ddpd[783];

    auto g_x_y_0_0_xy_xy_y_yz = buffer_1100_ddpd[784];

    auto g_x_y_0_0_xy_xy_y_zz = buffer_1100_ddpd[785];

    auto g_x_y_0_0_xy_xy_z_xx = buffer_1100_ddpd[786];

    auto g_x_y_0_0_xy_xy_z_xy = buffer_1100_ddpd[787];

    auto g_x_y_0_0_xy_xy_z_xz = buffer_1100_ddpd[788];

    auto g_x_y_0_0_xy_xy_z_yy = buffer_1100_ddpd[789];

    auto g_x_y_0_0_xy_xy_z_yz = buffer_1100_ddpd[790];

    auto g_x_y_0_0_xy_xy_z_zz = buffer_1100_ddpd[791];

    auto g_x_y_0_0_xy_xz_x_xx = buffer_1100_ddpd[792];

    auto g_x_y_0_0_xy_xz_x_xy = buffer_1100_ddpd[793];

    auto g_x_y_0_0_xy_xz_x_xz = buffer_1100_ddpd[794];

    auto g_x_y_0_0_xy_xz_x_yy = buffer_1100_ddpd[795];

    auto g_x_y_0_0_xy_xz_x_yz = buffer_1100_ddpd[796];

    auto g_x_y_0_0_xy_xz_x_zz = buffer_1100_ddpd[797];

    auto g_x_y_0_0_xy_xz_y_xx = buffer_1100_ddpd[798];

    auto g_x_y_0_0_xy_xz_y_xy = buffer_1100_ddpd[799];

    auto g_x_y_0_0_xy_xz_y_xz = buffer_1100_ddpd[800];

    auto g_x_y_0_0_xy_xz_y_yy = buffer_1100_ddpd[801];

    auto g_x_y_0_0_xy_xz_y_yz = buffer_1100_ddpd[802];

    auto g_x_y_0_0_xy_xz_y_zz = buffer_1100_ddpd[803];

    auto g_x_y_0_0_xy_xz_z_xx = buffer_1100_ddpd[804];

    auto g_x_y_0_0_xy_xz_z_xy = buffer_1100_ddpd[805];

    auto g_x_y_0_0_xy_xz_z_xz = buffer_1100_ddpd[806];

    auto g_x_y_0_0_xy_xz_z_yy = buffer_1100_ddpd[807];

    auto g_x_y_0_0_xy_xz_z_yz = buffer_1100_ddpd[808];

    auto g_x_y_0_0_xy_xz_z_zz = buffer_1100_ddpd[809];

    auto g_x_y_0_0_xy_yy_x_xx = buffer_1100_ddpd[810];

    auto g_x_y_0_0_xy_yy_x_xy = buffer_1100_ddpd[811];

    auto g_x_y_0_0_xy_yy_x_xz = buffer_1100_ddpd[812];

    auto g_x_y_0_0_xy_yy_x_yy = buffer_1100_ddpd[813];

    auto g_x_y_0_0_xy_yy_x_yz = buffer_1100_ddpd[814];

    auto g_x_y_0_0_xy_yy_x_zz = buffer_1100_ddpd[815];

    auto g_x_y_0_0_xy_yy_y_xx = buffer_1100_ddpd[816];

    auto g_x_y_0_0_xy_yy_y_xy = buffer_1100_ddpd[817];

    auto g_x_y_0_0_xy_yy_y_xz = buffer_1100_ddpd[818];

    auto g_x_y_0_0_xy_yy_y_yy = buffer_1100_ddpd[819];

    auto g_x_y_0_0_xy_yy_y_yz = buffer_1100_ddpd[820];

    auto g_x_y_0_0_xy_yy_y_zz = buffer_1100_ddpd[821];

    auto g_x_y_0_0_xy_yy_z_xx = buffer_1100_ddpd[822];

    auto g_x_y_0_0_xy_yy_z_xy = buffer_1100_ddpd[823];

    auto g_x_y_0_0_xy_yy_z_xz = buffer_1100_ddpd[824];

    auto g_x_y_0_0_xy_yy_z_yy = buffer_1100_ddpd[825];

    auto g_x_y_0_0_xy_yy_z_yz = buffer_1100_ddpd[826];

    auto g_x_y_0_0_xy_yy_z_zz = buffer_1100_ddpd[827];

    auto g_x_y_0_0_xy_yz_x_xx = buffer_1100_ddpd[828];

    auto g_x_y_0_0_xy_yz_x_xy = buffer_1100_ddpd[829];

    auto g_x_y_0_0_xy_yz_x_xz = buffer_1100_ddpd[830];

    auto g_x_y_0_0_xy_yz_x_yy = buffer_1100_ddpd[831];

    auto g_x_y_0_0_xy_yz_x_yz = buffer_1100_ddpd[832];

    auto g_x_y_0_0_xy_yz_x_zz = buffer_1100_ddpd[833];

    auto g_x_y_0_0_xy_yz_y_xx = buffer_1100_ddpd[834];

    auto g_x_y_0_0_xy_yz_y_xy = buffer_1100_ddpd[835];

    auto g_x_y_0_0_xy_yz_y_xz = buffer_1100_ddpd[836];

    auto g_x_y_0_0_xy_yz_y_yy = buffer_1100_ddpd[837];

    auto g_x_y_0_0_xy_yz_y_yz = buffer_1100_ddpd[838];

    auto g_x_y_0_0_xy_yz_y_zz = buffer_1100_ddpd[839];

    auto g_x_y_0_0_xy_yz_z_xx = buffer_1100_ddpd[840];

    auto g_x_y_0_0_xy_yz_z_xy = buffer_1100_ddpd[841];

    auto g_x_y_0_0_xy_yz_z_xz = buffer_1100_ddpd[842];

    auto g_x_y_0_0_xy_yz_z_yy = buffer_1100_ddpd[843];

    auto g_x_y_0_0_xy_yz_z_yz = buffer_1100_ddpd[844];

    auto g_x_y_0_0_xy_yz_z_zz = buffer_1100_ddpd[845];

    auto g_x_y_0_0_xy_zz_x_xx = buffer_1100_ddpd[846];

    auto g_x_y_0_0_xy_zz_x_xy = buffer_1100_ddpd[847];

    auto g_x_y_0_0_xy_zz_x_xz = buffer_1100_ddpd[848];

    auto g_x_y_0_0_xy_zz_x_yy = buffer_1100_ddpd[849];

    auto g_x_y_0_0_xy_zz_x_yz = buffer_1100_ddpd[850];

    auto g_x_y_0_0_xy_zz_x_zz = buffer_1100_ddpd[851];

    auto g_x_y_0_0_xy_zz_y_xx = buffer_1100_ddpd[852];

    auto g_x_y_0_0_xy_zz_y_xy = buffer_1100_ddpd[853];

    auto g_x_y_0_0_xy_zz_y_xz = buffer_1100_ddpd[854];

    auto g_x_y_0_0_xy_zz_y_yy = buffer_1100_ddpd[855];

    auto g_x_y_0_0_xy_zz_y_yz = buffer_1100_ddpd[856];

    auto g_x_y_0_0_xy_zz_y_zz = buffer_1100_ddpd[857];

    auto g_x_y_0_0_xy_zz_z_xx = buffer_1100_ddpd[858];

    auto g_x_y_0_0_xy_zz_z_xy = buffer_1100_ddpd[859];

    auto g_x_y_0_0_xy_zz_z_xz = buffer_1100_ddpd[860];

    auto g_x_y_0_0_xy_zz_z_yy = buffer_1100_ddpd[861];

    auto g_x_y_0_0_xy_zz_z_yz = buffer_1100_ddpd[862];

    auto g_x_y_0_0_xy_zz_z_zz = buffer_1100_ddpd[863];

    auto g_x_y_0_0_xz_xx_x_xx = buffer_1100_ddpd[864];

    auto g_x_y_0_0_xz_xx_x_xy = buffer_1100_ddpd[865];

    auto g_x_y_0_0_xz_xx_x_xz = buffer_1100_ddpd[866];

    auto g_x_y_0_0_xz_xx_x_yy = buffer_1100_ddpd[867];

    auto g_x_y_0_0_xz_xx_x_yz = buffer_1100_ddpd[868];

    auto g_x_y_0_0_xz_xx_x_zz = buffer_1100_ddpd[869];

    auto g_x_y_0_0_xz_xx_y_xx = buffer_1100_ddpd[870];

    auto g_x_y_0_0_xz_xx_y_xy = buffer_1100_ddpd[871];

    auto g_x_y_0_0_xz_xx_y_xz = buffer_1100_ddpd[872];

    auto g_x_y_0_0_xz_xx_y_yy = buffer_1100_ddpd[873];

    auto g_x_y_0_0_xz_xx_y_yz = buffer_1100_ddpd[874];

    auto g_x_y_0_0_xz_xx_y_zz = buffer_1100_ddpd[875];

    auto g_x_y_0_0_xz_xx_z_xx = buffer_1100_ddpd[876];

    auto g_x_y_0_0_xz_xx_z_xy = buffer_1100_ddpd[877];

    auto g_x_y_0_0_xz_xx_z_xz = buffer_1100_ddpd[878];

    auto g_x_y_0_0_xz_xx_z_yy = buffer_1100_ddpd[879];

    auto g_x_y_0_0_xz_xx_z_yz = buffer_1100_ddpd[880];

    auto g_x_y_0_0_xz_xx_z_zz = buffer_1100_ddpd[881];

    auto g_x_y_0_0_xz_xy_x_xx = buffer_1100_ddpd[882];

    auto g_x_y_0_0_xz_xy_x_xy = buffer_1100_ddpd[883];

    auto g_x_y_0_0_xz_xy_x_xz = buffer_1100_ddpd[884];

    auto g_x_y_0_0_xz_xy_x_yy = buffer_1100_ddpd[885];

    auto g_x_y_0_0_xz_xy_x_yz = buffer_1100_ddpd[886];

    auto g_x_y_0_0_xz_xy_x_zz = buffer_1100_ddpd[887];

    auto g_x_y_0_0_xz_xy_y_xx = buffer_1100_ddpd[888];

    auto g_x_y_0_0_xz_xy_y_xy = buffer_1100_ddpd[889];

    auto g_x_y_0_0_xz_xy_y_xz = buffer_1100_ddpd[890];

    auto g_x_y_0_0_xz_xy_y_yy = buffer_1100_ddpd[891];

    auto g_x_y_0_0_xz_xy_y_yz = buffer_1100_ddpd[892];

    auto g_x_y_0_0_xz_xy_y_zz = buffer_1100_ddpd[893];

    auto g_x_y_0_0_xz_xy_z_xx = buffer_1100_ddpd[894];

    auto g_x_y_0_0_xz_xy_z_xy = buffer_1100_ddpd[895];

    auto g_x_y_0_0_xz_xy_z_xz = buffer_1100_ddpd[896];

    auto g_x_y_0_0_xz_xy_z_yy = buffer_1100_ddpd[897];

    auto g_x_y_0_0_xz_xy_z_yz = buffer_1100_ddpd[898];

    auto g_x_y_0_0_xz_xy_z_zz = buffer_1100_ddpd[899];

    auto g_x_y_0_0_xz_xz_x_xx = buffer_1100_ddpd[900];

    auto g_x_y_0_0_xz_xz_x_xy = buffer_1100_ddpd[901];

    auto g_x_y_0_0_xz_xz_x_xz = buffer_1100_ddpd[902];

    auto g_x_y_0_0_xz_xz_x_yy = buffer_1100_ddpd[903];

    auto g_x_y_0_0_xz_xz_x_yz = buffer_1100_ddpd[904];

    auto g_x_y_0_0_xz_xz_x_zz = buffer_1100_ddpd[905];

    auto g_x_y_0_0_xz_xz_y_xx = buffer_1100_ddpd[906];

    auto g_x_y_0_0_xz_xz_y_xy = buffer_1100_ddpd[907];

    auto g_x_y_0_0_xz_xz_y_xz = buffer_1100_ddpd[908];

    auto g_x_y_0_0_xz_xz_y_yy = buffer_1100_ddpd[909];

    auto g_x_y_0_0_xz_xz_y_yz = buffer_1100_ddpd[910];

    auto g_x_y_0_0_xz_xz_y_zz = buffer_1100_ddpd[911];

    auto g_x_y_0_0_xz_xz_z_xx = buffer_1100_ddpd[912];

    auto g_x_y_0_0_xz_xz_z_xy = buffer_1100_ddpd[913];

    auto g_x_y_0_0_xz_xz_z_xz = buffer_1100_ddpd[914];

    auto g_x_y_0_0_xz_xz_z_yy = buffer_1100_ddpd[915];

    auto g_x_y_0_0_xz_xz_z_yz = buffer_1100_ddpd[916];

    auto g_x_y_0_0_xz_xz_z_zz = buffer_1100_ddpd[917];

    auto g_x_y_0_0_xz_yy_x_xx = buffer_1100_ddpd[918];

    auto g_x_y_0_0_xz_yy_x_xy = buffer_1100_ddpd[919];

    auto g_x_y_0_0_xz_yy_x_xz = buffer_1100_ddpd[920];

    auto g_x_y_0_0_xz_yy_x_yy = buffer_1100_ddpd[921];

    auto g_x_y_0_0_xz_yy_x_yz = buffer_1100_ddpd[922];

    auto g_x_y_0_0_xz_yy_x_zz = buffer_1100_ddpd[923];

    auto g_x_y_0_0_xz_yy_y_xx = buffer_1100_ddpd[924];

    auto g_x_y_0_0_xz_yy_y_xy = buffer_1100_ddpd[925];

    auto g_x_y_0_0_xz_yy_y_xz = buffer_1100_ddpd[926];

    auto g_x_y_0_0_xz_yy_y_yy = buffer_1100_ddpd[927];

    auto g_x_y_0_0_xz_yy_y_yz = buffer_1100_ddpd[928];

    auto g_x_y_0_0_xz_yy_y_zz = buffer_1100_ddpd[929];

    auto g_x_y_0_0_xz_yy_z_xx = buffer_1100_ddpd[930];

    auto g_x_y_0_0_xz_yy_z_xy = buffer_1100_ddpd[931];

    auto g_x_y_0_0_xz_yy_z_xz = buffer_1100_ddpd[932];

    auto g_x_y_0_0_xz_yy_z_yy = buffer_1100_ddpd[933];

    auto g_x_y_0_0_xz_yy_z_yz = buffer_1100_ddpd[934];

    auto g_x_y_0_0_xz_yy_z_zz = buffer_1100_ddpd[935];

    auto g_x_y_0_0_xz_yz_x_xx = buffer_1100_ddpd[936];

    auto g_x_y_0_0_xz_yz_x_xy = buffer_1100_ddpd[937];

    auto g_x_y_0_0_xz_yz_x_xz = buffer_1100_ddpd[938];

    auto g_x_y_0_0_xz_yz_x_yy = buffer_1100_ddpd[939];

    auto g_x_y_0_0_xz_yz_x_yz = buffer_1100_ddpd[940];

    auto g_x_y_0_0_xz_yz_x_zz = buffer_1100_ddpd[941];

    auto g_x_y_0_0_xz_yz_y_xx = buffer_1100_ddpd[942];

    auto g_x_y_0_0_xz_yz_y_xy = buffer_1100_ddpd[943];

    auto g_x_y_0_0_xz_yz_y_xz = buffer_1100_ddpd[944];

    auto g_x_y_0_0_xz_yz_y_yy = buffer_1100_ddpd[945];

    auto g_x_y_0_0_xz_yz_y_yz = buffer_1100_ddpd[946];

    auto g_x_y_0_0_xz_yz_y_zz = buffer_1100_ddpd[947];

    auto g_x_y_0_0_xz_yz_z_xx = buffer_1100_ddpd[948];

    auto g_x_y_0_0_xz_yz_z_xy = buffer_1100_ddpd[949];

    auto g_x_y_0_0_xz_yz_z_xz = buffer_1100_ddpd[950];

    auto g_x_y_0_0_xz_yz_z_yy = buffer_1100_ddpd[951];

    auto g_x_y_0_0_xz_yz_z_yz = buffer_1100_ddpd[952];

    auto g_x_y_0_0_xz_yz_z_zz = buffer_1100_ddpd[953];

    auto g_x_y_0_0_xz_zz_x_xx = buffer_1100_ddpd[954];

    auto g_x_y_0_0_xz_zz_x_xy = buffer_1100_ddpd[955];

    auto g_x_y_0_0_xz_zz_x_xz = buffer_1100_ddpd[956];

    auto g_x_y_0_0_xz_zz_x_yy = buffer_1100_ddpd[957];

    auto g_x_y_0_0_xz_zz_x_yz = buffer_1100_ddpd[958];

    auto g_x_y_0_0_xz_zz_x_zz = buffer_1100_ddpd[959];

    auto g_x_y_0_0_xz_zz_y_xx = buffer_1100_ddpd[960];

    auto g_x_y_0_0_xz_zz_y_xy = buffer_1100_ddpd[961];

    auto g_x_y_0_0_xz_zz_y_xz = buffer_1100_ddpd[962];

    auto g_x_y_0_0_xz_zz_y_yy = buffer_1100_ddpd[963];

    auto g_x_y_0_0_xz_zz_y_yz = buffer_1100_ddpd[964];

    auto g_x_y_0_0_xz_zz_y_zz = buffer_1100_ddpd[965];

    auto g_x_y_0_0_xz_zz_z_xx = buffer_1100_ddpd[966];

    auto g_x_y_0_0_xz_zz_z_xy = buffer_1100_ddpd[967];

    auto g_x_y_0_0_xz_zz_z_xz = buffer_1100_ddpd[968];

    auto g_x_y_0_0_xz_zz_z_yy = buffer_1100_ddpd[969];

    auto g_x_y_0_0_xz_zz_z_yz = buffer_1100_ddpd[970];

    auto g_x_y_0_0_xz_zz_z_zz = buffer_1100_ddpd[971];

    auto g_x_y_0_0_yy_xx_x_xx = buffer_1100_ddpd[972];

    auto g_x_y_0_0_yy_xx_x_xy = buffer_1100_ddpd[973];

    auto g_x_y_0_0_yy_xx_x_xz = buffer_1100_ddpd[974];

    auto g_x_y_0_0_yy_xx_x_yy = buffer_1100_ddpd[975];

    auto g_x_y_0_0_yy_xx_x_yz = buffer_1100_ddpd[976];

    auto g_x_y_0_0_yy_xx_x_zz = buffer_1100_ddpd[977];

    auto g_x_y_0_0_yy_xx_y_xx = buffer_1100_ddpd[978];

    auto g_x_y_0_0_yy_xx_y_xy = buffer_1100_ddpd[979];

    auto g_x_y_0_0_yy_xx_y_xz = buffer_1100_ddpd[980];

    auto g_x_y_0_0_yy_xx_y_yy = buffer_1100_ddpd[981];

    auto g_x_y_0_0_yy_xx_y_yz = buffer_1100_ddpd[982];

    auto g_x_y_0_0_yy_xx_y_zz = buffer_1100_ddpd[983];

    auto g_x_y_0_0_yy_xx_z_xx = buffer_1100_ddpd[984];

    auto g_x_y_0_0_yy_xx_z_xy = buffer_1100_ddpd[985];

    auto g_x_y_0_0_yy_xx_z_xz = buffer_1100_ddpd[986];

    auto g_x_y_0_0_yy_xx_z_yy = buffer_1100_ddpd[987];

    auto g_x_y_0_0_yy_xx_z_yz = buffer_1100_ddpd[988];

    auto g_x_y_0_0_yy_xx_z_zz = buffer_1100_ddpd[989];

    auto g_x_y_0_0_yy_xy_x_xx = buffer_1100_ddpd[990];

    auto g_x_y_0_0_yy_xy_x_xy = buffer_1100_ddpd[991];

    auto g_x_y_0_0_yy_xy_x_xz = buffer_1100_ddpd[992];

    auto g_x_y_0_0_yy_xy_x_yy = buffer_1100_ddpd[993];

    auto g_x_y_0_0_yy_xy_x_yz = buffer_1100_ddpd[994];

    auto g_x_y_0_0_yy_xy_x_zz = buffer_1100_ddpd[995];

    auto g_x_y_0_0_yy_xy_y_xx = buffer_1100_ddpd[996];

    auto g_x_y_0_0_yy_xy_y_xy = buffer_1100_ddpd[997];

    auto g_x_y_0_0_yy_xy_y_xz = buffer_1100_ddpd[998];

    auto g_x_y_0_0_yy_xy_y_yy = buffer_1100_ddpd[999];

    auto g_x_y_0_0_yy_xy_y_yz = buffer_1100_ddpd[1000];

    auto g_x_y_0_0_yy_xy_y_zz = buffer_1100_ddpd[1001];

    auto g_x_y_0_0_yy_xy_z_xx = buffer_1100_ddpd[1002];

    auto g_x_y_0_0_yy_xy_z_xy = buffer_1100_ddpd[1003];

    auto g_x_y_0_0_yy_xy_z_xz = buffer_1100_ddpd[1004];

    auto g_x_y_0_0_yy_xy_z_yy = buffer_1100_ddpd[1005];

    auto g_x_y_0_0_yy_xy_z_yz = buffer_1100_ddpd[1006];

    auto g_x_y_0_0_yy_xy_z_zz = buffer_1100_ddpd[1007];

    auto g_x_y_0_0_yy_xz_x_xx = buffer_1100_ddpd[1008];

    auto g_x_y_0_0_yy_xz_x_xy = buffer_1100_ddpd[1009];

    auto g_x_y_0_0_yy_xz_x_xz = buffer_1100_ddpd[1010];

    auto g_x_y_0_0_yy_xz_x_yy = buffer_1100_ddpd[1011];

    auto g_x_y_0_0_yy_xz_x_yz = buffer_1100_ddpd[1012];

    auto g_x_y_0_0_yy_xz_x_zz = buffer_1100_ddpd[1013];

    auto g_x_y_0_0_yy_xz_y_xx = buffer_1100_ddpd[1014];

    auto g_x_y_0_0_yy_xz_y_xy = buffer_1100_ddpd[1015];

    auto g_x_y_0_0_yy_xz_y_xz = buffer_1100_ddpd[1016];

    auto g_x_y_0_0_yy_xz_y_yy = buffer_1100_ddpd[1017];

    auto g_x_y_0_0_yy_xz_y_yz = buffer_1100_ddpd[1018];

    auto g_x_y_0_0_yy_xz_y_zz = buffer_1100_ddpd[1019];

    auto g_x_y_0_0_yy_xz_z_xx = buffer_1100_ddpd[1020];

    auto g_x_y_0_0_yy_xz_z_xy = buffer_1100_ddpd[1021];

    auto g_x_y_0_0_yy_xz_z_xz = buffer_1100_ddpd[1022];

    auto g_x_y_0_0_yy_xz_z_yy = buffer_1100_ddpd[1023];

    auto g_x_y_0_0_yy_xz_z_yz = buffer_1100_ddpd[1024];

    auto g_x_y_0_0_yy_xz_z_zz = buffer_1100_ddpd[1025];

    auto g_x_y_0_0_yy_yy_x_xx = buffer_1100_ddpd[1026];

    auto g_x_y_0_0_yy_yy_x_xy = buffer_1100_ddpd[1027];

    auto g_x_y_0_0_yy_yy_x_xz = buffer_1100_ddpd[1028];

    auto g_x_y_0_0_yy_yy_x_yy = buffer_1100_ddpd[1029];

    auto g_x_y_0_0_yy_yy_x_yz = buffer_1100_ddpd[1030];

    auto g_x_y_0_0_yy_yy_x_zz = buffer_1100_ddpd[1031];

    auto g_x_y_0_0_yy_yy_y_xx = buffer_1100_ddpd[1032];

    auto g_x_y_0_0_yy_yy_y_xy = buffer_1100_ddpd[1033];

    auto g_x_y_0_0_yy_yy_y_xz = buffer_1100_ddpd[1034];

    auto g_x_y_0_0_yy_yy_y_yy = buffer_1100_ddpd[1035];

    auto g_x_y_0_0_yy_yy_y_yz = buffer_1100_ddpd[1036];

    auto g_x_y_0_0_yy_yy_y_zz = buffer_1100_ddpd[1037];

    auto g_x_y_0_0_yy_yy_z_xx = buffer_1100_ddpd[1038];

    auto g_x_y_0_0_yy_yy_z_xy = buffer_1100_ddpd[1039];

    auto g_x_y_0_0_yy_yy_z_xz = buffer_1100_ddpd[1040];

    auto g_x_y_0_0_yy_yy_z_yy = buffer_1100_ddpd[1041];

    auto g_x_y_0_0_yy_yy_z_yz = buffer_1100_ddpd[1042];

    auto g_x_y_0_0_yy_yy_z_zz = buffer_1100_ddpd[1043];

    auto g_x_y_0_0_yy_yz_x_xx = buffer_1100_ddpd[1044];

    auto g_x_y_0_0_yy_yz_x_xy = buffer_1100_ddpd[1045];

    auto g_x_y_0_0_yy_yz_x_xz = buffer_1100_ddpd[1046];

    auto g_x_y_0_0_yy_yz_x_yy = buffer_1100_ddpd[1047];

    auto g_x_y_0_0_yy_yz_x_yz = buffer_1100_ddpd[1048];

    auto g_x_y_0_0_yy_yz_x_zz = buffer_1100_ddpd[1049];

    auto g_x_y_0_0_yy_yz_y_xx = buffer_1100_ddpd[1050];

    auto g_x_y_0_0_yy_yz_y_xy = buffer_1100_ddpd[1051];

    auto g_x_y_0_0_yy_yz_y_xz = buffer_1100_ddpd[1052];

    auto g_x_y_0_0_yy_yz_y_yy = buffer_1100_ddpd[1053];

    auto g_x_y_0_0_yy_yz_y_yz = buffer_1100_ddpd[1054];

    auto g_x_y_0_0_yy_yz_y_zz = buffer_1100_ddpd[1055];

    auto g_x_y_0_0_yy_yz_z_xx = buffer_1100_ddpd[1056];

    auto g_x_y_0_0_yy_yz_z_xy = buffer_1100_ddpd[1057];

    auto g_x_y_0_0_yy_yz_z_xz = buffer_1100_ddpd[1058];

    auto g_x_y_0_0_yy_yz_z_yy = buffer_1100_ddpd[1059];

    auto g_x_y_0_0_yy_yz_z_yz = buffer_1100_ddpd[1060];

    auto g_x_y_0_0_yy_yz_z_zz = buffer_1100_ddpd[1061];

    auto g_x_y_0_0_yy_zz_x_xx = buffer_1100_ddpd[1062];

    auto g_x_y_0_0_yy_zz_x_xy = buffer_1100_ddpd[1063];

    auto g_x_y_0_0_yy_zz_x_xz = buffer_1100_ddpd[1064];

    auto g_x_y_0_0_yy_zz_x_yy = buffer_1100_ddpd[1065];

    auto g_x_y_0_0_yy_zz_x_yz = buffer_1100_ddpd[1066];

    auto g_x_y_0_0_yy_zz_x_zz = buffer_1100_ddpd[1067];

    auto g_x_y_0_0_yy_zz_y_xx = buffer_1100_ddpd[1068];

    auto g_x_y_0_0_yy_zz_y_xy = buffer_1100_ddpd[1069];

    auto g_x_y_0_0_yy_zz_y_xz = buffer_1100_ddpd[1070];

    auto g_x_y_0_0_yy_zz_y_yy = buffer_1100_ddpd[1071];

    auto g_x_y_0_0_yy_zz_y_yz = buffer_1100_ddpd[1072];

    auto g_x_y_0_0_yy_zz_y_zz = buffer_1100_ddpd[1073];

    auto g_x_y_0_0_yy_zz_z_xx = buffer_1100_ddpd[1074];

    auto g_x_y_0_0_yy_zz_z_xy = buffer_1100_ddpd[1075];

    auto g_x_y_0_0_yy_zz_z_xz = buffer_1100_ddpd[1076];

    auto g_x_y_0_0_yy_zz_z_yy = buffer_1100_ddpd[1077];

    auto g_x_y_0_0_yy_zz_z_yz = buffer_1100_ddpd[1078];

    auto g_x_y_0_0_yy_zz_z_zz = buffer_1100_ddpd[1079];

    auto g_x_y_0_0_yz_xx_x_xx = buffer_1100_ddpd[1080];

    auto g_x_y_0_0_yz_xx_x_xy = buffer_1100_ddpd[1081];

    auto g_x_y_0_0_yz_xx_x_xz = buffer_1100_ddpd[1082];

    auto g_x_y_0_0_yz_xx_x_yy = buffer_1100_ddpd[1083];

    auto g_x_y_0_0_yz_xx_x_yz = buffer_1100_ddpd[1084];

    auto g_x_y_0_0_yz_xx_x_zz = buffer_1100_ddpd[1085];

    auto g_x_y_0_0_yz_xx_y_xx = buffer_1100_ddpd[1086];

    auto g_x_y_0_0_yz_xx_y_xy = buffer_1100_ddpd[1087];

    auto g_x_y_0_0_yz_xx_y_xz = buffer_1100_ddpd[1088];

    auto g_x_y_0_0_yz_xx_y_yy = buffer_1100_ddpd[1089];

    auto g_x_y_0_0_yz_xx_y_yz = buffer_1100_ddpd[1090];

    auto g_x_y_0_0_yz_xx_y_zz = buffer_1100_ddpd[1091];

    auto g_x_y_0_0_yz_xx_z_xx = buffer_1100_ddpd[1092];

    auto g_x_y_0_0_yz_xx_z_xy = buffer_1100_ddpd[1093];

    auto g_x_y_0_0_yz_xx_z_xz = buffer_1100_ddpd[1094];

    auto g_x_y_0_0_yz_xx_z_yy = buffer_1100_ddpd[1095];

    auto g_x_y_0_0_yz_xx_z_yz = buffer_1100_ddpd[1096];

    auto g_x_y_0_0_yz_xx_z_zz = buffer_1100_ddpd[1097];

    auto g_x_y_0_0_yz_xy_x_xx = buffer_1100_ddpd[1098];

    auto g_x_y_0_0_yz_xy_x_xy = buffer_1100_ddpd[1099];

    auto g_x_y_0_0_yz_xy_x_xz = buffer_1100_ddpd[1100];

    auto g_x_y_0_0_yz_xy_x_yy = buffer_1100_ddpd[1101];

    auto g_x_y_0_0_yz_xy_x_yz = buffer_1100_ddpd[1102];

    auto g_x_y_0_0_yz_xy_x_zz = buffer_1100_ddpd[1103];

    auto g_x_y_0_0_yz_xy_y_xx = buffer_1100_ddpd[1104];

    auto g_x_y_0_0_yz_xy_y_xy = buffer_1100_ddpd[1105];

    auto g_x_y_0_0_yz_xy_y_xz = buffer_1100_ddpd[1106];

    auto g_x_y_0_0_yz_xy_y_yy = buffer_1100_ddpd[1107];

    auto g_x_y_0_0_yz_xy_y_yz = buffer_1100_ddpd[1108];

    auto g_x_y_0_0_yz_xy_y_zz = buffer_1100_ddpd[1109];

    auto g_x_y_0_0_yz_xy_z_xx = buffer_1100_ddpd[1110];

    auto g_x_y_0_0_yz_xy_z_xy = buffer_1100_ddpd[1111];

    auto g_x_y_0_0_yz_xy_z_xz = buffer_1100_ddpd[1112];

    auto g_x_y_0_0_yz_xy_z_yy = buffer_1100_ddpd[1113];

    auto g_x_y_0_0_yz_xy_z_yz = buffer_1100_ddpd[1114];

    auto g_x_y_0_0_yz_xy_z_zz = buffer_1100_ddpd[1115];

    auto g_x_y_0_0_yz_xz_x_xx = buffer_1100_ddpd[1116];

    auto g_x_y_0_0_yz_xz_x_xy = buffer_1100_ddpd[1117];

    auto g_x_y_0_0_yz_xz_x_xz = buffer_1100_ddpd[1118];

    auto g_x_y_0_0_yz_xz_x_yy = buffer_1100_ddpd[1119];

    auto g_x_y_0_0_yz_xz_x_yz = buffer_1100_ddpd[1120];

    auto g_x_y_0_0_yz_xz_x_zz = buffer_1100_ddpd[1121];

    auto g_x_y_0_0_yz_xz_y_xx = buffer_1100_ddpd[1122];

    auto g_x_y_0_0_yz_xz_y_xy = buffer_1100_ddpd[1123];

    auto g_x_y_0_0_yz_xz_y_xz = buffer_1100_ddpd[1124];

    auto g_x_y_0_0_yz_xz_y_yy = buffer_1100_ddpd[1125];

    auto g_x_y_0_0_yz_xz_y_yz = buffer_1100_ddpd[1126];

    auto g_x_y_0_0_yz_xz_y_zz = buffer_1100_ddpd[1127];

    auto g_x_y_0_0_yz_xz_z_xx = buffer_1100_ddpd[1128];

    auto g_x_y_0_0_yz_xz_z_xy = buffer_1100_ddpd[1129];

    auto g_x_y_0_0_yz_xz_z_xz = buffer_1100_ddpd[1130];

    auto g_x_y_0_0_yz_xz_z_yy = buffer_1100_ddpd[1131];

    auto g_x_y_0_0_yz_xz_z_yz = buffer_1100_ddpd[1132];

    auto g_x_y_0_0_yz_xz_z_zz = buffer_1100_ddpd[1133];

    auto g_x_y_0_0_yz_yy_x_xx = buffer_1100_ddpd[1134];

    auto g_x_y_0_0_yz_yy_x_xy = buffer_1100_ddpd[1135];

    auto g_x_y_0_0_yz_yy_x_xz = buffer_1100_ddpd[1136];

    auto g_x_y_0_0_yz_yy_x_yy = buffer_1100_ddpd[1137];

    auto g_x_y_0_0_yz_yy_x_yz = buffer_1100_ddpd[1138];

    auto g_x_y_0_0_yz_yy_x_zz = buffer_1100_ddpd[1139];

    auto g_x_y_0_0_yz_yy_y_xx = buffer_1100_ddpd[1140];

    auto g_x_y_0_0_yz_yy_y_xy = buffer_1100_ddpd[1141];

    auto g_x_y_0_0_yz_yy_y_xz = buffer_1100_ddpd[1142];

    auto g_x_y_0_0_yz_yy_y_yy = buffer_1100_ddpd[1143];

    auto g_x_y_0_0_yz_yy_y_yz = buffer_1100_ddpd[1144];

    auto g_x_y_0_0_yz_yy_y_zz = buffer_1100_ddpd[1145];

    auto g_x_y_0_0_yz_yy_z_xx = buffer_1100_ddpd[1146];

    auto g_x_y_0_0_yz_yy_z_xy = buffer_1100_ddpd[1147];

    auto g_x_y_0_0_yz_yy_z_xz = buffer_1100_ddpd[1148];

    auto g_x_y_0_0_yz_yy_z_yy = buffer_1100_ddpd[1149];

    auto g_x_y_0_0_yz_yy_z_yz = buffer_1100_ddpd[1150];

    auto g_x_y_0_0_yz_yy_z_zz = buffer_1100_ddpd[1151];

    auto g_x_y_0_0_yz_yz_x_xx = buffer_1100_ddpd[1152];

    auto g_x_y_0_0_yz_yz_x_xy = buffer_1100_ddpd[1153];

    auto g_x_y_0_0_yz_yz_x_xz = buffer_1100_ddpd[1154];

    auto g_x_y_0_0_yz_yz_x_yy = buffer_1100_ddpd[1155];

    auto g_x_y_0_0_yz_yz_x_yz = buffer_1100_ddpd[1156];

    auto g_x_y_0_0_yz_yz_x_zz = buffer_1100_ddpd[1157];

    auto g_x_y_0_0_yz_yz_y_xx = buffer_1100_ddpd[1158];

    auto g_x_y_0_0_yz_yz_y_xy = buffer_1100_ddpd[1159];

    auto g_x_y_0_0_yz_yz_y_xz = buffer_1100_ddpd[1160];

    auto g_x_y_0_0_yz_yz_y_yy = buffer_1100_ddpd[1161];

    auto g_x_y_0_0_yz_yz_y_yz = buffer_1100_ddpd[1162];

    auto g_x_y_0_0_yz_yz_y_zz = buffer_1100_ddpd[1163];

    auto g_x_y_0_0_yz_yz_z_xx = buffer_1100_ddpd[1164];

    auto g_x_y_0_0_yz_yz_z_xy = buffer_1100_ddpd[1165];

    auto g_x_y_0_0_yz_yz_z_xz = buffer_1100_ddpd[1166];

    auto g_x_y_0_0_yz_yz_z_yy = buffer_1100_ddpd[1167];

    auto g_x_y_0_0_yz_yz_z_yz = buffer_1100_ddpd[1168];

    auto g_x_y_0_0_yz_yz_z_zz = buffer_1100_ddpd[1169];

    auto g_x_y_0_0_yz_zz_x_xx = buffer_1100_ddpd[1170];

    auto g_x_y_0_0_yz_zz_x_xy = buffer_1100_ddpd[1171];

    auto g_x_y_0_0_yz_zz_x_xz = buffer_1100_ddpd[1172];

    auto g_x_y_0_0_yz_zz_x_yy = buffer_1100_ddpd[1173];

    auto g_x_y_0_0_yz_zz_x_yz = buffer_1100_ddpd[1174];

    auto g_x_y_0_0_yz_zz_x_zz = buffer_1100_ddpd[1175];

    auto g_x_y_0_0_yz_zz_y_xx = buffer_1100_ddpd[1176];

    auto g_x_y_0_0_yz_zz_y_xy = buffer_1100_ddpd[1177];

    auto g_x_y_0_0_yz_zz_y_xz = buffer_1100_ddpd[1178];

    auto g_x_y_0_0_yz_zz_y_yy = buffer_1100_ddpd[1179];

    auto g_x_y_0_0_yz_zz_y_yz = buffer_1100_ddpd[1180];

    auto g_x_y_0_0_yz_zz_y_zz = buffer_1100_ddpd[1181];

    auto g_x_y_0_0_yz_zz_z_xx = buffer_1100_ddpd[1182];

    auto g_x_y_0_0_yz_zz_z_xy = buffer_1100_ddpd[1183];

    auto g_x_y_0_0_yz_zz_z_xz = buffer_1100_ddpd[1184];

    auto g_x_y_0_0_yz_zz_z_yy = buffer_1100_ddpd[1185];

    auto g_x_y_0_0_yz_zz_z_yz = buffer_1100_ddpd[1186];

    auto g_x_y_0_0_yz_zz_z_zz = buffer_1100_ddpd[1187];

    auto g_x_y_0_0_zz_xx_x_xx = buffer_1100_ddpd[1188];

    auto g_x_y_0_0_zz_xx_x_xy = buffer_1100_ddpd[1189];

    auto g_x_y_0_0_zz_xx_x_xz = buffer_1100_ddpd[1190];

    auto g_x_y_0_0_zz_xx_x_yy = buffer_1100_ddpd[1191];

    auto g_x_y_0_0_zz_xx_x_yz = buffer_1100_ddpd[1192];

    auto g_x_y_0_0_zz_xx_x_zz = buffer_1100_ddpd[1193];

    auto g_x_y_0_0_zz_xx_y_xx = buffer_1100_ddpd[1194];

    auto g_x_y_0_0_zz_xx_y_xy = buffer_1100_ddpd[1195];

    auto g_x_y_0_0_zz_xx_y_xz = buffer_1100_ddpd[1196];

    auto g_x_y_0_0_zz_xx_y_yy = buffer_1100_ddpd[1197];

    auto g_x_y_0_0_zz_xx_y_yz = buffer_1100_ddpd[1198];

    auto g_x_y_0_0_zz_xx_y_zz = buffer_1100_ddpd[1199];

    auto g_x_y_0_0_zz_xx_z_xx = buffer_1100_ddpd[1200];

    auto g_x_y_0_0_zz_xx_z_xy = buffer_1100_ddpd[1201];

    auto g_x_y_0_0_zz_xx_z_xz = buffer_1100_ddpd[1202];

    auto g_x_y_0_0_zz_xx_z_yy = buffer_1100_ddpd[1203];

    auto g_x_y_0_0_zz_xx_z_yz = buffer_1100_ddpd[1204];

    auto g_x_y_0_0_zz_xx_z_zz = buffer_1100_ddpd[1205];

    auto g_x_y_0_0_zz_xy_x_xx = buffer_1100_ddpd[1206];

    auto g_x_y_0_0_zz_xy_x_xy = buffer_1100_ddpd[1207];

    auto g_x_y_0_0_zz_xy_x_xz = buffer_1100_ddpd[1208];

    auto g_x_y_0_0_zz_xy_x_yy = buffer_1100_ddpd[1209];

    auto g_x_y_0_0_zz_xy_x_yz = buffer_1100_ddpd[1210];

    auto g_x_y_0_0_zz_xy_x_zz = buffer_1100_ddpd[1211];

    auto g_x_y_0_0_zz_xy_y_xx = buffer_1100_ddpd[1212];

    auto g_x_y_0_0_zz_xy_y_xy = buffer_1100_ddpd[1213];

    auto g_x_y_0_0_zz_xy_y_xz = buffer_1100_ddpd[1214];

    auto g_x_y_0_0_zz_xy_y_yy = buffer_1100_ddpd[1215];

    auto g_x_y_0_0_zz_xy_y_yz = buffer_1100_ddpd[1216];

    auto g_x_y_0_0_zz_xy_y_zz = buffer_1100_ddpd[1217];

    auto g_x_y_0_0_zz_xy_z_xx = buffer_1100_ddpd[1218];

    auto g_x_y_0_0_zz_xy_z_xy = buffer_1100_ddpd[1219];

    auto g_x_y_0_0_zz_xy_z_xz = buffer_1100_ddpd[1220];

    auto g_x_y_0_0_zz_xy_z_yy = buffer_1100_ddpd[1221];

    auto g_x_y_0_0_zz_xy_z_yz = buffer_1100_ddpd[1222];

    auto g_x_y_0_0_zz_xy_z_zz = buffer_1100_ddpd[1223];

    auto g_x_y_0_0_zz_xz_x_xx = buffer_1100_ddpd[1224];

    auto g_x_y_0_0_zz_xz_x_xy = buffer_1100_ddpd[1225];

    auto g_x_y_0_0_zz_xz_x_xz = buffer_1100_ddpd[1226];

    auto g_x_y_0_0_zz_xz_x_yy = buffer_1100_ddpd[1227];

    auto g_x_y_0_0_zz_xz_x_yz = buffer_1100_ddpd[1228];

    auto g_x_y_0_0_zz_xz_x_zz = buffer_1100_ddpd[1229];

    auto g_x_y_0_0_zz_xz_y_xx = buffer_1100_ddpd[1230];

    auto g_x_y_0_0_zz_xz_y_xy = buffer_1100_ddpd[1231];

    auto g_x_y_0_0_zz_xz_y_xz = buffer_1100_ddpd[1232];

    auto g_x_y_0_0_zz_xz_y_yy = buffer_1100_ddpd[1233];

    auto g_x_y_0_0_zz_xz_y_yz = buffer_1100_ddpd[1234];

    auto g_x_y_0_0_zz_xz_y_zz = buffer_1100_ddpd[1235];

    auto g_x_y_0_0_zz_xz_z_xx = buffer_1100_ddpd[1236];

    auto g_x_y_0_0_zz_xz_z_xy = buffer_1100_ddpd[1237];

    auto g_x_y_0_0_zz_xz_z_xz = buffer_1100_ddpd[1238];

    auto g_x_y_0_0_zz_xz_z_yy = buffer_1100_ddpd[1239];

    auto g_x_y_0_0_zz_xz_z_yz = buffer_1100_ddpd[1240];

    auto g_x_y_0_0_zz_xz_z_zz = buffer_1100_ddpd[1241];

    auto g_x_y_0_0_zz_yy_x_xx = buffer_1100_ddpd[1242];

    auto g_x_y_0_0_zz_yy_x_xy = buffer_1100_ddpd[1243];

    auto g_x_y_0_0_zz_yy_x_xz = buffer_1100_ddpd[1244];

    auto g_x_y_0_0_zz_yy_x_yy = buffer_1100_ddpd[1245];

    auto g_x_y_0_0_zz_yy_x_yz = buffer_1100_ddpd[1246];

    auto g_x_y_0_0_zz_yy_x_zz = buffer_1100_ddpd[1247];

    auto g_x_y_0_0_zz_yy_y_xx = buffer_1100_ddpd[1248];

    auto g_x_y_0_0_zz_yy_y_xy = buffer_1100_ddpd[1249];

    auto g_x_y_0_0_zz_yy_y_xz = buffer_1100_ddpd[1250];

    auto g_x_y_0_0_zz_yy_y_yy = buffer_1100_ddpd[1251];

    auto g_x_y_0_0_zz_yy_y_yz = buffer_1100_ddpd[1252];

    auto g_x_y_0_0_zz_yy_y_zz = buffer_1100_ddpd[1253];

    auto g_x_y_0_0_zz_yy_z_xx = buffer_1100_ddpd[1254];

    auto g_x_y_0_0_zz_yy_z_xy = buffer_1100_ddpd[1255];

    auto g_x_y_0_0_zz_yy_z_xz = buffer_1100_ddpd[1256];

    auto g_x_y_0_0_zz_yy_z_yy = buffer_1100_ddpd[1257];

    auto g_x_y_0_0_zz_yy_z_yz = buffer_1100_ddpd[1258];

    auto g_x_y_0_0_zz_yy_z_zz = buffer_1100_ddpd[1259];

    auto g_x_y_0_0_zz_yz_x_xx = buffer_1100_ddpd[1260];

    auto g_x_y_0_0_zz_yz_x_xy = buffer_1100_ddpd[1261];

    auto g_x_y_0_0_zz_yz_x_xz = buffer_1100_ddpd[1262];

    auto g_x_y_0_0_zz_yz_x_yy = buffer_1100_ddpd[1263];

    auto g_x_y_0_0_zz_yz_x_yz = buffer_1100_ddpd[1264];

    auto g_x_y_0_0_zz_yz_x_zz = buffer_1100_ddpd[1265];

    auto g_x_y_0_0_zz_yz_y_xx = buffer_1100_ddpd[1266];

    auto g_x_y_0_0_zz_yz_y_xy = buffer_1100_ddpd[1267];

    auto g_x_y_0_0_zz_yz_y_xz = buffer_1100_ddpd[1268];

    auto g_x_y_0_0_zz_yz_y_yy = buffer_1100_ddpd[1269];

    auto g_x_y_0_0_zz_yz_y_yz = buffer_1100_ddpd[1270];

    auto g_x_y_0_0_zz_yz_y_zz = buffer_1100_ddpd[1271];

    auto g_x_y_0_0_zz_yz_z_xx = buffer_1100_ddpd[1272];

    auto g_x_y_0_0_zz_yz_z_xy = buffer_1100_ddpd[1273];

    auto g_x_y_0_0_zz_yz_z_xz = buffer_1100_ddpd[1274];

    auto g_x_y_0_0_zz_yz_z_yy = buffer_1100_ddpd[1275];

    auto g_x_y_0_0_zz_yz_z_yz = buffer_1100_ddpd[1276];

    auto g_x_y_0_0_zz_yz_z_zz = buffer_1100_ddpd[1277];

    auto g_x_y_0_0_zz_zz_x_xx = buffer_1100_ddpd[1278];

    auto g_x_y_0_0_zz_zz_x_xy = buffer_1100_ddpd[1279];

    auto g_x_y_0_0_zz_zz_x_xz = buffer_1100_ddpd[1280];

    auto g_x_y_0_0_zz_zz_x_yy = buffer_1100_ddpd[1281];

    auto g_x_y_0_0_zz_zz_x_yz = buffer_1100_ddpd[1282];

    auto g_x_y_0_0_zz_zz_x_zz = buffer_1100_ddpd[1283];

    auto g_x_y_0_0_zz_zz_y_xx = buffer_1100_ddpd[1284];

    auto g_x_y_0_0_zz_zz_y_xy = buffer_1100_ddpd[1285];

    auto g_x_y_0_0_zz_zz_y_xz = buffer_1100_ddpd[1286];

    auto g_x_y_0_0_zz_zz_y_yy = buffer_1100_ddpd[1287];

    auto g_x_y_0_0_zz_zz_y_yz = buffer_1100_ddpd[1288];

    auto g_x_y_0_0_zz_zz_y_zz = buffer_1100_ddpd[1289];

    auto g_x_y_0_0_zz_zz_z_xx = buffer_1100_ddpd[1290];

    auto g_x_y_0_0_zz_zz_z_xy = buffer_1100_ddpd[1291];

    auto g_x_y_0_0_zz_zz_z_xz = buffer_1100_ddpd[1292];

    auto g_x_y_0_0_zz_zz_z_yy = buffer_1100_ddpd[1293];

    auto g_x_y_0_0_zz_zz_z_yz = buffer_1100_ddpd[1294];

    auto g_x_y_0_0_zz_zz_z_zz = buffer_1100_ddpd[1295];

    auto g_x_z_0_0_xx_xx_x_xx = buffer_1100_ddpd[1296];

    auto g_x_z_0_0_xx_xx_x_xy = buffer_1100_ddpd[1297];

    auto g_x_z_0_0_xx_xx_x_xz = buffer_1100_ddpd[1298];

    auto g_x_z_0_0_xx_xx_x_yy = buffer_1100_ddpd[1299];

    auto g_x_z_0_0_xx_xx_x_yz = buffer_1100_ddpd[1300];

    auto g_x_z_0_0_xx_xx_x_zz = buffer_1100_ddpd[1301];

    auto g_x_z_0_0_xx_xx_y_xx = buffer_1100_ddpd[1302];

    auto g_x_z_0_0_xx_xx_y_xy = buffer_1100_ddpd[1303];

    auto g_x_z_0_0_xx_xx_y_xz = buffer_1100_ddpd[1304];

    auto g_x_z_0_0_xx_xx_y_yy = buffer_1100_ddpd[1305];

    auto g_x_z_0_0_xx_xx_y_yz = buffer_1100_ddpd[1306];

    auto g_x_z_0_0_xx_xx_y_zz = buffer_1100_ddpd[1307];

    auto g_x_z_0_0_xx_xx_z_xx = buffer_1100_ddpd[1308];

    auto g_x_z_0_0_xx_xx_z_xy = buffer_1100_ddpd[1309];

    auto g_x_z_0_0_xx_xx_z_xz = buffer_1100_ddpd[1310];

    auto g_x_z_0_0_xx_xx_z_yy = buffer_1100_ddpd[1311];

    auto g_x_z_0_0_xx_xx_z_yz = buffer_1100_ddpd[1312];

    auto g_x_z_0_0_xx_xx_z_zz = buffer_1100_ddpd[1313];

    auto g_x_z_0_0_xx_xy_x_xx = buffer_1100_ddpd[1314];

    auto g_x_z_0_0_xx_xy_x_xy = buffer_1100_ddpd[1315];

    auto g_x_z_0_0_xx_xy_x_xz = buffer_1100_ddpd[1316];

    auto g_x_z_0_0_xx_xy_x_yy = buffer_1100_ddpd[1317];

    auto g_x_z_0_0_xx_xy_x_yz = buffer_1100_ddpd[1318];

    auto g_x_z_0_0_xx_xy_x_zz = buffer_1100_ddpd[1319];

    auto g_x_z_0_0_xx_xy_y_xx = buffer_1100_ddpd[1320];

    auto g_x_z_0_0_xx_xy_y_xy = buffer_1100_ddpd[1321];

    auto g_x_z_0_0_xx_xy_y_xz = buffer_1100_ddpd[1322];

    auto g_x_z_0_0_xx_xy_y_yy = buffer_1100_ddpd[1323];

    auto g_x_z_0_0_xx_xy_y_yz = buffer_1100_ddpd[1324];

    auto g_x_z_0_0_xx_xy_y_zz = buffer_1100_ddpd[1325];

    auto g_x_z_0_0_xx_xy_z_xx = buffer_1100_ddpd[1326];

    auto g_x_z_0_0_xx_xy_z_xy = buffer_1100_ddpd[1327];

    auto g_x_z_0_0_xx_xy_z_xz = buffer_1100_ddpd[1328];

    auto g_x_z_0_0_xx_xy_z_yy = buffer_1100_ddpd[1329];

    auto g_x_z_0_0_xx_xy_z_yz = buffer_1100_ddpd[1330];

    auto g_x_z_0_0_xx_xy_z_zz = buffer_1100_ddpd[1331];

    auto g_x_z_0_0_xx_xz_x_xx = buffer_1100_ddpd[1332];

    auto g_x_z_0_0_xx_xz_x_xy = buffer_1100_ddpd[1333];

    auto g_x_z_0_0_xx_xz_x_xz = buffer_1100_ddpd[1334];

    auto g_x_z_0_0_xx_xz_x_yy = buffer_1100_ddpd[1335];

    auto g_x_z_0_0_xx_xz_x_yz = buffer_1100_ddpd[1336];

    auto g_x_z_0_0_xx_xz_x_zz = buffer_1100_ddpd[1337];

    auto g_x_z_0_0_xx_xz_y_xx = buffer_1100_ddpd[1338];

    auto g_x_z_0_0_xx_xz_y_xy = buffer_1100_ddpd[1339];

    auto g_x_z_0_0_xx_xz_y_xz = buffer_1100_ddpd[1340];

    auto g_x_z_0_0_xx_xz_y_yy = buffer_1100_ddpd[1341];

    auto g_x_z_0_0_xx_xz_y_yz = buffer_1100_ddpd[1342];

    auto g_x_z_0_0_xx_xz_y_zz = buffer_1100_ddpd[1343];

    auto g_x_z_0_0_xx_xz_z_xx = buffer_1100_ddpd[1344];

    auto g_x_z_0_0_xx_xz_z_xy = buffer_1100_ddpd[1345];

    auto g_x_z_0_0_xx_xz_z_xz = buffer_1100_ddpd[1346];

    auto g_x_z_0_0_xx_xz_z_yy = buffer_1100_ddpd[1347];

    auto g_x_z_0_0_xx_xz_z_yz = buffer_1100_ddpd[1348];

    auto g_x_z_0_0_xx_xz_z_zz = buffer_1100_ddpd[1349];

    auto g_x_z_0_0_xx_yy_x_xx = buffer_1100_ddpd[1350];

    auto g_x_z_0_0_xx_yy_x_xy = buffer_1100_ddpd[1351];

    auto g_x_z_0_0_xx_yy_x_xz = buffer_1100_ddpd[1352];

    auto g_x_z_0_0_xx_yy_x_yy = buffer_1100_ddpd[1353];

    auto g_x_z_0_0_xx_yy_x_yz = buffer_1100_ddpd[1354];

    auto g_x_z_0_0_xx_yy_x_zz = buffer_1100_ddpd[1355];

    auto g_x_z_0_0_xx_yy_y_xx = buffer_1100_ddpd[1356];

    auto g_x_z_0_0_xx_yy_y_xy = buffer_1100_ddpd[1357];

    auto g_x_z_0_0_xx_yy_y_xz = buffer_1100_ddpd[1358];

    auto g_x_z_0_0_xx_yy_y_yy = buffer_1100_ddpd[1359];

    auto g_x_z_0_0_xx_yy_y_yz = buffer_1100_ddpd[1360];

    auto g_x_z_0_0_xx_yy_y_zz = buffer_1100_ddpd[1361];

    auto g_x_z_0_0_xx_yy_z_xx = buffer_1100_ddpd[1362];

    auto g_x_z_0_0_xx_yy_z_xy = buffer_1100_ddpd[1363];

    auto g_x_z_0_0_xx_yy_z_xz = buffer_1100_ddpd[1364];

    auto g_x_z_0_0_xx_yy_z_yy = buffer_1100_ddpd[1365];

    auto g_x_z_0_0_xx_yy_z_yz = buffer_1100_ddpd[1366];

    auto g_x_z_0_0_xx_yy_z_zz = buffer_1100_ddpd[1367];

    auto g_x_z_0_0_xx_yz_x_xx = buffer_1100_ddpd[1368];

    auto g_x_z_0_0_xx_yz_x_xy = buffer_1100_ddpd[1369];

    auto g_x_z_0_0_xx_yz_x_xz = buffer_1100_ddpd[1370];

    auto g_x_z_0_0_xx_yz_x_yy = buffer_1100_ddpd[1371];

    auto g_x_z_0_0_xx_yz_x_yz = buffer_1100_ddpd[1372];

    auto g_x_z_0_0_xx_yz_x_zz = buffer_1100_ddpd[1373];

    auto g_x_z_0_0_xx_yz_y_xx = buffer_1100_ddpd[1374];

    auto g_x_z_0_0_xx_yz_y_xy = buffer_1100_ddpd[1375];

    auto g_x_z_0_0_xx_yz_y_xz = buffer_1100_ddpd[1376];

    auto g_x_z_0_0_xx_yz_y_yy = buffer_1100_ddpd[1377];

    auto g_x_z_0_0_xx_yz_y_yz = buffer_1100_ddpd[1378];

    auto g_x_z_0_0_xx_yz_y_zz = buffer_1100_ddpd[1379];

    auto g_x_z_0_0_xx_yz_z_xx = buffer_1100_ddpd[1380];

    auto g_x_z_0_0_xx_yz_z_xy = buffer_1100_ddpd[1381];

    auto g_x_z_0_0_xx_yz_z_xz = buffer_1100_ddpd[1382];

    auto g_x_z_0_0_xx_yz_z_yy = buffer_1100_ddpd[1383];

    auto g_x_z_0_0_xx_yz_z_yz = buffer_1100_ddpd[1384];

    auto g_x_z_0_0_xx_yz_z_zz = buffer_1100_ddpd[1385];

    auto g_x_z_0_0_xx_zz_x_xx = buffer_1100_ddpd[1386];

    auto g_x_z_0_0_xx_zz_x_xy = buffer_1100_ddpd[1387];

    auto g_x_z_0_0_xx_zz_x_xz = buffer_1100_ddpd[1388];

    auto g_x_z_0_0_xx_zz_x_yy = buffer_1100_ddpd[1389];

    auto g_x_z_0_0_xx_zz_x_yz = buffer_1100_ddpd[1390];

    auto g_x_z_0_0_xx_zz_x_zz = buffer_1100_ddpd[1391];

    auto g_x_z_0_0_xx_zz_y_xx = buffer_1100_ddpd[1392];

    auto g_x_z_0_0_xx_zz_y_xy = buffer_1100_ddpd[1393];

    auto g_x_z_0_0_xx_zz_y_xz = buffer_1100_ddpd[1394];

    auto g_x_z_0_0_xx_zz_y_yy = buffer_1100_ddpd[1395];

    auto g_x_z_0_0_xx_zz_y_yz = buffer_1100_ddpd[1396];

    auto g_x_z_0_0_xx_zz_y_zz = buffer_1100_ddpd[1397];

    auto g_x_z_0_0_xx_zz_z_xx = buffer_1100_ddpd[1398];

    auto g_x_z_0_0_xx_zz_z_xy = buffer_1100_ddpd[1399];

    auto g_x_z_0_0_xx_zz_z_xz = buffer_1100_ddpd[1400];

    auto g_x_z_0_0_xx_zz_z_yy = buffer_1100_ddpd[1401];

    auto g_x_z_0_0_xx_zz_z_yz = buffer_1100_ddpd[1402];

    auto g_x_z_0_0_xx_zz_z_zz = buffer_1100_ddpd[1403];

    auto g_x_z_0_0_xy_xx_x_xx = buffer_1100_ddpd[1404];

    auto g_x_z_0_0_xy_xx_x_xy = buffer_1100_ddpd[1405];

    auto g_x_z_0_0_xy_xx_x_xz = buffer_1100_ddpd[1406];

    auto g_x_z_0_0_xy_xx_x_yy = buffer_1100_ddpd[1407];

    auto g_x_z_0_0_xy_xx_x_yz = buffer_1100_ddpd[1408];

    auto g_x_z_0_0_xy_xx_x_zz = buffer_1100_ddpd[1409];

    auto g_x_z_0_0_xy_xx_y_xx = buffer_1100_ddpd[1410];

    auto g_x_z_0_0_xy_xx_y_xy = buffer_1100_ddpd[1411];

    auto g_x_z_0_0_xy_xx_y_xz = buffer_1100_ddpd[1412];

    auto g_x_z_0_0_xy_xx_y_yy = buffer_1100_ddpd[1413];

    auto g_x_z_0_0_xy_xx_y_yz = buffer_1100_ddpd[1414];

    auto g_x_z_0_0_xy_xx_y_zz = buffer_1100_ddpd[1415];

    auto g_x_z_0_0_xy_xx_z_xx = buffer_1100_ddpd[1416];

    auto g_x_z_0_0_xy_xx_z_xy = buffer_1100_ddpd[1417];

    auto g_x_z_0_0_xy_xx_z_xz = buffer_1100_ddpd[1418];

    auto g_x_z_0_0_xy_xx_z_yy = buffer_1100_ddpd[1419];

    auto g_x_z_0_0_xy_xx_z_yz = buffer_1100_ddpd[1420];

    auto g_x_z_0_0_xy_xx_z_zz = buffer_1100_ddpd[1421];

    auto g_x_z_0_0_xy_xy_x_xx = buffer_1100_ddpd[1422];

    auto g_x_z_0_0_xy_xy_x_xy = buffer_1100_ddpd[1423];

    auto g_x_z_0_0_xy_xy_x_xz = buffer_1100_ddpd[1424];

    auto g_x_z_0_0_xy_xy_x_yy = buffer_1100_ddpd[1425];

    auto g_x_z_0_0_xy_xy_x_yz = buffer_1100_ddpd[1426];

    auto g_x_z_0_0_xy_xy_x_zz = buffer_1100_ddpd[1427];

    auto g_x_z_0_0_xy_xy_y_xx = buffer_1100_ddpd[1428];

    auto g_x_z_0_0_xy_xy_y_xy = buffer_1100_ddpd[1429];

    auto g_x_z_0_0_xy_xy_y_xz = buffer_1100_ddpd[1430];

    auto g_x_z_0_0_xy_xy_y_yy = buffer_1100_ddpd[1431];

    auto g_x_z_0_0_xy_xy_y_yz = buffer_1100_ddpd[1432];

    auto g_x_z_0_0_xy_xy_y_zz = buffer_1100_ddpd[1433];

    auto g_x_z_0_0_xy_xy_z_xx = buffer_1100_ddpd[1434];

    auto g_x_z_0_0_xy_xy_z_xy = buffer_1100_ddpd[1435];

    auto g_x_z_0_0_xy_xy_z_xz = buffer_1100_ddpd[1436];

    auto g_x_z_0_0_xy_xy_z_yy = buffer_1100_ddpd[1437];

    auto g_x_z_0_0_xy_xy_z_yz = buffer_1100_ddpd[1438];

    auto g_x_z_0_0_xy_xy_z_zz = buffer_1100_ddpd[1439];

    auto g_x_z_0_0_xy_xz_x_xx = buffer_1100_ddpd[1440];

    auto g_x_z_0_0_xy_xz_x_xy = buffer_1100_ddpd[1441];

    auto g_x_z_0_0_xy_xz_x_xz = buffer_1100_ddpd[1442];

    auto g_x_z_0_0_xy_xz_x_yy = buffer_1100_ddpd[1443];

    auto g_x_z_0_0_xy_xz_x_yz = buffer_1100_ddpd[1444];

    auto g_x_z_0_0_xy_xz_x_zz = buffer_1100_ddpd[1445];

    auto g_x_z_0_0_xy_xz_y_xx = buffer_1100_ddpd[1446];

    auto g_x_z_0_0_xy_xz_y_xy = buffer_1100_ddpd[1447];

    auto g_x_z_0_0_xy_xz_y_xz = buffer_1100_ddpd[1448];

    auto g_x_z_0_0_xy_xz_y_yy = buffer_1100_ddpd[1449];

    auto g_x_z_0_0_xy_xz_y_yz = buffer_1100_ddpd[1450];

    auto g_x_z_0_0_xy_xz_y_zz = buffer_1100_ddpd[1451];

    auto g_x_z_0_0_xy_xz_z_xx = buffer_1100_ddpd[1452];

    auto g_x_z_0_0_xy_xz_z_xy = buffer_1100_ddpd[1453];

    auto g_x_z_0_0_xy_xz_z_xz = buffer_1100_ddpd[1454];

    auto g_x_z_0_0_xy_xz_z_yy = buffer_1100_ddpd[1455];

    auto g_x_z_0_0_xy_xz_z_yz = buffer_1100_ddpd[1456];

    auto g_x_z_0_0_xy_xz_z_zz = buffer_1100_ddpd[1457];

    auto g_x_z_0_0_xy_yy_x_xx = buffer_1100_ddpd[1458];

    auto g_x_z_0_0_xy_yy_x_xy = buffer_1100_ddpd[1459];

    auto g_x_z_0_0_xy_yy_x_xz = buffer_1100_ddpd[1460];

    auto g_x_z_0_0_xy_yy_x_yy = buffer_1100_ddpd[1461];

    auto g_x_z_0_0_xy_yy_x_yz = buffer_1100_ddpd[1462];

    auto g_x_z_0_0_xy_yy_x_zz = buffer_1100_ddpd[1463];

    auto g_x_z_0_0_xy_yy_y_xx = buffer_1100_ddpd[1464];

    auto g_x_z_0_0_xy_yy_y_xy = buffer_1100_ddpd[1465];

    auto g_x_z_0_0_xy_yy_y_xz = buffer_1100_ddpd[1466];

    auto g_x_z_0_0_xy_yy_y_yy = buffer_1100_ddpd[1467];

    auto g_x_z_0_0_xy_yy_y_yz = buffer_1100_ddpd[1468];

    auto g_x_z_0_0_xy_yy_y_zz = buffer_1100_ddpd[1469];

    auto g_x_z_0_0_xy_yy_z_xx = buffer_1100_ddpd[1470];

    auto g_x_z_0_0_xy_yy_z_xy = buffer_1100_ddpd[1471];

    auto g_x_z_0_0_xy_yy_z_xz = buffer_1100_ddpd[1472];

    auto g_x_z_0_0_xy_yy_z_yy = buffer_1100_ddpd[1473];

    auto g_x_z_0_0_xy_yy_z_yz = buffer_1100_ddpd[1474];

    auto g_x_z_0_0_xy_yy_z_zz = buffer_1100_ddpd[1475];

    auto g_x_z_0_0_xy_yz_x_xx = buffer_1100_ddpd[1476];

    auto g_x_z_0_0_xy_yz_x_xy = buffer_1100_ddpd[1477];

    auto g_x_z_0_0_xy_yz_x_xz = buffer_1100_ddpd[1478];

    auto g_x_z_0_0_xy_yz_x_yy = buffer_1100_ddpd[1479];

    auto g_x_z_0_0_xy_yz_x_yz = buffer_1100_ddpd[1480];

    auto g_x_z_0_0_xy_yz_x_zz = buffer_1100_ddpd[1481];

    auto g_x_z_0_0_xy_yz_y_xx = buffer_1100_ddpd[1482];

    auto g_x_z_0_0_xy_yz_y_xy = buffer_1100_ddpd[1483];

    auto g_x_z_0_0_xy_yz_y_xz = buffer_1100_ddpd[1484];

    auto g_x_z_0_0_xy_yz_y_yy = buffer_1100_ddpd[1485];

    auto g_x_z_0_0_xy_yz_y_yz = buffer_1100_ddpd[1486];

    auto g_x_z_0_0_xy_yz_y_zz = buffer_1100_ddpd[1487];

    auto g_x_z_0_0_xy_yz_z_xx = buffer_1100_ddpd[1488];

    auto g_x_z_0_0_xy_yz_z_xy = buffer_1100_ddpd[1489];

    auto g_x_z_0_0_xy_yz_z_xz = buffer_1100_ddpd[1490];

    auto g_x_z_0_0_xy_yz_z_yy = buffer_1100_ddpd[1491];

    auto g_x_z_0_0_xy_yz_z_yz = buffer_1100_ddpd[1492];

    auto g_x_z_0_0_xy_yz_z_zz = buffer_1100_ddpd[1493];

    auto g_x_z_0_0_xy_zz_x_xx = buffer_1100_ddpd[1494];

    auto g_x_z_0_0_xy_zz_x_xy = buffer_1100_ddpd[1495];

    auto g_x_z_0_0_xy_zz_x_xz = buffer_1100_ddpd[1496];

    auto g_x_z_0_0_xy_zz_x_yy = buffer_1100_ddpd[1497];

    auto g_x_z_0_0_xy_zz_x_yz = buffer_1100_ddpd[1498];

    auto g_x_z_0_0_xy_zz_x_zz = buffer_1100_ddpd[1499];

    auto g_x_z_0_0_xy_zz_y_xx = buffer_1100_ddpd[1500];

    auto g_x_z_0_0_xy_zz_y_xy = buffer_1100_ddpd[1501];

    auto g_x_z_0_0_xy_zz_y_xz = buffer_1100_ddpd[1502];

    auto g_x_z_0_0_xy_zz_y_yy = buffer_1100_ddpd[1503];

    auto g_x_z_0_0_xy_zz_y_yz = buffer_1100_ddpd[1504];

    auto g_x_z_0_0_xy_zz_y_zz = buffer_1100_ddpd[1505];

    auto g_x_z_0_0_xy_zz_z_xx = buffer_1100_ddpd[1506];

    auto g_x_z_0_0_xy_zz_z_xy = buffer_1100_ddpd[1507];

    auto g_x_z_0_0_xy_zz_z_xz = buffer_1100_ddpd[1508];

    auto g_x_z_0_0_xy_zz_z_yy = buffer_1100_ddpd[1509];

    auto g_x_z_0_0_xy_zz_z_yz = buffer_1100_ddpd[1510];

    auto g_x_z_0_0_xy_zz_z_zz = buffer_1100_ddpd[1511];

    auto g_x_z_0_0_xz_xx_x_xx = buffer_1100_ddpd[1512];

    auto g_x_z_0_0_xz_xx_x_xy = buffer_1100_ddpd[1513];

    auto g_x_z_0_0_xz_xx_x_xz = buffer_1100_ddpd[1514];

    auto g_x_z_0_0_xz_xx_x_yy = buffer_1100_ddpd[1515];

    auto g_x_z_0_0_xz_xx_x_yz = buffer_1100_ddpd[1516];

    auto g_x_z_0_0_xz_xx_x_zz = buffer_1100_ddpd[1517];

    auto g_x_z_0_0_xz_xx_y_xx = buffer_1100_ddpd[1518];

    auto g_x_z_0_0_xz_xx_y_xy = buffer_1100_ddpd[1519];

    auto g_x_z_0_0_xz_xx_y_xz = buffer_1100_ddpd[1520];

    auto g_x_z_0_0_xz_xx_y_yy = buffer_1100_ddpd[1521];

    auto g_x_z_0_0_xz_xx_y_yz = buffer_1100_ddpd[1522];

    auto g_x_z_0_0_xz_xx_y_zz = buffer_1100_ddpd[1523];

    auto g_x_z_0_0_xz_xx_z_xx = buffer_1100_ddpd[1524];

    auto g_x_z_0_0_xz_xx_z_xy = buffer_1100_ddpd[1525];

    auto g_x_z_0_0_xz_xx_z_xz = buffer_1100_ddpd[1526];

    auto g_x_z_0_0_xz_xx_z_yy = buffer_1100_ddpd[1527];

    auto g_x_z_0_0_xz_xx_z_yz = buffer_1100_ddpd[1528];

    auto g_x_z_0_0_xz_xx_z_zz = buffer_1100_ddpd[1529];

    auto g_x_z_0_0_xz_xy_x_xx = buffer_1100_ddpd[1530];

    auto g_x_z_0_0_xz_xy_x_xy = buffer_1100_ddpd[1531];

    auto g_x_z_0_0_xz_xy_x_xz = buffer_1100_ddpd[1532];

    auto g_x_z_0_0_xz_xy_x_yy = buffer_1100_ddpd[1533];

    auto g_x_z_0_0_xz_xy_x_yz = buffer_1100_ddpd[1534];

    auto g_x_z_0_0_xz_xy_x_zz = buffer_1100_ddpd[1535];

    auto g_x_z_0_0_xz_xy_y_xx = buffer_1100_ddpd[1536];

    auto g_x_z_0_0_xz_xy_y_xy = buffer_1100_ddpd[1537];

    auto g_x_z_0_0_xz_xy_y_xz = buffer_1100_ddpd[1538];

    auto g_x_z_0_0_xz_xy_y_yy = buffer_1100_ddpd[1539];

    auto g_x_z_0_0_xz_xy_y_yz = buffer_1100_ddpd[1540];

    auto g_x_z_0_0_xz_xy_y_zz = buffer_1100_ddpd[1541];

    auto g_x_z_0_0_xz_xy_z_xx = buffer_1100_ddpd[1542];

    auto g_x_z_0_0_xz_xy_z_xy = buffer_1100_ddpd[1543];

    auto g_x_z_0_0_xz_xy_z_xz = buffer_1100_ddpd[1544];

    auto g_x_z_0_0_xz_xy_z_yy = buffer_1100_ddpd[1545];

    auto g_x_z_0_0_xz_xy_z_yz = buffer_1100_ddpd[1546];

    auto g_x_z_0_0_xz_xy_z_zz = buffer_1100_ddpd[1547];

    auto g_x_z_0_0_xz_xz_x_xx = buffer_1100_ddpd[1548];

    auto g_x_z_0_0_xz_xz_x_xy = buffer_1100_ddpd[1549];

    auto g_x_z_0_0_xz_xz_x_xz = buffer_1100_ddpd[1550];

    auto g_x_z_0_0_xz_xz_x_yy = buffer_1100_ddpd[1551];

    auto g_x_z_0_0_xz_xz_x_yz = buffer_1100_ddpd[1552];

    auto g_x_z_0_0_xz_xz_x_zz = buffer_1100_ddpd[1553];

    auto g_x_z_0_0_xz_xz_y_xx = buffer_1100_ddpd[1554];

    auto g_x_z_0_0_xz_xz_y_xy = buffer_1100_ddpd[1555];

    auto g_x_z_0_0_xz_xz_y_xz = buffer_1100_ddpd[1556];

    auto g_x_z_0_0_xz_xz_y_yy = buffer_1100_ddpd[1557];

    auto g_x_z_0_0_xz_xz_y_yz = buffer_1100_ddpd[1558];

    auto g_x_z_0_0_xz_xz_y_zz = buffer_1100_ddpd[1559];

    auto g_x_z_0_0_xz_xz_z_xx = buffer_1100_ddpd[1560];

    auto g_x_z_0_0_xz_xz_z_xy = buffer_1100_ddpd[1561];

    auto g_x_z_0_0_xz_xz_z_xz = buffer_1100_ddpd[1562];

    auto g_x_z_0_0_xz_xz_z_yy = buffer_1100_ddpd[1563];

    auto g_x_z_0_0_xz_xz_z_yz = buffer_1100_ddpd[1564];

    auto g_x_z_0_0_xz_xz_z_zz = buffer_1100_ddpd[1565];

    auto g_x_z_0_0_xz_yy_x_xx = buffer_1100_ddpd[1566];

    auto g_x_z_0_0_xz_yy_x_xy = buffer_1100_ddpd[1567];

    auto g_x_z_0_0_xz_yy_x_xz = buffer_1100_ddpd[1568];

    auto g_x_z_0_0_xz_yy_x_yy = buffer_1100_ddpd[1569];

    auto g_x_z_0_0_xz_yy_x_yz = buffer_1100_ddpd[1570];

    auto g_x_z_0_0_xz_yy_x_zz = buffer_1100_ddpd[1571];

    auto g_x_z_0_0_xz_yy_y_xx = buffer_1100_ddpd[1572];

    auto g_x_z_0_0_xz_yy_y_xy = buffer_1100_ddpd[1573];

    auto g_x_z_0_0_xz_yy_y_xz = buffer_1100_ddpd[1574];

    auto g_x_z_0_0_xz_yy_y_yy = buffer_1100_ddpd[1575];

    auto g_x_z_0_0_xz_yy_y_yz = buffer_1100_ddpd[1576];

    auto g_x_z_0_0_xz_yy_y_zz = buffer_1100_ddpd[1577];

    auto g_x_z_0_0_xz_yy_z_xx = buffer_1100_ddpd[1578];

    auto g_x_z_0_0_xz_yy_z_xy = buffer_1100_ddpd[1579];

    auto g_x_z_0_0_xz_yy_z_xz = buffer_1100_ddpd[1580];

    auto g_x_z_0_0_xz_yy_z_yy = buffer_1100_ddpd[1581];

    auto g_x_z_0_0_xz_yy_z_yz = buffer_1100_ddpd[1582];

    auto g_x_z_0_0_xz_yy_z_zz = buffer_1100_ddpd[1583];

    auto g_x_z_0_0_xz_yz_x_xx = buffer_1100_ddpd[1584];

    auto g_x_z_0_0_xz_yz_x_xy = buffer_1100_ddpd[1585];

    auto g_x_z_0_0_xz_yz_x_xz = buffer_1100_ddpd[1586];

    auto g_x_z_0_0_xz_yz_x_yy = buffer_1100_ddpd[1587];

    auto g_x_z_0_0_xz_yz_x_yz = buffer_1100_ddpd[1588];

    auto g_x_z_0_0_xz_yz_x_zz = buffer_1100_ddpd[1589];

    auto g_x_z_0_0_xz_yz_y_xx = buffer_1100_ddpd[1590];

    auto g_x_z_0_0_xz_yz_y_xy = buffer_1100_ddpd[1591];

    auto g_x_z_0_0_xz_yz_y_xz = buffer_1100_ddpd[1592];

    auto g_x_z_0_0_xz_yz_y_yy = buffer_1100_ddpd[1593];

    auto g_x_z_0_0_xz_yz_y_yz = buffer_1100_ddpd[1594];

    auto g_x_z_0_0_xz_yz_y_zz = buffer_1100_ddpd[1595];

    auto g_x_z_0_0_xz_yz_z_xx = buffer_1100_ddpd[1596];

    auto g_x_z_0_0_xz_yz_z_xy = buffer_1100_ddpd[1597];

    auto g_x_z_0_0_xz_yz_z_xz = buffer_1100_ddpd[1598];

    auto g_x_z_0_0_xz_yz_z_yy = buffer_1100_ddpd[1599];

    auto g_x_z_0_0_xz_yz_z_yz = buffer_1100_ddpd[1600];

    auto g_x_z_0_0_xz_yz_z_zz = buffer_1100_ddpd[1601];

    auto g_x_z_0_0_xz_zz_x_xx = buffer_1100_ddpd[1602];

    auto g_x_z_0_0_xz_zz_x_xy = buffer_1100_ddpd[1603];

    auto g_x_z_0_0_xz_zz_x_xz = buffer_1100_ddpd[1604];

    auto g_x_z_0_0_xz_zz_x_yy = buffer_1100_ddpd[1605];

    auto g_x_z_0_0_xz_zz_x_yz = buffer_1100_ddpd[1606];

    auto g_x_z_0_0_xz_zz_x_zz = buffer_1100_ddpd[1607];

    auto g_x_z_0_0_xz_zz_y_xx = buffer_1100_ddpd[1608];

    auto g_x_z_0_0_xz_zz_y_xy = buffer_1100_ddpd[1609];

    auto g_x_z_0_0_xz_zz_y_xz = buffer_1100_ddpd[1610];

    auto g_x_z_0_0_xz_zz_y_yy = buffer_1100_ddpd[1611];

    auto g_x_z_0_0_xz_zz_y_yz = buffer_1100_ddpd[1612];

    auto g_x_z_0_0_xz_zz_y_zz = buffer_1100_ddpd[1613];

    auto g_x_z_0_0_xz_zz_z_xx = buffer_1100_ddpd[1614];

    auto g_x_z_0_0_xz_zz_z_xy = buffer_1100_ddpd[1615];

    auto g_x_z_0_0_xz_zz_z_xz = buffer_1100_ddpd[1616];

    auto g_x_z_0_0_xz_zz_z_yy = buffer_1100_ddpd[1617];

    auto g_x_z_0_0_xz_zz_z_yz = buffer_1100_ddpd[1618];

    auto g_x_z_0_0_xz_zz_z_zz = buffer_1100_ddpd[1619];

    auto g_x_z_0_0_yy_xx_x_xx = buffer_1100_ddpd[1620];

    auto g_x_z_0_0_yy_xx_x_xy = buffer_1100_ddpd[1621];

    auto g_x_z_0_0_yy_xx_x_xz = buffer_1100_ddpd[1622];

    auto g_x_z_0_0_yy_xx_x_yy = buffer_1100_ddpd[1623];

    auto g_x_z_0_0_yy_xx_x_yz = buffer_1100_ddpd[1624];

    auto g_x_z_0_0_yy_xx_x_zz = buffer_1100_ddpd[1625];

    auto g_x_z_0_0_yy_xx_y_xx = buffer_1100_ddpd[1626];

    auto g_x_z_0_0_yy_xx_y_xy = buffer_1100_ddpd[1627];

    auto g_x_z_0_0_yy_xx_y_xz = buffer_1100_ddpd[1628];

    auto g_x_z_0_0_yy_xx_y_yy = buffer_1100_ddpd[1629];

    auto g_x_z_0_0_yy_xx_y_yz = buffer_1100_ddpd[1630];

    auto g_x_z_0_0_yy_xx_y_zz = buffer_1100_ddpd[1631];

    auto g_x_z_0_0_yy_xx_z_xx = buffer_1100_ddpd[1632];

    auto g_x_z_0_0_yy_xx_z_xy = buffer_1100_ddpd[1633];

    auto g_x_z_0_0_yy_xx_z_xz = buffer_1100_ddpd[1634];

    auto g_x_z_0_0_yy_xx_z_yy = buffer_1100_ddpd[1635];

    auto g_x_z_0_0_yy_xx_z_yz = buffer_1100_ddpd[1636];

    auto g_x_z_0_0_yy_xx_z_zz = buffer_1100_ddpd[1637];

    auto g_x_z_0_0_yy_xy_x_xx = buffer_1100_ddpd[1638];

    auto g_x_z_0_0_yy_xy_x_xy = buffer_1100_ddpd[1639];

    auto g_x_z_0_0_yy_xy_x_xz = buffer_1100_ddpd[1640];

    auto g_x_z_0_0_yy_xy_x_yy = buffer_1100_ddpd[1641];

    auto g_x_z_0_0_yy_xy_x_yz = buffer_1100_ddpd[1642];

    auto g_x_z_0_0_yy_xy_x_zz = buffer_1100_ddpd[1643];

    auto g_x_z_0_0_yy_xy_y_xx = buffer_1100_ddpd[1644];

    auto g_x_z_0_0_yy_xy_y_xy = buffer_1100_ddpd[1645];

    auto g_x_z_0_0_yy_xy_y_xz = buffer_1100_ddpd[1646];

    auto g_x_z_0_0_yy_xy_y_yy = buffer_1100_ddpd[1647];

    auto g_x_z_0_0_yy_xy_y_yz = buffer_1100_ddpd[1648];

    auto g_x_z_0_0_yy_xy_y_zz = buffer_1100_ddpd[1649];

    auto g_x_z_0_0_yy_xy_z_xx = buffer_1100_ddpd[1650];

    auto g_x_z_0_0_yy_xy_z_xy = buffer_1100_ddpd[1651];

    auto g_x_z_0_0_yy_xy_z_xz = buffer_1100_ddpd[1652];

    auto g_x_z_0_0_yy_xy_z_yy = buffer_1100_ddpd[1653];

    auto g_x_z_0_0_yy_xy_z_yz = buffer_1100_ddpd[1654];

    auto g_x_z_0_0_yy_xy_z_zz = buffer_1100_ddpd[1655];

    auto g_x_z_0_0_yy_xz_x_xx = buffer_1100_ddpd[1656];

    auto g_x_z_0_0_yy_xz_x_xy = buffer_1100_ddpd[1657];

    auto g_x_z_0_0_yy_xz_x_xz = buffer_1100_ddpd[1658];

    auto g_x_z_0_0_yy_xz_x_yy = buffer_1100_ddpd[1659];

    auto g_x_z_0_0_yy_xz_x_yz = buffer_1100_ddpd[1660];

    auto g_x_z_0_0_yy_xz_x_zz = buffer_1100_ddpd[1661];

    auto g_x_z_0_0_yy_xz_y_xx = buffer_1100_ddpd[1662];

    auto g_x_z_0_0_yy_xz_y_xy = buffer_1100_ddpd[1663];

    auto g_x_z_0_0_yy_xz_y_xz = buffer_1100_ddpd[1664];

    auto g_x_z_0_0_yy_xz_y_yy = buffer_1100_ddpd[1665];

    auto g_x_z_0_0_yy_xz_y_yz = buffer_1100_ddpd[1666];

    auto g_x_z_0_0_yy_xz_y_zz = buffer_1100_ddpd[1667];

    auto g_x_z_0_0_yy_xz_z_xx = buffer_1100_ddpd[1668];

    auto g_x_z_0_0_yy_xz_z_xy = buffer_1100_ddpd[1669];

    auto g_x_z_0_0_yy_xz_z_xz = buffer_1100_ddpd[1670];

    auto g_x_z_0_0_yy_xz_z_yy = buffer_1100_ddpd[1671];

    auto g_x_z_0_0_yy_xz_z_yz = buffer_1100_ddpd[1672];

    auto g_x_z_0_0_yy_xz_z_zz = buffer_1100_ddpd[1673];

    auto g_x_z_0_0_yy_yy_x_xx = buffer_1100_ddpd[1674];

    auto g_x_z_0_0_yy_yy_x_xy = buffer_1100_ddpd[1675];

    auto g_x_z_0_0_yy_yy_x_xz = buffer_1100_ddpd[1676];

    auto g_x_z_0_0_yy_yy_x_yy = buffer_1100_ddpd[1677];

    auto g_x_z_0_0_yy_yy_x_yz = buffer_1100_ddpd[1678];

    auto g_x_z_0_0_yy_yy_x_zz = buffer_1100_ddpd[1679];

    auto g_x_z_0_0_yy_yy_y_xx = buffer_1100_ddpd[1680];

    auto g_x_z_0_0_yy_yy_y_xy = buffer_1100_ddpd[1681];

    auto g_x_z_0_0_yy_yy_y_xz = buffer_1100_ddpd[1682];

    auto g_x_z_0_0_yy_yy_y_yy = buffer_1100_ddpd[1683];

    auto g_x_z_0_0_yy_yy_y_yz = buffer_1100_ddpd[1684];

    auto g_x_z_0_0_yy_yy_y_zz = buffer_1100_ddpd[1685];

    auto g_x_z_0_0_yy_yy_z_xx = buffer_1100_ddpd[1686];

    auto g_x_z_0_0_yy_yy_z_xy = buffer_1100_ddpd[1687];

    auto g_x_z_0_0_yy_yy_z_xz = buffer_1100_ddpd[1688];

    auto g_x_z_0_0_yy_yy_z_yy = buffer_1100_ddpd[1689];

    auto g_x_z_0_0_yy_yy_z_yz = buffer_1100_ddpd[1690];

    auto g_x_z_0_0_yy_yy_z_zz = buffer_1100_ddpd[1691];

    auto g_x_z_0_0_yy_yz_x_xx = buffer_1100_ddpd[1692];

    auto g_x_z_0_0_yy_yz_x_xy = buffer_1100_ddpd[1693];

    auto g_x_z_0_0_yy_yz_x_xz = buffer_1100_ddpd[1694];

    auto g_x_z_0_0_yy_yz_x_yy = buffer_1100_ddpd[1695];

    auto g_x_z_0_0_yy_yz_x_yz = buffer_1100_ddpd[1696];

    auto g_x_z_0_0_yy_yz_x_zz = buffer_1100_ddpd[1697];

    auto g_x_z_0_0_yy_yz_y_xx = buffer_1100_ddpd[1698];

    auto g_x_z_0_0_yy_yz_y_xy = buffer_1100_ddpd[1699];

    auto g_x_z_0_0_yy_yz_y_xz = buffer_1100_ddpd[1700];

    auto g_x_z_0_0_yy_yz_y_yy = buffer_1100_ddpd[1701];

    auto g_x_z_0_0_yy_yz_y_yz = buffer_1100_ddpd[1702];

    auto g_x_z_0_0_yy_yz_y_zz = buffer_1100_ddpd[1703];

    auto g_x_z_0_0_yy_yz_z_xx = buffer_1100_ddpd[1704];

    auto g_x_z_0_0_yy_yz_z_xy = buffer_1100_ddpd[1705];

    auto g_x_z_0_0_yy_yz_z_xz = buffer_1100_ddpd[1706];

    auto g_x_z_0_0_yy_yz_z_yy = buffer_1100_ddpd[1707];

    auto g_x_z_0_0_yy_yz_z_yz = buffer_1100_ddpd[1708];

    auto g_x_z_0_0_yy_yz_z_zz = buffer_1100_ddpd[1709];

    auto g_x_z_0_0_yy_zz_x_xx = buffer_1100_ddpd[1710];

    auto g_x_z_0_0_yy_zz_x_xy = buffer_1100_ddpd[1711];

    auto g_x_z_0_0_yy_zz_x_xz = buffer_1100_ddpd[1712];

    auto g_x_z_0_0_yy_zz_x_yy = buffer_1100_ddpd[1713];

    auto g_x_z_0_0_yy_zz_x_yz = buffer_1100_ddpd[1714];

    auto g_x_z_0_0_yy_zz_x_zz = buffer_1100_ddpd[1715];

    auto g_x_z_0_0_yy_zz_y_xx = buffer_1100_ddpd[1716];

    auto g_x_z_0_0_yy_zz_y_xy = buffer_1100_ddpd[1717];

    auto g_x_z_0_0_yy_zz_y_xz = buffer_1100_ddpd[1718];

    auto g_x_z_0_0_yy_zz_y_yy = buffer_1100_ddpd[1719];

    auto g_x_z_0_0_yy_zz_y_yz = buffer_1100_ddpd[1720];

    auto g_x_z_0_0_yy_zz_y_zz = buffer_1100_ddpd[1721];

    auto g_x_z_0_0_yy_zz_z_xx = buffer_1100_ddpd[1722];

    auto g_x_z_0_0_yy_zz_z_xy = buffer_1100_ddpd[1723];

    auto g_x_z_0_0_yy_zz_z_xz = buffer_1100_ddpd[1724];

    auto g_x_z_0_0_yy_zz_z_yy = buffer_1100_ddpd[1725];

    auto g_x_z_0_0_yy_zz_z_yz = buffer_1100_ddpd[1726];

    auto g_x_z_0_0_yy_zz_z_zz = buffer_1100_ddpd[1727];

    auto g_x_z_0_0_yz_xx_x_xx = buffer_1100_ddpd[1728];

    auto g_x_z_0_0_yz_xx_x_xy = buffer_1100_ddpd[1729];

    auto g_x_z_0_0_yz_xx_x_xz = buffer_1100_ddpd[1730];

    auto g_x_z_0_0_yz_xx_x_yy = buffer_1100_ddpd[1731];

    auto g_x_z_0_0_yz_xx_x_yz = buffer_1100_ddpd[1732];

    auto g_x_z_0_0_yz_xx_x_zz = buffer_1100_ddpd[1733];

    auto g_x_z_0_0_yz_xx_y_xx = buffer_1100_ddpd[1734];

    auto g_x_z_0_0_yz_xx_y_xy = buffer_1100_ddpd[1735];

    auto g_x_z_0_0_yz_xx_y_xz = buffer_1100_ddpd[1736];

    auto g_x_z_0_0_yz_xx_y_yy = buffer_1100_ddpd[1737];

    auto g_x_z_0_0_yz_xx_y_yz = buffer_1100_ddpd[1738];

    auto g_x_z_0_0_yz_xx_y_zz = buffer_1100_ddpd[1739];

    auto g_x_z_0_0_yz_xx_z_xx = buffer_1100_ddpd[1740];

    auto g_x_z_0_0_yz_xx_z_xy = buffer_1100_ddpd[1741];

    auto g_x_z_0_0_yz_xx_z_xz = buffer_1100_ddpd[1742];

    auto g_x_z_0_0_yz_xx_z_yy = buffer_1100_ddpd[1743];

    auto g_x_z_0_0_yz_xx_z_yz = buffer_1100_ddpd[1744];

    auto g_x_z_0_0_yz_xx_z_zz = buffer_1100_ddpd[1745];

    auto g_x_z_0_0_yz_xy_x_xx = buffer_1100_ddpd[1746];

    auto g_x_z_0_0_yz_xy_x_xy = buffer_1100_ddpd[1747];

    auto g_x_z_0_0_yz_xy_x_xz = buffer_1100_ddpd[1748];

    auto g_x_z_0_0_yz_xy_x_yy = buffer_1100_ddpd[1749];

    auto g_x_z_0_0_yz_xy_x_yz = buffer_1100_ddpd[1750];

    auto g_x_z_0_0_yz_xy_x_zz = buffer_1100_ddpd[1751];

    auto g_x_z_0_0_yz_xy_y_xx = buffer_1100_ddpd[1752];

    auto g_x_z_0_0_yz_xy_y_xy = buffer_1100_ddpd[1753];

    auto g_x_z_0_0_yz_xy_y_xz = buffer_1100_ddpd[1754];

    auto g_x_z_0_0_yz_xy_y_yy = buffer_1100_ddpd[1755];

    auto g_x_z_0_0_yz_xy_y_yz = buffer_1100_ddpd[1756];

    auto g_x_z_0_0_yz_xy_y_zz = buffer_1100_ddpd[1757];

    auto g_x_z_0_0_yz_xy_z_xx = buffer_1100_ddpd[1758];

    auto g_x_z_0_0_yz_xy_z_xy = buffer_1100_ddpd[1759];

    auto g_x_z_0_0_yz_xy_z_xz = buffer_1100_ddpd[1760];

    auto g_x_z_0_0_yz_xy_z_yy = buffer_1100_ddpd[1761];

    auto g_x_z_0_0_yz_xy_z_yz = buffer_1100_ddpd[1762];

    auto g_x_z_0_0_yz_xy_z_zz = buffer_1100_ddpd[1763];

    auto g_x_z_0_0_yz_xz_x_xx = buffer_1100_ddpd[1764];

    auto g_x_z_0_0_yz_xz_x_xy = buffer_1100_ddpd[1765];

    auto g_x_z_0_0_yz_xz_x_xz = buffer_1100_ddpd[1766];

    auto g_x_z_0_0_yz_xz_x_yy = buffer_1100_ddpd[1767];

    auto g_x_z_0_0_yz_xz_x_yz = buffer_1100_ddpd[1768];

    auto g_x_z_0_0_yz_xz_x_zz = buffer_1100_ddpd[1769];

    auto g_x_z_0_0_yz_xz_y_xx = buffer_1100_ddpd[1770];

    auto g_x_z_0_0_yz_xz_y_xy = buffer_1100_ddpd[1771];

    auto g_x_z_0_0_yz_xz_y_xz = buffer_1100_ddpd[1772];

    auto g_x_z_0_0_yz_xz_y_yy = buffer_1100_ddpd[1773];

    auto g_x_z_0_0_yz_xz_y_yz = buffer_1100_ddpd[1774];

    auto g_x_z_0_0_yz_xz_y_zz = buffer_1100_ddpd[1775];

    auto g_x_z_0_0_yz_xz_z_xx = buffer_1100_ddpd[1776];

    auto g_x_z_0_0_yz_xz_z_xy = buffer_1100_ddpd[1777];

    auto g_x_z_0_0_yz_xz_z_xz = buffer_1100_ddpd[1778];

    auto g_x_z_0_0_yz_xz_z_yy = buffer_1100_ddpd[1779];

    auto g_x_z_0_0_yz_xz_z_yz = buffer_1100_ddpd[1780];

    auto g_x_z_0_0_yz_xz_z_zz = buffer_1100_ddpd[1781];

    auto g_x_z_0_0_yz_yy_x_xx = buffer_1100_ddpd[1782];

    auto g_x_z_0_0_yz_yy_x_xy = buffer_1100_ddpd[1783];

    auto g_x_z_0_0_yz_yy_x_xz = buffer_1100_ddpd[1784];

    auto g_x_z_0_0_yz_yy_x_yy = buffer_1100_ddpd[1785];

    auto g_x_z_0_0_yz_yy_x_yz = buffer_1100_ddpd[1786];

    auto g_x_z_0_0_yz_yy_x_zz = buffer_1100_ddpd[1787];

    auto g_x_z_0_0_yz_yy_y_xx = buffer_1100_ddpd[1788];

    auto g_x_z_0_0_yz_yy_y_xy = buffer_1100_ddpd[1789];

    auto g_x_z_0_0_yz_yy_y_xz = buffer_1100_ddpd[1790];

    auto g_x_z_0_0_yz_yy_y_yy = buffer_1100_ddpd[1791];

    auto g_x_z_0_0_yz_yy_y_yz = buffer_1100_ddpd[1792];

    auto g_x_z_0_0_yz_yy_y_zz = buffer_1100_ddpd[1793];

    auto g_x_z_0_0_yz_yy_z_xx = buffer_1100_ddpd[1794];

    auto g_x_z_0_0_yz_yy_z_xy = buffer_1100_ddpd[1795];

    auto g_x_z_0_0_yz_yy_z_xz = buffer_1100_ddpd[1796];

    auto g_x_z_0_0_yz_yy_z_yy = buffer_1100_ddpd[1797];

    auto g_x_z_0_0_yz_yy_z_yz = buffer_1100_ddpd[1798];

    auto g_x_z_0_0_yz_yy_z_zz = buffer_1100_ddpd[1799];

    auto g_x_z_0_0_yz_yz_x_xx = buffer_1100_ddpd[1800];

    auto g_x_z_0_0_yz_yz_x_xy = buffer_1100_ddpd[1801];

    auto g_x_z_0_0_yz_yz_x_xz = buffer_1100_ddpd[1802];

    auto g_x_z_0_0_yz_yz_x_yy = buffer_1100_ddpd[1803];

    auto g_x_z_0_0_yz_yz_x_yz = buffer_1100_ddpd[1804];

    auto g_x_z_0_0_yz_yz_x_zz = buffer_1100_ddpd[1805];

    auto g_x_z_0_0_yz_yz_y_xx = buffer_1100_ddpd[1806];

    auto g_x_z_0_0_yz_yz_y_xy = buffer_1100_ddpd[1807];

    auto g_x_z_0_0_yz_yz_y_xz = buffer_1100_ddpd[1808];

    auto g_x_z_0_0_yz_yz_y_yy = buffer_1100_ddpd[1809];

    auto g_x_z_0_0_yz_yz_y_yz = buffer_1100_ddpd[1810];

    auto g_x_z_0_0_yz_yz_y_zz = buffer_1100_ddpd[1811];

    auto g_x_z_0_0_yz_yz_z_xx = buffer_1100_ddpd[1812];

    auto g_x_z_0_0_yz_yz_z_xy = buffer_1100_ddpd[1813];

    auto g_x_z_0_0_yz_yz_z_xz = buffer_1100_ddpd[1814];

    auto g_x_z_0_0_yz_yz_z_yy = buffer_1100_ddpd[1815];

    auto g_x_z_0_0_yz_yz_z_yz = buffer_1100_ddpd[1816];

    auto g_x_z_0_0_yz_yz_z_zz = buffer_1100_ddpd[1817];

    auto g_x_z_0_0_yz_zz_x_xx = buffer_1100_ddpd[1818];

    auto g_x_z_0_0_yz_zz_x_xy = buffer_1100_ddpd[1819];

    auto g_x_z_0_0_yz_zz_x_xz = buffer_1100_ddpd[1820];

    auto g_x_z_0_0_yz_zz_x_yy = buffer_1100_ddpd[1821];

    auto g_x_z_0_0_yz_zz_x_yz = buffer_1100_ddpd[1822];

    auto g_x_z_0_0_yz_zz_x_zz = buffer_1100_ddpd[1823];

    auto g_x_z_0_0_yz_zz_y_xx = buffer_1100_ddpd[1824];

    auto g_x_z_0_0_yz_zz_y_xy = buffer_1100_ddpd[1825];

    auto g_x_z_0_0_yz_zz_y_xz = buffer_1100_ddpd[1826];

    auto g_x_z_0_0_yz_zz_y_yy = buffer_1100_ddpd[1827];

    auto g_x_z_0_0_yz_zz_y_yz = buffer_1100_ddpd[1828];

    auto g_x_z_0_0_yz_zz_y_zz = buffer_1100_ddpd[1829];

    auto g_x_z_0_0_yz_zz_z_xx = buffer_1100_ddpd[1830];

    auto g_x_z_0_0_yz_zz_z_xy = buffer_1100_ddpd[1831];

    auto g_x_z_0_0_yz_zz_z_xz = buffer_1100_ddpd[1832];

    auto g_x_z_0_0_yz_zz_z_yy = buffer_1100_ddpd[1833];

    auto g_x_z_0_0_yz_zz_z_yz = buffer_1100_ddpd[1834];

    auto g_x_z_0_0_yz_zz_z_zz = buffer_1100_ddpd[1835];

    auto g_x_z_0_0_zz_xx_x_xx = buffer_1100_ddpd[1836];

    auto g_x_z_0_0_zz_xx_x_xy = buffer_1100_ddpd[1837];

    auto g_x_z_0_0_zz_xx_x_xz = buffer_1100_ddpd[1838];

    auto g_x_z_0_0_zz_xx_x_yy = buffer_1100_ddpd[1839];

    auto g_x_z_0_0_zz_xx_x_yz = buffer_1100_ddpd[1840];

    auto g_x_z_0_0_zz_xx_x_zz = buffer_1100_ddpd[1841];

    auto g_x_z_0_0_zz_xx_y_xx = buffer_1100_ddpd[1842];

    auto g_x_z_0_0_zz_xx_y_xy = buffer_1100_ddpd[1843];

    auto g_x_z_0_0_zz_xx_y_xz = buffer_1100_ddpd[1844];

    auto g_x_z_0_0_zz_xx_y_yy = buffer_1100_ddpd[1845];

    auto g_x_z_0_0_zz_xx_y_yz = buffer_1100_ddpd[1846];

    auto g_x_z_0_0_zz_xx_y_zz = buffer_1100_ddpd[1847];

    auto g_x_z_0_0_zz_xx_z_xx = buffer_1100_ddpd[1848];

    auto g_x_z_0_0_zz_xx_z_xy = buffer_1100_ddpd[1849];

    auto g_x_z_0_0_zz_xx_z_xz = buffer_1100_ddpd[1850];

    auto g_x_z_0_0_zz_xx_z_yy = buffer_1100_ddpd[1851];

    auto g_x_z_0_0_zz_xx_z_yz = buffer_1100_ddpd[1852];

    auto g_x_z_0_0_zz_xx_z_zz = buffer_1100_ddpd[1853];

    auto g_x_z_0_0_zz_xy_x_xx = buffer_1100_ddpd[1854];

    auto g_x_z_0_0_zz_xy_x_xy = buffer_1100_ddpd[1855];

    auto g_x_z_0_0_zz_xy_x_xz = buffer_1100_ddpd[1856];

    auto g_x_z_0_0_zz_xy_x_yy = buffer_1100_ddpd[1857];

    auto g_x_z_0_0_zz_xy_x_yz = buffer_1100_ddpd[1858];

    auto g_x_z_0_0_zz_xy_x_zz = buffer_1100_ddpd[1859];

    auto g_x_z_0_0_zz_xy_y_xx = buffer_1100_ddpd[1860];

    auto g_x_z_0_0_zz_xy_y_xy = buffer_1100_ddpd[1861];

    auto g_x_z_0_0_zz_xy_y_xz = buffer_1100_ddpd[1862];

    auto g_x_z_0_0_zz_xy_y_yy = buffer_1100_ddpd[1863];

    auto g_x_z_0_0_zz_xy_y_yz = buffer_1100_ddpd[1864];

    auto g_x_z_0_0_zz_xy_y_zz = buffer_1100_ddpd[1865];

    auto g_x_z_0_0_zz_xy_z_xx = buffer_1100_ddpd[1866];

    auto g_x_z_0_0_zz_xy_z_xy = buffer_1100_ddpd[1867];

    auto g_x_z_0_0_zz_xy_z_xz = buffer_1100_ddpd[1868];

    auto g_x_z_0_0_zz_xy_z_yy = buffer_1100_ddpd[1869];

    auto g_x_z_0_0_zz_xy_z_yz = buffer_1100_ddpd[1870];

    auto g_x_z_0_0_zz_xy_z_zz = buffer_1100_ddpd[1871];

    auto g_x_z_0_0_zz_xz_x_xx = buffer_1100_ddpd[1872];

    auto g_x_z_0_0_zz_xz_x_xy = buffer_1100_ddpd[1873];

    auto g_x_z_0_0_zz_xz_x_xz = buffer_1100_ddpd[1874];

    auto g_x_z_0_0_zz_xz_x_yy = buffer_1100_ddpd[1875];

    auto g_x_z_0_0_zz_xz_x_yz = buffer_1100_ddpd[1876];

    auto g_x_z_0_0_zz_xz_x_zz = buffer_1100_ddpd[1877];

    auto g_x_z_0_0_zz_xz_y_xx = buffer_1100_ddpd[1878];

    auto g_x_z_0_0_zz_xz_y_xy = buffer_1100_ddpd[1879];

    auto g_x_z_0_0_zz_xz_y_xz = buffer_1100_ddpd[1880];

    auto g_x_z_0_0_zz_xz_y_yy = buffer_1100_ddpd[1881];

    auto g_x_z_0_0_zz_xz_y_yz = buffer_1100_ddpd[1882];

    auto g_x_z_0_0_zz_xz_y_zz = buffer_1100_ddpd[1883];

    auto g_x_z_0_0_zz_xz_z_xx = buffer_1100_ddpd[1884];

    auto g_x_z_0_0_zz_xz_z_xy = buffer_1100_ddpd[1885];

    auto g_x_z_0_0_zz_xz_z_xz = buffer_1100_ddpd[1886];

    auto g_x_z_0_0_zz_xz_z_yy = buffer_1100_ddpd[1887];

    auto g_x_z_0_0_zz_xz_z_yz = buffer_1100_ddpd[1888];

    auto g_x_z_0_0_zz_xz_z_zz = buffer_1100_ddpd[1889];

    auto g_x_z_0_0_zz_yy_x_xx = buffer_1100_ddpd[1890];

    auto g_x_z_0_0_zz_yy_x_xy = buffer_1100_ddpd[1891];

    auto g_x_z_0_0_zz_yy_x_xz = buffer_1100_ddpd[1892];

    auto g_x_z_0_0_zz_yy_x_yy = buffer_1100_ddpd[1893];

    auto g_x_z_0_0_zz_yy_x_yz = buffer_1100_ddpd[1894];

    auto g_x_z_0_0_zz_yy_x_zz = buffer_1100_ddpd[1895];

    auto g_x_z_0_0_zz_yy_y_xx = buffer_1100_ddpd[1896];

    auto g_x_z_0_0_zz_yy_y_xy = buffer_1100_ddpd[1897];

    auto g_x_z_0_0_zz_yy_y_xz = buffer_1100_ddpd[1898];

    auto g_x_z_0_0_zz_yy_y_yy = buffer_1100_ddpd[1899];

    auto g_x_z_0_0_zz_yy_y_yz = buffer_1100_ddpd[1900];

    auto g_x_z_0_0_zz_yy_y_zz = buffer_1100_ddpd[1901];

    auto g_x_z_0_0_zz_yy_z_xx = buffer_1100_ddpd[1902];

    auto g_x_z_0_0_zz_yy_z_xy = buffer_1100_ddpd[1903];

    auto g_x_z_0_0_zz_yy_z_xz = buffer_1100_ddpd[1904];

    auto g_x_z_0_0_zz_yy_z_yy = buffer_1100_ddpd[1905];

    auto g_x_z_0_0_zz_yy_z_yz = buffer_1100_ddpd[1906];

    auto g_x_z_0_0_zz_yy_z_zz = buffer_1100_ddpd[1907];

    auto g_x_z_0_0_zz_yz_x_xx = buffer_1100_ddpd[1908];

    auto g_x_z_0_0_zz_yz_x_xy = buffer_1100_ddpd[1909];

    auto g_x_z_0_0_zz_yz_x_xz = buffer_1100_ddpd[1910];

    auto g_x_z_0_0_zz_yz_x_yy = buffer_1100_ddpd[1911];

    auto g_x_z_0_0_zz_yz_x_yz = buffer_1100_ddpd[1912];

    auto g_x_z_0_0_zz_yz_x_zz = buffer_1100_ddpd[1913];

    auto g_x_z_0_0_zz_yz_y_xx = buffer_1100_ddpd[1914];

    auto g_x_z_0_0_zz_yz_y_xy = buffer_1100_ddpd[1915];

    auto g_x_z_0_0_zz_yz_y_xz = buffer_1100_ddpd[1916];

    auto g_x_z_0_0_zz_yz_y_yy = buffer_1100_ddpd[1917];

    auto g_x_z_0_0_zz_yz_y_yz = buffer_1100_ddpd[1918];

    auto g_x_z_0_0_zz_yz_y_zz = buffer_1100_ddpd[1919];

    auto g_x_z_0_0_zz_yz_z_xx = buffer_1100_ddpd[1920];

    auto g_x_z_0_0_zz_yz_z_xy = buffer_1100_ddpd[1921];

    auto g_x_z_0_0_zz_yz_z_xz = buffer_1100_ddpd[1922];

    auto g_x_z_0_0_zz_yz_z_yy = buffer_1100_ddpd[1923];

    auto g_x_z_0_0_zz_yz_z_yz = buffer_1100_ddpd[1924];

    auto g_x_z_0_0_zz_yz_z_zz = buffer_1100_ddpd[1925];

    auto g_x_z_0_0_zz_zz_x_xx = buffer_1100_ddpd[1926];

    auto g_x_z_0_0_zz_zz_x_xy = buffer_1100_ddpd[1927];

    auto g_x_z_0_0_zz_zz_x_xz = buffer_1100_ddpd[1928];

    auto g_x_z_0_0_zz_zz_x_yy = buffer_1100_ddpd[1929];

    auto g_x_z_0_0_zz_zz_x_yz = buffer_1100_ddpd[1930];

    auto g_x_z_0_0_zz_zz_x_zz = buffer_1100_ddpd[1931];

    auto g_x_z_0_0_zz_zz_y_xx = buffer_1100_ddpd[1932];

    auto g_x_z_0_0_zz_zz_y_xy = buffer_1100_ddpd[1933];

    auto g_x_z_0_0_zz_zz_y_xz = buffer_1100_ddpd[1934];

    auto g_x_z_0_0_zz_zz_y_yy = buffer_1100_ddpd[1935];

    auto g_x_z_0_0_zz_zz_y_yz = buffer_1100_ddpd[1936];

    auto g_x_z_0_0_zz_zz_y_zz = buffer_1100_ddpd[1937];

    auto g_x_z_0_0_zz_zz_z_xx = buffer_1100_ddpd[1938];

    auto g_x_z_0_0_zz_zz_z_xy = buffer_1100_ddpd[1939];

    auto g_x_z_0_0_zz_zz_z_xz = buffer_1100_ddpd[1940];

    auto g_x_z_0_0_zz_zz_z_yy = buffer_1100_ddpd[1941];

    auto g_x_z_0_0_zz_zz_z_yz = buffer_1100_ddpd[1942];

    auto g_x_z_0_0_zz_zz_z_zz = buffer_1100_ddpd[1943];

    auto g_y_x_0_0_xx_xx_x_xx = buffer_1100_ddpd[1944];

    auto g_y_x_0_0_xx_xx_x_xy = buffer_1100_ddpd[1945];

    auto g_y_x_0_0_xx_xx_x_xz = buffer_1100_ddpd[1946];

    auto g_y_x_0_0_xx_xx_x_yy = buffer_1100_ddpd[1947];

    auto g_y_x_0_0_xx_xx_x_yz = buffer_1100_ddpd[1948];

    auto g_y_x_0_0_xx_xx_x_zz = buffer_1100_ddpd[1949];

    auto g_y_x_0_0_xx_xx_y_xx = buffer_1100_ddpd[1950];

    auto g_y_x_0_0_xx_xx_y_xy = buffer_1100_ddpd[1951];

    auto g_y_x_0_0_xx_xx_y_xz = buffer_1100_ddpd[1952];

    auto g_y_x_0_0_xx_xx_y_yy = buffer_1100_ddpd[1953];

    auto g_y_x_0_0_xx_xx_y_yz = buffer_1100_ddpd[1954];

    auto g_y_x_0_0_xx_xx_y_zz = buffer_1100_ddpd[1955];

    auto g_y_x_0_0_xx_xx_z_xx = buffer_1100_ddpd[1956];

    auto g_y_x_0_0_xx_xx_z_xy = buffer_1100_ddpd[1957];

    auto g_y_x_0_0_xx_xx_z_xz = buffer_1100_ddpd[1958];

    auto g_y_x_0_0_xx_xx_z_yy = buffer_1100_ddpd[1959];

    auto g_y_x_0_0_xx_xx_z_yz = buffer_1100_ddpd[1960];

    auto g_y_x_0_0_xx_xx_z_zz = buffer_1100_ddpd[1961];

    auto g_y_x_0_0_xx_xy_x_xx = buffer_1100_ddpd[1962];

    auto g_y_x_0_0_xx_xy_x_xy = buffer_1100_ddpd[1963];

    auto g_y_x_0_0_xx_xy_x_xz = buffer_1100_ddpd[1964];

    auto g_y_x_0_0_xx_xy_x_yy = buffer_1100_ddpd[1965];

    auto g_y_x_0_0_xx_xy_x_yz = buffer_1100_ddpd[1966];

    auto g_y_x_0_0_xx_xy_x_zz = buffer_1100_ddpd[1967];

    auto g_y_x_0_0_xx_xy_y_xx = buffer_1100_ddpd[1968];

    auto g_y_x_0_0_xx_xy_y_xy = buffer_1100_ddpd[1969];

    auto g_y_x_0_0_xx_xy_y_xz = buffer_1100_ddpd[1970];

    auto g_y_x_0_0_xx_xy_y_yy = buffer_1100_ddpd[1971];

    auto g_y_x_0_0_xx_xy_y_yz = buffer_1100_ddpd[1972];

    auto g_y_x_0_0_xx_xy_y_zz = buffer_1100_ddpd[1973];

    auto g_y_x_0_0_xx_xy_z_xx = buffer_1100_ddpd[1974];

    auto g_y_x_0_0_xx_xy_z_xy = buffer_1100_ddpd[1975];

    auto g_y_x_0_0_xx_xy_z_xz = buffer_1100_ddpd[1976];

    auto g_y_x_0_0_xx_xy_z_yy = buffer_1100_ddpd[1977];

    auto g_y_x_0_0_xx_xy_z_yz = buffer_1100_ddpd[1978];

    auto g_y_x_0_0_xx_xy_z_zz = buffer_1100_ddpd[1979];

    auto g_y_x_0_0_xx_xz_x_xx = buffer_1100_ddpd[1980];

    auto g_y_x_0_0_xx_xz_x_xy = buffer_1100_ddpd[1981];

    auto g_y_x_0_0_xx_xz_x_xz = buffer_1100_ddpd[1982];

    auto g_y_x_0_0_xx_xz_x_yy = buffer_1100_ddpd[1983];

    auto g_y_x_0_0_xx_xz_x_yz = buffer_1100_ddpd[1984];

    auto g_y_x_0_0_xx_xz_x_zz = buffer_1100_ddpd[1985];

    auto g_y_x_0_0_xx_xz_y_xx = buffer_1100_ddpd[1986];

    auto g_y_x_0_0_xx_xz_y_xy = buffer_1100_ddpd[1987];

    auto g_y_x_0_0_xx_xz_y_xz = buffer_1100_ddpd[1988];

    auto g_y_x_0_0_xx_xz_y_yy = buffer_1100_ddpd[1989];

    auto g_y_x_0_0_xx_xz_y_yz = buffer_1100_ddpd[1990];

    auto g_y_x_0_0_xx_xz_y_zz = buffer_1100_ddpd[1991];

    auto g_y_x_0_0_xx_xz_z_xx = buffer_1100_ddpd[1992];

    auto g_y_x_0_0_xx_xz_z_xy = buffer_1100_ddpd[1993];

    auto g_y_x_0_0_xx_xz_z_xz = buffer_1100_ddpd[1994];

    auto g_y_x_0_0_xx_xz_z_yy = buffer_1100_ddpd[1995];

    auto g_y_x_0_0_xx_xz_z_yz = buffer_1100_ddpd[1996];

    auto g_y_x_0_0_xx_xz_z_zz = buffer_1100_ddpd[1997];

    auto g_y_x_0_0_xx_yy_x_xx = buffer_1100_ddpd[1998];

    auto g_y_x_0_0_xx_yy_x_xy = buffer_1100_ddpd[1999];

    auto g_y_x_0_0_xx_yy_x_xz = buffer_1100_ddpd[2000];

    auto g_y_x_0_0_xx_yy_x_yy = buffer_1100_ddpd[2001];

    auto g_y_x_0_0_xx_yy_x_yz = buffer_1100_ddpd[2002];

    auto g_y_x_0_0_xx_yy_x_zz = buffer_1100_ddpd[2003];

    auto g_y_x_0_0_xx_yy_y_xx = buffer_1100_ddpd[2004];

    auto g_y_x_0_0_xx_yy_y_xy = buffer_1100_ddpd[2005];

    auto g_y_x_0_0_xx_yy_y_xz = buffer_1100_ddpd[2006];

    auto g_y_x_0_0_xx_yy_y_yy = buffer_1100_ddpd[2007];

    auto g_y_x_0_0_xx_yy_y_yz = buffer_1100_ddpd[2008];

    auto g_y_x_0_0_xx_yy_y_zz = buffer_1100_ddpd[2009];

    auto g_y_x_0_0_xx_yy_z_xx = buffer_1100_ddpd[2010];

    auto g_y_x_0_0_xx_yy_z_xy = buffer_1100_ddpd[2011];

    auto g_y_x_0_0_xx_yy_z_xz = buffer_1100_ddpd[2012];

    auto g_y_x_0_0_xx_yy_z_yy = buffer_1100_ddpd[2013];

    auto g_y_x_0_0_xx_yy_z_yz = buffer_1100_ddpd[2014];

    auto g_y_x_0_0_xx_yy_z_zz = buffer_1100_ddpd[2015];

    auto g_y_x_0_0_xx_yz_x_xx = buffer_1100_ddpd[2016];

    auto g_y_x_0_0_xx_yz_x_xy = buffer_1100_ddpd[2017];

    auto g_y_x_0_0_xx_yz_x_xz = buffer_1100_ddpd[2018];

    auto g_y_x_0_0_xx_yz_x_yy = buffer_1100_ddpd[2019];

    auto g_y_x_0_0_xx_yz_x_yz = buffer_1100_ddpd[2020];

    auto g_y_x_0_0_xx_yz_x_zz = buffer_1100_ddpd[2021];

    auto g_y_x_0_0_xx_yz_y_xx = buffer_1100_ddpd[2022];

    auto g_y_x_0_0_xx_yz_y_xy = buffer_1100_ddpd[2023];

    auto g_y_x_0_0_xx_yz_y_xz = buffer_1100_ddpd[2024];

    auto g_y_x_0_0_xx_yz_y_yy = buffer_1100_ddpd[2025];

    auto g_y_x_0_0_xx_yz_y_yz = buffer_1100_ddpd[2026];

    auto g_y_x_0_0_xx_yz_y_zz = buffer_1100_ddpd[2027];

    auto g_y_x_0_0_xx_yz_z_xx = buffer_1100_ddpd[2028];

    auto g_y_x_0_0_xx_yz_z_xy = buffer_1100_ddpd[2029];

    auto g_y_x_0_0_xx_yz_z_xz = buffer_1100_ddpd[2030];

    auto g_y_x_0_0_xx_yz_z_yy = buffer_1100_ddpd[2031];

    auto g_y_x_0_0_xx_yz_z_yz = buffer_1100_ddpd[2032];

    auto g_y_x_0_0_xx_yz_z_zz = buffer_1100_ddpd[2033];

    auto g_y_x_0_0_xx_zz_x_xx = buffer_1100_ddpd[2034];

    auto g_y_x_0_0_xx_zz_x_xy = buffer_1100_ddpd[2035];

    auto g_y_x_0_0_xx_zz_x_xz = buffer_1100_ddpd[2036];

    auto g_y_x_0_0_xx_zz_x_yy = buffer_1100_ddpd[2037];

    auto g_y_x_0_0_xx_zz_x_yz = buffer_1100_ddpd[2038];

    auto g_y_x_0_0_xx_zz_x_zz = buffer_1100_ddpd[2039];

    auto g_y_x_0_0_xx_zz_y_xx = buffer_1100_ddpd[2040];

    auto g_y_x_0_0_xx_zz_y_xy = buffer_1100_ddpd[2041];

    auto g_y_x_0_0_xx_zz_y_xz = buffer_1100_ddpd[2042];

    auto g_y_x_0_0_xx_zz_y_yy = buffer_1100_ddpd[2043];

    auto g_y_x_0_0_xx_zz_y_yz = buffer_1100_ddpd[2044];

    auto g_y_x_0_0_xx_zz_y_zz = buffer_1100_ddpd[2045];

    auto g_y_x_0_0_xx_zz_z_xx = buffer_1100_ddpd[2046];

    auto g_y_x_0_0_xx_zz_z_xy = buffer_1100_ddpd[2047];

    auto g_y_x_0_0_xx_zz_z_xz = buffer_1100_ddpd[2048];

    auto g_y_x_0_0_xx_zz_z_yy = buffer_1100_ddpd[2049];

    auto g_y_x_0_0_xx_zz_z_yz = buffer_1100_ddpd[2050];

    auto g_y_x_0_0_xx_zz_z_zz = buffer_1100_ddpd[2051];

    auto g_y_x_0_0_xy_xx_x_xx = buffer_1100_ddpd[2052];

    auto g_y_x_0_0_xy_xx_x_xy = buffer_1100_ddpd[2053];

    auto g_y_x_0_0_xy_xx_x_xz = buffer_1100_ddpd[2054];

    auto g_y_x_0_0_xy_xx_x_yy = buffer_1100_ddpd[2055];

    auto g_y_x_0_0_xy_xx_x_yz = buffer_1100_ddpd[2056];

    auto g_y_x_0_0_xy_xx_x_zz = buffer_1100_ddpd[2057];

    auto g_y_x_0_0_xy_xx_y_xx = buffer_1100_ddpd[2058];

    auto g_y_x_0_0_xy_xx_y_xy = buffer_1100_ddpd[2059];

    auto g_y_x_0_0_xy_xx_y_xz = buffer_1100_ddpd[2060];

    auto g_y_x_0_0_xy_xx_y_yy = buffer_1100_ddpd[2061];

    auto g_y_x_0_0_xy_xx_y_yz = buffer_1100_ddpd[2062];

    auto g_y_x_0_0_xy_xx_y_zz = buffer_1100_ddpd[2063];

    auto g_y_x_0_0_xy_xx_z_xx = buffer_1100_ddpd[2064];

    auto g_y_x_0_0_xy_xx_z_xy = buffer_1100_ddpd[2065];

    auto g_y_x_0_0_xy_xx_z_xz = buffer_1100_ddpd[2066];

    auto g_y_x_0_0_xy_xx_z_yy = buffer_1100_ddpd[2067];

    auto g_y_x_0_0_xy_xx_z_yz = buffer_1100_ddpd[2068];

    auto g_y_x_0_0_xy_xx_z_zz = buffer_1100_ddpd[2069];

    auto g_y_x_0_0_xy_xy_x_xx = buffer_1100_ddpd[2070];

    auto g_y_x_0_0_xy_xy_x_xy = buffer_1100_ddpd[2071];

    auto g_y_x_0_0_xy_xy_x_xz = buffer_1100_ddpd[2072];

    auto g_y_x_0_0_xy_xy_x_yy = buffer_1100_ddpd[2073];

    auto g_y_x_0_0_xy_xy_x_yz = buffer_1100_ddpd[2074];

    auto g_y_x_0_0_xy_xy_x_zz = buffer_1100_ddpd[2075];

    auto g_y_x_0_0_xy_xy_y_xx = buffer_1100_ddpd[2076];

    auto g_y_x_0_0_xy_xy_y_xy = buffer_1100_ddpd[2077];

    auto g_y_x_0_0_xy_xy_y_xz = buffer_1100_ddpd[2078];

    auto g_y_x_0_0_xy_xy_y_yy = buffer_1100_ddpd[2079];

    auto g_y_x_0_0_xy_xy_y_yz = buffer_1100_ddpd[2080];

    auto g_y_x_0_0_xy_xy_y_zz = buffer_1100_ddpd[2081];

    auto g_y_x_0_0_xy_xy_z_xx = buffer_1100_ddpd[2082];

    auto g_y_x_0_0_xy_xy_z_xy = buffer_1100_ddpd[2083];

    auto g_y_x_0_0_xy_xy_z_xz = buffer_1100_ddpd[2084];

    auto g_y_x_0_0_xy_xy_z_yy = buffer_1100_ddpd[2085];

    auto g_y_x_0_0_xy_xy_z_yz = buffer_1100_ddpd[2086];

    auto g_y_x_0_0_xy_xy_z_zz = buffer_1100_ddpd[2087];

    auto g_y_x_0_0_xy_xz_x_xx = buffer_1100_ddpd[2088];

    auto g_y_x_0_0_xy_xz_x_xy = buffer_1100_ddpd[2089];

    auto g_y_x_0_0_xy_xz_x_xz = buffer_1100_ddpd[2090];

    auto g_y_x_0_0_xy_xz_x_yy = buffer_1100_ddpd[2091];

    auto g_y_x_0_0_xy_xz_x_yz = buffer_1100_ddpd[2092];

    auto g_y_x_0_0_xy_xz_x_zz = buffer_1100_ddpd[2093];

    auto g_y_x_0_0_xy_xz_y_xx = buffer_1100_ddpd[2094];

    auto g_y_x_0_0_xy_xz_y_xy = buffer_1100_ddpd[2095];

    auto g_y_x_0_0_xy_xz_y_xz = buffer_1100_ddpd[2096];

    auto g_y_x_0_0_xy_xz_y_yy = buffer_1100_ddpd[2097];

    auto g_y_x_0_0_xy_xz_y_yz = buffer_1100_ddpd[2098];

    auto g_y_x_0_0_xy_xz_y_zz = buffer_1100_ddpd[2099];

    auto g_y_x_0_0_xy_xz_z_xx = buffer_1100_ddpd[2100];

    auto g_y_x_0_0_xy_xz_z_xy = buffer_1100_ddpd[2101];

    auto g_y_x_0_0_xy_xz_z_xz = buffer_1100_ddpd[2102];

    auto g_y_x_0_0_xy_xz_z_yy = buffer_1100_ddpd[2103];

    auto g_y_x_0_0_xy_xz_z_yz = buffer_1100_ddpd[2104];

    auto g_y_x_0_0_xy_xz_z_zz = buffer_1100_ddpd[2105];

    auto g_y_x_0_0_xy_yy_x_xx = buffer_1100_ddpd[2106];

    auto g_y_x_0_0_xy_yy_x_xy = buffer_1100_ddpd[2107];

    auto g_y_x_0_0_xy_yy_x_xz = buffer_1100_ddpd[2108];

    auto g_y_x_0_0_xy_yy_x_yy = buffer_1100_ddpd[2109];

    auto g_y_x_0_0_xy_yy_x_yz = buffer_1100_ddpd[2110];

    auto g_y_x_0_0_xy_yy_x_zz = buffer_1100_ddpd[2111];

    auto g_y_x_0_0_xy_yy_y_xx = buffer_1100_ddpd[2112];

    auto g_y_x_0_0_xy_yy_y_xy = buffer_1100_ddpd[2113];

    auto g_y_x_0_0_xy_yy_y_xz = buffer_1100_ddpd[2114];

    auto g_y_x_0_0_xy_yy_y_yy = buffer_1100_ddpd[2115];

    auto g_y_x_0_0_xy_yy_y_yz = buffer_1100_ddpd[2116];

    auto g_y_x_0_0_xy_yy_y_zz = buffer_1100_ddpd[2117];

    auto g_y_x_0_0_xy_yy_z_xx = buffer_1100_ddpd[2118];

    auto g_y_x_0_0_xy_yy_z_xy = buffer_1100_ddpd[2119];

    auto g_y_x_0_0_xy_yy_z_xz = buffer_1100_ddpd[2120];

    auto g_y_x_0_0_xy_yy_z_yy = buffer_1100_ddpd[2121];

    auto g_y_x_0_0_xy_yy_z_yz = buffer_1100_ddpd[2122];

    auto g_y_x_0_0_xy_yy_z_zz = buffer_1100_ddpd[2123];

    auto g_y_x_0_0_xy_yz_x_xx = buffer_1100_ddpd[2124];

    auto g_y_x_0_0_xy_yz_x_xy = buffer_1100_ddpd[2125];

    auto g_y_x_0_0_xy_yz_x_xz = buffer_1100_ddpd[2126];

    auto g_y_x_0_0_xy_yz_x_yy = buffer_1100_ddpd[2127];

    auto g_y_x_0_0_xy_yz_x_yz = buffer_1100_ddpd[2128];

    auto g_y_x_0_0_xy_yz_x_zz = buffer_1100_ddpd[2129];

    auto g_y_x_0_0_xy_yz_y_xx = buffer_1100_ddpd[2130];

    auto g_y_x_0_0_xy_yz_y_xy = buffer_1100_ddpd[2131];

    auto g_y_x_0_0_xy_yz_y_xz = buffer_1100_ddpd[2132];

    auto g_y_x_0_0_xy_yz_y_yy = buffer_1100_ddpd[2133];

    auto g_y_x_0_0_xy_yz_y_yz = buffer_1100_ddpd[2134];

    auto g_y_x_0_0_xy_yz_y_zz = buffer_1100_ddpd[2135];

    auto g_y_x_0_0_xy_yz_z_xx = buffer_1100_ddpd[2136];

    auto g_y_x_0_0_xy_yz_z_xy = buffer_1100_ddpd[2137];

    auto g_y_x_0_0_xy_yz_z_xz = buffer_1100_ddpd[2138];

    auto g_y_x_0_0_xy_yz_z_yy = buffer_1100_ddpd[2139];

    auto g_y_x_0_0_xy_yz_z_yz = buffer_1100_ddpd[2140];

    auto g_y_x_0_0_xy_yz_z_zz = buffer_1100_ddpd[2141];

    auto g_y_x_0_0_xy_zz_x_xx = buffer_1100_ddpd[2142];

    auto g_y_x_0_0_xy_zz_x_xy = buffer_1100_ddpd[2143];

    auto g_y_x_0_0_xy_zz_x_xz = buffer_1100_ddpd[2144];

    auto g_y_x_0_0_xy_zz_x_yy = buffer_1100_ddpd[2145];

    auto g_y_x_0_0_xy_zz_x_yz = buffer_1100_ddpd[2146];

    auto g_y_x_0_0_xy_zz_x_zz = buffer_1100_ddpd[2147];

    auto g_y_x_0_0_xy_zz_y_xx = buffer_1100_ddpd[2148];

    auto g_y_x_0_0_xy_zz_y_xy = buffer_1100_ddpd[2149];

    auto g_y_x_0_0_xy_zz_y_xz = buffer_1100_ddpd[2150];

    auto g_y_x_0_0_xy_zz_y_yy = buffer_1100_ddpd[2151];

    auto g_y_x_0_0_xy_zz_y_yz = buffer_1100_ddpd[2152];

    auto g_y_x_0_0_xy_zz_y_zz = buffer_1100_ddpd[2153];

    auto g_y_x_0_0_xy_zz_z_xx = buffer_1100_ddpd[2154];

    auto g_y_x_0_0_xy_zz_z_xy = buffer_1100_ddpd[2155];

    auto g_y_x_0_0_xy_zz_z_xz = buffer_1100_ddpd[2156];

    auto g_y_x_0_0_xy_zz_z_yy = buffer_1100_ddpd[2157];

    auto g_y_x_0_0_xy_zz_z_yz = buffer_1100_ddpd[2158];

    auto g_y_x_0_0_xy_zz_z_zz = buffer_1100_ddpd[2159];

    auto g_y_x_0_0_xz_xx_x_xx = buffer_1100_ddpd[2160];

    auto g_y_x_0_0_xz_xx_x_xy = buffer_1100_ddpd[2161];

    auto g_y_x_0_0_xz_xx_x_xz = buffer_1100_ddpd[2162];

    auto g_y_x_0_0_xz_xx_x_yy = buffer_1100_ddpd[2163];

    auto g_y_x_0_0_xz_xx_x_yz = buffer_1100_ddpd[2164];

    auto g_y_x_0_0_xz_xx_x_zz = buffer_1100_ddpd[2165];

    auto g_y_x_0_0_xz_xx_y_xx = buffer_1100_ddpd[2166];

    auto g_y_x_0_0_xz_xx_y_xy = buffer_1100_ddpd[2167];

    auto g_y_x_0_0_xz_xx_y_xz = buffer_1100_ddpd[2168];

    auto g_y_x_0_0_xz_xx_y_yy = buffer_1100_ddpd[2169];

    auto g_y_x_0_0_xz_xx_y_yz = buffer_1100_ddpd[2170];

    auto g_y_x_0_0_xz_xx_y_zz = buffer_1100_ddpd[2171];

    auto g_y_x_0_0_xz_xx_z_xx = buffer_1100_ddpd[2172];

    auto g_y_x_0_0_xz_xx_z_xy = buffer_1100_ddpd[2173];

    auto g_y_x_0_0_xz_xx_z_xz = buffer_1100_ddpd[2174];

    auto g_y_x_0_0_xz_xx_z_yy = buffer_1100_ddpd[2175];

    auto g_y_x_0_0_xz_xx_z_yz = buffer_1100_ddpd[2176];

    auto g_y_x_0_0_xz_xx_z_zz = buffer_1100_ddpd[2177];

    auto g_y_x_0_0_xz_xy_x_xx = buffer_1100_ddpd[2178];

    auto g_y_x_0_0_xz_xy_x_xy = buffer_1100_ddpd[2179];

    auto g_y_x_0_0_xz_xy_x_xz = buffer_1100_ddpd[2180];

    auto g_y_x_0_0_xz_xy_x_yy = buffer_1100_ddpd[2181];

    auto g_y_x_0_0_xz_xy_x_yz = buffer_1100_ddpd[2182];

    auto g_y_x_0_0_xz_xy_x_zz = buffer_1100_ddpd[2183];

    auto g_y_x_0_0_xz_xy_y_xx = buffer_1100_ddpd[2184];

    auto g_y_x_0_0_xz_xy_y_xy = buffer_1100_ddpd[2185];

    auto g_y_x_0_0_xz_xy_y_xz = buffer_1100_ddpd[2186];

    auto g_y_x_0_0_xz_xy_y_yy = buffer_1100_ddpd[2187];

    auto g_y_x_0_0_xz_xy_y_yz = buffer_1100_ddpd[2188];

    auto g_y_x_0_0_xz_xy_y_zz = buffer_1100_ddpd[2189];

    auto g_y_x_0_0_xz_xy_z_xx = buffer_1100_ddpd[2190];

    auto g_y_x_0_0_xz_xy_z_xy = buffer_1100_ddpd[2191];

    auto g_y_x_0_0_xz_xy_z_xz = buffer_1100_ddpd[2192];

    auto g_y_x_0_0_xz_xy_z_yy = buffer_1100_ddpd[2193];

    auto g_y_x_0_0_xz_xy_z_yz = buffer_1100_ddpd[2194];

    auto g_y_x_0_0_xz_xy_z_zz = buffer_1100_ddpd[2195];

    auto g_y_x_0_0_xz_xz_x_xx = buffer_1100_ddpd[2196];

    auto g_y_x_0_0_xz_xz_x_xy = buffer_1100_ddpd[2197];

    auto g_y_x_0_0_xz_xz_x_xz = buffer_1100_ddpd[2198];

    auto g_y_x_0_0_xz_xz_x_yy = buffer_1100_ddpd[2199];

    auto g_y_x_0_0_xz_xz_x_yz = buffer_1100_ddpd[2200];

    auto g_y_x_0_0_xz_xz_x_zz = buffer_1100_ddpd[2201];

    auto g_y_x_0_0_xz_xz_y_xx = buffer_1100_ddpd[2202];

    auto g_y_x_0_0_xz_xz_y_xy = buffer_1100_ddpd[2203];

    auto g_y_x_0_0_xz_xz_y_xz = buffer_1100_ddpd[2204];

    auto g_y_x_0_0_xz_xz_y_yy = buffer_1100_ddpd[2205];

    auto g_y_x_0_0_xz_xz_y_yz = buffer_1100_ddpd[2206];

    auto g_y_x_0_0_xz_xz_y_zz = buffer_1100_ddpd[2207];

    auto g_y_x_0_0_xz_xz_z_xx = buffer_1100_ddpd[2208];

    auto g_y_x_0_0_xz_xz_z_xy = buffer_1100_ddpd[2209];

    auto g_y_x_0_0_xz_xz_z_xz = buffer_1100_ddpd[2210];

    auto g_y_x_0_0_xz_xz_z_yy = buffer_1100_ddpd[2211];

    auto g_y_x_0_0_xz_xz_z_yz = buffer_1100_ddpd[2212];

    auto g_y_x_0_0_xz_xz_z_zz = buffer_1100_ddpd[2213];

    auto g_y_x_0_0_xz_yy_x_xx = buffer_1100_ddpd[2214];

    auto g_y_x_0_0_xz_yy_x_xy = buffer_1100_ddpd[2215];

    auto g_y_x_0_0_xz_yy_x_xz = buffer_1100_ddpd[2216];

    auto g_y_x_0_0_xz_yy_x_yy = buffer_1100_ddpd[2217];

    auto g_y_x_0_0_xz_yy_x_yz = buffer_1100_ddpd[2218];

    auto g_y_x_0_0_xz_yy_x_zz = buffer_1100_ddpd[2219];

    auto g_y_x_0_0_xz_yy_y_xx = buffer_1100_ddpd[2220];

    auto g_y_x_0_0_xz_yy_y_xy = buffer_1100_ddpd[2221];

    auto g_y_x_0_0_xz_yy_y_xz = buffer_1100_ddpd[2222];

    auto g_y_x_0_0_xz_yy_y_yy = buffer_1100_ddpd[2223];

    auto g_y_x_0_0_xz_yy_y_yz = buffer_1100_ddpd[2224];

    auto g_y_x_0_0_xz_yy_y_zz = buffer_1100_ddpd[2225];

    auto g_y_x_0_0_xz_yy_z_xx = buffer_1100_ddpd[2226];

    auto g_y_x_0_0_xz_yy_z_xy = buffer_1100_ddpd[2227];

    auto g_y_x_0_0_xz_yy_z_xz = buffer_1100_ddpd[2228];

    auto g_y_x_0_0_xz_yy_z_yy = buffer_1100_ddpd[2229];

    auto g_y_x_0_0_xz_yy_z_yz = buffer_1100_ddpd[2230];

    auto g_y_x_0_0_xz_yy_z_zz = buffer_1100_ddpd[2231];

    auto g_y_x_0_0_xz_yz_x_xx = buffer_1100_ddpd[2232];

    auto g_y_x_0_0_xz_yz_x_xy = buffer_1100_ddpd[2233];

    auto g_y_x_0_0_xz_yz_x_xz = buffer_1100_ddpd[2234];

    auto g_y_x_0_0_xz_yz_x_yy = buffer_1100_ddpd[2235];

    auto g_y_x_0_0_xz_yz_x_yz = buffer_1100_ddpd[2236];

    auto g_y_x_0_0_xz_yz_x_zz = buffer_1100_ddpd[2237];

    auto g_y_x_0_0_xz_yz_y_xx = buffer_1100_ddpd[2238];

    auto g_y_x_0_0_xz_yz_y_xy = buffer_1100_ddpd[2239];

    auto g_y_x_0_0_xz_yz_y_xz = buffer_1100_ddpd[2240];

    auto g_y_x_0_0_xz_yz_y_yy = buffer_1100_ddpd[2241];

    auto g_y_x_0_0_xz_yz_y_yz = buffer_1100_ddpd[2242];

    auto g_y_x_0_0_xz_yz_y_zz = buffer_1100_ddpd[2243];

    auto g_y_x_0_0_xz_yz_z_xx = buffer_1100_ddpd[2244];

    auto g_y_x_0_0_xz_yz_z_xy = buffer_1100_ddpd[2245];

    auto g_y_x_0_0_xz_yz_z_xz = buffer_1100_ddpd[2246];

    auto g_y_x_0_0_xz_yz_z_yy = buffer_1100_ddpd[2247];

    auto g_y_x_0_0_xz_yz_z_yz = buffer_1100_ddpd[2248];

    auto g_y_x_0_0_xz_yz_z_zz = buffer_1100_ddpd[2249];

    auto g_y_x_0_0_xz_zz_x_xx = buffer_1100_ddpd[2250];

    auto g_y_x_0_0_xz_zz_x_xy = buffer_1100_ddpd[2251];

    auto g_y_x_0_0_xz_zz_x_xz = buffer_1100_ddpd[2252];

    auto g_y_x_0_0_xz_zz_x_yy = buffer_1100_ddpd[2253];

    auto g_y_x_0_0_xz_zz_x_yz = buffer_1100_ddpd[2254];

    auto g_y_x_0_0_xz_zz_x_zz = buffer_1100_ddpd[2255];

    auto g_y_x_0_0_xz_zz_y_xx = buffer_1100_ddpd[2256];

    auto g_y_x_0_0_xz_zz_y_xy = buffer_1100_ddpd[2257];

    auto g_y_x_0_0_xz_zz_y_xz = buffer_1100_ddpd[2258];

    auto g_y_x_0_0_xz_zz_y_yy = buffer_1100_ddpd[2259];

    auto g_y_x_0_0_xz_zz_y_yz = buffer_1100_ddpd[2260];

    auto g_y_x_0_0_xz_zz_y_zz = buffer_1100_ddpd[2261];

    auto g_y_x_0_0_xz_zz_z_xx = buffer_1100_ddpd[2262];

    auto g_y_x_0_0_xz_zz_z_xy = buffer_1100_ddpd[2263];

    auto g_y_x_0_0_xz_zz_z_xz = buffer_1100_ddpd[2264];

    auto g_y_x_0_0_xz_zz_z_yy = buffer_1100_ddpd[2265];

    auto g_y_x_0_0_xz_zz_z_yz = buffer_1100_ddpd[2266];

    auto g_y_x_0_0_xz_zz_z_zz = buffer_1100_ddpd[2267];

    auto g_y_x_0_0_yy_xx_x_xx = buffer_1100_ddpd[2268];

    auto g_y_x_0_0_yy_xx_x_xy = buffer_1100_ddpd[2269];

    auto g_y_x_0_0_yy_xx_x_xz = buffer_1100_ddpd[2270];

    auto g_y_x_0_0_yy_xx_x_yy = buffer_1100_ddpd[2271];

    auto g_y_x_0_0_yy_xx_x_yz = buffer_1100_ddpd[2272];

    auto g_y_x_0_0_yy_xx_x_zz = buffer_1100_ddpd[2273];

    auto g_y_x_0_0_yy_xx_y_xx = buffer_1100_ddpd[2274];

    auto g_y_x_0_0_yy_xx_y_xy = buffer_1100_ddpd[2275];

    auto g_y_x_0_0_yy_xx_y_xz = buffer_1100_ddpd[2276];

    auto g_y_x_0_0_yy_xx_y_yy = buffer_1100_ddpd[2277];

    auto g_y_x_0_0_yy_xx_y_yz = buffer_1100_ddpd[2278];

    auto g_y_x_0_0_yy_xx_y_zz = buffer_1100_ddpd[2279];

    auto g_y_x_0_0_yy_xx_z_xx = buffer_1100_ddpd[2280];

    auto g_y_x_0_0_yy_xx_z_xy = buffer_1100_ddpd[2281];

    auto g_y_x_0_0_yy_xx_z_xz = buffer_1100_ddpd[2282];

    auto g_y_x_0_0_yy_xx_z_yy = buffer_1100_ddpd[2283];

    auto g_y_x_0_0_yy_xx_z_yz = buffer_1100_ddpd[2284];

    auto g_y_x_0_0_yy_xx_z_zz = buffer_1100_ddpd[2285];

    auto g_y_x_0_0_yy_xy_x_xx = buffer_1100_ddpd[2286];

    auto g_y_x_0_0_yy_xy_x_xy = buffer_1100_ddpd[2287];

    auto g_y_x_0_0_yy_xy_x_xz = buffer_1100_ddpd[2288];

    auto g_y_x_0_0_yy_xy_x_yy = buffer_1100_ddpd[2289];

    auto g_y_x_0_0_yy_xy_x_yz = buffer_1100_ddpd[2290];

    auto g_y_x_0_0_yy_xy_x_zz = buffer_1100_ddpd[2291];

    auto g_y_x_0_0_yy_xy_y_xx = buffer_1100_ddpd[2292];

    auto g_y_x_0_0_yy_xy_y_xy = buffer_1100_ddpd[2293];

    auto g_y_x_0_0_yy_xy_y_xz = buffer_1100_ddpd[2294];

    auto g_y_x_0_0_yy_xy_y_yy = buffer_1100_ddpd[2295];

    auto g_y_x_0_0_yy_xy_y_yz = buffer_1100_ddpd[2296];

    auto g_y_x_0_0_yy_xy_y_zz = buffer_1100_ddpd[2297];

    auto g_y_x_0_0_yy_xy_z_xx = buffer_1100_ddpd[2298];

    auto g_y_x_0_0_yy_xy_z_xy = buffer_1100_ddpd[2299];

    auto g_y_x_0_0_yy_xy_z_xz = buffer_1100_ddpd[2300];

    auto g_y_x_0_0_yy_xy_z_yy = buffer_1100_ddpd[2301];

    auto g_y_x_0_0_yy_xy_z_yz = buffer_1100_ddpd[2302];

    auto g_y_x_0_0_yy_xy_z_zz = buffer_1100_ddpd[2303];

    auto g_y_x_0_0_yy_xz_x_xx = buffer_1100_ddpd[2304];

    auto g_y_x_0_0_yy_xz_x_xy = buffer_1100_ddpd[2305];

    auto g_y_x_0_0_yy_xz_x_xz = buffer_1100_ddpd[2306];

    auto g_y_x_0_0_yy_xz_x_yy = buffer_1100_ddpd[2307];

    auto g_y_x_0_0_yy_xz_x_yz = buffer_1100_ddpd[2308];

    auto g_y_x_0_0_yy_xz_x_zz = buffer_1100_ddpd[2309];

    auto g_y_x_0_0_yy_xz_y_xx = buffer_1100_ddpd[2310];

    auto g_y_x_0_0_yy_xz_y_xy = buffer_1100_ddpd[2311];

    auto g_y_x_0_0_yy_xz_y_xz = buffer_1100_ddpd[2312];

    auto g_y_x_0_0_yy_xz_y_yy = buffer_1100_ddpd[2313];

    auto g_y_x_0_0_yy_xz_y_yz = buffer_1100_ddpd[2314];

    auto g_y_x_0_0_yy_xz_y_zz = buffer_1100_ddpd[2315];

    auto g_y_x_0_0_yy_xz_z_xx = buffer_1100_ddpd[2316];

    auto g_y_x_0_0_yy_xz_z_xy = buffer_1100_ddpd[2317];

    auto g_y_x_0_0_yy_xz_z_xz = buffer_1100_ddpd[2318];

    auto g_y_x_0_0_yy_xz_z_yy = buffer_1100_ddpd[2319];

    auto g_y_x_0_0_yy_xz_z_yz = buffer_1100_ddpd[2320];

    auto g_y_x_0_0_yy_xz_z_zz = buffer_1100_ddpd[2321];

    auto g_y_x_0_0_yy_yy_x_xx = buffer_1100_ddpd[2322];

    auto g_y_x_0_0_yy_yy_x_xy = buffer_1100_ddpd[2323];

    auto g_y_x_0_0_yy_yy_x_xz = buffer_1100_ddpd[2324];

    auto g_y_x_0_0_yy_yy_x_yy = buffer_1100_ddpd[2325];

    auto g_y_x_0_0_yy_yy_x_yz = buffer_1100_ddpd[2326];

    auto g_y_x_0_0_yy_yy_x_zz = buffer_1100_ddpd[2327];

    auto g_y_x_0_0_yy_yy_y_xx = buffer_1100_ddpd[2328];

    auto g_y_x_0_0_yy_yy_y_xy = buffer_1100_ddpd[2329];

    auto g_y_x_0_0_yy_yy_y_xz = buffer_1100_ddpd[2330];

    auto g_y_x_0_0_yy_yy_y_yy = buffer_1100_ddpd[2331];

    auto g_y_x_0_0_yy_yy_y_yz = buffer_1100_ddpd[2332];

    auto g_y_x_0_0_yy_yy_y_zz = buffer_1100_ddpd[2333];

    auto g_y_x_0_0_yy_yy_z_xx = buffer_1100_ddpd[2334];

    auto g_y_x_0_0_yy_yy_z_xy = buffer_1100_ddpd[2335];

    auto g_y_x_0_0_yy_yy_z_xz = buffer_1100_ddpd[2336];

    auto g_y_x_0_0_yy_yy_z_yy = buffer_1100_ddpd[2337];

    auto g_y_x_0_0_yy_yy_z_yz = buffer_1100_ddpd[2338];

    auto g_y_x_0_0_yy_yy_z_zz = buffer_1100_ddpd[2339];

    auto g_y_x_0_0_yy_yz_x_xx = buffer_1100_ddpd[2340];

    auto g_y_x_0_0_yy_yz_x_xy = buffer_1100_ddpd[2341];

    auto g_y_x_0_0_yy_yz_x_xz = buffer_1100_ddpd[2342];

    auto g_y_x_0_0_yy_yz_x_yy = buffer_1100_ddpd[2343];

    auto g_y_x_0_0_yy_yz_x_yz = buffer_1100_ddpd[2344];

    auto g_y_x_0_0_yy_yz_x_zz = buffer_1100_ddpd[2345];

    auto g_y_x_0_0_yy_yz_y_xx = buffer_1100_ddpd[2346];

    auto g_y_x_0_0_yy_yz_y_xy = buffer_1100_ddpd[2347];

    auto g_y_x_0_0_yy_yz_y_xz = buffer_1100_ddpd[2348];

    auto g_y_x_0_0_yy_yz_y_yy = buffer_1100_ddpd[2349];

    auto g_y_x_0_0_yy_yz_y_yz = buffer_1100_ddpd[2350];

    auto g_y_x_0_0_yy_yz_y_zz = buffer_1100_ddpd[2351];

    auto g_y_x_0_0_yy_yz_z_xx = buffer_1100_ddpd[2352];

    auto g_y_x_0_0_yy_yz_z_xy = buffer_1100_ddpd[2353];

    auto g_y_x_0_0_yy_yz_z_xz = buffer_1100_ddpd[2354];

    auto g_y_x_0_0_yy_yz_z_yy = buffer_1100_ddpd[2355];

    auto g_y_x_0_0_yy_yz_z_yz = buffer_1100_ddpd[2356];

    auto g_y_x_0_0_yy_yz_z_zz = buffer_1100_ddpd[2357];

    auto g_y_x_0_0_yy_zz_x_xx = buffer_1100_ddpd[2358];

    auto g_y_x_0_0_yy_zz_x_xy = buffer_1100_ddpd[2359];

    auto g_y_x_0_0_yy_zz_x_xz = buffer_1100_ddpd[2360];

    auto g_y_x_0_0_yy_zz_x_yy = buffer_1100_ddpd[2361];

    auto g_y_x_0_0_yy_zz_x_yz = buffer_1100_ddpd[2362];

    auto g_y_x_0_0_yy_zz_x_zz = buffer_1100_ddpd[2363];

    auto g_y_x_0_0_yy_zz_y_xx = buffer_1100_ddpd[2364];

    auto g_y_x_0_0_yy_zz_y_xy = buffer_1100_ddpd[2365];

    auto g_y_x_0_0_yy_zz_y_xz = buffer_1100_ddpd[2366];

    auto g_y_x_0_0_yy_zz_y_yy = buffer_1100_ddpd[2367];

    auto g_y_x_0_0_yy_zz_y_yz = buffer_1100_ddpd[2368];

    auto g_y_x_0_0_yy_zz_y_zz = buffer_1100_ddpd[2369];

    auto g_y_x_0_0_yy_zz_z_xx = buffer_1100_ddpd[2370];

    auto g_y_x_0_0_yy_zz_z_xy = buffer_1100_ddpd[2371];

    auto g_y_x_0_0_yy_zz_z_xz = buffer_1100_ddpd[2372];

    auto g_y_x_0_0_yy_zz_z_yy = buffer_1100_ddpd[2373];

    auto g_y_x_0_0_yy_zz_z_yz = buffer_1100_ddpd[2374];

    auto g_y_x_0_0_yy_zz_z_zz = buffer_1100_ddpd[2375];

    auto g_y_x_0_0_yz_xx_x_xx = buffer_1100_ddpd[2376];

    auto g_y_x_0_0_yz_xx_x_xy = buffer_1100_ddpd[2377];

    auto g_y_x_0_0_yz_xx_x_xz = buffer_1100_ddpd[2378];

    auto g_y_x_0_0_yz_xx_x_yy = buffer_1100_ddpd[2379];

    auto g_y_x_0_0_yz_xx_x_yz = buffer_1100_ddpd[2380];

    auto g_y_x_0_0_yz_xx_x_zz = buffer_1100_ddpd[2381];

    auto g_y_x_0_0_yz_xx_y_xx = buffer_1100_ddpd[2382];

    auto g_y_x_0_0_yz_xx_y_xy = buffer_1100_ddpd[2383];

    auto g_y_x_0_0_yz_xx_y_xz = buffer_1100_ddpd[2384];

    auto g_y_x_0_0_yz_xx_y_yy = buffer_1100_ddpd[2385];

    auto g_y_x_0_0_yz_xx_y_yz = buffer_1100_ddpd[2386];

    auto g_y_x_0_0_yz_xx_y_zz = buffer_1100_ddpd[2387];

    auto g_y_x_0_0_yz_xx_z_xx = buffer_1100_ddpd[2388];

    auto g_y_x_0_0_yz_xx_z_xy = buffer_1100_ddpd[2389];

    auto g_y_x_0_0_yz_xx_z_xz = buffer_1100_ddpd[2390];

    auto g_y_x_0_0_yz_xx_z_yy = buffer_1100_ddpd[2391];

    auto g_y_x_0_0_yz_xx_z_yz = buffer_1100_ddpd[2392];

    auto g_y_x_0_0_yz_xx_z_zz = buffer_1100_ddpd[2393];

    auto g_y_x_0_0_yz_xy_x_xx = buffer_1100_ddpd[2394];

    auto g_y_x_0_0_yz_xy_x_xy = buffer_1100_ddpd[2395];

    auto g_y_x_0_0_yz_xy_x_xz = buffer_1100_ddpd[2396];

    auto g_y_x_0_0_yz_xy_x_yy = buffer_1100_ddpd[2397];

    auto g_y_x_0_0_yz_xy_x_yz = buffer_1100_ddpd[2398];

    auto g_y_x_0_0_yz_xy_x_zz = buffer_1100_ddpd[2399];

    auto g_y_x_0_0_yz_xy_y_xx = buffer_1100_ddpd[2400];

    auto g_y_x_0_0_yz_xy_y_xy = buffer_1100_ddpd[2401];

    auto g_y_x_0_0_yz_xy_y_xz = buffer_1100_ddpd[2402];

    auto g_y_x_0_0_yz_xy_y_yy = buffer_1100_ddpd[2403];

    auto g_y_x_0_0_yz_xy_y_yz = buffer_1100_ddpd[2404];

    auto g_y_x_0_0_yz_xy_y_zz = buffer_1100_ddpd[2405];

    auto g_y_x_0_0_yz_xy_z_xx = buffer_1100_ddpd[2406];

    auto g_y_x_0_0_yz_xy_z_xy = buffer_1100_ddpd[2407];

    auto g_y_x_0_0_yz_xy_z_xz = buffer_1100_ddpd[2408];

    auto g_y_x_0_0_yz_xy_z_yy = buffer_1100_ddpd[2409];

    auto g_y_x_0_0_yz_xy_z_yz = buffer_1100_ddpd[2410];

    auto g_y_x_0_0_yz_xy_z_zz = buffer_1100_ddpd[2411];

    auto g_y_x_0_0_yz_xz_x_xx = buffer_1100_ddpd[2412];

    auto g_y_x_0_0_yz_xz_x_xy = buffer_1100_ddpd[2413];

    auto g_y_x_0_0_yz_xz_x_xz = buffer_1100_ddpd[2414];

    auto g_y_x_0_0_yz_xz_x_yy = buffer_1100_ddpd[2415];

    auto g_y_x_0_0_yz_xz_x_yz = buffer_1100_ddpd[2416];

    auto g_y_x_0_0_yz_xz_x_zz = buffer_1100_ddpd[2417];

    auto g_y_x_0_0_yz_xz_y_xx = buffer_1100_ddpd[2418];

    auto g_y_x_0_0_yz_xz_y_xy = buffer_1100_ddpd[2419];

    auto g_y_x_0_0_yz_xz_y_xz = buffer_1100_ddpd[2420];

    auto g_y_x_0_0_yz_xz_y_yy = buffer_1100_ddpd[2421];

    auto g_y_x_0_0_yz_xz_y_yz = buffer_1100_ddpd[2422];

    auto g_y_x_0_0_yz_xz_y_zz = buffer_1100_ddpd[2423];

    auto g_y_x_0_0_yz_xz_z_xx = buffer_1100_ddpd[2424];

    auto g_y_x_0_0_yz_xz_z_xy = buffer_1100_ddpd[2425];

    auto g_y_x_0_0_yz_xz_z_xz = buffer_1100_ddpd[2426];

    auto g_y_x_0_0_yz_xz_z_yy = buffer_1100_ddpd[2427];

    auto g_y_x_0_0_yz_xz_z_yz = buffer_1100_ddpd[2428];

    auto g_y_x_0_0_yz_xz_z_zz = buffer_1100_ddpd[2429];

    auto g_y_x_0_0_yz_yy_x_xx = buffer_1100_ddpd[2430];

    auto g_y_x_0_0_yz_yy_x_xy = buffer_1100_ddpd[2431];

    auto g_y_x_0_0_yz_yy_x_xz = buffer_1100_ddpd[2432];

    auto g_y_x_0_0_yz_yy_x_yy = buffer_1100_ddpd[2433];

    auto g_y_x_0_0_yz_yy_x_yz = buffer_1100_ddpd[2434];

    auto g_y_x_0_0_yz_yy_x_zz = buffer_1100_ddpd[2435];

    auto g_y_x_0_0_yz_yy_y_xx = buffer_1100_ddpd[2436];

    auto g_y_x_0_0_yz_yy_y_xy = buffer_1100_ddpd[2437];

    auto g_y_x_0_0_yz_yy_y_xz = buffer_1100_ddpd[2438];

    auto g_y_x_0_0_yz_yy_y_yy = buffer_1100_ddpd[2439];

    auto g_y_x_0_0_yz_yy_y_yz = buffer_1100_ddpd[2440];

    auto g_y_x_0_0_yz_yy_y_zz = buffer_1100_ddpd[2441];

    auto g_y_x_0_0_yz_yy_z_xx = buffer_1100_ddpd[2442];

    auto g_y_x_0_0_yz_yy_z_xy = buffer_1100_ddpd[2443];

    auto g_y_x_0_0_yz_yy_z_xz = buffer_1100_ddpd[2444];

    auto g_y_x_0_0_yz_yy_z_yy = buffer_1100_ddpd[2445];

    auto g_y_x_0_0_yz_yy_z_yz = buffer_1100_ddpd[2446];

    auto g_y_x_0_0_yz_yy_z_zz = buffer_1100_ddpd[2447];

    auto g_y_x_0_0_yz_yz_x_xx = buffer_1100_ddpd[2448];

    auto g_y_x_0_0_yz_yz_x_xy = buffer_1100_ddpd[2449];

    auto g_y_x_0_0_yz_yz_x_xz = buffer_1100_ddpd[2450];

    auto g_y_x_0_0_yz_yz_x_yy = buffer_1100_ddpd[2451];

    auto g_y_x_0_0_yz_yz_x_yz = buffer_1100_ddpd[2452];

    auto g_y_x_0_0_yz_yz_x_zz = buffer_1100_ddpd[2453];

    auto g_y_x_0_0_yz_yz_y_xx = buffer_1100_ddpd[2454];

    auto g_y_x_0_0_yz_yz_y_xy = buffer_1100_ddpd[2455];

    auto g_y_x_0_0_yz_yz_y_xz = buffer_1100_ddpd[2456];

    auto g_y_x_0_0_yz_yz_y_yy = buffer_1100_ddpd[2457];

    auto g_y_x_0_0_yz_yz_y_yz = buffer_1100_ddpd[2458];

    auto g_y_x_0_0_yz_yz_y_zz = buffer_1100_ddpd[2459];

    auto g_y_x_0_0_yz_yz_z_xx = buffer_1100_ddpd[2460];

    auto g_y_x_0_0_yz_yz_z_xy = buffer_1100_ddpd[2461];

    auto g_y_x_0_0_yz_yz_z_xz = buffer_1100_ddpd[2462];

    auto g_y_x_0_0_yz_yz_z_yy = buffer_1100_ddpd[2463];

    auto g_y_x_0_0_yz_yz_z_yz = buffer_1100_ddpd[2464];

    auto g_y_x_0_0_yz_yz_z_zz = buffer_1100_ddpd[2465];

    auto g_y_x_0_0_yz_zz_x_xx = buffer_1100_ddpd[2466];

    auto g_y_x_0_0_yz_zz_x_xy = buffer_1100_ddpd[2467];

    auto g_y_x_0_0_yz_zz_x_xz = buffer_1100_ddpd[2468];

    auto g_y_x_0_0_yz_zz_x_yy = buffer_1100_ddpd[2469];

    auto g_y_x_0_0_yz_zz_x_yz = buffer_1100_ddpd[2470];

    auto g_y_x_0_0_yz_zz_x_zz = buffer_1100_ddpd[2471];

    auto g_y_x_0_0_yz_zz_y_xx = buffer_1100_ddpd[2472];

    auto g_y_x_0_0_yz_zz_y_xy = buffer_1100_ddpd[2473];

    auto g_y_x_0_0_yz_zz_y_xz = buffer_1100_ddpd[2474];

    auto g_y_x_0_0_yz_zz_y_yy = buffer_1100_ddpd[2475];

    auto g_y_x_0_0_yz_zz_y_yz = buffer_1100_ddpd[2476];

    auto g_y_x_0_0_yz_zz_y_zz = buffer_1100_ddpd[2477];

    auto g_y_x_0_0_yz_zz_z_xx = buffer_1100_ddpd[2478];

    auto g_y_x_0_0_yz_zz_z_xy = buffer_1100_ddpd[2479];

    auto g_y_x_0_0_yz_zz_z_xz = buffer_1100_ddpd[2480];

    auto g_y_x_0_0_yz_zz_z_yy = buffer_1100_ddpd[2481];

    auto g_y_x_0_0_yz_zz_z_yz = buffer_1100_ddpd[2482];

    auto g_y_x_0_0_yz_zz_z_zz = buffer_1100_ddpd[2483];

    auto g_y_x_0_0_zz_xx_x_xx = buffer_1100_ddpd[2484];

    auto g_y_x_0_0_zz_xx_x_xy = buffer_1100_ddpd[2485];

    auto g_y_x_0_0_zz_xx_x_xz = buffer_1100_ddpd[2486];

    auto g_y_x_0_0_zz_xx_x_yy = buffer_1100_ddpd[2487];

    auto g_y_x_0_0_zz_xx_x_yz = buffer_1100_ddpd[2488];

    auto g_y_x_0_0_zz_xx_x_zz = buffer_1100_ddpd[2489];

    auto g_y_x_0_0_zz_xx_y_xx = buffer_1100_ddpd[2490];

    auto g_y_x_0_0_zz_xx_y_xy = buffer_1100_ddpd[2491];

    auto g_y_x_0_0_zz_xx_y_xz = buffer_1100_ddpd[2492];

    auto g_y_x_0_0_zz_xx_y_yy = buffer_1100_ddpd[2493];

    auto g_y_x_0_0_zz_xx_y_yz = buffer_1100_ddpd[2494];

    auto g_y_x_0_0_zz_xx_y_zz = buffer_1100_ddpd[2495];

    auto g_y_x_0_0_zz_xx_z_xx = buffer_1100_ddpd[2496];

    auto g_y_x_0_0_zz_xx_z_xy = buffer_1100_ddpd[2497];

    auto g_y_x_0_0_zz_xx_z_xz = buffer_1100_ddpd[2498];

    auto g_y_x_0_0_zz_xx_z_yy = buffer_1100_ddpd[2499];

    auto g_y_x_0_0_zz_xx_z_yz = buffer_1100_ddpd[2500];

    auto g_y_x_0_0_zz_xx_z_zz = buffer_1100_ddpd[2501];

    auto g_y_x_0_0_zz_xy_x_xx = buffer_1100_ddpd[2502];

    auto g_y_x_0_0_zz_xy_x_xy = buffer_1100_ddpd[2503];

    auto g_y_x_0_0_zz_xy_x_xz = buffer_1100_ddpd[2504];

    auto g_y_x_0_0_zz_xy_x_yy = buffer_1100_ddpd[2505];

    auto g_y_x_0_0_zz_xy_x_yz = buffer_1100_ddpd[2506];

    auto g_y_x_0_0_zz_xy_x_zz = buffer_1100_ddpd[2507];

    auto g_y_x_0_0_zz_xy_y_xx = buffer_1100_ddpd[2508];

    auto g_y_x_0_0_zz_xy_y_xy = buffer_1100_ddpd[2509];

    auto g_y_x_0_0_zz_xy_y_xz = buffer_1100_ddpd[2510];

    auto g_y_x_0_0_zz_xy_y_yy = buffer_1100_ddpd[2511];

    auto g_y_x_0_0_zz_xy_y_yz = buffer_1100_ddpd[2512];

    auto g_y_x_0_0_zz_xy_y_zz = buffer_1100_ddpd[2513];

    auto g_y_x_0_0_zz_xy_z_xx = buffer_1100_ddpd[2514];

    auto g_y_x_0_0_zz_xy_z_xy = buffer_1100_ddpd[2515];

    auto g_y_x_0_0_zz_xy_z_xz = buffer_1100_ddpd[2516];

    auto g_y_x_0_0_zz_xy_z_yy = buffer_1100_ddpd[2517];

    auto g_y_x_0_0_zz_xy_z_yz = buffer_1100_ddpd[2518];

    auto g_y_x_0_0_zz_xy_z_zz = buffer_1100_ddpd[2519];

    auto g_y_x_0_0_zz_xz_x_xx = buffer_1100_ddpd[2520];

    auto g_y_x_0_0_zz_xz_x_xy = buffer_1100_ddpd[2521];

    auto g_y_x_0_0_zz_xz_x_xz = buffer_1100_ddpd[2522];

    auto g_y_x_0_0_zz_xz_x_yy = buffer_1100_ddpd[2523];

    auto g_y_x_0_0_zz_xz_x_yz = buffer_1100_ddpd[2524];

    auto g_y_x_0_0_zz_xz_x_zz = buffer_1100_ddpd[2525];

    auto g_y_x_0_0_zz_xz_y_xx = buffer_1100_ddpd[2526];

    auto g_y_x_0_0_zz_xz_y_xy = buffer_1100_ddpd[2527];

    auto g_y_x_0_0_zz_xz_y_xz = buffer_1100_ddpd[2528];

    auto g_y_x_0_0_zz_xz_y_yy = buffer_1100_ddpd[2529];

    auto g_y_x_0_0_zz_xz_y_yz = buffer_1100_ddpd[2530];

    auto g_y_x_0_0_zz_xz_y_zz = buffer_1100_ddpd[2531];

    auto g_y_x_0_0_zz_xz_z_xx = buffer_1100_ddpd[2532];

    auto g_y_x_0_0_zz_xz_z_xy = buffer_1100_ddpd[2533];

    auto g_y_x_0_0_zz_xz_z_xz = buffer_1100_ddpd[2534];

    auto g_y_x_0_0_zz_xz_z_yy = buffer_1100_ddpd[2535];

    auto g_y_x_0_0_zz_xz_z_yz = buffer_1100_ddpd[2536];

    auto g_y_x_0_0_zz_xz_z_zz = buffer_1100_ddpd[2537];

    auto g_y_x_0_0_zz_yy_x_xx = buffer_1100_ddpd[2538];

    auto g_y_x_0_0_zz_yy_x_xy = buffer_1100_ddpd[2539];

    auto g_y_x_0_0_zz_yy_x_xz = buffer_1100_ddpd[2540];

    auto g_y_x_0_0_zz_yy_x_yy = buffer_1100_ddpd[2541];

    auto g_y_x_0_0_zz_yy_x_yz = buffer_1100_ddpd[2542];

    auto g_y_x_0_0_zz_yy_x_zz = buffer_1100_ddpd[2543];

    auto g_y_x_0_0_zz_yy_y_xx = buffer_1100_ddpd[2544];

    auto g_y_x_0_0_zz_yy_y_xy = buffer_1100_ddpd[2545];

    auto g_y_x_0_0_zz_yy_y_xz = buffer_1100_ddpd[2546];

    auto g_y_x_0_0_zz_yy_y_yy = buffer_1100_ddpd[2547];

    auto g_y_x_0_0_zz_yy_y_yz = buffer_1100_ddpd[2548];

    auto g_y_x_0_0_zz_yy_y_zz = buffer_1100_ddpd[2549];

    auto g_y_x_0_0_zz_yy_z_xx = buffer_1100_ddpd[2550];

    auto g_y_x_0_0_zz_yy_z_xy = buffer_1100_ddpd[2551];

    auto g_y_x_0_0_zz_yy_z_xz = buffer_1100_ddpd[2552];

    auto g_y_x_0_0_zz_yy_z_yy = buffer_1100_ddpd[2553];

    auto g_y_x_0_0_zz_yy_z_yz = buffer_1100_ddpd[2554];

    auto g_y_x_0_0_zz_yy_z_zz = buffer_1100_ddpd[2555];

    auto g_y_x_0_0_zz_yz_x_xx = buffer_1100_ddpd[2556];

    auto g_y_x_0_0_zz_yz_x_xy = buffer_1100_ddpd[2557];

    auto g_y_x_0_0_zz_yz_x_xz = buffer_1100_ddpd[2558];

    auto g_y_x_0_0_zz_yz_x_yy = buffer_1100_ddpd[2559];

    auto g_y_x_0_0_zz_yz_x_yz = buffer_1100_ddpd[2560];

    auto g_y_x_0_0_zz_yz_x_zz = buffer_1100_ddpd[2561];

    auto g_y_x_0_0_zz_yz_y_xx = buffer_1100_ddpd[2562];

    auto g_y_x_0_0_zz_yz_y_xy = buffer_1100_ddpd[2563];

    auto g_y_x_0_0_zz_yz_y_xz = buffer_1100_ddpd[2564];

    auto g_y_x_0_0_zz_yz_y_yy = buffer_1100_ddpd[2565];

    auto g_y_x_0_0_zz_yz_y_yz = buffer_1100_ddpd[2566];

    auto g_y_x_0_0_zz_yz_y_zz = buffer_1100_ddpd[2567];

    auto g_y_x_0_0_zz_yz_z_xx = buffer_1100_ddpd[2568];

    auto g_y_x_0_0_zz_yz_z_xy = buffer_1100_ddpd[2569];

    auto g_y_x_0_0_zz_yz_z_xz = buffer_1100_ddpd[2570];

    auto g_y_x_0_0_zz_yz_z_yy = buffer_1100_ddpd[2571];

    auto g_y_x_0_0_zz_yz_z_yz = buffer_1100_ddpd[2572];

    auto g_y_x_0_0_zz_yz_z_zz = buffer_1100_ddpd[2573];

    auto g_y_x_0_0_zz_zz_x_xx = buffer_1100_ddpd[2574];

    auto g_y_x_0_0_zz_zz_x_xy = buffer_1100_ddpd[2575];

    auto g_y_x_0_0_zz_zz_x_xz = buffer_1100_ddpd[2576];

    auto g_y_x_0_0_zz_zz_x_yy = buffer_1100_ddpd[2577];

    auto g_y_x_0_0_zz_zz_x_yz = buffer_1100_ddpd[2578];

    auto g_y_x_0_0_zz_zz_x_zz = buffer_1100_ddpd[2579];

    auto g_y_x_0_0_zz_zz_y_xx = buffer_1100_ddpd[2580];

    auto g_y_x_0_0_zz_zz_y_xy = buffer_1100_ddpd[2581];

    auto g_y_x_0_0_zz_zz_y_xz = buffer_1100_ddpd[2582];

    auto g_y_x_0_0_zz_zz_y_yy = buffer_1100_ddpd[2583];

    auto g_y_x_0_0_zz_zz_y_yz = buffer_1100_ddpd[2584];

    auto g_y_x_0_0_zz_zz_y_zz = buffer_1100_ddpd[2585];

    auto g_y_x_0_0_zz_zz_z_xx = buffer_1100_ddpd[2586];

    auto g_y_x_0_0_zz_zz_z_xy = buffer_1100_ddpd[2587];

    auto g_y_x_0_0_zz_zz_z_xz = buffer_1100_ddpd[2588];

    auto g_y_x_0_0_zz_zz_z_yy = buffer_1100_ddpd[2589];

    auto g_y_x_0_0_zz_zz_z_yz = buffer_1100_ddpd[2590];

    auto g_y_x_0_0_zz_zz_z_zz = buffer_1100_ddpd[2591];

    auto g_y_y_0_0_xx_xx_x_xx = buffer_1100_ddpd[2592];

    auto g_y_y_0_0_xx_xx_x_xy = buffer_1100_ddpd[2593];

    auto g_y_y_0_0_xx_xx_x_xz = buffer_1100_ddpd[2594];

    auto g_y_y_0_0_xx_xx_x_yy = buffer_1100_ddpd[2595];

    auto g_y_y_0_0_xx_xx_x_yz = buffer_1100_ddpd[2596];

    auto g_y_y_0_0_xx_xx_x_zz = buffer_1100_ddpd[2597];

    auto g_y_y_0_0_xx_xx_y_xx = buffer_1100_ddpd[2598];

    auto g_y_y_0_0_xx_xx_y_xy = buffer_1100_ddpd[2599];

    auto g_y_y_0_0_xx_xx_y_xz = buffer_1100_ddpd[2600];

    auto g_y_y_0_0_xx_xx_y_yy = buffer_1100_ddpd[2601];

    auto g_y_y_0_0_xx_xx_y_yz = buffer_1100_ddpd[2602];

    auto g_y_y_0_0_xx_xx_y_zz = buffer_1100_ddpd[2603];

    auto g_y_y_0_0_xx_xx_z_xx = buffer_1100_ddpd[2604];

    auto g_y_y_0_0_xx_xx_z_xy = buffer_1100_ddpd[2605];

    auto g_y_y_0_0_xx_xx_z_xz = buffer_1100_ddpd[2606];

    auto g_y_y_0_0_xx_xx_z_yy = buffer_1100_ddpd[2607];

    auto g_y_y_0_0_xx_xx_z_yz = buffer_1100_ddpd[2608];

    auto g_y_y_0_0_xx_xx_z_zz = buffer_1100_ddpd[2609];

    auto g_y_y_0_0_xx_xy_x_xx = buffer_1100_ddpd[2610];

    auto g_y_y_0_0_xx_xy_x_xy = buffer_1100_ddpd[2611];

    auto g_y_y_0_0_xx_xy_x_xz = buffer_1100_ddpd[2612];

    auto g_y_y_0_0_xx_xy_x_yy = buffer_1100_ddpd[2613];

    auto g_y_y_0_0_xx_xy_x_yz = buffer_1100_ddpd[2614];

    auto g_y_y_0_0_xx_xy_x_zz = buffer_1100_ddpd[2615];

    auto g_y_y_0_0_xx_xy_y_xx = buffer_1100_ddpd[2616];

    auto g_y_y_0_0_xx_xy_y_xy = buffer_1100_ddpd[2617];

    auto g_y_y_0_0_xx_xy_y_xz = buffer_1100_ddpd[2618];

    auto g_y_y_0_0_xx_xy_y_yy = buffer_1100_ddpd[2619];

    auto g_y_y_0_0_xx_xy_y_yz = buffer_1100_ddpd[2620];

    auto g_y_y_0_0_xx_xy_y_zz = buffer_1100_ddpd[2621];

    auto g_y_y_0_0_xx_xy_z_xx = buffer_1100_ddpd[2622];

    auto g_y_y_0_0_xx_xy_z_xy = buffer_1100_ddpd[2623];

    auto g_y_y_0_0_xx_xy_z_xz = buffer_1100_ddpd[2624];

    auto g_y_y_0_0_xx_xy_z_yy = buffer_1100_ddpd[2625];

    auto g_y_y_0_0_xx_xy_z_yz = buffer_1100_ddpd[2626];

    auto g_y_y_0_0_xx_xy_z_zz = buffer_1100_ddpd[2627];

    auto g_y_y_0_0_xx_xz_x_xx = buffer_1100_ddpd[2628];

    auto g_y_y_0_0_xx_xz_x_xy = buffer_1100_ddpd[2629];

    auto g_y_y_0_0_xx_xz_x_xz = buffer_1100_ddpd[2630];

    auto g_y_y_0_0_xx_xz_x_yy = buffer_1100_ddpd[2631];

    auto g_y_y_0_0_xx_xz_x_yz = buffer_1100_ddpd[2632];

    auto g_y_y_0_0_xx_xz_x_zz = buffer_1100_ddpd[2633];

    auto g_y_y_0_0_xx_xz_y_xx = buffer_1100_ddpd[2634];

    auto g_y_y_0_0_xx_xz_y_xy = buffer_1100_ddpd[2635];

    auto g_y_y_0_0_xx_xz_y_xz = buffer_1100_ddpd[2636];

    auto g_y_y_0_0_xx_xz_y_yy = buffer_1100_ddpd[2637];

    auto g_y_y_0_0_xx_xz_y_yz = buffer_1100_ddpd[2638];

    auto g_y_y_0_0_xx_xz_y_zz = buffer_1100_ddpd[2639];

    auto g_y_y_0_0_xx_xz_z_xx = buffer_1100_ddpd[2640];

    auto g_y_y_0_0_xx_xz_z_xy = buffer_1100_ddpd[2641];

    auto g_y_y_0_0_xx_xz_z_xz = buffer_1100_ddpd[2642];

    auto g_y_y_0_0_xx_xz_z_yy = buffer_1100_ddpd[2643];

    auto g_y_y_0_0_xx_xz_z_yz = buffer_1100_ddpd[2644];

    auto g_y_y_0_0_xx_xz_z_zz = buffer_1100_ddpd[2645];

    auto g_y_y_0_0_xx_yy_x_xx = buffer_1100_ddpd[2646];

    auto g_y_y_0_0_xx_yy_x_xy = buffer_1100_ddpd[2647];

    auto g_y_y_0_0_xx_yy_x_xz = buffer_1100_ddpd[2648];

    auto g_y_y_0_0_xx_yy_x_yy = buffer_1100_ddpd[2649];

    auto g_y_y_0_0_xx_yy_x_yz = buffer_1100_ddpd[2650];

    auto g_y_y_0_0_xx_yy_x_zz = buffer_1100_ddpd[2651];

    auto g_y_y_0_0_xx_yy_y_xx = buffer_1100_ddpd[2652];

    auto g_y_y_0_0_xx_yy_y_xy = buffer_1100_ddpd[2653];

    auto g_y_y_0_0_xx_yy_y_xz = buffer_1100_ddpd[2654];

    auto g_y_y_0_0_xx_yy_y_yy = buffer_1100_ddpd[2655];

    auto g_y_y_0_0_xx_yy_y_yz = buffer_1100_ddpd[2656];

    auto g_y_y_0_0_xx_yy_y_zz = buffer_1100_ddpd[2657];

    auto g_y_y_0_0_xx_yy_z_xx = buffer_1100_ddpd[2658];

    auto g_y_y_0_0_xx_yy_z_xy = buffer_1100_ddpd[2659];

    auto g_y_y_0_0_xx_yy_z_xz = buffer_1100_ddpd[2660];

    auto g_y_y_0_0_xx_yy_z_yy = buffer_1100_ddpd[2661];

    auto g_y_y_0_0_xx_yy_z_yz = buffer_1100_ddpd[2662];

    auto g_y_y_0_0_xx_yy_z_zz = buffer_1100_ddpd[2663];

    auto g_y_y_0_0_xx_yz_x_xx = buffer_1100_ddpd[2664];

    auto g_y_y_0_0_xx_yz_x_xy = buffer_1100_ddpd[2665];

    auto g_y_y_0_0_xx_yz_x_xz = buffer_1100_ddpd[2666];

    auto g_y_y_0_0_xx_yz_x_yy = buffer_1100_ddpd[2667];

    auto g_y_y_0_0_xx_yz_x_yz = buffer_1100_ddpd[2668];

    auto g_y_y_0_0_xx_yz_x_zz = buffer_1100_ddpd[2669];

    auto g_y_y_0_0_xx_yz_y_xx = buffer_1100_ddpd[2670];

    auto g_y_y_0_0_xx_yz_y_xy = buffer_1100_ddpd[2671];

    auto g_y_y_0_0_xx_yz_y_xz = buffer_1100_ddpd[2672];

    auto g_y_y_0_0_xx_yz_y_yy = buffer_1100_ddpd[2673];

    auto g_y_y_0_0_xx_yz_y_yz = buffer_1100_ddpd[2674];

    auto g_y_y_0_0_xx_yz_y_zz = buffer_1100_ddpd[2675];

    auto g_y_y_0_0_xx_yz_z_xx = buffer_1100_ddpd[2676];

    auto g_y_y_0_0_xx_yz_z_xy = buffer_1100_ddpd[2677];

    auto g_y_y_0_0_xx_yz_z_xz = buffer_1100_ddpd[2678];

    auto g_y_y_0_0_xx_yz_z_yy = buffer_1100_ddpd[2679];

    auto g_y_y_0_0_xx_yz_z_yz = buffer_1100_ddpd[2680];

    auto g_y_y_0_0_xx_yz_z_zz = buffer_1100_ddpd[2681];

    auto g_y_y_0_0_xx_zz_x_xx = buffer_1100_ddpd[2682];

    auto g_y_y_0_0_xx_zz_x_xy = buffer_1100_ddpd[2683];

    auto g_y_y_0_0_xx_zz_x_xz = buffer_1100_ddpd[2684];

    auto g_y_y_0_0_xx_zz_x_yy = buffer_1100_ddpd[2685];

    auto g_y_y_0_0_xx_zz_x_yz = buffer_1100_ddpd[2686];

    auto g_y_y_0_0_xx_zz_x_zz = buffer_1100_ddpd[2687];

    auto g_y_y_0_0_xx_zz_y_xx = buffer_1100_ddpd[2688];

    auto g_y_y_0_0_xx_zz_y_xy = buffer_1100_ddpd[2689];

    auto g_y_y_0_0_xx_zz_y_xz = buffer_1100_ddpd[2690];

    auto g_y_y_0_0_xx_zz_y_yy = buffer_1100_ddpd[2691];

    auto g_y_y_0_0_xx_zz_y_yz = buffer_1100_ddpd[2692];

    auto g_y_y_0_0_xx_zz_y_zz = buffer_1100_ddpd[2693];

    auto g_y_y_0_0_xx_zz_z_xx = buffer_1100_ddpd[2694];

    auto g_y_y_0_0_xx_zz_z_xy = buffer_1100_ddpd[2695];

    auto g_y_y_0_0_xx_zz_z_xz = buffer_1100_ddpd[2696];

    auto g_y_y_0_0_xx_zz_z_yy = buffer_1100_ddpd[2697];

    auto g_y_y_0_0_xx_zz_z_yz = buffer_1100_ddpd[2698];

    auto g_y_y_0_0_xx_zz_z_zz = buffer_1100_ddpd[2699];

    auto g_y_y_0_0_xy_xx_x_xx = buffer_1100_ddpd[2700];

    auto g_y_y_0_0_xy_xx_x_xy = buffer_1100_ddpd[2701];

    auto g_y_y_0_0_xy_xx_x_xz = buffer_1100_ddpd[2702];

    auto g_y_y_0_0_xy_xx_x_yy = buffer_1100_ddpd[2703];

    auto g_y_y_0_0_xy_xx_x_yz = buffer_1100_ddpd[2704];

    auto g_y_y_0_0_xy_xx_x_zz = buffer_1100_ddpd[2705];

    auto g_y_y_0_0_xy_xx_y_xx = buffer_1100_ddpd[2706];

    auto g_y_y_0_0_xy_xx_y_xy = buffer_1100_ddpd[2707];

    auto g_y_y_0_0_xy_xx_y_xz = buffer_1100_ddpd[2708];

    auto g_y_y_0_0_xy_xx_y_yy = buffer_1100_ddpd[2709];

    auto g_y_y_0_0_xy_xx_y_yz = buffer_1100_ddpd[2710];

    auto g_y_y_0_0_xy_xx_y_zz = buffer_1100_ddpd[2711];

    auto g_y_y_0_0_xy_xx_z_xx = buffer_1100_ddpd[2712];

    auto g_y_y_0_0_xy_xx_z_xy = buffer_1100_ddpd[2713];

    auto g_y_y_0_0_xy_xx_z_xz = buffer_1100_ddpd[2714];

    auto g_y_y_0_0_xy_xx_z_yy = buffer_1100_ddpd[2715];

    auto g_y_y_0_0_xy_xx_z_yz = buffer_1100_ddpd[2716];

    auto g_y_y_0_0_xy_xx_z_zz = buffer_1100_ddpd[2717];

    auto g_y_y_0_0_xy_xy_x_xx = buffer_1100_ddpd[2718];

    auto g_y_y_0_0_xy_xy_x_xy = buffer_1100_ddpd[2719];

    auto g_y_y_0_0_xy_xy_x_xz = buffer_1100_ddpd[2720];

    auto g_y_y_0_0_xy_xy_x_yy = buffer_1100_ddpd[2721];

    auto g_y_y_0_0_xy_xy_x_yz = buffer_1100_ddpd[2722];

    auto g_y_y_0_0_xy_xy_x_zz = buffer_1100_ddpd[2723];

    auto g_y_y_0_0_xy_xy_y_xx = buffer_1100_ddpd[2724];

    auto g_y_y_0_0_xy_xy_y_xy = buffer_1100_ddpd[2725];

    auto g_y_y_0_0_xy_xy_y_xz = buffer_1100_ddpd[2726];

    auto g_y_y_0_0_xy_xy_y_yy = buffer_1100_ddpd[2727];

    auto g_y_y_0_0_xy_xy_y_yz = buffer_1100_ddpd[2728];

    auto g_y_y_0_0_xy_xy_y_zz = buffer_1100_ddpd[2729];

    auto g_y_y_0_0_xy_xy_z_xx = buffer_1100_ddpd[2730];

    auto g_y_y_0_0_xy_xy_z_xy = buffer_1100_ddpd[2731];

    auto g_y_y_0_0_xy_xy_z_xz = buffer_1100_ddpd[2732];

    auto g_y_y_0_0_xy_xy_z_yy = buffer_1100_ddpd[2733];

    auto g_y_y_0_0_xy_xy_z_yz = buffer_1100_ddpd[2734];

    auto g_y_y_0_0_xy_xy_z_zz = buffer_1100_ddpd[2735];

    auto g_y_y_0_0_xy_xz_x_xx = buffer_1100_ddpd[2736];

    auto g_y_y_0_0_xy_xz_x_xy = buffer_1100_ddpd[2737];

    auto g_y_y_0_0_xy_xz_x_xz = buffer_1100_ddpd[2738];

    auto g_y_y_0_0_xy_xz_x_yy = buffer_1100_ddpd[2739];

    auto g_y_y_0_0_xy_xz_x_yz = buffer_1100_ddpd[2740];

    auto g_y_y_0_0_xy_xz_x_zz = buffer_1100_ddpd[2741];

    auto g_y_y_0_0_xy_xz_y_xx = buffer_1100_ddpd[2742];

    auto g_y_y_0_0_xy_xz_y_xy = buffer_1100_ddpd[2743];

    auto g_y_y_0_0_xy_xz_y_xz = buffer_1100_ddpd[2744];

    auto g_y_y_0_0_xy_xz_y_yy = buffer_1100_ddpd[2745];

    auto g_y_y_0_0_xy_xz_y_yz = buffer_1100_ddpd[2746];

    auto g_y_y_0_0_xy_xz_y_zz = buffer_1100_ddpd[2747];

    auto g_y_y_0_0_xy_xz_z_xx = buffer_1100_ddpd[2748];

    auto g_y_y_0_0_xy_xz_z_xy = buffer_1100_ddpd[2749];

    auto g_y_y_0_0_xy_xz_z_xz = buffer_1100_ddpd[2750];

    auto g_y_y_0_0_xy_xz_z_yy = buffer_1100_ddpd[2751];

    auto g_y_y_0_0_xy_xz_z_yz = buffer_1100_ddpd[2752];

    auto g_y_y_0_0_xy_xz_z_zz = buffer_1100_ddpd[2753];

    auto g_y_y_0_0_xy_yy_x_xx = buffer_1100_ddpd[2754];

    auto g_y_y_0_0_xy_yy_x_xy = buffer_1100_ddpd[2755];

    auto g_y_y_0_0_xy_yy_x_xz = buffer_1100_ddpd[2756];

    auto g_y_y_0_0_xy_yy_x_yy = buffer_1100_ddpd[2757];

    auto g_y_y_0_0_xy_yy_x_yz = buffer_1100_ddpd[2758];

    auto g_y_y_0_0_xy_yy_x_zz = buffer_1100_ddpd[2759];

    auto g_y_y_0_0_xy_yy_y_xx = buffer_1100_ddpd[2760];

    auto g_y_y_0_0_xy_yy_y_xy = buffer_1100_ddpd[2761];

    auto g_y_y_0_0_xy_yy_y_xz = buffer_1100_ddpd[2762];

    auto g_y_y_0_0_xy_yy_y_yy = buffer_1100_ddpd[2763];

    auto g_y_y_0_0_xy_yy_y_yz = buffer_1100_ddpd[2764];

    auto g_y_y_0_0_xy_yy_y_zz = buffer_1100_ddpd[2765];

    auto g_y_y_0_0_xy_yy_z_xx = buffer_1100_ddpd[2766];

    auto g_y_y_0_0_xy_yy_z_xy = buffer_1100_ddpd[2767];

    auto g_y_y_0_0_xy_yy_z_xz = buffer_1100_ddpd[2768];

    auto g_y_y_0_0_xy_yy_z_yy = buffer_1100_ddpd[2769];

    auto g_y_y_0_0_xy_yy_z_yz = buffer_1100_ddpd[2770];

    auto g_y_y_0_0_xy_yy_z_zz = buffer_1100_ddpd[2771];

    auto g_y_y_0_0_xy_yz_x_xx = buffer_1100_ddpd[2772];

    auto g_y_y_0_0_xy_yz_x_xy = buffer_1100_ddpd[2773];

    auto g_y_y_0_0_xy_yz_x_xz = buffer_1100_ddpd[2774];

    auto g_y_y_0_0_xy_yz_x_yy = buffer_1100_ddpd[2775];

    auto g_y_y_0_0_xy_yz_x_yz = buffer_1100_ddpd[2776];

    auto g_y_y_0_0_xy_yz_x_zz = buffer_1100_ddpd[2777];

    auto g_y_y_0_0_xy_yz_y_xx = buffer_1100_ddpd[2778];

    auto g_y_y_0_0_xy_yz_y_xy = buffer_1100_ddpd[2779];

    auto g_y_y_0_0_xy_yz_y_xz = buffer_1100_ddpd[2780];

    auto g_y_y_0_0_xy_yz_y_yy = buffer_1100_ddpd[2781];

    auto g_y_y_0_0_xy_yz_y_yz = buffer_1100_ddpd[2782];

    auto g_y_y_0_0_xy_yz_y_zz = buffer_1100_ddpd[2783];

    auto g_y_y_0_0_xy_yz_z_xx = buffer_1100_ddpd[2784];

    auto g_y_y_0_0_xy_yz_z_xy = buffer_1100_ddpd[2785];

    auto g_y_y_0_0_xy_yz_z_xz = buffer_1100_ddpd[2786];

    auto g_y_y_0_0_xy_yz_z_yy = buffer_1100_ddpd[2787];

    auto g_y_y_0_0_xy_yz_z_yz = buffer_1100_ddpd[2788];

    auto g_y_y_0_0_xy_yz_z_zz = buffer_1100_ddpd[2789];

    auto g_y_y_0_0_xy_zz_x_xx = buffer_1100_ddpd[2790];

    auto g_y_y_0_0_xy_zz_x_xy = buffer_1100_ddpd[2791];

    auto g_y_y_0_0_xy_zz_x_xz = buffer_1100_ddpd[2792];

    auto g_y_y_0_0_xy_zz_x_yy = buffer_1100_ddpd[2793];

    auto g_y_y_0_0_xy_zz_x_yz = buffer_1100_ddpd[2794];

    auto g_y_y_0_0_xy_zz_x_zz = buffer_1100_ddpd[2795];

    auto g_y_y_0_0_xy_zz_y_xx = buffer_1100_ddpd[2796];

    auto g_y_y_0_0_xy_zz_y_xy = buffer_1100_ddpd[2797];

    auto g_y_y_0_0_xy_zz_y_xz = buffer_1100_ddpd[2798];

    auto g_y_y_0_0_xy_zz_y_yy = buffer_1100_ddpd[2799];

    auto g_y_y_0_0_xy_zz_y_yz = buffer_1100_ddpd[2800];

    auto g_y_y_0_0_xy_zz_y_zz = buffer_1100_ddpd[2801];

    auto g_y_y_0_0_xy_zz_z_xx = buffer_1100_ddpd[2802];

    auto g_y_y_0_0_xy_zz_z_xy = buffer_1100_ddpd[2803];

    auto g_y_y_0_0_xy_zz_z_xz = buffer_1100_ddpd[2804];

    auto g_y_y_0_0_xy_zz_z_yy = buffer_1100_ddpd[2805];

    auto g_y_y_0_0_xy_zz_z_yz = buffer_1100_ddpd[2806];

    auto g_y_y_0_0_xy_zz_z_zz = buffer_1100_ddpd[2807];

    auto g_y_y_0_0_xz_xx_x_xx = buffer_1100_ddpd[2808];

    auto g_y_y_0_0_xz_xx_x_xy = buffer_1100_ddpd[2809];

    auto g_y_y_0_0_xz_xx_x_xz = buffer_1100_ddpd[2810];

    auto g_y_y_0_0_xz_xx_x_yy = buffer_1100_ddpd[2811];

    auto g_y_y_0_0_xz_xx_x_yz = buffer_1100_ddpd[2812];

    auto g_y_y_0_0_xz_xx_x_zz = buffer_1100_ddpd[2813];

    auto g_y_y_0_0_xz_xx_y_xx = buffer_1100_ddpd[2814];

    auto g_y_y_0_0_xz_xx_y_xy = buffer_1100_ddpd[2815];

    auto g_y_y_0_0_xz_xx_y_xz = buffer_1100_ddpd[2816];

    auto g_y_y_0_0_xz_xx_y_yy = buffer_1100_ddpd[2817];

    auto g_y_y_0_0_xz_xx_y_yz = buffer_1100_ddpd[2818];

    auto g_y_y_0_0_xz_xx_y_zz = buffer_1100_ddpd[2819];

    auto g_y_y_0_0_xz_xx_z_xx = buffer_1100_ddpd[2820];

    auto g_y_y_0_0_xz_xx_z_xy = buffer_1100_ddpd[2821];

    auto g_y_y_0_0_xz_xx_z_xz = buffer_1100_ddpd[2822];

    auto g_y_y_0_0_xz_xx_z_yy = buffer_1100_ddpd[2823];

    auto g_y_y_0_0_xz_xx_z_yz = buffer_1100_ddpd[2824];

    auto g_y_y_0_0_xz_xx_z_zz = buffer_1100_ddpd[2825];

    auto g_y_y_0_0_xz_xy_x_xx = buffer_1100_ddpd[2826];

    auto g_y_y_0_0_xz_xy_x_xy = buffer_1100_ddpd[2827];

    auto g_y_y_0_0_xz_xy_x_xz = buffer_1100_ddpd[2828];

    auto g_y_y_0_0_xz_xy_x_yy = buffer_1100_ddpd[2829];

    auto g_y_y_0_0_xz_xy_x_yz = buffer_1100_ddpd[2830];

    auto g_y_y_0_0_xz_xy_x_zz = buffer_1100_ddpd[2831];

    auto g_y_y_0_0_xz_xy_y_xx = buffer_1100_ddpd[2832];

    auto g_y_y_0_0_xz_xy_y_xy = buffer_1100_ddpd[2833];

    auto g_y_y_0_0_xz_xy_y_xz = buffer_1100_ddpd[2834];

    auto g_y_y_0_0_xz_xy_y_yy = buffer_1100_ddpd[2835];

    auto g_y_y_0_0_xz_xy_y_yz = buffer_1100_ddpd[2836];

    auto g_y_y_0_0_xz_xy_y_zz = buffer_1100_ddpd[2837];

    auto g_y_y_0_0_xz_xy_z_xx = buffer_1100_ddpd[2838];

    auto g_y_y_0_0_xz_xy_z_xy = buffer_1100_ddpd[2839];

    auto g_y_y_0_0_xz_xy_z_xz = buffer_1100_ddpd[2840];

    auto g_y_y_0_0_xz_xy_z_yy = buffer_1100_ddpd[2841];

    auto g_y_y_0_0_xz_xy_z_yz = buffer_1100_ddpd[2842];

    auto g_y_y_0_0_xz_xy_z_zz = buffer_1100_ddpd[2843];

    auto g_y_y_0_0_xz_xz_x_xx = buffer_1100_ddpd[2844];

    auto g_y_y_0_0_xz_xz_x_xy = buffer_1100_ddpd[2845];

    auto g_y_y_0_0_xz_xz_x_xz = buffer_1100_ddpd[2846];

    auto g_y_y_0_0_xz_xz_x_yy = buffer_1100_ddpd[2847];

    auto g_y_y_0_0_xz_xz_x_yz = buffer_1100_ddpd[2848];

    auto g_y_y_0_0_xz_xz_x_zz = buffer_1100_ddpd[2849];

    auto g_y_y_0_0_xz_xz_y_xx = buffer_1100_ddpd[2850];

    auto g_y_y_0_0_xz_xz_y_xy = buffer_1100_ddpd[2851];

    auto g_y_y_0_0_xz_xz_y_xz = buffer_1100_ddpd[2852];

    auto g_y_y_0_0_xz_xz_y_yy = buffer_1100_ddpd[2853];

    auto g_y_y_0_0_xz_xz_y_yz = buffer_1100_ddpd[2854];

    auto g_y_y_0_0_xz_xz_y_zz = buffer_1100_ddpd[2855];

    auto g_y_y_0_0_xz_xz_z_xx = buffer_1100_ddpd[2856];

    auto g_y_y_0_0_xz_xz_z_xy = buffer_1100_ddpd[2857];

    auto g_y_y_0_0_xz_xz_z_xz = buffer_1100_ddpd[2858];

    auto g_y_y_0_0_xz_xz_z_yy = buffer_1100_ddpd[2859];

    auto g_y_y_0_0_xz_xz_z_yz = buffer_1100_ddpd[2860];

    auto g_y_y_0_0_xz_xz_z_zz = buffer_1100_ddpd[2861];

    auto g_y_y_0_0_xz_yy_x_xx = buffer_1100_ddpd[2862];

    auto g_y_y_0_0_xz_yy_x_xy = buffer_1100_ddpd[2863];

    auto g_y_y_0_0_xz_yy_x_xz = buffer_1100_ddpd[2864];

    auto g_y_y_0_0_xz_yy_x_yy = buffer_1100_ddpd[2865];

    auto g_y_y_0_0_xz_yy_x_yz = buffer_1100_ddpd[2866];

    auto g_y_y_0_0_xz_yy_x_zz = buffer_1100_ddpd[2867];

    auto g_y_y_0_0_xz_yy_y_xx = buffer_1100_ddpd[2868];

    auto g_y_y_0_0_xz_yy_y_xy = buffer_1100_ddpd[2869];

    auto g_y_y_0_0_xz_yy_y_xz = buffer_1100_ddpd[2870];

    auto g_y_y_0_0_xz_yy_y_yy = buffer_1100_ddpd[2871];

    auto g_y_y_0_0_xz_yy_y_yz = buffer_1100_ddpd[2872];

    auto g_y_y_0_0_xz_yy_y_zz = buffer_1100_ddpd[2873];

    auto g_y_y_0_0_xz_yy_z_xx = buffer_1100_ddpd[2874];

    auto g_y_y_0_0_xz_yy_z_xy = buffer_1100_ddpd[2875];

    auto g_y_y_0_0_xz_yy_z_xz = buffer_1100_ddpd[2876];

    auto g_y_y_0_0_xz_yy_z_yy = buffer_1100_ddpd[2877];

    auto g_y_y_0_0_xz_yy_z_yz = buffer_1100_ddpd[2878];

    auto g_y_y_0_0_xz_yy_z_zz = buffer_1100_ddpd[2879];

    auto g_y_y_0_0_xz_yz_x_xx = buffer_1100_ddpd[2880];

    auto g_y_y_0_0_xz_yz_x_xy = buffer_1100_ddpd[2881];

    auto g_y_y_0_0_xz_yz_x_xz = buffer_1100_ddpd[2882];

    auto g_y_y_0_0_xz_yz_x_yy = buffer_1100_ddpd[2883];

    auto g_y_y_0_0_xz_yz_x_yz = buffer_1100_ddpd[2884];

    auto g_y_y_0_0_xz_yz_x_zz = buffer_1100_ddpd[2885];

    auto g_y_y_0_0_xz_yz_y_xx = buffer_1100_ddpd[2886];

    auto g_y_y_0_0_xz_yz_y_xy = buffer_1100_ddpd[2887];

    auto g_y_y_0_0_xz_yz_y_xz = buffer_1100_ddpd[2888];

    auto g_y_y_0_0_xz_yz_y_yy = buffer_1100_ddpd[2889];

    auto g_y_y_0_0_xz_yz_y_yz = buffer_1100_ddpd[2890];

    auto g_y_y_0_0_xz_yz_y_zz = buffer_1100_ddpd[2891];

    auto g_y_y_0_0_xz_yz_z_xx = buffer_1100_ddpd[2892];

    auto g_y_y_0_0_xz_yz_z_xy = buffer_1100_ddpd[2893];

    auto g_y_y_0_0_xz_yz_z_xz = buffer_1100_ddpd[2894];

    auto g_y_y_0_0_xz_yz_z_yy = buffer_1100_ddpd[2895];

    auto g_y_y_0_0_xz_yz_z_yz = buffer_1100_ddpd[2896];

    auto g_y_y_0_0_xz_yz_z_zz = buffer_1100_ddpd[2897];

    auto g_y_y_0_0_xz_zz_x_xx = buffer_1100_ddpd[2898];

    auto g_y_y_0_0_xz_zz_x_xy = buffer_1100_ddpd[2899];

    auto g_y_y_0_0_xz_zz_x_xz = buffer_1100_ddpd[2900];

    auto g_y_y_0_0_xz_zz_x_yy = buffer_1100_ddpd[2901];

    auto g_y_y_0_0_xz_zz_x_yz = buffer_1100_ddpd[2902];

    auto g_y_y_0_0_xz_zz_x_zz = buffer_1100_ddpd[2903];

    auto g_y_y_0_0_xz_zz_y_xx = buffer_1100_ddpd[2904];

    auto g_y_y_0_0_xz_zz_y_xy = buffer_1100_ddpd[2905];

    auto g_y_y_0_0_xz_zz_y_xz = buffer_1100_ddpd[2906];

    auto g_y_y_0_0_xz_zz_y_yy = buffer_1100_ddpd[2907];

    auto g_y_y_0_0_xz_zz_y_yz = buffer_1100_ddpd[2908];

    auto g_y_y_0_0_xz_zz_y_zz = buffer_1100_ddpd[2909];

    auto g_y_y_0_0_xz_zz_z_xx = buffer_1100_ddpd[2910];

    auto g_y_y_0_0_xz_zz_z_xy = buffer_1100_ddpd[2911];

    auto g_y_y_0_0_xz_zz_z_xz = buffer_1100_ddpd[2912];

    auto g_y_y_0_0_xz_zz_z_yy = buffer_1100_ddpd[2913];

    auto g_y_y_0_0_xz_zz_z_yz = buffer_1100_ddpd[2914];

    auto g_y_y_0_0_xz_zz_z_zz = buffer_1100_ddpd[2915];

    auto g_y_y_0_0_yy_xx_x_xx = buffer_1100_ddpd[2916];

    auto g_y_y_0_0_yy_xx_x_xy = buffer_1100_ddpd[2917];

    auto g_y_y_0_0_yy_xx_x_xz = buffer_1100_ddpd[2918];

    auto g_y_y_0_0_yy_xx_x_yy = buffer_1100_ddpd[2919];

    auto g_y_y_0_0_yy_xx_x_yz = buffer_1100_ddpd[2920];

    auto g_y_y_0_0_yy_xx_x_zz = buffer_1100_ddpd[2921];

    auto g_y_y_0_0_yy_xx_y_xx = buffer_1100_ddpd[2922];

    auto g_y_y_0_0_yy_xx_y_xy = buffer_1100_ddpd[2923];

    auto g_y_y_0_0_yy_xx_y_xz = buffer_1100_ddpd[2924];

    auto g_y_y_0_0_yy_xx_y_yy = buffer_1100_ddpd[2925];

    auto g_y_y_0_0_yy_xx_y_yz = buffer_1100_ddpd[2926];

    auto g_y_y_0_0_yy_xx_y_zz = buffer_1100_ddpd[2927];

    auto g_y_y_0_0_yy_xx_z_xx = buffer_1100_ddpd[2928];

    auto g_y_y_0_0_yy_xx_z_xy = buffer_1100_ddpd[2929];

    auto g_y_y_0_0_yy_xx_z_xz = buffer_1100_ddpd[2930];

    auto g_y_y_0_0_yy_xx_z_yy = buffer_1100_ddpd[2931];

    auto g_y_y_0_0_yy_xx_z_yz = buffer_1100_ddpd[2932];

    auto g_y_y_0_0_yy_xx_z_zz = buffer_1100_ddpd[2933];

    auto g_y_y_0_0_yy_xy_x_xx = buffer_1100_ddpd[2934];

    auto g_y_y_0_0_yy_xy_x_xy = buffer_1100_ddpd[2935];

    auto g_y_y_0_0_yy_xy_x_xz = buffer_1100_ddpd[2936];

    auto g_y_y_0_0_yy_xy_x_yy = buffer_1100_ddpd[2937];

    auto g_y_y_0_0_yy_xy_x_yz = buffer_1100_ddpd[2938];

    auto g_y_y_0_0_yy_xy_x_zz = buffer_1100_ddpd[2939];

    auto g_y_y_0_0_yy_xy_y_xx = buffer_1100_ddpd[2940];

    auto g_y_y_0_0_yy_xy_y_xy = buffer_1100_ddpd[2941];

    auto g_y_y_0_0_yy_xy_y_xz = buffer_1100_ddpd[2942];

    auto g_y_y_0_0_yy_xy_y_yy = buffer_1100_ddpd[2943];

    auto g_y_y_0_0_yy_xy_y_yz = buffer_1100_ddpd[2944];

    auto g_y_y_0_0_yy_xy_y_zz = buffer_1100_ddpd[2945];

    auto g_y_y_0_0_yy_xy_z_xx = buffer_1100_ddpd[2946];

    auto g_y_y_0_0_yy_xy_z_xy = buffer_1100_ddpd[2947];

    auto g_y_y_0_0_yy_xy_z_xz = buffer_1100_ddpd[2948];

    auto g_y_y_0_0_yy_xy_z_yy = buffer_1100_ddpd[2949];

    auto g_y_y_0_0_yy_xy_z_yz = buffer_1100_ddpd[2950];

    auto g_y_y_0_0_yy_xy_z_zz = buffer_1100_ddpd[2951];

    auto g_y_y_0_0_yy_xz_x_xx = buffer_1100_ddpd[2952];

    auto g_y_y_0_0_yy_xz_x_xy = buffer_1100_ddpd[2953];

    auto g_y_y_0_0_yy_xz_x_xz = buffer_1100_ddpd[2954];

    auto g_y_y_0_0_yy_xz_x_yy = buffer_1100_ddpd[2955];

    auto g_y_y_0_0_yy_xz_x_yz = buffer_1100_ddpd[2956];

    auto g_y_y_0_0_yy_xz_x_zz = buffer_1100_ddpd[2957];

    auto g_y_y_0_0_yy_xz_y_xx = buffer_1100_ddpd[2958];

    auto g_y_y_0_0_yy_xz_y_xy = buffer_1100_ddpd[2959];

    auto g_y_y_0_0_yy_xz_y_xz = buffer_1100_ddpd[2960];

    auto g_y_y_0_0_yy_xz_y_yy = buffer_1100_ddpd[2961];

    auto g_y_y_0_0_yy_xz_y_yz = buffer_1100_ddpd[2962];

    auto g_y_y_0_0_yy_xz_y_zz = buffer_1100_ddpd[2963];

    auto g_y_y_0_0_yy_xz_z_xx = buffer_1100_ddpd[2964];

    auto g_y_y_0_0_yy_xz_z_xy = buffer_1100_ddpd[2965];

    auto g_y_y_0_0_yy_xz_z_xz = buffer_1100_ddpd[2966];

    auto g_y_y_0_0_yy_xz_z_yy = buffer_1100_ddpd[2967];

    auto g_y_y_0_0_yy_xz_z_yz = buffer_1100_ddpd[2968];

    auto g_y_y_0_0_yy_xz_z_zz = buffer_1100_ddpd[2969];

    auto g_y_y_0_0_yy_yy_x_xx = buffer_1100_ddpd[2970];

    auto g_y_y_0_0_yy_yy_x_xy = buffer_1100_ddpd[2971];

    auto g_y_y_0_0_yy_yy_x_xz = buffer_1100_ddpd[2972];

    auto g_y_y_0_0_yy_yy_x_yy = buffer_1100_ddpd[2973];

    auto g_y_y_0_0_yy_yy_x_yz = buffer_1100_ddpd[2974];

    auto g_y_y_0_0_yy_yy_x_zz = buffer_1100_ddpd[2975];

    auto g_y_y_0_0_yy_yy_y_xx = buffer_1100_ddpd[2976];

    auto g_y_y_0_0_yy_yy_y_xy = buffer_1100_ddpd[2977];

    auto g_y_y_0_0_yy_yy_y_xz = buffer_1100_ddpd[2978];

    auto g_y_y_0_0_yy_yy_y_yy = buffer_1100_ddpd[2979];

    auto g_y_y_0_0_yy_yy_y_yz = buffer_1100_ddpd[2980];

    auto g_y_y_0_0_yy_yy_y_zz = buffer_1100_ddpd[2981];

    auto g_y_y_0_0_yy_yy_z_xx = buffer_1100_ddpd[2982];

    auto g_y_y_0_0_yy_yy_z_xy = buffer_1100_ddpd[2983];

    auto g_y_y_0_0_yy_yy_z_xz = buffer_1100_ddpd[2984];

    auto g_y_y_0_0_yy_yy_z_yy = buffer_1100_ddpd[2985];

    auto g_y_y_0_0_yy_yy_z_yz = buffer_1100_ddpd[2986];

    auto g_y_y_0_0_yy_yy_z_zz = buffer_1100_ddpd[2987];

    auto g_y_y_0_0_yy_yz_x_xx = buffer_1100_ddpd[2988];

    auto g_y_y_0_0_yy_yz_x_xy = buffer_1100_ddpd[2989];

    auto g_y_y_0_0_yy_yz_x_xz = buffer_1100_ddpd[2990];

    auto g_y_y_0_0_yy_yz_x_yy = buffer_1100_ddpd[2991];

    auto g_y_y_0_0_yy_yz_x_yz = buffer_1100_ddpd[2992];

    auto g_y_y_0_0_yy_yz_x_zz = buffer_1100_ddpd[2993];

    auto g_y_y_0_0_yy_yz_y_xx = buffer_1100_ddpd[2994];

    auto g_y_y_0_0_yy_yz_y_xy = buffer_1100_ddpd[2995];

    auto g_y_y_0_0_yy_yz_y_xz = buffer_1100_ddpd[2996];

    auto g_y_y_0_0_yy_yz_y_yy = buffer_1100_ddpd[2997];

    auto g_y_y_0_0_yy_yz_y_yz = buffer_1100_ddpd[2998];

    auto g_y_y_0_0_yy_yz_y_zz = buffer_1100_ddpd[2999];

    auto g_y_y_0_0_yy_yz_z_xx = buffer_1100_ddpd[3000];

    auto g_y_y_0_0_yy_yz_z_xy = buffer_1100_ddpd[3001];

    auto g_y_y_0_0_yy_yz_z_xz = buffer_1100_ddpd[3002];

    auto g_y_y_0_0_yy_yz_z_yy = buffer_1100_ddpd[3003];

    auto g_y_y_0_0_yy_yz_z_yz = buffer_1100_ddpd[3004];

    auto g_y_y_0_0_yy_yz_z_zz = buffer_1100_ddpd[3005];

    auto g_y_y_0_0_yy_zz_x_xx = buffer_1100_ddpd[3006];

    auto g_y_y_0_0_yy_zz_x_xy = buffer_1100_ddpd[3007];

    auto g_y_y_0_0_yy_zz_x_xz = buffer_1100_ddpd[3008];

    auto g_y_y_0_0_yy_zz_x_yy = buffer_1100_ddpd[3009];

    auto g_y_y_0_0_yy_zz_x_yz = buffer_1100_ddpd[3010];

    auto g_y_y_0_0_yy_zz_x_zz = buffer_1100_ddpd[3011];

    auto g_y_y_0_0_yy_zz_y_xx = buffer_1100_ddpd[3012];

    auto g_y_y_0_0_yy_zz_y_xy = buffer_1100_ddpd[3013];

    auto g_y_y_0_0_yy_zz_y_xz = buffer_1100_ddpd[3014];

    auto g_y_y_0_0_yy_zz_y_yy = buffer_1100_ddpd[3015];

    auto g_y_y_0_0_yy_zz_y_yz = buffer_1100_ddpd[3016];

    auto g_y_y_0_0_yy_zz_y_zz = buffer_1100_ddpd[3017];

    auto g_y_y_0_0_yy_zz_z_xx = buffer_1100_ddpd[3018];

    auto g_y_y_0_0_yy_zz_z_xy = buffer_1100_ddpd[3019];

    auto g_y_y_0_0_yy_zz_z_xz = buffer_1100_ddpd[3020];

    auto g_y_y_0_0_yy_zz_z_yy = buffer_1100_ddpd[3021];

    auto g_y_y_0_0_yy_zz_z_yz = buffer_1100_ddpd[3022];

    auto g_y_y_0_0_yy_zz_z_zz = buffer_1100_ddpd[3023];

    auto g_y_y_0_0_yz_xx_x_xx = buffer_1100_ddpd[3024];

    auto g_y_y_0_0_yz_xx_x_xy = buffer_1100_ddpd[3025];

    auto g_y_y_0_0_yz_xx_x_xz = buffer_1100_ddpd[3026];

    auto g_y_y_0_0_yz_xx_x_yy = buffer_1100_ddpd[3027];

    auto g_y_y_0_0_yz_xx_x_yz = buffer_1100_ddpd[3028];

    auto g_y_y_0_0_yz_xx_x_zz = buffer_1100_ddpd[3029];

    auto g_y_y_0_0_yz_xx_y_xx = buffer_1100_ddpd[3030];

    auto g_y_y_0_0_yz_xx_y_xy = buffer_1100_ddpd[3031];

    auto g_y_y_0_0_yz_xx_y_xz = buffer_1100_ddpd[3032];

    auto g_y_y_0_0_yz_xx_y_yy = buffer_1100_ddpd[3033];

    auto g_y_y_0_0_yz_xx_y_yz = buffer_1100_ddpd[3034];

    auto g_y_y_0_0_yz_xx_y_zz = buffer_1100_ddpd[3035];

    auto g_y_y_0_0_yz_xx_z_xx = buffer_1100_ddpd[3036];

    auto g_y_y_0_0_yz_xx_z_xy = buffer_1100_ddpd[3037];

    auto g_y_y_0_0_yz_xx_z_xz = buffer_1100_ddpd[3038];

    auto g_y_y_0_0_yz_xx_z_yy = buffer_1100_ddpd[3039];

    auto g_y_y_0_0_yz_xx_z_yz = buffer_1100_ddpd[3040];

    auto g_y_y_0_0_yz_xx_z_zz = buffer_1100_ddpd[3041];

    auto g_y_y_0_0_yz_xy_x_xx = buffer_1100_ddpd[3042];

    auto g_y_y_0_0_yz_xy_x_xy = buffer_1100_ddpd[3043];

    auto g_y_y_0_0_yz_xy_x_xz = buffer_1100_ddpd[3044];

    auto g_y_y_0_0_yz_xy_x_yy = buffer_1100_ddpd[3045];

    auto g_y_y_0_0_yz_xy_x_yz = buffer_1100_ddpd[3046];

    auto g_y_y_0_0_yz_xy_x_zz = buffer_1100_ddpd[3047];

    auto g_y_y_0_0_yz_xy_y_xx = buffer_1100_ddpd[3048];

    auto g_y_y_0_0_yz_xy_y_xy = buffer_1100_ddpd[3049];

    auto g_y_y_0_0_yz_xy_y_xz = buffer_1100_ddpd[3050];

    auto g_y_y_0_0_yz_xy_y_yy = buffer_1100_ddpd[3051];

    auto g_y_y_0_0_yz_xy_y_yz = buffer_1100_ddpd[3052];

    auto g_y_y_0_0_yz_xy_y_zz = buffer_1100_ddpd[3053];

    auto g_y_y_0_0_yz_xy_z_xx = buffer_1100_ddpd[3054];

    auto g_y_y_0_0_yz_xy_z_xy = buffer_1100_ddpd[3055];

    auto g_y_y_0_0_yz_xy_z_xz = buffer_1100_ddpd[3056];

    auto g_y_y_0_0_yz_xy_z_yy = buffer_1100_ddpd[3057];

    auto g_y_y_0_0_yz_xy_z_yz = buffer_1100_ddpd[3058];

    auto g_y_y_0_0_yz_xy_z_zz = buffer_1100_ddpd[3059];

    auto g_y_y_0_0_yz_xz_x_xx = buffer_1100_ddpd[3060];

    auto g_y_y_0_0_yz_xz_x_xy = buffer_1100_ddpd[3061];

    auto g_y_y_0_0_yz_xz_x_xz = buffer_1100_ddpd[3062];

    auto g_y_y_0_0_yz_xz_x_yy = buffer_1100_ddpd[3063];

    auto g_y_y_0_0_yz_xz_x_yz = buffer_1100_ddpd[3064];

    auto g_y_y_0_0_yz_xz_x_zz = buffer_1100_ddpd[3065];

    auto g_y_y_0_0_yz_xz_y_xx = buffer_1100_ddpd[3066];

    auto g_y_y_0_0_yz_xz_y_xy = buffer_1100_ddpd[3067];

    auto g_y_y_0_0_yz_xz_y_xz = buffer_1100_ddpd[3068];

    auto g_y_y_0_0_yz_xz_y_yy = buffer_1100_ddpd[3069];

    auto g_y_y_0_0_yz_xz_y_yz = buffer_1100_ddpd[3070];

    auto g_y_y_0_0_yz_xz_y_zz = buffer_1100_ddpd[3071];

    auto g_y_y_0_0_yz_xz_z_xx = buffer_1100_ddpd[3072];

    auto g_y_y_0_0_yz_xz_z_xy = buffer_1100_ddpd[3073];

    auto g_y_y_0_0_yz_xz_z_xz = buffer_1100_ddpd[3074];

    auto g_y_y_0_0_yz_xz_z_yy = buffer_1100_ddpd[3075];

    auto g_y_y_0_0_yz_xz_z_yz = buffer_1100_ddpd[3076];

    auto g_y_y_0_0_yz_xz_z_zz = buffer_1100_ddpd[3077];

    auto g_y_y_0_0_yz_yy_x_xx = buffer_1100_ddpd[3078];

    auto g_y_y_0_0_yz_yy_x_xy = buffer_1100_ddpd[3079];

    auto g_y_y_0_0_yz_yy_x_xz = buffer_1100_ddpd[3080];

    auto g_y_y_0_0_yz_yy_x_yy = buffer_1100_ddpd[3081];

    auto g_y_y_0_0_yz_yy_x_yz = buffer_1100_ddpd[3082];

    auto g_y_y_0_0_yz_yy_x_zz = buffer_1100_ddpd[3083];

    auto g_y_y_0_0_yz_yy_y_xx = buffer_1100_ddpd[3084];

    auto g_y_y_0_0_yz_yy_y_xy = buffer_1100_ddpd[3085];

    auto g_y_y_0_0_yz_yy_y_xz = buffer_1100_ddpd[3086];

    auto g_y_y_0_0_yz_yy_y_yy = buffer_1100_ddpd[3087];

    auto g_y_y_0_0_yz_yy_y_yz = buffer_1100_ddpd[3088];

    auto g_y_y_0_0_yz_yy_y_zz = buffer_1100_ddpd[3089];

    auto g_y_y_0_0_yz_yy_z_xx = buffer_1100_ddpd[3090];

    auto g_y_y_0_0_yz_yy_z_xy = buffer_1100_ddpd[3091];

    auto g_y_y_0_0_yz_yy_z_xz = buffer_1100_ddpd[3092];

    auto g_y_y_0_0_yz_yy_z_yy = buffer_1100_ddpd[3093];

    auto g_y_y_0_0_yz_yy_z_yz = buffer_1100_ddpd[3094];

    auto g_y_y_0_0_yz_yy_z_zz = buffer_1100_ddpd[3095];

    auto g_y_y_0_0_yz_yz_x_xx = buffer_1100_ddpd[3096];

    auto g_y_y_0_0_yz_yz_x_xy = buffer_1100_ddpd[3097];

    auto g_y_y_0_0_yz_yz_x_xz = buffer_1100_ddpd[3098];

    auto g_y_y_0_0_yz_yz_x_yy = buffer_1100_ddpd[3099];

    auto g_y_y_0_0_yz_yz_x_yz = buffer_1100_ddpd[3100];

    auto g_y_y_0_0_yz_yz_x_zz = buffer_1100_ddpd[3101];

    auto g_y_y_0_0_yz_yz_y_xx = buffer_1100_ddpd[3102];

    auto g_y_y_0_0_yz_yz_y_xy = buffer_1100_ddpd[3103];

    auto g_y_y_0_0_yz_yz_y_xz = buffer_1100_ddpd[3104];

    auto g_y_y_0_0_yz_yz_y_yy = buffer_1100_ddpd[3105];

    auto g_y_y_0_0_yz_yz_y_yz = buffer_1100_ddpd[3106];

    auto g_y_y_0_0_yz_yz_y_zz = buffer_1100_ddpd[3107];

    auto g_y_y_0_0_yz_yz_z_xx = buffer_1100_ddpd[3108];

    auto g_y_y_0_0_yz_yz_z_xy = buffer_1100_ddpd[3109];

    auto g_y_y_0_0_yz_yz_z_xz = buffer_1100_ddpd[3110];

    auto g_y_y_0_0_yz_yz_z_yy = buffer_1100_ddpd[3111];

    auto g_y_y_0_0_yz_yz_z_yz = buffer_1100_ddpd[3112];

    auto g_y_y_0_0_yz_yz_z_zz = buffer_1100_ddpd[3113];

    auto g_y_y_0_0_yz_zz_x_xx = buffer_1100_ddpd[3114];

    auto g_y_y_0_0_yz_zz_x_xy = buffer_1100_ddpd[3115];

    auto g_y_y_0_0_yz_zz_x_xz = buffer_1100_ddpd[3116];

    auto g_y_y_0_0_yz_zz_x_yy = buffer_1100_ddpd[3117];

    auto g_y_y_0_0_yz_zz_x_yz = buffer_1100_ddpd[3118];

    auto g_y_y_0_0_yz_zz_x_zz = buffer_1100_ddpd[3119];

    auto g_y_y_0_0_yz_zz_y_xx = buffer_1100_ddpd[3120];

    auto g_y_y_0_0_yz_zz_y_xy = buffer_1100_ddpd[3121];

    auto g_y_y_0_0_yz_zz_y_xz = buffer_1100_ddpd[3122];

    auto g_y_y_0_0_yz_zz_y_yy = buffer_1100_ddpd[3123];

    auto g_y_y_0_0_yz_zz_y_yz = buffer_1100_ddpd[3124];

    auto g_y_y_0_0_yz_zz_y_zz = buffer_1100_ddpd[3125];

    auto g_y_y_0_0_yz_zz_z_xx = buffer_1100_ddpd[3126];

    auto g_y_y_0_0_yz_zz_z_xy = buffer_1100_ddpd[3127];

    auto g_y_y_0_0_yz_zz_z_xz = buffer_1100_ddpd[3128];

    auto g_y_y_0_0_yz_zz_z_yy = buffer_1100_ddpd[3129];

    auto g_y_y_0_0_yz_zz_z_yz = buffer_1100_ddpd[3130];

    auto g_y_y_0_0_yz_zz_z_zz = buffer_1100_ddpd[3131];

    auto g_y_y_0_0_zz_xx_x_xx = buffer_1100_ddpd[3132];

    auto g_y_y_0_0_zz_xx_x_xy = buffer_1100_ddpd[3133];

    auto g_y_y_0_0_zz_xx_x_xz = buffer_1100_ddpd[3134];

    auto g_y_y_0_0_zz_xx_x_yy = buffer_1100_ddpd[3135];

    auto g_y_y_0_0_zz_xx_x_yz = buffer_1100_ddpd[3136];

    auto g_y_y_0_0_zz_xx_x_zz = buffer_1100_ddpd[3137];

    auto g_y_y_0_0_zz_xx_y_xx = buffer_1100_ddpd[3138];

    auto g_y_y_0_0_zz_xx_y_xy = buffer_1100_ddpd[3139];

    auto g_y_y_0_0_zz_xx_y_xz = buffer_1100_ddpd[3140];

    auto g_y_y_0_0_zz_xx_y_yy = buffer_1100_ddpd[3141];

    auto g_y_y_0_0_zz_xx_y_yz = buffer_1100_ddpd[3142];

    auto g_y_y_0_0_zz_xx_y_zz = buffer_1100_ddpd[3143];

    auto g_y_y_0_0_zz_xx_z_xx = buffer_1100_ddpd[3144];

    auto g_y_y_0_0_zz_xx_z_xy = buffer_1100_ddpd[3145];

    auto g_y_y_0_0_zz_xx_z_xz = buffer_1100_ddpd[3146];

    auto g_y_y_0_0_zz_xx_z_yy = buffer_1100_ddpd[3147];

    auto g_y_y_0_0_zz_xx_z_yz = buffer_1100_ddpd[3148];

    auto g_y_y_0_0_zz_xx_z_zz = buffer_1100_ddpd[3149];

    auto g_y_y_0_0_zz_xy_x_xx = buffer_1100_ddpd[3150];

    auto g_y_y_0_0_zz_xy_x_xy = buffer_1100_ddpd[3151];

    auto g_y_y_0_0_zz_xy_x_xz = buffer_1100_ddpd[3152];

    auto g_y_y_0_0_zz_xy_x_yy = buffer_1100_ddpd[3153];

    auto g_y_y_0_0_zz_xy_x_yz = buffer_1100_ddpd[3154];

    auto g_y_y_0_0_zz_xy_x_zz = buffer_1100_ddpd[3155];

    auto g_y_y_0_0_zz_xy_y_xx = buffer_1100_ddpd[3156];

    auto g_y_y_0_0_zz_xy_y_xy = buffer_1100_ddpd[3157];

    auto g_y_y_0_0_zz_xy_y_xz = buffer_1100_ddpd[3158];

    auto g_y_y_0_0_zz_xy_y_yy = buffer_1100_ddpd[3159];

    auto g_y_y_0_0_zz_xy_y_yz = buffer_1100_ddpd[3160];

    auto g_y_y_0_0_zz_xy_y_zz = buffer_1100_ddpd[3161];

    auto g_y_y_0_0_zz_xy_z_xx = buffer_1100_ddpd[3162];

    auto g_y_y_0_0_zz_xy_z_xy = buffer_1100_ddpd[3163];

    auto g_y_y_0_0_zz_xy_z_xz = buffer_1100_ddpd[3164];

    auto g_y_y_0_0_zz_xy_z_yy = buffer_1100_ddpd[3165];

    auto g_y_y_0_0_zz_xy_z_yz = buffer_1100_ddpd[3166];

    auto g_y_y_0_0_zz_xy_z_zz = buffer_1100_ddpd[3167];

    auto g_y_y_0_0_zz_xz_x_xx = buffer_1100_ddpd[3168];

    auto g_y_y_0_0_zz_xz_x_xy = buffer_1100_ddpd[3169];

    auto g_y_y_0_0_zz_xz_x_xz = buffer_1100_ddpd[3170];

    auto g_y_y_0_0_zz_xz_x_yy = buffer_1100_ddpd[3171];

    auto g_y_y_0_0_zz_xz_x_yz = buffer_1100_ddpd[3172];

    auto g_y_y_0_0_zz_xz_x_zz = buffer_1100_ddpd[3173];

    auto g_y_y_0_0_zz_xz_y_xx = buffer_1100_ddpd[3174];

    auto g_y_y_0_0_zz_xz_y_xy = buffer_1100_ddpd[3175];

    auto g_y_y_0_0_zz_xz_y_xz = buffer_1100_ddpd[3176];

    auto g_y_y_0_0_zz_xz_y_yy = buffer_1100_ddpd[3177];

    auto g_y_y_0_0_zz_xz_y_yz = buffer_1100_ddpd[3178];

    auto g_y_y_0_0_zz_xz_y_zz = buffer_1100_ddpd[3179];

    auto g_y_y_0_0_zz_xz_z_xx = buffer_1100_ddpd[3180];

    auto g_y_y_0_0_zz_xz_z_xy = buffer_1100_ddpd[3181];

    auto g_y_y_0_0_zz_xz_z_xz = buffer_1100_ddpd[3182];

    auto g_y_y_0_0_zz_xz_z_yy = buffer_1100_ddpd[3183];

    auto g_y_y_0_0_zz_xz_z_yz = buffer_1100_ddpd[3184];

    auto g_y_y_0_0_zz_xz_z_zz = buffer_1100_ddpd[3185];

    auto g_y_y_0_0_zz_yy_x_xx = buffer_1100_ddpd[3186];

    auto g_y_y_0_0_zz_yy_x_xy = buffer_1100_ddpd[3187];

    auto g_y_y_0_0_zz_yy_x_xz = buffer_1100_ddpd[3188];

    auto g_y_y_0_0_zz_yy_x_yy = buffer_1100_ddpd[3189];

    auto g_y_y_0_0_zz_yy_x_yz = buffer_1100_ddpd[3190];

    auto g_y_y_0_0_zz_yy_x_zz = buffer_1100_ddpd[3191];

    auto g_y_y_0_0_zz_yy_y_xx = buffer_1100_ddpd[3192];

    auto g_y_y_0_0_zz_yy_y_xy = buffer_1100_ddpd[3193];

    auto g_y_y_0_0_zz_yy_y_xz = buffer_1100_ddpd[3194];

    auto g_y_y_0_0_zz_yy_y_yy = buffer_1100_ddpd[3195];

    auto g_y_y_0_0_zz_yy_y_yz = buffer_1100_ddpd[3196];

    auto g_y_y_0_0_zz_yy_y_zz = buffer_1100_ddpd[3197];

    auto g_y_y_0_0_zz_yy_z_xx = buffer_1100_ddpd[3198];

    auto g_y_y_0_0_zz_yy_z_xy = buffer_1100_ddpd[3199];

    auto g_y_y_0_0_zz_yy_z_xz = buffer_1100_ddpd[3200];

    auto g_y_y_0_0_zz_yy_z_yy = buffer_1100_ddpd[3201];

    auto g_y_y_0_0_zz_yy_z_yz = buffer_1100_ddpd[3202];

    auto g_y_y_0_0_zz_yy_z_zz = buffer_1100_ddpd[3203];

    auto g_y_y_0_0_zz_yz_x_xx = buffer_1100_ddpd[3204];

    auto g_y_y_0_0_zz_yz_x_xy = buffer_1100_ddpd[3205];

    auto g_y_y_0_0_zz_yz_x_xz = buffer_1100_ddpd[3206];

    auto g_y_y_0_0_zz_yz_x_yy = buffer_1100_ddpd[3207];

    auto g_y_y_0_0_zz_yz_x_yz = buffer_1100_ddpd[3208];

    auto g_y_y_0_0_zz_yz_x_zz = buffer_1100_ddpd[3209];

    auto g_y_y_0_0_zz_yz_y_xx = buffer_1100_ddpd[3210];

    auto g_y_y_0_0_zz_yz_y_xy = buffer_1100_ddpd[3211];

    auto g_y_y_0_0_zz_yz_y_xz = buffer_1100_ddpd[3212];

    auto g_y_y_0_0_zz_yz_y_yy = buffer_1100_ddpd[3213];

    auto g_y_y_0_0_zz_yz_y_yz = buffer_1100_ddpd[3214];

    auto g_y_y_0_0_zz_yz_y_zz = buffer_1100_ddpd[3215];

    auto g_y_y_0_0_zz_yz_z_xx = buffer_1100_ddpd[3216];

    auto g_y_y_0_0_zz_yz_z_xy = buffer_1100_ddpd[3217];

    auto g_y_y_0_0_zz_yz_z_xz = buffer_1100_ddpd[3218];

    auto g_y_y_0_0_zz_yz_z_yy = buffer_1100_ddpd[3219];

    auto g_y_y_0_0_zz_yz_z_yz = buffer_1100_ddpd[3220];

    auto g_y_y_0_0_zz_yz_z_zz = buffer_1100_ddpd[3221];

    auto g_y_y_0_0_zz_zz_x_xx = buffer_1100_ddpd[3222];

    auto g_y_y_0_0_zz_zz_x_xy = buffer_1100_ddpd[3223];

    auto g_y_y_0_0_zz_zz_x_xz = buffer_1100_ddpd[3224];

    auto g_y_y_0_0_zz_zz_x_yy = buffer_1100_ddpd[3225];

    auto g_y_y_0_0_zz_zz_x_yz = buffer_1100_ddpd[3226];

    auto g_y_y_0_0_zz_zz_x_zz = buffer_1100_ddpd[3227];

    auto g_y_y_0_0_zz_zz_y_xx = buffer_1100_ddpd[3228];

    auto g_y_y_0_0_zz_zz_y_xy = buffer_1100_ddpd[3229];

    auto g_y_y_0_0_zz_zz_y_xz = buffer_1100_ddpd[3230];

    auto g_y_y_0_0_zz_zz_y_yy = buffer_1100_ddpd[3231];

    auto g_y_y_0_0_zz_zz_y_yz = buffer_1100_ddpd[3232];

    auto g_y_y_0_0_zz_zz_y_zz = buffer_1100_ddpd[3233];

    auto g_y_y_0_0_zz_zz_z_xx = buffer_1100_ddpd[3234];

    auto g_y_y_0_0_zz_zz_z_xy = buffer_1100_ddpd[3235];

    auto g_y_y_0_0_zz_zz_z_xz = buffer_1100_ddpd[3236];

    auto g_y_y_0_0_zz_zz_z_yy = buffer_1100_ddpd[3237];

    auto g_y_y_0_0_zz_zz_z_yz = buffer_1100_ddpd[3238];

    auto g_y_y_0_0_zz_zz_z_zz = buffer_1100_ddpd[3239];

    auto g_y_z_0_0_xx_xx_x_xx = buffer_1100_ddpd[3240];

    auto g_y_z_0_0_xx_xx_x_xy = buffer_1100_ddpd[3241];

    auto g_y_z_0_0_xx_xx_x_xz = buffer_1100_ddpd[3242];

    auto g_y_z_0_0_xx_xx_x_yy = buffer_1100_ddpd[3243];

    auto g_y_z_0_0_xx_xx_x_yz = buffer_1100_ddpd[3244];

    auto g_y_z_0_0_xx_xx_x_zz = buffer_1100_ddpd[3245];

    auto g_y_z_0_0_xx_xx_y_xx = buffer_1100_ddpd[3246];

    auto g_y_z_0_0_xx_xx_y_xy = buffer_1100_ddpd[3247];

    auto g_y_z_0_0_xx_xx_y_xz = buffer_1100_ddpd[3248];

    auto g_y_z_0_0_xx_xx_y_yy = buffer_1100_ddpd[3249];

    auto g_y_z_0_0_xx_xx_y_yz = buffer_1100_ddpd[3250];

    auto g_y_z_0_0_xx_xx_y_zz = buffer_1100_ddpd[3251];

    auto g_y_z_0_0_xx_xx_z_xx = buffer_1100_ddpd[3252];

    auto g_y_z_0_0_xx_xx_z_xy = buffer_1100_ddpd[3253];

    auto g_y_z_0_0_xx_xx_z_xz = buffer_1100_ddpd[3254];

    auto g_y_z_0_0_xx_xx_z_yy = buffer_1100_ddpd[3255];

    auto g_y_z_0_0_xx_xx_z_yz = buffer_1100_ddpd[3256];

    auto g_y_z_0_0_xx_xx_z_zz = buffer_1100_ddpd[3257];

    auto g_y_z_0_0_xx_xy_x_xx = buffer_1100_ddpd[3258];

    auto g_y_z_0_0_xx_xy_x_xy = buffer_1100_ddpd[3259];

    auto g_y_z_0_0_xx_xy_x_xz = buffer_1100_ddpd[3260];

    auto g_y_z_0_0_xx_xy_x_yy = buffer_1100_ddpd[3261];

    auto g_y_z_0_0_xx_xy_x_yz = buffer_1100_ddpd[3262];

    auto g_y_z_0_0_xx_xy_x_zz = buffer_1100_ddpd[3263];

    auto g_y_z_0_0_xx_xy_y_xx = buffer_1100_ddpd[3264];

    auto g_y_z_0_0_xx_xy_y_xy = buffer_1100_ddpd[3265];

    auto g_y_z_0_0_xx_xy_y_xz = buffer_1100_ddpd[3266];

    auto g_y_z_0_0_xx_xy_y_yy = buffer_1100_ddpd[3267];

    auto g_y_z_0_0_xx_xy_y_yz = buffer_1100_ddpd[3268];

    auto g_y_z_0_0_xx_xy_y_zz = buffer_1100_ddpd[3269];

    auto g_y_z_0_0_xx_xy_z_xx = buffer_1100_ddpd[3270];

    auto g_y_z_0_0_xx_xy_z_xy = buffer_1100_ddpd[3271];

    auto g_y_z_0_0_xx_xy_z_xz = buffer_1100_ddpd[3272];

    auto g_y_z_0_0_xx_xy_z_yy = buffer_1100_ddpd[3273];

    auto g_y_z_0_0_xx_xy_z_yz = buffer_1100_ddpd[3274];

    auto g_y_z_0_0_xx_xy_z_zz = buffer_1100_ddpd[3275];

    auto g_y_z_0_0_xx_xz_x_xx = buffer_1100_ddpd[3276];

    auto g_y_z_0_0_xx_xz_x_xy = buffer_1100_ddpd[3277];

    auto g_y_z_0_0_xx_xz_x_xz = buffer_1100_ddpd[3278];

    auto g_y_z_0_0_xx_xz_x_yy = buffer_1100_ddpd[3279];

    auto g_y_z_0_0_xx_xz_x_yz = buffer_1100_ddpd[3280];

    auto g_y_z_0_0_xx_xz_x_zz = buffer_1100_ddpd[3281];

    auto g_y_z_0_0_xx_xz_y_xx = buffer_1100_ddpd[3282];

    auto g_y_z_0_0_xx_xz_y_xy = buffer_1100_ddpd[3283];

    auto g_y_z_0_0_xx_xz_y_xz = buffer_1100_ddpd[3284];

    auto g_y_z_0_0_xx_xz_y_yy = buffer_1100_ddpd[3285];

    auto g_y_z_0_0_xx_xz_y_yz = buffer_1100_ddpd[3286];

    auto g_y_z_0_0_xx_xz_y_zz = buffer_1100_ddpd[3287];

    auto g_y_z_0_0_xx_xz_z_xx = buffer_1100_ddpd[3288];

    auto g_y_z_0_0_xx_xz_z_xy = buffer_1100_ddpd[3289];

    auto g_y_z_0_0_xx_xz_z_xz = buffer_1100_ddpd[3290];

    auto g_y_z_0_0_xx_xz_z_yy = buffer_1100_ddpd[3291];

    auto g_y_z_0_0_xx_xz_z_yz = buffer_1100_ddpd[3292];

    auto g_y_z_0_0_xx_xz_z_zz = buffer_1100_ddpd[3293];

    auto g_y_z_0_0_xx_yy_x_xx = buffer_1100_ddpd[3294];

    auto g_y_z_0_0_xx_yy_x_xy = buffer_1100_ddpd[3295];

    auto g_y_z_0_0_xx_yy_x_xz = buffer_1100_ddpd[3296];

    auto g_y_z_0_0_xx_yy_x_yy = buffer_1100_ddpd[3297];

    auto g_y_z_0_0_xx_yy_x_yz = buffer_1100_ddpd[3298];

    auto g_y_z_0_0_xx_yy_x_zz = buffer_1100_ddpd[3299];

    auto g_y_z_0_0_xx_yy_y_xx = buffer_1100_ddpd[3300];

    auto g_y_z_0_0_xx_yy_y_xy = buffer_1100_ddpd[3301];

    auto g_y_z_0_0_xx_yy_y_xz = buffer_1100_ddpd[3302];

    auto g_y_z_0_0_xx_yy_y_yy = buffer_1100_ddpd[3303];

    auto g_y_z_0_0_xx_yy_y_yz = buffer_1100_ddpd[3304];

    auto g_y_z_0_0_xx_yy_y_zz = buffer_1100_ddpd[3305];

    auto g_y_z_0_0_xx_yy_z_xx = buffer_1100_ddpd[3306];

    auto g_y_z_0_0_xx_yy_z_xy = buffer_1100_ddpd[3307];

    auto g_y_z_0_0_xx_yy_z_xz = buffer_1100_ddpd[3308];

    auto g_y_z_0_0_xx_yy_z_yy = buffer_1100_ddpd[3309];

    auto g_y_z_0_0_xx_yy_z_yz = buffer_1100_ddpd[3310];

    auto g_y_z_0_0_xx_yy_z_zz = buffer_1100_ddpd[3311];

    auto g_y_z_0_0_xx_yz_x_xx = buffer_1100_ddpd[3312];

    auto g_y_z_0_0_xx_yz_x_xy = buffer_1100_ddpd[3313];

    auto g_y_z_0_0_xx_yz_x_xz = buffer_1100_ddpd[3314];

    auto g_y_z_0_0_xx_yz_x_yy = buffer_1100_ddpd[3315];

    auto g_y_z_0_0_xx_yz_x_yz = buffer_1100_ddpd[3316];

    auto g_y_z_0_0_xx_yz_x_zz = buffer_1100_ddpd[3317];

    auto g_y_z_0_0_xx_yz_y_xx = buffer_1100_ddpd[3318];

    auto g_y_z_0_0_xx_yz_y_xy = buffer_1100_ddpd[3319];

    auto g_y_z_0_0_xx_yz_y_xz = buffer_1100_ddpd[3320];

    auto g_y_z_0_0_xx_yz_y_yy = buffer_1100_ddpd[3321];

    auto g_y_z_0_0_xx_yz_y_yz = buffer_1100_ddpd[3322];

    auto g_y_z_0_0_xx_yz_y_zz = buffer_1100_ddpd[3323];

    auto g_y_z_0_0_xx_yz_z_xx = buffer_1100_ddpd[3324];

    auto g_y_z_0_0_xx_yz_z_xy = buffer_1100_ddpd[3325];

    auto g_y_z_0_0_xx_yz_z_xz = buffer_1100_ddpd[3326];

    auto g_y_z_0_0_xx_yz_z_yy = buffer_1100_ddpd[3327];

    auto g_y_z_0_0_xx_yz_z_yz = buffer_1100_ddpd[3328];

    auto g_y_z_0_0_xx_yz_z_zz = buffer_1100_ddpd[3329];

    auto g_y_z_0_0_xx_zz_x_xx = buffer_1100_ddpd[3330];

    auto g_y_z_0_0_xx_zz_x_xy = buffer_1100_ddpd[3331];

    auto g_y_z_0_0_xx_zz_x_xz = buffer_1100_ddpd[3332];

    auto g_y_z_0_0_xx_zz_x_yy = buffer_1100_ddpd[3333];

    auto g_y_z_0_0_xx_zz_x_yz = buffer_1100_ddpd[3334];

    auto g_y_z_0_0_xx_zz_x_zz = buffer_1100_ddpd[3335];

    auto g_y_z_0_0_xx_zz_y_xx = buffer_1100_ddpd[3336];

    auto g_y_z_0_0_xx_zz_y_xy = buffer_1100_ddpd[3337];

    auto g_y_z_0_0_xx_zz_y_xz = buffer_1100_ddpd[3338];

    auto g_y_z_0_0_xx_zz_y_yy = buffer_1100_ddpd[3339];

    auto g_y_z_0_0_xx_zz_y_yz = buffer_1100_ddpd[3340];

    auto g_y_z_0_0_xx_zz_y_zz = buffer_1100_ddpd[3341];

    auto g_y_z_0_0_xx_zz_z_xx = buffer_1100_ddpd[3342];

    auto g_y_z_0_0_xx_zz_z_xy = buffer_1100_ddpd[3343];

    auto g_y_z_0_0_xx_zz_z_xz = buffer_1100_ddpd[3344];

    auto g_y_z_0_0_xx_zz_z_yy = buffer_1100_ddpd[3345];

    auto g_y_z_0_0_xx_zz_z_yz = buffer_1100_ddpd[3346];

    auto g_y_z_0_0_xx_zz_z_zz = buffer_1100_ddpd[3347];

    auto g_y_z_0_0_xy_xx_x_xx = buffer_1100_ddpd[3348];

    auto g_y_z_0_0_xy_xx_x_xy = buffer_1100_ddpd[3349];

    auto g_y_z_0_0_xy_xx_x_xz = buffer_1100_ddpd[3350];

    auto g_y_z_0_0_xy_xx_x_yy = buffer_1100_ddpd[3351];

    auto g_y_z_0_0_xy_xx_x_yz = buffer_1100_ddpd[3352];

    auto g_y_z_0_0_xy_xx_x_zz = buffer_1100_ddpd[3353];

    auto g_y_z_0_0_xy_xx_y_xx = buffer_1100_ddpd[3354];

    auto g_y_z_0_0_xy_xx_y_xy = buffer_1100_ddpd[3355];

    auto g_y_z_0_0_xy_xx_y_xz = buffer_1100_ddpd[3356];

    auto g_y_z_0_0_xy_xx_y_yy = buffer_1100_ddpd[3357];

    auto g_y_z_0_0_xy_xx_y_yz = buffer_1100_ddpd[3358];

    auto g_y_z_0_0_xy_xx_y_zz = buffer_1100_ddpd[3359];

    auto g_y_z_0_0_xy_xx_z_xx = buffer_1100_ddpd[3360];

    auto g_y_z_0_0_xy_xx_z_xy = buffer_1100_ddpd[3361];

    auto g_y_z_0_0_xy_xx_z_xz = buffer_1100_ddpd[3362];

    auto g_y_z_0_0_xy_xx_z_yy = buffer_1100_ddpd[3363];

    auto g_y_z_0_0_xy_xx_z_yz = buffer_1100_ddpd[3364];

    auto g_y_z_0_0_xy_xx_z_zz = buffer_1100_ddpd[3365];

    auto g_y_z_0_0_xy_xy_x_xx = buffer_1100_ddpd[3366];

    auto g_y_z_0_0_xy_xy_x_xy = buffer_1100_ddpd[3367];

    auto g_y_z_0_0_xy_xy_x_xz = buffer_1100_ddpd[3368];

    auto g_y_z_0_0_xy_xy_x_yy = buffer_1100_ddpd[3369];

    auto g_y_z_0_0_xy_xy_x_yz = buffer_1100_ddpd[3370];

    auto g_y_z_0_0_xy_xy_x_zz = buffer_1100_ddpd[3371];

    auto g_y_z_0_0_xy_xy_y_xx = buffer_1100_ddpd[3372];

    auto g_y_z_0_0_xy_xy_y_xy = buffer_1100_ddpd[3373];

    auto g_y_z_0_0_xy_xy_y_xz = buffer_1100_ddpd[3374];

    auto g_y_z_0_0_xy_xy_y_yy = buffer_1100_ddpd[3375];

    auto g_y_z_0_0_xy_xy_y_yz = buffer_1100_ddpd[3376];

    auto g_y_z_0_0_xy_xy_y_zz = buffer_1100_ddpd[3377];

    auto g_y_z_0_0_xy_xy_z_xx = buffer_1100_ddpd[3378];

    auto g_y_z_0_0_xy_xy_z_xy = buffer_1100_ddpd[3379];

    auto g_y_z_0_0_xy_xy_z_xz = buffer_1100_ddpd[3380];

    auto g_y_z_0_0_xy_xy_z_yy = buffer_1100_ddpd[3381];

    auto g_y_z_0_0_xy_xy_z_yz = buffer_1100_ddpd[3382];

    auto g_y_z_0_0_xy_xy_z_zz = buffer_1100_ddpd[3383];

    auto g_y_z_0_0_xy_xz_x_xx = buffer_1100_ddpd[3384];

    auto g_y_z_0_0_xy_xz_x_xy = buffer_1100_ddpd[3385];

    auto g_y_z_0_0_xy_xz_x_xz = buffer_1100_ddpd[3386];

    auto g_y_z_0_0_xy_xz_x_yy = buffer_1100_ddpd[3387];

    auto g_y_z_0_0_xy_xz_x_yz = buffer_1100_ddpd[3388];

    auto g_y_z_0_0_xy_xz_x_zz = buffer_1100_ddpd[3389];

    auto g_y_z_0_0_xy_xz_y_xx = buffer_1100_ddpd[3390];

    auto g_y_z_0_0_xy_xz_y_xy = buffer_1100_ddpd[3391];

    auto g_y_z_0_0_xy_xz_y_xz = buffer_1100_ddpd[3392];

    auto g_y_z_0_0_xy_xz_y_yy = buffer_1100_ddpd[3393];

    auto g_y_z_0_0_xy_xz_y_yz = buffer_1100_ddpd[3394];

    auto g_y_z_0_0_xy_xz_y_zz = buffer_1100_ddpd[3395];

    auto g_y_z_0_0_xy_xz_z_xx = buffer_1100_ddpd[3396];

    auto g_y_z_0_0_xy_xz_z_xy = buffer_1100_ddpd[3397];

    auto g_y_z_0_0_xy_xz_z_xz = buffer_1100_ddpd[3398];

    auto g_y_z_0_0_xy_xz_z_yy = buffer_1100_ddpd[3399];

    auto g_y_z_0_0_xy_xz_z_yz = buffer_1100_ddpd[3400];

    auto g_y_z_0_0_xy_xz_z_zz = buffer_1100_ddpd[3401];

    auto g_y_z_0_0_xy_yy_x_xx = buffer_1100_ddpd[3402];

    auto g_y_z_0_0_xy_yy_x_xy = buffer_1100_ddpd[3403];

    auto g_y_z_0_0_xy_yy_x_xz = buffer_1100_ddpd[3404];

    auto g_y_z_0_0_xy_yy_x_yy = buffer_1100_ddpd[3405];

    auto g_y_z_0_0_xy_yy_x_yz = buffer_1100_ddpd[3406];

    auto g_y_z_0_0_xy_yy_x_zz = buffer_1100_ddpd[3407];

    auto g_y_z_0_0_xy_yy_y_xx = buffer_1100_ddpd[3408];

    auto g_y_z_0_0_xy_yy_y_xy = buffer_1100_ddpd[3409];

    auto g_y_z_0_0_xy_yy_y_xz = buffer_1100_ddpd[3410];

    auto g_y_z_0_0_xy_yy_y_yy = buffer_1100_ddpd[3411];

    auto g_y_z_0_0_xy_yy_y_yz = buffer_1100_ddpd[3412];

    auto g_y_z_0_0_xy_yy_y_zz = buffer_1100_ddpd[3413];

    auto g_y_z_0_0_xy_yy_z_xx = buffer_1100_ddpd[3414];

    auto g_y_z_0_0_xy_yy_z_xy = buffer_1100_ddpd[3415];

    auto g_y_z_0_0_xy_yy_z_xz = buffer_1100_ddpd[3416];

    auto g_y_z_0_0_xy_yy_z_yy = buffer_1100_ddpd[3417];

    auto g_y_z_0_0_xy_yy_z_yz = buffer_1100_ddpd[3418];

    auto g_y_z_0_0_xy_yy_z_zz = buffer_1100_ddpd[3419];

    auto g_y_z_0_0_xy_yz_x_xx = buffer_1100_ddpd[3420];

    auto g_y_z_0_0_xy_yz_x_xy = buffer_1100_ddpd[3421];

    auto g_y_z_0_0_xy_yz_x_xz = buffer_1100_ddpd[3422];

    auto g_y_z_0_0_xy_yz_x_yy = buffer_1100_ddpd[3423];

    auto g_y_z_0_0_xy_yz_x_yz = buffer_1100_ddpd[3424];

    auto g_y_z_0_0_xy_yz_x_zz = buffer_1100_ddpd[3425];

    auto g_y_z_0_0_xy_yz_y_xx = buffer_1100_ddpd[3426];

    auto g_y_z_0_0_xy_yz_y_xy = buffer_1100_ddpd[3427];

    auto g_y_z_0_0_xy_yz_y_xz = buffer_1100_ddpd[3428];

    auto g_y_z_0_0_xy_yz_y_yy = buffer_1100_ddpd[3429];

    auto g_y_z_0_0_xy_yz_y_yz = buffer_1100_ddpd[3430];

    auto g_y_z_0_0_xy_yz_y_zz = buffer_1100_ddpd[3431];

    auto g_y_z_0_0_xy_yz_z_xx = buffer_1100_ddpd[3432];

    auto g_y_z_0_0_xy_yz_z_xy = buffer_1100_ddpd[3433];

    auto g_y_z_0_0_xy_yz_z_xz = buffer_1100_ddpd[3434];

    auto g_y_z_0_0_xy_yz_z_yy = buffer_1100_ddpd[3435];

    auto g_y_z_0_0_xy_yz_z_yz = buffer_1100_ddpd[3436];

    auto g_y_z_0_0_xy_yz_z_zz = buffer_1100_ddpd[3437];

    auto g_y_z_0_0_xy_zz_x_xx = buffer_1100_ddpd[3438];

    auto g_y_z_0_0_xy_zz_x_xy = buffer_1100_ddpd[3439];

    auto g_y_z_0_0_xy_zz_x_xz = buffer_1100_ddpd[3440];

    auto g_y_z_0_0_xy_zz_x_yy = buffer_1100_ddpd[3441];

    auto g_y_z_0_0_xy_zz_x_yz = buffer_1100_ddpd[3442];

    auto g_y_z_0_0_xy_zz_x_zz = buffer_1100_ddpd[3443];

    auto g_y_z_0_0_xy_zz_y_xx = buffer_1100_ddpd[3444];

    auto g_y_z_0_0_xy_zz_y_xy = buffer_1100_ddpd[3445];

    auto g_y_z_0_0_xy_zz_y_xz = buffer_1100_ddpd[3446];

    auto g_y_z_0_0_xy_zz_y_yy = buffer_1100_ddpd[3447];

    auto g_y_z_0_0_xy_zz_y_yz = buffer_1100_ddpd[3448];

    auto g_y_z_0_0_xy_zz_y_zz = buffer_1100_ddpd[3449];

    auto g_y_z_0_0_xy_zz_z_xx = buffer_1100_ddpd[3450];

    auto g_y_z_0_0_xy_zz_z_xy = buffer_1100_ddpd[3451];

    auto g_y_z_0_0_xy_zz_z_xz = buffer_1100_ddpd[3452];

    auto g_y_z_0_0_xy_zz_z_yy = buffer_1100_ddpd[3453];

    auto g_y_z_0_0_xy_zz_z_yz = buffer_1100_ddpd[3454];

    auto g_y_z_0_0_xy_zz_z_zz = buffer_1100_ddpd[3455];

    auto g_y_z_0_0_xz_xx_x_xx = buffer_1100_ddpd[3456];

    auto g_y_z_0_0_xz_xx_x_xy = buffer_1100_ddpd[3457];

    auto g_y_z_0_0_xz_xx_x_xz = buffer_1100_ddpd[3458];

    auto g_y_z_0_0_xz_xx_x_yy = buffer_1100_ddpd[3459];

    auto g_y_z_0_0_xz_xx_x_yz = buffer_1100_ddpd[3460];

    auto g_y_z_0_0_xz_xx_x_zz = buffer_1100_ddpd[3461];

    auto g_y_z_0_0_xz_xx_y_xx = buffer_1100_ddpd[3462];

    auto g_y_z_0_0_xz_xx_y_xy = buffer_1100_ddpd[3463];

    auto g_y_z_0_0_xz_xx_y_xz = buffer_1100_ddpd[3464];

    auto g_y_z_0_0_xz_xx_y_yy = buffer_1100_ddpd[3465];

    auto g_y_z_0_0_xz_xx_y_yz = buffer_1100_ddpd[3466];

    auto g_y_z_0_0_xz_xx_y_zz = buffer_1100_ddpd[3467];

    auto g_y_z_0_0_xz_xx_z_xx = buffer_1100_ddpd[3468];

    auto g_y_z_0_0_xz_xx_z_xy = buffer_1100_ddpd[3469];

    auto g_y_z_0_0_xz_xx_z_xz = buffer_1100_ddpd[3470];

    auto g_y_z_0_0_xz_xx_z_yy = buffer_1100_ddpd[3471];

    auto g_y_z_0_0_xz_xx_z_yz = buffer_1100_ddpd[3472];

    auto g_y_z_0_0_xz_xx_z_zz = buffer_1100_ddpd[3473];

    auto g_y_z_0_0_xz_xy_x_xx = buffer_1100_ddpd[3474];

    auto g_y_z_0_0_xz_xy_x_xy = buffer_1100_ddpd[3475];

    auto g_y_z_0_0_xz_xy_x_xz = buffer_1100_ddpd[3476];

    auto g_y_z_0_0_xz_xy_x_yy = buffer_1100_ddpd[3477];

    auto g_y_z_0_0_xz_xy_x_yz = buffer_1100_ddpd[3478];

    auto g_y_z_0_0_xz_xy_x_zz = buffer_1100_ddpd[3479];

    auto g_y_z_0_0_xz_xy_y_xx = buffer_1100_ddpd[3480];

    auto g_y_z_0_0_xz_xy_y_xy = buffer_1100_ddpd[3481];

    auto g_y_z_0_0_xz_xy_y_xz = buffer_1100_ddpd[3482];

    auto g_y_z_0_0_xz_xy_y_yy = buffer_1100_ddpd[3483];

    auto g_y_z_0_0_xz_xy_y_yz = buffer_1100_ddpd[3484];

    auto g_y_z_0_0_xz_xy_y_zz = buffer_1100_ddpd[3485];

    auto g_y_z_0_0_xz_xy_z_xx = buffer_1100_ddpd[3486];

    auto g_y_z_0_0_xz_xy_z_xy = buffer_1100_ddpd[3487];

    auto g_y_z_0_0_xz_xy_z_xz = buffer_1100_ddpd[3488];

    auto g_y_z_0_0_xz_xy_z_yy = buffer_1100_ddpd[3489];

    auto g_y_z_0_0_xz_xy_z_yz = buffer_1100_ddpd[3490];

    auto g_y_z_0_0_xz_xy_z_zz = buffer_1100_ddpd[3491];

    auto g_y_z_0_0_xz_xz_x_xx = buffer_1100_ddpd[3492];

    auto g_y_z_0_0_xz_xz_x_xy = buffer_1100_ddpd[3493];

    auto g_y_z_0_0_xz_xz_x_xz = buffer_1100_ddpd[3494];

    auto g_y_z_0_0_xz_xz_x_yy = buffer_1100_ddpd[3495];

    auto g_y_z_0_0_xz_xz_x_yz = buffer_1100_ddpd[3496];

    auto g_y_z_0_0_xz_xz_x_zz = buffer_1100_ddpd[3497];

    auto g_y_z_0_0_xz_xz_y_xx = buffer_1100_ddpd[3498];

    auto g_y_z_0_0_xz_xz_y_xy = buffer_1100_ddpd[3499];

    auto g_y_z_0_0_xz_xz_y_xz = buffer_1100_ddpd[3500];

    auto g_y_z_0_0_xz_xz_y_yy = buffer_1100_ddpd[3501];

    auto g_y_z_0_0_xz_xz_y_yz = buffer_1100_ddpd[3502];

    auto g_y_z_0_0_xz_xz_y_zz = buffer_1100_ddpd[3503];

    auto g_y_z_0_0_xz_xz_z_xx = buffer_1100_ddpd[3504];

    auto g_y_z_0_0_xz_xz_z_xy = buffer_1100_ddpd[3505];

    auto g_y_z_0_0_xz_xz_z_xz = buffer_1100_ddpd[3506];

    auto g_y_z_0_0_xz_xz_z_yy = buffer_1100_ddpd[3507];

    auto g_y_z_0_0_xz_xz_z_yz = buffer_1100_ddpd[3508];

    auto g_y_z_0_0_xz_xz_z_zz = buffer_1100_ddpd[3509];

    auto g_y_z_0_0_xz_yy_x_xx = buffer_1100_ddpd[3510];

    auto g_y_z_0_0_xz_yy_x_xy = buffer_1100_ddpd[3511];

    auto g_y_z_0_0_xz_yy_x_xz = buffer_1100_ddpd[3512];

    auto g_y_z_0_0_xz_yy_x_yy = buffer_1100_ddpd[3513];

    auto g_y_z_0_0_xz_yy_x_yz = buffer_1100_ddpd[3514];

    auto g_y_z_0_0_xz_yy_x_zz = buffer_1100_ddpd[3515];

    auto g_y_z_0_0_xz_yy_y_xx = buffer_1100_ddpd[3516];

    auto g_y_z_0_0_xz_yy_y_xy = buffer_1100_ddpd[3517];

    auto g_y_z_0_0_xz_yy_y_xz = buffer_1100_ddpd[3518];

    auto g_y_z_0_0_xz_yy_y_yy = buffer_1100_ddpd[3519];

    auto g_y_z_0_0_xz_yy_y_yz = buffer_1100_ddpd[3520];

    auto g_y_z_0_0_xz_yy_y_zz = buffer_1100_ddpd[3521];

    auto g_y_z_0_0_xz_yy_z_xx = buffer_1100_ddpd[3522];

    auto g_y_z_0_0_xz_yy_z_xy = buffer_1100_ddpd[3523];

    auto g_y_z_0_0_xz_yy_z_xz = buffer_1100_ddpd[3524];

    auto g_y_z_0_0_xz_yy_z_yy = buffer_1100_ddpd[3525];

    auto g_y_z_0_0_xz_yy_z_yz = buffer_1100_ddpd[3526];

    auto g_y_z_0_0_xz_yy_z_zz = buffer_1100_ddpd[3527];

    auto g_y_z_0_0_xz_yz_x_xx = buffer_1100_ddpd[3528];

    auto g_y_z_0_0_xz_yz_x_xy = buffer_1100_ddpd[3529];

    auto g_y_z_0_0_xz_yz_x_xz = buffer_1100_ddpd[3530];

    auto g_y_z_0_0_xz_yz_x_yy = buffer_1100_ddpd[3531];

    auto g_y_z_0_0_xz_yz_x_yz = buffer_1100_ddpd[3532];

    auto g_y_z_0_0_xz_yz_x_zz = buffer_1100_ddpd[3533];

    auto g_y_z_0_0_xz_yz_y_xx = buffer_1100_ddpd[3534];

    auto g_y_z_0_0_xz_yz_y_xy = buffer_1100_ddpd[3535];

    auto g_y_z_0_0_xz_yz_y_xz = buffer_1100_ddpd[3536];

    auto g_y_z_0_0_xz_yz_y_yy = buffer_1100_ddpd[3537];

    auto g_y_z_0_0_xz_yz_y_yz = buffer_1100_ddpd[3538];

    auto g_y_z_0_0_xz_yz_y_zz = buffer_1100_ddpd[3539];

    auto g_y_z_0_0_xz_yz_z_xx = buffer_1100_ddpd[3540];

    auto g_y_z_0_0_xz_yz_z_xy = buffer_1100_ddpd[3541];

    auto g_y_z_0_0_xz_yz_z_xz = buffer_1100_ddpd[3542];

    auto g_y_z_0_0_xz_yz_z_yy = buffer_1100_ddpd[3543];

    auto g_y_z_0_0_xz_yz_z_yz = buffer_1100_ddpd[3544];

    auto g_y_z_0_0_xz_yz_z_zz = buffer_1100_ddpd[3545];

    auto g_y_z_0_0_xz_zz_x_xx = buffer_1100_ddpd[3546];

    auto g_y_z_0_0_xz_zz_x_xy = buffer_1100_ddpd[3547];

    auto g_y_z_0_0_xz_zz_x_xz = buffer_1100_ddpd[3548];

    auto g_y_z_0_0_xz_zz_x_yy = buffer_1100_ddpd[3549];

    auto g_y_z_0_0_xz_zz_x_yz = buffer_1100_ddpd[3550];

    auto g_y_z_0_0_xz_zz_x_zz = buffer_1100_ddpd[3551];

    auto g_y_z_0_0_xz_zz_y_xx = buffer_1100_ddpd[3552];

    auto g_y_z_0_0_xz_zz_y_xy = buffer_1100_ddpd[3553];

    auto g_y_z_0_0_xz_zz_y_xz = buffer_1100_ddpd[3554];

    auto g_y_z_0_0_xz_zz_y_yy = buffer_1100_ddpd[3555];

    auto g_y_z_0_0_xz_zz_y_yz = buffer_1100_ddpd[3556];

    auto g_y_z_0_0_xz_zz_y_zz = buffer_1100_ddpd[3557];

    auto g_y_z_0_0_xz_zz_z_xx = buffer_1100_ddpd[3558];

    auto g_y_z_0_0_xz_zz_z_xy = buffer_1100_ddpd[3559];

    auto g_y_z_0_0_xz_zz_z_xz = buffer_1100_ddpd[3560];

    auto g_y_z_0_0_xz_zz_z_yy = buffer_1100_ddpd[3561];

    auto g_y_z_0_0_xz_zz_z_yz = buffer_1100_ddpd[3562];

    auto g_y_z_0_0_xz_zz_z_zz = buffer_1100_ddpd[3563];

    auto g_y_z_0_0_yy_xx_x_xx = buffer_1100_ddpd[3564];

    auto g_y_z_0_0_yy_xx_x_xy = buffer_1100_ddpd[3565];

    auto g_y_z_0_0_yy_xx_x_xz = buffer_1100_ddpd[3566];

    auto g_y_z_0_0_yy_xx_x_yy = buffer_1100_ddpd[3567];

    auto g_y_z_0_0_yy_xx_x_yz = buffer_1100_ddpd[3568];

    auto g_y_z_0_0_yy_xx_x_zz = buffer_1100_ddpd[3569];

    auto g_y_z_0_0_yy_xx_y_xx = buffer_1100_ddpd[3570];

    auto g_y_z_0_0_yy_xx_y_xy = buffer_1100_ddpd[3571];

    auto g_y_z_0_0_yy_xx_y_xz = buffer_1100_ddpd[3572];

    auto g_y_z_0_0_yy_xx_y_yy = buffer_1100_ddpd[3573];

    auto g_y_z_0_0_yy_xx_y_yz = buffer_1100_ddpd[3574];

    auto g_y_z_0_0_yy_xx_y_zz = buffer_1100_ddpd[3575];

    auto g_y_z_0_0_yy_xx_z_xx = buffer_1100_ddpd[3576];

    auto g_y_z_0_0_yy_xx_z_xy = buffer_1100_ddpd[3577];

    auto g_y_z_0_0_yy_xx_z_xz = buffer_1100_ddpd[3578];

    auto g_y_z_0_0_yy_xx_z_yy = buffer_1100_ddpd[3579];

    auto g_y_z_0_0_yy_xx_z_yz = buffer_1100_ddpd[3580];

    auto g_y_z_0_0_yy_xx_z_zz = buffer_1100_ddpd[3581];

    auto g_y_z_0_0_yy_xy_x_xx = buffer_1100_ddpd[3582];

    auto g_y_z_0_0_yy_xy_x_xy = buffer_1100_ddpd[3583];

    auto g_y_z_0_0_yy_xy_x_xz = buffer_1100_ddpd[3584];

    auto g_y_z_0_0_yy_xy_x_yy = buffer_1100_ddpd[3585];

    auto g_y_z_0_0_yy_xy_x_yz = buffer_1100_ddpd[3586];

    auto g_y_z_0_0_yy_xy_x_zz = buffer_1100_ddpd[3587];

    auto g_y_z_0_0_yy_xy_y_xx = buffer_1100_ddpd[3588];

    auto g_y_z_0_0_yy_xy_y_xy = buffer_1100_ddpd[3589];

    auto g_y_z_0_0_yy_xy_y_xz = buffer_1100_ddpd[3590];

    auto g_y_z_0_0_yy_xy_y_yy = buffer_1100_ddpd[3591];

    auto g_y_z_0_0_yy_xy_y_yz = buffer_1100_ddpd[3592];

    auto g_y_z_0_0_yy_xy_y_zz = buffer_1100_ddpd[3593];

    auto g_y_z_0_0_yy_xy_z_xx = buffer_1100_ddpd[3594];

    auto g_y_z_0_0_yy_xy_z_xy = buffer_1100_ddpd[3595];

    auto g_y_z_0_0_yy_xy_z_xz = buffer_1100_ddpd[3596];

    auto g_y_z_0_0_yy_xy_z_yy = buffer_1100_ddpd[3597];

    auto g_y_z_0_0_yy_xy_z_yz = buffer_1100_ddpd[3598];

    auto g_y_z_0_0_yy_xy_z_zz = buffer_1100_ddpd[3599];

    auto g_y_z_0_0_yy_xz_x_xx = buffer_1100_ddpd[3600];

    auto g_y_z_0_0_yy_xz_x_xy = buffer_1100_ddpd[3601];

    auto g_y_z_0_0_yy_xz_x_xz = buffer_1100_ddpd[3602];

    auto g_y_z_0_0_yy_xz_x_yy = buffer_1100_ddpd[3603];

    auto g_y_z_0_0_yy_xz_x_yz = buffer_1100_ddpd[3604];

    auto g_y_z_0_0_yy_xz_x_zz = buffer_1100_ddpd[3605];

    auto g_y_z_0_0_yy_xz_y_xx = buffer_1100_ddpd[3606];

    auto g_y_z_0_0_yy_xz_y_xy = buffer_1100_ddpd[3607];

    auto g_y_z_0_0_yy_xz_y_xz = buffer_1100_ddpd[3608];

    auto g_y_z_0_0_yy_xz_y_yy = buffer_1100_ddpd[3609];

    auto g_y_z_0_0_yy_xz_y_yz = buffer_1100_ddpd[3610];

    auto g_y_z_0_0_yy_xz_y_zz = buffer_1100_ddpd[3611];

    auto g_y_z_0_0_yy_xz_z_xx = buffer_1100_ddpd[3612];

    auto g_y_z_0_0_yy_xz_z_xy = buffer_1100_ddpd[3613];

    auto g_y_z_0_0_yy_xz_z_xz = buffer_1100_ddpd[3614];

    auto g_y_z_0_0_yy_xz_z_yy = buffer_1100_ddpd[3615];

    auto g_y_z_0_0_yy_xz_z_yz = buffer_1100_ddpd[3616];

    auto g_y_z_0_0_yy_xz_z_zz = buffer_1100_ddpd[3617];

    auto g_y_z_0_0_yy_yy_x_xx = buffer_1100_ddpd[3618];

    auto g_y_z_0_0_yy_yy_x_xy = buffer_1100_ddpd[3619];

    auto g_y_z_0_0_yy_yy_x_xz = buffer_1100_ddpd[3620];

    auto g_y_z_0_0_yy_yy_x_yy = buffer_1100_ddpd[3621];

    auto g_y_z_0_0_yy_yy_x_yz = buffer_1100_ddpd[3622];

    auto g_y_z_0_0_yy_yy_x_zz = buffer_1100_ddpd[3623];

    auto g_y_z_0_0_yy_yy_y_xx = buffer_1100_ddpd[3624];

    auto g_y_z_0_0_yy_yy_y_xy = buffer_1100_ddpd[3625];

    auto g_y_z_0_0_yy_yy_y_xz = buffer_1100_ddpd[3626];

    auto g_y_z_0_0_yy_yy_y_yy = buffer_1100_ddpd[3627];

    auto g_y_z_0_0_yy_yy_y_yz = buffer_1100_ddpd[3628];

    auto g_y_z_0_0_yy_yy_y_zz = buffer_1100_ddpd[3629];

    auto g_y_z_0_0_yy_yy_z_xx = buffer_1100_ddpd[3630];

    auto g_y_z_0_0_yy_yy_z_xy = buffer_1100_ddpd[3631];

    auto g_y_z_0_0_yy_yy_z_xz = buffer_1100_ddpd[3632];

    auto g_y_z_0_0_yy_yy_z_yy = buffer_1100_ddpd[3633];

    auto g_y_z_0_0_yy_yy_z_yz = buffer_1100_ddpd[3634];

    auto g_y_z_0_0_yy_yy_z_zz = buffer_1100_ddpd[3635];

    auto g_y_z_0_0_yy_yz_x_xx = buffer_1100_ddpd[3636];

    auto g_y_z_0_0_yy_yz_x_xy = buffer_1100_ddpd[3637];

    auto g_y_z_0_0_yy_yz_x_xz = buffer_1100_ddpd[3638];

    auto g_y_z_0_0_yy_yz_x_yy = buffer_1100_ddpd[3639];

    auto g_y_z_0_0_yy_yz_x_yz = buffer_1100_ddpd[3640];

    auto g_y_z_0_0_yy_yz_x_zz = buffer_1100_ddpd[3641];

    auto g_y_z_0_0_yy_yz_y_xx = buffer_1100_ddpd[3642];

    auto g_y_z_0_0_yy_yz_y_xy = buffer_1100_ddpd[3643];

    auto g_y_z_0_0_yy_yz_y_xz = buffer_1100_ddpd[3644];

    auto g_y_z_0_0_yy_yz_y_yy = buffer_1100_ddpd[3645];

    auto g_y_z_0_0_yy_yz_y_yz = buffer_1100_ddpd[3646];

    auto g_y_z_0_0_yy_yz_y_zz = buffer_1100_ddpd[3647];

    auto g_y_z_0_0_yy_yz_z_xx = buffer_1100_ddpd[3648];

    auto g_y_z_0_0_yy_yz_z_xy = buffer_1100_ddpd[3649];

    auto g_y_z_0_0_yy_yz_z_xz = buffer_1100_ddpd[3650];

    auto g_y_z_0_0_yy_yz_z_yy = buffer_1100_ddpd[3651];

    auto g_y_z_0_0_yy_yz_z_yz = buffer_1100_ddpd[3652];

    auto g_y_z_0_0_yy_yz_z_zz = buffer_1100_ddpd[3653];

    auto g_y_z_0_0_yy_zz_x_xx = buffer_1100_ddpd[3654];

    auto g_y_z_0_0_yy_zz_x_xy = buffer_1100_ddpd[3655];

    auto g_y_z_0_0_yy_zz_x_xz = buffer_1100_ddpd[3656];

    auto g_y_z_0_0_yy_zz_x_yy = buffer_1100_ddpd[3657];

    auto g_y_z_0_0_yy_zz_x_yz = buffer_1100_ddpd[3658];

    auto g_y_z_0_0_yy_zz_x_zz = buffer_1100_ddpd[3659];

    auto g_y_z_0_0_yy_zz_y_xx = buffer_1100_ddpd[3660];

    auto g_y_z_0_0_yy_zz_y_xy = buffer_1100_ddpd[3661];

    auto g_y_z_0_0_yy_zz_y_xz = buffer_1100_ddpd[3662];

    auto g_y_z_0_0_yy_zz_y_yy = buffer_1100_ddpd[3663];

    auto g_y_z_0_0_yy_zz_y_yz = buffer_1100_ddpd[3664];

    auto g_y_z_0_0_yy_zz_y_zz = buffer_1100_ddpd[3665];

    auto g_y_z_0_0_yy_zz_z_xx = buffer_1100_ddpd[3666];

    auto g_y_z_0_0_yy_zz_z_xy = buffer_1100_ddpd[3667];

    auto g_y_z_0_0_yy_zz_z_xz = buffer_1100_ddpd[3668];

    auto g_y_z_0_0_yy_zz_z_yy = buffer_1100_ddpd[3669];

    auto g_y_z_0_0_yy_zz_z_yz = buffer_1100_ddpd[3670];

    auto g_y_z_0_0_yy_zz_z_zz = buffer_1100_ddpd[3671];

    auto g_y_z_0_0_yz_xx_x_xx = buffer_1100_ddpd[3672];

    auto g_y_z_0_0_yz_xx_x_xy = buffer_1100_ddpd[3673];

    auto g_y_z_0_0_yz_xx_x_xz = buffer_1100_ddpd[3674];

    auto g_y_z_0_0_yz_xx_x_yy = buffer_1100_ddpd[3675];

    auto g_y_z_0_0_yz_xx_x_yz = buffer_1100_ddpd[3676];

    auto g_y_z_0_0_yz_xx_x_zz = buffer_1100_ddpd[3677];

    auto g_y_z_0_0_yz_xx_y_xx = buffer_1100_ddpd[3678];

    auto g_y_z_0_0_yz_xx_y_xy = buffer_1100_ddpd[3679];

    auto g_y_z_0_0_yz_xx_y_xz = buffer_1100_ddpd[3680];

    auto g_y_z_0_0_yz_xx_y_yy = buffer_1100_ddpd[3681];

    auto g_y_z_0_0_yz_xx_y_yz = buffer_1100_ddpd[3682];

    auto g_y_z_0_0_yz_xx_y_zz = buffer_1100_ddpd[3683];

    auto g_y_z_0_0_yz_xx_z_xx = buffer_1100_ddpd[3684];

    auto g_y_z_0_0_yz_xx_z_xy = buffer_1100_ddpd[3685];

    auto g_y_z_0_0_yz_xx_z_xz = buffer_1100_ddpd[3686];

    auto g_y_z_0_0_yz_xx_z_yy = buffer_1100_ddpd[3687];

    auto g_y_z_0_0_yz_xx_z_yz = buffer_1100_ddpd[3688];

    auto g_y_z_0_0_yz_xx_z_zz = buffer_1100_ddpd[3689];

    auto g_y_z_0_0_yz_xy_x_xx = buffer_1100_ddpd[3690];

    auto g_y_z_0_0_yz_xy_x_xy = buffer_1100_ddpd[3691];

    auto g_y_z_0_0_yz_xy_x_xz = buffer_1100_ddpd[3692];

    auto g_y_z_0_0_yz_xy_x_yy = buffer_1100_ddpd[3693];

    auto g_y_z_0_0_yz_xy_x_yz = buffer_1100_ddpd[3694];

    auto g_y_z_0_0_yz_xy_x_zz = buffer_1100_ddpd[3695];

    auto g_y_z_0_0_yz_xy_y_xx = buffer_1100_ddpd[3696];

    auto g_y_z_0_0_yz_xy_y_xy = buffer_1100_ddpd[3697];

    auto g_y_z_0_0_yz_xy_y_xz = buffer_1100_ddpd[3698];

    auto g_y_z_0_0_yz_xy_y_yy = buffer_1100_ddpd[3699];

    auto g_y_z_0_0_yz_xy_y_yz = buffer_1100_ddpd[3700];

    auto g_y_z_0_0_yz_xy_y_zz = buffer_1100_ddpd[3701];

    auto g_y_z_0_0_yz_xy_z_xx = buffer_1100_ddpd[3702];

    auto g_y_z_0_0_yz_xy_z_xy = buffer_1100_ddpd[3703];

    auto g_y_z_0_0_yz_xy_z_xz = buffer_1100_ddpd[3704];

    auto g_y_z_0_0_yz_xy_z_yy = buffer_1100_ddpd[3705];

    auto g_y_z_0_0_yz_xy_z_yz = buffer_1100_ddpd[3706];

    auto g_y_z_0_0_yz_xy_z_zz = buffer_1100_ddpd[3707];

    auto g_y_z_0_0_yz_xz_x_xx = buffer_1100_ddpd[3708];

    auto g_y_z_0_0_yz_xz_x_xy = buffer_1100_ddpd[3709];

    auto g_y_z_0_0_yz_xz_x_xz = buffer_1100_ddpd[3710];

    auto g_y_z_0_0_yz_xz_x_yy = buffer_1100_ddpd[3711];

    auto g_y_z_0_0_yz_xz_x_yz = buffer_1100_ddpd[3712];

    auto g_y_z_0_0_yz_xz_x_zz = buffer_1100_ddpd[3713];

    auto g_y_z_0_0_yz_xz_y_xx = buffer_1100_ddpd[3714];

    auto g_y_z_0_0_yz_xz_y_xy = buffer_1100_ddpd[3715];

    auto g_y_z_0_0_yz_xz_y_xz = buffer_1100_ddpd[3716];

    auto g_y_z_0_0_yz_xz_y_yy = buffer_1100_ddpd[3717];

    auto g_y_z_0_0_yz_xz_y_yz = buffer_1100_ddpd[3718];

    auto g_y_z_0_0_yz_xz_y_zz = buffer_1100_ddpd[3719];

    auto g_y_z_0_0_yz_xz_z_xx = buffer_1100_ddpd[3720];

    auto g_y_z_0_0_yz_xz_z_xy = buffer_1100_ddpd[3721];

    auto g_y_z_0_0_yz_xz_z_xz = buffer_1100_ddpd[3722];

    auto g_y_z_0_0_yz_xz_z_yy = buffer_1100_ddpd[3723];

    auto g_y_z_0_0_yz_xz_z_yz = buffer_1100_ddpd[3724];

    auto g_y_z_0_0_yz_xz_z_zz = buffer_1100_ddpd[3725];

    auto g_y_z_0_0_yz_yy_x_xx = buffer_1100_ddpd[3726];

    auto g_y_z_0_0_yz_yy_x_xy = buffer_1100_ddpd[3727];

    auto g_y_z_0_0_yz_yy_x_xz = buffer_1100_ddpd[3728];

    auto g_y_z_0_0_yz_yy_x_yy = buffer_1100_ddpd[3729];

    auto g_y_z_0_0_yz_yy_x_yz = buffer_1100_ddpd[3730];

    auto g_y_z_0_0_yz_yy_x_zz = buffer_1100_ddpd[3731];

    auto g_y_z_0_0_yz_yy_y_xx = buffer_1100_ddpd[3732];

    auto g_y_z_0_0_yz_yy_y_xy = buffer_1100_ddpd[3733];

    auto g_y_z_0_0_yz_yy_y_xz = buffer_1100_ddpd[3734];

    auto g_y_z_0_0_yz_yy_y_yy = buffer_1100_ddpd[3735];

    auto g_y_z_0_0_yz_yy_y_yz = buffer_1100_ddpd[3736];

    auto g_y_z_0_0_yz_yy_y_zz = buffer_1100_ddpd[3737];

    auto g_y_z_0_0_yz_yy_z_xx = buffer_1100_ddpd[3738];

    auto g_y_z_0_0_yz_yy_z_xy = buffer_1100_ddpd[3739];

    auto g_y_z_0_0_yz_yy_z_xz = buffer_1100_ddpd[3740];

    auto g_y_z_0_0_yz_yy_z_yy = buffer_1100_ddpd[3741];

    auto g_y_z_0_0_yz_yy_z_yz = buffer_1100_ddpd[3742];

    auto g_y_z_0_0_yz_yy_z_zz = buffer_1100_ddpd[3743];

    auto g_y_z_0_0_yz_yz_x_xx = buffer_1100_ddpd[3744];

    auto g_y_z_0_0_yz_yz_x_xy = buffer_1100_ddpd[3745];

    auto g_y_z_0_0_yz_yz_x_xz = buffer_1100_ddpd[3746];

    auto g_y_z_0_0_yz_yz_x_yy = buffer_1100_ddpd[3747];

    auto g_y_z_0_0_yz_yz_x_yz = buffer_1100_ddpd[3748];

    auto g_y_z_0_0_yz_yz_x_zz = buffer_1100_ddpd[3749];

    auto g_y_z_0_0_yz_yz_y_xx = buffer_1100_ddpd[3750];

    auto g_y_z_0_0_yz_yz_y_xy = buffer_1100_ddpd[3751];

    auto g_y_z_0_0_yz_yz_y_xz = buffer_1100_ddpd[3752];

    auto g_y_z_0_0_yz_yz_y_yy = buffer_1100_ddpd[3753];

    auto g_y_z_0_0_yz_yz_y_yz = buffer_1100_ddpd[3754];

    auto g_y_z_0_0_yz_yz_y_zz = buffer_1100_ddpd[3755];

    auto g_y_z_0_0_yz_yz_z_xx = buffer_1100_ddpd[3756];

    auto g_y_z_0_0_yz_yz_z_xy = buffer_1100_ddpd[3757];

    auto g_y_z_0_0_yz_yz_z_xz = buffer_1100_ddpd[3758];

    auto g_y_z_0_0_yz_yz_z_yy = buffer_1100_ddpd[3759];

    auto g_y_z_0_0_yz_yz_z_yz = buffer_1100_ddpd[3760];

    auto g_y_z_0_0_yz_yz_z_zz = buffer_1100_ddpd[3761];

    auto g_y_z_0_0_yz_zz_x_xx = buffer_1100_ddpd[3762];

    auto g_y_z_0_0_yz_zz_x_xy = buffer_1100_ddpd[3763];

    auto g_y_z_0_0_yz_zz_x_xz = buffer_1100_ddpd[3764];

    auto g_y_z_0_0_yz_zz_x_yy = buffer_1100_ddpd[3765];

    auto g_y_z_0_0_yz_zz_x_yz = buffer_1100_ddpd[3766];

    auto g_y_z_0_0_yz_zz_x_zz = buffer_1100_ddpd[3767];

    auto g_y_z_0_0_yz_zz_y_xx = buffer_1100_ddpd[3768];

    auto g_y_z_0_0_yz_zz_y_xy = buffer_1100_ddpd[3769];

    auto g_y_z_0_0_yz_zz_y_xz = buffer_1100_ddpd[3770];

    auto g_y_z_0_0_yz_zz_y_yy = buffer_1100_ddpd[3771];

    auto g_y_z_0_0_yz_zz_y_yz = buffer_1100_ddpd[3772];

    auto g_y_z_0_0_yz_zz_y_zz = buffer_1100_ddpd[3773];

    auto g_y_z_0_0_yz_zz_z_xx = buffer_1100_ddpd[3774];

    auto g_y_z_0_0_yz_zz_z_xy = buffer_1100_ddpd[3775];

    auto g_y_z_0_0_yz_zz_z_xz = buffer_1100_ddpd[3776];

    auto g_y_z_0_0_yz_zz_z_yy = buffer_1100_ddpd[3777];

    auto g_y_z_0_0_yz_zz_z_yz = buffer_1100_ddpd[3778];

    auto g_y_z_0_0_yz_zz_z_zz = buffer_1100_ddpd[3779];

    auto g_y_z_0_0_zz_xx_x_xx = buffer_1100_ddpd[3780];

    auto g_y_z_0_0_zz_xx_x_xy = buffer_1100_ddpd[3781];

    auto g_y_z_0_0_zz_xx_x_xz = buffer_1100_ddpd[3782];

    auto g_y_z_0_0_zz_xx_x_yy = buffer_1100_ddpd[3783];

    auto g_y_z_0_0_zz_xx_x_yz = buffer_1100_ddpd[3784];

    auto g_y_z_0_0_zz_xx_x_zz = buffer_1100_ddpd[3785];

    auto g_y_z_0_0_zz_xx_y_xx = buffer_1100_ddpd[3786];

    auto g_y_z_0_0_zz_xx_y_xy = buffer_1100_ddpd[3787];

    auto g_y_z_0_0_zz_xx_y_xz = buffer_1100_ddpd[3788];

    auto g_y_z_0_0_zz_xx_y_yy = buffer_1100_ddpd[3789];

    auto g_y_z_0_0_zz_xx_y_yz = buffer_1100_ddpd[3790];

    auto g_y_z_0_0_zz_xx_y_zz = buffer_1100_ddpd[3791];

    auto g_y_z_0_0_zz_xx_z_xx = buffer_1100_ddpd[3792];

    auto g_y_z_0_0_zz_xx_z_xy = buffer_1100_ddpd[3793];

    auto g_y_z_0_0_zz_xx_z_xz = buffer_1100_ddpd[3794];

    auto g_y_z_0_0_zz_xx_z_yy = buffer_1100_ddpd[3795];

    auto g_y_z_0_0_zz_xx_z_yz = buffer_1100_ddpd[3796];

    auto g_y_z_0_0_zz_xx_z_zz = buffer_1100_ddpd[3797];

    auto g_y_z_0_0_zz_xy_x_xx = buffer_1100_ddpd[3798];

    auto g_y_z_0_0_zz_xy_x_xy = buffer_1100_ddpd[3799];

    auto g_y_z_0_0_zz_xy_x_xz = buffer_1100_ddpd[3800];

    auto g_y_z_0_0_zz_xy_x_yy = buffer_1100_ddpd[3801];

    auto g_y_z_0_0_zz_xy_x_yz = buffer_1100_ddpd[3802];

    auto g_y_z_0_0_zz_xy_x_zz = buffer_1100_ddpd[3803];

    auto g_y_z_0_0_zz_xy_y_xx = buffer_1100_ddpd[3804];

    auto g_y_z_0_0_zz_xy_y_xy = buffer_1100_ddpd[3805];

    auto g_y_z_0_0_zz_xy_y_xz = buffer_1100_ddpd[3806];

    auto g_y_z_0_0_zz_xy_y_yy = buffer_1100_ddpd[3807];

    auto g_y_z_0_0_zz_xy_y_yz = buffer_1100_ddpd[3808];

    auto g_y_z_0_0_zz_xy_y_zz = buffer_1100_ddpd[3809];

    auto g_y_z_0_0_zz_xy_z_xx = buffer_1100_ddpd[3810];

    auto g_y_z_0_0_zz_xy_z_xy = buffer_1100_ddpd[3811];

    auto g_y_z_0_0_zz_xy_z_xz = buffer_1100_ddpd[3812];

    auto g_y_z_0_0_zz_xy_z_yy = buffer_1100_ddpd[3813];

    auto g_y_z_0_0_zz_xy_z_yz = buffer_1100_ddpd[3814];

    auto g_y_z_0_0_zz_xy_z_zz = buffer_1100_ddpd[3815];

    auto g_y_z_0_0_zz_xz_x_xx = buffer_1100_ddpd[3816];

    auto g_y_z_0_0_zz_xz_x_xy = buffer_1100_ddpd[3817];

    auto g_y_z_0_0_zz_xz_x_xz = buffer_1100_ddpd[3818];

    auto g_y_z_0_0_zz_xz_x_yy = buffer_1100_ddpd[3819];

    auto g_y_z_0_0_zz_xz_x_yz = buffer_1100_ddpd[3820];

    auto g_y_z_0_0_zz_xz_x_zz = buffer_1100_ddpd[3821];

    auto g_y_z_0_0_zz_xz_y_xx = buffer_1100_ddpd[3822];

    auto g_y_z_0_0_zz_xz_y_xy = buffer_1100_ddpd[3823];

    auto g_y_z_0_0_zz_xz_y_xz = buffer_1100_ddpd[3824];

    auto g_y_z_0_0_zz_xz_y_yy = buffer_1100_ddpd[3825];

    auto g_y_z_0_0_zz_xz_y_yz = buffer_1100_ddpd[3826];

    auto g_y_z_0_0_zz_xz_y_zz = buffer_1100_ddpd[3827];

    auto g_y_z_0_0_zz_xz_z_xx = buffer_1100_ddpd[3828];

    auto g_y_z_0_0_zz_xz_z_xy = buffer_1100_ddpd[3829];

    auto g_y_z_0_0_zz_xz_z_xz = buffer_1100_ddpd[3830];

    auto g_y_z_0_0_zz_xz_z_yy = buffer_1100_ddpd[3831];

    auto g_y_z_0_0_zz_xz_z_yz = buffer_1100_ddpd[3832];

    auto g_y_z_0_0_zz_xz_z_zz = buffer_1100_ddpd[3833];

    auto g_y_z_0_0_zz_yy_x_xx = buffer_1100_ddpd[3834];

    auto g_y_z_0_0_zz_yy_x_xy = buffer_1100_ddpd[3835];

    auto g_y_z_0_0_zz_yy_x_xz = buffer_1100_ddpd[3836];

    auto g_y_z_0_0_zz_yy_x_yy = buffer_1100_ddpd[3837];

    auto g_y_z_0_0_zz_yy_x_yz = buffer_1100_ddpd[3838];

    auto g_y_z_0_0_zz_yy_x_zz = buffer_1100_ddpd[3839];

    auto g_y_z_0_0_zz_yy_y_xx = buffer_1100_ddpd[3840];

    auto g_y_z_0_0_zz_yy_y_xy = buffer_1100_ddpd[3841];

    auto g_y_z_0_0_zz_yy_y_xz = buffer_1100_ddpd[3842];

    auto g_y_z_0_0_zz_yy_y_yy = buffer_1100_ddpd[3843];

    auto g_y_z_0_0_zz_yy_y_yz = buffer_1100_ddpd[3844];

    auto g_y_z_0_0_zz_yy_y_zz = buffer_1100_ddpd[3845];

    auto g_y_z_0_0_zz_yy_z_xx = buffer_1100_ddpd[3846];

    auto g_y_z_0_0_zz_yy_z_xy = buffer_1100_ddpd[3847];

    auto g_y_z_0_0_zz_yy_z_xz = buffer_1100_ddpd[3848];

    auto g_y_z_0_0_zz_yy_z_yy = buffer_1100_ddpd[3849];

    auto g_y_z_0_0_zz_yy_z_yz = buffer_1100_ddpd[3850];

    auto g_y_z_0_0_zz_yy_z_zz = buffer_1100_ddpd[3851];

    auto g_y_z_0_0_zz_yz_x_xx = buffer_1100_ddpd[3852];

    auto g_y_z_0_0_zz_yz_x_xy = buffer_1100_ddpd[3853];

    auto g_y_z_0_0_zz_yz_x_xz = buffer_1100_ddpd[3854];

    auto g_y_z_0_0_zz_yz_x_yy = buffer_1100_ddpd[3855];

    auto g_y_z_0_0_zz_yz_x_yz = buffer_1100_ddpd[3856];

    auto g_y_z_0_0_zz_yz_x_zz = buffer_1100_ddpd[3857];

    auto g_y_z_0_0_zz_yz_y_xx = buffer_1100_ddpd[3858];

    auto g_y_z_0_0_zz_yz_y_xy = buffer_1100_ddpd[3859];

    auto g_y_z_0_0_zz_yz_y_xz = buffer_1100_ddpd[3860];

    auto g_y_z_0_0_zz_yz_y_yy = buffer_1100_ddpd[3861];

    auto g_y_z_0_0_zz_yz_y_yz = buffer_1100_ddpd[3862];

    auto g_y_z_0_0_zz_yz_y_zz = buffer_1100_ddpd[3863];

    auto g_y_z_0_0_zz_yz_z_xx = buffer_1100_ddpd[3864];

    auto g_y_z_0_0_zz_yz_z_xy = buffer_1100_ddpd[3865];

    auto g_y_z_0_0_zz_yz_z_xz = buffer_1100_ddpd[3866];

    auto g_y_z_0_0_zz_yz_z_yy = buffer_1100_ddpd[3867];

    auto g_y_z_0_0_zz_yz_z_yz = buffer_1100_ddpd[3868];

    auto g_y_z_0_0_zz_yz_z_zz = buffer_1100_ddpd[3869];

    auto g_y_z_0_0_zz_zz_x_xx = buffer_1100_ddpd[3870];

    auto g_y_z_0_0_zz_zz_x_xy = buffer_1100_ddpd[3871];

    auto g_y_z_0_0_zz_zz_x_xz = buffer_1100_ddpd[3872];

    auto g_y_z_0_0_zz_zz_x_yy = buffer_1100_ddpd[3873];

    auto g_y_z_0_0_zz_zz_x_yz = buffer_1100_ddpd[3874];

    auto g_y_z_0_0_zz_zz_x_zz = buffer_1100_ddpd[3875];

    auto g_y_z_0_0_zz_zz_y_xx = buffer_1100_ddpd[3876];

    auto g_y_z_0_0_zz_zz_y_xy = buffer_1100_ddpd[3877];

    auto g_y_z_0_0_zz_zz_y_xz = buffer_1100_ddpd[3878];

    auto g_y_z_0_0_zz_zz_y_yy = buffer_1100_ddpd[3879];

    auto g_y_z_0_0_zz_zz_y_yz = buffer_1100_ddpd[3880];

    auto g_y_z_0_0_zz_zz_y_zz = buffer_1100_ddpd[3881];

    auto g_y_z_0_0_zz_zz_z_xx = buffer_1100_ddpd[3882];

    auto g_y_z_0_0_zz_zz_z_xy = buffer_1100_ddpd[3883];

    auto g_y_z_0_0_zz_zz_z_xz = buffer_1100_ddpd[3884];

    auto g_y_z_0_0_zz_zz_z_yy = buffer_1100_ddpd[3885];

    auto g_y_z_0_0_zz_zz_z_yz = buffer_1100_ddpd[3886];

    auto g_y_z_0_0_zz_zz_z_zz = buffer_1100_ddpd[3887];

    auto g_z_x_0_0_xx_xx_x_xx = buffer_1100_ddpd[3888];

    auto g_z_x_0_0_xx_xx_x_xy = buffer_1100_ddpd[3889];

    auto g_z_x_0_0_xx_xx_x_xz = buffer_1100_ddpd[3890];

    auto g_z_x_0_0_xx_xx_x_yy = buffer_1100_ddpd[3891];

    auto g_z_x_0_0_xx_xx_x_yz = buffer_1100_ddpd[3892];

    auto g_z_x_0_0_xx_xx_x_zz = buffer_1100_ddpd[3893];

    auto g_z_x_0_0_xx_xx_y_xx = buffer_1100_ddpd[3894];

    auto g_z_x_0_0_xx_xx_y_xy = buffer_1100_ddpd[3895];

    auto g_z_x_0_0_xx_xx_y_xz = buffer_1100_ddpd[3896];

    auto g_z_x_0_0_xx_xx_y_yy = buffer_1100_ddpd[3897];

    auto g_z_x_0_0_xx_xx_y_yz = buffer_1100_ddpd[3898];

    auto g_z_x_0_0_xx_xx_y_zz = buffer_1100_ddpd[3899];

    auto g_z_x_0_0_xx_xx_z_xx = buffer_1100_ddpd[3900];

    auto g_z_x_0_0_xx_xx_z_xy = buffer_1100_ddpd[3901];

    auto g_z_x_0_0_xx_xx_z_xz = buffer_1100_ddpd[3902];

    auto g_z_x_0_0_xx_xx_z_yy = buffer_1100_ddpd[3903];

    auto g_z_x_0_0_xx_xx_z_yz = buffer_1100_ddpd[3904];

    auto g_z_x_0_0_xx_xx_z_zz = buffer_1100_ddpd[3905];

    auto g_z_x_0_0_xx_xy_x_xx = buffer_1100_ddpd[3906];

    auto g_z_x_0_0_xx_xy_x_xy = buffer_1100_ddpd[3907];

    auto g_z_x_0_0_xx_xy_x_xz = buffer_1100_ddpd[3908];

    auto g_z_x_0_0_xx_xy_x_yy = buffer_1100_ddpd[3909];

    auto g_z_x_0_0_xx_xy_x_yz = buffer_1100_ddpd[3910];

    auto g_z_x_0_0_xx_xy_x_zz = buffer_1100_ddpd[3911];

    auto g_z_x_0_0_xx_xy_y_xx = buffer_1100_ddpd[3912];

    auto g_z_x_0_0_xx_xy_y_xy = buffer_1100_ddpd[3913];

    auto g_z_x_0_0_xx_xy_y_xz = buffer_1100_ddpd[3914];

    auto g_z_x_0_0_xx_xy_y_yy = buffer_1100_ddpd[3915];

    auto g_z_x_0_0_xx_xy_y_yz = buffer_1100_ddpd[3916];

    auto g_z_x_0_0_xx_xy_y_zz = buffer_1100_ddpd[3917];

    auto g_z_x_0_0_xx_xy_z_xx = buffer_1100_ddpd[3918];

    auto g_z_x_0_0_xx_xy_z_xy = buffer_1100_ddpd[3919];

    auto g_z_x_0_0_xx_xy_z_xz = buffer_1100_ddpd[3920];

    auto g_z_x_0_0_xx_xy_z_yy = buffer_1100_ddpd[3921];

    auto g_z_x_0_0_xx_xy_z_yz = buffer_1100_ddpd[3922];

    auto g_z_x_0_0_xx_xy_z_zz = buffer_1100_ddpd[3923];

    auto g_z_x_0_0_xx_xz_x_xx = buffer_1100_ddpd[3924];

    auto g_z_x_0_0_xx_xz_x_xy = buffer_1100_ddpd[3925];

    auto g_z_x_0_0_xx_xz_x_xz = buffer_1100_ddpd[3926];

    auto g_z_x_0_0_xx_xz_x_yy = buffer_1100_ddpd[3927];

    auto g_z_x_0_0_xx_xz_x_yz = buffer_1100_ddpd[3928];

    auto g_z_x_0_0_xx_xz_x_zz = buffer_1100_ddpd[3929];

    auto g_z_x_0_0_xx_xz_y_xx = buffer_1100_ddpd[3930];

    auto g_z_x_0_0_xx_xz_y_xy = buffer_1100_ddpd[3931];

    auto g_z_x_0_0_xx_xz_y_xz = buffer_1100_ddpd[3932];

    auto g_z_x_0_0_xx_xz_y_yy = buffer_1100_ddpd[3933];

    auto g_z_x_0_0_xx_xz_y_yz = buffer_1100_ddpd[3934];

    auto g_z_x_0_0_xx_xz_y_zz = buffer_1100_ddpd[3935];

    auto g_z_x_0_0_xx_xz_z_xx = buffer_1100_ddpd[3936];

    auto g_z_x_0_0_xx_xz_z_xy = buffer_1100_ddpd[3937];

    auto g_z_x_0_0_xx_xz_z_xz = buffer_1100_ddpd[3938];

    auto g_z_x_0_0_xx_xz_z_yy = buffer_1100_ddpd[3939];

    auto g_z_x_0_0_xx_xz_z_yz = buffer_1100_ddpd[3940];

    auto g_z_x_0_0_xx_xz_z_zz = buffer_1100_ddpd[3941];

    auto g_z_x_0_0_xx_yy_x_xx = buffer_1100_ddpd[3942];

    auto g_z_x_0_0_xx_yy_x_xy = buffer_1100_ddpd[3943];

    auto g_z_x_0_0_xx_yy_x_xz = buffer_1100_ddpd[3944];

    auto g_z_x_0_0_xx_yy_x_yy = buffer_1100_ddpd[3945];

    auto g_z_x_0_0_xx_yy_x_yz = buffer_1100_ddpd[3946];

    auto g_z_x_0_0_xx_yy_x_zz = buffer_1100_ddpd[3947];

    auto g_z_x_0_0_xx_yy_y_xx = buffer_1100_ddpd[3948];

    auto g_z_x_0_0_xx_yy_y_xy = buffer_1100_ddpd[3949];

    auto g_z_x_0_0_xx_yy_y_xz = buffer_1100_ddpd[3950];

    auto g_z_x_0_0_xx_yy_y_yy = buffer_1100_ddpd[3951];

    auto g_z_x_0_0_xx_yy_y_yz = buffer_1100_ddpd[3952];

    auto g_z_x_0_0_xx_yy_y_zz = buffer_1100_ddpd[3953];

    auto g_z_x_0_0_xx_yy_z_xx = buffer_1100_ddpd[3954];

    auto g_z_x_0_0_xx_yy_z_xy = buffer_1100_ddpd[3955];

    auto g_z_x_0_0_xx_yy_z_xz = buffer_1100_ddpd[3956];

    auto g_z_x_0_0_xx_yy_z_yy = buffer_1100_ddpd[3957];

    auto g_z_x_0_0_xx_yy_z_yz = buffer_1100_ddpd[3958];

    auto g_z_x_0_0_xx_yy_z_zz = buffer_1100_ddpd[3959];

    auto g_z_x_0_0_xx_yz_x_xx = buffer_1100_ddpd[3960];

    auto g_z_x_0_0_xx_yz_x_xy = buffer_1100_ddpd[3961];

    auto g_z_x_0_0_xx_yz_x_xz = buffer_1100_ddpd[3962];

    auto g_z_x_0_0_xx_yz_x_yy = buffer_1100_ddpd[3963];

    auto g_z_x_0_0_xx_yz_x_yz = buffer_1100_ddpd[3964];

    auto g_z_x_0_0_xx_yz_x_zz = buffer_1100_ddpd[3965];

    auto g_z_x_0_0_xx_yz_y_xx = buffer_1100_ddpd[3966];

    auto g_z_x_0_0_xx_yz_y_xy = buffer_1100_ddpd[3967];

    auto g_z_x_0_0_xx_yz_y_xz = buffer_1100_ddpd[3968];

    auto g_z_x_0_0_xx_yz_y_yy = buffer_1100_ddpd[3969];

    auto g_z_x_0_0_xx_yz_y_yz = buffer_1100_ddpd[3970];

    auto g_z_x_0_0_xx_yz_y_zz = buffer_1100_ddpd[3971];

    auto g_z_x_0_0_xx_yz_z_xx = buffer_1100_ddpd[3972];

    auto g_z_x_0_0_xx_yz_z_xy = buffer_1100_ddpd[3973];

    auto g_z_x_0_0_xx_yz_z_xz = buffer_1100_ddpd[3974];

    auto g_z_x_0_0_xx_yz_z_yy = buffer_1100_ddpd[3975];

    auto g_z_x_0_0_xx_yz_z_yz = buffer_1100_ddpd[3976];

    auto g_z_x_0_0_xx_yz_z_zz = buffer_1100_ddpd[3977];

    auto g_z_x_0_0_xx_zz_x_xx = buffer_1100_ddpd[3978];

    auto g_z_x_0_0_xx_zz_x_xy = buffer_1100_ddpd[3979];

    auto g_z_x_0_0_xx_zz_x_xz = buffer_1100_ddpd[3980];

    auto g_z_x_0_0_xx_zz_x_yy = buffer_1100_ddpd[3981];

    auto g_z_x_0_0_xx_zz_x_yz = buffer_1100_ddpd[3982];

    auto g_z_x_0_0_xx_zz_x_zz = buffer_1100_ddpd[3983];

    auto g_z_x_0_0_xx_zz_y_xx = buffer_1100_ddpd[3984];

    auto g_z_x_0_0_xx_zz_y_xy = buffer_1100_ddpd[3985];

    auto g_z_x_0_0_xx_zz_y_xz = buffer_1100_ddpd[3986];

    auto g_z_x_0_0_xx_zz_y_yy = buffer_1100_ddpd[3987];

    auto g_z_x_0_0_xx_zz_y_yz = buffer_1100_ddpd[3988];

    auto g_z_x_0_0_xx_zz_y_zz = buffer_1100_ddpd[3989];

    auto g_z_x_0_0_xx_zz_z_xx = buffer_1100_ddpd[3990];

    auto g_z_x_0_0_xx_zz_z_xy = buffer_1100_ddpd[3991];

    auto g_z_x_0_0_xx_zz_z_xz = buffer_1100_ddpd[3992];

    auto g_z_x_0_0_xx_zz_z_yy = buffer_1100_ddpd[3993];

    auto g_z_x_0_0_xx_zz_z_yz = buffer_1100_ddpd[3994];

    auto g_z_x_0_0_xx_zz_z_zz = buffer_1100_ddpd[3995];

    auto g_z_x_0_0_xy_xx_x_xx = buffer_1100_ddpd[3996];

    auto g_z_x_0_0_xy_xx_x_xy = buffer_1100_ddpd[3997];

    auto g_z_x_0_0_xy_xx_x_xz = buffer_1100_ddpd[3998];

    auto g_z_x_0_0_xy_xx_x_yy = buffer_1100_ddpd[3999];

    auto g_z_x_0_0_xy_xx_x_yz = buffer_1100_ddpd[4000];

    auto g_z_x_0_0_xy_xx_x_zz = buffer_1100_ddpd[4001];

    auto g_z_x_0_0_xy_xx_y_xx = buffer_1100_ddpd[4002];

    auto g_z_x_0_0_xy_xx_y_xy = buffer_1100_ddpd[4003];

    auto g_z_x_0_0_xy_xx_y_xz = buffer_1100_ddpd[4004];

    auto g_z_x_0_0_xy_xx_y_yy = buffer_1100_ddpd[4005];

    auto g_z_x_0_0_xy_xx_y_yz = buffer_1100_ddpd[4006];

    auto g_z_x_0_0_xy_xx_y_zz = buffer_1100_ddpd[4007];

    auto g_z_x_0_0_xy_xx_z_xx = buffer_1100_ddpd[4008];

    auto g_z_x_0_0_xy_xx_z_xy = buffer_1100_ddpd[4009];

    auto g_z_x_0_0_xy_xx_z_xz = buffer_1100_ddpd[4010];

    auto g_z_x_0_0_xy_xx_z_yy = buffer_1100_ddpd[4011];

    auto g_z_x_0_0_xy_xx_z_yz = buffer_1100_ddpd[4012];

    auto g_z_x_0_0_xy_xx_z_zz = buffer_1100_ddpd[4013];

    auto g_z_x_0_0_xy_xy_x_xx = buffer_1100_ddpd[4014];

    auto g_z_x_0_0_xy_xy_x_xy = buffer_1100_ddpd[4015];

    auto g_z_x_0_0_xy_xy_x_xz = buffer_1100_ddpd[4016];

    auto g_z_x_0_0_xy_xy_x_yy = buffer_1100_ddpd[4017];

    auto g_z_x_0_0_xy_xy_x_yz = buffer_1100_ddpd[4018];

    auto g_z_x_0_0_xy_xy_x_zz = buffer_1100_ddpd[4019];

    auto g_z_x_0_0_xy_xy_y_xx = buffer_1100_ddpd[4020];

    auto g_z_x_0_0_xy_xy_y_xy = buffer_1100_ddpd[4021];

    auto g_z_x_0_0_xy_xy_y_xz = buffer_1100_ddpd[4022];

    auto g_z_x_0_0_xy_xy_y_yy = buffer_1100_ddpd[4023];

    auto g_z_x_0_0_xy_xy_y_yz = buffer_1100_ddpd[4024];

    auto g_z_x_0_0_xy_xy_y_zz = buffer_1100_ddpd[4025];

    auto g_z_x_0_0_xy_xy_z_xx = buffer_1100_ddpd[4026];

    auto g_z_x_0_0_xy_xy_z_xy = buffer_1100_ddpd[4027];

    auto g_z_x_0_0_xy_xy_z_xz = buffer_1100_ddpd[4028];

    auto g_z_x_0_0_xy_xy_z_yy = buffer_1100_ddpd[4029];

    auto g_z_x_0_0_xy_xy_z_yz = buffer_1100_ddpd[4030];

    auto g_z_x_0_0_xy_xy_z_zz = buffer_1100_ddpd[4031];

    auto g_z_x_0_0_xy_xz_x_xx = buffer_1100_ddpd[4032];

    auto g_z_x_0_0_xy_xz_x_xy = buffer_1100_ddpd[4033];

    auto g_z_x_0_0_xy_xz_x_xz = buffer_1100_ddpd[4034];

    auto g_z_x_0_0_xy_xz_x_yy = buffer_1100_ddpd[4035];

    auto g_z_x_0_0_xy_xz_x_yz = buffer_1100_ddpd[4036];

    auto g_z_x_0_0_xy_xz_x_zz = buffer_1100_ddpd[4037];

    auto g_z_x_0_0_xy_xz_y_xx = buffer_1100_ddpd[4038];

    auto g_z_x_0_0_xy_xz_y_xy = buffer_1100_ddpd[4039];

    auto g_z_x_0_0_xy_xz_y_xz = buffer_1100_ddpd[4040];

    auto g_z_x_0_0_xy_xz_y_yy = buffer_1100_ddpd[4041];

    auto g_z_x_0_0_xy_xz_y_yz = buffer_1100_ddpd[4042];

    auto g_z_x_0_0_xy_xz_y_zz = buffer_1100_ddpd[4043];

    auto g_z_x_0_0_xy_xz_z_xx = buffer_1100_ddpd[4044];

    auto g_z_x_0_0_xy_xz_z_xy = buffer_1100_ddpd[4045];

    auto g_z_x_0_0_xy_xz_z_xz = buffer_1100_ddpd[4046];

    auto g_z_x_0_0_xy_xz_z_yy = buffer_1100_ddpd[4047];

    auto g_z_x_0_0_xy_xz_z_yz = buffer_1100_ddpd[4048];

    auto g_z_x_0_0_xy_xz_z_zz = buffer_1100_ddpd[4049];

    auto g_z_x_0_0_xy_yy_x_xx = buffer_1100_ddpd[4050];

    auto g_z_x_0_0_xy_yy_x_xy = buffer_1100_ddpd[4051];

    auto g_z_x_0_0_xy_yy_x_xz = buffer_1100_ddpd[4052];

    auto g_z_x_0_0_xy_yy_x_yy = buffer_1100_ddpd[4053];

    auto g_z_x_0_0_xy_yy_x_yz = buffer_1100_ddpd[4054];

    auto g_z_x_0_0_xy_yy_x_zz = buffer_1100_ddpd[4055];

    auto g_z_x_0_0_xy_yy_y_xx = buffer_1100_ddpd[4056];

    auto g_z_x_0_0_xy_yy_y_xy = buffer_1100_ddpd[4057];

    auto g_z_x_0_0_xy_yy_y_xz = buffer_1100_ddpd[4058];

    auto g_z_x_0_0_xy_yy_y_yy = buffer_1100_ddpd[4059];

    auto g_z_x_0_0_xy_yy_y_yz = buffer_1100_ddpd[4060];

    auto g_z_x_0_0_xy_yy_y_zz = buffer_1100_ddpd[4061];

    auto g_z_x_0_0_xy_yy_z_xx = buffer_1100_ddpd[4062];

    auto g_z_x_0_0_xy_yy_z_xy = buffer_1100_ddpd[4063];

    auto g_z_x_0_0_xy_yy_z_xz = buffer_1100_ddpd[4064];

    auto g_z_x_0_0_xy_yy_z_yy = buffer_1100_ddpd[4065];

    auto g_z_x_0_0_xy_yy_z_yz = buffer_1100_ddpd[4066];

    auto g_z_x_0_0_xy_yy_z_zz = buffer_1100_ddpd[4067];

    auto g_z_x_0_0_xy_yz_x_xx = buffer_1100_ddpd[4068];

    auto g_z_x_0_0_xy_yz_x_xy = buffer_1100_ddpd[4069];

    auto g_z_x_0_0_xy_yz_x_xz = buffer_1100_ddpd[4070];

    auto g_z_x_0_0_xy_yz_x_yy = buffer_1100_ddpd[4071];

    auto g_z_x_0_0_xy_yz_x_yz = buffer_1100_ddpd[4072];

    auto g_z_x_0_0_xy_yz_x_zz = buffer_1100_ddpd[4073];

    auto g_z_x_0_0_xy_yz_y_xx = buffer_1100_ddpd[4074];

    auto g_z_x_0_0_xy_yz_y_xy = buffer_1100_ddpd[4075];

    auto g_z_x_0_0_xy_yz_y_xz = buffer_1100_ddpd[4076];

    auto g_z_x_0_0_xy_yz_y_yy = buffer_1100_ddpd[4077];

    auto g_z_x_0_0_xy_yz_y_yz = buffer_1100_ddpd[4078];

    auto g_z_x_0_0_xy_yz_y_zz = buffer_1100_ddpd[4079];

    auto g_z_x_0_0_xy_yz_z_xx = buffer_1100_ddpd[4080];

    auto g_z_x_0_0_xy_yz_z_xy = buffer_1100_ddpd[4081];

    auto g_z_x_0_0_xy_yz_z_xz = buffer_1100_ddpd[4082];

    auto g_z_x_0_0_xy_yz_z_yy = buffer_1100_ddpd[4083];

    auto g_z_x_0_0_xy_yz_z_yz = buffer_1100_ddpd[4084];

    auto g_z_x_0_0_xy_yz_z_zz = buffer_1100_ddpd[4085];

    auto g_z_x_0_0_xy_zz_x_xx = buffer_1100_ddpd[4086];

    auto g_z_x_0_0_xy_zz_x_xy = buffer_1100_ddpd[4087];

    auto g_z_x_0_0_xy_zz_x_xz = buffer_1100_ddpd[4088];

    auto g_z_x_0_0_xy_zz_x_yy = buffer_1100_ddpd[4089];

    auto g_z_x_0_0_xy_zz_x_yz = buffer_1100_ddpd[4090];

    auto g_z_x_0_0_xy_zz_x_zz = buffer_1100_ddpd[4091];

    auto g_z_x_0_0_xy_zz_y_xx = buffer_1100_ddpd[4092];

    auto g_z_x_0_0_xy_zz_y_xy = buffer_1100_ddpd[4093];

    auto g_z_x_0_0_xy_zz_y_xz = buffer_1100_ddpd[4094];

    auto g_z_x_0_0_xy_zz_y_yy = buffer_1100_ddpd[4095];

    auto g_z_x_0_0_xy_zz_y_yz = buffer_1100_ddpd[4096];

    auto g_z_x_0_0_xy_zz_y_zz = buffer_1100_ddpd[4097];

    auto g_z_x_0_0_xy_zz_z_xx = buffer_1100_ddpd[4098];

    auto g_z_x_0_0_xy_zz_z_xy = buffer_1100_ddpd[4099];

    auto g_z_x_0_0_xy_zz_z_xz = buffer_1100_ddpd[4100];

    auto g_z_x_0_0_xy_zz_z_yy = buffer_1100_ddpd[4101];

    auto g_z_x_0_0_xy_zz_z_yz = buffer_1100_ddpd[4102];

    auto g_z_x_0_0_xy_zz_z_zz = buffer_1100_ddpd[4103];

    auto g_z_x_0_0_xz_xx_x_xx = buffer_1100_ddpd[4104];

    auto g_z_x_0_0_xz_xx_x_xy = buffer_1100_ddpd[4105];

    auto g_z_x_0_0_xz_xx_x_xz = buffer_1100_ddpd[4106];

    auto g_z_x_0_0_xz_xx_x_yy = buffer_1100_ddpd[4107];

    auto g_z_x_0_0_xz_xx_x_yz = buffer_1100_ddpd[4108];

    auto g_z_x_0_0_xz_xx_x_zz = buffer_1100_ddpd[4109];

    auto g_z_x_0_0_xz_xx_y_xx = buffer_1100_ddpd[4110];

    auto g_z_x_0_0_xz_xx_y_xy = buffer_1100_ddpd[4111];

    auto g_z_x_0_0_xz_xx_y_xz = buffer_1100_ddpd[4112];

    auto g_z_x_0_0_xz_xx_y_yy = buffer_1100_ddpd[4113];

    auto g_z_x_0_0_xz_xx_y_yz = buffer_1100_ddpd[4114];

    auto g_z_x_0_0_xz_xx_y_zz = buffer_1100_ddpd[4115];

    auto g_z_x_0_0_xz_xx_z_xx = buffer_1100_ddpd[4116];

    auto g_z_x_0_0_xz_xx_z_xy = buffer_1100_ddpd[4117];

    auto g_z_x_0_0_xz_xx_z_xz = buffer_1100_ddpd[4118];

    auto g_z_x_0_0_xz_xx_z_yy = buffer_1100_ddpd[4119];

    auto g_z_x_0_0_xz_xx_z_yz = buffer_1100_ddpd[4120];

    auto g_z_x_0_0_xz_xx_z_zz = buffer_1100_ddpd[4121];

    auto g_z_x_0_0_xz_xy_x_xx = buffer_1100_ddpd[4122];

    auto g_z_x_0_0_xz_xy_x_xy = buffer_1100_ddpd[4123];

    auto g_z_x_0_0_xz_xy_x_xz = buffer_1100_ddpd[4124];

    auto g_z_x_0_0_xz_xy_x_yy = buffer_1100_ddpd[4125];

    auto g_z_x_0_0_xz_xy_x_yz = buffer_1100_ddpd[4126];

    auto g_z_x_0_0_xz_xy_x_zz = buffer_1100_ddpd[4127];

    auto g_z_x_0_0_xz_xy_y_xx = buffer_1100_ddpd[4128];

    auto g_z_x_0_0_xz_xy_y_xy = buffer_1100_ddpd[4129];

    auto g_z_x_0_0_xz_xy_y_xz = buffer_1100_ddpd[4130];

    auto g_z_x_0_0_xz_xy_y_yy = buffer_1100_ddpd[4131];

    auto g_z_x_0_0_xz_xy_y_yz = buffer_1100_ddpd[4132];

    auto g_z_x_0_0_xz_xy_y_zz = buffer_1100_ddpd[4133];

    auto g_z_x_0_0_xz_xy_z_xx = buffer_1100_ddpd[4134];

    auto g_z_x_0_0_xz_xy_z_xy = buffer_1100_ddpd[4135];

    auto g_z_x_0_0_xz_xy_z_xz = buffer_1100_ddpd[4136];

    auto g_z_x_0_0_xz_xy_z_yy = buffer_1100_ddpd[4137];

    auto g_z_x_0_0_xz_xy_z_yz = buffer_1100_ddpd[4138];

    auto g_z_x_0_0_xz_xy_z_zz = buffer_1100_ddpd[4139];

    auto g_z_x_0_0_xz_xz_x_xx = buffer_1100_ddpd[4140];

    auto g_z_x_0_0_xz_xz_x_xy = buffer_1100_ddpd[4141];

    auto g_z_x_0_0_xz_xz_x_xz = buffer_1100_ddpd[4142];

    auto g_z_x_0_0_xz_xz_x_yy = buffer_1100_ddpd[4143];

    auto g_z_x_0_0_xz_xz_x_yz = buffer_1100_ddpd[4144];

    auto g_z_x_0_0_xz_xz_x_zz = buffer_1100_ddpd[4145];

    auto g_z_x_0_0_xz_xz_y_xx = buffer_1100_ddpd[4146];

    auto g_z_x_0_0_xz_xz_y_xy = buffer_1100_ddpd[4147];

    auto g_z_x_0_0_xz_xz_y_xz = buffer_1100_ddpd[4148];

    auto g_z_x_0_0_xz_xz_y_yy = buffer_1100_ddpd[4149];

    auto g_z_x_0_0_xz_xz_y_yz = buffer_1100_ddpd[4150];

    auto g_z_x_0_0_xz_xz_y_zz = buffer_1100_ddpd[4151];

    auto g_z_x_0_0_xz_xz_z_xx = buffer_1100_ddpd[4152];

    auto g_z_x_0_0_xz_xz_z_xy = buffer_1100_ddpd[4153];

    auto g_z_x_0_0_xz_xz_z_xz = buffer_1100_ddpd[4154];

    auto g_z_x_0_0_xz_xz_z_yy = buffer_1100_ddpd[4155];

    auto g_z_x_0_0_xz_xz_z_yz = buffer_1100_ddpd[4156];

    auto g_z_x_0_0_xz_xz_z_zz = buffer_1100_ddpd[4157];

    auto g_z_x_0_0_xz_yy_x_xx = buffer_1100_ddpd[4158];

    auto g_z_x_0_0_xz_yy_x_xy = buffer_1100_ddpd[4159];

    auto g_z_x_0_0_xz_yy_x_xz = buffer_1100_ddpd[4160];

    auto g_z_x_0_0_xz_yy_x_yy = buffer_1100_ddpd[4161];

    auto g_z_x_0_0_xz_yy_x_yz = buffer_1100_ddpd[4162];

    auto g_z_x_0_0_xz_yy_x_zz = buffer_1100_ddpd[4163];

    auto g_z_x_0_0_xz_yy_y_xx = buffer_1100_ddpd[4164];

    auto g_z_x_0_0_xz_yy_y_xy = buffer_1100_ddpd[4165];

    auto g_z_x_0_0_xz_yy_y_xz = buffer_1100_ddpd[4166];

    auto g_z_x_0_0_xz_yy_y_yy = buffer_1100_ddpd[4167];

    auto g_z_x_0_0_xz_yy_y_yz = buffer_1100_ddpd[4168];

    auto g_z_x_0_0_xz_yy_y_zz = buffer_1100_ddpd[4169];

    auto g_z_x_0_0_xz_yy_z_xx = buffer_1100_ddpd[4170];

    auto g_z_x_0_0_xz_yy_z_xy = buffer_1100_ddpd[4171];

    auto g_z_x_0_0_xz_yy_z_xz = buffer_1100_ddpd[4172];

    auto g_z_x_0_0_xz_yy_z_yy = buffer_1100_ddpd[4173];

    auto g_z_x_0_0_xz_yy_z_yz = buffer_1100_ddpd[4174];

    auto g_z_x_0_0_xz_yy_z_zz = buffer_1100_ddpd[4175];

    auto g_z_x_0_0_xz_yz_x_xx = buffer_1100_ddpd[4176];

    auto g_z_x_0_0_xz_yz_x_xy = buffer_1100_ddpd[4177];

    auto g_z_x_0_0_xz_yz_x_xz = buffer_1100_ddpd[4178];

    auto g_z_x_0_0_xz_yz_x_yy = buffer_1100_ddpd[4179];

    auto g_z_x_0_0_xz_yz_x_yz = buffer_1100_ddpd[4180];

    auto g_z_x_0_0_xz_yz_x_zz = buffer_1100_ddpd[4181];

    auto g_z_x_0_0_xz_yz_y_xx = buffer_1100_ddpd[4182];

    auto g_z_x_0_0_xz_yz_y_xy = buffer_1100_ddpd[4183];

    auto g_z_x_0_0_xz_yz_y_xz = buffer_1100_ddpd[4184];

    auto g_z_x_0_0_xz_yz_y_yy = buffer_1100_ddpd[4185];

    auto g_z_x_0_0_xz_yz_y_yz = buffer_1100_ddpd[4186];

    auto g_z_x_0_0_xz_yz_y_zz = buffer_1100_ddpd[4187];

    auto g_z_x_0_0_xz_yz_z_xx = buffer_1100_ddpd[4188];

    auto g_z_x_0_0_xz_yz_z_xy = buffer_1100_ddpd[4189];

    auto g_z_x_0_0_xz_yz_z_xz = buffer_1100_ddpd[4190];

    auto g_z_x_0_0_xz_yz_z_yy = buffer_1100_ddpd[4191];

    auto g_z_x_0_0_xz_yz_z_yz = buffer_1100_ddpd[4192];

    auto g_z_x_0_0_xz_yz_z_zz = buffer_1100_ddpd[4193];

    auto g_z_x_0_0_xz_zz_x_xx = buffer_1100_ddpd[4194];

    auto g_z_x_0_0_xz_zz_x_xy = buffer_1100_ddpd[4195];

    auto g_z_x_0_0_xz_zz_x_xz = buffer_1100_ddpd[4196];

    auto g_z_x_0_0_xz_zz_x_yy = buffer_1100_ddpd[4197];

    auto g_z_x_0_0_xz_zz_x_yz = buffer_1100_ddpd[4198];

    auto g_z_x_0_0_xz_zz_x_zz = buffer_1100_ddpd[4199];

    auto g_z_x_0_0_xz_zz_y_xx = buffer_1100_ddpd[4200];

    auto g_z_x_0_0_xz_zz_y_xy = buffer_1100_ddpd[4201];

    auto g_z_x_0_0_xz_zz_y_xz = buffer_1100_ddpd[4202];

    auto g_z_x_0_0_xz_zz_y_yy = buffer_1100_ddpd[4203];

    auto g_z_x_0_0_xz_zz_y_yz = buffer_1100_ddpd[4204];

    auto g_z_x_0_0_xz_zz_y_zz = buffer_1100_ddpd[4205];

    auto g_z_x_0_0_xz_zz_z_xx = buffer_1100_ddpd[4206];

    auto g_z_x_0_0_xz_zz_z_xy = buffer_1100_ddpd[4207];

    auto g_z_x_0_0_xz_zz_z_xz = buffer_1100_ddpd[4208];

    auto g_z_x_0_0_xz_zz_z_yy = buffer_1100_ddpd[4209];

    auto g_z_x_0_0_xz_zz_z_yz = buffer_1100_ddpd[4210];

    auto g_z_x_0_0_xz_zz_z_zz = buffer_1100_ddpd[4211];

    auto g_z_x_0_0_yy_xx_x_xx = buffer_1100_ddpd[4212];

    auto g_z_x_0_0_yy_xx_x_xy = buffer_1100_ddpd[4213];

    auto g_z_x_0_0_yy_xx_x_xz = buffer_1100_ddpd[4214];

    auto g_z_x_0_0_yy_xx_x_yy = buffer_1100_ddpd[4215];

    auto g_z_x_0_0_yy_xx_x_yz = buffer_1100_ddpd[4216];

    auto g_z_x_0_0_yy_xx_x_zz = buffer_1100_ddpd[4217];

    auto g_z_x_0_0_yy_xx_y_xx = buffer_1100_ddpd[4218];

    auto g_z_x_0_0_yy_xx_y_xy = buffer_1100_ddpd[4219];

    auto g_z_x_0_0_yy_xx_y_xz = buffer_1100_ddpd[4220];

    auto g_z_x_0_0_yy_xx_y_yy = buffer_1100_ddpd[4221];

    auto g_z_x_0_0_yy_xx_y_yz = buffer_1100_ddpd[4222];

    auto g_z_x_0_0_yy_xx_y_zz = buffer_1100_ddpd[4223];

    auto g_z_x_0_0_yy_xx_z_xx = buffer_1100_ddpd[4224];

    auto g_z_x_0_0_yy_xx_z_xy = buffer_1100_ddpd[4225];

    auto g_z_x_0_0_yy_xx_z_xz = buffer_1100_ddpd[4226];

    auto g_z_x_0_0_yy_xx_z_yy = buffer_1100_ddpd[4227];

    auto g_z_x_0_0_yy_xx_z_yz = buffer_1100_ddpd[4228];

    auto g_z_x_0_0_yy_xx_z_zz = buffer_1100_ddpd[4229];

    auto g_z_x_0_0_yy_xy_x_xx = buffer_1100_ddpd[4230];

    auto g_z_x_0_0_yy_xy_x_xy = buffer_1100_ddpd[4231];

    auto g_z_x_0_0_yy_xy_x_xz = buffer_1100_ddpd[4232];

    auto g_z_x_0_0_yy_xy_x_yy = buffer_1100_ddpd[4233];

    auto g_z_x_0_0_yy_xy_x_yz = buffer_1100_ddpd[4234];

    auto g_z_x_0_0_yy_xy_x_zz = buffer_1100_ddpd[4235];

    auto g_z_x_0_0_yy_xy_y_xx = buffer_1100_ddpd[4236];

    auto g_z_x_0_0_yy_xy_y_xy = buffer_1100_ddpd[4237];

    auto g_z_x_0_0_yy_xy_y_xz = buffer_1100_ddpd[4238];

    auto g_z_x_0_0_yy_xy_y_yy = buffer_1100_ddpd[4239];

    auto g_z_x_0_0_yy_xy_y_yz = buffer_1100_ddpd[4240];

    auto g_z_x_0_0_yy_xy_y_zz = buffer_1100_ddpd[4241];

    auto g_z_x_0_0_yy_xy_z_xx = buffer_1100_ddpd[4242];

    auto g_z_x_0_0_yy_xy_z_xy = buffer_1100_ddpd[4243];

    auto g_z_x_0_0_yy_xy_z_xz = buffer_1100_ddpd[4244];

    auto g_z_x_0_0_yy_xy_z_yy = buffer_1100_ddpd[4245];

    auto g_z_x_0_0_yy_xy_z_yz = buffer_1100_ddpd[4246];

    auto g_z_x_0_0_yy_xy_z_zz = buffer_1100_ddpd[4247];

    auto g_z_x_0_0_yy_xz_x_xx = buffer_1100_ddpd[4248];

    auto g_z_x_0_0_yy_xz_x_xy = buffer_1100_ddpd[4249];

    auto g_z_x_0_0_yy_xz_x_xz = buffer_1100_ddpd[4250];

    auto g_z_x_0_0_yy_xz_x_yy = buffer_1100_ddpd[4251];

    auto g_z_x_0_0_yy_xz_x_yz = buffer_1100_ddpd[4252];

    auto g_z_x_0_0_yy_xz_x_zz = buffer_1100_ddpd[4253];

    auto g_z_x_0_0_yy_xz_y_xx = buffer_1100_ddpd[4254];

    auto g_z_x_0_0_yy_xz_y_xy = buffer_1100_ddpd[4255];

    auto g_z_x_0_0_yy_xz_y_xz = buffer_1100_ddpd[4256];

    auto g_z_x_0_0_yy_xz_y_yy = buffer_1100_ddpd[4257];

    auto g_z_x_0_0_yy_xz_y_yz = buffer_1100_ddpd[4258];

    auto g_z_x_0_0_yy_xz_y_zz = buffer_1100_ddpd[4259];

    auto g_z_x_0_0_yy_xz_z_xx = buffer_1100_ddpd[4260];

    auto g_z_x_0_0_yy_xz_z_xy = buffer_1100_ddpd[4261];

    auto g_z_x_0_0_yy_xz_z_xz = buffer_1100_ddpd[4262];

    auto g_z_x_0_0_yy_xz_z_yy = buffer_1100_ddpd[4263];

    auto g_z_x_0_0_yy_xz_z_yz = buffer_1100_ddpd[4264];

    auto g_z_x_0_0_yy_xz_z_zz = buffer_1100_ddpd[4265];

    auto g_z_x_0_0_yy_yy_x_xx = buffer_1100_ddpd[4266];

    auto g_z_x_0_0_yy_yy_x_xy = buffer_1100_ddpd[4267];

    auto g_z_x_0_0_yy_yy_x_xz = buffer_1100_ddpd[4268];

    auto g_z_x_0_0_yy_yy_x_yy = buffer_1100_ddpd[4269];

    auto g_z_x_0_0_yy_yy_x_yz = buffer_1100_ddpd[4270];

    auto g_z_x_0_0_yy_yy_x_zz = buffer_1100_ddpd[4271];

    auto g_z_x_0_0_yy_yy_y_xx = buffer_1100_ddpd[4272];

    auto g_z_x_0_0_yy_yy_y_xy = buffer_1100_ddpd[4273];

    auto g_z_x_0_0_yy_yy_y_xz = buffer_1100_ddpd[4274];

    auto g_z_x_0_0_yy_yy_y_yy = buffer_1100_ddpd[4275];

    auto g_z_x_0_0_yy_yy_y_yz = buffer_1100_ddpd[4276];

    auto g_z_x_0_0_yy_yy_y_zz = buffer_1100_ddpd[4277];

    auto g_z_x_0_0_yy_yy_z_xx = buffer_1100_ddpd[4278];

    auto g_z_x_0_0_yy_yy_z_xy = buffer_1100_ddpd[4279];

    auto g_z_x_0_0_yy_yy_z_xz = buffer_1100_ddpd[4280];

    auto g_z_x_0_0_yy_yy_z_yy = buffer_1100_ddpd[4281];

    auto g_z_x_0_0_yy_yy_z_yz = buffer_1100_ddpd[4282];

    auto g_z_x_0_0_yy_yy_z_zz = buffer_1100_ddpd[4283];

    auto g_z_x_0_0_yy_yz_x_xx = buffer_1100_ddpd[4284];

    auto g_z_x_0_0_yy_yz_x_xy = buffer_1100_ddpd[4285];

    auto g_z_x_0_0_yy_yz_x_xz = buffer_1100_ddpd[4286];

    auto g_z_x_0_0_yy_yz_x_yy = buffer_1100_ddpd[4287];

    auto g_z_x_0_0_yy_yz_x_yz = buffer_1100_ddpd[4288];

    auto g_z_x_0_0_yy_yz_x_zz = buffer_1100_ddpd[4289];

    auto g_z_x_0_0_yy_yz_y_xx = buffer_1100_ddpd[4290];

    auto g_z_x_0_0_yy_yz_y_xy = buffer_1100_ddpd[4291];

    auto g_z_x_0_0_yy_yz_y_xz = buffer_1100_ddpd[4292];

    auto g_z_x_0_0_yy_yz_y_yy = buffer_1100_ddpd[4293];

    auto g_z_x_0_0_yy_yz_y_yz = buffer_1100_ddpd[4294];

    auto g_z_x_0_0_yy_yz_y_zz = buffer_1100_ddpd[4295];

    auto g_z_x_0_0_yy_yz_z_xx = buffer_1100_ddpd[4296];

    auto g_z_x_0_0_yy_yz_z_xy = buffer_1100_ddpd[4297];

    auto g_z_x_0_0_yy_yz_z_xz = buffer_1100_ddpd[4298];

    auto g_z_x_0_0_yy_yz_z_yy = buffer_1100_ddpd[4299];

    auto g_z_x_0_0_yy_yz_z_yz = buffer_1100_ddpd[4300];

    auto g_z_x_0_0_yy_yz_z_zz = buffer_1100_ddpd[4301];

    auto g_z_x_0_0_yy_zz_x_xx = buffer_1100_ddpd[4302];

    auto g_z_x_0_0_yy_zz_x_xy = buffer_1100_ddpd[4303];

    auto g_z_x_0_0_yy_zz_x_xz = buffer_1100_ddpd[4304];

    auto g_z_x_0_0_yy_zz_x_yy = buffer_1100_ddpd[4305];

    auto g_z_x_0_0_yy_zz_x_yz = buffer_1100_ddpd[4306];

    auto g_z_x_0_0_yy_zz_x_zz = buffer_1100_ddpd[4307];

    auto g_z_x_0_0_yy_zz_y_xx = buffer_1100_ddpd[4308];

    auto g_z_x_0_0_yy_zz_y_xy = buffer_1100_ddpd[4309];

    auto g_z_x_0_0_yy_zz_y_xz = buffer_1100_ddpd[4310];

    auto g_z_x_0_0_yy_zz_y_yy = buffer_1100_ddpd[4311];

    auto g_z_x_0_0_yy_zz_y_yz = buffer_1100_ddpd[4312];

    auto g_z_x_0_0_yy_zz_y_zz = buffer_1100_ddpd[4313];

    auto g_z_x_0_0_yy_zz_z_xx = buffer_1100_ddpd[4314];

    auto g_z_x_0_0_yy_zz_z_xy = buffer_1100_ddpd[4315];

    auto g_z_x_0_0_yy_zz_z_xz = buffer_1100_ddpd[4316];

    auto g_z_x_0_0_yy_zz_z_yy = buffer_1100_ddpd[4317];

    auto g_z_x_0_0_yy_zz_z_yz = buffer_1100_ddpd[4318];

    auto g_z_x_0_0_yy_zz_z_zz = buffer_1100_ddpd[4319];

    auto g_z_x_0_0_yz_xx_x_xx = buffer_1100_ddpd[4320];

    auto g_z_x_0_0_yz_xx_x_xy = buffer_1100_ddpd[4321];

    auto g_z_x_0_0_yz_xx_x_xz = buffer_1100_ddpd[4322];

    auto g_z_x_0_0_yz_xx_x_yy = buffer_1100_ddpd[4323];

    auto g_z_x_0_0_yz_xx_x_yz = buffer_1100_ddpd[4324];

    auto g_z_x_0_0_yz_xx_x_zz = buffer_1100_ddpd[4325];

    auto g_z_x_0_0_yz_xx_y_xx = buffer_1100_ddpd[4326];

    auto g_z_x_0_0_yz_xx_y_xy = buffer_1100_ddpd[4327];

    auto g_z_x_0_0_yz_xx_y_xz = buffer_1100_ddpd[4328];

    auto g_z_x_0_0_yz_xx_y_yy = buffer_1100_ddpd[4329];

    auto g_z_x_0_0_yz_xx_y_yz = buffer_1100_ddpd[4330];

    auto g_z_x_0_0_yz_xx_y_zz = buffer_1100_ddpd[4331];

    auto g_z_x_0_0_yz_xx_z_xx = buffer_1100_ddpd[4332];

    auto g_z_x_0_0_yz_xx_z_xy = buffer_1100_ddpd[4333];

    auto g_z_x_0_0_yz_xx_z_xz = buffer_1100_ddpd[4334];

    auto g_z_x_0_0_yz_xx_z_yy = buffer_1100_ddpd[4335];

    auto g_z_x_0_0_yz_xx_z_yz = buffer_1100_ddpd[4336];

    auto g_z_x_0_0_yz_xx_z_zz = buffer_1100_ddpd[4337];

    auto g_z_x_0_0_yz_xy_x_xx = buffer_1100_ddpd[4338];

    auto g_z_x_0_0_yz_xy_x_xy = buffer_1100_ddpd[4339];

    auto g_z_x_0_0_yz_xy_x_xz = buffer_1100_ddpd[4340];

    auto g_z_x_0_0_yz_xy_x_yy = buffer_1100_ddpd[4341];

    auto g_z_x_0_0_yz_xy_x_yz = buffer_1100_ddpd[4342];

    auto g_z_x_0_0_yz_xy_x_zz = buffer_1100_ddpd[4343];

    auto g_z_x_0_0_yz_xy_y_xx = buffer_1100_ddpd[4344];

    auto g_z_x_0_0_yz_xy_y_xy = buffer_1100_ddpd[4345];

    auto g_z_x_0_0_yz_xy_y_xz = buffer_1100_ddpd[4346];

    auto g_z_x_0_0_yz_xy_y_yy = buffer_1100_ddpd[4347];

    auto g_z_x_0_0_yz_xy_y_yz = buffer_1100_ddpd[4348];

    auto g_z_x_0_0_yz_xy_y_zz = buffer_1100_ddpd[4349];

    auto g_z_x_0_0_yz_xy_z_xx = buffer_1100_ddpd[4350];

    auto g_z_x_0_0_yz_xy_z_xy = buffer_1100_ddpd[4351];

    auto g_z_x_0_0_yz_xy_z_xz = buffer_1100_ddpd[4352];

    auto g_z_x_0_0_yz_xy_z_yy = buffer_1100_ddpd[4353];

    auto g_z_x_0_0_yz_xy_z_yz = buffer_1100_ddpd[4354];

    auto g_z_x_0_0_yz_xy_z_zz = buffer_1100_ddpd[4355];

    auto g_z_x_0_0_yz_xz_x_xx = buffer_1100_ddpd[4356];

    auto g_z_x_0_0_yz_xz_x_xy = buffer_1100_ddpd[4357];

    auto g_z_x_0_0_yz_xz_x_xz = buffer_1100_ddpd[4358];

    auto g_z_x_0_0_yz_xz_x_yy = buffer_1100_ddpd[4359];

    auto g_z_x_0_0_yz_xz_x_yz = buffer_1100_ddpd[4360];

    auto g_z_x_0_0_yz_xz_x_zz = buffer_1100_ddpd[4361];

    auto g_z_x_0_0_yz_xz_y_xx = buffer_1100_ddpd[4362];

    auto g_z_x_0_0_yz_xz_y_xy = buffer_1100_ddpd[4363];

    auto g_z_x_0_0_yz_xz_y_xz = buffer_1100_ddpd[4364];

    auto g_z_x_0_0_yz_xz_y_yy = buffer_1100_ddpd[4365];

    auto g_z_x_0_0_yz_xz_y_yz = buffer_1100_ddpd[4366];

    auto g_z_x_0_0_yz_xz_y_zz = buffer_1100_ddpd[4367];

    auto g_z_x_0_0_yz_xz_z_xx = buffer_1100_ddpd[4368];

    auto g_z_x_0_0_yz_xz_z_xy = buffer_1100_ddpd[4369];

    auto g_z_x_0_0_yz_xz_z_xz = buffer_1100_ddpd[4370];

    auto g_z_x_0_0_yz_xz_z_yy = buffer_1100_ddpd[4371];

    auto g_z_x_0_0_yz_xz_z_yz = buffer_1100_ddpd[4372];

    auto g_z_x_0_0_yz_xz_z_zz = buffer_1100_ddpd[4373];

    auto g_z_x_0_0_yz_yy_x_xx = buffer_1100_ddpd[4374];

    auto g_z_x_0_0_yz_yy_x_xy = buffer_1100_ddpd[4375];

    auto g_z_x_0_0_yz_yy_x_xz = buffer_1100_ddpd[4376];

    auto g_z_x_0_0_yz_yy_x_yy = buffer_1100_ddpd[4377];

    auto g_z_x_0_0_yz_yy_x_yz = buffer_1100_ddpd[4378];

    auto g_z_x_0_0_yz_yy_x_zz = buffer_1100_ddpd[4379];

    auto g_z_x_0_0_yz_yy_y_xx = buffer_1100_ddpd[4380];

    auto g_z_x_0_0_yz_yy_y_xy = buffer_1100_ddpd[4381];

    auto g_z_x_0_0_yz_yy_y_xz = buffer_1100_ddpd[4382];

    auto g_z_x_0_0_yz_yy_y_yy = buffer_1100_ddpd[4383];

    auto g_z_x_0_0_yz_yy_y_yz = buffer_1100_ddpd[4384];

    auto g_z_x_0_0_yz_yy_y_zz = buffer_1100_ddpd[4385];

    auto g_z_x_0_0_yz_yy_z_xx = buffer_1100_ddpd[4386];

    auto g_z_x_0_0_yz_yy_z_xy = buffer_1100_ddpd[4387];

    auto g_z_x_0_0_yz_yy_z_xz = buffer_1100_ddpd[4388];

    auto g_z_x_0_0_yz_yy_z_yy = buffer_1100_ddpd[4389];

    auto g_z_x_0_0_yz_yy_z_yz = buffer_1100_ddpd[4390];

    auto g_z_x_0_0_yz_yy_z_zz = buffer_1100_ddpd[4391];

    auto g_z_x_0_0_yz_yz_x_xx = buffer_1100_ddpd[4392];

    auto g_z_x_0_0_yz_yz_x_xy = buffer_1100_ddpd[4393];

    auto g_z_x_0_0_yz_yz_x_xz = buffer_1100_ddpd[4394];

    auto g_z_x_0_0_yz_yz_x_yy = buffer_1100_ddpd[4395];

    auto g_z_x_0_0_yz_yz_x_yz = buffer_1100_ddpd[4396];

    auto g_z_x_0_0_yz_yz_x_zz = buffer_1100_ddpd[4397];

    auto g_z_x_0_0_yz_yz_y_xx = buffer_1100_ddpd[4398];

    auto g_z_x_0_0_yz_yz_y_xy = buffer_1100_ddpd[4399];

    auto g_z_x_0_0_yz_yz_y_xz = buffer_1100_ddpd[4400];

    auto g_z_x_0_0_yz_yz_y_yy = buffer_1100_ddpd[4401];

    auto g_z_x_0_0_yz_yz_y_yz = buffer_1100_ddpd[4402];

    auto g_z_x_0_0_yz_yz_y_zz = buffer_1100_ddpd[4403];

    auto g_z_x_0_0_yz_yz_z_xx = buffer_1100_ddpd[4404];

    auto g_z_x_0_0_yz_yz_z_xy = buffer_1100_ddpd[4405];

    auto g_z_x_0_0_yz_yz_z_xz = buffer_1100_ddpd[4406];

    auto g_z_x_0_0_yz_yz_z_yy = buffer_1100_ddpd[4407];

    auto g_z_x_0_0_yz_yz_z_yz = buffer_1100_ddpd[4408];

    auto g_z_x_0_0_yz_yz_z_zz = buffer_1100_ddpd[4409];

    auto g_z_x_0_0_yz_zz_x_xx = buffer_1100_ddpd[4410];

    auto g_z_x_0_0_yz_zz_x_xy = buffer_1100_ddpd[4411];

    auto g_z_x_0_0_yz_zz_x_xz = buffer_1100_ddpd[4412];

    auto g_z_x_0_0_yz_zz_x_yy = buffer_1100_ddpd[4413];

    auto g_z_x_0_0_yz_zz_x_yz = buffer_1100_ddpd[4414];

    auto g_z_x_0_0_yz_zz_x_zz = buffer_1100_ddpd[4415];

    auto g_z_x_0_0_yz_zz_y_xx = buffer_1100_ddpd[4416];

    auto g_z_x_0_0_yz_zz_y_xy = buffer_1100_ddpd[4417];

    auto g_z_x_0_0_yz_zz_y_xz = buffer_1100_ddpd[4418];

    auto g_z_x_0_0_yz_zz_y_yy = buffer_1100_ddpd[4419];

    auto g_z_x_0_0_yz_zz_y_yz = buffer_1100_ddpd[4420];

    auto g_z_x_0_0_yz_zz_y_zz = buffer_1100_ddpd[4421];

    auto g_z_x_0_0_yz_zz_z_xx = buffer_1100_ddpd[4422];

    auto g_z_x_0_0_yz_zz_z_xy = buffer_1100_ddpd[4423];

    auto g_z_x_0_0_yz_zz_z_xz = buffer_1100_ddpd[4424];

    auto g_z_x_0_0_yz_zz_z_yy = buffer_1100_ddpd[4425];

    auto g_z_x_0_0_yz_zz_z_yz = buffer_1100_ddpd[4426];

    auto g_z_x_0_0_yz_zz_z_zz = buffer_1100_ddpd[4427];

    auto g_z_x_0_0_zz_xx_x_xx = buffer_1100_ddpd[4428];

    auto g_z_x_0_0_zz_xx_x_xy = buffer_1100_ddpd[4429];

    auto g_z_x_0_0_zz_xx_x_xz = buffer_1100_ddpd[4430];

    auto g_z_x_0_0_zz_xx_x_yy = buffer_1100_ddpd[4431];

    auto g_z_x_0_0_zz_xx_x_yz = buffer_1100_ddpd[4432];

    auto g_z_x_0_0_zz_xx_x_zz = buffer_1100_ddpd[4433];

    auto g_z_x_0_0_zz_xx_y_xx = buffer_1100_ddpd[4434];

    auto g_z_x_0_0_zz_xx_y_xy = buffer_1100_ddpd[4435];

    auto g_z_x_0_0_zz_xx_y_xz = buffer_1100_ddpd[4436];

    auto g_z_x_0_0_zz_xx_y_yy = buffer_1100_ddpd[4437];

    auto g_z_x_0_0_zz_xx_y_yz = buffer_1100_ddpd[4438];

    auto g_z_x_0_0_zz_xx_y_zz = buffer_1100_ddpd[4439];

    auto g_z_x_0_0_zz_xx_z_xx = buffer_1100_ddpd[4440];

    auto g_z_x_0_0_zz_xx_z_xy = buffer_1100_ddpd[4441];

    auto g_z_x_0_0_zz_xx_z_xz = buffer_1100_ddpd[4442];

    auto g_z_x_0_0_zz_xx_z_yy = buffer_1100_ddpd[4443];

    auto g_z_x_0_0_zz_xx_z_yz = buffer_1100_ddpd[4444];

    auto g_z_x_0_0_zz_xx_z_zz = buffer_1100_ddpd[4445];

    auto g_z_x_0_0_zz_xy_x_xx = buffer_1100_ddpd[4446];

    auto g_z_x_0_0_zz_xy_x_xy = buffer_1100_ddpd[4447];

    auto g_z_x_0_0_zz_xy_x_xz = buffer_1100_ddpd[4448];

    auto g_z_x_0_0_zz_xy_x_yy = buffer_1100_ddpd[4449];

    auto g_z_x_0_0_zz_xy_x_yz = buffer_1100_ddpd[4450];

    auto g_z_x_0_0_zz_xy_x_zz = buffer_1100_ddpd[4451];

    auto g_z_x_0_0_zz_xy_y_xx = buffer_1100_ddpd[4452];

    auto g_z_x_0_0_zz_xy_y_xy = buffer_1100_ddpd[4453];

    auto g_z_x_0_0_zz_xy_y_xz = buffer_1100_ddpd[4454];

    auto g_z_x_0_0_zz_xy_y_yy = buffer_1100_ddpd[4455];

    auto g_z_x_0_0_zz_xy_y_yz = buffer_1100_ddpd[4456];

    auto g_z_x_0_0_zz_xy_y_zz = buffer_1100_ddpd[4457];

    auto g_z_x_0_0_zz_xy_z_xx = buffer_1100_ddpd[4458];

    auto g_z_x_0_0_zz_xy_z_xy = buffer_1100_ddpd[4459];

    auto g_z_x_0_0_zz_xy_z_xz = buffer_1100_ddpd[4460];

    auto g_z_x_0_0_zz_xy_z_yy = buffer_1100_ddpd[4461];

    auto g_z_x_0_0_zz_xy_z_yz = buffer_1100_ddpd[4462];

    auto g_z_x_0_0_zz_xy_z_zz = buffer_1100_ddpd[4463];

    auto g_z_x_0_0_zz_xz_x_xx = buffer_1100_ddpd[4464];

    auto g_z_x_0_0_zz_xz_x_xy = buffer_1100_ddpd[4465];

    auto g_z_x_0_0_zz_xz_x_xz = buffer_1100_ddpd[4466];

    auto g_z_x_0_0_zz_xz_x_yy = buffer_1100_ddpd[4467];

    auto g_z_x_0_0_zz_xz_x_yz = buffer_1100_ddpd[4468];

    auto g_z_x_0_0_zz_xz_x_zz = buffer_1100_ddpd[4469];

    auto g_z_x_0_0_zz_xz_y_xx = buffer_1100_ddpd[4470];

    auto g_z_x_0_0_zz_xz_y_xy = buffer_1100_ddpd[4471];

    auto g_z_x_0_0_zz_xz_y_xz = buffer_1100_ddpd[4472];

    auto g_z_x_0_0_zz_xz_y_yy = buffer_1100_ddpd[4473];

    auto g_z_x_0_0_zz_xz_y_yz = buffer_1100_ddpd[4474];

    auto g_z_x_0_0_zz_xz_y_zz = buffer_1100_ddpd[4475];

    auto g_z_x_0_0_zz_xz_z_xx = buffer_1100_ddpd[4476];

    auto g_z_x_0_0_zz_xz_z_xy = buffer_1100_ddpd[4477];

    auto g_z_x_0_0_zz_xz_z_xz = buffer_1100_ddpd[4478];

    auto g_z_x_0_0_zz_xz_z_yy = buffer_1100_ddpd[4479];

    auto g_z_x_0_0_zz_xz_z_yz = buffer_1100_ddpd[4480];

    auto g_z_x_0_0_zz_xz_z_zz = buffer_1100_ddpd[4481];

    auto g_z_x_0_0_zz_yy_x_xx = buffer_1100_ddpd[4482];

    auto g_z_x_0_0_zz_yy_x_xy = buffer_1100_ddpd[4483];

    auto g_z_x_0_0_zz_yy_x_xz = buffer_1100_ddpd[4484];

    auto g_z_x_0_0_zz_yy_x_yy = buffer_1100_ddpd[4485];

    auto g_z_x_0_0_zz_yy_x_yz = buffer_1100_ddpd[4486];

    auto g_z_x_0_0_zz_yy_x_zz = buffer_1100_ddpd[4487];

    auto g_z_x_0_0_zz_yy_y_xx = buffer_1100_ddpd[4488];

    auto g_z_x_0_0_zz_yy_y_xy = buffer_1100_ddpd[4489];

    auto g_z_x_0_0_zz_yy_y_xz = buffer_1100_ddpd[4490];

    auto g_z_x_0_0_zz_yy_y_yy = buffer_1100_ddpd[4491];

    auto g_z_x_0_0_zz_yy_y_yz = buffer_1100_ddpd[4492];

    auto g_z_x_0_0_zz_yy_y_zz = buffer_1100_ddpd[4493];

    auto g_z_x_0_0_zz_yy_z_xx = buffer_1100_ddpd[4494];

    auto g_z_x_0_0_zz_yy_z_xy = buffer_1100_ddpd[4495];

    auto g_z_x_0_0_zz_yy_z_xz = buffer_1100_ddpd[4496];

    auto g_z_x_0_0_zz_yy_z_yy = buffer_1100_ddpd[4497];

    auto g_z_x_0_0_zz_yy_z_yz = buffer_1100_ddpd[4498];

    auto g_z_x_0_0_zz_yy_z_zz = buffer_1100_ddpd[4499];

    auto g_z_x_0_0_zz_yz_x_xx = buffer_1100_ddpd[4500];

    auto g_z_x_0_0_zz_yz_x_xy = buffer_1100_ddpd[4501];

    auto g_z_x_0_0_zz_yz_x_xz = buffer_1100_ddpd[4502];

    auto g_z_x_0_0_zz_yz_x_yy = buffer_1100_ddpd[4503];

    auto g_z_x_0_0_zz_yz_x_yz = buffer_1100_ddpd[4504];

    auto g_z_x_0_0_zz_yz_x_zz = buffer_1100_ddpd[4505];

    auto g_z_x_0_0_zz_yz_y_xx = buffer_1100_ddpd[4506];

    auto g_z_x_0_0_zz_yz_y_xy = buffer_1100_ddpd[4507];

    auto g_z_x_0_0_zz_yz_y_xz = buffer_1100_ddpd[4508];

    auto g_z_x_0_0_zz_yz_y_yy = buffer_1100_ddpd[4509];

    auto g_z_x_0_0_zz_yz_y_yz = buffer_1100_ddpd[4510];

    auto g_z_x_0_0_zz_yz_y_zz = buffer_1100_ddpd[4511];

    auto g_z_x_0_0_zz_yz_z_xx = buffer_1100_ddpd[4512];

    auto g_z_x_0_0_zz_yz_z_xy = buffer_1100_ddpd[4513];

    auto g_z_x_0_0_zz_yz_z_xz = buffer_1100_ddpd[4514];

    auto g_z_x_0_0_zz_yz_z_yy = buffer_1100_ddpd[4515];

    auto g_z_x_0_0_zz_yz_z_yz = buffer_1100_ddpd[4516];

    auto g_z_x_0_0_zz_yz_z_zz = buffer_1100_ddpd[4517];

    auto g_z_x_0_0_zz_zz_x_xx = buffer_1100_ddpd[4518];

    auto g_z_x_0_0_zz_zz_x_xy = buffer_1100_ddpd[4519];

    auto g_z_x_0_0_zz_zz_x_xz = buffer_1100_ddpd[4520];

    auto g_z_x_0_0_zz_zz_x_yy = buffer_1100_ddpd[4521];

    auto g_z_x_0_0_zz_zz_x_yz = buffer_1100_ddpd[4522];

    auto g_z_x_0_0_zz_zz_x_zz = buffer_1100_ddpd[4523];

    auto g_z_x_0_0_zz_zz_y_xx = buffer_1100_ddpd[4524];

    auto g_z_x_0_0_zz_zz_y_xy = buffer_1100_ddpd[4525];

    auto g_z_x_0_0_zz_zz_y_xz = buffer_1100_ddpd[4526];

    auto g_z_x_0_0_zz_zz_y_yy = buffer_1100_ddpd[4527];

    auto g_z_x_0_0_zz_zz_y_yz = buffer_1100_ddpd[4528];

    auto g_z_x_0_0_zz_zz_y_zz = buffer_1100_ddpd[4529];

    auto g_z_x_0_0_zz_zz_z_xx = buffer_1100_ddpd[4530];

    auto g_z_x_0_0_zz_zz_z_xy = buffer_1100_ddpd[4531];

    auto g_z_x_0_0_zz_zz_z_xz = buffer_1100_ddpd[4532];

    auto g_z_x_0_0_zz_zz_z_yy = buffer_1100_ddpd[4533];

    auto g_z_x_0_0_zz_zz_z_yz = buffer_1100_ddpd[4534];

    auto g_z_x_0_0_zz_zz_z_zz = buffer_1100_ddpd[4535];

    auto g_z_y_0_0_xx_xx_x_xx = buffer_1100_ddpd[4536];

    auto g_z_y_0_0_xx_xx_x_xy = buffer_1100_ddpd[4537];

    auto g_z_y_0_0_xx_xx_x_xz = buffer_1100_ddpd[4538];

    auto g_z_y_0_0_xx_xx_x_yy = buffer_1100_ddpd[4539];

    auto g_z_y_0_0_xx_xx_x_yz = buffer_1100_ddpd[4540];

    auto g_z_y_0_0_xx_xx_x_zz = buffer_1100_ddpd[4541];

    auto g_z_y_0_0_xx_xx_y_xx = buffer_1100_ddpd[4542];

    auto g_z_y_0_0_xx_xx_y_xy = buffer_1100_ddpd[4543];

    auto g_z_y_0_0_xx_xx_y_xz = buffer_1100_ddpd[4544];

    auto g_z_y_0_0_xx_xx_y_yy = buffer_1100_ddpd[4545];

    auto g_z_y_0_0_xx_xx_y_yz = buffer_1100_ddpd[4546];

    auto g_z_y_0_0_xx_xx_y_zz = buffer_1100_ddpd[4547];

    auto g_z_y_0_0_xx_xx_z_xx = buffer_1100_ddpd[4548];

    auto g_z_y_0_0_xx_xx_z_xy = buffer_1100_ddpd[4549];

    auto g_z_y_0_0_xx_xx_z_xz = buffer_1100_ddpd[4550];

    auto g_z_y_0_0_xx_xx_z_yy = buffer_1100_ddpd[4551];

    auto g_z_y_0_0_xx_xx_z_yz = buffer_1100_ddpd[4552];

    auto g_z_y_0_0_xx_xx_z_zz = buffer_1100_ddpd[4553];

    auto g_z_y_0_0_xx_xy_x_xx = buffer_1100_ddpd[4554];

    auto g_z_y_0_0_xx_xy_x_xy = buffer_1100_ddpd[4555];

    auto g_z_y_0_0_xx_xy_x_xz = buffer_1100_ddpd[4556];

    auto g_z_y_0_0_xx_xy_x_yy = buffer_1100_ddpd[4557];

    auto g_z_y_0_0_xx_xy_x_yz = buffer_1100_ddpd[4558];

    auto g_z_y_0_0_xx_xy_x_zz = buffer_1100_ddpd[4559];

    auto g_z_y_0_0_xx_xy_y_xx = buffer_1100_ddpd[4560];

    auto g_z_y_0_0_xx_xy_y_xy = buffer_1100_ddpd[4561];

    auto g_z_y_0_0_xx_xy_y_xz = buffer_1100_ddpd[4562];

    auto g_z_y_0_0_xx_xy_y_yy = buffer_1100_ddpd[4563];

    auto g_z_y_0_0_xx_xy_y_yz = buffer_1100_ddpd[4564];

    auto g_z_y_0_0_xx_xy_y_zz = buffer_1100_ddpd[4565];

    auto g_z_y_0_0_xx_xy_z_xx = buffer_1100_ddpd[4566];

    auto g_z_y_0_0_xx_xy_z_xy = buffer_1100_ddpd[4567];

    auto g_z_y_0_0_xx_xy_z_xz = buffer_1100_ddpd[4568];

    auto g_z_y_0_0_xx_xy_z_yy = buffer_1100_ddpd[4569];

    auto g_z_y_0_0_xx_xy_z_yz = buffer_1100_ddpd[4570];

    auto g_z_y_0_0_xx_xy_z_zz = buffer_1100_ddpd[4571];

    auto g_z_y_0_0_xx_xz_x_xx = buffer_1100_ddpd[4572];

    auto g_z_y_0_0_xx_xz_x_xy = buffer_1100_ddpd[4573];

    auto g_z_y_0_0_xx_xz_x_xz = buffer_1100_ddpd[4574];

    auto g_z_y_0_0_xx_xz_x_yy = buffer_1100_ddpd[4575];

    auto g_z_y_0_0_xx_xz_x_yz = buffer_1100_ddpd[4576];

    auto g_z_y_0_0_xx_xz_x_zz = buffer_1100_ddpd[4577];

    auto g_z_y_0_0_xx_xz_y_xx = buffer_1100_ddpd[4578];

    auto g_z_y_0_0_xx_xz_y_xy = buffer_1100_ddpd[4579];

    auto g_z_y_0_0_xx_xz_y_xz = buffer_1100_ddpd[4580];

    auto g_z_y_0_0_xx_xz_y_yy = buffer_1100_ddpd[4581];

    auto g_z_y_0_0_xx_xz_y_yz = buffer_1100_ddpd[4582];

    auto g_z_y_0_0_xx_xz_y_zz = buffer_1100_ddpd[4583];

    auto g_z_y_0_0_xx_xz_z_xx = buffer_1100_ddpd[4584];

    auto g_z_y_0_0_xx_xz_z_xy = buffer_1100_ddpd[4585];

    auto g_z_y_0_0_xx_xz_z_xz = buffer_1100_ddpd[4586];

    auto g_z_y_0_0_xx_xz_z_yy = buffer_1100_ddpd[4587];

    auto g_z_y_0_0_xx_xz_z_yz = buffer_1100_ddpd[4588];

    auto g_z_y_0_0_xx_xz_z_zz = buffer_1100_ddpd[4589];

    auto g_z_y_0_0_xx_yy_x_xx = buffer_1100_ddpd[4590];

    auto g_z_y_0_0_xx_yy_x_xy = buffer_1100_ddpd[4591];

    auto g_z_y_0_0_xx_yy_x_xz = buffer_1100_ddpd[4592];

    auto g_z_y_0_0_xx_yy_x_yy = buffer_1100_ddpd[4593];

    auto g_z_y_0_0_xx_yy_x_yz = buffer_1100_ddpd[4594];

    auto g_z_y_0_0_xx_yy_x_zz = buffer_1100_ddpd[4595];

    auto g_z_y_0_0_xx_yy_y_xx = buffer_1100_ddpd[4596];

    auto g_z_y_0_0_xx_yy_y_xy = buffer_1100_ddpd[4597];

    auto g_z_y_0_0_xx_yy_y_xz = buffer_1100_ddpd[4598];

    auto g_z_y_0_0_xx_yy_y_yy = buffer_1100_ddpd[4599];

    auto g_z_y_0_0_xx_yy_y_yz = buffer_1100_ddpd[4600];

    auto g_z_y_0_0_xx_yy_y_zz = buffer_1100_ddpd[4601];

    auto g_z_y_0_0_xx_yy_z_xx = buffer_1100_ddpd[4602];

    auto g_z_y_0_0_xx_yy_z_xy = buffer_1100_ddpd[4603];

    auto g_z_y_0_0_xx_yy_z_xz = buffer_1100_ddpd[4604];

    auto g_z_y_0_0_xx_yy_z_yy = buffer_1100_ddpd[4605];

    auto g_z_y_0_0_xx_yy_z_yz = buffer_1100_ddpd[4606];

    auto g_z_y_0_0_xx_yy_z_zz = buffer_1100_ddpd[4607];

    auto g_z_y_0_0_xx_yz_x_xx = buffer_1100_ddpd[4608];

    auto g_z_y_0_0_xx_yz_x_xy = buffer_1100_ddpd[4609];

    auto g_z_y_0_0_xx_yz_x_xz = buffer_1100_ddpd[4610];

    auto g_z_y_0_0_xx_yz_x_yy = buffer_1100_ddpd[4611];

    auto g_z_y_0_0_xx_yz_x_yz = buffer_1100_ddpd[4612];

    auto g_z_y_0_0_xx_yz_x_zz = buffer_1100_ddpd[4613];

    auto g_z_y_0_0_xx_yz_y_xx = buffer_1100_ddpd[4614];

    auto g_z_y_0_0_xx_yz_y_xy = buffer_1100_ddpd[4615];

    auto g_z_y_0_0_xx_yz_y_xz = buffer_1100_ddpd[4616];

    auto g_z_y_0_0_xx_yz_y_yy = buffer_1100_ddpd[4617];

    auto g_z_y_0_0_xx_yz_y_yz = buffer_1100_ddpd[4618];

    auto g_z_y_0_0_xx_yz_y_zz = buffer_1100_ddpd[4619];

    auto g_z_y_0_0_xx_yz_z_xx = buffer_1100_ddpd[4620];

    auto g_z_y_0_0_xx_yz_z_xy = buffer_1100_ddpd[4621];

    auto g_z_y_0_0_xx_yz_z_xz = buffer_1100_ddpd[4622];

    auto g_z_y_0_0_xx_yz_z_yy = buffer_1100_ddpd[4623];

    auto g_z_y_0_0_xx_yz_z_yz = buffer_1100_ddpd[4624];

    auto g_z_y_0_0_xx_yz_z_zz = buffer_1100_ddpd[4625];

    auto g_z_y_0_0_xx_zz_x_xx = buffer_1100_ddpd[4626];

    auto g_z_y_0_0_xx_zz_x_xy = buffer_1100_ddpd[4627];

    auto g_z_y_0_0_xx_zz_x_xz = buffer_1100_ddpd[4628];

    auto g_z_y_0_0_xx_zz_x_yy = buffer_1100_ddpd[4629];

    auto g_z_y_0_0_xx_zz_x_yz = buffer_1100_ddpd[4630];

    auto g_z_y_0_0_xx_zz_x_zz = buffer_1100_ddpd[4631];

    auto g_z_y_0_0_xx_zz_y_xx = buffer_1100_ddpd[4632];

    auto g_z_y_0_0_xx_zz_y_xy = buffer_1100_ddpd[4633];

    auto g_z_y_0_0_xx_zz_y_xz = buffer_1100_ddpd[4634];

    auto g_z_y_0_0_xx_zz_y_yy = buffer_1100_ddpd[4635];

    auto g_z_y_0_0_xx_zz_y_yz = buffer_1100_ddpd[4636];

    auto g_z_y_0_0_xx_zz_y_zz = buffer_1100_ddpd[4637];

    auto g_z_y_0_0_xx_zz_z_xx = buffer_1100_ddpd[4638];

    auto g_z_y_0_0_xx_zz_z_xy = buffer_1100_ddpd[4639];

    auto g_z_y_0_0_xx_zz_z_xz = buffer_1100_ddpd[4640];

    auto g_z_y_0_0_xx_zz_z_yy = buffer_1100_ddpd[4641];

    auto g_z_y_0_0_xx_zz_z_yz = buffer_1100_ddpd[4642];

    auto g_z_y_0_0_xx_zz_z_zz = buffer_1100_ddpd[4643];

    auto g_z_y_0_0_xy_xx_x_xx = buffer_1100_ddpd[4644];

    auto g_z_y_0_0_xy_xx_x_xy = buffer_1100_ddpd[4645];

    auto g_z_y_0_0_xy_xx_x_xz = buffer_1100_ddpd[4646];

    auto g_z_y_0_0_xy_xx_x_yy = buffer_1100_ddpd[4647];

    auto g_z_y_0_0_xy_xx_x_yz = buffer_1100_ddpd[4648];

    auto g_z_y_0_0_xy_xx_x_zz = buffer_1100_ddpd[4649];

    auto g_z_y_0_0_xy_xx_y_xx = buffer_1100_ddpd[4650];

    auto g_z_y_0_0_xy_xx_y_xy = buffer_1100_ddpd[4651];

    auto g_z_y_0_0_xy_xx_y_xz = buffer_1100_ddpd[4652];

    auto g_z_y_0_0_xy_xx_y_yy = buffer_1100_ddpd[4653];

    auto g_z_y_0_0_xy_xx_y_yz = buffer_1100_ddpd[4654];

    auto g_z_y_0_0_xy_xx_y_zz = buffer_1100_ddpd[4655];

    auto g_z_y_0_0_xy_xx_z_xx = buffer_1100_ddpd[4656];

    auto g_z_y_0_0_xy_xx_z_xy = buffer_1100_ddpd[4657];

    auto g_z_y_0_0_xy_xx_z_xz = buffer_1100_ddpd[4658];

    auto g_z_y_0_0_xy_xx_z_yy = buffer_1100_ddpd[4659];

    auto g_z_y_0_0_xy_xx_z_yz = buffer_1100_ddpd[4660];

    auto g_z_y_0_0_xy_xx_z_zz = buffer_1100_ddpd[4661];

    auto g_z_y_0_0_xy_xy_x_xx = buffer_1100_ddpd[4662];

    auto g_z_y_0_0_xy_xy_x_xy = buffer_1100_ddpd[4663];

    auto g_z_y_0_0_xy_xy_x_xz = buffer_1100_ddpd[4664];

    auto g_z_y_0_0_xy_xy_x_yy = buffer_1100_ddpd[4665];

    auto g_z_y_0_0_xy_xy_x_yz = buffer_1100_ddpd[4666];

    auto g_z_y_0_0_xy_xy_x_zz = buffer_1100_ddpd[4667];

    auto g_z_y_0_0_xy_xy_y_xx = buffer_1100_ddpd[4668];

    auto g_z_y_0_0_xy_xy_y_xy = buffer_1100_ddpd[4669];

    auto g_z_y_0_0_xy_xy_y_xz = buffer_1100_ddpd[4670];

    auto g_z_y_0_0_xy_xy_y_yy = buffer_1100_ddpd[4671];

    auto g_z_y_0_0_xy_xy_y_yz = buffer_1100_ddpd[4672];

    auto g_z_y_0_0_xy_xy_y_zz = buffer_1100_ddpd[4673];

    auto g_z_y_0_0_xy_xy_z_xx = buffer_1100_ddpd[4674];

    auto g_z_y_0_0_xy_xy_z_xy = buffer_1100_ddpd[4675];

    auto g_z_y_0_0_xy_xy_z_xz = buffer_1100_ddpd[4676];

    auto g_z_y_0_0_xy_xy_z_yy = buffer_1100_ddpd[4677];

    auto g_z_y_0_0_xy_xy_z_yz = buffer_1100_ddpd[4678];

    auto g_z_y_0_0_xy_xy_z_zz = buffer_1100_ddpd[4679];

    auto g_z_y_0_0_xy_xz_x_xx = buffer_1100_ddpd[4680];

    auto g_z_y_0_0_xy_xz_x_xy = buffer_1100_ddpd[4681];

    auto g_z_y_0_0_xy_xz_x_xz = buffer_1100_ddpd[4682];

    auto g_z_y_0_0_xy_xz_x_yy = buffer_1100_ddpd[4683];

    auto g_z_y_0_0_xy_xz_x_yz = buffer_1100_ddpd[4684];

    auto g_z_y_0_0_xy_xz_x_zz = buffer_1100_ddpd[4685];

    auto g_z_y_0_0_xy_xz_y_xx = buffer_1100_ddpd[4686];

    auto g_z_y_0_0_xy_xz_y_xy = buffer_1100_ddpd[4687];

    auto g_z_y_0_0_xy_xz_y_xz = buffer_1100_ddpd[4688];

    auto g_z_y_0_0_xy_xz_y_yy = buffer_1100_ddpd[4689];

    auto g_z_y_0_0_xy_xz_y_yz = buffer_1100_ddpd[4690];

    auto g_z_y_0_0_xy_xz_y_zz = buffer_1100_ddpd[4691];

    auto g_z_y_0_0_xy_xz_z_xx = buffer_1100_ddpd[4692];

    auto g_z_y_0_0_xy_xz_z_xy = buffer_1100_ddpd[4693];

    auto g_z_y_0_0_xy_xz_z_xz = buffer_1100_ddpd[4694];

    auto g_z_y_0_0_xy_xz_z_yy = buffer_1100_ddpd[4695];

    auto g_z_y_0_0_xy_xz_z_yz = buffer_1100_ddpd[4696];

    auto g_z_y_0_0_xy_xz_z_zz = buffer_1100_ddpd[4697];

    auto g_z_y_0_0_xy_yy_x_xx = buffer_1100_ddpd[4698];

    auto g_z_y_0_0_xy_yy_x_xy = buffer_1100_ddpd[4699];

    auto g_z_y_0_0_xy_yy_x_xz = buffer_1100_ddpd[4700];

    auto g_z_y_0_0_xy_yy_x_yy = buffer_1100_ddpd[4701];

    auto g_z_y_0_0_xy_yy_x_yz = buffer_1100_ddpd[4702];

    auto g_z_y_0_0_xy_yy_x_zz = buffer_1100_ddpd[4703];

    auto g_z_y_0_0_xy_yy_y_xx = buffer_1100_ddpd[4704];

    auto g_z_y_0_0_xy_yy_y_xy = buffer_1100_ddpd[4705];

    auto g_z_y_0_0_xy_yy_y_xz = buffer_1100_ddpd[4706];

    auto g_z_y_0_0_xy_yy_y_yy = buffer_1100_ddpd[4707];

    auto g_z_y_0_0_xy_yy_y_yz = buffer_1100_ddpd[4708];

    auto g_z_y_0_0_xy_yy_y_zz = buffer_1100_ddpd[4709];

    auto g_z_y_0_0_xy_yy_z_xx = buffer_1100_ddpd[4710];

    auto g_z_y_0_0_xy_yy_z_xy = buffer_1100_ddpd[4711];

    auto g_z_y_0_0_xy_yy_z_xz = buffer_1100_ddpd[4712];

    auto g_z_y_0_0_xy_yy_z_yy = buffer_1100_ddpd[4713];

    auto g_z_y_0_0_xy_yy_z_yz = buffer_1100_ddpd[4714];

    auto g_z_y_0_0_xy_yy_z_zz = buffer_1100_ddpd[4715];

    auto g_z_y_0_0_xy_yz_x_xx = buffer_1100_ddpd[4716];

    auto g_z_y_0_0_xy_yz_x_xy = buffer_1100_ddpd[4717];

    auto g_z_y_0_0_xy_yz_x_xz = buffer_1100_ddpd[4718];

    auto g_z_y_0_0_xy_yz_x_yy = buffer_1100_ddpd[4719];

    auto g_z_y_0_0_xy_yz_x_yz = buffer_1100_ddpd[4720];

    auto g_z_y_0_0_xy_yz_x_zz = buffer_1100_ddpd[4721];

    auto g_z_y_0_0_xy_yz_y_xx = buffer_1100_ddpd[4722];

    auto g_z_y_0_0_xy_yz_y_xy = buffer_1100_ddpd[4723];

    auto g_z_y_0_0_xy_yz_y_xz = buffer_1100_ddpd[4724];

    auto g_z_y_0_0_xy_yz_y_yy = buffer_1100_ddpd[4725];

    auto g_z_y_0_0_xy_yz_y_yz = buffer_1100_ddpd[4726];

    auto g_z_y_0_0_xy_yz_y_zz = buffer_1100_ddpd[4727];

    auto g_z_y_0_0_xy_yz_z_xx = buffer_1100_ddpd[4728];

    auto g_z_y_0_0_xy_yz_z_xy = buffer_1100_ddpd[4729];

    auto g_z_y_0_0_xy_yz_z_xz = buffer_1100_ddpd[4730];

    auto g_z_y_0_0_xy_yz_z_yy = buffer_1100_ddpd[4731];

    auto g_z_y_0_0_xy_yz_z_yz = buffer_1100_ddpd[4732];

    auto g_z_y_0_0_xy_yz_z_zz = buffer_1100_ddpd[4733];

    auto g_z_y_0_0_xy_zz_x_xx = buffer_1100_ddpd[4734];

    auto g_z_y_0_0_xy_zz_x_xy = buffer_1100_ddpd[4735];

    auto g_z_y_0_0_xy_zz_x_xz = buffer_1100_ddpd[4736];

    auto g_z_y_0_0_xy_zz_x_yy = buffer_1100_ddpd[4737];

    auto g_z_y_0_0_xy_zz_x_yz = buffer_1100_ddpd[4738];

    auto g_z_y_0_0_xy_zz_x_zz = buffer_1100_ddpd[4739];

    auto g_z_y_0_0_xy_zz_y_xx = buffer_1100_ddpd[4740];

    auto g_z_y_0_0_xy_zz_y_xy = buffer_1100_ddpd[4741];

    auto g_z_y_0_0_xy_zz_y_xz = buffer_1100_ddpd[4742];

    auto g_z_y_0_0_xy_zz_y_yy = buffer_1100_ddpd[4743];

    auto g_z_y_0_0_xy_zz_y_yz = buffer_1100_ddpd[4744];

    auto g_z_y_0_0_xy_zz_y_zz = buffer_1100_ddpd[4745];

    auto g_z_y_0_0_xy_zz_z_xx = buffer_1100_ddpd[4746];

    auto g_z_y_0_0_xy_zz_z_xy = buffer_1100_ddpd[4747];

    auto g_z_y_0_0_xy_zz_z_xz = buffer_1100_ddpd[4748];

    auto g_z_y_0_0_xy_zz_z_yy = buffer_1100_ddpd[4749];

    auto g_z_y_0_0_xy_zz_z_yz = buffer_1100_ddpd[4750];

    auto g_z_y_0_0_xy_zz_z_zz = buffer_1100_ddpd[4751];

    auto g_z_y_0_0_xz_xx_x_xx = buffer_1100_ddpd[4752];

    auto g_z_y_0_0_xz_xx_x_xy = buffer_1100_ddpd[4753];

    auto g_z_y_0_0_xz_xx_x_xz = buffer_1100_ddpd[4754];

    auto g_z_y_0_0_xz_xx_x_yy = buffer_1100_ddpd[4755];

    auto g_z_y_0_0_xz_xx_x_yz = buffer_1100_ddpd[4756];

    auto g_z_y_0_0_xz_xx_x_zz = buffer_1100_ddpd[4757];

    auto g_z_y_0_0_xz_xx_y_xx = buffer_1100_ddpd[4758];

    auto g_z_y_0_0_xz_xx_y_xy = buffer_1100_ddpd[4759];

    auto g_z_y_0_0_xz_xx_y_xz = buffer_1100_ddpd[4760];

    auto g_z_y_0_0_xz_xx_y_yy = buffer_1100_ddpd[4761];

    auto g_z_y_0_0_xz_xx_y_yz = buffer_1100_ddpd[4762];

    auto g_z_y_0_0_xz_xx_y_zz = buffer_1100_ddpd[4763];

    auto g_z_y_0_0_xz_xx_z_xx = buffer_1100_ddpd[4764];

    auto g_z_y_0_0_xz_xx_z_xy = buffer_1100_ddpd[4765];

    auto g_z_y_0_0_xz_xx_z_xz = buffer_1100_ddpd[4766];

    auto g_z_y_0_0_xz_xx_z_yy = buffer_1100_ddpd[4767];

    auto g_z_y_0_0_xz_xx_z_yz = buffer_1100_ddpd[4768];

    auto g_z_y_0_0_xz_xx_z_zz = buffer_1100_ddpd[4769];

    auto g_z_y_0_0_xz_xy_x_xx = buffer_1100_ddpd[4770];

    auto g_z_y_0_0_xz_xy_x_xy = buffer_1100_ddpd[4771];

    auto g_z_y_0_0_xz_xy_x_xz = buffer_1100_ddpd[4772];

    auto g_z_y_0_0_xz_xy_x_yy = buffer_1100_ddpd[4773];

    auto g_z_y_0_0_xz_xy_x_yz = buffer_1100_ddpd[4774];

    auto g_z_y_0_0_xz_xy_x_zz = buffer_1100_ddpd[4775];

    auto g_z_y_0_0_xz_xy_y_xx = buffer_1100_ddpd[4776];

    auto g_z_y_0_0_xz_xy_y_xy = buffer_1100_ddpd[4777];

    auto g_z_y_0_0_xz_xy_y_xz = buffer_1100_ddpd[4778];

    auto g_z_y_0_0_xz_xy_y_yy = buffer_1100_ddpd[4779];

    auto g_z_y_0_0_xz_xy_y_yz = buffer_1100_ddpd[4780];

    auto g_z_y_0_0_xz_xy_y_zz = buffer_1100_ddpd[4781];

    auto g_z_y_0_0_xz_xy_z_xx = buffer_1100_ddpd[4782];

    auto g_z_y_0_0_xz_xy_z_xy = buffer_1100_ddpd[4783];

    auto g_z_y_0_0_xz_xy_z_xz = buffer_1100_ddpd[4784];

    auto g_z_y_0_0_xz_xy_z_yy = buffer_1100_ddpd[4785];

    auto g_z_y_0_0_xz_xy_z_yz = buffer_1100_ddpd[4786];

    auto g_z_y_0_0_xz_xy_z_zz = buffer_1100_ddpd[4787];

    auto g_z_y_0_0_xz_xz_x_xx = buffer_1100_ddpd[4788];

    auto g_z_y_0_0_xz_xz_x_xy = buffer_1100_ddpd[4789];

    auto g_z_y_0_0_xz_xz_x_xz = buffer_1100_ddpd[4790];

    auto g_z_y_0_0_xz_xz_x_yy = buffer_1100_ddpd[4791];

    auto g_z_y_0_0_xz_xz_x_yz = buffer_1100_ddpd[4792];

    auto g_z_y_0_0_xz_xz_x_zz = buffer_1100_ddpd[4793];

    auto g_z_y_0_0_xz_xz_y_xx = buffer_1100_ddpd[4794];

    auto g_z_y_0_0_xz_xz_y_xy = buffer_1100_ddpd[4795];

    auto g_z_y_0_0_xz_xz_y_xz = buffer_1100_ddpd[4796];

    auto g_z_y_0_0_xz_xz_y_yy = buffer_1100_ddpd[4797];

    auto g_z_y_0_0_xz_xz_y_yz = buffer_1100_ddpd[4798];

    auto g_z_y_0_0_xz_xz_y_zz = buffer_1100_ddpd[4799];

    auto g_z_y_0_0_xz_xz_z_xx = buffer_1100_ddpd[4800];

    auto g_z_y_0_0_xz_xz_z_xy = buffer_1100_ddpd[4801];

    auto g_z_y_0_0_xz_xz_z_xz = buffer_1100_ddpd[4802];

    auto g_z_y_0_0_xz_xz_z_yy = buffer_1100_ddpd[4803];

    auto g_z_y_0_0_xz_xz_z_yz = buffer_1100_ddpd[4804];

    auto g_z_y_0_0_xz_xz_z_zz = buffer_1100_ddpd[4805];

    auto g_z_y_0_0_xz_yy_x_xx = buffer_1100_ddpd[4806];

    auto g_z_y_0_0_xz_yy_x_xy = buffer_1100_ddpd[4807];

    auto g_z_y_0_0_xz_yy_x_xz = buffer_1100_ddpd[4808];

    auto g_z_y_0_0_xz_yy_x_yy = buffer_1100_ddpd[4809];

    auto g_z_y_0_0_xz_yy_x_yz = buffer_1100_ddpd[4810];

    auto g_z_y_0_0_xz_yy_x_zz = buffer_1100_ddpd[4811];

    auto g_z_y_0_0_xz_yy_y_xx = buffer_1100_ddpd[4812];

    auto g_z_y_0_0_xz_yy_y_xy = buffer_1100_ddpd[4813];

    auto g_z_y_0_0_xz_yy_y_xz = buffer_1100_ddpd[4814];

    auto g_z_y_0_0_xz_yy_y_yy = buffer_1100_ddpd[4815];

    auto g_z_y_0_0_xz_yy_y_yz = buffer_1100_ddpd[4816];

    auto g_z_y_0_0_xz_yy_y_zz = buffer_1100_ddpd[4817];

    auto g_z_y_0_0_xz_yy_z_xx = buffer_1100_ddpd[4818];

    auto g_z_y_0_0_xz_yy_z_xy = buffer_1100_ddpd[4819];

    auto g_z_y_0_0_xz_yy_z_xz = buffer_1100_ddpd[4820];

    auto g_z_y_0_0_xz_yy_z_yy = buffer_1100_ddpd[4821];

    auto g_z_y_0_0_xz_yy_z_yz = buffer_1100_ddpd[4822];

    auto g_z_y_0_0_xz_yy_z_zz = buffer_1100_ddpd[4823];

    auto g_z_y_0_0_xz_yz_x_xx = buffer_1100_ddpd[4824];

    auto g_z_y_0_0_xz_yz_x_xy = buffer_1100_ddpd[4825];

    auto g_z_y_0_0_xz_yz_x_xz = buffer_1100_ddpd[4826];

    auto g_z_y_0_0_xz_yz_x_yy = buffer_1100_ddpd[4827];

    auto g_z_y_0_0_xz_yz_x_yz = buffer_1100_ddpd[4828];

    auto g_z_y_0_0_xz_yz_x_zz = buffer_1100_ddpd[4829];

    auto g_z_y_0_0_xz_yz_y_xx = buffer_1100_ddpd[4830];

    auto g_z_y_0_0_xz_yz_y_xy = buffer_1100_ddpd[4831];

    auto g_z_y_0_0_xz_yz_y_xz = buffer_1100_ddpd[4832];

    auto g_z_y_0_0_xz_yz_y_yy = buffer_1100_ddpd[4833];

    auto g_z_y_0_0_xz_yz_y_yz = buffer_1100_ddpd[4834];

    auto g_z_y_0_0_xz_yz_y_zz = buffer_1100_ddpd[4835];

    auto g_z_y_0_0_xz_yz_z_xx = buffer_1100_ddpd[4836];

    auto g_z_y_0_0_xz_yz_z_xy = buffer_1100_ddpd[4837];

    auto g_z_y_0_0_xz_yz_z_xz = buffer_1100_ddpd[4838];

    auto g_z_y_0_0_xz_yz_z_yy = buffer_1100_ddpd[4839];

    auto g_z_y_0_0_xz_yz_z_yz = buffer_1100_ddpd[4840];

    auto g_z_y_0_0_xz_yz_z_zz = buffer_1100_ddpd[4841];

    auto g_z_y_0_0_xz_zz_x_xx = buffer_1100_ddpd[4842];

    auto g_z_y_0_0_xz_zz_x_xy = buffer_1100_ddpd[4843];

    auto g_z_y_0_0_xz_zz_x_xz = buffer_1100_ddpd[4844];

    auto g_z_y_0_0_xz_zz_x_yy = buffer_1100_ddpd[4845];

    auto g_z_y_0_0_xz_zz_x_yz = buffer_1100_ddpd[4846];

    auto g_z_y_0_0_xz_zz_x_zz = buffer_1100_ddpd[4847];

    auto g_z_y_0_0_xz_zz_y_xx = buffer_1100_ddpd[4848];

    auto g_z_y_0_0_xz_zz_y_xy = buffer_1100_ddpd[4849];

    auto g_z_y_0_0_xz_zz_y_xz = buffer_1100_ddpd[4850];

    auto g_z_y_0_0_xz_zz_y_yy = buffer_1100_ddpd[4851];

    auto g_z_y_0_0_xz_zz_y_yz = buffer_1100_ddpd[4852];

    auto g_z_y_0_0_xz_zz_y_zz = buffer_1100_ddpd[4853];

    auto g_z_y_0_0_xz_zz_z_xx = buffer_1100_ddpd[4854];

    auto g_z_y_0_0_xz_zz_z_xy = buffer_1100_ddpd[4855];

    auto g_z_y_0_0_xz_zz_z_xz = buffer_1100_ddpd[4856];

    auto g_z_y_0_0_xz_zz_z_yy = buffer_1100_ddpd[4857];

    auto g_z_y_0_0_xz_zz_z_yz = buffer_1100_ddpd[4858];

    auto g_z_y_0_0_xz_zz_z_zz = buffer_1100_ddpd[4859];

    auto g_z_y_0_0_yy_xx_x_xx = buffer_1100_ddpd[4860];

    auto g_z_y_0_0_yy_xx_x_xy = buffer_1100_ddpd[4861];

    auto g_z_y_0_0_yy_xx_x_xz = buffer_1100_ddpd[4862];

    auto g_z_y_0_0_yy_xx_x_yy = buffer_1100_ddpd[4863];

    auto g_z_y_0_0_yy_xx_x_yz = buffer_1100_ddpd[4864];

    auto g_z_y_0_0_yy_xx_x_zz = buffer_1100_ddpd[4865];

    auto g_z_y_0_0_yy_xx_y_xx = buffer_1100_ddpd[4866];

    auto g_z_y_0_0_yy_xx_y_xy = buffer_1100_ddpd[4867];

    auto g_z_y_0_0_yy_xx_y_xz = buffer_1100_ddpd[4868];

    auto g_z_y_0_0_yy_xx_y_yy = buffer_1100_ddpd[4869];

    auto g_z_y_0_0_yy_xx_y_yz = buffer_1100_ddpd[4870];

    auto g_z_y_0_0_yy_xx_y_zz = buffer_1100_ddpd[4871];

    auto g_z_y_0_0_yy_xx_z_xx = buffer_1100_ddpd[4872];

    auto g_z_y_0_0_yy_xx_z_xy = buffer_1100_ddpd[4873];

    auto g_z_y_0_0_yy_xx_z_xz = buffer_1100_ddpd[4874];

    auto g_z_y_0_0_yy_xx_z_yy = buffer_1100_ddpd[4875];

    auto g_z_y_0_0_yy_xx_z_yz = buffer_1100_ddpd[4876];

    auto g_z_y_0_0_yy_xx_z_zz = buffer_1100_ddpd[4877];

    auto g_z_y_0_0_yy_xy_x_xx = buffer_1100_ddpd[4878];

    auto g_z_y_0_0_yy_xy_x_xy = buffer_1100_ddpd[4879];

    auto g_z_y_0_0_yy_xy_x_xz = buffer_1100_ddpd[4880];

    auto g_z_y_0_0_yy_xy_x_yy = buffer_1100_ddpd[4881];

    auto g_z_y_0_0_yy_xy_x_yz = buffer_1100_ddpd[4882];

    auto g_z_y_0_0_yy_xy_x_zz = buffer_1100_ddpd[4883];

    auto g_z_y_0_0_yy_xy_y_xx = buffer_1100_ddpd[4884];

    auto g_z_y_0_0_yy_xy_y_xy = buffer_1100_ddpd[4885];

    auto g_z_y_0_0_yy_xy_y_xz = buffer_1100_ddpd[4886];

    auto g_z_y_0_0_yy_xy_y_yy = buffer_1100_ddpd[4887];

    auto g_z_y_0_0_yy_xy_y_yz = buffer_1100_ddpd[4888];

    auto g_z_y_0_0_yy_xy_y_zz = buffer_1100_ddpd[4889];

    auto g_z_y_0_0_yy_xy_z_xx = buffer_1100_ddpd[4890];

    auto g_z_y_0_0_yy_xy_z_xy = buffer_1100_ddpd[4891];

    auto g_z_y_0_0_yy_xy_z_xz = buffer_1100_ddpd[4892];

    auto g_z_y_0_0_yy_xy_z_yy = buffer_1100_ddpd[4893];

    auto g_z_y_0_0_yy_xy_z_yz = buffer_1100_ddpd[4894];

    auto g_z_y_0_0_yy_xy_z_zz = buffer_1100_ddpd[4895];

    auto g_z_y_0_0_yy_xz_x_xx = buffer_1100_ddpd[4896];

    auto g_z_y_0_0_yy_xz_x_xy = buffer_1100_ddpd[4897];

    auto g_z_y_0_0_yy_xz_x_xz = buffer_1100_ddpd[4898];

    auto g_z_y_0_0_yy_xz_x_yy = buffer_1100_ddpd[4899];

    auto g_z_y_0_0_yy_xz_x_yz = buffer_1100_ddpd[4900];

    auto g_z_y_0_0_yy_xz_x_zz = buffer_1100_ddpd[4901];

    auto g_z_y_0_0_yy_xz_y_xx = buffer_1100_ddpd[4902];

    auto g_z_y_0_0_yy_xz_y_xy = buffer_1100_ddpd[4903];

    auto g_z_y_0_0_yy_xz_y_xz = buffer_1100_ddpd[4904];

    auto g_z_y_0_0_yy_xz_y_yy = buffer_1100_ddpd[4905];

    auto g_z_y_0_0_yy_xz_y_yz = buffer_1100_ddpd[4906];

    auto g_z_y_0_0_yy_xz_y_zz = buffer_1100_ddpd[4907];

    auto g_z_y_0_0_yy_xz_z_xx = buffer_1100_ddpd[4908];

    auto g_z_y_0_0_yy_xz_z_xy = buffer_1100_ddpd[4909];

    auto g_z_y_0_0_yy_xz_z_xz = buffer_1100_ddpd[4910];

    auto g_z_y_0_0_yy_xz_z_yy = buffer_1100_ddpd[4911];

    auto g_z_y_0_0_yy_xz_z_yz = buffer_1100_ddpd[4912];

    auto g_z_y_0_0_yy_xz_z_zz = buffer_1100_ddpd[4913];

    auto g_z_y_0_0_yy_yy_x_xx = buffer_1100_ddpd[4914];

    auto g_z_y_0_0_yy_yy_x_xy = buffer_1100_ddpd[4915];

    auto g_z_y_0_0_yy_yy_x_xz = buffer_1100_ddpd[4916];

    auto g_z_y_0_0_yy_yy_x_yy = buffer_1100_ddpd[4917];

    auto g_z_y_0_0_yy_yy_x_yz = buffer_1100_ddpd[4918];

    auto g_z_y_0_0_yy_yy_x_zz = buffer_1100_ddpd[4919];

    auto g_z_y_0_0_yy_yy_y_xx = buffer_1100_ddpd[4920];

    auto g_z_y_0_0_yy_yy_y_xy = buffer_1100_ddpd[4921];

    auto g_z_y_0_0_yy_yy_y_xz = buffer_1100_ddpd[4922];

    auto g_z_y_0_0_yy_yy_y_yy = buffer_1100_ddpd[4923];

    auto g_z_y_0_0_yy_yy_y_yz = buffer_1100_ddpd[4924];

    auto g_z_y_0_0_yy_yy_y_zz = buffer_1100_ddpd[4925];

    auto g_z_y_0_0_yy_yy_z_xx = buffer_1100_ddpd[4926];

    auto g_z_y_0_0_yy_yy_z_xy = buffer_1100_ddpd[4927];

    auto g_z_y_0_0_yy_yy_z_xz = buffer_1100_ddpd[4928];

    auto g_z_y_0_0_yy_yy_z_yy = buffer_1100_ddpd[4929];

    auto g_z_y_0_0_yy_yy_z_yz = buffer_1100_ddpd[4930];

    auto g_z_y_0_0_yy_yy_z_zz = buffer_1100_ddpd[4931];

    auto g_z_y_0_0_yy_yz_x_xx = buffer_1100_ddpd[4932];

    auto g_z_y_0_0_yy_yz_x_xy = buffer_1100_ddpd[4933];

    auto g_z_y_0_0_yy_yz_x_xz = buffer_1100_ddpd[4934];

    auto g_z_y_0_0_yy_yz_x_yy = buffer_1100_ddpd[4935];

    auto g_z_y_0_0_yy_yz_x_yz = buffer_1100_ddpd[4936];

    auto g_z_y_0_0_yy_yz_x_zz = buffer_1100_ddpd[4937];

    auto g_z_y_0_0_yy_yz_y_xx = buffer_1100_ddpd[4938];

    auto g_z_y_0_0_yy_yz_y_xy = buffer_1100_ddpd[4939];

    auto g_z_y_0_0_yy_yz_y_xz = buffer_1100_ddpd[4940];

    auto g_z_y_0_0_yy_yz_y_yy = buffer_1100_ddpd[4941];

    auto g_z_y_0_0_yy_yz_y_yz = buffer_1100_ddpd[4942];

    auto g_z_y_0_0_yy_yz_y_zz = buffer_1100_ddpd[4943];

    auto g_z_y_0_0_yy_yz_z_xx = buffer_1100_ddpd[4944];

    auto g_z_y_0_0_yy_yz_z_xy = buffer_1100_ddpd[4945];

    auto g_z_y_0_0_yy_yz_z_xz = buffer_1100_ddpd[4946];

    auto g_z_y_0_0_yy_yz_z_yy = buffer_1100_ddpd[4947];

    auto g_z_y_0_0_yy_yz_z_yz = buffer_1100_ddpd[4948];

    auto g_z_y_0_0_yy_yz_z_zz = buffer_1100_ddpd[4949];

    auto g_z_y_0_0_yy_zz_x_xx = buffer_1100_ddpd[4950];

    auto g_z_y_0_0_yy_zz_x_xy = buffer_1100_ddpd[4951];

    auto g_z_y_0_0_yy_zz_x_xz = buffer_1100_ddpd[4952];

    auto g_z_y_0_0_yy_zz_x_yy = buffer_1100_ddpd[4953];

    auto g_z_y_0_0_yy_zz_x_yz = buffer_1100_ddpd[4954];

    auto g_z_y_0_0_yy_zz_x_zz = buffer_1100_ddpd[4955];

    auto g_z_y_0_0_yy_zz_y_xx = buffer_1100_ddpd[4956];

    auto g_z_y_0_0_yy_zz_y_xy = buffer_1100_ddpd[4957];

    auto g_z_y_0_0_yy_zz_y_xz = buffer_1100_ddpd[4958];

    auto g_z_y_0_0_yy_zz_y_yy = buffer_1100_ddpd[4959];

    auto g_z_y_0_0_yy_zz_y_yz = buffer_1100_ddpd[4960];

    auto g_z_y_0_0_yy_zz_y_zz = buffer_1100_ddpd[4961];

    auto g_z_y_0_0_yy_zz_z_xx = buffer_1100_ddpd[4962];

    auto g_z_y_0_0_yy_zz_z_xy = buffer_1100_ddpd[4963];

    auto g_z_y_0_0_yy_zz_z_xz = buffer_1100_ddpd[4964];

    auto g_z_y_0_0_yy_zz_z_yy = buffer_1100_ddpd[4965];

    auto g_z_y_0_0_yy_zz_z_yz = buffer_1100_ddpd[4966];

    auto g_z_y_0_0_yy_zz_z_zz = buffer_1100_ddpd[4967];

    auto g_z_y_0_0_yz_xx_x_xx = buffer_1100_ddpd[4968];

    auto g_z_y_0_0_yz_xx_x_xy = buffer_1100_ddpd[4969];

    auto g_z_y_0_0_yz_xx_x_xz = buffer_1100_ddpd[4970];

    auto g_z_y_0_0_yz_xx_x_yy = buffer_1100_ddpd[4971];

    auto g_z_y_0_0_yz_xx_x_yz = buffer_1100_ddpd[4972];

    auto g_z_y_0_0_yz_xx_x_zz = buffer_1100_ddpd[4973];

    auto g_z_y_0_0_yz_xx_y_xx = buffer_1100_ddpd[4974];

    auto g_z_y_0_0_yz_xx_y_xy = buffer_1100_ddpd[4975];

    auto g_z_y_0_0_yz_xx_y_xz = buffer_1100_ddpd[4976];

    auto g_z_y_0_0_yz_xx_y_yy = buffer_1100_ddpd[4977];

    auto g_z_y_0_0_yz_xx_y_yz = buffer_1100_ddpd[4978];

    auto g_z_y_0_0_yz_xx_y_zz = buffer_1100_ddpd[4979];

    auto g_z_y_0_0_yz_xx_z_xx = buffer_1100_ddpd[4980];

    auto g_z_y_0_0_yz_xx_z_xy = buffer_1100_ddpd[4981];

    auto g_z_y_0_0_yz_xx_z_xz = buffer_1100_ddpd[4982];

    auto g_z_y_0_0_yz_xx_z_yy = buffer_1100_ddpd[4983];

    auto g_z_y_0_0_yz_xx_z_yz = buffer_1100_ddpd[4984];

    auto g_z_y_0_0_yz_xx_z_zz = buffer_1100_ddpd[4985];

    auto g_z_y_0_0_yz_xy_x_xx = buffer_1100_ddpd[4986];

    auto g_z_y_0_0_yz_xy_x_xy = buffer_1100_ddpd[4987];

    auto g_z_y_0_0_yz_xy_x_xz = buffer_1100_ddpd[4988];

    auto g_z_y_0_0_yz_xy_x_yy = buffer_1100_ddpd[4989];

    auto g_z_y_0_0_yz_xy_x_yz = buffer_1100_ddpd[4990];

    auto g_z_y_0_0_yz_xy_x_zz = buffer_1100_ddpd[4991];

    auto g_z_y_0_0_yz_xy_y_xx = buffer_1100_ddpd[4992];

    auto g_z_y_0_0_yz_xy_y_xy = buffer_1100_ddpd[4993];

    auto g_z_y_0_0_yz_xy_y_xz = buffer_1100_ddpd[4994];

    auto g_z_y_0_0_yz_xy_y_yy = buffer_1100_ddpd[4995];

    auto g_z_y_0_0_yz_xy_y_yz = buffer_1100_ddpd[4996];

    auto g_z_y_0_0_yz_xy_y_zz = buffer_1100_ddpd[4997];

    auto g_z_y_0_0_yz_xy_z_xx = buffer_1100_ddpd[4998];

    auto g_z_y_0_0_yz_xy_z_xy = buffer_1100_ddpd[4999];

    auto g_z_y_0_0_yz_xy_z_xz = buffer_1100_ddpd[5000];

    auto g_z_y_0_0_yz_xy_z_yy = buffer_1100_ddpd[5001];

    auto g_z_y_0_0_yz_xy_z_yz = buffer_1100_ddpd[5002];

    auto g_z_y_0_0_yz_xy_z_zz = buffer_1100_ddpd[5003];

    auto g_z_y_0_0_yz_xz_x_xx = buffer_1100_ddpd[5004];

    auto g_z_y_0_0_yz_xz_x_xy = buffer_1100_ddpd[5005];

    auto g_z_y_0_0_yz_xz_x_xz = buffer_1100_ddpd[5006];

    auto g_z_y_0_0_yz_xz_x_yy = buffer_1100_ddpd[5007];

    auto g_z_y_0_0_yz_xz_x_yz = buffer_1100_ddpd[5008];

    auto g_z_y_0_0_yz_xz_x_zz = buffer_1100_ddpd[5009];

    auto g_z_y_0_0_yz_xz_y_xx = buffer_1100_ddpd[5010];

    auto g_z_y_0_0_yz_xz_y_xy = buffer_1100_ddpd[5011];

    auto g_z_y_0_0_yz_xz_y_xz = buffer_1100_ddpd[5012];

    auto g_z_y_0_0_yz_xz_y_yy = buffer_1100_ddpd[5013];

    auto g_z_y_0_0_yz_xz_y_yz = buffer_1100_ddpd[5014];

    auto g_z_y_0_0_yz_xz_y_zz = buffer_1100_ddpd[5015];

    auto g_z_y_0_0_yz_xz_z_xx = buffer_1100_ddpd[5016];

    auto g_z_y_0_0_yz_xz_z_xy = buffer_1100_ddpd[5017];

    auto g_z_y_0_0_yz_xz_z_xz = buffer_1100_ddpd[5018];

    auto g_z_y_0_0_yz_xz_z_yy = buffer_1100_ddpd[5019];

    auto g_z_y_0_0_yz_xz_z_yz = buffer_1100_ddpd[5020];

    auto g_z_y_0_0_yz_xz_z_zz = buffer_1100_ddpd[5021];

    auto g_z_y_0_0_yz_yy_x_xx = buffer_1100_ddpd[5022];

    auto g_z_y_0_0_yz_yy_x_xy = buffer_1100_ddpd[5023];

    auto g_z_y_0_0_yz_yy_x_xz = buffer_1100_ddpd[5024];

    auto g_z_y_0_0_yz_yy_x_yy = buffer_1100_ddpd[5025];

    auto g_z_y_0_0_yz_yy_x_yz = buffer_1100_ddpd[5026];

    auto g_z_y_0_0_yz_yy_x_zz = buffer_1100_ddpd[5027];

    auto g_z_y_0_0_yz_yy_y_xx = buffer_1100_ddpd[5028];

    auto g_z_y_0_0_yz_yy_y_xy = buffer_1100_ddpd[5029];

    auto g_z_y_0_0_yz_yy_y_xz = buffer_1100_ddpd[5030];

    auto g_z_y_0_0_yz_yy_y_yy = buffer_1100_ddpd[5031];

    auto g_z_y_0_0_yz_yy_y_yz = buffer_1100_ddpd[5032];

    auto g_z_y_0_0_yz_yy_y_zz = buffer_1100_ddpd[5033];

    auto g_z_y_0_0_yz_yy_z_xx = buffer_1100_ddpd[5034];

    auto g_z_y_0_0_yz_yy_z_xy = buffer_1100_ddpd[5035];

    auto g_z_y_0_0_yz_yy_z_xz = buffer_1100_ddpd[5036];

    auto g_z_y_0_0_yz_yy_z_yy = buffer_1100_ddpd[5037];

    auto g_z_y_0_0_yz_yy_z_yz = buffer_1100_ddpd[5038];

    auto g_z_y_0_0_yz_yy_z_zz = buffer_1100_ddpd[5039];

    auto g_z_y_0_0_yz_yz_x_xx = buffer_1100_ddpd[5040];

    auto g_z_y_0_0_yz_yz_x_xy = buffer_1100_ddpd[5041];

    auto g_z_y_0_0_yz_yz_x_xz = buffer_1100_ddpd[5042];

    auto g_z_y_0_0_yz_yz_x_yy = buffer_1100_ddpd[5043];

    auto g_z_y_0_0_yz_yz_x_yz = buffer_1100_ddpd[5044];

    auto g_z_y_0_0_yz_yz_x_zz = buffer_1100_ddpd[5045];

    auto g_z_y_0_0_yz_yz_y_xx = buffer_1100_ddpd[5046];

    auto g_z_y_0_0_yz_yz_y_xy = buffer_1100_ddpd[5047];

    auto g_z_y_0_0_yz_yz_y_xz = buffer_1100_ddpd[5048];

    auto g_z_y_0_0_yz_yz_y_yy = buffer_1100_ddpd[5049];

    auto g_z_y_0_0_yz_yz_y_yz = buffer_1100_ddpd[5050];

    auto g_z_y_0_0_yz_yz_y_zz = buffer_1100_ddpd[5051];

    auto g_z_y_0_0_yz_yz_z_xx = buffer_1100_ddpd[5052];

    auto g_z_y_0_0_yz_yz_z_xy = buffer_1100_ddpd[5053];

    auto g_z_y_0_0_yz_yz_z_xz = buffer_1100_ddpd[5054];

    auto g_z_y_0_0_yz_yz_z_yy = buffer_1100_ddpd[5055];

    auto g_z_y_0_0_yz_yz_z_yz = buffer_1100_ddpd[5056];

    auto g_z_y_0_0_yz_yz_z_zz = buffer_1100_ddpd[5057];

    auto g_z_y_0_0_yz_zz_x_xx = buffer_1100_ddpd[5058];

    auto g_z_y_0_0_yz_zz_x_xy = buffer_1100_ddpd[5059];

    auto g_z_y_0_0_yz_zz_x_xz = buffer_1100_ddpd[5060];

    auto g_z_y_0_0_yz_zz_x_yy = buffer_1100_ddpd[5061];

    auto g_z_y_0_0_yz_zz_x_yz = buffer_1100_ddpd[5062];

    auto g_z_y_0_0_yz_zz_x_zz = buffer_1100_ddpd[5063];

    auto g_z_y_0_0_yz_zz_y_xx = buffer_1100_ddpd[5064];

    auto g_z_y_0_0_yz_zz_y_xy = buffer_1100_ddpd[5065];

    auto g_z_y_0_0_yz_zz_y_xz = buffer_1100_ddpd[5066];

    auto g_z_y_0_0_yz_zz_y_yy = buffer_1100_ddpd[5067];

    auto g_z_y_0_0_yz_zz_y_yz = buffer_1100_ddpd[5068];

    auto g_z_y_0_0_yz_zz_y_zz = buffer_1100_ddpd[5069];

    auto g_z_y_0_0_yz_zz_z_xx = buffer_1100_ddpd[5070];

    auto g_z_y_0_0_yz_zz_z_xy = buffer_1100_ddpd[5071];

    auto g_z_y_0_0_yz_zz_z_xz = buffer_1100_ddpd[5072];

    auto g_z_y_0_0_yz_zz_z_yy = buffer_1100_ddpd[5073];

    auto g_z_y_0_0_yz_zz_z_yz = buffer_1100_ddpd[5074];

    auto g_z_y_0_0_yz_zz_z_zz = buffer_1100_ddpd[5075];

    auto g_z_y_0_0_zz_xx_x_xx = buffer_1100_ddpd[5076];

    auto g_z_y_0_0_zz_xx_x_xy = buffer_1100_ddpd[5077];

    auto g_z_y_0_0_zz_xx_x_xz = buffer_1100_ddpd[5078];

    auto g_z_y_0_0_zz_xx_x_yy = buffer_1100_ddpd[5079];

    auto g_z_y_0_0_zz_xx_x_yz = buffer_1100_ddpd[5080];

    auto g_z_y_0_0_zz_xx_x_zz = buffer_1100_ddpd[5081];

    auto g_z_y_0_0_zz_xx_y_xx = buffer_1100_ddpd[5082];

    auto g_z_y_0_0_zz_xx_y_xy = buffer_1100_ddpd[5083];

    auto g_z_y_0_0_zz_xx_y_xz = buffer_1100_ddpd[5084];

    auto g_z_y_0_0_zz_xx_y_yy = buffer_1100_ddpd[5085];

    auto g_z_y_0_0_zz_xx_y_yz = buffer_1100_ddpd[5086];

    auto g_z_y_0_0_zz_xx_y_zz = buffer_1100_ddpd[5087];

    auto g_z_y_0_0_zz_xx_z_xx = buffer_1100_ddpd[5088];

    auto g_z_y_0_0_zz_xx_z_xy = buffer_1100_ddpd[5089];

    auto g_z_y_0_0_zz_xx_z_xz = buffer_1100_ddpd[5090];

    auto g_z_y_0_0_zz_xx_z_yy = buffer_1100_ddpd[5091];

    auto g_z_y_0_0_zz_xx_z_yz = buffer_1100_ddpd[5092];

    auto g_z_y_0_0_zz_xx_z_zz = buffer_1100_ddpd[5093];

    auto g_z_y_0_0_zz_xy_x_xx = buffer_1100_ddpd[5094];

    auto g_z_y_0_0_zz_xy_x_xy = buffer_1100_ddpd[5095];

    auto g_z_y_0_0_zz_xy_x_xz = buffer_1100_ddpd[5096];

    auto g_z_y_0_0_zz_xy_x_yy = buffer_1100_ddpd[5097];

    auto g_z_y_0_0_zz_xy_x_yz = buffer_1100_ddpd[5098];

    auto g_z_y_0_0_zz_xy_x_zz = buffer_1100_ddpd[5099];

    auto g_z_y_0_0_zz_xy_y_xx = buffer_1100_ddpd[5100];

    auto g_z_y_0_0_zz_xy_y_xy = buffer_1100_ddpd[5101];

    auto g_z_y_0_0_zz_xy_y_xz = buffer_1100_ddpd[5102];

    auto g_z_y_0_0_zz_xy_y_yy = buffer_1100_ddpd[5103];

    auto g_z_y_0_0_zz_xy_y_yz = buffer_1100_ddpd[5104];

    auto g_z_y_0_0_zz_xy_y_zz = buffer_1100_ddpd[5105];

    auto g_z_y_0_0_zz_xy_z_xx = buffer_1100_ddpd[5106];

    auto g_z_y_0_0_zz_xy_z_xy = buffer_1100_ddpd[5107];

    auto g_z_y_0_0_zz_xy_z_xz = buffer_1100_ddpd[5108];

    auto g_z_y_0_0_zz_xy_z_yy = buffer_1100_ddpd[5109];

    auto g_z_y_0_0_zz_xy_z_yz = buffer_1100_ddpd[5110];

    auto g_z_y_0_0_zz_xy_z_zz = buffer_1100_ddpd[5111];

    auto g_z_y_0_0_zz_xz_x_xx = buffer_1100_ddpd[5112];

    auto g_z_y_0_0_zz_xz_x_xy = buffer_1100_ddpd[5113];

    auto g_z_y_0_0_zz_xz_x_xz = buffer_1100_ddpd[5114];

    auto g_z_y_0_0_zz_xz_x_yy = buffer_1100_ddpd[5115];

    auto g_z_y_0_0_zz_xz_x_yz = buffer_1100_ddpd[5116];

    auto g_z_y_0_0_zz_xz_x_zz = buffer_1100_ddpd[5117];

    auto g_z_y_0_0_zz_xz_y_xx = buffer_1100_ddpd[5118];

    auto g_z_y_0_0_zz_xz_y_xy = buffer_1100_ddpd[5119];

    auto g_z_y_0_0_zz_xz_y_xz = buffer_1100_ddpd[5120];

    auto g_z_y_0_0_zz_xz_y_yy = buffer_1100_ddpd[5121];

    auto g_z_y_0_0_zz_xz_y_yz = buffer_1100_ddpd[5122];

    auto g_z_y_0_0_zz_xz_y_zz = buffer_1100_ddpd[5123];

    auto g_z_y_0_0_zz_xz_z_xx = buffer_1100_ddpd[5124];

    auto g_z_y_0_0_zz_xz_z_xy = buffer_1100_ddpd[5125];

    auto g_z_y_0_0_zz_xz_z_xz = buffer_1100_ddpd[5126];

    auto g_z_y_0_0_zz_xz_z_yy = buffer_1100_ddpd[5127];

    auto g_z_y_0_0_zz_xz_z_yz = buffer_1100_ddpd[5128];

    auto g_z_y_0_0_zz_xz_z_zz = buffer_1100_ddpd[5129];

    auto g_z_y_0_0_zz_yy_x_xx = buffer_1100_ddpd[5130];

    auto g_z_y_0_0_zz_yy_x_xy = buffer_1100_ddpd[5131];

    auto g_z_y_0_0_zz_yy_x_xz = buffer_1100_ddpd[5132];

    auto g_z_y_0_0_zz_yy_x_yy = buffer_1100_ddpd[5133];

    auto g_z_y_0_0_zz_yy_x_yz = buffer_1100_ddpd[5134];

    auto g_z_y_0_0_zz_yy_x_zz = buffer_1100_ddpd[5135];

    auto g_z_y_0_0_zz_yy_y_xx = buffer_1100_ddpd[5136];

    auto g_z_y_0_0_zz_yy_y_xy = buffer_1100_ddpd[5137];

    auto g_z_y_0_0_zz_yy_y_xz = buffer_1100_ddpd[5138];

    auto g_z_y_0_0_zz_yy_y_yy = buffer_1100_ddpd[5139];

    auto g_z_y_0_0_zz_yy_y_yz = buffer_1100_ddpd[5140];

    auto g_z_y_0_0_zz_yy_y_zz = buffer_1100_ddpd[5141];

    auto g_z_y_0_0_zz_yy_z_xx = buffer_1100_ddpd[5142];

    auto g_z_y_0_0_zz_yy_z_xy = buffer_1100_ddpd[5143];

    auto g_z_y_0_0_zz_yy_z_xz = buffer_1100_ddpd[5144];

    auto g_z_y_0_0_zz_yy_z_yy = buffer_1100_ddpd[5145];

    auto g_z_y_0_0_zz_yy_z_yz = buffer_1100_ddpd[5146];

    auto g_z_y_0_0_zz_yy_z_zz = buffer_1100_ddpd[5147];

    auto g_z_y_0_0_zz_yz_x_xx = buffer_1100_ddpd[5148];

    auto g_z_y_0_0_zz_yz_x_xy = buffer_1100_ddpd[5149];

    auto g_z_y_0_0_zz_yz_x_xz = buffer_1100_ddpd[5150];

    auto g_z_y_0_0_zz_yz_x_yy = buffer_1100_ddpd[5151];

    auto g_z_y_0_0_zz_yz_x_yz = buffer_1100_ddpd[5152];

    auto g_z_y_0_0_zz_yz_x_zz = buffer_1100_ddpd[5153];

    auto g_z_y_0_0_zz_yz_y_xx = buffer_1100_ddpd[5154];

    auto g_z_y_0_0_zz_yz_y_xy = buffer_1100_ddpd[5155];

    auto g_z_y_0_0_zz_yz_y_xz = buffer_1100_ddpd[5156];

    auto g_z_y_0_0_zz_yz_y_yy = buffer_1100_ddpd[5157];

    auto g_z_y_0_0_zz_yz_y_yz = buffer_1100_ddpd[5158];

    auto g_z_y_0_0_zz_yz_y_zz = buffer_1100_ddpd[5159];

    auto g_z_y_0_0_zz_yz_z_xx = buffer_1100_ddpd[5160];

    auto g_z_y_0_0_zz_yz_z_xy = buffer_1100_ddpd[5161];

    auto g_z_y_0_0_zz_yz_z_xz = buffer_1100_ddpd[5162];

    auto g_z_y_0_0_zz_yz_z_yy = buffer_1100_ddpd[5163];

    auto g_z_y_0_0_zz_yz_z_yz = buffer_1100_ddpd[5164];

    auto g_z_y_0_0_zz_yz_z_zz = buffer_1100_ddpd[5165];

    auto g_z_y_0_0_zz_zz_x_xx = buffer_1100_ddpd[5166];

    auto g_z_y_0_0_zz_zz_x_xy = buffer_1100_ddpd[5167];

    auto g_z_y_0_0_zz_zz_x_xz = buffer_1100_ddpd[5168];

    auto g_z_y_0_0_zz_zz_x_yy = buffer_1100_ddpd[5169];

    auto g_z_y_0_0_zz_zz_x_yz = buffer_1100_ddpd[5170];

    auto g_z_y_0_0_zz_zz_x_zz = buffer_1100_ddpd[5171];

    auto g_z_y_0_0_zz_zz_y_xx = buffer_1100_ddpd[5172];

    auto g_z_y_0_0_zz_zz_y_xy = buffer_1100_ddpd[5173];

    auto g_z_y_0_0_zz_zz_y_xz = buffer_1100_ddpd[5174];

    auto g_z_y_0_0_zz_zz_y_yy = buffer_1100_ddpd[5175];

    auto g_z_y_0_0_zz_zz_y_yz = buffer_1100_ddpd[5176];

    auto g_z_y_0_0_zz_zz_y_zz = buffer_1100_ddpd[5177];

    auto g_z_y_0_0_zz_zz_z_xx = buffer_1100_ddpd[5178];

    auto g_z_y_0_0_zz_zz_z_xy = buffer_1100_ddpd[5179];

    auto g_z_y_0_0_zz_zz_z_xz = buffer_1100_ddpd[5180];

    auto g_z_y_0_0_zz_zz_z_yy = buffer_1100_ddpd[5181];

    auto g_z_y_0_0_zz_zz_z_yz = buffer_1100_ddpd[5182];

    auto g_z_y_0_0_zz_zz_z_zz = buffer_1100_ddpd[5183];

    auto g_z_z_0_0_xx_xx_x_xx = buffer_1100_ddpd[5184];

    auto g_z_z_0_0_xx_xx_x_xy = buffer_1100_ddpd[5185];

    auto g_z_z_0_0_xx_xx_x_xz = buffer_1100_ddpd[5186];

    auto g_z_z_0_0_xx_xx_x_yy = buffer_1100_ddpd[5187];

    auto g_z_z_0_0_xx_xx_x_yz = buffer_1100_ddpd[5188];

    auto g_z_z_0_0_xx_xx_x_zz = buffer_1100_ddpd[5189];

    auto g_z_z_0_0_xx_xx_y_xx = buffer_1100_ddpd[5190];

    auto g_z_z_0_0_xx_xx_y_xy = buffer_1100_ddpd[5191];

    auto g_z_z_0_0_xx_xx_y_xz = buffer_1100_ddpd[5192];

    auto g_z_z_0_0_xx_xx_y_yy = buffer_1100_ddpd[5193];

    auto g_z_z_0_0_xx_xx_y_yz = buffer_1100_ddpd[5194];

    auto g_z_z_0_0_xx_xx_y_zz = buffer_1100_ddpd[5195];

    auto g_z_z_0_0_xx_xx_z_xx = buffer_1100_ddpd[5196];

    auto g_z_z_0_0_xx_xx_z_xy = buffer_1100_ddpd[5197];

    auto g_z_z_0_0_xx_xx_z_xz = buffer_1100_ddpd[5198];

    auto g_z_z_0_0_xx_xx_z_yy = buffer_1100_ddpd[5199];

    auto g_z_z_0_0_xx_xx_z_yz = buffer_1100_ddpd[5200];

    auto g_z_z_0_0_xx_xx_z_zz = buffer_1100_ddpd[5201];

    auto g_z_z_0_0_xx_xy_x_xx = buffer_1100_ddpd[5202];

    auto g_z_z_0_0_xx_xy_x_xy = buffer_1100_ddpd[5203];

    auto g_z_z_0_0_xx_xy_x_xz = buffer_1100_ddpd[5204];

    auto g_z_z_0_0_xx_xy_x_yy = buffer_1100_ddpd[5205];

    auto g_z_z_0_0_xx_xy_x_yz = buffer_1100_ddpd[5206];

    auto g_z_z_0_0_xx_xy_x_zz = buffer_1100_ddpd[5207];

    auto g_z_z_0_0_xx_xy_y_xx = buffer_1100_ddpd[5208];

    auto g_z_z_0_0_xx_xy_y_xy = buffer_1100_ddpd[5209];

    auto g_z_z_0_0_xx_xy_y_xz = buffer_1100_ddpd[5210];

    auto g_z_z_0_0_xx_xy_y_yy = buffer_1100_ddpd[5211];

    auto g_z_z_0_0_xx_xy_y_yz = buffer_1100_ddpd[5212];

    auto g_z_z_0_0_xx_xy_y_zz = buffer_1100_ddpd[5213];

    auto g_z_z_0_0_xx_xy_z_xx = buffer_1100_ddpd[5214];

    auto g_z_z_0_0_xx_xy_z_xy = buffer_1100_ddpd[5215];

    auto g_z_z_0_0_xx_xy_z_xz = buffer_1100_ddpd[5216];

    auto g_z_z_0_0_xx_xy_z_yy = buffer_1100_ddpd[5217];

    auto g_z_z_0_0_xx_xy_z_yz = buffer_1100_ddpd[5218];

    auto g_z_z_0_0_xx_xy_z_zz = buffer_1100_ddpd[5219];

    auto g_z_z_0_0_xx_xz_x_xx = buffer_1100_ddpd[5220];

    auto g_z_z_0_0_xx_xz_x_xy = buffer_1100_ddpd[5221];

    auto g_z_z_0_0_xx_xz_x_xz = buffer_1100_ddpd[5222];

    auto g_z_z_0_0_xx_xz_x_yy = buffer_1100_ddpd[5223];

    auto g_z_z_0_0_xx_xz_x_yz = buffer_1100_ddpd[5224];

    auto g_z_z_0_0_xx_xz_x_zz = buffer_1100_ddpd[5225];

    auto g_z_z_0_0_xx_xz_y_xx = buffer_1100_ddpd[5226];

    auto g_z_z_0_0_xx_xz_y_xy = buffer_1100_ddpd[5227];

    auto g_z_z_0_0_xx_xz_y_xz = buffer_1100_ddpd[5228];

    auto g_z_z_0_0_xx_xz_y_yy = buffer_1100_ddpd[5229];

    auto g_z_z_0_0_xx_xz_y_yz = buffer_1100_ddpd[5230];

    auto g_z_z_0_0_xx_xz_y_zz = buffer_1100_ddpd[5231];

    auto g_z_z_0_0_xx_xz_z_xx = buffer_1100_ddpd[5232];

    auto g_z_z_0_0_xx_xz_z_xy = buffer_1100_ddpd[5233];

    auto g_z_z_0_0_xx_xz_z_xz = buffer_1100_ddpd[5234];

    auto g_z_z_0_0_xx_xz_z_yy = buffer_1100_ddpd[5235];

    auto g_z_z_0_0_xx_xz_z_yz = buffer_1100_ddpd[5236];

    auto g_z_z_0_0_xx_xz_z_zz = buffer_1100_ddpd[5237];

    auto g_z_z_0_0_xx_yy_x_xx = buffer_1100_ddpd[5238];

    auto g_z_z_0_0_xx_yy_x_xy = buffer_1100_ddpd[5239];

    auto g_z_z_0_0_xx_yy_x_xz = buffer_1100_ddpd[5240];

    auto g_z_z_0_0_xx_yy_x_yy = buffer_1100_ddpd[5241];

    auto g_z_z_0_0_xx_yy_x_yz = buffer_1100_ddpd[5242];

    auto g_z_z_0_0_xx_yy_x_zz = buffer_1100_ddpd[5243];

    auto g_z_z_0_0_xx_yy_y_xx = buffer_1100_ddpd[5244];

    auto g_z_z_0_0_xx_yy_y_xy = buffer_1100_ddpd[5245];

    auto g_z_z_0_0_xx_yy_y_xz = buffer_1100_ddpd[5246];

    auto g_z_z_0_0_xx_yy_y_yy = buffer_1100_ddpd[5247];

    auto g_z_z_0_0_xx_yy_y_yz = buffer_1100_ddpd[5248];

    auto g_z_z_0_0_xx_yy_y_zz = buffer_1100_ddpd[5249];

    auto g_z_z_0_0_xx_yy_z_xx = buffer_1100_ddpd[5250];

    auto g_z_z_0_0_xx_yy_z_xy = buffer_1100_ddpd[5251];

    auto g_z_z_0_0_xx_yy_z_xz = buffer_1100_ddpd[5252];

    auto g_z_z_0_0_xx_yy_z_yy = buffer_1100_ddpd[5253];

    auto g_z_z_0_0_xx_yy_z_yz = buffer_1100_ddpd[5254];

    auto g_z_z_0_0_xx_yy_z_zz = buffer_1100_ddpd[5255];

    auto g_z_z_0_0_xx_yz_x_xx = buffer_1100_ddpd[5256];

    auto g_z_z_0_0_xx_yz_x_xy = buffer_1100_ddpd[5257];

    auto g_z_z_0_0_xx_yz_x_xz = buffer_1100_ddpd[5258];

    auto g_z_z_0_0_xx_yz_x_yy = buffer_1100_ddpd[5259];

    auto g_z_z_0_0_xx_yz_x_yz = buffer_1100_ddpd[5260];

    auto g_z_z_0_0_xx_yz_x_zz = buffer_1100_ddpd[5261];

    auto g_z_z_0_0_xx_yz_y_xx = buffer_1100_ddpd[5262];

    auto g_z_z_0_0_xx_yz_y_xy = buffer_1100_ddpd[5263];

    auto g_z_z_0_0_xx_yz_y_xz = buffer_1100_ddpd[5264];

    auto g_z_z_0_0_xx_yz_y_yy = buffer_1100_ddpd[5265];

    auto g_z_z_0_0_xx_yz_y_yz = buffer_1100_ddpd[5266];

    auto g_z_z_0_0_xx_yz_y_zz = buffer_1100_ddpd[5267];

    auto g_z_z_0_0_xx_yz_z_xx = buffer_1100_ddpd[5268];

    auto g_z_z_0_0_xx_yz_z_xy = buffer_1100_ddpd[5269];

    auto g_z_z_0_0_xx_yz_z_xz = buffer_1100_ddpd[5270];

    auto g_z_z_0_0_xx_yz_z_yy = buffer_1100_ddpd[5271];

    auto g_z_z_0_0_xx_yz_z_yz = buffer_1100_ddpd[5272];

    auto g_z_z_0_0_xx_yz_z_zz = buffer_1100_ddpd[5273];

    auto g_z_z_0_0_xx_zz_x_xx = buffer_1100_ddpd[5274];

    auto g_z_z_0_0_xx_zz_x_xy = buffer_1100_ddpd[5275];

    auto g_z_z_0_0_xx_zz_x_xz = buffer_1100_ddpd[5276];

    auto g_z_z_0_0_xx_zz_x_yy = buffer_1100_ddpd[5277];

    auto g_z_z_0_0_xx_zz_x_yz = buffer_1100_ddpd[5278];

    auto g_z_z_0_0_xx_zz_x_zz = buffer_1100_ddpd[5279];

    auto g_z_z_0_0_xx_zz_y_xx = buffer_1100_ddpd[5280];

    auto g_z_z_0_0_xx_zz_y_xy = buffer_1100_ddpd[5281];

    auto g_z_z_0_0_xx_zz_y_xz = buffer_1100_ddpd[5282];

    auto g_z_z_0_0_xx_zz_y_yy = buffer_1100_ddpd[5283];

    auto g_z_z_0_0_xx_zz_y_yz = buffer_1100_ddpd[5284];

    auto g_z_z_0_0_xx_zz_y_zz = buffer_1100_ddpd[5285];

    auto g_z_z_0_0_xx_zz_z_xx = buffer_1100_ddpd[5286];

    auto g_z_z_0_0_xx_zz_z_xy = buffer_1100_ddpd[5287];

    auto g_z_z_0_0_xx_zz_z_xz = buffer_1100_ddpd[5288];

    auto g_z_z_0_0_xx_zz_z_yy = buffer_1100_ddpd[5289];

    auto g_z_z_0_0_xx_zz_z_yz = buffer_1100_ddpd[5290];

    auto g_z_z_0_0_xx_zz_z_zz = buffer_1100_ddpd[5291];

    auto g_z_z_0_0_xy_xx_x_xx = buffer_1100_ddpd[5292];

    auto g_z_z_0_0_xy_xx_x_xy = buffer_1100_ddpd[5293];

    auto g_z_z_0_0_xy_xx_x_xz = buffer_1100_ddpd[5294];

    auto g_z_z_0_0_xy_xx_x_yy = buffer_1100_ddpd[5295];

    auto g_z_z_0_0_xy_xx_x_yz = buffer_1100_ddpd[5296];

    auto g_z_z_0_0_xy_xx_x_zz = buffer_1100_ddpd[5297];

    auto g_z_z_0_0_xy_xx_y_xx = buffer_1100_ddpd[5298];

    auto g_z_z_0_0_xy_xx_y_xy = buffer_1100_ddpd[5299];

    auto g_z_z_0_0_xy_xx_y_xz = buffer_1100_ddpd[5300];

    auto g_z_z_0_0_xy_xx_y_yy = buffer_1100_ddpd[5301];

    auto g_z_z_0_0_xy_xx_y_yz = buffer_1100_ddpd[5302];

    auto g_z_z_0_0_xy_xx_y_zz = buffer_1100_ddpd[5303];

    auto g_z_z_0_0_xy_xx_z_xx = buffer_1100_ddpd[5304];

    auto g_z_z_0_0_xy_xx_z_xy = buffer_1100_ddpd[5305];

    auto g_z_z_0_0_xy_xx_z_xz = buffer_1100_ddpd[5306];

    auto g_z_z_0_0_xy_xx_z_yy = buffer_1100_ddpd[5307];

    auto g_z_z_0_0_xy_xx_z_yz = buffer_1100_ddpd[5308];

    auto g_z_z_0_0_xy_xx_z_zz = buffer_1100_ddpd[5309];

    auto g_z_z_0_0_xy_xy_x_xx = buffer_1100_ddpd[5310];

    auto g_z_z_0_0_xy_xy_x_xy = buffer_1100_ddpd[5311];

    auto g_z_z_0_0_xy_xy_x_xz = buffer_1100_ddpd[5312];

    auto g_z_z_0_0_xy_xy_x_yy = buffer_1100_ddpd[5313];

    auto g_z_z_0_0_xy_xy_x_yz = buffer_1100_ddpd[5314];

    auto g_z_z_0_0_xy_xy_x_zz = buffer_1100_ddpd[5315];

    auto g_z_z_0_0_xy_xy_y_xx = buffer_1100_ddpd[5316];

    auto g_z_z_0_0_xy_xy_y_xy = buffer_1100_ddpd[5317];

    auto g_z_z_0_0_xy_xy_y_xz = buffer_1100_ddpd[5318];

    auto g_z_z_0_0_xy_xy_y_yy = buffer_1100_ddpd[5319];

    auto g_z_z_0_0_xy_xy_y_yz = buffer_1100_ddpd[5320];

    auto g_z_z_0_0_xy_xy_y_zz = buffer_1100_ddpd[5321];

    auto g_z_z_0_0_xy_xy_z_xx = buffer_1100_ddpd[5322];

    auto g_z_z_0_0_xy_xy_z_xy = buffer_1100_ddpd[5323];

    auto g_z_z_0_0_xy_xy_z_xz = buffer_1100_ddpd[5324];

    auto g_z_z_0_0_xy_xy_z_yy = buffer_1100_ddpd[5325];

    auto g_z_z_0_0_xy_xy_z_yz = buffer_1100_ddpd[5326];

    auto g_z_z_0_0_xy_xy_z_zz = buffer_1100_ddpd[5327];

    auto g_z_z_0_0_xy_xz_x_xx = buffer_1100_ddpd[5328];

    auto g_z_z_0_0_xy_xz_x_xy = buffer_1100_ddpd[5329];

    auto g_z_z_0_0_xy_xz_x_xz = buffer_1100_ddpd[5330];

    auto g_z_z_0_0_xy_xz_x_yy = buffer_1100_ddpd[5331];

    auto g_z_z_0_0_xy_xz_x_yz = buffer_1100_ddpd[5332];

    auto g_z_z_0_0_xy_xz_x_zz = buffer_1100_ddpd[5333];

    auto g_z_z_0_0_xy_xz_y_xx = buffer_1100_ddpd[5334];

    auto g_z_z_0_0_xy_xz_y_xy = buffer_1100_ddpd[5335];

    auto g_z_z_0_0_xy_xz_y_xz = buffer_1100_ddpd[5336];

    auto g_z_z_0_0_xy_xz_y_yy = buffer_1100_ddpd[5337];

    auto g_z_z_0_0_xy_xz_y_yz = buffer_1100_ddpd[5338];

    auto g_z_z_0_0_xy_xz_y_zz = buffer_1100_ddpd[5339];

    auto g_z_z_0_0_xy_xz_z_xx = buffer_1100_ddpd[5340];

    auto g_z_z_0_0_xy_xz_z_xy = buffer_1100_ddpd[5341];

    auto g_z_z_0_0_xy_xz_z_xz = buffer_1100_ddpd[5342];

    auto g_z_z_0_0_xy_xz_z_yy = buffer_1100_ddpd[5343];

    auto g_z_z_0_0_xy_xz_z_yz = buffer_1100_ddpd[5344];

    auto g_z_z_0_0_xy_xz_z_zz = buffer_1100_ddpd[5345];

    auto g_z_z_0_0_xy_yy_x_xx = buffer_1100_ddpd[5346];

    auto g_z_z_0_0_xy_yy_x_xy = buffer_1100_ddpd[5347];

    auto g_z_z_0_0_xy_yy_x_xz = buffer_1100_ddpd[5348];

    auto g_z_z_0_0_xy_yy_x_yy = buffer_1100_ddpd[5349];

    auto g_z_z_0_0_xy_yy_x_yz = buffer_1100_ddpd[5350];

    auto g_z_z_0_0_xy_yy_x_zz = buffer_1100_ddpd[5351];

    auto g_z_z_0_0_xy_yy_y_xx = buffer_1100_ddpd[5352];

    auto g_z_z_0_0_xy_yy_y_xy = buffer_1100_ddpd[5353];

    auto g_z_z_0_0_xy_yy_y_xz = buffer_1100_ddpd[5354];

    auto g_z_z_0_0_xy_yy_y_yy = buffer_1100_ddpd[5355];

    auto g_z_z_0_0_xy_yy_y_yz = buffer_1100_ddpd[5356];

    auto g_z_z_0_0_xy_yy_y_zz = buffer_1100_ddpd[5357];

    auto g_z_z_0_0_xy_yy_z_xx = buffer_1100_ddpd[5358];

    auto g_z_z_0_0_xy_yy_z_xy = buffer_1100_ddpd[5359];

    auto g_z_z_0_0_xy_yy_z_xz = buffer_1100_ddpd[5360];

    auto g_z_z_0_0_xy_yy_z_yy = buffer_1100_ddpd[5361];

    auto g_z_z_0_0_xy_yy_z_yz = buffer_1100_ddpd[5362];

    auto g_z_z_0_0_xy_yy_z_zz = buffer_1100_ddpd[5363];

    auto g_z_z_0_0_xy_yz_x_xx = buffer_1100_ddpd[5364];

    auto g_z_z_0_0_xy_yz_x_xy = buffer_1100_ddpd[5365];

    auto g_z_z_0_0_xy_yz_x_xz = buffer_1100_ddpd[5366];

    auto g_z_z_0_0_xy_yz_x_yy = buffer_1100_ddpd[5367];

    auto g_z_z_0_0_xy_yz_x_yz = buffer_1100_ddpd[5368];

    auto g_z_z_0_0_xy_yz_x_zz = buffer_1100_ddpd[5369];

    auto g_z_z_0_0_xy_yz_y_xx = buffer_1100_ddpd[5370];

    auto g_z_z_0_0_xy_yz_y_xy = buffer_1100_ddpd[5371];

    auto g_z_z_0_0_xy_yz_y_xz = buffer_1100_ddpd[5372];

    auto g_z_z_0_0_xy_yz_y_yy = buffer_1100_ddpd[5373];

    auto g_z_z_0_0_xy_yz_y_yz = buffer_1100_ddpd[5374];

    auto g_z_z_0_0_xy_yz_y_zz = buffer_1100_ddpd[5375];

    auto g_z_z_0_0_xy_yz_z_xx = buffer_1100_ddpd[5376];

    auto g_z_z_0_0_xy_yz_z_xy = buffer_1100_ddpd[5377];

    auto g_z_z_0_0_xy_yz_z_xz = buffer_1100_ddpd[5378];

    auto g_z_z_0_0_xy_yz_z_yy = buffer_1100_ddpd[5379];

    auto g_z_z_0_0_xy_yz_z_yz = buffer_1100_ddpd[5380];

    auto g_z_z_0_0_xy_yz_z_zz = buffer_1100_ddpd[5381];

    auto g_z_z_0_0_xy_zz_x_xx = buffer_1100_ddpd[5382];

    auto g_z_z_0_0_xy_zz_x_xy = buffer_1100_ddpd[5383];

    auto g_z_z_0_0_xy_zz_x_xz = buffer_1100_ddpd[5384];

    auto g_z_z_0_0_xy_zz_x_yy = buffer_1100_ddpd[5385];

    auto g_z_z_0_0_xy_zz_x_yz = buffer_1100_ddpd[5386];

    auto g_z_z_0_0_xy_zz_x_zz = buffer_1100_ddpd[5387];

    auto g_z_z_0_0_xy_zz_y_xx = buffer_1100_ddpd[5388];

    auto g_z_z_0_0_xy_zz_y_xy = buffer_1100_ddpd[5389];

    auto g_z_z_0_0_xy_zz_y_xz = buffer_1100_ddpd[5390];

    auto g_z_z_0_0_xy_zz_y_yy = buffer_1100_ddpd[5391];

    auto g_z_z_0_0_xy_zz_y_yz = buffer_1100_ddpd[5392];

    auto g_z_z_0_0_xy_zz_y_zz = buffer_1100_ddpd[5393];

    auto g_z_z_0_0_xy_zz_z_xx = buffer_1100_ddpd[5394];

    auto g_z_z_0_0_xy_zz_z_xy = buffer_1100_ddpd[5395];

    auto g_z_z_0_0_xy_zz_z_xz = buffer_1100_ddpd[5396];

    auto g_z_z_0_0_xy_zz_z_yy = buffer_1100_ddpd[5397];

    auto g_z_z_0_0_xy_zz_z_yz = buffer_1100_ddpd[5398];

    auto g_z_z_0_0_xy_zz_z_zz = buffer_1100_ddpd[5399];

    auto g_z_z_0_0_xz_xx_x_xx = buffer_1100_ddpd[5400];

    auto g_z_z_0_0_xz_xx_x_xy = buffer_1100_ddpd[5401];

    auto g_z_z_0_0_xz_xx_x_xz = buffer_1100_ddpd[5402];

    auto g_z_z_0_0_xz_xx_x_yy = buffer_1100_ddpd[5403];

    auto g_z_z_0_0_xz_xx_x_yz = buffer_1100_ddpd[5404];

    auto g_z_z_0_0_xz_xx_x_zz = buffer_1100_ddpd[5405];

    auto g_z_z_0_0_xz_xx_y_xx = buffer_1100_ddpd[5406];

    auto g_z_z_0_0_xz_xx_y_xy = buffer_1100_ddpd[5407];

    auto g_z_z_0_0_xz_xx_y_xz = buffer_1100_ddpd[5408];

    auto g_z_z_0_0_xz_xx_y_yy = buffer_1100_ddpd[5409];

    auto g_z_z_0_0_xz_xx_y_yz = buffer_1100_ddpd[5410];

    auto g_z_z_0_0_xz_xx_y_zz = buffer_1100_ddpd[5411];

    auto g_z_z_0_0_xz_xx_z_xx = buffer_1100_ddpd[5412];

    auto g_z_z_0_0_xz_xx_z_xy = buffer_1100_ddpd[5413];

    auto g_z_z_0_0_xz_xx_z_xz = buffer_1100_ddpd[5414];

    auto g_z_z_0_0_xz_xx_z_yy = buffer_1100_ddpd[5415];

    auto g_z_z_0_0_xz_xx_z_yz = buffer_1100_ddpd[5416];

    auto g_z_z_0_0_xz_xx_z_zz = buffer_1100_ddpd[5417];

    auto g_z_z_0_0_xz_xy_x_xx = buffer_1100_ddpd[5418];

    auto g_z_z_0_0_xz_xy_x_xy = buffer_1100_ddpd[5419];

    auto g_z_z_0_0_xz_xy_x_xz = buffer_1100_ddpd[5420];

    auto g_z_z_0_0_xz_xy_x_yy = buffer_1100_ddpd[5421];

    auto g_z_z_0_0_xz_xy_x_yz = buffer_1100_ddpd[5422];

    auto g_z_z_0_0_xz_xy_x_zz = buffer_1100_ddpd[5423];

    auto g_z_z_0_0_xz_xy_y_xx = buffer_1100_ddpd[5424];

    auto g_z_z_0_0_xz_xy_y_xy = buffer_1100_ddpd[5425];

    auto g_z_z_0_0_xz_xy_y_xz = buffer_1100_ddpd[5426];

    auto g_z_z_0_0_xz_xy_y_yy = buffer_1100_ddpd[5427];

    auto g_z_z_0_0_xz_xy_y_yz = buffer_1100_ddpd[5428];

    auto g_z_z_0_0_xz_xy_y_zz = buffer_1100_ddpd[5429];

    auto g_z_z_0_0_xz_xy_z_xx = buffer_1100_ddpd[5430];

    auto g_z_z_0_0_xz_xy_z_xy = buffer_1100_ddpd[5431];

    auto g_z_z_0_0_xz_xy_z_xz = buffer_1100_ddpd[5432];

    auto g_z_z_0_0_xz_xy_z_yy = buffer_1100_ddpd[5433];

    auto g_z_z_0_0_xz_xy_z_yz = buffer_1100_ddpd[5434];

    auto g_z_z_0_0_xz_xy_z_zz = buffer_1100_ddpd[5435];

    auto g_z_z_0_0_xz_xz_x_xx = buffer_1100_ddpd[5436];

    auto g_z_z_0_0_xz_xz_x_xy = buffer_1100_ddpd[5437];

    auto g_z_z_0_0_xz_xz_x_xz = buffer_1100_ddpd[5438];

    auto g_z_z_0_0_xz_xz_x_yy = buffer_1100_ddpd[5439];

    auto g_z_z_0_0_xz_xz_x_yz = buffer_1100_ddpd[5440];

    auto g_z_z_0_0_xz_xz_x_zz = buffer_1100_ddpd[5441];

    auto g_z_z_0_0_xz_xz_y_xx = buffer_1100_ddpd[5442];

    auto g_z_z_0_0_xz_xz_y_xy = buffer_1100_ddpd[5443];

    auto g_z_z_0_0_xz_xz_y_xz = buffer_1100_ddpd[5444];

    auto g_z_z_0_0_xz_xz_y_yy = buffer_1100_ddpd[5445];

    auto g_z_z_0_0_xz_xz_y_yz = buffer_1100_ddpd[5446];

    auto g_z_z_0_0_xz_xz_y_zz = buffer_1100_ddpd[5447];

    auto g_z_z_0_0_xz_xz_z_xx = buffer_1100_ddpd[5448];

    auto g_z_z_0_0_xz_xz_z_xy = buffer_1100_ddpd[5449];

    auto g_z_z_0_0_xz_xz_z_xz = buffer_1100_ddpd[5450];

    auto g_z_z_0_0_xz_xz_z_yy = buffer_1100_ddpd[5451];

    auto g_z_z_0_0_xz_xz_z_yz = buffer_1100_ddpd[5452];

    auto g_z_z_0_0_xz_xz_z_zz = buffer_1100_ddpd[5453];

    auto g_z_z_0_0_xz_yy_x_xx = buffer_1100_ddpd[5454];

    auto g_z_z_0_0_xz_yy_x_xy = buffer_1100_ddpd[5455];

    auto g_z_z_0_0_xz_yy_x_xz = buffer_1100_ddpd[5456];

    auto g_z_z_0_0_xz_yy_x_yy = buffer_1100_ddpd[5457];

    auto g_z_z_0_0_xz_yy_x_yz = buffer_1100_ddpd[5458];

    auto g_z_z_0_0_xz_yy_x_zz = buffer_1100_ddpd[5459];

    auto g_z_z_0_0_xz_yy_y_xx = buffer_1100_ddpd[5460];

    auto g_z_z_0_0_xz_yy_y_xy = buffer_1100_ddpd[5461];

    auto g_z_z_0_0_xz_yy_y_xz = buffer_1100_ddpd[5462];

    auto g_z_z_0_0_xz_yy_y_yy = buffer_1100_ddpd[5463];

    auto g_z_z_0_0_xz_yy_y_yz = buffer_1100_ddpd[5464];

    auto g_z_z_0_0_xz_yy_y_zz = buffer_1100_ddpd[5465];

    auto g_z_z_0_0_xz_yy_z_xx = buffer_1100_ddpd[5466];

    auto g_z_z_0_0_xz_yy_z_xy = buffer_1100_ddpd[5467];

    auto g_z_z_0_0_xz_yy_z_xz = buffer_1100_ddpd[5468];

    auto g_z_z_0_0_xz_yy_z_yy = buffer_1100_ddpd[5469];

    auto g_z_z_0_0_xz_yy_z_yz = buffer_1100_ddpd[5470];

    auto g_z_z_0_0_xz_yy_z_zz = buffer_1100_ddpd[5471];

    auto g_z_z_0_0_xz_yz_x_xx = buffer_1100_ddpd[5472];

    auto g_z_z_0_0_xz_yz_x_xy = buffer_1100_ddpd[5473];

    auto g_z_z_0_0_xz_yz_x_xz = buffer_1100_ddpd[5474];

    auto g_z_z_0_0_xz_yz_x_yy = buffer_1100_ddpd[5475];

    auto g_z_z_0_0_xz_yz_x_yz = buffer_1100_ddpd[5476];

    auto g_z_z_0_0_xz_yz_x_zz = buffer_1100_ddpd[5477];

    auto g_z_z_0_0_xz_yz_y_xx = buffer_1100_ddpd[5478];

    auto g_z_z_0_0_xz_yz_y_xy = buffer_1100_ddpd[5479];

    auto g_z_z_0_0_xz_yz_y_xz = buffer_1100_ddpd[5480];

    auto g_z_z_0_0_xz_yz_y_yy = buffer_1100_ddpd[5481];

    auto g_z_z_0_0_xz_yz_y_yz = buffer_1100_ddpd[5482];

    auto g_z_z_0_0_xz_yz_y_zz = buffer_1100_ddpd[5483];

    auto g_z_z_0_0_xz_yz_z_xx = buffer_1100_ddpd[5484];

    auto g_z_z_0_0_xz_yz_z_xy = buffer_1100_ddpd[5485];

    auto g_z_z_0_0_xz_yz_z_xz = buffer_1100_ddpd[5486];

    auto g_z_z_0_0_xz_yz_z_yy = buffer_1100_ddpd[5487];

    auto g_z_z_0_0_xz_yz_z_yz = buffer_1100_ddpd[5488];

    auto g_z_z_0_0_xz_yz_z_zz = buffer_1100_ddpd[5489];

    auto g_z_z_0_0_xz_zz_x_xx = buffer_1100_ddpd[5490];

    auto g_z_z_0_0_xz_zz_x_xy = buffer_1100_ddpd[5491];

    auto g_z_z_0_0_xz_zz_x_xz = buffer_1100_ddpd[5492];

    auto g_z_z_0_0_xz_zz_x_yy = buffer_1100_ddpd[5493];

    auto g_z_z_0_0_xz_zz_x_yz = buffer_1100_ddpd[5494];

    auto g_z_z_0_0_xz_zz_x_zz = buffer_1100_ddpd[5495];

    auto g_z_z_0_0_xz_zz_y_xx = buffer_1100_ddpd[5496];

    auto g_z_z_0_0_xz_zz_y_xy = buffer_1100_ddpd[5497];

    auto g_z_z_0_0_xz_zz_y_xz = buffer_1100_ddpd[5498];

    auto g_z_z_0_0_xz_zz_y_yy = buffer_1100_ddpd[5499];

    auto g_z_z_0_0_xz_zz_y_yz = buffer_1100_ddpd[5500];

    auto g_z_z_0_0_xz_zz_y_zz = buffer_1100_ddpd[5501];

    auto g_z_z_0_0_xz_zz_z_xx = buffer_1100_ddpd[5502];

    auto g_z_z_0_0_xz_zz_z_xy = buffer_1100_ddpd[5503];

    auto g_z_z_0_0_xz_zz_z_xz = buffer_1100_ddpd[5504];

    auto g_z_z_0_0_xz_zz_z_yy = buffer_1100_ddpd[5505];

    auto g_z_z_0_0_xz_zz_z_yz = buffer_1100_ddpd[5506];

    auto g_z_z_0_0_xz_zz_z_zz = buffer_1100_ddpd[5507];

    auto g_z_z_0_0_yy_xx_x_xx = buffer_1100_ddpd[5508];

    auto g_z_z_0_0_yy_xx_x_xy = buffer_1100_ddpd[5509];

    auto g_z_z_0_0_yy_xx_x_xz = buffer_1100_ddpd[5510];

    auto g_z_z_0_0_yy_xx_x_yy = buffer_1100_ddpd[5511];

    auto g_z_z_0_0_yy_xx_x_yz = buffer_1100_ddpd[5512];

    auto g_z_z_0_0_yy_xx_x_zz = buffer_1100_ddpd[5513];

    auto g_z_z_0_0_yy_xx_y_xx = buffer_1100_ddpd[5514];

    auto g_z_z_0_0_yy_xx_y_xy = buffer_1100_ddpd[5515];

    auto g_z_z_0_0_yy_xx_y_xz = buffer_1100_ddpd[5516];

    auto g_z_z_0_0_yy_xx_y_yy = buffer_1100_ddpd[5517];

    auto g_z_z_0_0_yy_xx_y_yz = buffer_1100_ddpd[5518];

    auto g_z_z_0_0_yy_xx_y_zz = buffer_1100_ddpd[5519];

    auto g_z_z_0_0_yy_xx_z_xx = buffer_1100_ddpd[5520];

    auto g_z_z_0_0_yy_xx_z_xy = buffer_1100_ddpd[5521];

    auto g_z_z_0_0_yy_xx_z_xz = buffer_1100_ddpd[5522];

    auto g_z_z_0_0_yy_xx_z_yy = buffer_1100_ddpd[5523];

    auto g_z_z_0_0_yy_xx_z_yz = buffer_1100_ddpd[5524];

    auto g_z_z_0_0_yy_xx_z_zz = buffer_1100_ddpd[5525];

    auto g_z_z_0_0_yy_xy_x_xx = buffer_1100_ddpd[5526];

    auto g_z_z_0_0_yy_xy_x_xy = buffer_1100_ddpd[5527];

    auto g_z_z_0_0_yy_xy_x_xz = buffer_1100_ddpd[5528];

    auto g_z_z_0_0_yy_xy_x_yy = buffer_1100_ddpd[5529];

    auto g_z_z_0_0_yy_xy_x_yz = buffer_1100_ddpd[5530];

    auto g_z_z_0_0_yy_xy_x_zz = buffer_1100_ddpd[5531];

    auto g_z_z_0_0_yy_xy_y_xx = buffer_1100_ddpd[5532];

    auto g_z_z_0_0_yy_xy_y_xy = buffer_1100_ddpd[5533];

    auto g_z_z_0_0_yy_xy_y_xz = buffer_1100_ddpd[5534];

    auto g_z_z_0_0_yy_xy_y_yy = buffer_1100_ddpd[5535];

    auto g_z_z_0_0_yy_xy_y_yz = buffer_1100_ddpd[5536];

    auto g_z_z_0_0_yy_xy_y_zz = buffer_1100_ddpd[5537];

    auto g_z_z_0_0_yy_xy_z_xx = buffer_1100_ddpd[5538];

    auto g_z_z_0_0_yy_xy_z_xy = buffer_1100_ddpd[5539];

    auto g_z_z_0_0_yy_xy_z_xz = buffer_1100_ddpd[5540];

    auto g_z_z_0_0_yy_xy_z_yy = buffer_1100_ddpd[5541];

    auto g_z_z_0_0_yy_xy_z_yz = buffer_1100_ddpd[5542];

    auto g_z_z_0_0_yy_xy_z_zz = buffer_1100_ddpd[5543];

    auto g_z_z_0_0_yy_xz_x_xx = buffer_1100_ddpd[5544];

    auto g_z_z_0_0_yy_xz_x_xy = buffer_1100_ddpd[5545];

    auto g_z_z_0_0_yy_xz_x_xz = buffer_1100_ddpd[5546];

    auto g_z_z_0_0_yy_xz_x_yy = buffer_1100_ddpd[5547];

    auto g_z_z_0_0_yy_xz_x_yz = buffer_1100_ddpd[5548];

    auto g_z_z_0_0_yy_xz_x_zz = buffer_1100_ddpd[5549];

    auto g_z_z_0_0_yy_xz_y_xx = buffer_1100_ddpd[5550];

    auto g_z_z_0_0_yy_xz_y_xy = buffer_1100_ddpd[5551];

    auto g_z_z_0_0_yy_xz_y_xz = buffer_1100_ddpd[5552];

    auto g_z_z_0_0_yy_xz_y_yy = buffer_1100_ddpd[5553];

    auto g_z_z_0_0_yy_xz_y_yz = buffer_1100_ddpd[5554];

    auto g_z_z_0_0_yy_xz_y_zz = buffer_1100_ddpd[5555];

    auto g_z_z_0_0_yy_xz_z_xx = buffer_1100_ddpd[5556];

    auto g_z_z_0_0_yy_xz_z_xy = buffer_1100_ddpd[5557];

    auto g_z_z_0_0_yy_xz_z_xz = buffer_1100_ddpd[5558];

    auto g_z_z_0_0_yy_xz_z_yy = buffer_1100_ddpd[5559];

    auto g_z_z_0_0_yy_xz_z_yz = buffer_1100_ddpd[5560];

    auto g_z_z_0_0_yy_xz_z_zz = buffer_1100_ddpd[5561];

    auto g_z_z_0_0_yy_yy_x_xx = buffer_1100_ddpd[5562];

    auto g_z_z_0_0_yy_yy_x_xy = buffer_1100_ddpd[5563];

    auto g_z_z_0_0_yy_yy_x_xz = buffer_1100_ddpd[5564];

    auto g_z_z_0_0_yy_yy_x_yy = buffer_1100_ddpd[5565];

    auto g_z_z_0_0_yy_yy_x_yz = buffer_1100_ddpd[5566];

    auto g_z_z_0_0_yy_yy_x_zz = buffer_1100_ddpd[5567];

    auto g_z_z_0_0_yy_yy_y_xx = buffer_1100_ddpd[5568];

    auto g_z_z_0_0_yy_yy_y_xy = buffer_1100_ddpd[5569];

    auto g_z_z_0_0_yy_yy_y_xz = buffer_1100_ddpd[5570];

    auto g_z_z_0_0_yy_yy_y_yy = buffer_1100_ddpd[5571];

    auto g_z_z_0_0_yy_yy_y_yz = buffer_1100_ddpd[5572];

    auto g_z_z_0_0_yy_yy_y_zz = buffer_1100_ddpd[5573];

    auto g_z_z_0_0_yy_yy_z_xx = buffer_1100_ddpd[5574];

    auto g_z_z_0_0_yy_yy_z_xy = buffer_1100_ddpd[5575];

    auto g_z_z_0_0_yy_yy_z_xz = buffer_1100_ddpd[5576];

    auto g_z_z_0_0_yy_yy_z_yy = buffer_1100_ddpd[5577];

    auto g_z_z_0_0_yy_yy_z_yz = buffer_1100_ddpd[5578];

    auto g_z_z_0_0_yy_yy_z_zz = buffer_1100_ddpd[5579];

    auto g_z_z_0_0_yy_yz_x_xx = buffer_1100_ddpd[5580];

    auto g_z_z_0_0_yy_yz_x_xy = buffer_1100_ddpd[5581];

    auto g_z_z_0_0_yy_yz_x_xz = buffer_1100_ddpd[5582];

    auto g_z_z_0_0_yy_yz_x_yy = buffer_1100_ddpd[5583];

    auto g_z_z_0_0_yy_yz_x_yz = buffer_1100_ddpd[5584];

    auto g_z_z_0_0_yy_yz_x_zz = buffer_1100_ddpd[5585];

    auto g_z_z_0_0_yy_yz_y_xx = buffer_1100_ddpd[5586];

    auto g_z_z_0_0_yy_yz_y_xy = buffer_1100_ddpd[5587];

    auto g_z_z_0_0_yy_yz_y_xz = buffer_1100_ddpd[5588];

    auto g_z_z_0_0_yy_yz_y_yy = buffer_1100_ddpd[5589];

    auto g_z_z_0_0_yy_yz_y_yz = buffer_1100_ddpd[5590];

    auto g_z_z_0_0_yy_yz_y_zz = buffer_1100_ddpd[5591];

    auto g_z_z_0_0_yy_yz_z_xx = buffer_1100_ddpd[5592];

    auto g_z_z_0_0_yy_yz_z_xy = buffer_1100_ddpd[5593];

    auto g_z_z_0_0_yy_yz_z_xz = buffer_1100_ddpd[5594];

    auto g_z_z_0_0_yy_yz_z_yy = buffer_1100_ddpd[5595];

    auto g_z_z_0_0_yy_yz_z_yz = buffer_1100_ddpd[5596];

    auto g_z_z_0_0_yy_yz_z_zz = buffer_1100_ddpd[5597];

    auto g_z_z_0_0_yy_zz_x_xx = buffer_1100_ddpd[5598];

    auto g_z_z_0_0_yy_zz_x_xy = buffer_1100_ddpd[5599];

    auto g_z_z_0_0_yy_zz_x_xz = buffer_1100_ddpd[5600];

    auto g_z_z_0_0_yy_zz_x_yy = buffer_1100_ddpd[5601];

    auto g_z_z_0_0_yy_zz_x_yz = buffer_1100_ddpd[5602];

    auto g_z_z_0_0_yy_zz_x_zz = buffer_1100_ddpd[5603];

    auto g_z_z_0_0_yy_zz_y_xx = buffer_1100_ddpd[5604];

    auto g_z_z_0_0_yy_zz_y_xy = buffer_1100_ddpd[5605];

    auto g_z_z_0_0_yy_zz_y_xz = buffer_1100_ddpd[5606];

    auto g_z_z_0_0_yy_zz_y_yy = buffer_1100_ddpd[5607];

    auto g_z_z_0_0_yy_zz_y_yz = buffer_1100_ddpd[5608];

    auto g_z_z_0_0_yy_zz_y_zz = buffer_1100_ddpd[5609];

    auto g_z_z_0_0_yy_zz_z_xx = buffer_1100_ddpd[5610];

    auto g_z_z_0_0_yy_zz_z_xy = buffer_1100_ddpd[5611];

    auto g_z_z_0_0_yy_zz_z_xz = buffer_1100_ddpd[5612];

    auto g_z_z_0_0_yy_zz_z_yy = buffer_1100_ddpd[5613];

    auto g_z_z_0_0_yy_zz_z_yz = buffer_1100_ddpd[5614];

    auto g_z_z_0_0_yy_zz_z_zz = buffer_1100_ddpd[5615];

    auto g_z_z_0_0_yz_xx_x_xx = buffer_1100_ddpd[5616];

    auto g_z_z_0_0_yz_xx_x_xy = buffer_1100_ddpd[5617];

    auto g_z_z_0_0_yz_xx_x_xz = buffer_1100_ddpd[5618];

    auto g_z_z_0_0_yz_xx_x_yy = buffer_1100_ddpd[5619];

    auto g_z_z_0_0_yz_xx_x_yz = buffer_1100_ddpd[5620];

    auto g_z_z_0_0_yz_xx_x_zz = buffer_1100_ddpd[5621];

    auto g_z_z_0_0_yz_xx_y_xx = buffer_1100_ddpd[5622];

    auto g_z_z_0_0_yz_xx_y_xy = buffer_1100_ddpd[5623];

    auto g_z_z_0_0_yz_xx_y_xz = buffer_1100_ddpd[5624];

    auto g_z_z_0_0_yz_xx_y_yy = buffer_1100_ddpd[5625];

    auto g_z_z_0_0_yz_xx_y_yz = buffer_1100_ddpd[5626];

    auto g_z_z_0_0_yz_xx_y_zz = buffer_1100_ddpd[5627];

    auto g_z_z_0_0_yz_xx_z_xx = buffer_1100_ddpd[5628];

    auto g_z_z_0_0_yz_xx_z_xy = buffer_1100_ddpd[5629];

    auto g_z_z_0_0_yz_xx_z_xz = buffer_1100_ddpd[5630];

    auto g_z_z_0_0_yz_xx_z_yy = buffer_1100_ddpd[5631];

    auto g_z_z_0_0_yz_xx_z_yz = buffer_1100_ddpd[5632];

    auto g_z_z_0_0_yz_xx_z_zz = buffer_1100_ddpd[5633];

    auto g_z_z_0_0_yz_xy_x_xx = buffer_1100_ddpd[5634];

    auto g_z_z_0_0_yz_xy_x_xy = buffer_1100_ddpd[5635];

    auto g_z_z_0_0_yz_xy_x_xz = buffer_1100_ddpd[5636];

    auto g_z_z_0_0_yz_xy_x_yy = buffer_1100_ddpd[5637];

    auto g_z_z_0_0_yz_xy_x_yz = buffer_1100_ddpd[5638];

    auto g_z_z_0_0_yz_xy_x_zz = buffer_1100_ddpd[5639];

    auto g_z_z_0_0_yz_xy_y_xx = buffer_1100_ddpd[5640];

    auto g_z_z_0_0_yz_xy_y_xy = buffer_1100_ddpd[5641];

    auto g_z_z_0_0_yz_xy_y_xz = buffer_1100_ddpd[5642];

    auto g_z_z_0_0_yz_xy_y_yy = buffer_1100_ddpd[5643];

    auto g_z_z_0_0_yz_xy_y_yz = buffer_1100_ddpd[5644];

    auto g_z_z_0_0_yz_xy_y_zz = buffer_1100_ddpd[5645];

    auto g_z_z_0_0_yz_xy_z_xx = buffer_1100_ddpd[5646];

    auto g_z_z_0_0_yz_xy_z_xy = buffer_1100_ddpd[5647];

    auto g_z_z_0_0_yz_xy_z_xz = buffer_1100_ddpd[5648];

    auto g_z_z_0_0_yz_xy_z_yy = buffer_1100_ddpd[5649];

    auto g_z_z_0_0_yz_xy_z_yz = buffer_1100_ddpd[5650];

    auto g_z_z_0_0_yz_xy_z_zz = buffer_1100_ddpd[5651];

    auto g_z_z_0_0_yz_xz_x_xx = buffer_1100_ddpd[5652];

    auto g_z_z_0_0_yz_xz_x_xy = buffer_1100_ddpd[5653];

    auto g_z_z_0_0_yz_xz_x_xz = buffer_1100_ddpd[5654];

    auto g_z_z_0_0_yz_xz_x_yy = buffer_1100_ddpd[5655];

    auto g_z_z_0_0_yz_xz_x_yz = buffer_1100_ddpd[5656];

    auto g_z_z_0_0_yz_xz_x_zz = buffer_1100_ddpd[5657];

    auto g_z_z_0_0_yz_xz_y_xx = buffer_1100_ddpd[5658];

    auto g_z_z_0_0_yz_xz_y_xy = buffer_1100_ddpd[5659];

    auto g_z_z_0_0_yz_xz_y_xz = buffer_1100_ddpd[5660];

    auto g_z_z_0_0_yz_xz_y_yy = buffer_1100_ddpd[5661];

    auto g_z_z_0_0_yz_xz_y_yz = buffer_1100_ddpd[5662];

    auto g_z_z_0_0_yz_xz_y_zz = buffer_1100_ddpd[5663];

    auto g_z_z_0_0_yz_xz_z_xx = buffer_1100_ddpd[5664];

    auto g_z_z_0_0_yz_xz_z_xy = buffer_1100_ddpd[5665];

    auto g_z_z_0_0_yz_xz_z_xz = buffer_1100_ddpd[5666];

    auto g_z_z_0_0_yz_xz_z_yy = buffer_1100_ddpd[5667];

    auto g_z_z_0_0_yz_xz_z_yz = buffer_1100_ddpd[5668];

    auto g_z_z_0_0_yz_xz_z_zz = buffer_1100_ddpd[5669];

    auto g_z_z_0_0_yz_yy_x_xx = buffer_1100_ddpd[5670];

    auto g_z_z_0_0_yz_yy_x_xy = buffer_1100_ddpd[5671];

    auto g_z_z_0_0_yz_yy_x_xz = buffer_1100_ddpd[5672];

    auto g_z_z_0_0_yz_yy_x_yy = buffer_1100_ddpd[5673];

    auto g_z_z_0_0_yz_yy_x_yz = buffer_1100_ddpd[5674];

    auto g_z_z_0_0_yz_yy_x_zz = buffer_1100_ddpd[5675];

    auto g_z_z_0_0_yz_yy_y_xx = buffer_1100_ddpd[5676];

    auto g_z_z_0_0_yz_yy_y_xy = buffer_1100_ddpd[5677];

    auto g_z_z_0_0_yz_yy_y_xz = buffer_1100_ddpd[5678];

    auto g_z_z_0_0_yz_yy_y_yy = buffer_1100_ddpd[5679];

    auto g_z_z_0_0_yz_yy_y_yz = buffer_1100_ddpd[5680];

    auto g_z_z_0_0_yz_yy_y_zz = buffer_1100_ddpd[5681];

    auto g_z_z_0_0_yz_yy_z_xx = buffer_1100_ddpd[5682];

    auto g_z_z_0_0_yz_yy_z_xy = buffer_1100_ddpd[5683];

    auto g_z_z_0_0_yz_yy_z_xz = buffer_1100_ddpd[5684];

    auto g_z_z_0_0_yz_yy_z_yy = buffer_1100_ddpd[5685];

    auto g_z_z_0_0_yz_yy_z_yz = buffer_1100_ddpd[5686];

    auto g_z_z_0_0_yz_yy_z_zz = buffer_1100_ddpd[5687];

    auto g_z_z_0_0_yz_yz_x_xx = buffer_1100_ddpd[5688];

    auto g_z_z_0_0_yz_yz_x_xy = buffer_1100_ddpd[5689];

    auto g_z_z_0_0_yz_yz_x_xz = buffer_1100_ddpd[5690];

    auto g_z_z_0_0_yz_yz_x_yy = buffer_1100_ddpd[5691];

    auto g_z_z_0_0_yz_yz_x_yz = buffer_1100_ddpd[5692];

    auto g_z_z_0_0_yz_yz_x_zz = buffer_1100_ddpd[5693];

    auto g_z_z_0_0_yz_yz_y_xx = buffer_1100_ddpd[5694];

    auto g_z_z_0_0_yz_yz_y_xy = buffer_1100_ddpd[5695];

    auto g_z_z_0_0_yz_yz_y_xz = buffer_1100_ddpd[5696];

    auto g_z_z_0_0_yz_yz_y_yy = buffer_1100_ddpd[5697];

    auto g_z_z_0_0_yz_yz_y_yz = buffer_1100_ddpd[5698];

    auto g_z_z_0_0_yz_yz_y_zz = buffer_1100_ddpd[5699];

    auto g_z_z_0_0_yz_yz_z_xx = buffer_1100_ddpd[5700];

    auto g_z_z_0_0_yz_yz_z_xy = buffer_1100_ddpd[5701];

    auto g_z_z_0_0_yz_yz_z_xz = buffer_1100_ddpd[5702];

    auto g_z_z_0_0_yz_yz_z_yy = buffer_1100_ddpd[5703];

    auto g_z_z_0_0_yz_yz_z_yz = buffer_1100_ddpd[5704];

    auto g_z_z_0_0_yz_yz_z_zz = buffer_1100_ddpd[5705];

    auto g_z_z_0_0_yz_zz_x_xx = buffer_1100_ddpd[5706];

    auto g_z_z_0_0_yz_zz_x_xy = buffer_1100_ddpd[5707];

    auto g_z_z_0_0_yz_zz_x_xz = buffer_1100_ddpd[5708];

    auto g_z_z_0_0_yz_zz_x_yy = buffer_1100_ddpd[5709];

    auto g_z_z_0_0_yz_zz_x_yz = buffer_1100_ddpd[5710];

    auto g_z_z_0_0_yz_zz_x_zz = buffer_1100_ddpd[5711];

    auto g_z_z_0_0_yz_zz_y_xx = buffer_1100_ddpd[5712];

    auto g_z_z_0_0_yz_zz_y_xy = buffer_1100_ddpd[5713];

    auto g_z_z_0_0_yz_zz_y_xz = buffer_1100_ddpd[5714];

    auto g_z_z_0_0_yz_zz_y_yy = buffer_1100_ddpd[5715];

    auto g_z_z_0_0_yz_zz_y_yz = buffer_1100_ddpd[5716];

    auto g_z_z_0_0_yz_zz_y_zz = buffer_1100_ddpd[5717];

    auto g_z_z_0_0_yz_zz_z_xx = buffer_1100_ddpd[5718];

    auto g_z_z_0_0_yz_zz_z_xy = buffer_1100_ddpd[5719];

    auto g_z_z_0_0_yz_zz_z_xz = buffer_1100_ddpd[5720];

    auto g_z_z_0_0_yz_zz_z_yy = buffer_1100_ddpd[5721];

    auto g_z_z_0_0_yz_zz_z_yz = buffer_1100_ddpd[5722];

    auto g_z_z_0_0_yz_zz_z_zz = buffer_1100_ddpd[5723];

    auto g_z_z_0_0_zz_xx_x_xx = buffer_1100_ddpd[5724];

    auto g_z_z_0_0_zz_xx_x_xy = buffer_1100_ddpd[5725];

    auto g_z_z_0_0_zz_xx_x_xz = buffer_1100_ddpd[5726];

    auto g_z_z_0_0_zz_xx_x_yy = buffer_1100_ddpd[5727];

    auto g_z_z_0_0_zz_xx_x_yz = buffer_1100_ddpd[5728];

    auto g_z_z_0_0_zz_xx_x_zz = buffer_1100_ddpd[5729];

    auto g_z_z_0_0_zz_xx_y_xx = buffer_1100_ddpd[5730];

    auto g_z_z_0_0_zz_xx_y_xy = buffer_1100_ddpd[5731];

    auto g_z_z_0_0_zz_xx_y_xz = buffer_1100_ddpd[5732];

    auto g_z_z_0_0_zz_xx_y_yy = buffer_1100_ddpd[5733];

    auto g_z_z_0_0_zz_xx_y_yz = buffer_1100_ddpd[5734];

    auto g_z_z_0_0_zz_xx_y_zz = buffer_1100_ddpd[5735];

    auto g_z_z_0_0_zz_xx_z_xx = buffer_1100_ddpd[5736];

    auto g_z_z_0_0_zz_xx_z_xy = buffer_1100_ddpd[5737];

    auto g_z_z_0_0_zz_xx_z_xz = buffer_1100_ddpd[5738];

    auto g_z_z_0_0_zz_xx_z_yy = buffer_1100_ddpd[5739];

    auto g_z_z_0_0_zz_xx_z_yz = buffer_1100_ddpd[5740];

    auto g_z_z_0_0_zz_xx_z_zz = buffer_1100_ddpd[5741];

    auto g_z_z_0_0_zz_xy_x_xx = buffer_1100_ddpd[5742];

    auto g_z_z_0_0_zz_xy_x_xy = buffer_1100_ddpd[5743];

    auto g_z_z_0_0_zz_xy_x_xz = buffer_1100_ddpd[5744];

    auto g_z_z_0_0_zz_xy_x_yy = buffer_1100_ddpd[5745];

    auto g_z_z_0_0_zz_xy_x_yz = buffer_1100_ddpd[5746];

    auto g_z_z_0_0_zz_xy_x_zz = buffer_1100_ddpd[5747];

    auto g_z_z_0_0_zz_xy_y_xx = buffer_1100_ddpd[5748];

    auto g_z_z_0_0_zz_xy_y_xy = buffer_1100_ddpd[5749];

    auto g_z_z_0_0_zz_xy_y_xz = buffer_1100_ddpd[5750];

    auto g_z_z_0_0_zz_xy_y_yy = buffer_1100_ddpd[5751];

    auto g_z_z_0_0_zz_xy_y_yz = buffer_1100_ddpd[5752];

    auto g_z_z_0_0_zz_xy_y_zz = buffer_1100_ddpd[5753];

    auto g_z_z_0_0_zz_xy_z_xx = buffer_1100_ddpd[5754];

    auto g_z_z_0_0_zz_xy_z_xy = buffer_1100_ddpd[5755];

    auto g_z_z_0_0_zz_xy_z_xz = buffer_1100_ddpd[5756];

    auto g_z_z_0_0_zz_xy_z_yy = buffer_1100_ddpd[5757];

    auto g_z_z_0_0_zz_xy_z_yz = buffer_1100_ddpd[5758];

    auto g_z_z_0_0_zz_xy_z_zz = buffer_1100_ddpd[5759];

    auto g_z_z_0_0_zz_xz_x_xx = buffer_1100_ddpd[5760];

    auto g_z_z_0_0_zz_xz_x_xy = buffer_1100_ddpd[5761];

    auto g_z_z_0_0_zz_xz_x_xz = buffer_1100_ddpd[5762];

    auto g_z_z_0_0_zz_xz_x_yy = buffer_1100_ddpd[5763];

    auto g_z_z_0_0_zz_xz_x_yz = buffer_1100_ddpd[5764];

    auto g_z_z_0_0_zz_xz_x_zz = buffer_1100_ddpd[5765];

    auto g_z_z_0_0_zz_xz_y_xx = buffer_1100_ddpd[5766];

    auto g_z_z_0_0_zz_xz_y_xy = buffer_1100_ddpd[5767];

    auto g_z_z_0_0_zz_xz_y_xz = buffer_1100_ddpd[5768];

    auto g_z_z_0_0_zz_xz_y_yy = buffer_1100_ddpd[5769];

    auto g_z_z_0_0_zz_xz_y_yz = buffer_1100_ddpd[5770];

    auto g_z_z_0_0_zz_xz_y_zz = buffer_1100_ddpd[5771];

    auto g_z_z_0_0_zz_xz_z_xx = buffer_1100_ddpd[5772];

    auto g_z_z_0_0_zz_xz_z_xy = buffer_1100_ddpd[5773];

    auto g_z_z_0_0_zz_xz_z_xz = buffer_1100_ddpd[5774];

    auto g_z_z_0_0_zz_xz_z_yy = buffer_1100_ddpd[5775];

    auto g_z_z_0_0_zz_xz_z_yz = buffer_1100_ddpd[5776];

    auto g_z_z_0_0_zz_xz_z_zz = buffer_1100_ddpd[5777];

    auto g_z_z_0_0_zz_yy_x_xx = buffer_1100_ddpd[5778];

    auto g_z_z_0_0_zz_yy_x_xy = buffer_1100_ddpd[5779];

    auto g_z_z_0_0_zz_yy_x_xz = buffer_1100_ddpd[5780];

    auto g_z_z_0_0_zz_yy_x_yy = buffer_1100_ddpd[5781];

    auto g_z_z_0_0_zz_yy_x_yz = buffer_1100_ddpd[5782];

    auto g_z_z_0_0_zz_yy_x_zz = buffer_1100_ddpd[5783];

    auto g_z_z_0_0_zz_yy_y_xx = buffer_1100_ddpd[5784];

    auto g_z_z_0_0_zz_yy_y_xy = buffer_1100_ddpd[5785];

    auto g_z_z_0_0_zz_yy_y_xz = buffer_1100_ddpd[5786];

    auto g_z_z_0_0_zz_yy_y_yy = buffer_1100_ddpd[5787];

    auto g_z_z_0_0_zz_yy_y_yz = buffer_1100_ddpd[5788];

    auto g_z_z_0_0_zz_yy_y_zz = buffer_1100_ddpd[5789];

    auto g_z_z_0_0_zz_yy_z_xx = buffer_1100_ddpd[5790];

    auto g_z_z_0_0_zz_yy_z_xy = buffer_1100_ddpd[5791];

    auto g_z_z_0_0_zz_yy_z_xz = buffer_1100_ddpd[5792];

    auto g_z_z_0_0_zz_yy_z_yy = buffer_1100_ddpd[5793];

    auto g_z_z_0_0_zz_yy_z_yz = buffer_1100_ddpd[5794];

    auto g_z_z_0_0_zz_yy_z_zz = buffer_1100_ddpd[5795];

    auto g_z_z_0_0_zz_yz_x_xx = buffer_1100_ddpd[5796];

    auto g_z_z_0_0_zz_yz_x_xy = buffer_1100_ddpd[5797];

    auto g_z_z_0_0_zz_yz_x_xz = buffer_1100_ddpd[5798];

    auto g_z_z_0_0_zz_yz_x_yy = buffer_1100_ddpd[5799];

    auto g_z_z_0_0_zz_yz_x_yz = buffer_1100_ddpd[5800];

    auto g_z_z_0_0_zz_yz_x_zz = buffer_1100_ddpd[5801];

    auto g_z_z_0_0_zz_yz_y_xx = buffer_1100_ddpd[5802];

    auto g_z_z_0_0_zz_yz_y_xy = buffer_1100_ddpd[5803];

    auto g_z_z_0_0_zz_yz_y_xz = buffer_1100_ddpd[5804];

    auto g_z_z_0_0_zz_yz_y_yy = buffer_1100_ddpd[5805];

    auto g_z_z_0_0_zz_yz_y_yz = buffer_1100_ddpd[5806];

    auto g_z_z_0_0_zz_yz_y_zz = buffer_1100_ddpd[5807];

    auto g_z_z_0_0_zz_yz_z_xx = buffer_1100_ddpd[5808];

    auto g_z_z_0_0_zz_yz_z_xy = buffer_1100_ddpd[5809];

    auto g_z_z_0_0_zz_yz_z_xz = buffer_1100_ddpd[5810];

    auto g_z_z_0_0_zz_yz_z_yy = buffer_1100_ddpd[5811];

    auto g_z_z_0_0_zz_yz_z_yz = buffer_1100_ddpd[5812];

    auto g_z_z_0_0_zz_yz_z_zz = buffer_1100_ddpd[5813];

    auto g_z_z_0_0_zz_zz_x_xx = buffer_1100_ddpd[5814];

    auto g_z_z_0_0_zz_zz_x_xy = buffer_1100_ddpd[5815];

    auto g_z_z_0_0_zz_zz_x_xz = buffer_1100_ddpd[5816];

    auto g_z_z_0_0_zz_zz_x_yy = buffer_1100_ddpd[5817];

    auto g_z_z_0_0_zz_zz_x_yz = buffer_1100_ddpd[5818];

    auto g_z_z_0_0_zz_zz_x_zz = buffer_1100_ddpd[5819];

    auto g_z_z_0_0_zz_zz_y_xx = buffer_1100_ddpd[5820];

    auto g_z_z_0_0_zz_zz_y_xy = buffer_1100_ddpd[5821];

    auto g_z_z_0_0_zz_zz_y_xz = buffer_1100_ddpd[5822];

    auto g_z_z_0_0_zz_zz_y_yy = buffer_1100_ddpd[5823];

    auto g_z_z_0_0_zz_zz_y_yz = buffer_1100_ddpd[5824];

    auto g_z_z_0_0_zz_zz_y_zz = buffer_1100_ddpd[5825];

    auto g_z_z_0_0_zz_zz_z_xx = buffer_1100_ddpd[5826];

    auto g_z_z_0_0_zz_zz_z_xy = buffer_1100_ddpd[5827];

    auto g_z_z_0_0_zz_zz_z_xz = buffer_1100_ddpd[5828];

    auto g_z_z_0_0_zz_zz_z_yy = buffer_1100_ddpd[5829];

    auto g_z_z_0_0_zz_zz_z_yz = buffer_1100_ddpd[5830];

    auto g_z_z_0_0_zz_zz_z_zz = buffer_1100_ddpd[5831];

    // integrals block (0-6)

    #pragma omp simd aligned(g_x_x_0_0_xx_xx_x_xx, g_x_x_0_0_xx_xx_x_xy, g_x_x_0_0_xx_xx_x_xz, g_x_x_0_0_xx_xx_x_yy, g_x_x_0_0_xx_xx_x_yz, g_x_x_0_0_xx_xx_x_zz, g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xxx_x_xx, g_x_xxx_x_xy, g_x_xxx_x_xz, g_x_xxx_x_yy, g_x_xxx_x_yz, g_x_xxx_x_zz, g_xxx_x_x_xx, g_xxx_x_x_xy, g_xxx_x_x_xz, g_xxx_x_x_yy, g_xxx_x_x_yz, g_xxx_x_x_zz, g_xxx_xxx_x_xx, g_xxx_xxx_x_xy, g_xxx_xxx_x_xz, g_xxx_xxx_x_yy, g_xxx_xxx_x_yz, g_xxx_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xx_x_xx[i] = 4.0 * g_x_x_x_xx[i] - 4.0 * g_x_xxx_x_xx[i] * b_exp - 4.0 * g_xxx_x_x_xx[i] * a_exp + 4.0 * g_xxx_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_x_xy[i] = 4.0 * g_x_x_x_xy[i] - 4.0 * g_x_xxx_x_xy[i] * b_exp - 4.0 * g_xxx_x_x_xy[i] * a_exp + 4.0 * g_xxx_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_x_xz[i] = 4.0 * g_x_x_x_xz[i] - 4.0 * g_x_xxx_x_xz[i] * b_exp - 4.0 * g_xxx_x_x_xz[i] * a_exp + 4.0 * g_xxx_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_x_yy[i] = 4.0 * g_x_x_x_yy[i] - 4.0 * g_x_xxx_x_yy[i] * b_exp - 4.0 * g_xxx_x_x_yy[i] * a_exp + 4.0 * g_xxx_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_x_yz[i] = 4.0 * g_x_x_x_yz[i] - 4.0 * g_x_xxx_x_yz[i] * b_exp - 4.0 * g_xxx_x_x_yz[i] * a_exp + 4.0 * g_xxx_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_x_zz[i] = 4.0 * g_x_x_x_zz[i] - 4.0 * g_x_xxx_x_zz[i] * b_exp - 4.0 * g_xxx_x_x_zz[i] * a_exp + 4.0 * g_xxx_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (6-12)

    #pragma omp simd aligned(g_x_x_0_0_xx_xx_y_xx, g_x_x_0_0_xx_xx_y_xy, g_x_x_0_0_xx_xx_y_xz, g_x_x_0_0_xx_xx_y_yy, g_x_x_0_0_xx_xx_y_yz, g_x_x_0_0_xx_xx_y_zz, g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xxx_y_xx, g_x_xxx_y_xy, g_x_xxx_y_xz, g_x_xxx_y_yy, g_x_xxx_y_yz, g_x_xxx_y_zz, g_xxx_x_y_xx, g_xxx_x_y_xy, g_xxx_x_y_xz, g_xxx_x_y_yy, g_xxx_x_y_yz, g_xxx_x_y_zz, g_xxx_xxx_y_xx, g_xxx_xxx_y_xy, g_xxx_xxx_y_xz, g_xxx_xxx_y_yy, g_xxx_xxx_y_yz, g_xxx_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xx_y_xx[i] = 4.0 * g_x_x_y_xx[i] - 4.0 * g_x_xxx_y_xx[i] * b_exp - 4.0 * g_xxx_x_y_xx[i] * a_exp + 4.0 * g_xxx_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_y_xy[i] = 4.0 * g_x_x_y_xy[i] - 4.0 * g_x_xxx_y_xy[i] * b_exp - 4.0 * g_xxx_x_y_xy[i] * a_exp + 4.0 * g_xxx_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_y_xz[i] = 4.0 * g_x_x_y_xz[i] - 4.0 * g_x_xxx_y_xz[i] * b_exp - 4.0 * g_xxx_x_y_xz[i] * a_exp + 4.0 * g_xxx_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_y_yy[i] = 4.0 * g_x_x_y_yy[i] - 4.0 * g_x_xxx_y_yy[i] * b_exp - 4.0 * g_xxx_x_y_yy[i] * a_exp + 4.0 * g_xxx_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_y_yz[i] = 4.0 * g_x_x_y_yz[i] - 4.0 * g_x_xxx_y_yz[i] * b_exp - 4.0 * g_xxx_x_y_yz[i] * a_exp + 4.0 * g_xxx_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_y_zz[i] = 4.0 * g_x_x_y_zz[i] - 4.0 * g_x_xxx_y_zz[i] * b_exp - 4.0 * g_xxx_x_y_zz[i] * a_exp + 4.0 * g_xxx_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (12-18)

    #pragma omp simd aligned(g_x_x_0_0_xx_xx_z_xx, g_x_x_0_0_xx_xx_z_xy, g_x_x_0_0_xx_xx_z_xz, g_x_x_0_0_xx_xx_z_yy, g_x_x_0_0_xx_xx_z_yz, g_x_x_0_0_xx_xx_z_zz, g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xxx_z_xx, g_x_xxx_z_xy, g_x_xxx_z_xz, g_x_xxx_z_yy, g_x_xxx_z_yz, g_x_xxx_z_zz, g_xxx_x_z_xx, g_xxx_x_z_xy, g_xxx_x_z_xz, g_xxx_x_z_yy, g_xxx_x_z_yz, g_xxx_x_z_zz, g_xxx_xxx_z_xx, g_xxx_xxx_z_xy, g_xxx_xxx_z_xz, g_xxx_xxx_z_yy, g_xxx_xxx_z_yz, g_xxx_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xx_z_xx[i] = 4.0 * g_x_x_z_xx[i] - 4.0 * g_x_xxx_z_xx[i] * b_exp - 4.0 * g_xxx_x_z_xx[i] * a_exp + 4.0 * g_xxx_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_z_xy[i] = 4.0 * g_x_x_z_xy[i] - 4.0 * g_x_xxx_z_xy[i] * b_exp - 4.0 * g_xxx_x_z_xy[i] * a_exp + 4.0 * g_xxx_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_z_xz[i] = 4.0 * g_x_x_z_xz[i] - 4.0 * g_x_xxx_z_xz[i] * b_exp - 4.0 * g_xxx_x_z_xz[i] * a_exp + 4.0 * g_xxx_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_z_yy[i] = 4.0 * g_x_x_z_yy[i] - 4.0 * g_x_xxx_z_yy[i] * b_exp - 4.0 * g_xxx_x_z_yy[i] * a_exp + 4.0 * g_xxx_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_z_yz[i] = 4.0 * g_x_x_z_yz[i] - 4.0 * g_x_xxx_z_yz[i] * b_exp - 4.0 * g_xxx_x_z_yz[i] * a_exp + 4.0 * g_xxx_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xx_z_zz[i] = 4.0 * g_x_x_z_zz[i] - 4.0 * g_x_xxx_z_zz[i] * b_exp - 4.0 * g_xxx_x_z_zz[i] * a_exp + 4.0 * g_xxx_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (18-24)

    #pragma omp simd aligned(g_x_x_0_0_xx_xy_x_xx, g_x_x_0_0_xx_xy_x_xy, g_x_x_0_0_xx_xy_x_xz, g_x_x_0_0_xx_xy_x_yy, g_x_x_0_0_xx_xy_x_yz, g_x_x_0_0_xx_xy_x_zz, g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_xxx_xxy_x_xx, g_xxx_xxy_x_xy, g_xxx_xxy_x_xz, g_xxx_xxy_x_yy, g_xxx_xxy_x_yz, g_xxx_xxy_x_zz, g_xxx_y_x_xx, g_xxx_y_x_xy, g_xxx_y_x_xz, g_xxx_y_x_yy, g_xxx_y_x_yz, g_xxx_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xy_x_xx[i] = 2.0 * g_x_y_x_xx[i] - 4.0 * g_x_xxy_x_xx[i] * b_exp - 2.0 * g_xxx_y_x_xx[i] * a_exp + 4.0 * g_xxx_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_x_xy[i] = 2.0 * g_x_y_x_xy[i] - 4.0 * g_x_xxy_x_xy[i] * b_exp - 2.0 * g_xxx_y_x_xy[i] * a_exp + 4.0 * g_xxx_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_x_xz[i] = 2.0 * g_x_y_x_xz[i] - 4.0 * g_x_xxy_x_xz[i] * b_exp - 2.0 * g_xxx_y_x_xz[i] * a_exp + 4.0 * g_xxx_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_x_yy[i] = 2.0 * g_x_y_x_yy[i] - 4.0 * g_x_xxy_x_yy[i] * b_exp - 2.0 * g_xxx_y_x_yy[i] * a_exp + 4.0 * g_xxx_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_x_yz[i] = 2.0 * g_x_y_x_yz[i] - 4.0 * g_x_xxy_x_yz[i] * b_exp - 2.0 * g_xxx_y_x_yz[i] * a_exp + 4.0 * g_xxx_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_x_zz[i] = 2.0 * g_x_y_x_zz[i] - 4.0 * g_x_xxy_x_zz[i] * b_exp - 2.0 * g_xxx_y_x_zz[i] * a_exp + 4.0 * g_xxx_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (24-30)

    #pragma omp simd aligned(g_x_x_0_0_xx_xy_y_xx, g_x_x_0_0_xx_xy_y_xy, g_x_x_0_0_xx_xy_y_xz, g_x_x_0_0_xx_xy_y_yy, g_x_x_0_0_xx_xy_y_yz, g_x_x_0_0_xx_xy_y_zz, g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_xxx_xxy_y_xx, g_xxx_xxy_y_xy, g_xxx_xxy_y_xz, g_xxx_xxy_y_yy, g_xxx_xxy_y_yz, g_xxx_xxy_y_zz, g_xxx_y_y_xx, g_xxx_y_y_xy, g_xxx_y_y_xz, g_xxx_y_y_yy, g_xxx_y_y_yz, g_xxx_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xy_y_xx[i] = 2.0 * g_x_y_y_xx[i] - 4.0 * g_x_xxy_y_xx[i] * b_exp - 2.0 * g_xxx_y_y_xx[i] * a_exp + 4.0 * g_xxx_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_y_xy[i] = 2.0 * g_x_y_y_xy[i] - 4.0 * g_x_xxy_y_xy[i] * b_exp - 2.0 * g_xxx_y_y_xy[i] * a_exp + 4.0 * g_xxx_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_y_xz[i] = 2.0 * g_x_y_y_xz[i] - 4.0 * g_x_xxy_y_xz[i] * b_exp - 2.0 * g_xxx_y_y_xz[i] * a_exp + 4.0 * g_xxx_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_y_yy[i] = 2.0 * g_x_y_y_yy[i] - 4.0 * g_x_xxy_y_yy[i] * b_exp - 2.0 * g_xxx_y_y_yy[i] * a_exp + 4.0 * g_xxx_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_y_yz[i] = 2.0 * g_x_y_y_yz[i] - 4.0 * g_x_xxy_y_yz[i] * b_exp - 2.0 * g_xxx_y_y_yz[i] * a_exp + 4.0 * g_xxx_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_y_zz[i] = 2.0 * g_x_y_y_zz[i] - 4.0 * g_x_xxy_y_zz[i] * b_exp - 2.0 * g_xxx_y_y_zz[i] * a_exp + 4.0 * g_xxx_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (30-36)

    #pragma omp simd aligned(g_x_x_0_0_xx_xy_z_xx, g_x_x_0_0_xx_xy_z_xy, g_x_x_0_0_xx_xy_z_xz, g_x_x_0_0_xx_xy_z_yy, g_x_x_0_0_xx_xy_z_yz, g_x_x_0_0_xx_xy_z_zz, g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_xxx_xxy_z_xx, g_xxx_xxy_z_xy, g_xxx_xxy_z_xz, g_xxx_xxy_z_yy, g_xxx_xxy_z_yz, g_xxx_xxy_z_zz, g_xxx_y_z_xx, g_xxx_y_z_xy, g_xxx_y_z_xz, g_xxx_y_z_yy, g_xxx_y_z_yz, g_xxx_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xy_z_xx[i] = 2.0 * g_x_y_z_xx[i] - 4.0 * g_x_xxy_z_xx[i] * b_exp - 2.0 * g_xxx_y_z_xx[i] * a_exp + 4.0 * g_xxx_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_z_xy[i] = 2.0 * g_x_y_z_xy[i] - 4.0 * g_x_xxy_z_xy[i] * b_exp - 2.0 * g_xxx_y_z_xy[i] * a_exp + 4.0 * g_xxx_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_z_xz[i] = 2.0 * g_x_y_z_xz[i] - 4.0 * g_x_xxy_z_xz[i] * b_exp - 2.0 * g_xxx_y_z_xz[i] * a_exp + 4.0 * g_xxx_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_z_yy[i] = 2.0 * g_x_y_z_yy[i] - 4.0 * g_x_xxy_z_yy[i] * b_exp - 2.0 * g_xxx_y_z_yy[i] * a_exp + 4.0 * g_xxx_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_z_yz[i] = 2.0 * g_x_y_z_yz[i] - 4.0 * g_x_xxy_z_yz[i] * b_exp - 2.0 * g_xxx_y_z_yz[i] * a_exp + 4.0 * g_xxx_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xy_z_zz[i] = 2.0 * g_x_y_z_zz[i] - 4.0 * g_x_xxy_z_zz[i] * b_exp - 2.0 * g_xxx_y_z_zz[i] * a_exp + 4.0 * g_xxx_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (36-42)

    #pragma omp simd aligned(g_x_x_0_0_xx_xz_x_xx, g_x_x_0_0_xx_xz_x_xy, g_x_x_0_0_xx_xz_x_xz, g_x_x_0_0_xx_xz_x_yy, g_x_x_0_0_xx_xz_x_yz, g_x_x_0_0_xx_xz_x_zz, g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xxx_xxz_x_xx, g_xxx_xxz_x_xy, g_xxx_xxz_x_xz, g_xxx_xxz_x_yy, g_xxx_xxz_x_yz, g_xxx_xxz_x_zz, g_xxx_z_x_xx, g_xxx_z_x_xy, g_xxx_z_x_xz, g_xxx_z_x_yy, g_xxx_z_x_yz, g_xxx_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xz_x_xx[i] = 2.0 * g_x_z_x_xx[i] - 4.0 * g_x_xxz_x_xx[i] * b_exp - 2.0 * g_xxx_z_x_xx[i] * a_exp + 4.0 * g_xxx_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_x_xy[i] = 2.0 * g_x_z_x_xy[i] - 4.0 * g_x_xxz_x_xy[i] * b_exp - 2.0 * g_xxx_z_x_xy[i] * a_exp + 4.0 * g_xxx_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_x_xz[i] = 2.0 * g_x_z_x_xz[i] - 4.0 * g_x_xxz_x_xz[i] * b_exp - 2.0 * g_xxx_z_x_xz[i] * a_exp + 4.0 * g_xxx_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_x_yy[i] = 2.0 * g_x_z_x_yy[i] - 4.0 * g_x_xxz_x_yy[i] * b_exp - 2.0 * g_xxx_z_x_yy[i] * a_exp + 4.0 * g_xxx_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_x_yz[i] = 2.0 * g_x_z_x_yz[i] - 4.0 * g_x_xxz_x_yz[i] * b_exp - 2.0 * g_xxx_z_x_yz[i] * a_exp + 4.0 * g_xxx_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_x_zz[i] = 2.0 * g_x_z_x_zz[i] - 4.0 * g_x_xxz_x_zz[i] * b_exp - 2.0 * g_xxx_z_x_zz[i] * a_exp + 4.0 * g_xxx_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (42-48)

    #pragma omp simd aligned(g_x_x_0_0_xx_xz_y_xx, g_x_x_0_0_xx_xz_y_xy, g_x_x_0_0_xx_xz_y_xz, g_x_x_0_0_xx_xz_y_yy, g_x_x_0_0_xx_xz_y_yz, g_x_x_0_0_xx_xz_y_zz, g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xxx_xxz_y_xx, g_xxx_xxz_y_xy, g_xxx_xxz_y_xz, g_xxx_xxz_y_yy, g_xxx_xxz_y_yz, g_xxx_xxz_y_zz, g_xxx_z_y_xx, g_xxx_z_y_xy, g_xxx_z_y_xz, g_xxx_z_y_yy, g_xxx_z_y_yz, g_xxx_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xz_y_xx[i] = 2.0 * g_x_z_y_xx[i] - 4.0 * g_x_xxz_y_xx[i] * b_exp - 2.0 * g_xxx_z_y_xx[i] * a_exp + 4.0 * g_xxx_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_y_xy[i] = 2.0 * g_x_z_y_xy[i] - 4.0 * g_x_xxz_y_xy[i] * b_exp - 2.0 * g_xxx_z_y_xy[i] * a_exp + 4.0 * g_xxx_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_y_xz[i] = 2.0 * g_x_z_y_xz[i] - 4.0 * g_x_xxz_y_xz[i] * b_exp - 2.0 * g_xxx_z_y_xz[i] * a_exp + 4.0 * g_xxx_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_y_yy[i] = 2.0 * g_x_z_y_yy[i] - 4.0 * g_x_xxz_y_yy[i] * b_exp - 2.0 * g_xxx_z_y_yy[i] * a_exp + 4.0 * g_xxx_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_y_yz[i] = 2.0 * g_x_z_y_yz[i] - 4.0 * g_x_xxz_y_yz[i] * b_exp - 2.0 * g_xxx_z_y_yz[i] * a_exp + 4.0 * g_xxx_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_y_zz[i] = 2.0 * g_x_z_y_zz[i] - 4.0 * g_x_xxz_y_zz[i] * b_exp - 2.0 * g_xxx_z_y_zz[i] * a_exp + 4.0 * g_xxx_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (48-54)

    #pragma omp simd aligned(g_x_x_0_0_xx_xz_z_xx, g_x_x_0_0_xx_xz_z_xy, g_x_x_0_0_xx_xz_z_xz, g_x_x_0_0_xx_xz_z_yy, g_x_x_0_0_xx_xz_z_yz, g_x_x_0_0_xx_xz_z_zz, g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xxx_xxz_z_xx, g_xxx_xxz_z_xy, g_xxx_xxz_z_xz, g_xxx_xxz_z_yy, g_xxx_xxz_z_yz, g_xxx_xxz_z_zz, g_xxx_z_z_xx, g_xxx_z_z_xy, g_xxx_z_z_xz, g_xxx_z_z_yy, g_xxx_z_z_yz, g_xxx_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_xz_z_xx[i] = 2.0 * g_x_z_z_xx[i] - 4.0 * g_x_xxz_z_xx[i] * b_exp - 2.0 * g_xxx_z_z_xx[i] * a_exp + 4.0 * g_xxx_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_z_xy[i] = 2.0 * g_x_z_z_xy[i] - 4.0 * g_x_xxz_z_xy[i] * b_exp - 2.0 * g_xxx_z_z_xy[i] * a_exp + 4.0 * g_xxx_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_z_xz[i] = 2.0 * g_x_z_z_xz[i] - 4.0 * g_x_xxz_z_xz[i] * b_exp - 2.0 * g_xxx_z_z_xz[i] * a_exp + 4.0 * g_xxx_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_z_yy[i] = 2.0 * g_x_z_z_yy[i] - 4.0 * g_x_xxz_z_yy[i] * b_exp - 2.0 * g_xxx_z_z_yy[i] * a_exp + 4.0 * g_xxx_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_z_yz[i] = 2.0 * g_x_z_z_yz[i] - 4.0 * g_x_xxz_z_yz[i] * b_exp - 2.0 * g_xxx_z_z_yz[i] * a_exp + 4.0 * g_xxx_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_xz_z_zz[i] = 2.0 * g_x_z_z_zz[i] - 4.0 * g_x_xxz_z_zz[i] * b_exp - 2.0 * g_xxx_z_z_zz[i] * a_exp + 4.0 * g_xxx_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (54-60)

    #pragma omp simd aligned(g_x_x_0_0_xx_yy_x_xx, g_x_x_0_0_xx_yy_x_xy, g_x_x_0_0_xx_yy_x_xz, g_x_x_0_0_xx_yy_x_yy, g_x_x_0_0_xx_yy_x_yz, g_x_x_0_0_xx_yy_x_zz, g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_xxx_xyy_x_xx, g_xxx_xyy_x_xy, g_xxx_xyy_x_xz, g_xxx_xyy_x_yy, g_xxx_xyy_x_yz, g_xxx_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yy_x_xx[i] = -4.0 * g_x_xyy_x_xx[i] * b_exp + 4.0 * g_xxx_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_x_xy[i] = -4.0 * g_x_xyy_x_xy[i] * b_exp + 4.0 * g_xxx_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_x_xz[i] = -4.0 * g_x_xyy_x_xz[i] * b_exp + 4.0 * g_xxx_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_x_yy[i] = -4.0 * g_x_xyy_x_yy[i] * b_exp + 4.0 * g_xxx_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_x_yz[i] = -4.0 * g_x_xyy_x_yz[i] * b_exp + 4.0 * g_xxx_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_x_zz[i] = -4.0 * g_x_xyy_x_zz[i] * b_exp + 4.0 * g_xxx_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (60-66)

    #pragma omp simd aligned(g_x_x_0_0_xx_yy_y_xx, g_x_x_0_0_xx_yy_y_xy, g_x_x_0_0_xx_yy_y_xz, g_x_x_0_0_xx_yy_y_yy, g_x_x_0_0_xx_yy_y_yz, g_x_x_0_0_xx_yy_y_zz, g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_xxx_xyy_y_xx, g_xxx_xyy_y_xy, g_xxx_xyy_y_xz, g_xxx_xyy_y_yy, g_xxx_xyy_y_yz, g_xxx_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yy_y_xx[i] = -4.0 * g_x_xyy_y_xx[i] * b_exp + 4.0 * g_xxx_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_y_xy[i] = -4.0 * g_x_xyy_y_xy[i] * b_exp + 4.0 * g_xxx_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_y_xz[i] = -4.0 * g_x_xyy_y_xz[i] * b_exp + 4.0 * g_xxx_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_y_yy[i] = -4.0 * g_x_xyy_y_yy[i] * b_exp + 4.0 * g_xxx_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_y_yz[i] = -4.0 * g_x_xyy_y_yz[i] * b_exp + 4.0 * g_xxx_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_y_zz[i] = -4.0 * g_x_xyy_y_zz[i] * b_exp + 4.0 * g_xxx_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (66-72)

    #pragma omp simd aligned(g_x_x_0_0_xx_yy_z_xx, g_x_x_0_0_xx_yy_z_xy, g_x_x_0_0_xx_yy_z_xz, g_x_x_0_0_xx_yy_z_yy, g_x_x_0_0_xx_yy_z_yz, g_x_x_0_0_xx_yy_z_zz, g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_xxx_xyy_z_xx, g_xxx_xyy_z_xy, g_xxx_xyy_z_xz, g_xxx_xyy_z_yy, g_xxx_xyy_z_yz, g_xxx_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yy_z_xx[i] = -4.0 * g_x_xyy_z_xx[i] * b_exp + 4.0 * g_xxx_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_z_xy[i] = -4.0 * g_x_xyy_z_xy[i] * b_exp + 4.0 * g_xxx_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_z_xz[i] = -4.0 * g_x_xyy_z_xz[i] * b_exp + 4.0 * g_xxx_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_z_yy[i] = -4.0 * g_x_xyy_z_yy[i] * b_exp + 4.0 * g_xxx_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_z_yz[i] = -4.0 * g_x_xyy_z_yz[i] * b_exp + 4.0 * g_xxx_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yy_z_zz[i] = -4.0 * g_x_xyy_z_zz[i] * b_exp + 4.0 * g_xxx_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (72-78)

    #pragma omp simd aligned(g_x_x_0_0_xx_yz_x_xx, g_x_x_0_0_xx_yz_x_xy, g_x_x_0_0_xx_yz_x_xz, g_x_x_0_0_xx_yz_x_yy, g_x_x_0_0_xx_yz_x_yz, g_x_x_0_0_xx_yz_x_zz, g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xxx_xyz_x_xx, g_xxx_xyz_x_xy, g_xxx_xyz_x_xz, g_xxx_xyz_x_yy, g_xxx_xyz_x_yz, g_xxx_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yz_x_xx[i] = -4.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xxx_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_x_xy[i] = -4.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xxx_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_x_xz[i] = -4.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xxx_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_x_yy[i] = -4.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xxx_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_x_yz[i] = -4.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xxx_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_x_zz[i] = -4.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xxx_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (78-84)

    #pragma omp simd aligned(g_x_x_0_0_xx_yz_y_xx, g_x_x_0_0_xx_yz_y_xy, g_x_x_0_0_xx_yz_y_xz, g_x_x_0_0_xx_yz_y_yy, g_x_x_0_0_xx_yz_y_yz, g_x_x_0_0_xx_yz_y_zz, g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xxx_xyz_y_xx, g_xxx_xyz_y_xy, g_xxx_xyz_y_xz, g_xxx_xyz_y_yy, g_xxx_xyz_y_yz, g_xxx_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yz_y_xx[i] = -4.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xxx_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_y_xy[i] = -4.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xxx_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_y_xz[i] = -4.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xxx_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_y_yy[i] = -4.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xxx_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_y_yz[i] = -4.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xxx_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_y_zz[i] = -4.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xxx_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (84-90)

    #pragma omp simd aligned(g_x_x_0_0_xx_yz_z_xx, g_x_x_0_0_xx_yz_z_xy, g_x_x_0_0_xx_yz_z_xz, g_x_x_0_0_xx_yz_z_yy, g_x_x_0_0_xx_yz_z_yz, g_x_x_0_0_xx_yz_z_zz, g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xxx_xyz_z_xx, g_xxx_xyz_z_xy, g_xxx_xyz_z_xz, g_xxx_xyz_z_yy, g_xxx_xyz_z_yz, g_xxx_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_yz_z_xx[i] = -4.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xxx_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_z_xy[i] = -4.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xxx_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_z_xz[i] = -4.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xxx_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_z_yy[i] = -4.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xxx_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_z_yz[i] = -4.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xxx_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_yz_z_zz[i] = -4.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xxx_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (90-96)

    #pragma omp simd aligned(g_x_x_0_0_xx_zz_x_xx, g_x_x_0_0_xx_zz_x_xy, g_x_x_0_0_xx_zz_x_xz, g_x_x_0_0_xx_zz_x_yy, g_x_x_0_0_xx_zz_x_yz, g_x_x_0_0_xx_zz_x_zz, g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_xxx_xzz_x_xx, g_xxx_xzz_x_xy, g_xxx_xzz_x_xz, g_xxx_xzz_x_yy, g_xxx_xzz_x_yz, g_xxx_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_zz_x_xx[i] = -4.0 * g_x_xzz_x_xx[i] * b_exp + 4.0 * g_xxx_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_x_xy[i] = -4.0 * g_x_xzz_x_xy[i] * b_exp + 4.0 * g_xxx_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_x_xz[i] = -4.0 * g_x_xzz_x_xz[i] * b_exp + 4.0 * g_xxx_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_x_yy[i] = -4.0 * g_x_xzz_x_yy[i] * b_exp + 4.0 * g_xxx_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_x_yz[i] = -4.0 * g_x_xzz_x_yz[i] * b_exp + 4.0 * g_xxx_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_x_zz[i] = -4.0 * g_x_xzz_x_zz[i] * b_exp + 4.0 * g_xxx_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (96-102)

    #pragma omp simd aligned(g_x_x_0_0_xx_zz_y_xx, g_x_x_0_0_xx_zz_y_xy, g_x_x_0_0_xx_zz_y_xz, g_x_x_0_0_xx_zz_y_yy, g_x_x_0_0_xx_zz_y_yz, g_x_x_0_0_xx_zz_y_zz, g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_xxx_xzz_y_xx, g_xxx_xzz_y_xy, g_xxx_xzz_y_xz, g_xxx_xzz_y_yy, g_xxx_xzz_y_yz, g_xxx_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_zz_y_xx[i] = -4.0 * g_x_xzz_y_xx[i] * b_exp + 4.0 * g_xxx_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_y_xy[i] = -4.0 * g_x_xzz_y_xy[i] * b_exp + 4.0 * g_xxx_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_y_xz[i] = -4.0 * g_x_xzz_y_xz[i] * b_exp + 4.0 * g_xxx_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_y_yy[i] = -4.0 * g_x_xzz_y_yy[i] * b_exp + 4.0 * g_xxx_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_y_yz[i] = -4.0 * g_x_xzz_y_yz[i] * b_exp + 4.0 * g_xxx_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_y_zz[i] = -4.0 * g_x_xzz_y_zz[i] * b_exp + 4.0 * g_xxx_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (102-108)

    #pragma omp simd aligned(g_x_x_0_0_xx_zz_z_xx, g_x_x_0_0_xx_zz_z_xy, g_x_x_0_0_xx_zz_z_xz, g_x_x_0_0_xx_zz_z_yy, g_x_x_0_0_xx_zz_z_yz, g_x_x_0_0_xx_zz_z_zz, g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_xxx_xzz_z_xx, g_xxx_xzz_z_xy, g_xxx_xzz_z_xz, g_xxx_xzz_z_yy, g_xxx_xzz_z_yz, g_xxx_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xx_zz_z_xx[i] = -4.0 * g_x_xzz_z_xx[i] * b_exp + 4.0 * g_xxx_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_z_xy[i] = -4.0 * g_x_xzz_z_xy[i] * b_exp + 4.0 * g_xxx_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_z_xz[i] = -4.0 * g_x_xzz_z_xz[i] * b_exp + 4.0 * g_xxx_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_z_yy[i] = -4.0 * g_x_xzz_z_yy[i] * b_exp + 4.0 * g_xxx_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_z_yz[i] = -4.0 * g_x_xzz_z_yz[i] * b_exp + 4.0 * g_xxx_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xx_zz_z_zz[i] = -4.0 * g_x_xzz_z_zz[i] * b_exp + 4.0 * g_xxx_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (108-114)

    #pragma omp simd aligned(g_x_x_0_0_xy_xx_x_xx, g_x_x_0_0_xy_xx_x_xy, g_x_x_0_0_xy_xx_x_xz, g_x_x_0_0_xy_xx_x_yy, g_x_x_0_0_xy_xx_x_yz, g_x_x_0_0_xy_xx_x_zz, g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xxx_x_xx, g_xxy_xxx_x_xy, g_xxy_xxx_x_xz, g_xxy_xxx_x_yy, g_xxy_xxx_x_yz, g_xxy_xxx_x_zz, g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xxx_x_xx, g_y_xxx_x_xy, g_y_xxx_x_xz, g_y_xxx_x_yy, g_y_xxx_x_yz, g_y_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xx_x_xx[i] = 2.0 * g_y_x_x_xx[i] - 2.0 * g_y_xxx_x_xx[i] * b_exp - 4.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_x_xy[i] = 2.0 * g_y_x_x_xy[i] - 2.0 * g_y_xxx_x_xy[i] * b_exp - 4.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_x_xz[i] = 2.0 * g_y_x_x_xz[i] - 2.0 * g_y_xxx_x_xz[i] * b_exp - 4.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_x_yy[i] = 2.0 * g_y_x_x_yy[i] - 2.0 * g_y_xxx_x_yy[i] * b_exp - 4.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_x_yz[i] = 2.0 * g_y_x_x_yz[i] - 2.0 * g_y_xxx_x_yz[i] * b_exp - 4.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_x_zz[i] = 2.0 * g_y_x_x_zz[i] - 2.0 * g_y_xxx_x_zz[i] * b_exp - 4.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (114-120)

    #pragma omp simd aligned(g_x_x_0_0_xy_xx_y_xx, g_x_x_0_0_xy_xx_y_xy, g_x_x_0_0_xy_xx_y_xz, g_x_x_0_0_xy_xx_y_yy, g_x_x_0_0_xy_xx_y_yz, g_x_x_0_0_xy_xx_y_zz, g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xxx_y_xx, g_xxy_xxx_y_xy, g_xxy_xxx_y_xz, g_xxy_xxx_y_yy, g_xxy_xxx_y_yz, g_xxy_xxx_y_zz, g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xxx_y_xx, g_y_xxx_y_xy, g_y_xxx_y_xz, g_y_xxx_y_yy, g_y_xxx_y_yz, g_y_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xx_y_xx[i] = 2.0 * g_y_x_y_xx[i] - 2.0 * g_y_xxx_y_xx[i] * b_exp - 4.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_y_xy[i] = 2.0 * g_y_x_y_xy[i] - 2.0 * g_y_xxx_y_xy[i] * b_exp - 4.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_y_xz[i] = 2.0 * g_y_x_y_xz[i] - 2.0 * g_y_xxx_y_xz[i] * b_exp - 4.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_y_yy[i] = 2.0 * g_y_x_y_yy[i] - 2.0 * g_y_xxx_y_yy[i] * b_exp - 4.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_y_yz[i] = 2.0 * g_y_x_y_yz[i] - 2.0 * g_y_xxx_y_yz[i] * b_exp - 4.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_y_zz[i] = 2.0 * g_y_x_y_zz[i] - 2.0 * g_y_xxx_y_zz[i] * b_exp - 4.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (120-126)

    #pragma omp simd aligned(g_x_x_0_0_xy_xx_z_xx, g_x_x_0_0_xy_xx_z_xy, g_x_x_0_0_xy_xx_z_xz, g_x_x_0_0_xy_xx_z_yy, g_x_x_0_0_xy_xx_z_yz, g_x_x_0_0_xy_xx_z_zz, g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xxx_z_xx, g_xxy_xxx_z_xy, g_xxy_xxx_z_xz, g_xxy_xxx_z_yy, g_xxy_xxx_z_yz, g_xxy_xxx_z_zz, g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xxx_z_xx, g_y_xxx_z_xy, g_y_xxx_z_xz, g_y_xxx_z_yy, g_y_xxx_z_yz, g_y_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xx_z_xx[i] = 2.0 * g_y_x_z_xx[i] - 2.0 * g_y_xxx_z_xx[i] * b_exp - 4.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_z_xy[i] = 2.0 * g_y_x_z_xy[i] - 2.0 * g_y_xxx_z_xy[i] * b_exp - 4.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_z_xz[i] = 2.0 * g_y_x_z_xz[i] - 2.0 * g_y_xxx_z_xz[i] * b_exp - 4.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_z_yy[i] = 2.0 * g_y_x_z_yy[i] - 2.0 * g_y_xxx_z_yy[i] * b_exp - 4.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_z_yz[i] = 2.0 * g_y_x_z_yz[i] - 2.0 * g_y_xxx_z_yz[i] * b_exp - 4.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xx_z_zz[i] = 2.0 * g_y_x_z_zz[i] - 2.0 * g_y_xxx_z_zz[i] * b_exp - 4.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (126-132)

    #pragma omp simd aligned(g_x_x_0_0_xy_xy_x_xx, g_x_x_0_0_xy_xy_x_xy, g_x_x_0_0_xy_xy_x_xz, g_x_x_0_0_xy_xy_x_yy, g_x_x_0_0_xy_xy_x_yz, g_x_x_0_0_xy_xy_x_zz, g_xxy_xxy_x_xx, g_xxy_xxy_x_xy, g_xxy_xxy_x_xz, g_xxy_xxy_x_yy, g_xxy_xxy_x_yz, g_xxy_xxy_x_zz, g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xy_x_xx[i] = g_y_y_x_xx[i] - 2.0 * g_y_xxy_x_xx[i] * b_exp - 2.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_x_xy[i] = g_y_y_x_xy[i] - 2.0 * g_y_xxy_x_xy[i] * b_exp - 2.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_x_xz[i] = g_y_y_x_xz[i] - 2.0 * g_y_xxy_x_xz[i] * b_exp - 2.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_x_yy[i] = g_y_y_x_yy[i] - 2.0 * g_y_xxy_x_yy[i] * b_exp - 2.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_x_yz[i] = g_y_y_x_yz[i] - 2.0 * g_y_xxy_x_yz[i] * b_exp - 2.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_x_zz[i] = g_y_y_x_zz[i] - 2.0 * g_y_xxy_x_zz[i] * b_exp - 2.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (132-138)

    #pragma omp simd aligned(g_x_x_0_0_xy_xy_y_xx, g_x_x_0_0_xy_xy_y_xy, g_x_x_0_0_xy_xy_y_xz, g_x_x_0_0_xy_xy_y_yy, g_x_x_0_0_xy_xy_y_yz, g_x_x_0_0_xy_xy_y_zz, g_xxy_xxy_y_xx, g_xxy_xxy_y_xy, g_xxy_xxy_y_xz, g_xxy_xxy_y_yy, g_xxy_xxy_y_yz, g_xxy_xxy_y_zz, g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xy_y_xx[i] = g_y_y_y_xx[i] - 2.0 * g_y_xxy_y_xx[i] * b_exp - 2.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_y_xy[i] = g_y_y_y_xy[i] - 2.0 * g_y_xxy_y_xy[i] * b_exp - 2.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_y_xz[i] = g_y_y_y_xz[i] - 2.0 * g_y_xxy_y_xz[i] * b_exp - 2.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_y_yy[i] = g_y_y_y_yy[i] - 2.0 * g_y_xxy_y_yy[i] * b_exp - 2.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_y_yz[i] = g_y_y_y_yz[i] - 2.0 * g_y_xxy_y_yz[i] * b_exp - 2.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_y_zz[i] = g_y_y_y_zz[i] - 2.0 * g_y_xxy_y_zz[i] * b_exp - 2.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (138-144)

    #pragma omp simd aligned(g_x_x_0_0_xy_xy_z_xx, g_x_x_0_0_xy_xy_z_xy, g_x_x_0_0_xy_xy_z_xz, g_x_x_0_0_xy_xy_z_yy, g_x_x_0_0_xy_xy_z_yz, g_x_x_0_0_xy_xy_z_zz, g_xxy_xxy_z_xx, g_xxy_xxy_z_xy, g_xxy_xxy_z_xz, g_xxy_xxy_z_yy, g_xxy_xxy_z_yz, g_xxy_xxy_z_zz, g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xy_z_xx[i] = g_y_y_z_xx[i] - 2.0 * g_y_xxy_z_xx[i] * b_exp - 2.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_z_xy[i] = g_y_y_z_xy[i] - 2.0 * g_y_xxy_z_xy[i] * b_exp - 2.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_z_xz[i] = g_y_y_z_xz[i] - 2.0 * g_y_xxy_z_xz[i] * b_exp - 2.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_z_yy[i] = g_y_y_z_yy[i] - 2.0 * g_y_xxy_z_yy[i] * b_exp - 2.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_z_yz[i] = g_y_y_z_yz[i] - 2.0 * g_y_xxy_z_yz[i] * b_exp - 2.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xy_z_zz[i] = g_y_y_z_zz[i] - 2.0 * g_y_xxy_z_zz[i] * b_exp - 2.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (144-150)

    #pragma omp simd aligned(g_x_x_0_0_xy_xz_x_xx, g_x_x_0_0_xy_xz_x_xy, g_x_x_0_0_xy_xz_x_xz, g_x_x_0_0_xy_xz_x_yy, g_x_x_0_0_xy_xz_x_yz, g_x_x_0_0_xy_xz_x_zz, g_xxy_xxz_x_xx, g_xxy_xxz_x_xy, g_xxy_xxz_x_xz, g_xxy_xxz_x_yy, g_xxy_xxz_x_yz, g_xxy_xxz_x_zz, g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xz_x_xx[i] = g_y_z_x_xx[i] - 2.0 * g_y_xxz_x_xx[i] * b_exp - 2.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_x_xy[i] = g_y_z_x_xy[i] - 2.0 * g_y_xxz_x_xy[i] * b_exp - 2.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_x_xz[i] = g_y_z_x_xz[i] - 2.0 * g_y_xxz_x_xz[i] * b_exp - 2.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_x_yy[i] = g_y_z_x_yy[i] - 2.0 * g_y_xxz_x_yy[i] * b_exp - 2.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_x_yz[i] = g_y_z_x_yz[i] - 2.0 * g_y_xxz_x_yz[i] * b_exp - 2.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_x_zz[i] = g_y_z_x_zz[i] - 2.0 * g_y_xxz_x_zz[i] * b_exp - 2.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (150-156)

    #pragma omp simd aligned(g_x_x_0_0_xy_xz_y_xx, g_x_x_0_0_xy_xz_y_xy, g_x_x_0_0_xy_xz_y_xz, g_x_x_0_0_xy_xz_y_yy, g_x_x_0_0_xy_xz_y_yz, g_x_x_0_0_xy_xz_y_zz, g_xxy_xxz_y_xx, g_xxy_xxz_y_xy, g_xxy_xxz_y_xz, g_xxy_xxz_y_yy, g_xxy_xxz_y_yz, g_xxy_xxz_y_zz, g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xz_y_xx[i] = g_y_z_y_xx[i] - 2.0 * g_y_xxz_y_xx[i] * b_exp - 2.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_y_xy[i] = g_y_z_y_xy[i] - 2.0 * g_y_xxz_y_xy[i] * b_exp - 2.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_y_xz[i] = g_y_z_y_xz[i] - 2.0 * g_y_xxz_y_xz[i] * b_exp - 2.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_y_yy[i] = g_y_z_y_yy[i] - 2.0 * g_y_xxz_y_yy[i] * b_exp - 2.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_y_yz[i] = g_y_z_y_yz[i] - 2.0 * g_y_xxz_y_yz[i] * b_exp - 2.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_y_zz[i] = g_y_z_y_zz[i] - 2.0 * g_y_xxz_y_zz[i] * b_exp - 2.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (156-162)

    #pragma omp simd aligned(g_x_x_0_0_xy_xz_z_xx, g_x_x_0_0_xy_xz_z_xy, g_x_x_0_0_xy_xz_z_xz, g_x_x_0_0_xy_xz_z_yy, g_x_x_0_0_xy_xz_z_yz, g_x_x_0_0_xy_xz_z_zz, g_xxy_xxz_z_xx, g_xxy_xxz_z_xy, g_xxy_xxz_z_xz, g_xxy_xxz_z_yy, g_xxy_xxz_z_yz, g_xxy_xxz_z_zz, g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_xz_z_xx[i] = g_y_z_z_xx[i] - 2.0 * g_y_xxz_z_xx[i] * b_exp - 2.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_z_xy[i] = g_y_z_z_xy[i] - 2.0 * g_y_xxz_z_xy[i] * b_exp - 2.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_z_xz[i] = g_y_z_z_xz[i] - 2.0 * g_y_xxz_z_xz[i] * b_exp - 2.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_z_yy[i] = g_y_z_z_yy[i] - 2.0 * g_y_xxz_z_yy[i] * b_exp - 2.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_z_yz[i] = g_y_z_z_yz[i] - 2.0 * g_y_xxz_z_yz[i] * b_exp - 2.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_xz_z_zz[i] = g_y_z_z_zz[i] - 2.0 * g_y_xxz_z_zz[i] * b_exp - 2.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (162-168)

    #pragma omp simd aligned(g_x_x_0_0_xy_yy_x_xx, g_x_x_0_0_xy_yy_x_xy, g_x_x_0_0_xy_yy_x_xz, g_x_x_0_0_xy_yy_x_yy, g_x_x_0_0_xy_yy_x_yz, g_x_x_0_0_xy_yy_x_zz, g_xxy_xyy_x_xx, g_xxy_xyy_x_xy, g_xxy_xyy_x_xz, g_xxy_xyy_x_yy, g_xxy_xyy_x_yz, g_xxy_xyy_x_zz, g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yy_x_xx[i] = -2.0 * g_y_xyy_x_xx[i] * b_exp + 4.0 * g_xxy_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_x_xy[i] = -2.0 * g_y_xyy_x_xy[i] * b_exp + 4.0 * g_xxy_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_x_xz[i] = -2.0 * g_y_xyy_x_xz[i] * b_exp + 4.0 * g_xxy_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_x_yy[i] = -2.0 * g_y_xyy_x_yy[i] * b_exp + 4.0 * g_xxy_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_x_yz[i] = -2.0 * g_y_xyy_x_yz[i] * b_exp + 4.0 * g_xxy_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_x_zz[i] = -2.0 * g_y_xyy_x_zz[i] * b_exp + 4.0 * g_xxy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (168-174)

    #pragma omp simd aligned(g_x_x_0_0_xy_yy_y_xx, g_x_x_0_0_xy_yy_y_xy, g_x_x_0_0_xy_yy_y_xz, g_x_x_0_0_xy_yy_y_yy, g_x_x_0_0_xy_yy_y_yz, g_x_x_0_0_xy_yy_y_zz, g_xxy_xyy_y_xx, g_xxy_xyy_y_xy, g_xxy_xyy_y_xz, g_xxy_xyy_y_yy, g_xxy_xyy_y_yz, g_xxy_xyy_y_zz, g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yy_y_xx[i] = -2.0 * g_y_xyy_y_xx[i] * b_exp + 4.0 * g_xxy_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_y_xy[i] = -2.0 * g_y_xyy_y_xy[i] * b_exp + 4.0 * g_xxy_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_y_xz[i] = -2.0 * g_y_xyy_y_xz[i] * b_exp + 4.0 * g_xxy_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_y_yy[i] = -2.0 * g_y_xyy_y_yy[i] * b_exp + 4.0 * g_xxy_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_y_yz[i] = -2.0 * g_y_xyy_y_yz[i] * b_exp + 4.0 * g_xxy_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_y_zz[i] = -2.0 * g_y_xyy_y_zz[i] * b_exp + 4.0 * g_xxy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (174-180)

    #pragma omp simd aligned(g_x_x_0_0_xy_yy_z_xx, g_x_x_0_0_xy_yy_z_xy, g_x_x_0_0_xy_yy_z_xz, g_x_x_0_0_xy_yy_z_yy, g_x_x_0_0_xy_yy_z_yz, g_x_x_0_0_xy_yy_z_zz, g_xxy_xyy_z_xx, g_xxy_xyy_z_xy, g_xxy_xyy_z_xz, g_xxy_xyy_z_yy, g_xxy_xyy_z_yz, g_xxy_xyy_z_zz, g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yy_z_xx[i] = -2.0 * g_y_xyy_z_xx[i] * b_exp + 4.0 * g_xxy_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_z_xy[i] = -2.0 * g_y_xyy_z_xy[i] * b_exp + 4.0 * g_xxy_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_z_xz[i] = -2.0 * g_y_xyy_z_xz[i] * b_exp + 4.0 * g_xxy_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_z_yy[i] = -2.0 * g_y_xyy_z_yy[i] * b_exp + 4.0 * g_xxy_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_z_yz[i] = -2.0 * g_y_xyy_z_yz[i] * b_exp + 4.0 * g_xxy_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yy_z_zz[i] = -2.0 * g_y_xyy_z_zz[i] * b_exp + 4.0 * g_xxy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (180-186)

    #pragma omp simd aligned(g_x_x_0_0_xy_yz_x_xx, g_x_x_0_0_xy_yz_x_xy, g_x_x_0_0_xy_yz_x_xz, g_x_x_0_0_xy_yz_x_yy, g_x_x_0_0_xy_yz_x_yz, g_x_x_0_0_xy_yz_x_zz, g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yz_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (186-192)

    #pragma omp simd aligned(g_x_x_0_0_xy_yz_y_xx, g_x_x_0_0_xy_yz_y_xy, g_x_x_0_0_xy_yz_y_xz, g_x_x_0_0_xy_yz_y_yy, g_x_x_0_0_xy_yz_y_yz, g_x_x_0_0_xy_yz_y_zz, g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yz_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (192-198)

    #pragma omp simd aligned(g_x_x_0_0_xy_yz_z_xx, g_x_x_0_0_xy_yz_z_xy, g_x_x_0_0_xy_yz_z_xz, g_x_x_0_0_xy_yz_z_yy, g_x_x_0_0_xy_yz_z_yz, g_x_x_0_0_xy_yz_z_zz, g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_yz_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_yz_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (198-204)

    #pragma omp simd aligned(g_x_x_0_0_xy_zz_x_xx, g_x_x_0_0_xy_zz_x_xy, g_x_x_0_0_xy_zz_x_xz, g_x_x_0_0_xy_zz_x_yy, g_x_x_0_0_xy_zz_x_yz, g_x_x_0_0_xy_zz_x_zz, g_xxy_xzz_x_xx, g_xxy_xzz_x_xy, g_xxy_xzz_x_xz, g_xxy_xzz_x_yy, g_xxy_xzz_x_yz, g_xxy_xzz_x_zz, g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_zz_x_xx[i] = -2.0 * g_y_xzz_x_xx[i] * b_exp + 4.0 * g_xxy_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_x_xy[i] = -2.0 * g_y_xzz_x_xy[i] * b_exp + 4.0 * g_xxy_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_x_xz[i] = -2.0 * g_y_xzz_x_xz[i] * b_exp + 4.0 * g_xxy_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_x_yy[i] = -2.0 * g_y_xzz_x_yy[i] * b_exp + 4.0 * g_xxy_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_x_yz[i] = -2.0 * g_y_xzz_x_yz[i] * b_exp + 4.0 * g_xxy_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_x_zz[i] = -2.0 * g_y_xzz_x_zz[i] * b_exp + 4.0 * g_xxy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (204-210)

    #pragma omp simd aligned(g_x_x_0_0_xy_zz_y_xx, g_x_x_0_0_xy_zz_y_xy, g_x_x_0_0_xy_zz_y_xz, g_x_x_0_0_xy_zz_y_yy, g_x_x_0_0_xy_zz_y_yz, g_x_x_0_0_xy_zz_y_zz, g_xxy_xzz_y_xx, g_xxy_xzz_y_xy, g_xxy_xzz_y_xz, g_xxy_xzz_y_yy, g_xxy_xzz_y_yz, g_xxy_xzz_y_zz, g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_zz_y_xx[i] = -2.0 * g_y_xzz_y_xx[i] * b_exp + 4.0 * g_xxy_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_y_xy[i] = -2.0 * g_y_xzz_y_xy[i] * b_exp + 4.0 * g_xxy_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_y_xz[i] = -2.0 * g_y_xzz_y_xz[i] * b_exp + 4.0 * g_xxy_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_y_yy[i] = -2.0 * g_y_xzz_y_yy[i] * b_exp + 4.0 * g_xxy_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_y_yz[i] = -2.0 * g_y_xzz_y_yz[i] * b_exp + 4.0 * g_xxy_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_y_zz[i] = -2.0 * g_y_xzz_y_zz[i] * b_exp + 4.0 * g_xxy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (210-216)

    #pragma omp simd aligned(g_x_x_0_0_xy_zz_z_xx, g_x_x_0_0_xy_zz_z_xy, g_x_x_0_0_xy_zz_z_xz, g_x_x_0_0_xy_zz_z_yy, g_x_x_0_0_xy_zz_z_yz, g_x_x_0_0_xy_zz_z_zz, g_xxy_xzz_z_xx, g_xxy_xzz_z_xy, g_xxy_xzz_z_xz, g_xxy_xzz_z_yy, g_xxy_xzz_z_yz, g_xxy_xzz_z_zz, g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xy_zz_z_xx[i] = -2.0 * g_y_xzz_z_xx[i] * b_exp + 4.0 * g_xxy_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_z_xy[i] = -2.0 * g_y_xzz_z_xy[i] * b_exp + 4.0 * g_xxy_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_z_xz[i] = -2.0 * g_y_xzz_z_xz[i] * b_exp + 4.0 * g_xxy_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_z_yy[i] = -2.0 * g_y_xzz_z_yy[i] * b_exp + 4.0 * g_xxy_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_z_yz[i] = -2.0 * g_y_xzz_z_yz[i] * b_exp + 4.0 * g_xxy_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xy_zz_z_zz[i] = -2.0 * g_y_xzz_z_zz[i] * b_exp + 4.0 * g_xxy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (216-222)

    #pragma omp simd aligned(g_x_x_0_0_xz_xx_x_xx, g_x_x_0_0_xz_xx_x_xy, g_x_x_0_0_xz_xx_x_xz, g_x_x_0_0_xz_xx_x_yy, g_x_x_0_0_xz_xx_x_yz, g_x_x_0_0_xz_xx_x_zz, g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xxx_x_xx, g_xxz_xxx_x_xy, g_xxz_xxx_x_xz, g_xxz_xxx_x_yy, g_xxz_xxx_x_yz, g_xxz_xxx_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xxx_x_xx, g_z_xxx_x_xy, g_z_xxx_x_xz, g_z_xxx_x_yy, g_z_xxx_x_yz, g_z_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xx_x_xx[i] = 2.0 * g_z_x_x_xx[i] - 2.0 * g_z_xxx_x_xx[i] * b_exp - 4.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_x_xy[i] = 2.0 * g_z_x_x_xy[i] - 2.0 * g_z_xxx_x_xy[i] * b_exp - 4.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_x_xz[i] = 2.0 * g_z_x_x_xz[i] - 2.0 * g_z_xxx_x_xz[i] * b_exp - 4.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_x_yy[i] = 2.0 * g_z_x_x_yy[i] - 2.0 * g_z_xxx_x_yy[i] * b_exp - 4.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_x_yz[i] = 2.0 * g_z_x_x_yz[i] - 2.0 * g_z_xxx_x_yz[i] * b_exp - 4.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_x_zz[i] = 2.0 * g_z_x_x_zz[i] - 2.0 * g_z_xxx_x_zz[i] * b_exp - 4.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (222-228)

    #pragma omp simd aligned(g_x_x_0_0_xz_xx_y_xx, g_x_x_0_0_xz_xx_y_xy, g_x_x_0_0_xz_xx_y_xz, g_x_x_0_0_xz_xx_y_yy, g_x_x_0_0_xz_xx_y_yz, g_x_x_0_0_xz_xx_y_zz, g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xxx_y_xx, g_xxz_xxx_y_xy, g_xxz_xxx_y_xz, g_xxz_xxx_y_yy, g_xxz_xxx_y_yz, g_xxz_xxx_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xxx_y_xx, g_z_xxx_y_xy, g_z_xxx_y_xz, g_z_xxx_y_yy, g_z_xxx_y_yz, g_z_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xx_y_xx[i] = 2.0 * g_z_x_y_xx[i] - 2.0 * g_z_xxx_y_xx[i] * b_exp - 4.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_y_xy[i] = 2.0 * g_z_x_y_xy[i] - 2.0 * g_z_xxx_y_xy[i] * b_exp - 4.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_y_xz[i] = 2.0 * g_z_x_y_xz[i] - 2.0 * g_z_xxx_y_xz[i] * b_exp - 4.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_y_yy[i] = 2.0 * g_z_x_y_yy[i] - 2.0 * g_z_xxx_y_yy[i] * b_exp - 4.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_y_yz[i] = 2.0 * g_z_x_y_yz[i] - 2.0 * g_z_xxx_y_yz[i] * b_exp - 4.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_y_zz[i] = 2.0 * g_z_x_y_zz[i] - 2.0 * g_z_xxx_y_zz[i] * b_exp - 4.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (228-234)

    #pragma omp simd aligned(g_x_x_0_0_xz_xx_z_xx, g_x_x_0_0_xz_xx_z_xy, g_x_x_0_0_xz_xx_z_xz, g_x_x_0_0_xz_xx_z_yy, g_x_x_0_0_xz_xx_z_yz, g_x_x_0_0_xz_xx_z_zz, g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xxx_z_xx, g_xxz_xxx_z_xy, g_xxz_xxx_z_xz, g_xxz_xxx_z_yy, g_xxz_xxx_z_yz, g_xxz_xxx_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xxx_z_xx, g_z_xxx_z_xy, g_z_xxx_z_xz, g_z_xxx_z_yy, g_z_xxx_z_yz, g_z_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xx_z_xx[i] = 2.0 * g_z_x_z_xx[i] - 2.0 * g_z_xxx_z_xx[i] * b_exp - 4.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_z_xy[i] = 2.0 * g_z_x_z_xy[i] - 2.0 * g_z_xxx_z_xy[i] * b_exp - 4.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_z_xz[i] = 2.0 * g_z_x_z_xz[i] - 2.0 * g_z_xxx_z_xz[i] * b_exp - 4.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_z_yy[i] = 2.0 * g_z_x_z_yy[i] - 2.0 * g_z_xxx_z_yy[i] * b_exp - 4.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_z_yz[i] = 2.0 * g_z_x_z_yz[i] - 2.0 * g_z_xxx_z_yz[i] * b_exp - 4.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xx_z_zz[i] = 2.0 * g_z_x_z_zz[i] - 2.0 * g_z_xxx_z_zz[i] * b_exp - 4.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (234-240)

    #pragma omp simd aligned(g_x_x_0_0_xz_xy_x_xx, g_x_x_0_0_xz_xy_x_xy, g_x_x_0_0_xz_xy_x_xz, g_x_x_0_0_xz_xy_x_yy, g_x_x_0_0_xz_xy_x_yz, g_x_x_0_0_xz_xy_x_zz, g_xxz_xxy_x_xx, g_xxz_xxy_x_xy, g_xxz_xxy_x_xz, g_xxz_xxy_x_yy, g_xxz_xxy_x_yz, g_xxz_xxy_x_zz, g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xy_x_xx[i] = g_z_y_x_xx[i] - 2.0 * g_z_xxy_x_xx[i] * b_exp - 2.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_x_xy[i] = g_z_y_x_xy[i] - 2.0 * g_z_xxy_x_xy[i] * b_exp - 2.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_x_xz[i] = g_z_y_x_xz[i] - 2.0 * g_z_xxy_x_xz[i] * b_exp - 2.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_x_yy[i] = g_z_y_x_yy[i] - 2.0 * g_z_xxy_x_yy[i] * b_exp - 2.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_x_yz[i] = g_z_y_x_yz[i] - 2.0 * g_z_xxy_x_yz[i] * b_exp - 2.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_x_zz[i] = g_z_y_x_zz[i] - 2.0 * g_z_xxy_x_zz[i] * b_exp - 2.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (240-246)

    #pragma omp simd aligned(g_x_x_0_0_xz_xy_y_xx, g_x_x_0_0_xz_xy_y_xy, g_x_x_0_0_xz_xy_y_xz, g_x_x_0_0_xz_xy_y_yy, g_x_x_0_0_xz_xy_y_yz, g_x_x_0_0_xz_xy_y_zz, g_xxz_xxy_y_xx, g_xxz_xxy_y_xy, g_xxz_xxy_y_xz, g_xxz_xxy_y_yy, g_xxz_xxy_y_yz, g_xxz_xxy_y_zz, g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xy_y_xx[i] = g_z_y_y_xx[i] - 2.0 * g_z_xxy_y_xx[i] * b_exp - 2.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_y_xy[i] = g_z_y_y_xy[i] - 2.0 * g_z_xxy_y_xy[i] * b_exp - 2.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_y_xz[i] = g_z_y_y_xz[i] - 2.0 * g_z_xxy_y_xz[i] * b_exp - 2.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_y_yy[i] = g_z_y_y_yy[i] - 2.0 * g_z_xxy_y_yy[i] * b_exp - 2.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_y_yz[i] = g_z_y_y_yz[i] - 2.0 * g_z_xxy_y_yz[i] * b_exp - 2.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_y_zz[i] = g_z_y_y_zz[i] - 2.0 * g_z_xxy_y_zz[i] * b_exp - 2.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (246-252)

    #pragma omp simd aligned(g_x_x_0_0_xz_xy_z_xx, g_x_x_0_0_xz_xy_z_xy, g_x_x_0_0_xz_xy_z_xz, g_x_x_0_0_xz_xy_z_yy, g_x_x_0_0_xz_xy_z_yz, g_x_x_0_0_xz_xy_z_zz, g_xxz_xxy_z_xx, g_xxz_xxy_z_xy, g_xxz_xxy_z_xz, g_xxz_xxy_z_yy, g_xxz_xxy_z_yz, g_xxz_xxy_z_zz, g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xy_z_xx[i] = g_z_y_z_xx[i] - 2.0 * g_z_xxy_z_xx[i] * b_exp - 2.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_z_xy[i] = g_z_y_z_xy[i] - 2.0 * g_z_xxy_z_xy[i] * b_exp - 2.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_z_xz[i] = g_z_y_z_xz[i] - 2.0 * g_z_xxy_z_xz[i] * b_exp - 2.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_z_yy[i] = g_z_y_z_yy[i] - 2.0 * g_z_xxy_z_yy[i] * b_exp - 2.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_z_yz[i] = g_z_y_z_yz[i] - 2.0 * g_z_xxy_z_yz[i] * b_exp - 2.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xy_z_zz[i] = g_z_y_z_zz[i] - 2.0 * g_z_xxy_z_zz[i] * b_exp - 2.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (252-258)

    #pragma omp simd aligned(g_x_x_0_0_xz_xz_x_xx, g_x_x_0_0_xz_xz_x_xy, g_x_x_0_0_xz_xz_x_xz, g_x_x_0_0_xz_xz_x_yy, g_x_x_0_0_xz_xz_x_yz, g_x_x_0_0_xz_xz_x_zz, g_xxz_xxz_x_xx, g_xxz_xxz_x_xy, g_xxz_xxz_x_xz, g_xxz_xxz_x_yy, g_xxz_xxz_x_yz, g_xxz_xxz_x_zz, g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xz_x_xx[i] = g_z_z_x_xx[i] - 2.0 * g_z_xxz_x_xx[i] * b_exp - 2.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_x_xy[i] = g_z_z_x_xy[i] - 2.0 * g_z_xxz_x_xy[i] * b_exp - 2.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_x_xz[i] = g_z_z_x_xz[i] - 2.0 * g_z_xxz_x_xz[i] * b_exp - 2.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_x_yy[i] = g_z_z_x_yy[i] - 2.0 * g_z_xxz_x_yy[i] * b_exp - 2.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_x_yz[i] = g_z_z_x_yz[i] - 2.0 * g_z_xxz_x_yz[i] * b_exp - 2.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_x_zz[i] = g_z_z_x_zz[i] - 2.0 * g_z_xxz_x_zz[i] * b_exp - 2.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (258-264)

    #pragma omp simd aligned(g_x_x_0_0_xz_xz_y_xx, g_x_x_0_0_xz_xz_y_xy, g_x_x_0_0_xz_xz_y_xz, g_x_x_0_0_xz_xz_y_yy, g_x_x_0_0_xz_xz_y_yz, g_x_x_0_0_xz_xz_y_zz, g_xxz_xxz_y_xx, g_xxz_xxz_y_xy, g_xxz_xxz_y_xz, g_xxz_xxz_y_yy, g_xxz_xxz_y_yz, g_xxz_xxz_y_zz, g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xz_y_xx[i] = g_z_z_y_xx[i] - 2.0 * g_z_xxz_y_xx[i] * b_exp - 2.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_y_xy[i] = g_z_z_y_xy[i] - 2.0 * g_z_xxz_y_xy[i] * b_exp - 2.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_y_xz[i] = g_z_z_y_xz[i] - 2.0 * g_z_xxz_y_xz[i] * b_exp - 2.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_y_yy[i] = g_z_z_y_yy[i] - 2.0 * g_z_xxz_y_yy[i] * b_exp - 2.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_y_yz[i] = g_z_z_y_yz[i] - 2.0 * g_z_xxz_y_yz[i] * b_exp - 2.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_y_zz[i] = g_z_z_y_zz[i] - 2.0 * g_z_xxz_y_zz[i] * b_exp - 2.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (264-270)

    #pragma omp simd aligned(g_x_x_0_0_xz_xz_z_xx, g_x_x_0_0_xz_xz_z_xy, g_x_x_0_0_xz_xz_z_xz, g_x_x_0_0_xz_xz_z_yy, g_x_x_0_0_xz_xz_z_yz, g_x_x_0_0_xz_xz_z_zz, g_xxz_xxz_z_xx, g_xxz_xxz_z_xy, g_xxz_xxz_z_xz, g_xxz_xxz_z_yy, g_xxz_xxz_z_yz, g_xxz_xxz_z_zz, g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_xz_z_xx[i] = g_z_z_z_xx[i] - 2.0 * g_z_xxz_z_xx[i] * b_exp - 2.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_z_xy[i] = g_z_z_z_xy[i] - 2.0 * g_z_xxz_z_xy[i] * b_exp - 2.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_z_xz[i] = g_z_z_z_xz[i] - 2.0 * g_z_xxz_z_xz[i] * b_exp - 2.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_z_yy[i] = g_z_z_z_yy[i] - 2.0 * g_z_xxz_z_yy[i] * b_exp - 2.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_z_yz[i] = g_z_z_z_yz[i] - 2.0 * g_z_xxz_z_yz[i] * b_exp - 2.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_xz_z_zz[i] = g_z_z_z_zz[i] - 2.0 * g_z_xxz_z_zz[i] * b_exp - 2.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (270-276)

    #pragma omp simd aligned(g_x_x_0_0_xz_yy_x_xx, g_x_x_0_0_xz_yy_x_xy, g_x_x_0_0_xz_yy_x_xz, g_x_x_0_0_xz_yy_x_yy, g_x_x_0_0_xz_yy_x_yz, g_x_x_0_0_xz_yy_x_zz, g_xxz_xyy_x_xx, g_xxz_xyy_x_xy, g_xxz_xyy_x_xz, g_xxz_xyy_x_yy, g_xxz_xyy_x_yz, g_xxz_xyy_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yy_x_xx[i] = -2.0 * g_z_xyy_x_xx[i] * b_exp + 4.0 * g_xxz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_x_xy[i] = -2.0 * g_z_xyy_x_xy[i] * b_exp + 4.0 * g_xxz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_x_xz[i] = -2.0 * g_z_xyy_x_xz[i] * b_exp + 4.0 * g_xxz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_x_yy[i] = -2.0 * g_z_xyy_x_yy[i] * b_exp + 4.0 * g_xxz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_x_yz[i] = -2.0 * g_z_xyy_x_yz[i] * b_exp + 4.0 * g_xxz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_x_zz[i] = -2.0 * g_z_xyy_x_zz[i] * b_exp + 4.0 * g_xxz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (276-282)

    #pragma omp simd aligned(g_x_x_0_0_xz_yy_y_xx, g_x_x_0_0_xz_yy_y_xy, g_x_x_0_0_xz_yy_y_xz, g_x_x_0_0_xz_yy_y_yy, g_x_x_0_0_xz_yy_y_yz, g_x_x_0_0_xz_yy_y_zz, g_xxz_xyy_y_xx, g_xxz_xyy_y_xy, g_xxz_xyy_y_xz, g_xxz_xyy_y_yy, g_xxz_xyy_y_yz, g_xxz_xyy_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yy_y_xx[i] = -2.0 * g_z_xyy_y_xx[i] * b_exp + 4.0 * g_xxz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_y_xy[i] = -2.0 * g_z_xyy_y_xy[i] * b_exp + 4.0 * g_xxz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_y_xz[i] = -2.0 * g_z_xyy_y_xz[i] * b_exp + 4.0 * g_xxz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_y_yy[i] = -2.0 * g_z_xyy_y_yy[i] * b_exp + 4.0 * g_xxz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_y_yz[i] = -2.0 * g_z_xyy_y_yz[i] * b_exp + 4.0 * g_xxz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_y_zz[i] = -2.0 * g_z_xyy_y_zz[i] * b_exp + 4.0 * g_xxz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (282-288)

    #pragma omp simd aligned(g_x_x_0_0_xz_yy_z_xx, g_x_x_0_0_xz_yy_z_xy, g_x_x_0_0_xz_yy_z_xz, g_x_x_0_0_xz_yy_z_yy, g_x_x_0_0_xz_yy_z_yz, g_x_x_0_0_xz_yy_z_zz, g_xxz_xyy_z_xx, g_xxz_xyy_z_xy, g_xxz_xyy_z_xz, g_xxz_xyy_z_yy, g_xxz_xyy_z_yz, g_xxz_xyy_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yy_z_xx[i] = -2.0 * g_z_xyy_z_xx[i] * b_exp + 4.0 * g_xxz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_z_xy[i] = -2.0 * g_z_xyy_z_xy[i] * b_exp + 4.0 * g_xxz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_z_xz[i] = -2.0 * g_z_xyy_z_xz[i] * b_exp + 4.0 * g_xxz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_z_yy[i] = -2.0 * g_z_xyy_z_yy[i] * b_exp + 4.0 * g_xxz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_z_yz[i] = -2.0 * g_z_xyy_z_yz[i] * b_exp + 4.0 * g_xxz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yy_z_zz[i] = -2.0 * g_z_xyy_z_zz[i] * b_exp + 4.0 * g_xxz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (288-294)

    #pragma omp simd aligned(g_x_x_0_0_xz_yz_x_xx, g_x_x_0_0_xz_yz_x_xy, g_x_x_0_0_xz_yz_x_xz, g_x_x_0_0_xz_yz_x_yy, g_x_x_0_0_xz_yz_x_yz, g_x_x_0_0_xz_yz_x_zz, g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yz_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (294-300)

    #pragma omp simd aligned(g_x_x_0_0_xz_yz_y_xx, g_x_x_0_0_xz_yz_y_xy, g_x_x_0_0_xz_yz_y_xz, g_x_x_0_0_xz_yz_y_yy, g_x_x_0_0_xz_yz_y_yz, g_x_x_0_0_xz_yz_y_zz, g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yz_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (300-306)

    #pragma omp simd aligned(g_x_x_0_0_xz_yz_z_xx, g_x_x_0_0_xz_yz_z_xy, g_x_x_0_0_xz_yz_z_xz, g_x_x_0_0_xz_yz_z_yy, g_x_x_0_0_xz_yz_z_yz, g_x_x_0_0_xz_yz_z_zz, g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_yz_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_yz_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (306-312)

    #pragma omp simd aligned(g_x_x_0_0_xz_zz_x_xx, g_x_x_0_0_xz_zz_x_xy, g_x_x_0_0_xz_zz_x_xz, g_x_x_0_0_xz_zz_x_yy, g_x_x_0_0_xz_zz_x_yz, g_x_x_0_0_xz_zz_x_zz, g_xxz_xzz_x_xx, g_xxz_xzz_x_xy, g_xxz_xzz_x_xz, g_xxz_xzz_x_yy, g_xxz_xzz_x_yz, g_xxz_xzz_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_zz_x_xx[i] = -2.0 * g_z_xzz_x_xx[i] * b_exp + 4.0 * g_xxz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_x_xy[i] = -2.0 * g_z_xzz_x_xy[i] * b_exp + 4.0 * g_xxz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_x_xz[i] = -2.0 * g_z_xzz_x_xz[i] * b_exp + 4.0 * g_xxz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_x_yy[i] = -2.0 * g_z_xzz_x_yy[i] * b_exp + 4.0 * g_xxz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_x_yz[i] = -2.0 * g_z_xzz_x_yz[i] * b_exp + 4.0 * g_xxz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_x_zz[i] = -2.0 * g_z_xzz_x_zz[i] * b_exp + 4.0 * g_xxz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (312-318)

    #pragma omp simd aligned(g_x_x_0_0_xz_zz_y_xx, g_x_x_0_0_xz_zz_y_xy, g_x_x_0_0_xz_zz_y_xz, g_x_x_0_0_xz_zz_y_yy, g_x_x_0_0_xz_zz_y_yz, g_x_x_0_0_xz_zz_y_zz, g_xxz_xzz_y_xx, g_xxz_xzz_y_xy, g_xxz_xzz_y_xz, g_xxz_xzz_y_yy, g_xxz_xzz_y_yz, g_xxz_xzz_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_zz_y_xx[i] = -2.0 * g_z_xzz_y_xx[i] * b_exp + 4.0 * g_xxz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_y_xy[i] = -2.0 * g_z_xzz_y_xy[i] * b_exp + 4.0 * g_xxz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_y_xz[i] = -2.0 * g_z_xzz_y_xz[i] * b_exp + 4.0 * g_xxz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_y_yy[i] = -2.0 * g_z_xzz_y_yy[i] * b_exp + 4.0 * g_xxz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_y_yz[i] = -2.0 * g_z_xzz_y_yz[i] * b_exp + 4.0 * g_xxz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_y_zz[i] = -2.0 * g_z_xzz_y_zz[i] * b_exp + 4.0 * g_xxz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (318-324)

    #pragma omp simd aligned(g_x_x_0_0_xz_zz_z_xx, g_x_x_0_0_xz_zz_z_xy, g_x_x_0_0_xz_zz_z_xz, g_x_x_0_0_xz_zz_z_yy, g_x_x_0_0_xz_zz_z_yz, g_x_x_0_0_xz_zz_z_zz, g_xxz_xzz_z_xx, g_xxz_xzz_z_xy, g_xxz_xzz_z_xz, g_xxz_xzz_z_yy, g_xxz_xzz_z_yz, g_xxz_xzz_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_xz_zz_z_xx[i] = -2.0 * g_z_xzz_z_xx[i] * b_exp + 4.0 * g_xxz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_z_xy[i] = -2.0 * g_z_xzz_z_xy[i] * b_exp + 4.0 * g_xxz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_z_xz[i] = -2.0 * g_z_xzz_z_xz[i] * b_exp + 4.0 * g_xxz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_z_yy[i] = -2.0 * g_z_xzz_z_yy[i] * b_exp + 4.0 * g_xxz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_z_yz[i] = -2.0 * g_z_xzz_z_yz[i] * b_exp + 4.0 * g_xxz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_xz_zz_z_zz[i] = -2.0 * g_z_xzz_z_zz[i] * b_exp + 4.0 * g_xxz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (324-330)

    #pragma omp simd aligned(g_x_x_0_0_yy_xx_x_xx, g_x_x_0_0_yy_xx_x_xy, g_x_x_0_0_yy_xx_x_xz, g_x_x_0_0_yy_xx_x_yy, g_x_x_0_0_yy_xx_x_yz, g_x_x_0_0_yy_xx_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xxx_x_xx, g_xyy_xxx_x_xy, g_xyy_xxx_x_xz, g_xyy_xxx_x_yy, g_xyy_xxx_x_yz, g_xyy_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xx_x_xx[i] = -4.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_x_xy[i] = -4.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_x_xz[i] = -4.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_x_yy[i] = -4.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_x_yz[i] = -4.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_x_zz[i] = -4.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (330-336)

    #pragma omp simd aligned(g_x_x_0_0_yy_xx_y_xx, g_x_x_0_0_yy_xx_y_xy, g_x_x_0_0_yy_xx_y_xz, g_x_x_0_0_yy_xx_y_yy, g_x_x_0_0_yy_xx_y_yz, g_x_x_0_0_yy_xx_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xxx_y_xx, g_xyy_xxx_y_xy, g_xyy_xxx_y_xz, g_xyy_xxx_y_yy, g_xyy_xxx_y_yz, g_xyy_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xx_y_xx[i] = -4.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_y_xy[i] = -4.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_y_xz[i] = -4.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_y_yy[i] = -4.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_y_yz[i] = -4.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_y_zz[i] = -4.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (336-342)

    #pragma omp simd aligned(g_x_x_0_0_yy_xx_z_xx, g_x_x_0_0_yy_xx_z_xy, g_x_x_0_0_yy_xx_z_xz, g_x_x_0_0_yy_xx_z_yy, g_x_x_0_0_yy_xx_z_yz, g_x_x_0_0_yy_xx_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xxx_z_xx, g_xyy_xxx_z_xy, g_xyy_xxx_z_xz, g_xyy_xxx_z_yy, g_xyy_xxx_z_yz, g_xyy_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xx_z_xx[i] = -4.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_z_xy[i] = -4.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_z_xz[i] = -4.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_z_yy[i] = -4.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_z_yz[i] = -4.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xx_z_zz[i] = -4.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (342-348)

    #pragma omp simd aligned(g_x_x_0_0_yy_xy_x_xx, g_x_x_0_0_yy_xy_x_xy, g_x_x_0_0_yy_xy_x_xz, g_x_x_0_0_yy_xy_x_yy, g_x_x_0_0_yy_xy_x_yz, g_x_x_0_0_yy_xy_x_zz, g_xyy_xxy_x_xx, g_xyy_xxy_x_xy, g_xyy_xxy_x_xz, g_xyy_xxy_x_yy, g_xyy_xxy_x_yz, g_xyy_xxy_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xy_x_xx[i] = -2.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_x_xy[i] = -2.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_x_xz[i] = -2.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_x_yy[i] = -2.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_x_yz[i] = -2.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_x_zz[i] = -2.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (348-354)

    #pragma omp simd aligned(g_x_x_0_0_yy_xy_y_xx, g_x_x_0_0_yy_xy_y_xy, g_x_x_0_0_yy_xy_y_xz, g_x_x_0_0_yy_xy_y_yy, g_x_x_0_0_yy_xy_y_yz, g_x_x_0_0_yy_xy_y_zz, g_xyy_xxy_y_xx, g_xyy_xxy_y_xy, g_xyy_xxy_y_xz, g_xyy_xxy_y_yy, g_xyy_xxy_y_yz, g_xyy_xxy_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xy_y_xx[i] = -2.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_y_xy[i] = -2.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_y_xz[i] = -2.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_y_yy[i] = -2.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_y_yz[i] = -2.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_y_zz[i] = -2.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (354-360)

    #pragma omp simd aligned(g_x_x_0_0_yy_xy_z_xx, g_x_x_0_0_yy_xy_z_xy, g_x_x_0_0_yy_xy_z_xz, g_x_x_0_0_yy_xy_z_yy, g_x_x_0_0_yy_xy_z_yz, g_x_x_0_0_yy_xy_z_zz, g_xyy_xxy_z_xx, g_xyy_xxy_z_xy, g_xyy_xxy_z_xz, g_xyy_xxy_z_yy, g_xyy_xxy_z_yz, g_xyy_xxy_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xy_z_xx[i] = -2.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_z_xy[i] = -2.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_z_xz[i] = -2.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_z_yy[i] = -2.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_z_yz[i] = -2.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xy_z_zz[i] = -2.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (360-366)

    #pragma omp simd aligned(g_x_x_0_0_yy_xz_x_xx, g_x_x_0_0_yy_xz_x_xy, g_x_x_0_0_yy_xz_x_xz, g_x_x_0_0_yy_xz_x_yy, g_x_x_0_0_yy_xz_x_yz, g_x_x_0_0_yy_xz_x_zz, g_xyy_xxz_x_xx, g_xyy_xxz_x_xy, g_xyy_xxz_x_xz, g_xyy_xxz_x_yy, g_xyy_xxz_x_yz, g_xyy_xxz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xz_x_xx[i] = -2.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_x_xy[i] = -2.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_x_xz[i] = -2.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_x_yy[i] = -2.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_x_yz[i] = -2.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_x_zz[i] = -2.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (366-372)

    #pragma omp simd aligned(g_x_x_0_0_yy_xz_y_xx, g_x_x_0_0_yy_xz_y_xy, g_x_x_0_0_yy_xz_y_xz, g_x_x_0_0_yy_xz_y_yy, g_x_x_0_0_yy_xz_y_yz, g_x_x_0_0_yy_xz_y_zz, g_xyy_xxz_y_xx, g_xyy_xxz_y_xy, g_xyy_xxz_y_xz, g_xyy_xxz_y_yy, g_xyy_xxz_y_yz, g_xyy_xxz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xz_y_xx[i] = -2.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_y_xy[i] = -2.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_y_xz[i] = -2.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_y_yy[i] = -2.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_y_yz[i] = -2.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_y_zz[i] = -2.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (372-378)

    #pragma omp simd aligned(g_x_x_0_0_yy_xz_z_xx, g_x_x_0_0_yy_xz_z_xy, g_x_x_0_0_yy_xz_z_xz, g_x_x_0_0_yy_xz_z_yy, g_x_x_0_0_yy_xz_z_yz, g_x_x_0_0_yy_xz_z_zz, g_xyy_xxz_z_xx, g_xyy_xxz_z_xy, g_xyy_xxz_z_xz, g_xyy_xxz_z_yy, g_xyy_xxz_z_yz, g_xyy_xxz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_xz_z_xx[i] = -2.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_z_xy[i] = -2.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_z_xz[i] = -2.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_z_yy[i] = -2.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_z_yz[i] = -2.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_xz_z_zz[i] = -2.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (378-384)

    #pragma omp simd aligned(g_x_x_0_0_yy_yy_x_xx, g_x_x_0_0_yy_yy_x_xy, g_x_x_0_0_yy_yy_x_xz, g_x_x_0_0_yy_yy_x_yy, g_x_x_0_0_yy_yy_x_yz, g_x_x_0_0_yy_yy_x_zz, g_xyy_xyy_x_xx, g_xyy_xyy_x_xy, g_xyy_xyy_x_xz, g_xyy_xyy_x_yy, g_xyy_xyy_x_yz, g_xyy_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yy_x_xx[i] = 4.0 * g_xyy_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_x_xy[i] = 4.0 * g_xyy_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_x_xz[i] = 4.0 * g_xyy_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_x_yy[i] = 4.0 * g_xyy_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_x_yz[i] = 4.0 * g_xyy_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_x_zz[i] = 4.0 * g_xyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (384-390)

    #pragma omp simd aligned(g_x_x_0_0_yy_yy_y_xx, g_x_x_0_0_yy_yy_y_xy, g_x_x_0_0_yy_yy_y_xz, g_x_x_0_0_yy_yy_y_yy, g_x_x_0_0_yy_yy_y_yz, g_x_x_0_0_yy_yy_y_zz, g_xyy_xyy_y_xx, g_xyy_xyy_y_xy, g_xyy_xyy_y_xz, g_xyy_xyy_y_yy, g_xyy_xyy_y_yz, g_xyy_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yy_y_xx[i] = 4.0 * g_xyy_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_y_xy[i] = 4.0 * g_xyy_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_y_xz[i] = 4.0 * g_xyy_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_y_yy[i] = 4.0 * g_xyy_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_y_yz[i] = 4.0 * g_xyy_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_y_zz[i] = 4.0 * g_xyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (390-396)

    #pragma omp simd aligned(g_x_x_0_0_yy_yy_z_xx, g_x_x_0_0_yy_yy_z_xy, g_x_x_0_0_yy_yy_z_xz, g_x_x_0_0_yy_yy_z_yy, g_x_x_0_0_yy_yy_z_yz, g_x_x_0_0_yy_yy_z_zz, g_xyy_xyy_z_xx, g_xyy_xyy_z_xy, g_xyy_xyy_z_xz, g_xyy_xyy_z_yy, g_xyy_xyy_z_yz, g_xyy_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yy_z_xx[i] = 4.0 * g_xyy_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_z_xy[i] = 4.0 * g_xyy_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_z_xz[i] = 4.0 * g_xyy_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_z_yy[i] = 4.0 * g_xyy_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_z_yz[i] = 4.0 * g_xyy_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yy_z_zz[i] = 4.0 * g_xyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (396-402)

    #pragma omp simd aligned(g_x_x_0_0_yy_yz_x_xx, g_x_x_0_0_yy_yz_x_xy, g_x_x_0_0_yy_yz_x_xz, g_x_x_0_0_yy_yz_x_yy, g_x_x_0_0_yy_yz_x_yz, g_x_x_0_0_yy_yz_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yz_x_xx[i] = 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_x_xy[i] = 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_x_xz[i] = 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_x_yy[i] = 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_x_yz[i] = 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_x_zz[i] = 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (402-408)

    #pragma omp simd aligned(g_x_x_0_0_yy_yz_y_xx, g_x_x_0_0_yy_yz_y_xy, g_x_x_0_0_yy_yz_y_xz, g_x_x_0_0_yy_yz_y_yy, g_x_x_0_0_yy_yz_y_yz, g_x_x_0_0_yy_yz_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yz_y_xx[i] = 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_y_xy[i] = 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_y_xz[i] = 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_y_yy[i] = 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_y_yz[i] = 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_y_zz[i] = 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (408-414)

    #pragma omp simd aligned(g_x_x_0_0_yy_yz_z_xx, g_x_x_0_0_yy_yz_z_xy, g_x_x_0_0_yy_yz_z_xz, g_x_x_0_0_yy_yz_z_yy, g_x_x_0_0_yy_yz_z_yz, g_x_x_0_0_yy_yz_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_yz_z_xx[i] = 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_z_xy[i] = 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_z_xz[i] = 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_z_yy[i] = 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_z_yz[i] = 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_yz_z_zz[i] = 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (414-420)

    #pragma omp simd aligned(g_x_x_0_0_yy_zz_x_xx, g_x_x_0_0_yy_zz_x_xy, g_x_x_0_0_yy_zz_x_xz, g_x_x_0_0_yy_zz_x_yy, g_x_x_0_0_yy_zz_x_yz, g_x_x_0_0_yy_zz_x_zz, g_xyy_xzz_x_xx, g_xyy_xzz_x_xy, g_xyy_xzz_x_xz, g_xyy_xzz_x_yy, g_xyy_xzz_x_yz, g_xyy_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_zz_x_xx[i] = 4.0 * g_xyy_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_x_xy[i] = 4.0 * g_xyy_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_x_xz[i] = 4.0 * g_xyy_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_x_yy[i] = 4.0 * g_xyy_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_x_yz[i] = 4.0 * g_xyy_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_x_zz[i] = 4.0 * g_xyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (420-426)

    #pragma omp simd aligned(g_x_x_0_0_yy_zz_y_xx, g_x_x_0_0_yy_zz_y_xy, g_x_x_0_0_yy_zz_y_xz, g_x_x_0_0_yy_zz_y_yy, g_x_x_0_0_yy_zz_y_yz, g_x_x_0_0_yy_zz_y_zz, g_xyy_xzz_y_xx, g_xyy_xzz_y_xy, g_xyy_xzz_y_xz, g_xyy_xzz_y_yy, g_xyy_xzz_y_yz, g_xyy_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_zz_y_xx[i] = 4.0 * g_xyy_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_y_xy[i] = 4.0 * g_xyy_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_y_xz[i] = 4.0 * g_xyy_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_y_yy[i] = 4.0 * g_xyy_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_y_yz[i] = 4.0 * g_xyy_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_y_zz[i] = 4.0 * g_xyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (426-432)

    #pragma omp simd aligned(g_x_x_0_0_yy_zz_z_xx, g_x_x_0_0_yy_zz_z_xy, g_x_x_0_0_yy_zz_z_xz, g_x_x_0_0_yy_zz_z_yy, g_x_x_0_0_yy_zz_z_yz, g_x_x_0_0_yy_zz_z_zz, g_xyy_xzz_z_xx, g_xyy_xzz_z_xy, g_xyy_xzz_z_xz, g_xyy_xzz_z_yy, g_xyy_xzz_z_yz, g_xyy_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yy_zz_z_xx[i] = 4.0 * g_xyy_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_z_xy[i] = 4.0 * g_xyy_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_z_xz[i] = 4.0 * g_xyy_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_z_yy[i] = 4.0 * g_xyy_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_z_yz[i] = 4.0 * g_xyy_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yy_zz_z_zz[i] = 4.0 * g_xyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (432-438)

    #pragma omp simd aligned(g_x_x_0_0_yz_xx_x_xx, g_x_x_0_0_yz_xx_x_xy, g_x_x_0_0_yz_xx_x_xz, g_x_x_0_0_yz_xx_x_yy, g_x_x_0_0_yz_xx_x_yz, g_x_x_0_0_yz_xx_x_zz, g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xxx_x_xx, g_xyz_xxx_x_xy, g_xyz_xxx_x_xz, g_xyz_xxx_x_yy, g_xyz_xxx_x_yz, g_xyz_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xx_x_xx[i] = -4.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_x_xy[i] = -4.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_x_xz[i] = -4.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_x_yy[i] = -4.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_x_yz[i] = -4.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_x_zz[i] = -4.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (438-444)

    #pragma omp simd aligned(g_x_x_0_0_yz_xx_y_xx, g_x_x_0_0_yz_xx_y_xy, g_x_x_0_0_yz_xx_y_xz, g_x_x_0_0_yz_xx_y_yy, g_x_x_0_0_yz_xx_y_yz, g_x_x_0_0_yz_xx_y_zz, g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xxx_y_xx, g_xyz_xxx_y_xy, g_xyz_xxx_y_xz, g_xyz_xxx_y_yy, g_xyz_xxx_y_yz, g_xyz_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xx_y_xx[i] = -4.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_y_xy[i] = -4.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_y_xz[i] = -4.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_y_yy[i] = -4.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_y_yz[i] = -4.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_y_zz[i] = -4.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (444-450)

    #pragma omp simd aligned(g_x_x_0_0_yz_xx_z_xx, g_x_x_0_0_yz_xx_z_xy, g_x_x_0_0_yz_xx_z_xz, g_x_x_0_0_yz_xx_z_yy, g_x_x_0_0_yz_xx_z_yz, g_x_x_0_0_yz_xx_z_zz, g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xxx_z_xx, g_xyz_xxx_z_xy, g_xyz_xxx_z_xz, g_xyz_xxx_z_yy, g_xyz_xxx_z_yz, g_xyz_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xx_z_xx[i] = -4.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_z_xy[i] = -4.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_z_xz[i] = -4.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_z_yy[i] = -4.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_z_yz[i] = -4.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xx_z_zz[i] = -4.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (450-456)

    #pragma omp simd aligned(g_x_x_0_0_yz_xy_x_xx, g_x_x_0_0_yz_xy_x_xy, g_x_x_0_0_yz_xy_x_xz, g_x_x_0_0_yz_xy_x_yy, g_x_x_0_0_yz_xy_x_yz, g_x_x_0_0_yz_xy_x_zz, g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz, g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xy_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (456-462)

    #pragma omp simd aligned(g_x_x_0_0_yz_xy_y_xx, g_x_x_0_0_yz_xy_y_xy, g_x_x_0_0_yz_xy_y_xz, g_x_x_0_0_yz_xy_y_yy, g_x_x_0_0_yz_xy_y_yz, g_x_x_0_0_yz_xy_y_zz, g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz, g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xy_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (462-468)

    #pragma omp simd aligned(g_x_x_0_0_yz_xy_z_xx, g_x_x_0_0_yz_xy_z_xy, g_x_x_0_0_yz_xy_z_xz, g_x_x_0_0_yz_xy_z_yy, g_x_x_0_0_yz_xy_z_yz, g_x_x_0_0_yz_xy_z_zz, g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz, g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xy_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xy_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (468-474)

    #pragma omp simd aligned(g_x_x_0_0_yz_xz_x_xx, g_x_x_0_0_yz_xz_x_xy, g_x_x_0_0_yz_xz_x_xz, g_x_x_0_0_yz_xz_x_yy, g_x_x_0_0_yz_xz_x_yz, g_x_x_0_0_yz_xz_x_zz, g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (474-480)

    #pragma omp simd aligned(g_x_x_0_0_yz_xz_y_xx, g_x_x_0_0_yz_xz_y_xy, g_x_x_0_0_yz_xz_y_xz, g_x_x_0_0_yz_xz_y_yy, g_x_x_0_0_yz_xz_y_yz, g_x_x_0_0_yz_xz_y_zz, g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (480-486)

    #pragma omp simd aligned(g_x_x_0_0_yz_xz_z_xx, g_x_x_0_0_yz_xz_z_xy, g_x_x_0_0_yz_xz_z_xz, g_x_x_0_0_yz_xz_z_yy, g_x_x_0_0_yz_xz_z_yz, g_x_x_0_0_yz_xz_z_zz, g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_xz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_xz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (486-492)

    #pragma omp simd aligned(g_x_x_0_0_yz_yy_x_xx, g_x_x_0_0_yz_yy_x_xy, g_x_x_0_0_yz_yy_x_xz, g_x_x_0_0_yz_yy_x_yy, g_x_x_0_0_yz_yy_x_yz, g_x_x_0_0_yz_yy_x_zz, g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yy_x_xx[i] = 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_x_xy[i] = 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_x_xz[i] = 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_x_yy[i] = 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_x_yz[i] = 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_x_zz[i] = 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (492-498)

    #pragma omp simd aligned(g_x_x_0_0_yz_yy_y_xx, g_x_x_0_0_yz_yy_y_xy, g_x_x_0_0_yz_yy_y_xz, g_x_x_0_0_yz_yy_y_yy, g_x_x_0_0_yz_yy_y_yz, g_x_x_0_0_yz_yy_y_zz, g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yy_y_xx[i] = 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_y_xy[i] = 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_y_xz[i] = 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_y_yy[i] = 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_y_yz[i] = 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_y_zz[i] = 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (498-504)

    #pragma omp simd aligned(g_x_x_0_0_yz_yy_z_xx, g_x_x_0_0_yz_yy_z_xy, g_x_x_0_0_yz_yy_z_xz, g_x_x_0_0_yz_yy_z_yy, g_x_x_0_0_yz_yy_z_yz, g_x_x_0_0_yz_yy_z_zz, g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yy_z_xx[i] = 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_z_xy[i] = 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_z_xz[i] = 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_z_yy[i] = 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_z_yz[i] = 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yy_z_zz[i] = 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (504-510)

    #pragma omp simd aligned(g_x_x_0_0_yz_yz_x_xx, g_x_x_0_0_yz_yz_x_xy, g_x_x_0_0_yz_yz_x_xz, g_x_x_0_0_yz_yz_x_yy, g_x_x_0_0_yz_yz_x_yz, g_x_x_0_0_yz_yz_x_zz, g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (510-516)

    #pragma omp simd aligned(g_x_x_0_0_yz_yz_y_xx, g_x_x_0_0_yz_yz_y_xy, g_x_x_0_0_yz_yz_y_xz, g_x_x_0_0_yz_yz_y_yy, g_x_x_0_0_yz_yz_y_yz, g_x_x_0_0_yz_yz_y_zz, g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (516-522)

    #pragma omp simd aligned(g_x_x_0_0_yz_yz_z_xx, g_x_x_0_0_yz_yz_z_xy, g_x_x_0_0_yz_yz_z_xz, g_x_x_0_0_yz_yz_z_yy, g_x_x_0_0_yz_yz_z_yz, g_x_x_0_0_yz_yz_z_zz, g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_yz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_yz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (522-528)

    #pragma omp simd aligned(g_x_x_0_0_yz_zz_x_xx, g_x_x_0_0_yz_zz_x_xy, g_x_x_0_0_yz_zz_x_xz, g_x_x_0_0_yz_zz_x_yy, g_x_x_0_0_yz_zz_x_yz, g_x_x_0_0_yz_zz_x_zz, g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_zz_x_xx[i] = 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_x_xy[i] = 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_x_xz[i] = 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_x_yy[i] = 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_x_yz[i] = 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_x_zz[i] = 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (528-534)

    #pragma omp simd aligned(g_x_x_0_0_yz_zz_y_xx, g_x_x_0_0_yz_zz_y_xy, g_x_x_0_0_yz_zz_y_xz, g_x_x_0_0_yz_zz_y_yy, g_x_x_0_0_yz_zz_y_yz, g_x_x_0_0_yz_zz_y_zz, g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_zz_y_xx[i] = 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_y_xy[i] = 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_y_xz[i] = 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_y_yy[i] = 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_y_yz[i] = 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_y_zz[i] = 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (534-540)

    #pragma omp simd aligned(g_x_x_0_0_yz_zz_z_xx, g_x_x_0_0_yz_zz_z_xy, g_x_x_0_0_yz_zz_z_xz, g_x_x_0_0_yz_zz_z_yy, g_x_x_0_0_yz_zz_z_yz, g_x_x_0_0_yz_zz_z_zz, g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_yz_zz_z_xx[i] = 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_z_xy[i] = 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_z_xz[i] = 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_z_yy[i] = 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_z_yz[i] = 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_yz_zz_z_zz[i] = 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (540-546)

    #pragma omp simd aligned(g_x_x_0_0_zz_xx_x_xx, g_x_x_0_0_zz_xx_x_xy, g_x_x_0_0_zz_xx_x_xz, g_x_x_0_0_zz_xx_x_yy, g_x_x_0_0_zz_xx_x_yz, g_x_x_0_0_zz_xx_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xxx_x_xx, g_xzz_xxx_x_xy, g_xzz_xxx_x_xz, g_xzz_xxx_x_yy, g_xzz_xxx_x_yz, g_xzz_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xx_x_xx[i] = -4.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xxx_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_x_xy[i] = -4.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xxx_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_x_xz[i] = -4.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xxx_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_x_yy[i] = -4.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xxx_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_x_yz[i] = -4.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xxx_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_x_zz[i] = -4.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (546-552)

    #pragma omp simd aligned(g_x_x_0_0_zz_xx_y_xx, g_x_x_0_0_zz_xx_y_xy, g_x_x_0_0_zz_xx_y_xz, g_x_x_0_0_zz_xx_y_yy, g_x_x_0_0_zz_xx_y_yz, g_x_x_0_0_zz_xx_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xxx_y_xx, g_xzz_xxx_y_xy, g_xzz_xxx_y_xz, g_xzz_xxx_y_yy, g_xzz_xxx_y_yz, g_xzz_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xx_y_xx[i] = -4.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xxx_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_y_xy[i] = -4.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xxx_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_y_xz[i] = -4.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xxx_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_y_yy[i] = -4.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xxx_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_y_yz[i] = -4.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xxx_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_y_zz[i] = -4.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (552-558)

    #pragma omp simd aligned(g_x_x_0_0_zz_xx_z_xx, g_x_x_0_0_zz_xx_z_xy, g_x_x_0_0_zz_xx_z_xz, g_x_x_0_0_zz_xx_z_yy, g_x_x_0_0_zz_xx_z_yz, g_x_x_0_0_zz_xx_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xxx_z_xx, g_xzz_xxx_z_xy, g_xzz_xxx_z_xz, g_xzz_xxx_z_yy, g_xzz_xxx_z_yz, g_xzz_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xx_z_xx[i] = -4.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xxx_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_z_xy[i] = -4.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xxx_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_z_xz[i] = -4.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xxx_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_z_yy[i] = -4.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xxx_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_z_yz[i] = -4.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xxx_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xx_z_zz[i] = -4.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (558-564)

    #pragma omp simd aligned(g_x_x_0_0_zz_xy_x_xx, g_x_x_0_0_zz_xy_x_xy, g_x_x_0_0_zz_xy_x_xz, g_x_x_0_0_zz_xy_x_yy, g_x_x_0_0_zz_xy_x_yz, g_x_x_0_0_zz_xy_x_zz, g_xzz_xxy_x_xx, g_xzz_xxy_x_xy, g_xzz_xxy_x_xz, g_xzz_xxy_x_yy, g_xzz_xxy_x_yz, g_xzz_xxy_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xy_x_xx[i] = -2.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_x_xy[i] = -2.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_x_xz[i] = -2.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_x_yy[i] = -2.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_x_yz[i] = -2.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_x_zz[i] = -2.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (564-570)

    #pragma omp simd aligned(g_x_x_0_0_zz_xy_y_xx, g_x_x_0_0_zz_xy_y_xy, g_x_x_0_0_zz_xy_y_xz, g_x_x_0_0_zz_xy_y_yy, g_x_x_0_0_zz_xy_y_yz, g_x_x_0_0_zz_xy_y_zz, g_xzz_xxy_y_xx, g_xzz_xxy_y_xy, g_xzz_xxy_y_xz, g_xzz_xxy_y_yy, g_xzz_xxy_y_yz, g_xzz_xxy_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xy_y_xx[i] = -2.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_y_xy[i] = -2.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_y_xz[i] = -2.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_y_yy[i] = -2.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_y_yz[i] = -2.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_y_zz[i] = -2.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (570-576)

    #pragma omp simd aligned(g_x_x_0_0_zz_xy_z_xx, g_x_x_0_0_zz_xy_z_xy, g_x_x_0_0_zz_xy_z_xz, g_x_x_0_0_zz_xy_z_yy, g_x_x_0_0_zz_xy_z_yz, g_x_x_0_0_zz_xy_z_zz, g_xzz_xxy_z_xx, g_xzz_xxy_z_xy, g_xzz_xxy_z_xz, g_xzz_xxy_z_yy, g_xzz_xxy_z_yz, g_xzz_xxy_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xy_z_xx[i] = -2.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_z_xy[i] = -2.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_z_xz[i] = -2.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_z_yy[i] = -2.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_z_yz[i] = -2.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xy_z_zz[i] = -2.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (576-582)

    #pragma omp simd aligned(g_x_x_0_0_zz_xz_x_xx, g_x_x_0_0_zz_xz_x_xy, g_x_x_0_0_zz_xz_x_xz, g_x_x_0_0_zz_xz_x_yy, g_x_x_0_0_zz_xz_x_yz, g_x_x_0_0_zz_xz_x_zz, g_xzz_xxz_x_xx, g_xzz_xxz_x_xy, g_xzz_xxz_x_xz, g_xzz_xxz_x_yy, g_xzz_xxz_x_yz, g_xzz_xxz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xz_x_xx[i] = -2.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_x_xy[i] = -2.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_x_xz[i] = -2.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_x_yy[i] = -2.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_x_yz[i] = -2.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_x_zz[i] = -2.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (582-588)

    #pragma omp simd aligned(g_x_x_0_0_zz_xz_y_xx, g_x_x_0_0_zz_xz_y_xy, g_x_x_0_0_zz_xz_y_xz, g_x_x_0_0_zz_xz_y_yy, g_x_x_0_0_zz_xz_y_yz, g_x_x_0_0_zz_xz_y_zz, g_xzz_xxz_y_xx, g_xzz_xxz_y_xy, g_xzz_xxz_y_xz, g_xzz_xxz_y_yy, g_xzz_xxz_y_yz, g_xzz_xxz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xz_y_xx[i] = -2.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_y_xy[i] = -2.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_y_xz[i] = -2.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_y_yy[i] = -2.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_y_yz[i] = -2.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_y_zz[i] = -2.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (588-594)

    #pragma omp simd aligned(g_x_x_0_0_zz_xz_z_xx, g_x_x_0_0_zz_xz_z_xy, g_x_x_0_0_zz_xz_z_xz, g_x_x_0_0_zz_xz_z_yy, g_x_x_0_0_zz_xz_z_yz, g_x_x_0_0_zz_xz_z_zz, g_xzz_xxz_z_xx, g_xzz_xxz_z_xy, g_xzz_xxz_z_xz, g_xzz_xxz_z_yy, g_xzz_xxz_z_yz, g_xzz_xxz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_xz_z_xx[i] = -2.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_z_xy[i] = -2.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_z_xz[i] = -2.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_z_yy[i] = -2.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_z_yz[i] = -2.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_xz_z_zz[i] = -2.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (594-600)

    #pragma omp simd aligned(g_x_x_0_0_zz_yy_x_xx, g_x_x_0_0_zz_yy_x_xy, g_x_x_0_0_zz_yy_x_xz, g_x_x_0_0_zz_yy_x_yy, g_x_x_0_0_zz_yy_x_yz, g_x_x_0_0_zz_yy_x_zz, g_xzz_xyy_x_xx, g_xzz_xyy_x_xy, g_xzz_xyy_x_xz, g_xzz_xyy_x_yy, g_xzz_xyy_x_yz, g_xzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yy_x_xx[i] = 4.0 * g_xzz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_x_xy[i] = 4.0 * g_xzz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_x_xz[i] = 4.0 * g_xzz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_x_yy[i] = 4.0 * g_xzz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_x_yz[i] = 4.0 * g_xzz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_x_zz[i] = 4.0 * g_xzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (600-606)

    #pragma omp simd aligned(g_x_x_0_0_zz_yy_y_xx, g_x_x_0_0_zz_yy_y_xy, g_x_x_0_0_zz_yy_y_xz, g_x_x_0_0_zz_yy_y_yy, g_x_x_0_0_zz_yy_y_yz, g_x_x_0_0_zz_yy_y_zz, g_xzz_xyy_y_xx, g_xzz_xyy_y_xy, g_xzz_xyy_y_xz, g_xzz_xyy_y_yy, g_xzz_xyy_y_yz, g_xzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yy_y_xx[i] = 4.0 * g_xzz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_y_xy[i] = 4.0 * g_xzz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_y_xz[i] = 4.0 * g_xzz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_y_yy[i] = 4.0 * g_xzz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_y_yz[i] = 4.0 * g_xzz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_y_zz[i] = 4.0 * g_xzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (606-612)

    #pragma omp simd aligned(g_x_x_0_0_zz_yy_z_xx, g_x_x_0_0_zz_yy_z_xy, g_x_x_0_0_zz_yy_z_xz, g_x_x_0_0_zz_yy_z_yy, g_x_x_0_0_zz_yy_z_yz, g_x_x_0_0_zz_yy_z_zz, g_xzz_xyy_z_xx, g_xzz_xyy_z_xy, g_xzz_xyy_z_xz, g_xzz_xyy_z_yy, g_xzz_xyy_z_yz, g_xzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yy_z_xx[i] = 4.0 * g_xzz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_z_xy[i] = 4.0 * g_xzz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_z_xz[i] = 4.0 * g_xzz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_z_yy[i] = 4.0 * g_xzz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_z_yz[i] = 4.0 * g_xzz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yy_z_zz[i] = 4.0 * g_xzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (612-618)

    #pragma omp simd aligned(g_x_x_0_0_zz_yz_x_xx, g_x_x_0_0_zz_yz_x_xy, g_x_x_0_0_zz_yz_x_xz, g_x_x_0_0_zz_yz_x_yy, g_x_x_0_0_zz_yz_x_yz, g_x_x_0_0_zz_yz_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yz_x_xx[i] = 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_x_xy[i] = 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_x_xz[i] = 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_x_yy[i] = 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_x_yz[i] = 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_x_zz[i] = 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (618-624)

    #pragma omp simd aligned(g_x_x_0_0_zz_yz_y_xx, g_x_x_0_0_zz_yz_y_xy, g_x_x_0_0_zz_yz_y_xz, g_x_x_0_0_zz_yz_y_yy, g_x_x_0_0_zz_yz_y_yz, g_x_x_0_0_zz_yz_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yz_y_xx[i] = 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_y_xy[i] = 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_y_xz[i] = 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_y_yy[i] = 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_y_yz[i] = 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_y_zz[i] = 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (624-630)

    #pragma omp simd aligned(g_x_x_0_0_zz_yz_z_xx, g_x_x_0_0_zz_yz_z_xy, g_x_x_0_0_zz_yz_z_xz, g_x_x_0_0_zz_yz_z_yy, g_x_x_0_0_zz_yz_z_yz, g_x_x_0_0_zz_yz_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_yz_z_xx[i] = 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_z_xy[i] = 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_z_xz[i] = 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_z_yy[i] = 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_z_yz[i] = 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_yz_z_zz[i] = 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (630-636)

    #pragma omp simd aligned(g_x_x_0_0_zz_zz_x_xx, g_x_x_0_0_zz_zz_x_xy, g_x_x_0_0_zz_zz_x_xz, g_x_x_0_0_zz_zz_x_yy, g_x_x_0_0_zz_zz_x_yz, g_x_x_0_0_zz_zz_x_zz, g_xzz_xzz_x_xx, g_xzz_xzz_x_xy, g_xzz_xzz_x_xz, g_xzz_xzz_x_yy, g_xzz_xzz_x_yz, g_xzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_zz_x_xx[i] = 4.0 * g_xzz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_x_xy[i] = 4.0 * g_xzz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_x_xz[i] = 4.0 * g_xzz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_x_yy[i] = 4.0 * g_xzz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_x_yz[i] = 4.0 * g_xzz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_x_zz[i] = 4.0 * g_xzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (636-642)

    #pragma omp simd aligned(g_x_x_0_0_zz_zz_y_xx, g_x_x_0_0_zz_zz_y_xy, g_x_x_0_0_zz_zz_y_xz, g_x_x_0_0_zz_zz_y_yy, g_x_x_0_0_zz_zz_y_yz, g_x_x_0_0_zz_zz_y_zz, g_xzz_xzz_y_xx, g_xzz_xzz_y_xy, g_xzz_xzz_y_xz, g_xzz_xzz_y_yy, g_xzz_xzz_y_yz, g_xzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_zz_y_xx[i] = 4.0 * g_xzz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_y_xy[i] = 4.0 * g_xzz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_y_xz[i] = 4.0 * g_xzz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_y_yy[i] = 4.0 * g_xzz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_y_yz[i] = 4.0 * g_xzz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_y_zz[i] = 4.0 * g_xzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (642-648)

    #pragma omp simd aligned(g_x_x_0_0_zz_zz_z_xx, g_x_x_0_0_zz_zz_z_xy, g_x_x_0_0_zz_zz_z_xz, g_x_x_0_0_zz_zz_z_yy, g_x_x_0_0_zz_zz_z_yz, g_x_x_0_0_zz_zz_z_zz, g_xzz_xzz_z_xx, g_xzz_xzz_z_xy, g_xzz_xzz_z_xz, g_xzz_xzz_z_yy, g_xzz_xzz_z_yz, g_xzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_x_0_0_zz_zz_z_xx[i] = 4.0 * g_xzz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_z_xy[i] = 4.0 * g_xzz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_z_xz[i] = 4.0 * g_xzz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_z_yy[i] = 4.0 * g_xzz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_z_yz[i] = 4.0 * g_xzz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_x_0_0_zz_zz_z_zz[i] = 4.0 * g_xzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (648-654)

    #pragma omp simd aligned(g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_x_y_0_0_xx_xx_x_xx, g_x_y_0_0_xx_xx_x_xy, g_x_y_0_0_xx_xx_x_xz, g_x_y_0_0_xx_xx_x_yy, g_x_y_0_0_xx_xx_x_yz, g_x_y_0_0_xx_xx_x_zz, g_xxx_xxy_x_xx, g_xxx_xxy_x_xy, g_xxx_xxy_x_xz, g_xxx_xxy_x_yy, g_xxx_xxy_x_yz, g_xxx_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xx_x_xx[i] = -4.0 * g_x_xxy_x_xx[i] * b_exp + 4.0 * g_xxx_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_x_xy[i] = -4.0 * g_x_xxy_x_xy[i] * b_exp + 4.0 * g_xxx_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_x_xz[i] = -4.0 * g_x_xxy_x_xz[i] * b_exp + 4.0 * g_xxx_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_x_yy[i] = -4.0 * g_x_xxy_x_yy[i] * b_exp + 4.0 * g_xxx_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_x_yz[i] = -4.0 * g_x_xxy_x_yz[i] * b_exp + 4.0 * g_xxx_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_x_zz[i] = -4.0 * g_x_xxy_x_zz[i] * b_exp + 4.0 * g_xxx_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (654-660)

    #pragma omp simd aligned(g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_x_y_0_0_xx_xx_y_xx, g_x_y_0_0_xx_xx_y_xy, g_x_y_0_0_xx_xx_y_xz, g_x_y_0_0_xx_xx_y_yy, g_x_y_0_0_xx_xx_y_yz, g_x_y_0_0_xx_xx_y_zz, g_xxx_xxy_y_xx, g_xxx_xxy_y_xy, g_xxx_xxy_y_xz, g_xxx_xxy_y_yy, g_xxx_xxy_y_yz, g_xxx_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xx_y_xx[i] = -4.0 * g_x_xxy_y_xx[i] * b_exp + 4.0 * g_xxx_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_y_xy[i] = -4.0 * g_x_xxy_y_xy[i] * b_exp + 4.0 * g_xxx_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_y_xz[i] = -4.0 * g_x_xxy_y_xz[i] * b_exp + 4.0 * g_xxx_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_y_yy[i] = -4.0 * g_x_xxy_y_yy[i] * b_exp + 4.0 * g_xxx_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_y_yz[i] = -4.0 * g_x_xxy_y_yz[i] * b_exp + 4.0 * g_xxx_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_y_zz[i] = -4.0 * g_x_xxy_y_zz[i] * b_exp + 4.0 * g_xxx_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (660-666)

    #pragma omp simd aligned(g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_x_y_0_0_xx_xx_z_xx, g_x_y_0_0_xx_xx_z_xy, g_x_y_0_0_xx_xx_z_xz, g_x_y_0_0_xx_xx_z_yy, g_x_y_0_0_xx_xx_z_yz, g_x_y_0_0_xx_xx_z_zz, g_xxx_xxy_z_xx, g_xxx_xxy_z_xy, g_xxx_xxy_z_xz, g_xxx_xxy_z_yy, g_xxx_xxy_z_yz, g_xxx_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xx_z_xx[i] = -4.0 * g_x_xxy_z_xx[i] * b_exp + 4.0 * g_xxx_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_z_xy[i] = -4.0 * g_x_xxy_z_xy[i] * b_exp + 4.0 * g_xxx_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_z_xz[i] = -4.0 * g_x_xxy_z_xz[i] * b_exp + 4.0 * g_xxx_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_z_yy[i] = -4.0 * g_x_xxy_z_yy[i] * b_exp + 4.0 * g_xxx_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_z_yz[i] = -4.0 * g_x_xxy_z_yz[i] * b_exp + 4.0 * g_xxx_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xx_z_zz[i] = -4.0 * g_x_xxy_z_zz[i] * b_exp + 4.0 * g_xxx_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (666-672)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_x_y_0_0_xx_xy_x_xx, g_x_y_0_0_xx_xy_x_xy, g_x_y_0_0_xx_xy_x_xz, g_x_y_0_0_xx_xy_x_yy, g_x_y_0_0_xx_xy_x_yz, g_x_y_0_0_xx_xy_x_zz, g_xxx_x_x_xx, g_xxx_x_x_xy, g_xxx_x_x_xz, g_xxx_x_x_yy, g_xxx_x_x_yz, g_xxx_x_x_zz, g_xxx_xyy_x_xx, g_xxx_xyy_x_xy, g_xxx_xyy_x_xz, g_xxx_xyy_x_yy, g_xxx_xyy_x_yz, g_xxx_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xy_x_xx[i] = 2.0 * g_x_x_x_xx[i] - 4.0 * g_x_xyy_x_xx[i] * b_exp - 2.0 * g_xxx_x_x_xx[i] * a_exp + 4.0 * g_xxx_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_x_xy[i] = 2.0 * g_x_x_x_xy[i] - 4.0 * g_x_xyy_x_xy[i] * b_exp - 2.0 * g_xxx_x_x_xy[i] * a_exp + 4.0 * g_xxx_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_x_xz[i] = 2.0 * g_x_x_x_xz[i] - 4.0 * g_x_xyy_x_xz[i] * b_exp - 2.0 * g_xxx_x_x_xz[i] * a_exp + 4.0 * g_xxx_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_x_yy[i] = 2.0 * g_x_x_x_yy[i] - 4.0 * g_x_xyy_x_yy[i] * b_exp - 2.0 * g_xxx_x_x_yy[i] * a_exp + 4.0 * g_xxx_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_x_yz[i] = 2.0 * g_x_x_x_yz[i] - 4.0 * g_x_xyy_x_yz[i] * b_exp - 2.0 * g_xxx_x_x_yz[i] * a_exp + 4.0 * g_xxx_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_x_zz[i] = 2.0 * g_x_x_x_zz[i] - 4.0 * g_x_xyy_x_zz[i] * b_exp - 2.0 * g_xxx_x_x_zz[i] * a_exp + 4.0 * g_xxx_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (672-678)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_x_y_0_0_xx_xy_y_xx, g_x_y_0_0_xx_xy_y_xy, g_x_y_0_0_xx_xy_y_xz, g_x_y_0_0_xx_xy_y_yy, g_x_y_0_0_xx_xy_y_yz, g_x_y_0_0_xx_xy_y_zz, g_xxx_x_y_xx, g_xxx_x_y_xy, g_xxx_x_y_xz, g_xxx_x_y_yy, g_xxx_x_y_yz, g_xxx_x_y_zz, g_xxx_xyy_y_xx, g_xxx_xyy_y_xy, g_xxx_xyy_y_xz, g_xxx_xyy_y_yy, g_xxx_xyy_y_yz, g_xxx_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xy_y_xx[i] = 2.0 * g_x_x_y_xx[i] - 4.0 * g_x_xyy_y_xx[i] * b_exp - 2.0 * g_xxx_x_y_xx[i] * a_exp + 4.0 * g_xxx_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_y_xy[i] = 2.0 * g_x_x_y_xy[i] - 4.0 * g_x_xyy_y_xy[i] * b_exp - 2.0 * g_xxx_x_y_xy[i] * a_exp + 4.0 * g_xxx_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_y_xz[i] = 2.0 * g_x_x_y_xz[i] - 4.0 * g_x_xyy_y_xz[i] * b_exp - 2.0 * g_xxx_x_y_xz[i] * a_exp + 4.0 * g_xxx_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_y_yy[i] = 2.0 * g_x_x_y_yy[i] - 4.0 * g_x_xyy_y_yy[i] * b_exp - 2.0 * g_xxx_x_y_yy[i] * a_exp + 4.0 * g_xxx_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_y_yz[i] = 2.0 * g_x_x_y_yz[i] - 4.0 * g_x_xyy_y_yz[i] * b_exp - 2.0 * g_xxx_x_y_yz[i] * a_exp + 4.0 * g_xxx_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_y_zz[i] = 2.0 * g_x_x_y_zz[i] - 4.0 * g_x_xyy_y_zz[i] * b_exp - 2.0 * g_xxx_x_y_zz[i] * a_exp + 4.0 * g_xxx_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (678-684)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_x_y_0_0_xx_xy_z_xx, g_x_y_0_0_xx_xy_z_xy, g_x_y_0_0_xx_xy_z_xz, g_x_y_0_0_xx_xy_z_yy, g_x_y_0_0_xx_xy_z_yz, g_x_y_0_0_xx_xy_z_zz, g_xxx_x_z_xx, g_xxx_x_z_xy, g_xxx_x_z_xz, g_xxx_x_z_yy, g_xxx_x_z_yz, g_xxx_x_z_zz, g_xxx_xyy_z_xx, g_xxx_xyy_z_xy, g_xxx_xyy_z_xz, g_xxx_xyy_z_yy, g_xxx_xyy_z_yz, g_xxx_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xy_z_xx[i] = 2.0 * g_x_x_z_xx[i] - 4.0 * g_x_xyy_z_xx[i] * b_exp - 2.0 * g_xxx_x_z_xx[i] * a_exp + 4.0 * g_xxx_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_z_xy[i] = 2.0 * g_x_x_z_xy[i] - 4.0 * g_x_xyy_z_xy[i] * b_exp - 2.0 * g_xxx_x_z_xy[i] * a_exp + 4.0 * g_xxx_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_z_xz[i] = 2.0 * g_x_x_z_xz[i] - 4.0 * g_x_xyy_z_xz[i] * b_exp - 2.0 * g_xxx_x_z_xz[i] * a_exp + 4.0 * g_xxx_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_z_yy[i] = 2.0 * g_x_x_z_yy[i] - 4.0 * g_x_xyy_z_yy[i] * b_exp - 2.0 * g_xxx_x_z_yy[i] * a_exp + 4.0 * g_xxx_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_z_yz[i] = 2.0 * g_x_x_z_yz[i] - 4.0 * g_x_xyy_z_yz[i] * b_exp - 2.0 * g_xxx_x_z_yz[i] * a_exp + 4.0 * g_xxx_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xy_z_zz[i] = 2.0 * g_x_x_z_zz[i] - 4.0 * g_x_xyy_z_zz[i] * b_exp - 2.0 * g_xxx_x_z_zz[i] * a_exp + 4.0 * g_xxx_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (684-690)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_x_y_0_0_xx_xz_x_xx, g_x_y_0_0_xx_xz_x_xy, g_x_y_0_0_xx_xz_x_xz, g_x_y_0_0_xx_xz_x_yy, g_x_y_0_0_xx_xz_x_yz, g_x_y_0_0_xx_xz_x_zz, g_xxx_xyz_x_xx, g_xxx_xyz_x_xy, g_xxx_xyz_x_xz, g_xxx_xyz_x_yy, g_xxx_xyz_x_yz, g_xxx_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xz_x_xx[i] = -4.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xxx_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_x_xy[i] = -4.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xxx_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_x_xz[i] = -4.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xxx_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_x_yy[i] = -4.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xxx_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_x_yz[i] = -4.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xxx_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_x_zz[i] = -4.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xxx_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (690-696)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_x_y_0_0_xx_xz_y_xx, g_x_y_0_0_xx_xz_y_xy, g_x_y_0_0_xx_xz_y_xz, g_x_y_0_0_xx_xz_y_yy, g_x_y_0_0_xx_xz_y_yz, g_x_y_0_0_xx_xz_y_zz, g_xxx_xyz_y_xx, g_xxx_xyz_y_xy, g_xxx_xyz_y_xz, g_xxx_xyz_y_yy, g_xxx_xyz_y_yz, g_xxx_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xz_y_xx[i] = -4.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xxx_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_y_xy[i] = -4.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xxx_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_y_xz[i] = -4.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xxx_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_y_yy[i] = -4.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xxx_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_y_yz[i] = -4.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xxx_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_y_zz[i] = -4.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xxx_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (696-702)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_x_y_0_0_xx_xz_z_xx, g_x_y_0_0_xx_xz_z_xy, g_x_y_0_0_xx_xz_z_xz, g_x_y_0_0_xx_xz_z_yy, g_x_y_0_0_xx_xz_z_yz, g_x_y_0_0_xx_xz_z_zz, g_xxx_xyz_z_xx, g_xxx_xyz_z_xy, g_xxx_xyz_z_xz, g_xxx_xyz_z_yy, g_xxx_xyz_z_yz, g_xxx_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_xz_z_xx[i] = -4.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xxx_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_z_xy[i] = -4.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xxx_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_z_xz[i] = -4.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xxx_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_z_yy[i] = -4.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xxx_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_z_yz[i] = -4.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xxx_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_xz_z_zz[i] = -4.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xxx_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (702-708)

    #pragma omp simd aligned(g_x_y_0_0_xx_yy_x_xx, g_x_y_0_0_xx_yy_x_xy, g_x_y_0_0_xx_yy_x_xz, g_x_y_0_0_xx_yy_x_yy, g_x_y_0_0_xx_yy_x_yz, g_x_y_0_0_xx_yy_x_zz, g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yyy_x_xx, g_x_yyy_x_xy, g_x_yyy_x_xz, g_x_yyy_x_yy, g_x_yyy_x_yz, g_x_yyy_x_zz, g_xxx_y_x_xx, g_xxx_y_x_xy, g_xxx_y_x_xz, g_xxx_y_x_yy, g_xxx_y_x_yz, g_xxx_y_x_zz, g_xxx_yyy_x_xx, g_xxx_yyy_x_xy, g_xxx_yyy_x_xz, g_xxx_yyy_x_yy, g_xxx_yyy_x_yz, g_xxx_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yy_x_xx[i] = 4.0 * g_x_y_x_xx[i] - 4.0 * g_x_yyy_x_xx[i] * b_exp - 4.0 * g_xxx_y_x_xx[i] * a_exp + 4.0 * g_xxx_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_x_xy[i] = 4.0 * g_x_y_x_xy[i] - 4.0 * g_x_yyy_x_xy[i] * b_exp - 4.0 * g_xxx_y_x_xy[i] * a_exp + 4.0 * g_xxx_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_x_xz[i] = 4.0 * g_x_y_x_xz[i] - 4.0 * g_x_yyy_x_xz[i] * b_exp - 4.0 * g_xxx_y_x_xz[i] * a_exp + 4.0 * g_xxx_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_x_yy[i] = 4.0 * g_x_y_x_yy[i] - 4.0 * g_x_yyy_x_yy[i] * b_exp - 4.0 * g_xxx_y_x_yy[i] * a_exp + 4.0 * g_xxx_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_x_yz[i] = 4.0 * g_x_y_x_yz[i] - 4.0 * g_x_yyy_x_yz[i] * b_exp - 4.0 * g_xxx_y_x_yz[i] * a_exp + 4.0 * g_xxx_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_x_zz[i] = 4.0 * g_x_y_x_zz[i] - 4.0 * g_x_yyy_x_zz[i] * b_exp - 4.0 * g_xxx_y_x_zz[i] * a_exp + 4.0 * g_xxx_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (708-714)

    #pragma omp simd aligned(g_x_y_0_0_xx_yy_y_xx, g_x_y_0_0_xx_yy_y_xy, g_x_y_0_0_xx_yy_y_xz, g_x_y_0_0_xx_yy_y_yy, g_x_y_0_0_xx_yy_y_yz, g_x_y_0_0_xx_yy_y_zz, g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yyy_y_xx, g_x_yyy_y_xy, g_x_yyy_y_xz, g_x_yyy_y_yy, g_x_yyy_y_yz, g_x_yyy_y_zz, g_xxx_y_y_xx, g_xxx_y_y_xy, g_xxx_y_y_xz, g_xxx_y_y_yy, g_xxx_y_y_yz, g_xxx_y_y_zz, g_xxx_yyy_y_xx, g_xxx_yyy_y_xy, g_xxx_yyy_y_xz, g_xxx_yyy_y_yy, g_xxx_yyy_y_yz, g_xxx_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yy_y_xx[i] = 4.0 * g_x_y_y_xx[i] - 4.0 * g_x_yyy_y_xx[i] * b_exp - 4.0 * g_xxx_y_y_xx[i] * a_exp + 4.0 * g_xxx_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_y_xy[i] = 4.0 * g_x_y_y_xy[i] - 4.0 * g_x_yyy_y_xy[i] * b_exp - 4.0 * g_xxx_y_y_xy[i] * a_exp + 4.0 * g_xxx_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_y_xz[i] = 4.0 * g_x_y_y_xz[i] - 4.0 * g_x_yyy_y_xz[i] * b_exp - 4.0 * g_xxx_y_y_xz[i] * a_exp + 4.0 * g_xxx_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_y_yy[i] = 4.0 * g_x_y_y_yy[i] - 4.0 * g_x_yyy_y_yy[i] * b_exp - 4.0 * g_xxx_y_y_yy[i] * a_exp + 4.0 * g_xxx_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_y_yz[i] = 4.0 * g_x_y_y_yz[i] - 4.0 * g_x_yyy_y_yz[i] * b_exp - 4.0 * g_xxx_y_y_yz[i] * a_exp + 4.0 * g_xxx_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_y_zz[i] = 4.0 * g_x_y_y_zz[i] - 4.0 * g_x_yyy_y_zz[i] * b_exp - 4.0 * g_xxx_y_y_zz[i] * a_exp + 4.0 * g_xxx_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (714-720)

    #pragma omp simd aligned(g_x_y_0_0_xx_yy_z_xx, g_x_y_0_0_xx_yy_z_xy, g_x_y_0_0_xx_yy_z_xz, g_x_y_0_0_xx_yy_z_yy, g_x_y_0_0_xx_yy_z_yz, g_x_y_0_0_xx_yy_z_zz, g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yyy_z_xx, g_x_yyy_z_xy, g_x_yyy_z_xz, g_x_yyy_z_yy, g_x_yyy_z_yz, g_x_yyy_z_zz, g_xxx_y_z_xx, g_xxx_y_z_xy, g_xxx_y_z_xz, g_xxx_y_z_yy, g_xxx_y_z_yz, g_xxx_y_z_zz, g_xxx_yyy_z_xx, g_xxx_yyy_z_xy, g_xxx_yyy_z_xz, g_xxx_yyy_z_yy, g_xxx_yyy_z_yz, g_xxx_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yy_z_xx[i] = 4.0 * g_x_y_z_xx[i] - 4.0 * g_x_yyy_z_xx[i] * b_exp - 4.0 * g_xxx_y_z_xx[i] * a_exp + 4.0 * g_xxx_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_z_xy[i] = 4.0 * g_x_y_z_xy[i] - 4.0 * g_x_yyy_z_xy[i] * b_exp - 4.0 * g_xxx_y_z_xy[i] * a_exp + 4.0 * g_xxx_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_z_xz[i] = 4.0 * g_x_y_z_xz[i] - 4.0 * g_x_yyy_z_xz[i] * b_exp - 4.0 * g_xxx_y_z_xz[i] * a_exp + 4.0 * g_xxx_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_z_yy[i] = 4.0 * g_x_y_z_yy[i] - 4.0 * g_x_yyy_z_yy[i] * b_exp - 4.0 * g_xxx_y_z_yy[i] * a_exp + 4.0 * g_xxx_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_z_yz[i] = 4.0 * g_x_y_z_yz[i] - 4.0 * g_x_yyy_z_yz[i] * b_exp - 4.0 * g_xxx_y_z_yz[i] * a_exp + 4.0 * g_xxx_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yy_z_zz[i] = 4.0 * g_x_y_z_zz[i] - 4.0 * g_x_yyy_z_zz[i] * b_exp - 4.0 * g_xxx_y_z_zz[i] * a_exp + 4.0 * g_xxx_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (720-726)

    #pragma omp simd aligned(g_x_y_0_0_xx_yz_x_xx, g_x_y_0_0_xx_yz_x_xy, g_x_y_0_0_xx_yz_x_xz, g_x_y_0_0_xx_yz_x_yy, g_x_y_0_0_xx_yz_x_yz, g_x_y_0_0_xx_yz_x_zz, g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xxx_yyz_x_xx, g_xxx_yyz_x_xy, g_xxx_yyz_x_xz, g_xxx_yyz_x_yy, g_xxx_yyz_x_yz, g_xxx_yyz_x_zz, g_xxx_z_x_xx, g_xxx_z_x_xy, g_xxx_z_x_xz, g_xxx_z_x_yy, g_xxx_z_x_yz, g_xxx_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yz_x_xx[i] = 2.0 * g_x_z_x_xx[i] - 4.0 * g_x_yyz_x_xx[i] * b_exp - 2.0 * g_xxx_z_x_xx[i] * a_exp + 4.0 * g_xxx_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_x_xy[i] = 2.0 * g_x_z_x_xy[i] - 4.0 * g_x_yyz_x_xy[i] * b_exp - 2.0 * g_xxx_z_x_xy[i] * a_exp + 4.0 * g_xxx_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_x_xz[i] = 2.0 * g_x_z_x_xz[i] - 4.0 * g_x_yyz_x_xz[i] * b_exp - 2.0 * g_xxx_z_x_xz[i] * a_exp + 4.0 * g_xxx_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_x_yy[i] = 2.0 * g_x_z_x_yy[i] - 4.0 * g_x_yyz_x_yy[i] * b_exp - 2.0 * g_xxx_z_x_yy[i] * a_exp + 4.0 * g_xxx_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_x_yz[i] = 2.0 * g_x_z_x_yz[i] - 4.0 * g_x_yyz_x_yz[i] * b_exp - 2.0 * g_xxx_z_x_yz[i] * a_exp + 4.0 * g_xxx_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_x_zz[i] = 2.0 * g_x_z_x_zz[i] - 4.0 * g_x_yyz_x_zz[i] * b_exp - 2.0 * g_xxx_z_x_zz[i] * a_exp + 4.0 * g_xxx_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (726-732)

    #pragma omp simd aligned(g_x_y_0_0_xx_yz_y_xx, g_x_y_0_0_xx_yz_y_xy, g_x_y_0_0_xx_yz_y_xz, g_x_y_0_0_xx_yz_y_yy, g_x_y_0_0_xx_yz_y_yz, g_x_y_0_0_xx_yz_y_zz, g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xxx_yyz_y_xx, g_xxx_yyz_y_xy, g_xxx_yyz_y_xz, g_xxx_yyz_y_yy, g_xxx_yyz_y_yz, g_xxx_yyz_y_zz, g_xxx_z_y_xx, g_xxx_z_y_xy, g_xxx_z_y_xz, g_xxx_z_y_yy, g_xxx_z_y_yz, g_xxx_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yz_y_xx[i] = 2.0 * g_x_z_y_xx[i] - 4.0 * g_x_yyz_y_xx[i] * b_exp - 2.0 * g_xxx_z_y_xx[i] * a_exp + 4.0 * g_xxx_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_y_xy[i] = 2.0 * g_x_z_y_xy[i] - 4.0 * g_x_yyz_y_xy[i] * b_exp - 2.0 * g_xxx_z_y_xy[i] * a_exp + 4.0 * g_xxx_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_y_xz[i] = 2.0 * g_x_z_y_xz[i] - 4.0 * g_x_yyz_y_xz[i] * b_exp - 2.0 * g_xxx_z_y_xz[i] * a_exp + 4.0 * g_xxx_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_y_yy[i] = 2.0 * g_x_z_y_yy[i] - 4.0 * g_x_yyz_y_yy[i] * b_exp - 2.0 * g_xxx_z_y_yy[i] * a_exp + 4.0 * g_xxx_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_y_yz[i] = 2.0 * g_x_z_y_yz[i] - 4.0 * g_x_yyz_y_yz[i] * b_exp - 2.0 * g_xxx_z_y_yz[i] * a_exp + 4.0 * g_xxx_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_y_zz[i] = 2.0 * g_x_z_y_zz[i] - 4.0 * g_x_yyz_y_zz[i] * b_exp - 2.0 * g_xxx_z_y_zz[i] * a_exp + 4.0 * g_xxx_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (732-738)

    #pragma omp simd aligned(g_x_y_0_0_xx_yz_z_xx, g_x_y_0_0_xx_yz_z_xy, g_x_y_0_0_xx_yz_z_xz, g_x_y_0_0_xx_yz_z_yy, g_x_y_0_0_xx_yz_z_yz, g_x_y_0_0_xx_yz_z_zz, g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xxx_yyz_z_xx, g_xxx_yyz_z_xy, g_xxx_yyz_z_xz, g_xxx_yyz_z_yy, g_xxx_yyz_z_yz, g_xxx_yyz_z_zz, g_xxx_z_z_xx, g_xxx_z_z_xy, g_xxx_z_z_xz, g_xxx_z_z_yy, g_xxx_z_z_yz, g_xxx_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_yz_z_xx[i] = 2.0 * g_x_z_z_xx[i] - 4.0 * g_x_yyz_z_xx[i] * b_exp - 2.0 * g_xxx_z_z_xx[i] * a_exp + 4.0 * g_xxx_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_z_xy[i] = 2.0 * g_x_z_z_xy[i] - 4.0 * g_x_yyz_z_xy[i] * b_exp - 2.0 * g_xxx_z_z_xy[i] * a_exp + 4.0 * g_xxx_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_z_xz[i] = 2.0 * g_x_z_z_xz[i] - 4.0 * g_x_yyz_z_xz[i] * b_exp - 2.0 * g_xxx_z_z_xz[i] * a_exp + 4.0 * g_xxx_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_z_yy[i] = 2.0 * g_x_z_z_yy[i] - 4.0 * g_x_yyz_z_yy[i] * b_exp - 2.0 * g_xxx_z_z_yy[i] * a_exp + 4.0 * g_xxx_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_z_yz[i] = 2.0 * g_x_z_z_yz[i] - 4.0 * g_x_yyz_z_yz[i] * b_exp - 2.0 * g_xxx_z_z_yz[i] * a_exp + 4.0 * g_xxx_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_yz_z_zz[i] = 2.0 * g_x_z_z_zz[i] - 4.0 * g_x_yyz_z_zz[i] * b_exp - 2.0 * g_xxx_z_z_zz[i] * a_exp + 4.0 * g_xxx_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (738-744)

    #pragma omp simd aligned(g_x_y_0_0_xx_zz_x_xx, g_x_y_0_0_xx_zz_x_xy, g_x_y_0_0_xx_zz_x_xz, g_x_y_0_0_xx_zz_x_yy, g_x_y_0_0_xx_zz_x_yz, g_x_y_0_0_xx_zz_x_zz, g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_xxx_yzz_x_xx, g_xxx_yzz_x_xy, g_xxx_yzz_x_xz, g_xxx_yzz_x_yy, g_xxx_yzz_x_yz, g_xxx_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_zz_x_xx[i] = -4.0 * g_x_yzz_x_xx[i] * b_exp + 4.0 * g_xxx_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_x_xy[i] = -4.0 * g_x_yzz_x_xy[i] * b_exp + 4.0 * g_xxx_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_x_xz[i] = -4.0 * g_x_yzz_x_xz[i] * b_exp + 4.0 * g_xxx_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_x_yy[i] = -4.0 * g_x_yzz_x_yy[i] * b_exp + 4.0 * g_xxx_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_x_yz[i] = -4.0 * g_x_yzz_x_yz[i] * b_exp + 4.0 * g_xxx_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_x_zz[i] = -4.0 * g_x_yzz_x_zz[i] * b_exp + 4.0 * g_xxx_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (744-750)

    #pragma omp simd aligned(g_x_y_0_0_xx_zz_y_xx, g_x_y_0_0_xx_zz_y_xy, g_x_y_0_0_xx_zz_y_xz, g_x_y_0_0_xx_zz_y_yy, g_x_y_0_0_xx_zz_y_yz, g_x_y_0_0_xx_zz_y_zz, g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_xxx_yzz_y_xx, g_xxx_yzz_y_xy, g_xxx_yzz_y_xz, g_xxx_yzz_y_yy, g_xxx_yzz_y_yz, g_xxx_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_zz_y_xx[i] = -4.0 * g_x_yzz_y_xx[i] * b_exp + 4.0 * g_xxx_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_y_xy[i] = -4.0 * g_x_yzz_y_xy[i] * b_exp + 4.0 * g_xxx_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_y_xz[i] = -4.0 * g_x_yzz_y_xz[i] * b_exp + 4.0 * g_xxx_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_y_yy[i] = -4.0 * g_x_yzz_y_yy[i] * b_exp + 4.0 * g_xxx_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_y_yz[i] = -4.0 * g_x_yzz_y_yz[i] * b_exp + 4.0 * g_xxx_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_y_zz[i] = -4.0 * g_x_yzz_y_zz[i] * b_exp + 4.0 * g_xxx_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (750-756)

    #pragma omp simd aligned(g_x_y_0_0_xx_zz_z_xx, g_x_y_0_0_xx_zz_z_xy, g_x_y_0_0_xx_zz_z_xz, g_x_y_0_0_xx_zz_z_yy, g_x_y_0_0_xx_zz_z_yz, g_x_y_0_0_xx_zz_z_zz, g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_xxx_yzz_z_xx, g_xxx_yzz_z_xy, g_xxx_yzz_z_xz, g_xxx_yzz_z_yy, g_xxx_yzz_z_yz, g_xxx_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xx_zz_z_xx[i] = -4.0 * g_x_yzz_z_xx[i] * b_exp + 4.0 * g_xxx_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_z_xy[i] = -4.0 * g_x_yzz_z_xy[i] * b_exp + 4.0 * g_xxx_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_z_xz[i] = -4.0 * g_x_yzz_z_xz[i] * b_exp + 4.0 * g_xxx_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_z_yy[i] = -4.0 * g_x_yzz_z_yy[i] * b_exp + 4.0 * g_xxx_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_z_yz[i] = -4.0 * g_x_yzz_z_yz[i] * b_exp + 4.0 * g_xxx_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xx_zz_z_zz[i] = -4.0 * g_x_yzz_z_zz[i] * b_exp + 4.0 * g_xxx_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (756-762)

    #pragma omp simd aligned(g_x_y_0_0_xy_xx_x_xx, g_x_y_0_0_xy_xx_x_xy, g_x_y_0_0_xy_xx_x_xz, g_x_y_0_0_xy_xx_x_yy, g_x_y_0_0_xy_xx_x_yz, g_x_y_0_0_xy_xx_x_zz, g_xxy_xxy_x_xx, g_xxy_xxy_x_xy, g_xxy_xxy_x_xz, g_xxy_xxy_x_yy, g_xxy_xxy_x_yz, g_xxy_xxy_x_zz, g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xx_x_xx[i] = -2.0 * g_y_xxy_x_xx[i] * b_exp + 4.0 * g_xxy_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_x_xy[i] = -2.0 * g_y_xxy_x_xy[i] * b_exp + 4.0 * g_xxy_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_x_xz[i] = -2.0 * g_y_xxy_x_xz[i] * b_exp + 4.0 * g_xxy_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_x_yy[i] = -2.0 * g_y_xxy_x_yy[i] * b_exp + 4.0 * g_xxy_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_x_yz[i] = -2.0 * g_y_xxy_x_yz[i] * b_exp + 4.0 * g_xxy_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_x_zz[i] = -2.0 * g_y_xxy_x_zz[i] * b_exp + 4.0 * g_xxy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (762-768)

    #pragma omp simd aligned(g_x_y_0_0_xy_xx_y_xx, g_x_y_0_0_xy_xx_y_xy, g_x_y_0_0_xy_xx_y_xz, g_x_y_0_0_xy_xx_y_yy, g_x_y_0_0_xy_xx_y_yz, g_x_y_0_0_xy_xx_y_zz, g_xxy_xxy_y_xx, g_xxy_xxy_y_xy, g_xxy_xxy_y_xz, g_xxy_xxy_y_yy, g_xxy_xxy_y_yz, g_xxy_xxy_y_zz, g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xx_y_xx[i] = -2.0 * g_y_xxy_y_xx[i] * b_exp + 4.0 * g_xxy_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_y_xy[i] = -2.0 * g_y_xxy_y_xy[i] * b_exp + 4.0 * g_xxy_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_y_xz[i] = -2.0 * g_y_xxy_y_xz[i] * b_exp + 4.0 * g_xxy_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_y_yy[i] = -2.0 * g_y_xxy_y_yy[i] * b_exp + 4.0 * g_xxy_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_y_yz[i] = -2.0 * g_y_xxy_y_yz[i] * b_exp + 4.0 * g_xxy_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_y_zz[i] = -2.0 * g_y_xxy_y_zz[i] * b_exp + 4.0 * g_xxy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (768-774)

    #pragma omp simd aligned(g_x_y_0_0_xy_xx_z_xx, g_x_y_0_0_xy_xx_z_xy, g_x_y_0_0_xy_xx_z_xz, g_x_y_0_0_xy_xx_z_yy, g_x_y_0_0_xy_xx_z_yz, g_x_y_0_0_xy_xx_z_zz, g_xxy_xxy_z_xx, g_xxy_xxy_z_xy, g_xxy_xxy_z_xz, g_xxy_xxy_z_yy, g_xxy_xxy_z_yz, g_xxy_xxy_z_zz, g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xx_z_xx[i] = -2.0 * g_y_xxy_z_xx[i] * b_exp + 4.0 * g_xxy_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_z_xy[i] = -2.0 * g_y_xxy_z_xy[i] * b_exp + 4.0 * g_xxy_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_z_xz[i] = -2.0 * g_y_xxy_z_xz[i] * b_exp + 4.0 * g_xxy_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_z_yy[i] = -2.0 * g_y_xxy_z_yy[i] * b_exp + 4.0 * g_xxy_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_z_yz[i] = -2.0 * g_y_xxy_z_yz[i] * b_exp + 4.0 * g_xxy_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xx_z_zz[i] = -2.0 * g_y_xxy_z_zz[i] * b_exp + 4.0 * g_xxy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (774-780)

    #pragma omp simd aligned(g_x_y_0_0_xy_xy_x_xx, g_x_y_0_0_xy_xy_x_xy, g_x_y_0_0_xy_xy_x_xz, g_x_y_0_0_xy_xy_x_yy, g_x_y_0_0_xy_xy_x_yz, g_x_y_0_0_xy_xy_x_zz, g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xyy_x_xx, g_xxy_xyy_x_xy, g_xxy_xyy_x_xz, g_xxy_xyy_x_yy, g_xxy_xyy_x_yz, g_xxy_xyy_x_zz, g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xy_x_xx[i] = g_y_x_x_xx[i] - 2.0 * g_y_xyy_x_xx[i] * b_exp - 2.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_x_xy[i] = g_y_x_x_xy[i] - 2.0 * g_y_xyy_x_xy[i] * b_exp - 2.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_x_xz[i] = g_y_x_x_xz[i] - 2.0 * g_y_xyy_x_xz[i] * b_exp - 2.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_x_yy[i] = g_y_x_x_yy[i] - 2.0 * g_y_xyy_x_yy[i] * b_exp - 2.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_x_yz[i] = g_y_x_x_yz[i] - 2.0 * g_y_xyy_x_yz[i] * b_exp - 2.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_x_zz[i] = g_y_x_x_zz[i] - 2.0 * g_y_xyy_x_zz[i] * b_exp - 2.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (780-786)

    #pragma omp simd aligned(g_x_y_0_0_xy_xy_y_xx, g_x_y_0_0_xy_xy_y_xy, g_x_y_0_0_xy_xy_y_xz, g_x_y_0_0_xy_xy_y_yy, g_x_y_0_0_xy_xy_y_yz, g_x_y_0_0_xy_xy_y_zz, g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xyy_y_xx, g_xxy_xyy_y_xy, g_xxy_xyy_y_xz, g_xxy_xyy_y_yy, g_xxy_xyy_y_yz, g_xxy_xyy_y_zz, g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xy_y_xx[i] = g_y_x_y_xx[i] - 2.0 * g_y_xyy_y_xx[i] * b_exp - 2.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_y_xy[i] = g_y_x_y_xy[i] - 2.0 * g_y_xyy_y_xy[i] * b_exp - 2.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_y_xz[i] = g_y_x_y_xz[i] - 2.0 * g_y_xyy_y_xz[i] * b_exp - 2.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_y_yy[i] = g_y_x_y_yy[i] - 2.0 * g_y_xyy_y_yy[i] * b_exp - 2.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_y_yz[i] = g_y_x_y_yz[i] - 2.0 * g_y_xyy_y_yz[i] * b_exp - 2.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_y_zz[i] = g_y_x_y_zz[i] - 2.0 * g_y_xyy_y_zz[i] * b_exp - 2.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (786-792)

    #pragma omp simd aligned(g_x_y_0_0_xy_xy_z_xx, g_x_y_0_0_xy_xy_z_xy, g_x_y_0_0_xy_xy_z_xz, g_x_y_0_0_xy_xy_z_yy, g_x_y_0_0_xy_xy_z_yz, g_x_y_0_0_xy_xy_z_zz, g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xyy_z_xx, g_xxy_xyy_z_xy, g_xxy_xyy_z_xz, g_xxy_xyy_z_yy, g_xxy_xyy_z_yz, g_xxy_xyy_z_zz, g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xy_z_xx[i] = g_y_x_z_xx[i] - 2.0 * g_y_xyy_z_xx[i] * b_exp - 2.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_z_xy[i] = g_y_x_z_xy[i] - 2.0 * g_y_xyy_z_xy[i] * b_exp - 2.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_z_xz[i] = g_y_x_z_xz[i] - 2.0 * g_y_xyy_z_xz[i] * b_exp - 2.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_z_yy[i] = g_y_x_z_yy[i] - 2.0 * g_y_xyy_z_yy[i] * b_exp - 2.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_z_yz[i] = g_y_x_z_yz[i] - 2.0 * g_y_xyy_z_yz[i] * b_exp - 2.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xy_z_zz[i] = g_y_x_z_zz[i] - 2.0 * g_y_xyy_z_zz[i] * b_exp - 2.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (792-798)

    #pragma omp simd aligned(g_x_y_0_0_xy_xz_x_xx, g_x_y_0_0_xy_xz_x_xy, g_x_y_0_0_xy_xz_x_xz, g_x_y_0_0_xy_xz_x_yy, g_x_y_0_0_xy_xz_x_yz, g_x_y_0_0_xy_xz_x_zz, g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xz_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (798-804)

    #pragma omp simd aligned(g_x_y_0_0_xy_xz_y_xx, g_x_y_0_0_xy_xz_y_xy, g_x_y_0_0_xy_xz_y_xz, g_x_y_0_0_xy_xz_y_yy, g_x_y_0_0_xy_xz_y_yz, g_x_y_0_0_xy_xz_y_zz, g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xz_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (804-810)

    #pragma omp simd aligned(g_x_y_0_0_xy_xz_z_xx, g_x_y_0_0_xy_xz_z_xy, g_x_y_0_0_xy_xz_z_xz, g_x_y_0_0_xy_xz_z_yy, g_x_y_0_0_xy_xz_z_yz, g_x_y_0_0_xy_xz_z_zz, g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_xz_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_xz_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (810-816)

    #pragma omp simd aligned(g_x_y_0_0_xy_yy_x_xx, g_x_y_0_0_xy_yy_x_xy, g_x_y_0_0_xy_yy_x_xz, g_x_y_0_0_xy_yy_x_yy, g_x_y_0_0_xy_yy_x_yz, g_x_y_0_0_xy_yy_x_zz, g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_xxy_yyy_x_xx, g_xxy_yyy_x_xy, g_xxy_yyy_x_xz, g_xxy_yyy_x_yy, g_xxy_yyy_x_yz, g_xxy_yyy_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yyy_x_xx, g_y_yyy_x_xy, g_y_yyy_x_xz, g_y_yyy_x_yy, g_y_yyy_x_yz, g_y_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yy_x_xx[i] = 2.0 * g_y_y_x_xx[i] - 2.0 * g_y_yyy_x_xx[i] * b_exp - 4.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_x_xy[i] = 2.0 * g_y_y_x_xy[i] - 2.0 * g_y_yyy_x_xy[i] * b_exp - 4.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_x_xz[i] = 2.0 * g_y_y_x_xz[i] - 2.0 * g_y_yyy_x_xz[i] * b_exp - 4.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_x_yy[i] = 2.0 * g_y_y_x_yy[i] - 2.0 * g_y_yyy_x_yy[i] * b_exp - 4.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_x_yz[i] = 2.0 * g_y_y_x_yz[i] - 2.0 * g_y_yyy_x_yz[i] * b_exp - 4.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_x_zz[i] = 2.0 * g_y_y_x_zz[i] - 2.0 * g_y_yyy_x_zz[i] * b_exp - 4.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (816-822)

    #pragma omp simd aligned(g_x_y_0_0_xy_yy_y_xx, g_x_y_0_0_xy_yy_y_xy, g_x_y_0_0_xy_yy_y_xz, g_x_y_0_0_xy_yy_y_yy, g_x_y_0_0_xy_yy_y_yz, g_x_y_0_0_xy_yy_y_zz, g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_xxy_yyy_y_xx, g_xxy_yyy_y_xy, g_xxy_yyy_y_xz, g_xxy_yyy_y_yy, g_xxy_yyy_y_yz, g_xxy_yyy_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yyy_y_xx, g_y_yyy_y_xy, g_y_yyy_y_xz, g_y_yyy_y_yy, g_y_yyy_y_yz, g_y_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yy_y_xx[i] = 2.0 * g_y_y_y_xx[i] - 2.0 * g_y_yyy_y_xx[i] * b_exp - 4.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_y_xy[i] = 2.0 * g_y_y_y_xy[i] - 2.0 * g_y_yyy_y_xy[i] * b_exp - 4.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_y_xz[i] = 2.0 * g_y_y_y_xz[i] - 2.0 * g_y_yyy_y_xz[i] * b_exp - 4.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_y_yy[i] = 2.0 * g_y_y_y_yy[i] - 2.0 * g_y_yyy_y_yy[i] * b_exp - 4.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_y_yz[i] = 2.0 * g_y_y_y_yz[i] - 2.0 * g_y_yyy_y_yz[i] * b_exp - 4.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_y_zz[i] = 2.0 * g_y_y_y_zz[i] - 2.0 * g_y_yyy_y_zz[i] * b_exp - 4.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (822-828)

    #pragma omp simd aligned(g_x_y_0_0_xy_yy_z_xx, g_x_y_0_0_xy_yy_z_xy, g_x_y_0_0_xy_yy_z_xz, g_x_y_0_0_xy_yy_z_yy, g_x_y_0_0_xy_yy_z_yz, g_x_y_0_0_xy_yy_z_zz, g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_xxy_yyy_z_xx, g_xxy_yyy_z_xy, g_xxy_yyy_z_xz, g_xxy_yyy_z_yy, g_xxy_yyy_z_yz, g_xxy_yyy_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yyy_z_xx, g_y_yyy_z_xy, g_y_yyy_z_xz, g_y_yyy_z_yy, g_y_yyy_z_yz, g_y_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yy_z_xx[i] = 2.0 * g_y_y_z_xx[i] - 2.0 * g_y_yyy_z_xx[i] * b_exp - 4.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_z_xy[i] = 2.0 * g_y_y_z_xy[i] - 2.0 * g_y_yyy_z_xy[i] * b_exp - 4.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_z_xz[i] = 2.0 * g_y_y_z_xz[i] - 2.0 * g_y_yyy_z_xz[i] * b_exp - 4.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_z_yy[i] = 2.0 * g_y_y_z_yy[i] - 2.0 * g_y_yyy_z_yy[i] * b_exp - 4.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_z_yz[i] = 2.0 * g_y_y_z_yz[i] - 2.0 * g_y_yyy_z_yz[i] * b_exp - 4.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yy_z_zz[i] = 2.0 * g_y_y_z_zz[i] - 2.0 * g_y_yyy_z_zz[i] * b_exp - 4.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (828-834)

    #pragma omp simd aligned(g_x_y_0_0_xy_yz_x_xx, g_x_y_0_0_xy_yz_x_xy, g_x_y_0_0_xy_yz_x_xz, g_x_y_0_0_xy_yz_x_yy, g_x_y_0_0_xy_yz_x_yz, g_x_y_0_0_xy_yz_x_zz, g_xxy_yyz_x_xx, g_xxy_yyz_x_xy, g_xxy_yyz_x_xz, g_xxy_yyz_x_yy, g_xxy_yyz_x_yz, g_xxy_yyz_x_zz, g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yz_x_xx[i] = g_y_z_x_xx[i] - 2.0 * g_y_yyz_x_xx[i] * b_exp - 2.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_x_xy[i] = g_y_z_x_xy[i] - 2.0 * g_y_yyz_x_xy[i] * b_exp - 2.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_x_xz[i] = g_y_z_x_xz[i] - 2.0 * g_y_yyz_x_xz[i] * b_exp - 2.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_x_yy[i] = g_y_z_x_yy[i] - 2.0 * g_y_yyz_x_yy[i] * b_exp - 2.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_x_yz[i] = g_y_z_x_yz[i] - 2.0 * g_y_yyz_x_yz[i] * b_exp - 2.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_x_zz[i] = g_y_z_x_zz[i] - 2.0 * g_y_yyz_x_zz[i] * b_exp - 2.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (834-840)

    #pragma omp simd aligned(g_x_y_0_0_xy_yz_y_xx, g_x_y_0_0_xy_yz_y_xy, g_x_y_0_0_xy_yz_y_xz, g_x_y_0_0_xy_yz_y_yy, g_x_y_0_0_xy_yz_y_yz, g_x_y_0_0_xy_yz_y_zz, g_xxy_yyz_y_xx, g_xxy_yyz_y_xy, g_xxy_yyz_y_xz, g_xxy_yyz_y_yy, g_xxy_yyz_y_yz, g_xxy_yyz_y_zz, g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yz_y_xx[i] = g_y_z_y_xx[i] - 2.0 * g_y_yyz_y_xx[i] * b_exp - 2.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_y_xy[i] = g_y_z_y_xy[i] - 2.0 * g_y_yyz_y_xy[i] * b_exp - 2.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_y_xz[i] = g_y_z_y_xz[i] - 2.0 * g_y_yyz_y_xz[i] * b_exp - 2.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_y_yy[i] = g_y_z_y_yy[i] - 2.0 * g_y_yyz_y_yy[i] * b_exp - 2.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_y_yz[i] = g_y_z_y_yz[i] - 2.0 * g_y_yyz_y_yz[i] * b_exp - 2.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_y_zz[i] = g_y_z_y_zz[i] - 2.0 * g_y_yyz_y_zz[i] * b_exp - 2.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (840-846)

    #pragma omp simd aligned(g_x_y_0_0_xy_yz_z_xx, g_x_y_0_0_xy_yz_z_xy, g_x_y_0_0_xy_yz_z_xz, g_x_y_0_0_xy_yz_z_yy, g_x_y_0_0_xy_yz_z_yz, g_x_y_0_0_xy_yz_z_zz, g_xxy_yyz_z_xx, g_xxy_yyz_z_xy, g_xxy_yyz_z_xz, g_xxy_yyz_z_yy, g_xxy_yyz_z_yz, g_xxy_yyz_z_zz, g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_yz_z_xx[i] = g_y_z_z_xx[i] - 2.0 * g_y_yyz_z_xx[i] * b_exp - 2.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_z_xy[i] = g_y_z_z_xy[i] - 2.0 * g_y_yyz_z_xy[i] * b_exp - 2.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_z_xz[i] = g_y_z_z_xz[i] - 2.0 * g_y_yyz_z_xz[i] * b_exp - 2.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_z_yy[i] = g_y_z_z_yy[i] - 2.0 * g_y_yyz_z_yy[i] * b_exp - 2.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_z_yz[i] = g_y_z_z_yz[i] - 2.0 * g_y_yyz_z_yz[i] * b_exp - 2.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_yz_z_zz[i] = g_y_z_z_zz[i] - 2.0 * g_y_yyz_z_zz[i] * b_exp - 2.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (846-852)

    #pragma omp simd aligned(g_x_y_0_0_xy_zz_x_xx, g_x_y_0_0_xy_zz_x_xy, g_x_y_0_0_xy_zz_x_xz, g_x_y_0_0_xy_zz_x_yy, g_x_y_0_0_xy_zz_x_yz, g_x_y_0_0_xy_zz_x_zz, g_xxy_yzz_x_xx, g_xxy_yzz_x_xy, g_xxy_yzz_x_xz, g_xxy_yzz_x_yy, g_xxy_yzz_x_yz, g_xxy_yzz_x_zz, g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_zz_x_xx[i] = -2.0 * g_y_yzz_x_xx[i] * b_exp + 4.0 * g_xxy_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_x_xy[i] = -2.0 * g_y_yzz_x_xy[i] * b_exp + 4.0 * g_xxy_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_x_xz[i] = -2.0 * g_y_yzz_x_xz[i] * b_exp + 4.0 * g_xxy_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_x_yy[i] = -2.0 * g_y_yzz_x_yy[i] * b_exp + 4.0 * g_xxy_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_x_yz[i] = -2.0 * g_y_yzz_x_yz[i] * b_exp + 4.0 * g_xxy_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_x_zz[i] = -2.0 * g_y_yzz_x_zz[i] * b_exp + 4.0 * g_xxy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (852-858)

    #pragma omp simd aligned(g_x_y_0_0_xy_zz_y_xx, g_x_y_0_0_xy_zz_y_xy, g_x_y_0_0_xy_zz_y_xz, g_x_y_0_0_xy_zz_y_yy, g_x_y_0_0_xy_zz_y_yz, g_x_y_0_0_xy_zz_y_zz, g_xxy_yzz_y_xx, g_xxy_yzz_y_xy, g_xxy_yzz_y_xz, g_xxy_yzz_y_yy, g_xxy_yzz_y_yz, g_xxy_yzz_y_zz, g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_zz_y_xx[i] = -2.0 * g_y_yzz_y_xx[i] * b_exp + 4.0 * g_xxy_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_y_xy[i] = -2.0 * g_y_yzz_y_xy[i] * b_exp + 4.0 * g_xxy_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_y_xz[i] = -2.0 * g_y_yzz_y_xz[i] * b_exp + 4.0 * g_xxy_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_y_yy[i] = -2.0 * g_y_yzz_y_yy[i] * b_exp + 4.0 * g_xxy_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_y_yz[i] = -2.0 * g_y_yzz_y_yz[i] * b_exp + 4.0 * g_xxy_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_y_zz[i] = -2.0 * g_y_yzz_y_zz[i] * b_exp + 4.0 * g_xxy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (858-864)

    #pragma omp simd aligned(g_x_y_0_0_xy_zz_z_xx, g_x_y_0_0_xy_zz_z_xy, g_x_y_0_0_xy_zz_z_xz, g_x_y_0_0_xy_zz_z_yy, g_x_y_0_0_xy_zz_z_yz, g_x_y_0_0_xy_zz_z_zz, g_xxy_yzz_z_xx, g_xxy_yzz_z_xy, g_xxy_yzz_z_xz, g_xxy_yzz_z_yy, g_xxy_yzz_z_yz, g_xxy_yzz_z_zz, g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xy_zz_z_xx[i] = -2.0 * g_y_yzz_z_xx[i] * b_exp + 4.0 * g_xxy_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_z_xy[i] = -2.0 * g_y_yzz_z_xy[i] * b_exp + 4.0 * g_xxy_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_z_xz[i] = -2.0 * g_y_yzz_z_xz[i] * b_exp + 4.0 * g_xxy_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_z_yy[i] = -2.0 * g_y_yzz_z_yy[i] * b_exp + 4.0 * g_xxy_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_z_yz[i] = -2.0 * g_y_yzz_z_yz[i] * b_exp + 4.0 * g_xxy_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xy_zz_z_zz[i] = -2.0 * g_y_yzz_z_zz[i] * b_exp + 4.0 * g_xxy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (864-870)

    #pragma omp simd aligned(g_x_y_0_0_xz_xx_x_xx, g_x_y_0_0_xz_xx_x_xy, g_x_y_0_0_xz_xx_x_xz, g_x_y_0_0_xz_xx_x_yy, g_x_y_0_0_xz_xx_x_yz, g_x_y_0_0_xz_xx_x_zz, g_xxz_xxy_x_xx, g_xxz_xxy_x_xy, g_xxz_xxy_x_xz, g_xxz_xxy_x_yy, g_xxz_xxy_x_yz, g_xxz_xxy_x_zz, g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xx_x_xx[i] = -2.0 * g_z_xxy_x_xx[i] * b_exp + 4.0 * g_xxz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_x_xy[i] = -2.0 * g_z_xxy_x_xy[i] * b_exp + 4.0 * g_xxz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_x_xz[i] = -2.0 * g_z_xxy_x_xz[i] * b_exp + 4.0 * g_xxz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_x_yy[i] = -2.0 * g_z_xxy_x_yy[i] * b_exp + 4.0 * g_xxz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_x_yz[i] = -2.0 * g_z_xxy_x_yz[i] * b_exp + 4.0 * g_xxz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_x_zz[i] = -2.0 * g_z_xxy_x_zz[i] * b_exp + 4.0 * g_xxz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (870-876)

    #pragma omp simd aligned(g_x_y_0_0_xz_xx_y_xx, g_x_y_0_0_xz_xx_y_xy, g_x_y_0_0_xz_xx_y_xz, g_x_y_0_0_xz_xx_y_yy, g_x_y_0_0_xz_xx_y_yz, g_x_y_0_0_xz_xx_y_zz, g_xxz_xxy_y_xx, g_xxz_xxy_y_xy, g_xxz_xxy_y_xz, g_xxz_xxy_y_yy, g_xxz_xxy_y_yz, g_xxz_xxy_y_zz, g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xx_y_xx[i] = -2.0 * g_z_xxy_y_xx[i] * b_exp + 4.0 * g_xxz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_y_xy[i] = -2.0 * g_z_xxy_y_xy[i] * b_exp + 4.0 * g_xxz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_y_xz[i] = -2.0 * g_z_xxy_y_xz[i] * b_exp + 4.0 * g_xxz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_y_yy[i] = -2.0 * g_z_xxy_y_yy[i] * b_exp + 4.0 * g_xxz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_y_yz[i] = -2.0 * g_z_xxy_y_yz[i] * b_exp + 4.0 * g_xxz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_y_zz[i] = -2.0 * g_z_xxy_y_zz[i] * b_exp + 4.0 * g_xxz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (876-882)

    #pragma omp simd aligned(g_x_y_0_0_xz_xx_z_xx, g_x_y_0_0_xz_xx_z_xy, g_x_y_0_0_xz_xx_z_xz, g_x_y_0_0_xz_xx_z_yy, g_x_y_0_0_xz_xx_z_yz, g_x_y_0_0_xz_xx_z_zz, g_xxz_xxy_z_xx, g_xxz_xxy_z_xy, g_xxz_xxy_z_xz, g_xxz_xxy_z_yy, g_xxz_xxy_z_yz, g_xxz_xxy_z_zz, g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xx_z_xx[i] = -2.0 * g_z_xxy_z_xx[i] * b_exp + 4.0 * g_xxz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_z_xy[i] = -2.0 * g_z_xxy_z_xy[i] * b_exp + 4.0 * g_xxz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_z_xz[i] = -2.0 * g_z_xxy_z_xz[i] * b_exp + 4.0 * g_xxz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_z_yy[i] = -2.0 * g_z_xxy_z_yy[i] * b_exp + 4.0 * g_xxz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_z_yz[i] = -2.0 * g_z_xxy_z_yz[i] * b_exp + 4.0 * g_xxz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xx_z_zz[i] = -2.0 * g_z_xxy_z_zz[i] * b_exp + 4.0 * g_xxz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (882-888)

    #pragma omp simd aligned(g_x_y_0_0_xz_xy_x_xx, g_x_y_0_0_xz_xy_x_xy, g_x_y_0_0_xz_xy_x_xz, g_x_y_0_0_xz_xy_x_yy, g_x_y_0_0_xz_xy_x_yz, g_x_y_0_0_xz_xy_x_zz, g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xyy_x_xx, g_xxz_xyy_x_xy, g_xxz_xyy_x_xz, g_xxz_xyy_x_yy, g_xxz_xyy_x_yz, g_xxz_xyy_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xy_x_xx[i] = g_z_x_x_xx[i] - 2.0 * g_z_xyy_x_xx[i] * b_exp - 2.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_x_xy[i] = g_z_x_x_xy[i] - 2.0 * g_z_xyy_x_xy[i] * b_exp - 2.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_x_xz[i] = g_z_x_x_xz[i] - 2.0 * g_z_xyy_x_xz[i] * b_exp - 2.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_x_yy[i] = g_z_x_x_yy[i] - 2.0 * g_z_xyy_x_yy[i] * b_exp - 2.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_x_yz[i] = g_z_x_x_yz[i] - 2.0 * g_z_xyy_x_yz[i] * b_exp - 2.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_x_zz[i] = g_z_x_x_zz[i] - 2.0 * g_z_xyy_x_zz[i] * b_exp - 2.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (888-894)

    #pragma omp simd aligned(g_x_y_0_0_xz_xy_y_xx, g_x_y_0_0_xz_xy_y_xy, g_x_y_0_0_xz_xy_y_xz, g_x_y_0_0_xz_xy_y_yy, g_x_y_0_0_xz_xy_y_yz, g_x_y_0_0_xz_xy_y_zz, g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xyy_y_xx, g_xxz_xyy_y_xy, g_xxz_xyy_y_xz, g_xxz_xyy_y_yy, g_xxz_xyy_y_yz, g_xxz_xyy_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xy_y_xx[i] = g_z_x_y_xx[i] - 2.0 * g_z_xyy_y_xx[i] * b_exp - 2.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_y_xy[i] = g_z_x_y_xy[i] - 2.0 * g_z_xyy_y_xy[i] * b_exp - 2.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_y_xz[i] = g_z_x_y_xz[i] - 2.0 * g_z_xyy_y_xz[i] * b_exp - 2.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_y_yy[i] = g_z_x_y_yy[i] - 2.0 * g_z_xyy_y_yy[i] * b_exp - 2.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_y_yz[i] = g_z_x_y_yz[i] - 2.0 * g_z_xyy_y_yz[i] * b_exp - 2.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_y_zz[i] = g_z_x_y_zz[i] - 2.0 * g_z_xyy_y_zz[i] * b_exp - 2.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (894-900)

    #pragma omp simd aligned(g_x_y_0_0_xz_xy_z_xx, g_x_y_0_0_xz_xy_z_xy, g_x_y_0_0_xz_xy_z_xz, g_x_y_0_0_xz_xy_z_yy, g_x_y_0_0_xz_xy_z_yz, g_x_y_0_0_xz_xy_z_zz, g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xyy_z_xx, g_xxz_xyy_z_xy, g_xxz_xyy_z_xz, g_xxz_xyy_z_yy, g_xxz_xyy_z_yz, g_xxz_xyy_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xy_z_xx[i] = g_z_x_z_xx[i] - 2.0 * g_z_xyy_z_xx[i] * b_exp - 2.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_z_xy[i] = g_z_x_z_xy[i] - 2.0 * g_z_xyy_z_xy[i] * b_exp - 2.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_z_xz[i] = g_z_x_z_xz[i] - 2.0 * g_z_xyy_z_xz[i] * b_exp - 2.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_z_yy[i] = g_z_x_z_yy[i] - 2.0 * g_z_xyy_z_yy[i] * b_exp - 2.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_z_yz[i] = g_z_x_z_yz[i] - 2.0 * g_z_xyy_z_yz[i] * b_exp - 2.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xy_z_zz[i] = g_z_x_z_zz[i] - 2.0 * g_z_xyy_z_zz[i] * b_exp - 2.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (900-906)

    #pragma omp simd aligned(g_x_y_0_0_xz_xz_x_xx, g_x_y_0_0_xz_xz_x_xy, g_x_y_0_0_xz_xz_x_xz, g_x_y_0_0_xz_xz_x_yy, g_x_y_0_0_xz_xz_x_yz, g_x_y_0_0_xz_xz_x_zz, g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xz_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (906-912)

    #pragma omp simd aligned(g_x_y_0_0_xz_xz_y_xx, g_x_y_0_0_xz_xz_y_xy, g_x_y_0_0_xz_xz_y_xz, g_x_y_0_0_xz_xz_y_yy, g_x_y_0_0_xz_xz_y_yz, g_x_y_0_0_xz_xz_y_zz, g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xz_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (912-918)

    #pragma omp simd aligned(g_x_y_0_0_xz_xz_z_xx, g_x_y_0_0_xz_xz_z_xy, g_x_y_0_0_xz_xz_z_xz, g_x_y_0_0_xz_xz_z_yy, g_x_y_0_0_xz_xz_z_yz, g_x_y_0_0_xz_xz_z_zz, g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_xz_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_xz_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (918-924)

    #pragma omp simd aligned(g_x_y_0_0_xz_yy_x_xx, g_x_y_0_0_xz_yy_x_xy, g_x_y_0_0_xz_yy_x_xz, g_x_y_0_0_xz_yy_x_yy, g_x_y_0_0_xz_yy_x_yz, g_x_y_0_0_xz_yy_x_zz, g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_xxz_yyy_x_xx, g_xxz_yyy_x_xy, g_xxz_yyy_x_xz, g_xxz_yyy_x_yy, g_xxz_yyy_x_yz, g_xxz_yyy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yyy_x_xx, g_z_yyy_x_xy, g_z_yyy_x_xz, g_z_yyy_x_yy, g_z_yyy_x_yz, g_z_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yy_x_xx[i] = 2.0 * g_z_y_x_xx[i] - 2.0 * g_z_yyy_x_xx[i] * b_exp - 4.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_x_xy[i] = 2.0 * g_z_y_x_xy[i] - 2.0 * g_z_yyy_x_xy[i] * b_exp - 4.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_x_xz[i] = 2.0 * g_z_y_x_xz[i] - 2.0 * g_z_yyy_x_xz[i] * b_exp - 4.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_x_yy[i] = 2.0 * g_z_y_x_yy[i] - 2.0 * g_z_yyy_x_yy[i] * b_exp - 4.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_x_yz[i] = 2.0 * g_z_y_x_yz[i] - 2.0 * g_z_yyy_x_yz[i] * b_exp - 4.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_x_zz[i] = 2.0 * g_z_y_x_zz[i] - 2.0 * g_z_yyy_x_zz[i] * b_exp - 4.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (924-930)

    #pragma omp simd aligned(g_x_y_0_0_xz_yy_y_xx, g_x_y_0_0_xz_yy_y_xy, g_x_y_0_0_xz_yy_y_xz, g_x_y_0_0_xz_yy_y_yy, g_x_y_0_0_xz_yy_y_yz, g_x_y_0_0_xz_yy_y_zz, g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_xxz_yyy_y_xx, g_xxz_yyy_y_xy, g_xxz_yyy_y_xz, g_xxz_yyy_y_yy, g_xxz_yyy_y_yz, g_xxz_yyy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yyy_y_xx, g_z_yyy_y_xy, g_z_yyy_y_xz, g_z_yyy_y_yy, g_z_yyy_y_yz, g_z_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yy_y_xx[i] = 2.0 * g_z_y_y_xx[i] - 2.0 * g_z_yyy_y_xx[i] * b_exp - 4.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_y_xy[i] = 2.0 * g_z_y_y_xy[i] - 2.0 * g_z_yyy_y_xy[i] * b_exp - 4.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_y_xz[i] = 2.0 * g_z_y_y_xz[i] - 2.0 * g_z_yyy_y_xz[i] * b_exp - 4.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_y_yy[i] = 2.0 * g_z_y_y_yy[i] - 2.0 * g_z_yyy_y_yy[i] * b_exp - 4.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_y_yz[i] = 2.0 * g_z_y_y_yz[i] - 2.0 * g_z_yyy_y_yz[i] * b_exp - 4.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_y_zz[i] = 2.0 * g_z_y_y_zz[i] - 2.0 * g_z_yyy_y_zz[i] * b_exp - 4.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (930-936)

    #pragma omp simd aligned(g_x_y_0_0_xz_yy_z_xx, g_x_y_0_0_xz_yy_z_xy, g_x_y_0_0_xz_yy_z_xz, g_x_y_0_0_xz_yy_z_yy, g_x_y_0_0_xz_yy_z_yz, g_x_y_0_0_xz_yy_z_zz, g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_xxz_yyy_z_xx, g_xxz_yyy_z_xy, g_xxz_yyy_z_xz, g_xxz_yyy_z_yy, g_xxz_yyy_z_yz, g_xxz_yyy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yyy_z_xx, g_z_yyy_z_xy, g_z_yyy_z_xz, g_z_yyy_z_yy, g_z_yyy_z_yz, g_z_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yy_z_xx[i] = 2.0 * g_z_y_z_xx[i] - 2.0 * g_z_yyy_z_xx[i] * b_exp - 4.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_z_xy[i] = 2.0 * g_z_y_z_xy[i] - 2.0 * g_z_yyy_z_xy[i] * b_exp - 4.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_z_xz[i] = 2.0 * g_z_y_z_xz[i] - 2.0 * g_z_yyy_z_xz[i] * b_exp - 4.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_z_yy[i] = 2.0 * g_z_y_z_yy[i] - 2.0 * g_z_yyy_z_yy[i] * b_exp - 4.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_z_yz[i] = 2.0 * g_z_y_z_yz[i] - 2.0 * g_z_yyy_z_yz[i] * b_exp - 4.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yy_z_zz[i] = 2.0 * g_z_y_z_zz[i] - 2.0 * g_z_yyy_z_zz[i] * b_exp - 4.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (936-942)

    #pragma omp simd aligned(g_x_y_0_0_xz_yz_x_xx, g_x_y_0_0_xz_yz_x_xy, g_x_y_0_0_xz_yz_x_xz, g_x_y_0_0_xz_yz_x_yy, g_x_y_0_0_xz_yz_x_yz, g_x_y_0_0_xz_yz_x_zz, g_xxz_yyz_x_xx, g_xxz_yyz_x_xy, g_xxz_yyz_x_xz, g_xxz_yyz_x_yy, g_xxz_yyz_x_yz, g_xxz_yyz_x_zz, g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yz_x_xx[i] = g_z_z_x_xx[i] - 2.0 * g_z_yyz_x_xx[i] * b_exp - 2.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_x_xy[i] = g_z_z_x_xy[i] - 2.0 * g_z_yyz_x_xy[i] * b_exp - 2.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_x_xz[i] = g_z_z_x_xz[i] - 2.0 * g_z_yyz_x_xz[i] * b_exp - 2.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_x_yy[i] = g_z_z_x_yy[i] - 2.0 * g_z_yyz_x_yy[i] * b_exp - 2.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_x_yz[i] = g_z_z_x_yz[i] - 2.0 * g_z_yyz_x_yz[i] * b_exp - 2.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_x_zz[i] = g_z_z_x_zz[i] - 2.0 * g_z_yyz_x_zz[i] * b_exp - 2.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (942-948)

    #pragma omp simd aligned(g_x_y_0_0_xz_yz_y_xx, g_x_y_0_0_xz_yz_y_xy, g_x_y_0_0_xz_yz_y_xz, g_x_y_0_0_xz_yz_y_yy, g_x_y_0_0_xz_yz_y_yz, g_x_y_0_0_xz_yz_y_zz, g_xxz_yyz_y_xx, g_xxz_yyz_y_xy, g_xxz_yyz_y_xz, g_xxz_yyz_y_yy, g_xxz_yyz_y_yz, g_xxz_yyz_y_zz, g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yz_y_xx[i] = g_z_z_y_xx[i] - 2.0 * g_z_yyz_y_xx[i] * b_exp - 2.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_y_xy[i] = g_z_z_y_xy[i] - 2.0 * g_z_yyz_y_xy[i] * b_exp - 2.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_y_xz[i] = g_z_z_y_xz[i] - 2.0 * g_z_yyz_y_xz[i] * b_exp - 2.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_y_yy[i] = g_z_z_y_yy[i] - 2.0 * g_z_yyz_y_yy[i] * b_exp - 2.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_y_yz[i] = g_z_z_y_yz[i] - 2.0 * g_z_yyz_y_yz[i] * b_exp - 2.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_y_zz[i] = g_z_z_y_zz[i] - 2.0 * g_z_yyz_y_zz[i] * b_exp - 2.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (948-954)

    #pragma omp simd aligned(g_x_y_0_0_xz_yz_z_xx, g_x_y_0_0_xz_yz_z_xy, g_x_y_0_0_xz_yz_z_xz, g_x_y_0_0_xz_yz_z_yy, g_x_y_0_0_xz_yz_z_yz, g_x_y_0_0_xz_yz_z_zz, g_xxz_yyz_z_xx, g_xxz_yyz_z_xy, g_xxz_yyz_z_xz, g_xxz_yyz_z_yy, g_xxz_yyz_z_yz, g_xxz_yyz_z_zz, g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_yz_z_xx[i] = g_z_z_z_xx[i] - 2.0 * g_z_yyz_z_xx[i] * b_exp - 2.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_z_xy[i] = g_z_z_z_xy[i] - 2.0 * g_z_yyz_z_xy[i] * b_exp - 2.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_z_xz[i] = g_z_z_z_xz[i] - 2.0 * g_z_yyz_z_xz[i] * b_exp - 2.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_z_yy[i] = g_z_z_z_yy[i] - 2.0 * g_z_yyz_z_yy[i] * b_exp - 2.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_z_yz[i] = g_z_z_z_yz[i] - 2.0 * g_z_yyz_z_yz[i] * b_exp - 2.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_yz_z_zz[i] = g_z_z_z_zz[i] - 2.0 * g_z_yyz_z_zz[i] * b_exp - 2.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (954-960)

    #pragma omp simd aligned(g_x_y_0_0_xz_zz_x_xx, g_x_y_0_0_xz_zz_x_xy, g_x_y_0_0_xz_zz_x_xz, g_x_y_0_0_xz_zz_x_yy, g_x_y_0_0_xz_zz_x_yz, g_x_y_0_0_xz_zz_x_zz, g_xxz_yzz_x_xx, g_xxz_yzz_x_xy, g_xxz_yzz_x_xz, g_xxz_yzz_x_yy, g_xxz_yzz_x_yz, g_xxz_yzz_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_zz_x_xx[i] = -2.0 * g_z_yzz_x_xx[i] * b_exp + 4.0 * g_xxz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_x_xy[i] = -2.0 * g_z_yzz_x_xy[i] * b_exp + 4.0 * g_xxz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_x_xz[i] = -2.0 * g_z_yzz_x_xz[i] * b_exp + 4.0 * g_xxz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_x_yy[i] = -2.0 * g_z_yzz_x_yy[i] * b_exp + 4.0 * g_xxz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_x_yz[i] = -2.0 * g_z_yzz_x_yz[i] * b_exp + 4.0 * g_xxz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_x_zz[i] = -2.0 * g_z_yzz_x_zz[i] * b_exp + 4.0 * g_xxz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (960-966)

    #pragma omp simd aligned(g_x_y_0_0_xz_zz_y_xx, g_x_y_0_0_xz_zz_y_xy, g_x_y_0_0_xz_zz_y_xz, g_x_y_0_0_xz_zz_y_yy, g_x_y_0_0_xz_zz_y_yz, g_x_y_0_0_xz_zz_y_zz, g_xxz_yzz_y_xx, g_xxz_yzz_y_xy, g_xxz_yzz_y_xz, g_xxz_yzz_y_yy, g_xxz_yzz_y_yz, g_xxz_yzz_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_zz_y_xx[i] = -2.0 * g_z_yzz_y_xx[i] * b_exp + 4.0 * g_xxz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_y_xy[i] = -2.0 * g_z_yzz_y_xy[i] * b_exp + 4.0 * g_xxz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_y_xz[i] = -2.0 * g_z_yzz_y_xz[i] * b_exp + 4.0 * g_xxz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_y_yy[i] = -2.0 * g_z_yzz_y_yy[i] * b_exp + 4.0 * g_xxz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_y_yz[i] = -2.0 * g_z_yzz_y_yz[i] * b_exp + 4.0 * g_xxz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_y_zz[i] = -2.0 * g_z_yzz_y_zz[i] * b_exp + 4.0 * g_xxz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (966-972)

    #pragma omp simd aligned(g_x_y_0_0_xz_zz_z_xx, g_x_y_0_0_xz_zz_z_xy, g_x_y_0_0_xz_zz_z_xz, g_x_y_0_0_xz_zz_z_yy, g_x_y_0_0_xz_zz_z_yz, g_x_y_0_0_xz_zz_z_zz, g_xxz_yzz_z_xx, g_xxz_yzz_z_xy, g_xxz_yzz_z_xz, g_xxz_yzz_z_yy, g_xxz_yzz_z_yz, g_xxz_yzz_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_xz_zz_z_xx[i] = -2.0 * g_z_yzz_z_xx[i] * b_exp + 4.0 * g_xxz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_z_xy[i] = -2.0 * g_z_yzz_z_xy[i] * b_exp + 4.0 * g_xxz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_z_xz[i] = -2.0 * g_z_yzz_z_xz[i] * b_exp + 4.0 * g_xxz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_z_yy[i] = -2.0 * g_z_yzz_z_yy[i] * b_exp + 4.0 * g_xxz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_z_yz[i] = -2.0 * g_z_yzz_z_yz[i] * b_exp + 4.0 * g_xxz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_xz_zz_z_zz[i] = -2.0 * g_z_yzz_z_zz[i] * b_exp + 4.0 * g_xxz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (972-978)

    #pragma omp simd aligned(g_x_y_0_0_yy_xx_x_xx, g_x_y_0_0_yy_xx_x_xy, g_x_y_0_0_yy_xx_x_xz, g_x_y_0_0_yy_xx_x_yy, g_x_y_0_0_yy_xx_x_yz, g_x_y_0_0_yy_xx_x_zz, g_xyy_xxy_x_xx, g_xyy_xxy_x_xy, g_xyy_xxy_x_xz, g_xyy_xxy_x_yy, g_xyy_xxy_x_yz, g_xyy_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xx_x_xx[i] = 4.0 * g_xyy_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_x_xy[i] = 4.0 * g_xyy_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_x_xz[i] = 4.0 * g_xyy_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_x_yy[i] = 4.0 * g_xyy_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_x_yz[i] = 4.0 * g_xyy_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_x_zz[i] = 4.0 * g_xyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (978-984)

    #pragma omp simd aligned(g_x_y_0_0_yy_xx_y_xx, g_x_y_0_0_yy_xx_y_xy, g_x_y_0_0_yy_xx_y_xz, g_x_y_0_0_yy_xx_y_yy, g_x_y_0_0_yy_xx_y_yz, g_x_y_0_0_yy_xx_y_zz, g_xyy_xxy_y_xx, g_xyy_xxy_y_xy, g_xyy_xxy_y_xz, g_xyy_xxy_y_yy, g_xyy_xxy_y_yz, g_xyy_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xx_y_xx[i] = 4.0 * g_xyy_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_y_xy[i] = 4.0 * g_xyy_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_y_xz[i] = 4.0 * g_xyy_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_y_yy[i] = 4.0 * g_xyy_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_y_yz[i] = 4.0 * g_xyy_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_y_zz[i] = 4.0 * g_xyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (984-990)

    #pragma omp simd aligned(g_x_y_0_0_yy_xx_z_xx, g_x_y_0_0_yy_xx_z_xy, g_x_y_0_0_yy_xx_z_xz, g_x_y_0_0_yy_xx_z_yy, g_x_y_0_0_yy_xx_z_yz, g_x_y_0_0_yy_xx_z_zz, g_xyy_xxy_z_xx, g_xyy_xxy_z_xy, g_xyy_xxy_z_xz, g_xyy_xxy_z_yy, g_xyy_xxy_z_yz, g_xyy_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xx_z_xx[i] = 4.0 * g_xyy_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_z_xy[i] = 4.0 * g_xyy_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_z_xz[i] = 4.0 * g_xyy_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_z_yy[i] = 4.0 * g_xyy_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_z_yz[i] = 4.0 * g_xyy_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xx_z_zz[i] = 4.0 * g_xyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (990-996)

    #pragma omp simd aligned(g_x_y_0_0_yy_xy_x_xx, g_x_y_0_0_yy_xy_x_xy, g_x_y_0_0_yy_xy_x_xz, g_x_y_0_0_yy_xy_x_yy, g_x_y_0_0_yy_xy_x_yz, g_x_y_0_0_yy_xy_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xyy_x_xx, g_xyy_xyy_x_xy, g_xyy_xyy_x_xz, g_xyy_xyy_x_yy, g_xyy_xyy_x_yz, g_xyy_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xy_x_xx[i] = -2.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_x_xy[i] = -2.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_x_xz[i] = -2.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_x_yy[i] = -2.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_x_yz[i] = -2.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_x_zz[i] = -2.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (996-1002)

    #pragma omp simd aligned(g_x_y_0_0_yy_xy_y_xx, g_x_y_0_0_yy_xy_y_xy, g_x_y_0_0_yy_xy_y_xz, g_x_y_0_0_yy_xy_y_yy, g_x_y_0_0_yy_xy_y_yz, g_x_y_0_0_yy_xy_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xyy_y_xx, g_xyy_xyy_y_xy, g_xyy_xyy_y_xz, g_xyy_xyy_y_yy, g_xyy_xyy_y_yz, g_xyy_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xy_y_xx[i] = -2.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_y_xy[i] = -2.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_y_xz[i] = -2.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_y_yy[i] = -2.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_y_yz[i] = -2.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_y_zz[i] = -2.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1002-1008)

    #pragma omp simd aligned(g_x_y_0_0_yy_xy_z_xx, g_x_y_0_0_yy_xy_z_xy, g_x_y_0_0_yy_xy_z_xz, g_x_y_0_0_yy_xy_z_yy, g_x_y_0_0_yy_xy_z_yz, g_x_y_0_0_yy_xy_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xyy_z_xx, g_xyy_xyy_z_xy, g_xyy_xyy_z_xz, g_xyy_xyy_z_yy, g_xyy_xyy_z_yz, g_xyy_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xy_z_xx[i] = -2.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_z_xy[i] = -2.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_z_xz[i] = -2.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_z_yy[i] = -2.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_z_yz[i] = -2.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xy_z_zz[i] = -2.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1008-1014)

    #pragma omp simd aligned(g_x_y_0_0_yy_xz_x_xx, g_x_y_0_0_yy_xz_x_xy, g_x_y_0_0_yy_xz_x_xz, g_x_y_0_0_yy_xz_x_yy, g_x_y_0_0_yy_xz_x_yz, g_x_y_0_0_yy_xz_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xz_x_xx[i] = 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_x_xy[i] = 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_x_xz[i] = 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_x_yy[i] = 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_x_yz[i] = 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_x_zz[i] = 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1014-1020)

    #pragma omp simd aligned(g_x_y_0_0_yy_xz_y_xx, g_x_y_0_0_yy_xz_y_xy, g_x_y_0_0_yy_xz_y_xz, g_x_y_0_0_yy_xz_y_yy, g_x_y_0_0_yy_xz_y_yz, g_x_y_0_0_yy_xz_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xz_y_xx[i] = 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_y_xy[i] = 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_y_xz[i] = 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_y_yy[i] = 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_y_yz[i] = 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_y_zz[i] = 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1020-1026)

    #pragma omp simd aligned(g_x_y_0_0_yy_xz_z_xx, g_x_y_0_0_yy_xz_z_xy, g_x_y_0_0_yy_xz_z_xz, g_x_y_0_0_yy_xz_z_yy, g_x_y_0_0_yy_xz_z_yz, g_x_y_0_0_yy_xz_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_xz_z_xx[i] = 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_z_xy[i] = 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_z_xz[i] = 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_z_yy[i] = 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_z_yz[i] = 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_xz_z_zz[i] = 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1026-1032)

    #pragma omp simd aligned(g_x_y_0_0_yy_yy_x_xx, g_x_y_0_0_yy_yy_x_xy, g_x_y_0_0_yy_yy_x_xz, g_x_y_0_0_yy_yy_x_yy, g_x_y_0_0_yy_yy_x_yz, g_x_y_0_0_yy_yy_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz, g_xyy_yyy_x_xx, g_xyy_yyy_x_xy, g_xyy_yyy_x_xz, g_xyy_yyy_x_yy, g_xyy_yyy_x_yz, g_xyy_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yy_x_xx[i] = -4.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_x_xy[i] = -4.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_x_xz[i] = -4.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_x_yy[i] = -4.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_x_yz[i] = -4.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_x_zz[i] = -4.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1032-1038)

    #pragma omp simd aligned(g_x_y_0_0_yy_yy_y_xx, g_x_y_0_0_yy_yy_y_xy, g_x_y_0_0_yy_yy_y_xz, g_x_y_0_0_yy_yy_y_yy, g_x_y_0_0_yy_yy_y_yz, g_x_y_0_0_yy_yy_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz, g_xyy_yyy_y_xx, g_xyy_yyy_y_xy, g_xyy_yyy_y_xz, g_xyy_yyy_y_yy, g_xyy_yyy_y_yz, g_xyy_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yy_y_xx[i] = -4.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_y_xy[i] = -4.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_y_xz[i] = -4.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_y_yy[i] = -4.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_y_yz[i] = -4.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_y_zz[i] = -4.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1038-1044)

    #pragma omp simd aligned(g_x_y_0_0_yy_yy_z_xx, g_x_y_0_0_yy_yy_z_xy, g_x_y_0_0_yy_yy_z_xz, g_x_y_0_0_yy_yy_z_yy, g_x_y_0_0_yy_yy_z_yz, g_x_y_0_0_yy_yy_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz, g_xyy_yyy_z_xx, g_xyy_yyy_z_xy, g_xyy_yyy_z_xz, g_xyy_yyy_z_yy, g_xyy_yyy_z_yz, g_xyy_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yy_z_xx[i] = -4.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_z_xy[i] = -4.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_z_xz[i] = -4.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_z_yy[i] = -4.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_z_yz[i] = -4.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yy_z_zz[i] = -4.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1044-1050)

    #pragma omp simd aligned(g_x_y_0_0_yy_yz_x_xx, g_x_y_0_0_yy_yz_x_xy, g_x_y_0_0_yy_yz_x_xz, g_x_y_0_0_yy_yz_x_yy, g_x_y_0_0_yy_yz_x_yz, g_x_y_0_0_yy_yz_x_zz, g_xyy_yyz_x_xx, g_xyy_yyz_x_xy, g_xyy_yyz_x_xz, g_xyy_yyz_x_yy, g_xyy_yyz_x_yz, g_xyy_yyz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yz_x_xx[i] = -2.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_x_xy[i] = -2.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_x_xz[i] = -2.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_x_yy[i] = -2.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_x_yz[i] = -2.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_x_zz[i] = -2.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1050-1056)

    #pragma omp simd aligned(g_x_y_0_0_yy_yz_y_xx, g_x_y_0_0_yy_yz_y_xy, g_x_y_0_0_yy_yz_y_xz, g_x_y_0_0_yy_yz_y_yy, g_x_y_0_0_yy_yz_y_yz, g_x_y_0_0_yy_yz_y_zz, g_xyy_yyz_y_xx, g_xyy_yyz_y_xy, g_xyy_yyz_y_xz, g_xyy_yyz_y_yy, g_xyy_yyz_y_yz, g_xyy_yyz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yz_y_xx[i] = -2.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_y_xy[i] = -2.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_y_xz[i] = -2.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_y_yy[i] = -2.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_y_yz[i] = -2.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_y_zz[i] = -2.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1056-1062)

    #pragma omp simd aligned(g_x_y_0_0_yy_yz_z_xx, g_x_y_0_0_yy_yz_z_xy, g_x_y_0_0_yy_yz_z_xz, g_x_y_0_0_yy_yz_z_yy, g_x_y_0_0_yy_yz_z_yz, g_x_y_0_0_yy_yz_z_zz, g_xyy_yyz_z_xx, g_xyy_yyz_z_xy, g_xyy_yyz_z_xz, g_xyy_yyz_z_yy, g_xyy_yyz_z_yz, g_xyy_yyz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_yz_z_xx[i] = -2.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_z_xy[i] = -2.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_z_xz[i] = -2.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_z_yy[i] = -2.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_z_yz[i] = -2.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_yz_z_zz[i] = -2.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1062-1068)

    #pragma omp simd aligned(g_x_y_0_0_yy_zz_x_xx, g_x_y_0_0_yy_zz_x_xy, g_x_y_0_0_yy_zz_x_xz, g_x_y_0_0_yy_zz_x_yy, g_x_y_0_0_yy_zz_x_yz, g_x_y_0_0_yy_zz_x_zz, g_xyy_yzz_x_xx, g_xyy_yzz_x_xy, g_xyy_yzz_x_xz, g_xyy_yzz_x_yy, g_xyy_yzz_x_yz, g_xyy_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_zz_x_xx[i] = 4.0 * g_xyy_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_x_xy[i] = 4.0 * g_xyy_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_x_xz[i] = 4.0 * g_xyy_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_x_yy[i] = 4.0 * g_xyy_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_x_yz[i] = 4.0 * g_xyy_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_x_zz[i] = 4.0 * g_xyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1068-1074)

    #pragma omp simd aligned(g_x_y_0_0_yy_zz_y_xx, g_x_y_0_0_yy_zz_y_xy, g_x_y_0_0_yy_zz_y_xz, g_x_y_0_0_yy_zz_y_yy, g_x_y_0_0_yy_zz_y_yz, g_x_y_0_0_yy_zz_y_zz, g_xyy_yzz_y_xx, g_xyy_yzz_y_xy, g_xyy_yzz_y_xz, g_xyy_yzz_y_yy, g_xyy_yzz_y_yz, g_xyy_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_zz_y_xx[i] = 4.0 * g_xyy_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_y_xy[i] = 4.0 * g_xyy_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_y_xz[i] = 4.0 * g_xyy_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_y_yy[i] = 4.0 * g_xyy_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_y_yz[i] = 4.0 * g_xyy_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_y_zz[i] = 4.0 * g_xyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1074-1080)

    #pragma omp simd aligned(g_x_y_0_0_yy_zz_z_xx, g_x_y_0_0_yy_zz_z_xy, g_x_y_0_0_yy_zz_z_xz, g_x_y_0_0_yy_zz_z_yy, g_x_y_0_0_yy_zz_z_yz, g_x_y_0_0_yy_zz_z_zz, g_xyy_yzz_z_xx, g_xyy_yzz_z_xy, g_xyy_yzz_z_xz, g_xyy_yzz_z_yy, g_xyy_yzz_z_yz, g_xyy_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yy_zz_z_xx[i] = 4.0 * g_xyy_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_z_xy[i] = 4.0 * g_xyy_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_z_xz[i] = 4.0 * g_xyy_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_z_yy[i] = 4.0 * g_xyy_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_z_yz[i] = 4.0 * g_xyy_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yy_zz_z_zz[i] = 4.0 * g_xyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1080-1086)

    #pragma omp simd aligned(g_x_y_0_0_yz_xx_x_xx, g_x_y_0_0_yz_xx_x_xy, g_x_y_0_0_yz_xx_x_xz, g_x_y_0_0_yz_xx_x_yy, g_x_y_0_0_yz_xx_x_yz, g_x_y_0_0_yz_xx_x_zz, g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xx_x_xx[i] = 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_x_xy[i] = 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_x_xz[i] = 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_x_yy[i] = 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_x_yz[i] = 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_x_zz[i] = 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1086-1092)

    #pragma omp simd aligned(g_x_y_0_0_yz_xx_y_xx, g_x_y_0_0_yz_xx_y_xy, g_x_y_0_0_yz_xx_y_xz, g_x_y_0_0_yz_xx_y_yy, g_x_y_0_0_yz_xx_y_yz, g_x_y_0_0_yz_xx_y_zz, g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xx_y_xx[i] = 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_y_xy[i] = 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_y_xz[i] = 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_y_yy[i] = 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_y_yz[i] = 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_y_zz[i] = 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1092-1098)

    #pragma omp simd aligned(g_x_y_0_0_yz_xx_z_xx, g_x_y_0_0_yz_xx_z_xy, g_x_y_0_0_yz_xx_z_xz, g_x_y_0_0_yz_xx_z_yy, g_x_y_0_0_yz_xx_z_yz, g_x_y_0_0_yz_xx_z_zz, g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xx_z_xx[i] = 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_z_xy[i] = 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_z_xz[i] = 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_z_yy[i] = 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_z_yz[i] = 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xx_z_zz[i] = 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1098-1104)

    #pragma omp simd aligned(g_x_y_0_0_yz_xy_x_xx, g_x_y_0_0_yz_xy_x_xy, g_x_y_0_0_yz_xy_x_xz, g_x_y_0_0_yz_xy_x_yy, g_x_y_0_0_yz_xy_x_yz, g_x_y_0_0_yz_xy_x_zz, g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xy_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1104-1110)

    #pragma omp simd aligned(g_x_y_0_0_yz_xy_y_xx, g_x_y_0_0_yz_xy_y_xy, g_x_y_0_0_yz_xy_y_xz, g_x_y_0_0_yz_xy_y_yy, g_x_y_0_0_yz_xy_y_yz, g_x_y_0_0_yz_xy_y_zz, g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xy_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1110-1116)

    #pragma omp simd aligned(g_x_y_0_0_yz_xy_z_xx, g_x_y_0_0_yz_xy_z_xy, g_x_y_0_0_yz_xy_z_xz, g_x_y_0_0_yz_xy_z_yy, g_x_y_0_0_yz_xy_z_yz, g_x_y_0_0_yz_xy_z_zz, g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xy_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xy_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1116-1122)

    #pragma omp simd aligned(g_x_y_0_0_yz_xz_x_xx, g_x_y_0_0_yz_xz_x_xy, g_x_y_0_0_yz_xz_x_xz, g_x_y_0_0_yz_xz_x_yy, g_x_y_0_0_yz_xz_x_yz, g_x_y_0_0_yz_xz_x_zz, g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1122-1128)

    #pragma omp simd aligned(g_x_y_0_0_yz_xz_y_xx, g_x_y_0_0_yz_xz_y_xy, g_x_y_0_0_yz_xz_y_xz, g_x_y_0_0_yz_xz_y_yy, g_x_y_0_0_yz_xz_y_yz, g_x_y_0_0_yz_xz_y_zz, g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1128-1134)

    #pragma omp simd aligned(g_x_y_0_0_yz_xz_z_xx, g_x_y_0_0_yz_xz_z_xy, g_x_y_0_0_yz_xz_z_xz, g_x_y_0_0_yz_xz_z_yy, g_x_y_0_0_yz_xz_z_yz, g_x_y_0_0_yz_xz_z_zz, g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_xz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_xz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1134-1140)

    #pragma omp simd aligned(g_x_y_0_0_yz_yy_x_xx, g_x_y_0_0_yz_yy_x_xy, g_x_y_0_0_yz_yy_x_xz, g_x_y_0_0_yz_yy_x_yy, g_x_y_0_0_yz_yy_x_yz, g_x_y_0_0_yz_yy_x_zz, g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yyy_x_xx, g_xyz_yyy_x_xy, g_xyz_yyy_x_xz, g_xyz_yyy_x_yy, g_xyz_yyy_x_yz, g_xyz_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yy_x_xx[i] = -4.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_x_xy[i] = -4.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_x_xz[i] = -4.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_x_yy[i] = -4.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_x_yz[i] = -4.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_x_zz[i] = -4.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1140-1146)

    #pragma omp simd aligned(g_x_y_0_0_yz_yy_y_xx, g_x_y_0_0_yz_yy_y_xy, g_x_y_0_0_yz_yy_y_xz, g_x_y_0_0_yz_yy_y_yy, g_x_y_0_0_yz_yy_y_yz, g_x_y_0_0_yz_yy_y_zz, g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yyy_y_xx, g_xyz_yyy_y_xy, g_xyz_yyy_y_xz, g_xyz_yyy_y_yy, g_xyz_yyy_y_yz, g_xyz_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yy_y_xx[i] = -4.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_y_xy[i] = -4.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_y_xz[i] = -4.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_y_yy[i] = -4.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_y_yz[i] = -4.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_y_zz[i] = -4.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1146-1152)

    #pragma omp simd aligned(g_x_y_0_0_yz_yy_z_xx, g_x_y_0_0_yz_yy_z_xy, g_x_y_0_0_yz_yy_z_xz, g_x_y_0_0_yz_yy_z_yy, g_x_y_0_0_yz_yy_z_yz, g_x_y_0_0_yz_yy_z_zz, g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yyy_z_xx, g_xyz_yyy_z_xy, g_xyz_yyy_z_xz, g_xyz_yyy_z_yy, g_xyz_yyy_z_yz, g_xyz_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yy_z_xx[i] = -4.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_z_xy[i] = -4.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_z_xz[i] = -4.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_z_yy[i] = -4.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_z_yz[i] = -4.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yy_z_zz[i] = -4.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1152-1158)

    #pragma omp simd aligned(g_x_y_0_0_yz_yz_x_xx, g_x_y_0_0_yz_yz_x_xy, g_x_y_0_0_yz_yz_x_xz, g_x_y_0_0_yz_yz_x_yy, g_x_y_0_0_yz_yz_x_yz, g_x_y_0_0_yz_yz_x_zz, g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1158-1164)

    #pragma omp simd aligned(g_x_y_0_0_yz_yz_y_xx, g_x_y_0_0_yz_yz_y_xy, g_x_y_0_0_yz_yz_y_xz, g_x_y_0_0_yz_yz_y_yy, g_x_y_0_0_yz_yz_y_yz, g_x_y_0_0_yz_yz_y_zz, g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1164-1170)

    #pragma omp simd aligned(g_x_y_0_0_yz_yz_z_xx, g_x_y_0_0_yz_yz_z_xy, g_x_y_0_0_yz_yz_z_xz, g_x_y_0_0_yz_yz_z_yy, g_x_y_0_0_yz_yz_z_yz, g_x_y_0_0_yz_yz_z_zz, g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_yz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_yz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1170-1176)

    #pragma omp simd aligned(g_x_y_0_0_yz_zz_x_xx, g_x_y_0_0_yz_zz_x_xy, g_x_y_0_0_yz_zz_x_xz, g_x_y_0_0_yz_zz_x_yy, g_x_y_0_0_yz_zz_x_yz, g_x_y_0_0_yz_zz_x_zz, g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_zz_x_xx[i] = 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_x_xy[i] = 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_x_xz[i] = 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_x_yy[i] = 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_x_yz[i] = 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_x_zz[i] = 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1176-1182)

    #pragma omp simd aligned(g_x_y_0_0_yz_zz_y_xx, g_x_y_0_0_yz_zz_y_xy, g_x_y_0_0_yz_zz_y_xz, g_x_y_0_0_yz_zz_y_yy, g_x_y_0_0_yz_zz_y_yz, g_x_y_0_0_yz_zz_y_zz, g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_zz_y_xx[i] = 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_y_xy[i] = 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_y_xz[i] = 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_y_yy[i] = 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_y_yz[i] = 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_y_zz[i] = 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1182-1188)

    #pragma omp simd aligned(g_x_y_0_0_yz_zz_z_xx, g_x_y_0_0_yz_zz_z_xy, g_x_y_0_0_yz_zz_z_xz, g_x_y_0_0_yz_zz_z_yy, g_x_y_0_0_yz_zz_z_yz, g_x_y_0_0_yz_zz_z_zz, g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_yz_zz_z_xx[i] = 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_z_xy[i] = 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_z_xz[i] = 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_z_yy[i] = 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_z_yz[i] = 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_yz_zz_z_zz[i] = 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1188-1194)

    #pragma omp simd aligned(g_x_y_0_0_zz_xx_x_xx, g_x_y_0_0_zz_xx_x_xy, g_x_y_0_0_zz_xx_x_xz, g_x_y_0_0_zz_xx_x_yy, g_x_y_0_0_zz_xx_x_yz, g_x_y_0_0_zz_xx_x_zz, g_xzz_xxy_x_xx, g_xzz_xxy_x_xy, g_xzz_xxy_x_xz, g_xzz_xxy_x_yy, g_xzz_xxy_x_yz, g_xzz_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xx_x_xx[i] = 4.0 * g_xzz_xxy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_x_xy[i] = 4.0 * g_xzz_xxy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_x_xz[i] = 4.0 * g_xzz_xxy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_x_yy[i] = 4.0 * g_xzz_xxy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_x_yz[i] = 4.0 * g_xzz_xxy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_x_zz[i] = 4.0 * g_xzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1194-1200)

    #pragma omp simd aligned(g_x_y_0_0_zz_xx_y_xx, g_x_y_0_0_zz_xx_y_xy, g_x_y_0_0_zz_xx_y_xz, g_x_y_0_0_zz_xx_y_yy, g_x_y_0_0_zz_xx_y_yz, g_x_y_0_0_zz_xx_y_zz, g_xzz_xxy_y_xx, g_xzz_xxy_y_xy, g_xzz_xxy_y_xz, g_xzz_xxy_y_yy, g_xzz_xxy_y_yz, g_xzz_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xx_y_xx[i] = 4.0 * g_xzz_xxy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_y_xy[i] = 4.0 * g_xzz_xxy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_y_xz[i] = 4.0 * g_xzz_xxy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_y_yy[i] = 4.0 * g_xzz_xxy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_y_yz[i] = 4.0 * g_xzz_xxy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_y_zz[i] = 4.0 * g_xzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1200-1206)

    #pragma omp simd aligned(g_x_y_0_0_zz_xx_z_xx, g_x_y_0_0_zz_xx_z_xy, g_x_y_0_0_zz_xx_z_xz, g_x_y_0_0_zz_xx_z_yy, g_x_y_0_0_zz_xx_z_yz, g_x_y_0_0_zz_xx_z_zz, g_xzz_xxy_z_xx, g_xzz_xxy_z_xy, g_xzz_xxy_z_xz, g_xzz_xxy_z_yy, g_xzz_xxy_z_yz, g_xzz_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xx_z_xx[i] = 4.0 * g_xzz_xxy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_z_xy[i] = 4.0 * g_xzz_xxy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_z_xz[i] = 4.0 * g_xzz_xxy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_z_yy[i] = 4.0 * g_xzz_xxy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_z_yz[i] = 4.0 * g_xzz_xxy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xx_z_zz[i] = 4.0 * g_xzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1206-1212)

    #pragma omp simd aligned(g_x_y_0_0_zz_xy_x_xx, g_x_y_0_0_zz_xy_x_xy, g_x_y_0_0_zz_xy_x_xz, g_x_y_0_0_zz_xy_x_yy, g_x_y_0_0_zz_xy_x_yz, g_x_y_0_0_zz_xy_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xyy_x_xx, g_xzz_xyy_x_xy, g_xzz_xyy_x_xz, g_xzz_xyy_x_yy, g_xzz_xyy_x_yz, g_xzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xy_x_xx[i] = -2.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_x_xy[i] = -2.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_x_xz[i] = -2.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_x_yy[i] = -2.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_x_yz[i] = -2.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_x_zz[i] = -2.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1212-1218)

    #pragma omp simd aligned(g_x_y_0_0_zz_xy_y_xx, g_x_y_0_0_zz_xy_y_xy, g_x_y_0_0_zz_xy_y_xz, g_x_y_0_0_zz_xy_y_yy, g_x_y_0_0_zz_xy_y_yz, g_x_y_0_0_zz_xy_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xyy_y_xx, g_xzz_xyy_y_xy, g_xzz_xyy_y_xz, g_xzz_xyy_y_yy, g_xzz_xyy_y_yz, g_xzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xy_y_xx[i] = -2.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_y_xy[i] = -2.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_y_xz[i] = -2.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_y_yy[i] = -2.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_y_yz[i] = -2.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_y_zz[i] = -2.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1218-1224)

    #pragma omp simd aligned(g_x_y_0_0_zz_xy_z_xx, g_x_y_0_0_zz_xy_z_xy, g_x_y_0_0_zz_xy_z_xz, g_x_y_0_0_zz_xy_z_yy, g_x_y_0_0_zz_xy_z_yz, g_x_y_0_0_zz_xy_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xyy_z_xx, g_xzz_xyy_z_xy, g_xzz_xyy_z_xz, g_xzz_xyy_z_yy, g_xzz_xyy_z_yz, g_xzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xy_z_xx[i] = -2.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_z_xy[i] = -2.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_z_xz[i] = -2.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_z_yy[i] = -2.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_z_yz[i] = -2.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xy_z_zz[i] = -2.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1224-1230)

    #pragma omp simd aligned(g_x_y_0_0_zz_xz_x_xx, g_x_y_0_0_zz_xz_x_xy, g_x_y_0_0_zz_xz_x_xz, g_x_y_0_0_zz_xz_x_yy, g_x_y_0_0_zz_xz_x_yz, g_x_y_0_0_zz_xz_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xz_x_xx[i] = 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_x_xy[i] = 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_x_xz[i] = 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_x_yy[i] = 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_x_yz[i] = 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_x_zz[i] = 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1230-1236)

    #pragma omp simd aligned(g_x_y_0_0_zz_xz_y_xx, g_x_y_0_0_zz_xz_y_xy, g_x_y_0_0_zz_xz_y_xz, g_x_y_0_0_zz_xz_y_yy, g_x_y_0_0_zz_xz_y_yz, g_x_y_0_0_zz_xz_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xz_y_xx[i] = 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_y_xy[i] = 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_y_xz[i] = 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_y_yy[i] = 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_y_yz[i] = 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_y_zz[i] = 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1236-1242)

    #pragma omp simd aligned(g_x_y_0_0_zz_xz_z_xx, g_x_y_0_0_zz_xz_z_xy, g_x_y_0_0_zz_xz_z_xz, g_x_y_0_0_zz_xz_z_yy, g_x_y_0_0_zz_xz_z_yz, g_x_y_0_0_zz_xz_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_xz_z_xx[i] = 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_z_xy[i] = 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_z_xz[i] = 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_z_yy[i] = 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_z_yz[i] = 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_xz_z_zz[i] = 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1242-1248)

    #pragma omp simd aligned(g_x_y_0_0_zz_yy_x_xx, g_x_y_0_0_zz_yy_x_xy, g_x_y_0_0_zz_yy_x_xz, g_x_y_0_0_zz_yy_x_yy, g_x_y_0_0_zz_yy_x_yz, g_x_y_0_0_zz_yy_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz, g_xzz_yyy_x_xx, g_xzz_yyy_x_xy, g_xzz_yyy_x_xz, g_xzz_yyy_x_yy, g_xzz_yyy_x_yz, g_xzz_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yy_x_xx[i] = -4.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_yyy_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_x_xy[i] = -4.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_yyy_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_x_xz[i] = -4.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_yyy_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_x_yy[i] = -4.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_yyy_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_x_yz[i] = -4.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_yyy_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_x_zz[i] = -4.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1248-1254)

    #pragma omp simd aligned(g_x_y_0_0_zz_yy_y_xx, g_x_y_0_0_zz_yy_y_xy, g_x_y_0_0_zz_yy_y_xz, g_x_y_0_0_zz_yy_y_yy, g_x_y_0_0_zz_yy_y_yz, g_x_y_0_0_zz_yy_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz, g_xzz_yyy_y_xx, g_xzz_yyy_y_xy, g_xzz_yyy_y_xz, g_xzz_yyy_y_yy, g_xzz_yyy_y_yz, g_xzz_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yy_y_xx[i] = -4.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_yyy_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_y_xy[i] = -4.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_yyy_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_y_xz[i] = -4.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_yyy_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_y_yy[i] = -4.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_yyy_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_y_yz[i] = -4.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_yyy_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_y_zz[i] = -4.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1254-1260)

    #pragma omp simd aligned(g_x_y_0_0_zz_yy_z_xx, g_x_y_0_0_zz_yy_z_xy, g_x_y_0_0_zz_yy_z_xz, g_x_y_0_0_zz_yy_z_yy, g_x_y_0_0_zz_yy_z_yz, g_x_y_0_0_zz_yy_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz, g_xzz_yyy_z_xx, g_xzz_yyy_z_xy, g_xzz_yyy_z_xz, g_xzz_yyy_z_yy, g_xzz_yyy_z_yz, g_xzz_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yy_z_xx[i] = -4.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_yyy_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_z_xy[i] = -4.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_yyy_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_z_xz[i] = -4.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_yyy_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_z_yy[i] = -4.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_yyy_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_z_yz[i] = -4.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_yyy_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yy_z_zz[i] = -4.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1260-1266)

    #pragma omp simd aligned(g_x_y_0_0_zz_yz_x_xx, g_x_y_0_0_zz_yz_x_xy, g_x_y_0_0_zz_yz_x_xz, g_x_y_0_0_zz_yz_x_yy, g_x_y_0_0_zz_yz_x_yz, g_x_y_0_0_zz_yz_x_zz, g_xzz_yyz_x_xx, g_xzz_yyz_x_xy, g_xzz_yyz_x_xz, g_xzz_yyz_x_yy, g_xzz_yyz_x_yz, g_xzz_yyz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yz_x_xx[i] = -2.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_x_xy[i] = -2.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_x_xz[i] = -2.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_x_yy[i] = -2.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_x_yz[i] = -2.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_x_zz[i] = -2.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1266-1272)

    #pragma omp simd aligned(g_x_y_0_0_zz_yz_y_xx, g_x_y_0_0_zz_yz_y_xy, g_x_y_0_0_zz_yz_y_xz, g_x_y_0_0_zz_yz_y_yy, g_x_y_0_0_zz_yz_y_yz, g_x_y_0_0_zz_yz_y_zz, g_xzz_yyz_y_xx, g_xzz_yyz_y_xy, g_xzz_yyz_y_xz, g_xzz_yyz_y_yy, g_xzz_yyz_y_yz, g_xzz_yyz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yz_y_xx[i] = -2.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_y_xy[i] = -2.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_y_xz[i] = -2.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_y_yy[i] = -2.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_y_yz[i] = -2.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_y_zz[i] = -2.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1272-1278)

    #pragma omp simd aligned(g_x_y_0_0_zz_yz_z_xx, g_x_y_0_0_zz_yz_z_xy, g_x_y_0_0_zz_yz_z_xz, g_x_y_0_0_zz_yz_z_yy, g_x_y_0_0_zz_yz_z_yz, g_x_y_0_0_zz_yz_z_zz, g_xzz_yyz_z_xx, g_xzz_yyz_z_xy, g_xzz_yyz_z_xz, g_xzz_yyz_z_yy, g_xzz_yyz_z_yz, g_xzz_yyz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_yz_z_xx[i] = -2.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_z_xy[i] = -2.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_z_xz[i] = -2.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_z_yy[i] = -2.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_z_yz[i] = -2.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_yz_z_zz[i] = -2.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1278-1284)

    #pragma omp simd aligned(g_x_y_0_0_zz_zz_x_xx, g_x_y_0_0_zz_zz_x_xy, g_x_y_0_0_zz_zz_x_xz, g_x_y_0_0_zz_zz_x_yy, g_x_y_0_0_zz_zz_x_yz, g_x_y_0_0_zz_zz_x_zz, g_xzz_yzz_x_xx, g_xzz_yzz_x_xy, g_xzz_yzz_x_xz, g_xzz_yzz_x_yy, g_xzz_yzz_x_yz, g_xzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_zz_x_xx[i] = 4.0 * g_xzz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_x_xy[i] = 4.0 * g_xzz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_x_xz[i] = 4.0 * g_xzz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_x_yy[i] = 4.0 * g_xzz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_x_yz[i] = 4.0 * g_xzz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_x_zz[i] = 4.0 * g_xzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1284-1290)

    #pragma omp simd aligned(g_x_y_0_0_zz_zz_y_xx, g_x_y_0_0_zz_zz_y_xy, g_x_y_0_0_zz_zz_y_xz, g_x_y_0_0_zz_zz_y_yy, g_x_y_0_0_zz_zz_y_yz, g_x_y_0_0_zz_zz_y_zz, g_xzz_yzz_y_xx, g_xzz_yzz_y_xy, g_xzz_yzz_y_xz, g_xzz_yzz_y_yy, g_xzz_yzz_y_yz, g_xzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_zz_y_xx[i] = 4.0 * g_xzz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_y_xy[i] = 4.0 * g_xzz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_y_xz[i] = 4.0 * g_xzz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_y_yy[i] = 4.0 * g_xzz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_y_yz[i] = 4.0 * g_xzz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_y_zz[i] = 4.0 * g_xzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1290-1296)

    #pragma omp simd aligned(g_x_y_0_0_zz_zz_z_xx, g_x_y_0_0_zz_zz_z_xy, g_x_y_0_0_zz_zz_z_xz, g_x_y_0_0_zz_zz_z_yy, g_x_y_0_0_zz_zz_z_yz, g_x_y_0_0_zz_zz_z_zz, g_xzz_yzz_z_xx, g_xzz_yzz_z_xy, g_xzz_yzz_z_xz, g_xzz_yzz_z_yy, g_xzz_yzz_z_yz, g_xzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_y_0_0_zz_zz_z_xx[i] = 4.0 * g_xzz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_z_xy[i] = 4.0 * g_xzz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_z_xz[i] = 4.0 * g_xzz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_z_yy[i] = 4.0 * g_xzz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_z_yz[i] = 4.0 * g_xzz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_y_0_0_zz_zz_z_zz[i] = 4.0 * g_xzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1296-1302)

    #pragma omp simd aligned(g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_x_z_0_0_xx_xx_x_xx, g_x_z_0_0_xx_xx_x_xy, g_x_z_0_0_xx_xx_x_xz, g_x_z_0_0_xx_xx_x_yy, g_x_z_0_0_xx_xx_x_yz, g_x_z_0_0_xx_xx_x_zz, g_xxx_xxz_x_xx, g_xxx_xxz_x_xy, g_xxx_xxz_x_xz, g_xxx_xxz_x_yy, g_xxx_xxz_x_yz, g_xxx_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xx_x_xx[i] = -4.0 * g_x_xxz_x_xx[i] * b_exp + 4.0 * g_xxx_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_x_xy[i] = -4.0 * g_x_xxz_x_xy[i] * b_exp + 4.0 * g_xxx_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_x_xz[i] = -4.0 * g_x_xxz_x_xz[i] * b_exp + 4.0 * g_xxx_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_x_yy[i] = -4.0 * g_x_xxz_x_yy[i] * b_exp + 4.0 * g_xxx_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_x_yz[i] = -4.0 * g_x_xxz_x_yz[i] * b_exp + 4.0 * g_xxx_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_x_zz[i] = -4.0 * g_x_xxz_x_zz[i] * b_exp + 4.0 * g_xxx_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1302-1308)

    #pragma omp simd aligned(g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_x_z_0_0_xx_xx_y_xx, g_x_z_0_0_xx_xx_y_xy, g_x_z_0_0_xx_xx_y_xz, g_x_z_0_0_xx_xx_y_yy, g_x_z_0_0_xx_xx_y_yz, g_x_z_0_0_xx_xx_y_zz, g_xxx_xxz_y_xx, g_xxx_xxz_y_xy, g_xxx_xxz_y_xz, g_xxx_xxz_y_yy, g_xxx_xxz_y_yz, g_xxx_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xx_y_xx[i] = -4.0 * g_x_xxz_y_xx[i] * b_exp + 4.0 * g_xxx_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_y_xy[i] = -4.0 * g_x_xxz_y_xy[i] * b_exp + 4.0 * g_xxx_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_y_xz[i] = -4.0 * g_x_xxz_y_xz[i] * b_exp + 4.0 * g_xxx_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_y_yy[i] = -4.0 * g_x_xxz_y_yy[i] * b_exp + 4.0 * g_xxx_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_y_yz[i] = -4.0 * g_x_xxz_y_yz[i] * b_exp + 4.0 * g_xxx_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_y_zz[i] = -4.0 * g_x_xxz_y_zz[i] * b_exp + 4.0 * g_xxx_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1308-1314)

    #pragma omp simd aligned(g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_x_z_0_0_xx_xx_z_xx, g_x_z_0_0_xx_xx_z_xy, g_x_z_0_0_xx_xx_z_xz, g_x_z_0_0_xx_xx_z_yy, g_x_z_0_0_xx_xx_z_yz, g_x_z_0_0_xx_xx_z_zz, g_xxx_xxz_z_xx, g_xxx_xxz_z_xy, g_xxx_xxz_z_xz, g_xxx_xxz_z_yy, g_xxx_xxz_z_yz, g_xxx_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xx_z_xx[i] = -4.0 * g_x_xxz_z_xx[i] * b_exp + 4.0 * g_xxx_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_z_xy[i] = -4.0 * g_x_xxz_z_xy[i] * b_exp + 4.0 * g_xxx_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_z_xz[i] = -4.0 * g_x_xxz_z_xz[i] * b_exp + 4.0 * g_xxx_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_z_yy[i] = -4.0 * g_x_xxz_z_yy[i] * b_exp + 4.0 * g_xxx_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_z_yz[i] = -4.0 * g_x_xxz_z_yz[i] * b_exp + 4.0 * g_xxx_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xx_z_zz[i] = -4.0 * g_x_xxz_z_zz[i] * b_exp + 4.0 * g_xxx_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1314-1320)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_x_z_0_0_xx_xy_x_xx, g_x_z_0_0_xx_xy_x_xy, g_x_z_0_0_xx_xy_x_xz, g_x_z_0_0_xx_xy_x_yy, g_x_z_0_0_xx_xy_x_yz, g_x_z_0_0_xx_xy_x_zz, g_xxx_xyz_x_xx, g_xxx_xyz_x_xy, g_xxx_xyz_x_xz, g_xxx_xyz_x_yy, g_xxx_xyz_x_yz, g_xxx_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xy_x_xx[i] = -4.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xxx_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_x_xy[i] = -4.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xxx_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_x_xz[i] = -4.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xxx_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_x_yy[i] = -4.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xxx_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_x_yz[i] = -4.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xxx_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_x_zz[i] = -4.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xxx_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1320-1326)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_x_z_0_0_xx_xy_y_xx, g_x_z_0_0_xx_xy_y_xy, g_x_z_0_0_xx_xy_y_xz, g_x_z_0_0_xx_xy_y_yy, g_x_z_0_0_xx_xy_y_yz, g_x_z_0_0_xx_xy_y_zz, g_xxx_xyz_y_xx, g_xxx_xyz_y_xy, g_xxx_xyz_y_xz, g_xxx_xyz_y_yy, g_xxx_xyz_y_yz, g_xxx_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xy_y_xx[i] = -4.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xxx_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_y_xy[i] = -4.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xxx_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_y_xz[i] = -4.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xxx_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_y_yy[i] = -4.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xxx_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_y_yz[i] = -4.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xxx_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_y_zz[i] = -4.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xxx_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1326-1332)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_x_z_0_0_xx_xy_z_xx, g_x_z_0_0_xx_xy_z_xy, g_x_z_0_0_xx_xy_z_xz, g_x_z_0_0_xx_xy_z_yy, g_x_z_0_0_xx_xy_z_yz, g_x_z_0_0_xx_xy_z_zz, g_xxx_xyz_z_xx, g_xxx_xyz_z_xy, g_xxx_xyz_z_xz, g_xxx_xyz_z_yy, g_xxx_xyz_z_yz, g_xxx_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xy_z_xx[i] = -4.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xxx_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_z_xy[i] = -4.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xxx_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_z_xz[i] = -4.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xxx_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_z_yy[i] = -4.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xxx_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_z_yz[i] = -4.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xxx_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xy_z_zz[i] = -4.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xxx_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1332-1338)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_x_z_0_0_xx_xz_x_xx, g_x_z_0_0_xx_xz_x_xy, g_x_z_0_0_xx_xz_x_xz, g_x_z_0_0_xx_xz_x_yy, g_x_z_0_0_xx_xz_x_yz, g_x_z_0_0_xx_xz_x_zz, g_xxx_x_x_xx, g_xxx_x_x_xy, g_xxx_x_x_xz, g_xxx_x_x_yy, g_xxx_x_x_yz, g_xxx_x_x_zz, g_xxx_xzz_x_xx, g_xxx_xzz_x_xy, g_xxx_xzz_x_xz, g_xxx_xzz_x_yy, g_xxx_xzz_x_yz, g_xxx_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xz_x_xx[i] = 2.0 * g_x_x_x_xx[i] - 4.0 * g_x_xzz_x_xx[i] * b_exp - 2.0 * g_xxx_x_x_xx[i] * a_exp + 4.0 * g_xxx_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_x_xy[i] = 2.0 * g_x_x_x_xy[i] - 4.0 * g_x_xzz_x_xy[i] * b_exp - 2.0 * g_xxx_x_x_xy[i] * a_exp + 4.0 * g_xxx_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_x_xz[i] = 2.0 * g_x_x_x_xz[i] - 4.0 * g_x_xzz_x_xz[i] * b_exp - 2.0 * g_xxx_x_x_xz[i] * a_exp + 4.0 * g_xxx_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_x_yy[i] = 2.0 * g_x_x_x_yy[i] - 4.0 * g_x_xzz_x_yy[i] * b_exp - 2.0 * g_xxx_x_x_yy[i] * a_exp + 4.0 * g_xxx_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_x_yz[i] = 2.0 * g_x_x_x_yz[i] - 4.0 * g_x_xzz_x_yz[i] * b_exp - 2.0 * g_xxx_x_x_yz[i] * a_exp + 4.0 * g_xxx_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_x_zz[i] = 2.0 * g_x_x_x_zz[i] - 4.0 * g_x_xzz_x_zz[i] * b_exp - 2.0 * g_xxx_x_x_zz[i] * a_exp + 4.0 * g_xxx_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1338-1344)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_x_z_0_0_xx_xz_y_xx, g_x_z_0_0_xx_xz_y_xy, g_x_z_0_0_xx_xz_y_xz, g_x_z_0_0_xx_xz_y_yy, g_x_z_0_0_xx_xz_y_yz, g_x_z_0_0_xx_xz_y_zz, g_xxx_x_y_xx, g_xxx_x_y_xy, g_xxx_x_y_xz, g_xxx_x_y_yy, g_xxx_x_y_yz, g_xxx_x_y_zz, g_xxx_xzz_y_xx, g_xxx_xzz_y_xy, g_xxx_xzz_y_xz, g_xxx_xzz_y_yy, g_xxx_xzz_y_yz, g_xxx_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xz_y_xx[i] = 2.0 * g_x_x_y_xx[i] - 4.0 * g_x_xzz_y_xx[i] * b_exp - 2.0 * g_xxx_x_y_xx[i] * a_exp + 4.0 * g_xxx_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_y_xy[i] = 2.0 * g_x_x_y_xy[i] - 4.0 * g_x_xzz_y_xy[i] * b_exp - 2.0 * g_xxx_x_y_xy[i] * a_exp + 4.0 * g_xxx_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_y_xz[i] = 2.0 * g_x_x_y_xz[i] - 4.0 * g_x_xzz_y_xz[i] * b_exp - 2.0 * g_xxx_x_y_xz[i] * a_exp + 4.0 * g_xxx_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_y_yy[i] = 2.0 * g_x_x_y_yy[i] - 4.0 * g_x_xzz_y_yy[i] * b_exp - 2.0 * g_xxx_x_y_yy[i] * a_exp + 4.0 * g_xxx_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_y_yz[i] = 2.0 * g_x_x_y_yz[i] - 4.0 * g_x_xzz_y_yz[i] * b_exp - 2.0 * g_xxx_x_y_yz[i] * a_exp + 4.0 * g_xxx_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_y_zz[i] = 2.0 * g_x_x_y_zz[i] - 4.0 * g_x_xzz_y_zz[i] * b_exp - 2.0 * g_xxx_x_y_zz[i] * a_exp + 4.0 * g_xxx_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1344-1350)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_x_z_0_0_xx_xz_z_xx, g_x_z_0_0_xx_xz_z_xy, g_x_z_0_0_xx_xz_z_xz, g_x_z_0_0_xx_xz_z_yy, g_x_z_0_0_xx_xz_z_yz, g_x_z_0_0_xx_xz_z_zz, g_xxx_x_z_xx, g_xxx_x_z_xy, g_xxx_x_z_xz, g_xxx_x_z_yy, g_xxx_x_z_yz, g_xxx_x_z_zz, g_xxx_xzz_z_xx, g_xxx_xzz_z_xy, g_xxx_xzz_z_xz, g_xxx_xzz_z_yy, g_xxx_xzz_z_yz, g_xxx_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_xz_z_xx[i] = 2.0 * g_x_x_z_xx[i] - 4.0 * g_x_xzz_z_xx[i] * b_exp - 2.0 * g_xxx_x_z_xx[i] * a_exp + 4.0 * g_xxx_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_z_xy[i] = 2.0 * g_x_x_z_xy[i] - 4.0 * g_x_xzz_z_xy[i] * b_exp - 2.0 * g_xxx_x_z_xy[i] * a_exp + 4.0 * g_xxx_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_z_xz[i] = 2.0 * g_x_x_z_xz[i] - 4.0 * g_x_xzz_z_xz[i] * b_exp - 2.0 * g_xxx_x_z_xz[i] * a_exp + 4.0 * g_xxx_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_z_yy[i] = 2.0 * g_x_x_z_yy[i] - 4.0 * g_x_xzz_z_yy[i] * b_exp - 2.0 * g_xxx_x_z_yy[i] * a_exp + 4.0 * g_xxx_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_z_yz[i] = 2.0 * g_x_x_z_yz[i] - 4.0 * g_x_xzz_z_yz[i] * b_exp - 2.0 * g_xxx_x_z_yz[i] * a_exp + 4.0 * g_xxx_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_xz_z_zz[i] = 2.0 * g_x_x_z_zz[i] - 4.0 * g_x_xzz_z_zz[i] * b_exp - 2.0 * g_xxx_x_z_zz[i] * a_exp + 4.0 * g_xxx_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1350-1356)

    #pragma omp simd aligned(g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_x_z_0_0_xx_yy_x_xx, g_x_z_0_0_xx_yy_x_xy, g_x_z_0_0_xx_yy_x_xz, g_x_z_0_0_xx_yy_x_yy, g_x_z_0_0_xx_yy_x_yz, g_x_z_0_0_xx_yy_x_zz, g_xxx_yyz_x_xx, g_xxx_yyz_x_xy, g_xxx_yyz_x_xz, g_xxx_yyz_x_yy, g_xxx_yyz_x_yz, g_xxx_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yy_x_xx[i] = -4.0 * g_x_yyz_x_xx[i] * b_exp + 4.0 * g_xxx_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_x_xy[i] = -4.0 * g_x_yyz_x_xy[i] * b_exp + 4.0 * g_xxx_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_x_xz[i] = -4.0 * g_x_yyz_x_xz[i] * b_exp + 4.0 * g_xxx_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_x_yy[i] = -4.0 * g_x_yyz_x_yy[i] * b_exp + 4.0 * g_xxx_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_x_yz[i] = -4.0 * g_x_yyz_x_yz[i] * b_exp + 4.0 * g_xxx_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_x_zz[i] = -4.0 * g_x_yyz_x_zz[i] * b_exp + 4.0 * g_xxx_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1356-1362)

    #pragma omp simd aligned(g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_x_z_0_0_xx_yy_y_xx, g_x_z_0_0_xx_yy_y_xy, g_x_z_0_0_xx_yy_y_xz, g_x_z_0_0_xx_yy_y_yy, g_x_z_0_0_xx_yy_y_yz, g_x_z_0_0_xx_yy_y_zz, g_xxx_yyz_y_xx, g_xxx_yyz_y_xy, g_xxx_yyz_y_xz, g_xxx_yyz_y_yy, g_xxx_yyz_y_yz, g_xxx_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yy_y_xx[i] = -4.0 * g_x_yyz_y_xx[i] * b_exp + 4.0 * g_xxx_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_y_xy[i] = -4.0 * g_x_yyz_y_xy[i] * b_exp + 4.0 * g_xxx_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_y_xz[i] = -4.0 * g_x_yyz_y_xz[i] * b_exp + 4.0 * g_xxx_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_y_yy[i] = -4.0 * g_x_yyz_y_yy[i] * b_exp + 4.0 * g_xxx_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_y_yz[i] = -4.0 * g_x_yyz_y_yz[i] * b_exp + 4.0 * g_xxx_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_y_zz[i] = -4.0 * g_x_yyz_y_zz[i] * b_exp + 4.0 * g_xxx_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1362-1368)

    #pragma omp simd aligned(g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_x_z_0_0_xx_yy_z_xx, g_x_z_0_0_xx_yy_z_xy, g_x_z_0_0_xx_yy_z_xz, g_x_z_0_0_xx_yy_z_yy, g_x_z_0_0_xx_yy_z_yz, g_x_z_0_0_xx_yy_z_zz, g_xxx_yyz_z_xx, g_xxx_yyz_z_xy, g_xxx_yyz_z_xz, g_xxx_yyz_z_yy, g_xxx_yyz_z_yz, g_xxx_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yy_z_xx[i] = -4.0 * g_x_yyz_z_xx[i] * b_exp + 4.0 * g_xxx_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_z_xy[i] = -4.0 * g_x_yyz_z_xy[i] * b_exp + 4.0 * g_xxx_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_z_xz[i] = -4.0 * g_x_yyz_z_xz[i] * b_exp + 4.0 * g_xxx_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_z_yy[i] = -4.0 * g_x_yyz_z_yy[i] * b_exp + 4.0 * g_xxx_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_z_yz[i] = -4.0 * g_x_yyz_z_yz[i] * b_exp + 4.0 * g_xxx_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yy_z_zz[i] = -4.0 * g_x_yyz_z_zz[i] * b_exp + 4.0 * g_xxx_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1368-1374)

    #pragma omp simd aligned(g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_x_z_0_0_xx_yz_x_xx, g_x_z_0_0_xx_yz_x_xy, g_x_z_0_0_xx_yz_x_xz, g_x_z_0_0_xx_yz_x_yy, g_x_z_0_0_xx_yz_x_yz, g_x_z_0_0_xx_yz_x_zz, g_xxx_y_x_xx, g_xxx_y_x_xy, g_xxx_y_x_xz, g_xxx_y_x_yy, g_xxx_y_x_yz, g_xxx_y_x_zz, g_xxx_yzz_x_xx, g_xxx_yzz_x_xy, g_xxx_yzz_x_xz, g_xxx_yzz_x_yy, g_xxx_yzz_x_yz, g_xxx_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yz_x_xx[i] = 2.0 * g_x_y_x_xx[i] - 4.0 * g_x_yzz_x_xx[i] * b_exp - 2.0 * g_xxx_y_x_xx[i] * a_exp + 4.0 * g_xxx_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_x_xy[i] = 2.0 * g_x_y_x_xy[i] - 4.0 * g_x_yzz_x_xy[i] * b_exp - 2.0 * g_xxx_y_x_xy[i] * a_exp + 4.0 * g_xxx_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_x_xz[i] = 2.0 * g_x_y_x_xz[i] - 4.0 * g_x_yzz_x_xz[i] * b_exp - 2.0 * g_xxx_y_x_xz[i] * a_exp + 4.0 * g_xxx_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_x_yy[i] = 2.0 * g_x_y_x_yy[i] - 4.0 * g_x_yzz_x_yy[i] * b_exp - 2.0 * g_xxx_y_x_yy[i] * a_exp + 4.0 * g_xxx_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_x_yz[i] = 2.0 * g_x_y_x_yz[i] - 4.0 * g_x_yzz_x_yz[i] * b_exp - 2.0 * g_xxx_y_x_yz[i] * a_exp + 4.0 * g_xxx_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_x_zz[i] = 2.0 * g_x_y_x_zz[i] - 4.0 * g_x_yzz_x_zz[i] * b_exp - 2.0 * g_xxx_y_x_zz[i] * a_exp + 4.0 * g_xxx_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1374-1380)

    #pragma omp simd aligned(g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_x_z_0_0_xx_yz_y_xx, g_x_z_0_0_xx_yz_y_xy, g_x_z_0_0_xx_yz_y_xz, g_x_z_0_0_xx_yz_y_yy, g_x_z_0_0_xx_yz_y_yz, g_x_z_0_0_xx_yz_y_zz, g_xxx_y_y_xx, g_xxx_y_y_xy, g_xxx_y_y_xz, g_xxx_y_y_yy, g_xxx_y_y_yz, g_xxx_y_y_zz, g_xxx_yzz_y_xx, g_xxx_yzz_y_xy, g_xxx_yzz_y_xz, g_xxx_yzz_y_yy, g_xxx_yzz_y_yz, g_xxx_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yz_y_xx[i] = 2.0 * g_x_y_y_xx[i] - 4.0 * g_x_yzz_y_xx[i] * b_exp - 2.0 * g_xxx_y_y_xx[i] * a_exp + 4.0 * g_xxx_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_y_xy[i] = 2.0 * g_x_y_y_xy[i] - 4.0 * g_x_yzz_y_xy[i] * b_exp - 2.0 * g_xxx_y_y_xy[i] * a_exp + 4.0 * g_xxx_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_y_xz[i] = 2.0 * g_x_y_y_xz[i] - 4.0 * g_x_yzz_y_xz[i] * b_exp - 2.0 * g_xxx_y_y_xz[i] * a_exp + 4.0 * g_xxx_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_y_yy[i] = 2.0 * g_x_y_y_yy[i] - 4.0 * g_x_yzz_y_yy[i] * b_exp - 2.0 * g_xxx_y_y_yy[i] * a_exp + 4.0 * g_xxx_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_y_yz[i] = 2.0 * g_x_y_y_yz[i] - 4.0 * g_x_yzz_y_yz[i] * b_exp - 2.0 * g_xxx_y_y_yz[i] * a_exp + 4.0 * g_xxx_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_y_zz[i] = 2.0 * g_x_y_y_zz[i] - 4.0 * g_x_yzz_y_zz[i] * b_exp - 2.0 * g_xxx_y_y_zz[i] * a_exp + 4.0 * g_xxx_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1380-1386)

    #pragma omp simd aligned(g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_x_z_0_0_xx_yz_z_xx, g_x_z_0_0_xx_yz_z_xy, g_x_z_0_0_xx_yz_z_xz, g_x_z_0_0_xx_yz_z_yy, g_x_z_0_0_xx_yz_z_yz, g_x_z_0_0_xx_yz_z_zz, g_xxx_y_z_xx, g_xxx_y_z_xy, g_xxx_y_z_xz, g_xxx_y_z_yy, g_xxx_y_z_yz, g_xxx_y_z_zz, g_xxx_yzz_z_xx, g_xxx_yzz_z_xy, g_xxx_yzz_z_xz, g_xxx_yzz_z_yy, g_xxx_yzz_z_yz, g_xxx_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_yz_z_xx[i] = 2.0 * g_x_y_z_xx[i] - 4.0 * g_x_yzz_z_xx[i] * b_exp - 2.0 * g_xxx_y_z_xx[i] * a_exp + 4.0 * g_xxx_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_z_xy[i] = 2.0 * g_x_y_z_xy[i] - 4.0 * g_x_yzz_z_xy[i] * b_exp - 2.0 * g_xxx_y_z_xy[i] * a_exp + 4.0 * g_xxx_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_z_xz[i] = 2.0 * g_x_y_z_xz[i] - 4.0 * g_x_yzz_z_xz[i] * b_exp - 2.0 * g_xxx_y_z_xz[i] * a_exp + 4.0 * g_xxx_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_z_yy[i] = 2.0 * g_x_y_z_yy[i] - 4.0 * g_x_yzz_z_yy[i] * b_exp - 2.0 * g_xxx_y_z_yy[i] * a_exp + 4.0 * g_xxx_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_z_yz[i] = 2.0 * g_x_y_z_yz[i] - 4.0 * g_x_yzz_z_yz[i] * b_exp - 2.0 * g_xxx_y_z_yz[i] * a_exp + 4.0 * g_xxx_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_yz_z_zz[i] = 2.0 * g_x_y_z_zz[i] - 4.0 * g_x_yzz_z_zz[i] * b_exp - 2.0 * g_xxx_y_z_zz[i] * a_exp + 4.0 * g_xxx_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1386-1392)

    #pragma omp simd aligned(g_x_z_0_0_xx_zz_x_xx, g_x_z_0_0_xx_zz_x_xy, g_x_z_0_0_xx_zz_x_xz, g_x_z_0_0_xx_zz_x_yy, g_x_z_0_0_xx_zz_x_yz, g_x_z_0_0_xx_zz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_x_zzz_x_xx, g_x_zzz_x_xy, g_x_zzz_x_xz, g_x_zzz_x_yy, g_x_zzz_x_yz, g_x_zzz_x_zz, g_xxx_z_x_xx, g_xxx_z_x_xy, g_xxx_z_x_xz, g_xxx_z_x_yy, g_xxx_z_x_yz, g_xxx_z_x_zz, g_xxx_zzz_x_xx, g_xxx_zzz_x_xy, g_xxx_zzz_x_xz, g_xxx_zzz_x_yy, g_xxx_zzz_x_yz, g_xxx_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_zz_x_xx[i] = 4.0 * g_x_z_x_xx[i] - 4.0 * g_x_zzz_x_xx[i] * b_exp - 4.0 * g_xxx_z_x_xx[i] * a_exp + 4.0 * g_xxx_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_x_xy[i] = 4.0 * g_x_z_x_xy[i] - 4.0 * g_x_zzz_x_xy[i] * b_exp - 4.0 * g_xxx_z_x_xy[i] * a_exp + 4.0 * g_xxx_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_x_xz[i] = 4.0 * g_x_z_x_xz[i] - 4.0 * g_x_zzz_x_xz[i] * b_exp - 4.0 * g_xxx_z_x_xz[i] * a_exp + 4.0 * g_xxx_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_x_yy[i] = 4.0 * g_x_z_x_yy[i] - 4.0 * g_x_zzz_x_yy[i] * b_exp - 4.0 * g_xxx_z_x_yy[i] * a_exp + 4.0 * g_xxx_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_x_yz[i] = 4.0 * g_x_z_x_yz[i] - 4.0 * g_x_zzz_x_yz[i] * b_exp - 4.0 * g_xxx_z_x_yz[i] * a_exp + 4.0 * g_xxx_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_x_zz[i] = 4.0 * g_x_z_x_zz[i] - 4.0 * g_x_zzz_x_zz[i] * b_exp - 4.0 * g_xxx_z_x_zz[i] * a_exp + 4.0 * g_xxx_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1392-1398)

    #pragma omp simd aligned(g_x_z_0_0_xx_zz_y_xx, g_x_z_0_0_xx_zz_y_xy, g_x_z_0_0_xx_zz_y_xz, g_x_z_0_0_xx_zz_y_yy, g_x_z_0_0_xx_zz_y_yz, g_x_z_0_0_xx_zz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_x_zzz_y_xx, g_x_zzz_y_xy, g_x_zzz_y_xz, g_x_zzz_y_yy, g_x_zzz_y_yz, g_x_zzz_y_zz, g_xxx_z_y_xx, g_xxx_z_y_xy, g_xxx_z_y_xz, g_xxx_z_y_yy, g_xxx_z_y_yz, g_xxx_z_y_zz, g_xxx_zzz_y_xx, g_xxx_zzz_y_xy, g_xxx_zzz_y_xz, g_xxx_zzz_y_yy, g_xxx_zzz_y_yz, g_xxx_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_zz_y_xx[i] = 4.0 * g_x_z_y_xx[i] - 4.0 * g_x_zzz_y_xx[i] * b_exp - 4.0 * g_xxx_z_y_xx[i] * a_exp + 4.0 * g_xxx_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_y_xy[i] = 4.0 * g_x_z_y_xy[i] - 4.0 * g_x_zzz_y_xy[i] * b_exp - 4.0 * g_xxx_z_y_xy[i] * a_exp + 4.0 * g_xxx_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_y_xz[i] = 4.0 * g_x_z_y_xz[i] - 4.0 * g_x_zzz_y_xz[i] * b_exp - 4.0 * g_xxx_z_y_xz[i] * a_exp + 4.0 * g_xxx_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_y_yy[i] = 4.0 * g_x_z_y_yy[i] - 4.0 * g_x_zzz_y_yy[i] * b_exp - 4.0 * g_xxx_z_y_yy[i] * a_exp + 4.0 * g_xxx_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_y_yz[i] = 4.0 * g_x_z_y_yz[i] - 4.0 * g_x_zzz_y_yz[i] * b_exp - 4.0 * g_xxx_z_y_yz[i] * a_exp + 4.0 * g_xxx_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_y_zz[i] = 4.0 * g_x_z_y_zz[i] - 4.0 * g_x_zzz_y_zz[i] * b_exp - 4.0 * g_xxx_z_y_zz[i] * a_exp + 4.0 * g_xxx_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1398-1404)

    #pragma omp simd aligned(g_x_z_0_0_xx_zz_z_xx, g_x_z_0_0_xx_zz_z_xy, g_x_z_0_0_xx_zz_z_xz, g_x_z_0_0_xx_zz_z_yy, g_x_z_0_0_xx_zz_z_yz, g_x_z_0_0_xx_zz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_x_zzz_z_xx, g_x_zzz_z_xy, g_x_zzz_z_xz, g_x_zzz_z_yy, g_x_zzz_z_yz, g_x_zzz_z_zz, g_xxx_z_z_xx, g_xxx_z_z_xy, g_xxx_z_z_xz, g_xxx_z_z_yy, g_xxx_z_z_yz, g_xxx_z_z_zz, g_xxx_zzz_z_xx, g_xxx_zzz_z_xy, g_xxx_zzz_z_xz, g_xxx_zzz_z_yy, g_xxx_zzz_z_yz, g_xxx_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xx_zz_z_xx[i] = 4.0 * g_x_z_z_xx[i] - 4.0 * g_x_zzz_z_xx[i] * b_exp - 4.0 * g_xxx_z_z_xx[i] * a_exp + 4.0 * g_xxx_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_z_xy[i] = 4.0 * g_x_z_z_xy[i] - 4.0 * g_x_zzz_z_xy[i] * b_exp - 4.0 * g_xxx_z_z_xy[i] * a_exp + 4.0 * g_xxx_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_z_xz[i] = 4.0 * g_x_z_z_xz[i] - 4.0 * g_x_zzz_z_xz[i] * b_exp - 4.0 * g_xxx_z_z_xz[i] * a_exp + 4.0 * g_xxx_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_z_yy[i] = 4.0 * g_x_z_z_yy[i] - 4.0 * g_x_zzz_z_yy[i] * b_exp - 4.0 * g_xxx_z_z_yy[i] * a_exp + 4.0 * g_xxx_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_z_yz[i] = 4.0 * g_x_z_z_yz[i] - 4.0 * g_x_zzz_z_yz[i] * b_exp - 4.0 * g_xxx_z_z_yz[i] * a_exp + 4.0 * g_xxx_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xx_zz_z_zz[i] = 4.0 * g_x_z_z_zz[i] - 4.0 * g_x_zzz_z_zz[i] * b_exp - 4.0 * g_xxx_z_z_zz[i] * a_exp + 4.0 * g_xxx_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1404-1410)

    #pragma omp simd aligned(g_x_z_0_0_xy_xx_x_xx, g_x_z_0_0_xy_xx_x_xy, g_x_z_0_0_xy_xx_x_xz, g_x_z_0_0_xy_xx_x_yy, g_x_z_0_0_xy_xx_x_yz, g_x_z_0_0_xy_xx_x_zz, g_xxy_xxz_x_xx, g_xxy_xxz_x_xy, g_xxy_xxz_x_xz, g_xxy_xxz_x_yy, g_xxy_xxz_x_yz, g_xxy_xxz_x_zz, g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xx_x_xx[i] = -2.0 * g_y_xxz_x_xx[i] * b_exp + 4.0 * g_xxy_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_x_xy[i] = -2.0 * g_y_xxz_x_xy[i] * b_exp + 4.0 * g_xxy_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_x_xz[i] = -2.0 * g_y_xxz_x_xz[i] * b_exp + 4.0 * g_xxy_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_x_yy[i] = -2.0 * g_y_xxz_x_yy[i] * b_exp + 4.0 * g_xxy_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_x_yz[i] = -2.0 * g_y_xxz_x_yz[i] * b_exp + 4.0 * g_xxy_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_x_zz[i] = -2.0 * g_y_xxz_x_zz[i] * b_exp + 4.0 * g_xxy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1410-1416)

    #pragma omp simd aligned(g_x_z_0_0_xy_xx_y_xx, g_x_z_0_0_xy_xx_y_xy, g_x_z_0_0_xy_xx_y_xz, g_x_z_0_0_xy_xx_y_yy, g_x_z_0_0_xy_xx_y_yz, g_x_z_0_0_xy_xx_y_zz, g_xxy_xxz_y_xx, g_xxy_xxz_y_xy, g_xxy_xxz_y_xz, g_xxy_xxz_y_yy, g_xxy_xxz_y_yz, g_xxy_xxz_y_zz, g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xx_y_xx[i] = -2.0 * g_y_xxz_y_xx[i] * b_exp + 4.0 * g_xxy_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_y_xy[i] = -2.0 * g_y_xxz_y_xy[i] * b_exp + 4.0 * g_xxy_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_y_xz[i] = -2.0 * g_y_xxz_y_xz[i] * b_exp + 4.0 * g_xxy_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_y_yy[i] = -2.0 * g_y_xxz_y_yy[i] * b_exp + 4.0 * g_xxy_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_y_yz[i] = -2.0 * g_y_xxz_y_yz[i] * b_exp + 4.0 * g_xxy_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_y_zz[i] = -2.0 * g_y_xxz_y_zz[i] * b_exp + 4.0 * g_xxy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1416-1422)

    #pragma omp simd aligned(g_x_z_0_0_xy_xx_z_xx, g_x_z_0_0_xy_xx_z_xy, g_x_z_0_0_xy_xx_z_xz, g_x_z_0_0_xy_xx_z_yy, g_x_z_0_0_xy_xx_z_yz, g_x_z_0_0_xy_xx_z_zz, g_xxy_xxz_z_xx, g_xxy_xxz_z_xy, g_xxy_xxz_z_xz, g_xxy_xxz_z_yy, g_xxy_xxz_z_yz, g_xxy_xxz_z_zz, g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xx_z_xx[i] = -2.0 * g_y_xxz_z_xx[i] * b_exp + 4.0 * g_xxy_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_z_xy[i] = -2.0 * g_y_xxz_z_xy[i] * b_exp + 4.0 * g_xxy_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_z_xz[i] = -2.0 * g_y_xxz_z_xz[i] * b_exp + 4.0 * g_xxy_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_z_yy[i] = -2.0 * g_y_xxz_z_yy[i] * b_exp + 4.0 * g_xxy_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_z_yz[i] = -2.0 * g_y_xxz_z_yz[i] * b_exp + 4.0 * g_xxy_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xx_z_zz[i] = -2.0 * g_y_xxz_z_zz[i] * b_exp + 4.0 * g_xxy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1422-1428)

    #pragma omp simd aligned(g_x_z_0_0_xy_xy_x_xx, g_x_z_0_0_xy_xy_x_xy, g_x_z_0_0_xy_xy_x_xz, g_x_z_0_0_xy_xy_x_yy, g_x_z_0_0_xy_xy_x_yz, g_x_z_0_0_xy_xy_x_zz, g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xy_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1428-1434)

    #pragma omp simd aligned(g_x_z_0_0_xy_xy_y_xx, g_x_z_0_0_xy_xy_y_xy, g_x_z_0_0_xy_xy_y_xz, g_x_z_0_0_xy_xy_y_yy, g_x_z_0_0_xy_xy_y_yz, g_x_z_0_0_xy_xy_y_zz, g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xy_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1434-1440)

    #pragma omp simd aligned(g_x_z_0_0_xy_xy_z_xx, g_x_z_0_0_xy_xy_z_xy, g_x_z_0_0_xy_xy_z_xz, g_x_z_0_0_xy_xy_z_yy, g_x_z_0_0_xy_xy_z_yz, g_x_z_0_0_xy_xy_z_zz, g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xy_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xy_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1440-1446)

    #pragma omp simd aligned(g_x_z_0_0_xy_xz_x_xx, g_x_z_0_0_xy_xz_x_xy, g_x_z_0_0_xy_xz_x_xz, g_x_z_0_0_xy_xz_x_yy, g_x_z_0_0_xy_xz_x_yz, g_x_z_0_0_xy_xz_x_zz, g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xzz_x_xx, g_xxy_xzz_x_xy, g_xxy_xzz_x_xz, g_xxy_xzz_x_yy, g_xxy_xzz_x_yz, g_xxy_xzz_x_zz, g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xz_x_xx[i] = g_y_x_x_xx[i] - 2.0 * g_y_xzz_x_xx[i] * b_exp - 2.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_x_xy[i] = g_y_x_x_xy[i] - 2.0 * g_y_xzz_x_xy[i] * b_exp - 2.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_x_xz[i] = g_y_x_x_xz[i] - 2.0 * g_y_xzz_x_xz[i] * b_exp - 2.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_x_yy[i] = g_y_x_x_yy[i] - 2.0 * g_y_xzz_x_yy[i] * b_exp - 2.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_x_yz[i] = g_y_x_x_yz[i] - 2.0 * g_y_xzz_x_yz[i] * b_exp - 2.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_x_zz[i] = g_y_x_x_zz[i] - 2.0 * g_y_xzz_x_zz[i] * b_exp - 2.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1446-1452)

    #pragma omp simd aligned(g_x_z_0_0_xy_xz_y_xx, g_x_z_0_0_xy_xz_y_xy, g_x_z_0_0_xy_xz_y_xz, g_x_z_0_0_xy_xz_y_yy, g_x_z_0_0_xy_xz_y_yz, g_x_z_0_0_xy_xz_y_zz, g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xzz_y_xx, g_xxy_xzz_y_xy, g_xxy_xzz_y_xz, g_xxy_xzz_y_yy, g_xxy_xzz_y_yz, g_xxy_xzz_y_zz, g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xz_y_xx[i] = g_y_x_y_xx[i] - 2.0 * g_y_xzz_y_xx[i] * b_exp - 2.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_y_xy[i] = g_y_x_y_xy[i] - 2.0 * g_y_xzz_y_xy[i] * b_exp - 2.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_y_xz[i] = g_y_x_y_xz[i] - 2.0 * g_y_xzz_y_xz[i] * b_exp - 2.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_y_yy[i] = g_y_x_y_yy[i] - 2.0 * g_y_xzz_y_yy[i] * b_exp - 2.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_y_yz[i] = g_y_x_y_yz[i] - 2.0 * g_y_xzz_y_yz[i] * b_exp - 2.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_y_zz[i] = g_y_x_y_zz[i] - 2.0 * g_y_xzz_y_zz[i] * b_exp - 2.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1452-1458)

    #pragma omp simd aligned(g_x_z_0_0_xy_xz_z_xx, g_x_z_0_0_xy_xz_z_xy, g_x_z_0_0_xy_xz_z_xz, g_x_z_0_0_xy_xz_z_yy, g_x_z_0_0_xy_xz_z_yz, g_x_z_0_0_xy_xz_z_zz, g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xzz_z_xx, g_xxy_xzz_z_xy, g_xxy_xzz_z_xz, g_xxy_xzz_z_yy, g_xxy_xzz_z_yz, g_xxy_xzz_z_zz, g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_xz_z_xx[i] = g_y_x_z_xx[i] - 2.0 * g_y_xzz_z_xx[i] * b_exp - 2.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_z_xy[i] = g_y_x_z_xy[i] - 2.0 * g_y_xzz_z_xy[i] * b_exp - 2.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_z_xz[i] = g_y_x_z_xz[i] - 2.0 * g_y_xzz_z_xz[i] * b_exp - 2.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_z_yy[i] = g_y_x_z_yy[i] - 2.0 * g_y_xzz_z_yy[i] * b_exp - 2.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_z_yz[i] = g_y_x_z_yz[i] - 2.0 * g_y_xzz_z_yz[i] * b_exp - 2.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_xz_z_zz[i] = g_y_x_z_zz[i] - 2.0 * g_y_xzz_z_zz[i] * b_exp - 2.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1458-1464)

    #pragma omp simd aligned(g_x_z_0_0_xy_yy_x_xx, g_x_z_0_0_xy_yy_x_xy, g_x_z_0_0_xy_yy_x_xz, g_x_z_0_0_xy_yy_x_yy, g_x_z_0_0_xy_yy_x_yz, g_x_z_0_0_xy_yy_x_zz, g_xxy_yyz_x_xx, g_xxy_yyz_x_xy, g_xxy_yyz_x_xz, g_xxy_yyz_x_yy, g_xxy_yyz_x_yz, g_xxy_yyz_x_zz, g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yy_x_xx[i] = -2.0 * g_y_yyz_x_xx[i] * b_exp + 4.0 * g_xxy_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_x_xy[i] = -2.0 * g_y_yyz_x_xy[i] * b_exp + 4.0 * g_xxy_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_x_xz[i] = -2.0 * g_y_yyz_x_xz[i] * b_exp + 4.0 * g_xxy_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_x_yy[i] = -2.0 * g_y_yyz_x_yy[i] * b_exp + 4.0 * g_xxy_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_x_yz[i] = -2.0 * g_y_yyz_x_yz[i] * b_exp + 4.0 * g_xxy_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_x_zz[i] = -2.0 * g_y_yyz_x_zz[i] * b_exp + 4.0 * g_xxy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1464-1470)

    #pragma omp simd aligned(g_x_z_0_0_xy_yy_y_xx, g_x_z_0_0_xy_yy_y_xy, g_x_z_0_0_xy_yy_y_xz, g_x_z_0_0_xy_yy_y_yy, g_x_z_0_0_xy_yy_y_yz, g_x_z_0_0_xy_yy_y_zz, g_xxy_yyz_y_xx, g_xxy_yyz_y_xy, g_xxy_yyz_y_xz, g_xxy_yyz_y_yy, g_xxy_yyz_y_yz, g_xxy_yyz_y_zz, g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yy_y_xx[i] = -2.0 * g_y_yyz_y_xx[i] * b_exp + 4.0 * g_xxy_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_y_xy[i] = -2.0 * g_y_yyz_y_xy[i] * b_exp + 4.0 * g_xxy_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_y_xz[i] = -2.0 * g_y_yyz_y_xz[i] * b_exp + 4.0 * g_xxy_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_y_yy[i] = -2.0 * g_y_yyz_y_yy[i] * b_exp + 4.0 * g_xxy_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_y_yz[i] = -2.0 * g_y_yyz_y_yz[i] * b_exp + 4.0 * g_xxy_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_y_zz[i] = -2.0 * g_y_yyz_y_zz[i] * b_exp + 4.0 * g_xxy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1470-1476)

    #pragma omp simd aligned(g_x_z_0_0_xy_yy_z_xx, g_x_z_0_0_xy_yy_z_xy, g_x_z_0_0_xy_yy_z_xz, g_x_z_0_0_xy_yy_z_yy, g_x_z_0_0_xy_yy_z_yz, g_x_z_0_0_xy_yy_z_zz, g_xxy_yyz_z_xx, g_xxy_yyz_z_xy, g_xxy_yyz_z_xz, g_xxy_yyz_z_yy, g_xxy_yyz_z_yz, g_xxy_yyz_z_zz, g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yy_z_xx[i] = -2.0 * g_y_yyz_z_xx[i] * b_exp + 4.0 * g_xxy_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_z_xy[i] = -2.0 * g_y_yyz_z_xy[i] * b_exp + 4.0 * g_xxy_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_z_xz[i] = -2.0 * g_y_yyz_z_xz[i] * b_exp + 4.0 * g_xxy_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_z_yy[i] = -2.0 * g_y_yyz_z_yy[i] * b_exp + 4.0 * g_xxy_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_z_yz[i] = -2.0 * g_y_yyz_z_yz[i] * b_exp + 4.0 * g_xxy_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yy_z_zz[i] = -2.0 * g_y_yyz_z_zz[i] * b_exp + 4.0 * g_xxy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1476-1482)

    #pragma omp simd aligned(g_x_z_0_0_xy_yz_x_xx, g_x_z_0_0_xy_yz_x_xy, g_x_z_0_0_xy_yz_x_xz, g_x_z_0_0_xy_yz_x_yy, g_x_z_0_0_xy_yz_x_yz, g_x_z_0_0_xy_yz_x_zz, g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_xxy_yzz_x_xx, g_xxy_yzz_x_xy, g_xxy_yzz_x_xz, g_xxy_yzz_x_yy, g_xxy_yzz_x_yz, g_xxy_yzz_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yz_x_xx[i] = g_y_y_x_xx[i] - 2.0 * g_y_yzz_x_xx[i] * b_exp - 2.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_x_xy[i] = g_y_y_x_xy[i] - 2.0 * g_y_yzz_x_xy[i] * b_exp - 2.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_x_xz[i] = g_y_y_x_xz[i] - 2.0 * g_y_yzz_x_xz[i] * b_exp - 2.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_x_yy[i] = g_y_y_x_yy[i] - 2.0 * g_y_yzz_x_yy[i] * b_exp - 2.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_x_yz[i] = g_y_y_x_yz[i] - 2.0 * g_y_yzz_x_yz[i] * b_exp - 2.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_x_zz[i] = g_y_y_x_zz[i] - 2.0 * g_y_yzz_x_zz[i] * b_exp - 2.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1482-1488)

    #pragma omp simd aligned(g_x_z_0_0_xy_yz_y_xx, g_x_z_0_0_xy_yz_y_xy, g_x_z_0_0_xy_yz_y_xz, g_x_z_0_0_xy_yz_y_yy, g_x_z_0_0_xy_yz_y_yz, g_x_z_0_0_xy_yz_y_zz, g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_xxy_yzz_y_xx, g_xxy_yzz_y_xy, g_xxy_yzz_y_xz, g_xxy_yzz_y_yy, g_xxy_yzz_y_yz, g_xxy_yzz_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yz_y_xx[i] = g_y_y_y_xx[i] - 2.0 * g_y_yzz_y_xx[i] * b_exp - 2.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_y_xy[i] = g_y_y_y_xy[i] - 2.0 * g_y_yzz_y_xy[i] * b_exp - 2.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_y_xz[i] = g_y_y_y_xz[i] - 2.0 * g_y_yzz_y_xz[i] * b_exp - 2.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_y_yy[i] = g_y_y_y_yy[i] - 2.0 * g_y_yzz_y_yy[i] * b_exp - 2.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_y_yz[i] = g_y_y_y_yz[i] - 2.0 * g_y_yzz_y_yz[i] * b_exp - 2.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_y_zz[i] = g_y_y_y_zz[i] - 2.0 * g_y_yzz_y_zz[i] * b_exp - 2.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1488-1494)

    #pragma omp simd aligned(g_x_z_0_0_xy_yz_z_xx, g_x_z_0_0_xy_yz_z_xy, g_x_z_0_0_xy_yz_z_xz, g_x_z_0_0_xy_yz_z_yy, g_x_z_0_0_xy_yz_z_yz, g_x_z_0_0_xy_yz_z_zz, g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_xxy_yzz_z_xx, g_xxy_yzz_z_xy, g_xxy_yzz_z_xz, g_xxy_yzz_z_yy, g_xxy_yzz_z_yz, g_xxy_yzz_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_yz_z_xx[i] = g_y_y_z_xx[i] - 2.0 * g_y_yzz_z_xx[i] * b_exp - 2.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_z_xy[i] = g_y_y_z_xy[i] - 2.0 * g_y_yzz_z_xy[i] * b_exp - 2.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_z_xz[i] = g_y_y_z_xz[i] - 2.0 * g_y_yzz_z_xz[i] * b_exp - 2.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_z_yy[i] = g_y_y_z_yy[i] - 2.0 * g_y_yzz_z_yy[i] * b_exp - 2.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_z_yz[i] = g_y_y_z_yz[i] - 2.0 * g_y_yzz_z_yz[i] * b_exp - 2.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_yz_z_zz[i] = g_y_y_z_zz[i] - 2.0 * g_y_yzz_z_zz[i] * b_exp - 2.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1494-1500)

    #pragma omp simd aligned(g_x_z_0_0_xy_zz_x_xx, g_x_z_0_0_xy_zz_x_xy, g_x_z_0_0_xy_zz_x_xz, g_x_z_0_0_xy_zz_x_yy, g_x_z_0_0_xy_zz_x_yz, g_x_z_0_0_xy_zz_x_zz, g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_xxy_zzz_x_xx, g_xxy_zzz_x_xy, g_xxy_zzz_x_xz, g_xxy_zzz_x_yy, g_xxy_zzz_x_yz, g_xxy_zzz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_y_zzz_x_xx, g_y_zzz_x_xy, g_y_zzz_x_xz, g_y_zzz_x_yy, g_y_zzz_x_yz, g_y_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_zz_x_xx[i] = 2.0 * g_y_z_x_xx[i] - 2.0 * g_y_zzz_x_xx[i] * b_exp - 4.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_x_xy[i] = 2.0 * g_y_z_x_xy[i] - 2.0 * g_y_zzz_x_xy[i] * b_exp - 4.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_x_xz[i] = 2.0 * g_y_z_x_xz[i] - 2.0 * g_y_zzz_x_xz[i] * b_exp - 4.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_x_yy[i] = 2.0 * g_y_z_x_yy[i] - 2.0 * g_y_zzz_x_yy[i] * b_exp - 4.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_x_yz[i] = 2.0 * g_y_z_x_yz[i] - 2.0 * g_y_zzz_x_yz[i] * b_exp - 4.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_x_zz[i] = 2.0 * g_y_z_x_zz[i] - 2.0 * g_y_zzz_x_zz[i] * b_exp - 4.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1500-1506)

    #pragma omp simd aligned(g_x_z_0_0_xy_zz_y_xx, g_x_z_0_0_xy_zz_y_xy, g_x_z_0_0_xy_zz_y_xz, g_x_z_0_0_xy_zz_y_yy, g_x_z_0_0_xy_zz_y_yz, g_x_z_0_0_xy_zz_y_zz, g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_xxy_zzz_y_xx, g_xxy_zzz_y_xy, g_xxy_zzz_y_xz, g_xxy_zzz_y_yy, g_xxy_zzz_y_yz, g_xxy_zzz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_y_zzz_y_xx, g_y_zzz_y_xy, g_y_zzz_y_xz, g_y_zzz_y_yy, g_y_zzz_y_yz, g_y_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_zz_y_xx[i] = 2.0 * g_y_z_y_xx[i] - 2.0 * g_y_zzz_y_xx[i] * b_exp - 4.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_y_xy[i] = 2.0 * g_y_z_y_xy[i] - 2.0 * g_y_zzz_y_xy[i] * b_exp - 4.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_y_xz[i] = 2.0 * g_y_z_y_xz[i] - 2.0 * g_y_zzz_y_xz[i] * b_exp - 4.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_y_yy[i] = 2.0 * g_y_z_y_yy[i] - 2.0 * g_y_zzz_y_yy[i] * b_exp - 4.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_y_yz[i] = 2.0 * g_y_z_y_yz[i] - 2.0 * g_y_zzz_y_yz[i] * b_exp - 4.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_y_zz[i] = 2.0 * g_y_z_y_zz[i] - 2.0 * g_y_zzz_y_zz[i] * b_exp - 4.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1506-1512)

    #pragma omp simd aligned(g_x_z_0_0_xy_zz_z_xx, g_x_z_0_0_xy_zz_z_xy, g_x_z_0_0_xy_zz_z_xz, g_x_z_0_0_xy_zz_z_yy, g_x_z_0_0_xy_zz_z_yz, g_x_z_0_0_xy_zz_z_zz, g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_xxy_zzz_z_xx, g_xxy_zzz_z_xy, g_xxy_zzz_z_xz, g_xxy_zzz_z_yy, g_xxy_zzz_z_yz, g_xxy_zzz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_y_zzz_z_xx, g_y_zzz_z_xy, g_y_zzz_z_xz, g_y_zzz_z_yy, g_y_zzz_z_yz, g_y_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xy_zz_z_xx[i] = 2.0 * g_y_z_z_xx[i] - 2.0 * g_y_zzz_z_xx[i] * b_exp - 4.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_z_xy[i] = 2.0 * g_y_z_z_xy[i] - 2.0 * g_y_zzz_z_xy[i] * b_exp - 4.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_z_xz[i] = 2.0 * g_y_z_z_xz[i] - 2.0 * g_y_zzz_z_xz[i] * b_exp - 4.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_z_yy[i] = 2.0 * g_y_z_z_yy[i] - 2.0 * g_y_zzz_z_yy[i] * b_exp - 4.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_z_yz[i] = 2.0 * g_y_z_z_yz[i] - 2.0 * g_y_zzz_z_yz[i] * b_exp - 4.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xy_zz_z_zz[i] = 2.0 * g_y_z_z_zz[i] - 2.0 * g_y_zzz_z_zz[i] * b_exp - 4.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1512-1518)

    #pragma omp simd aligned(g_x_z_0_0_xz_xx_x_xx, g_x_z_0_0_xz_xx_x_xy, g_x_z_0_0_xz_xx_x_xz, g_x_z_0_0_xz_xx_x_yy, g_x_z_0_0_xz_xx_x_yz, g_x_z_0_0_xz_xx_x_zz, g_xxz_xxz_x_xx, g_xxz_xxz_x_xy, g_xxz_xxz_x_xz, g_xxz_xxz_x_yy, g_xxz_xxz_x_yz, g_xxz_xxz_x_zz, g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xx_x_xx[i] = -2.0 * g_z_xxz_x_xx[i] * b_exp + 4.0 * g_xxz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_x_xy[i] = -2.0 * g_z_xxz_x_xy[i] * b_exp + 4.0 * g_xxz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_x_xz[i] = -2.0 * g_z_xxz_x_xz[i] * b_exp + 4.0 * g_xxz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_x_yy[i] = -2.0 * g_z_xxz_x_yy[i] * b_exp + 4.0 * g_xxz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_x_yz[i] = -2.0 * g_z_xxz_x_yz[i] * b_exp + 4.0 * g_xxz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_x_zz[i] = -2.0 * g_z_xxz_x_zz[i] * b_exp + 4.0 * g_xxz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1518-1524)

    #pragma omp simd aligned(g_x_z_0_0_xz_xx_y_xx, g_x_z_0_0_xz_xx_y_xy, g_x_z_0_0_xz_xx_y_xz, g_x_z_0_0_xz_xx_y_yy, g_x_z_0_0_xz_xx_y_yz, g_x_z_0_0_xz_xx_y_zz, g_xxz_xxz_y_xx, g_xxz_xxz_y_xy, g_xxz_xxz_y_xz, g_xxz_xxz_y_yy, g_xxz_xxz_y_yz, g_xxz_xxz_y_zz, g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xx_y_xx[i] = -2.0 * g_z_xxz_y_xx[i] * b_exp + 4.0 * g_xxz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_y_xy[i] = -2.0 * g_z_xxz_y_xy[i] * b_exp + 4.0 * g_xxz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_y_xz[i] = -2.0 * g_z_xxz_y_xz[i] * b_exp + 4.0 * g_xxz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_y_yy[i] = -2.0 * g_z_xxz_y_yy[i] * b_exp + 4.0 * g_xxz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_y_yz[i] = -2.0 * g_z_xxz_y_yz[i] * b_exp + 4.0 * g_xxz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_y_zz[i] = -2.0 * g_z_xxz_y_zz[i] * b_exp + 4.0 * g_xxz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1524-1530)

    #pragma omp simd aligned(g_x_z_0_0_xz_xx_z_xx, g_x_z_0_0_xz_xx_z_xy, g_x_z_0_0_xz_xx_z_xz, g_x_z_0_0_xz_xx_z_yy, g_x_z_0_0_xz_xx_z_yz, g_x_z_0_0_xz_xx_z_zz, g_xxz_xxz_z_xx, g_xxz_xxz_z_xy, g_xxz_xxz_z_xz, g_xxz_xxz_z_yy, g_xxz_xxz_z_yz, g_xxz_xxz_z_zz, g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xx_z_xx[i] = -2.0 * g_z_xxz_z_xx[i] * b_exp + 4.0 * g_xxz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_z_xy[i] = -2.0 * g_z_xxz_z_xy[i] * b_exp + 4.0 * g_xxz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_z_xz[i] = -2.0 * g_z_xxz_z_xz[i] * b_exp + 4.0 * g_xxz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_z_yy[i] = -2.0 * g_z_xxz_z_yy[i] * b_exp + 4.0 * g_xxz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_z_yz[i] = -2.0 * g_z_xxz_z_yz[i] * b_exp + 4.0 * g_xxz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xx_z_zz[i] = -2.0 * g_z_xxz_z_zz[i] * b_exp + 4.0 * g_xxz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1530-1536)

    #pragma omp simd aligned(g_x_z_0_0_xz_xy_x_xx, g_x_z_0_0_xz_xy_x_xy, g_x_z_0_0_xz_xy_x_xz, g_x_z_0_0_xz_xy_x_yy, g_x_z_0_0_xz_xy_x_yz, g_x_z_0_0_xz_xy_x_zz, g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xy_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1536-1542)

    #pragma omp simd aligned(g_x_z_0_0_xz_xy_y_xx, g_x_z_0_0_xz_xy_y_xy, g_x_z_0_0_xz_xy_y_xz, g_x_z_0_0_xz_xy_y_yy, g_x_z_0_0_xz_xy_y_yz, g_x_z_0_0_xz_xy_y_zz, g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xy_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1542-1548)

    #pragma omp simd aligned(g_x_z_0_0_xz_xy_z_xx, g_x_z_0_0_xz_xy_z_xy, g_x_z_0_0_xz_xy_z_xz, g_x_z_0_0_xz_xy_z_yy, g_x_z_0_0_xz_xy_z_yz, g_x_z_0_0_xz_xy_z_zz, g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xy_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xy_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1548-1554)

    #pragma omp simd aligned(g_x_z_0_0_xz_xz_x_xx, g_x_z_0_0_xz_xz_x_xy, g_x_z_0_0_xz_xz_x_xz, g_x_z_0_0_xz_xz_x_yy, g_x_z_0_0_xz_xz_x_yz, g_x_z_0_0_xz_xz_x_zz, g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xzz_x_xx, g_xxz_xzz_x_xy, g_xxz_xzz_x_xz, g_xxz_xzz_x_yy, g_xxz_xzz_x_yz, g_xxz_xzz_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xz_x_xx[i] = g_z_x_x_xx[i] - 2.0 * g_z_xzz_x_xx[i] * b_exp - 2.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_x_xy[i] = g_z_x_x_xy[i] - 2.0 * g_z_xzz_x_xy[i] * b_exp - 2.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_x_xz[i] = g_z_x_x_xz[i] - 2.0 * g_z_xzz_x_xz[i] * b_exp - 2.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_x_yy[i] = g_z_x_x_yy[i] - 2.0 * g_z_xzz_x_yy[i] * b_exp - 2.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_x_yz[i] = g_z_x_x_yz[i] - 2.0 * g_z_xzz_x_yz[i] * b_exp - 2.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_x_zz[i] = g_z_x_x_zz[i] - 2.0 * g_z_xzz_x_zz[i] * b_exp - 2.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1554-1560)

    #pragma omp simd aligned(g_x_z_0_0_xz_xz_y_xx, g_x_z_0_0_xz_xz_y_xy, g_x_z_0_0_xz_xz_y_xz, g_x_z_0_0_xz_xz_y_yy, g_x_z_0_0_xz_xz_y_yz, g_x_z_0_0_xz_xz_y_zz, g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xzz_y_xx, g_xxz_xzz_y_xy, g_xxz_xzz_y_xz, g_xxz_xzz_y_yy, g_xxz_xzz_y_yz, g_xxz_xzz_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xz_y_xx[i] = g_z_x_y_xx[i] - 2.0 * g_z_xzz_y_xx[i] * b_exp - 2.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_y_xy[i] = g_z_x_y_xy[i] - 2.0 * g_z_xzz_y_xy[i] * b_exp - 2.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_y_xz[i] = g_z_x_y_xz[i] - 2.0 * g_z_xzz_y_xz[i] * b_exp - 2.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_y_yy[i] = g_z_x_y_yy[i] - 2.0 * g_z_xzz_y_yy[i] * b_exp - 2.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_y_yz[i] = g_z_x_y_yz[i] - 2.0 * g_z_xzz_y_yz[i] * b_exp - 2.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_y_zz[i] = g_z_x_y_zz[i] - 2.0 * g_z_xzz_y_zz[i] * b_exp - 2.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1560-1566)

    #pragma omp simd aligned(g_x_z_0_0_xz_xz_z_xx, g_x_z_0_0_xz_xz_z_xy, g_x_z_0_0_xz_xz_z_xz, g_x_z_0_0_xz_xz_z_yy, g_x_z_0_0_xz_xz_z_yz, g_x_z_0_0_xz_xz_z_zz, g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xzz_z_xx, g_xxz_xzz_z_xy, g_xxz_xzz_z_xz, g_xxz_xzz_z_yy, g_xxz_xzz_z_yz, g_xxz_xzz_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_xz_z_xx[i] = g_z_x_z_xx[i] - 2.0 * g_z_xzz_z_xx[i] * b_exp - 2.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_z_xy[i] = g_z_x_z_xy[i] - 2.0 * g_z_xzz_z_xy[i] * b_exp - 2.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_z_xz[i] = g_z_x_z_xz[i] - 2.0 * g_z_xzz_z_xz[i] * b_exp - 2.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_z_yy[i] = g_z_x_z_yy[i] - 2.0 * g_z_xzz_z_yy[i] * b_exp - 2.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_z_yz[i] = g_z_x_z_yz[i] - 2.0 * g_z_xzz_z_yz[i] * b_exp - 2.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_xz_z_zz[i] = g_z_x_z_zz[i] - 2.0 * g_z_xzz_z_zz[i] * b_exp - 2.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1566-1572)

    #pragma omp simd aligned(g_x_z_0_0_xz_yy_x_xx, g_x_z_0_0_xz_yy_x_xy, g_x_z_0_0_xz_yy_x_xz, g_x_z_0_0_xz_yy_x_yy, g_x_z_0_0_xz_yy_x_yz, g_x_z_0_0_xz_yy_x_zz, g_xxz_yyz_x_xx, g_xxz_yyz_x_xy, g_xxz_yyz_x_xz, g_xxz_yyz_x_yy, g_xxz_yyz_x_yz, g_xxz_yyz_x_zz, g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yy_x_xx[i] = -2.0 * g_z_yyz_x_xx[i] * b_exp + 4.0 * g_xxz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_x_xy[i] = -2.0 * g_z_yyz_x_xy[i] * b_exp + 4.0 * g_xxz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_x_xz[i] = -2.0 * g_z_yyz_x_xz[i] * b_exp + 4.0 * g_xxz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_x_yy[i] = -2.0 * g_z_yyz_x_yy[i] * b_exp + 4.0 * g_xxz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_x_yz[i] = -2.0 * g_z_yyz_x_yz[i] * b_exp + 4.0 * g_xxz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_x_zz[i] = -2.0 * g_z_yyz_x_zz[i] * b_exp + 4.0 * g_xxz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1572-1578)

    #pragma omp simd aligned(g_x_z_0_0_xz_yy_y_xx, g_x_z_0_0_xz_yy_y_xy, g_x_z_0_0_xz_yy_y_xz, g_x_z_0_0_xz_yy_y_yy, g_x_z_0_0_xz_yy_y_yz, g_x_z_0_0_xz_yy_y_zz, g_xxz_yyz_y_xx, g_xxz_yyz_y_xy, g_xxz_yyz_y_xz, g_xxz_yyz_y_yy, g_xxz_yyz_y_yz, g_xxz_yyz_y_zz, g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yy_y_xx[i] = -2.0 * g_z_yyz_y_xx[i] * b_exp + 4.0 * g_xxz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_y_xy[i] = -2.0 * g_z_yyz_y_xy[i] * b_exp + 4.0 * g_xxz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_y_xz[i] = -2.0 * g_z_yyz_y_xz[i] * b_exp + 4.0 * g_xxz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_y_yy[i] = -2.0 * g_z_yyz_y_yy[i] * b_exp + 4.0 * g_xxz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_y_yz[i] = -2.0 * g_z_yyz_y_yz[i] * b_exp + 4.0 * g_xxz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_y_zz[i] = -2.0 * g_z_yyz_y_zz[i] * b_exp + 4.0 * g_xxz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1578-1584)

    #pragma omp simd aligned(g_x_z_0_0_xz_yy_z_xx, g_x_z_0_0_xz_yy_z_xy, g_x_z_0_0_xz_yy_z_xz, g_x_z_0_0_xz_yy_z_yy, g_x_z_0_0_xz_yy_z_yz, g_x_z_0_0_xz_yy_z_zz, g_xxz_yyz_z_xx, g_xxz_yyz_z_xy, g_xxz_yyz_z_xz, g_xxz_yyz_z_yy, g_xxz_yyz_z_yz, g_xxz_yyz_z_zz, g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yy_z_xx[i] = -2.0 * g_z_yyz_z_xx[i] * b_exp + 4.0 * g_xxz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_z_xy[i] = -2.0 * g_z_yyz_z_xy[i] * b_exp + 4.0 * g_xxz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_z_xz[i] = -2.0 * g_z_yyz_z_xz[i] * b_exp + 4.0 * g_xxz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_z_yy[i] = -2.0 * g_z_yyz_z_yy[i] * b_exp + 4.0 * g_xxz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_z_yz[i] = -2.0 * g_z_yyz_z_yz[i] * b_exp + 4.0 * g_xxz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yy_z_zz[i] = -2.0 * g_z_yyz_z_zz[i] * b_exp + 4.0 * g_xxz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1584-1590)

    #pragma omp simd aligned(g_x_z_0_0_xz_yz_x_xx, g_x_z_0_0_xz_yz_x_xy, g_x_z_0_0_xz_yz_x_xz, g_x_z_0_0_xz_yz_x_yy, g_x_z_0_0_xz_yz_x_yz, g_x_z_0_0_xz_yz_x_zz, g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_xxz_yzz_x_xx, g_xxz_yzz_x_xy, g_xxz_yzz_x_xz, g_xxz_yzz_x_yy, g_xxz_yzz_x_yz, g_xxz_yzz_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yz_x_xx[i] = g_z_y_x_xx[i] - 2.0 * g_z_yzz_x_xx[i] * b_exp - 2.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_x_xy[i] = g_z_y_x_xy[i] - 2.0 * g_z_yzz_x_xy[i] * b_exp - 2.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_x_xz[i] = g_z_y_x_xz[i] - 2.0 * g_z_yzz_x_xz[i] * b_exp - 2.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_x_yy[i] = g_z_y_x_yy[i] - 2.0 * g_z_yzz_x_yy[i] * b_exp - 2.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_x_yz[i] = g_z_y_x_yz[i] - 2.0 * g_z_yzz_x_yz[i] * b_exp - 2.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_x_zz[i] = g_z_y_x_zz[i] - 2.0 * g_z_yzz_x_zz[i] * b_exp - 2.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1590-1596)

    #pragma omp simd aligned(g_x_z_0_0_xz_yz_y_xx, g_x_z_0_0_xz_yz_y_xy, g_x_z_0_0_xz_yz_y_xz, g_x_z_0_0_xz_yz_y_yy, g_x_z_0_0_xz_yz_y_yz, g_x_z_0_0_xz_yz_y_zz, g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_xxz_yzz_y_xx, g_xxz_yzz_y_xy, g_xxz_yzz_y_xz, g_xxz_yzz_y_yy, g_xxz_yzz_y_yz, g_xxz_yzz_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yz_y_xx[i] = g_z_y_y_xx[i] - 2.0 * g_z_yzz_y_xx[i] * b_exp - 2.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_y_xy[i] = g_z_y_y_xy[i] - 2.0 * g_z_yzz_y_xy[i] * b_exp - 2.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_y_xz[i] = g_z_y_y_xz[i] - 2.0 * g_z_yzz_y_xz[i] * b_exp - 2.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_y_yy[i] = g_z_y_y_yy[i] - 2.0 * g_z_yzz_y_yy[i] * b_exp - 2.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_y_yz[i] = g_z_y_y_yz[i] - 2.0 * g_z_yzz_y_yz[i] * b_exp - 2.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_y_zz[i] = g_z_y_y_zz[i] - 2.0 * g_z_yzz_y_zz[i] * b_exp - 2.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1596-1602)

    #pragma omp simd aligned(g_x_z_0_0_xz_yz_z_xx, g_x_z_0_0_xz_yz_z_xy, g_x_z_0_0_xz_yz_z_xz, g_x_z_0_0_xz_yz_z_yy, g_x_z_0_0_xz_yz_z_yz, g_x_z_0_0_xz_yz_z_zz, g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_xxz_yzz_z_xx, g_xxz_yzz_z_xy, g_xxz_yzz_z_xz, g_xxz_yzz_z_yy, g_xxz_yzz_z_yz, g_xxz_yzz_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_yz_z_xx[i] = g_z_y_z_xx[i] - 2.0 * g_z_yzz_z_xx[i] * b_exp - 2.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_z_xy[i] = g_z_y_z_xy[i] - 2.0 * g_z_yzz_z_xy[i] * b_exp - 2.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_z_xz[i] = g_z_y_z_xz[i] - 2.0 * g_z_yzz_z_xz[i] * b_exp - 2.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_z_yy[i] = g_z_y_z_yy[i] - 2.0 * g_z_yzz_z_yy[i] * b_exp - 2.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_z_yz[i] = g_z_y_z_yz[i] - 2.0 * g_z_yzz_z_yz[i] * b_exp - 2.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_yz_z_zz[i] = g_z_y_z_zz[i] - 2.0 * g_z_yzz_z_zz[i] * b_exp - 2.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1602-1608)

    #pragma omp simd aligned(g_x_z_0_0_xz_zz_x_xx, g_x_z_0_0_xz_zz_x_xy, g_x_z_0_0_xz_zz_x_xz, g_x_z_0_0_xz_zz_x_yy, g_x_z_0_0_xz_zz_x_yz, g_x_z_0_0_xz_zz_x_zz, g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_xxz_zzz_x_xx, g_xxz_zzz_x_xy, g_xxz_zzz_x_xz, g_xxz_zzz_x_yy, g_xxz_zzz_x_yz, g_xxz_zzz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz, g_z_zzz_x_xx, g_z_zzz_x_xy, g_z_zzz_x_xz, g_z_zzz_x_yy, g_z_zzz_x_yz, g_z_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_zz_x_xx[i] = 2.0 * g_z_z_x_xx[i] - 2.0 * g_z_zzz_x_xx[i] * b_exp - 4.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_x_xy[i] = 2.0 * g_z_z_x_xy[i] - 2.0 * g_z_zzz_x_xy[i] * b_exp - 4.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_x_xz[i] = 2.0 * g_z_z_x_xz[i] - 2.0 * g_z_zzz_x_xz[i] * b_exp - 4.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_x_yy[i] = 2.0 * g_z_z_x_yy[i] - 2.0 * g_z_zzz_x_yy[i] * b_exp - 4.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_x_yz[i] = 2.0 * g_z_z_x_yz[i] - 2.0 * g_z_zzz_x_yz[i] * b_exp - 4.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_x_zz[i] = 2.0 * g_z_z_x_zz[i] - 2.0 * g_z_zzz_x_zz[i] * b_exp - 4.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1608-1614)

    #pragma omp simd aligned(g_x_z_0_0_xz_zz_y_xx, g_x_z_0_0_xz_zz_y_xy, g_x_z_0_0_xz_zz_y_xz, g_x_z_0_0_xz_zz_y_yy, g_x_z_0_0_xz_zz_y_yz, g_x_z_0_0_xz_zz_y_zz, g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_xxz_zzz_y_xx, g_xxz_zzz_y_xy, g_xxz_zzz_y_xz, g_xxz_zzz_y_yy, g_xxz_zzz_y_yz, g_xxz_zzz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz, g_z_zzz_y_xx, g_z_zzz_y_xy, g_z_zzz_y_xz, g_z_zzz_y_yy, g_z_zzz_y_yz, g_z_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_zz_y_xx[i] = 2.0 * g_z_z_y_xx[i] - 2.0 * g_z_zzz_y_xx[i] * b_exp - 4.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_y_xy[i] = 2.0 * g_z_z_y_xy[i] - 2.0 * g_z_zzz_y_xy[i] * b_exp - 4.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_y_xz[i] = 2.0 * g_z_z_y_xz[i] - 2.0 * g_z_zzz_y_xz[i] * b_exp - 4.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_y_yy[i] = 2.0 * g_z_z_y_yy[i] - 2.0 * g_z_zzz_y_yy[i] * b_exp - 4.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_y_yz[i] = 2.0 * g_z_z_y_yz[i] - 2.0 * g_z_zzz_y_yz[i] * b_exp - 4.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_y_zz[i] = 2.0 * g_z_z_y_zz[i] - 2.0 * g_z_zzz_y_zz[i] * b_exp - 4.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1614-1620)

    #pragma omp simd aligned(g_x_z_0_0_xz_zz_z_xx, g_x_z_0_0_xz_zz_z_xy, g_x_z_0_0_xz_zz_z_xz, g_x_z_0_0_xz_zz_z_yy, g_x_z_0_0_xz_zz_z_yz, g_x_z_0_0_xz_zz_z_zz, g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_xxz_zzz_z_xx, g_xxz_zzz_z_xy, g_xxz_zzz_z_xz, g_xxz_zzz_z_yy, g_xxz_zzz_z_yz, g_xxz_zzz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz, g_z_zzz_z_xx, g_z_zzz_z_xy, g_z_zzz_z_xz, g_z_zzz_z_yy, g_z_zzz_z_yz, g_z_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_xz_zz_z_xx[i] = 2.0 * g_z_z_z_xx[i] - 2.0 * g_z_zzz_z_xx[i] * b_exp - 4.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_z_xy[i] = 2.0 * g_z_z_z_xy[i] - 2.0 * g_z_zzz_z_xy[i] * b_exp - 4.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_z_xz[i] = 2.0 * g_z_z_z_xz[i] - 2.0 * g_z_zzz_z_xz[i] * b_exp - 4.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_z_yy[i] = 2.0 * g_z_z_z_yy[i] - 2.0 * g_z_zzz_z_yy[i] * b_exp - 4.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_z_yz[i] = 2.0 * g_z_z_z_yz[i] - 2.0 * g_z_zzz_z_yz[i] * b_exp - 4.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_xz_zz_z_zz[i] = 2.0 * g_z_z_z_zz[i] - 2.0 * g_z_zzz_z_zz[i] * b_exp - 4.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1620-1626)

    #pragma omp simd aligned(g_x_z_0_0_yy_xx_x_xx, g_x_z_0_0_yy_xx_x_xy, g_x_z_0_0_yy_xx_x_xz, g_x_z_0_0_yy_xx_x_yy, g_x_z_0_0_yy_xx_x_yz, g_x_z_0_0_yy_xx_x_zz, g_xyy_xxz_x_xx, g_xyy_xxz_x_xy, g_xyy_xxz_x_xz, g_xyy_xxz_x_yy, g_xyy_xxz_x_yz, g_xyy_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xx_x_xx[i] = 4.0 * g_xyy_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_x_xy[i] = 4.0 * g_xyy_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_x_xz[i] = 4.0 * g_xyy_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_x_yy[i] = 4.0 * g_xyy_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_x_yz[i] = 4.0 * g_xyy_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_x_zz[i] = 4.0 * g_xyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1626-1632)

    #pragma omp simd aligned(g_x_z_0_0_yy_xx_y_xx, g_x_z_0_0_yy_xx_y_xy, g_x_z_0_0_yy_xx_y_xz, g_x_z_0_0_yy_xx_y_yy, g_x_z_0_0_yy_xx_y_yz, g_x_z_0_0_yy_xx_y_zz, g_xyy_xxz_y_xx, g_xyy_xxz_y_xy, g_xyy_xxz_y_xz, g_xyy_xxz_y_yy, g_xyy_xxz_y_yz, g_xyy_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xx_y_xx[i] = 4.0 * g_xyy_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_y_xy[i] = 4.0 * g_xyy_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_y_xz[i] = 4.0 * g_xyy_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_y_yy[i] = 4.0 * g_xyy_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_y_yz[i] = 4.0 * g_xyy_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_y_zz[i] = 4.0 * g_xyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1632-1638)

    #pragma omp simd aligned(g_x_z_0_0_yy_xx_z_xx, g_x_z_0_0_yy_xx_z_xy, g_x_z_0_0_yy_xx_z_xz, g_x_z_0_0_yy_xx_z_yy, g_x_z_0_0_yy_xx_z_yz, g_x_z_0_0_yy_xx_z_zz, g_xyy_xxz_z_xx, g_xyy_xxz_z_xy, g_xyy_xxz_z_xz, g_xyy_xxz_z_yy, g_xyy_xxz_z_yz, g_xyy_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xx_z_xx[i] = 4.0 * g_xyy_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_z_xy[i] = 4.0 * g_xyy_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_z_xz[i] = 4.0 * g_xyy_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_z_yy[i] = 4.0 * g_xyy_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_z_yz[i] = 4.0 * g_xyy_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xx_z_zz[i] = 4.0 * g_xyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1638-1644)

    #pragma omp simd aligned(g_x_z_0_0_yy_xy_x_xx, g_x_z_0_0_yy_xy_x_xy, g_x_z_0_0_yy_xy_x_xz, g_x_z_0_0_yy_xy_x_yy, g_x_z_0_0_yy_xy_x_yz, g_x_z_0_0_yy_xy_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xy_x_xx[i] = 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_x_xy[i] = 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_x_xz[i] = 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_x_yy[i] = 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_x_yz[i] = 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_x_zz[i] = 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1644-1650)

    #pragma omp simd aligned(g_x_z_0_0_yy_xy_y_xx, g_x_z_0_0_yy_xy_y_xy, g_x_z_0_0_yy_xy_y_xz, g_x_z_0_0_yy_xy_y_yy, g_x_z_0_0_yy_xy_y_yz, g_x_z_0_0_yy_xy_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xy_y_xx[i] = 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_y_xy[i] = 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_y_xz[i] = 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_y_yy[i] = 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_y_yz[i] = 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_y_zz[i] = 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1650-1656)

    #pragma omp simd aligned(g_x_z_0_0_yy_xy_z_xx, g_x_z_0_0_yy_xy_z_xy, g_x_z_0_0_yy_xy_z_xz, g_x_z_0_0_yy_xy_z_yy, g_x_z_0_0_yy_xy_z_yz, g_x_z_0_0_yy_xy_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xy_z_xx[i] = 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_z_xy[i] = 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_z_xz[i] = 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_z_yy[i] = 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_z_yz[i] = 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xy_z_zz[i] = 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1656-1662)

    #pragma omp simd aligned(g_x_z_0_0_yy_xz_x_xx, g_x_z_0_0_yy_xz_x_xy, g_x_z_0_0_yy_xz_x_xz, g_x_z_0_0_yy_xz_x_yy, g_x_z_0_0_yy_xz_x_yz, g_x_z_0_0_yy_xz_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xzz_x_xx, g_xyy_xzz_x_xy, g_xyy_xzz_x_xz, g_xyy_xzz_x_yy, g_xyy_xzz_x_yz, g_xyy_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xz_x_xx[i] = -2.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_x_xy[i] = -2.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_x_xz[i] = -2.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_x_yy[i] = -2.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_x_yz[i] = -2.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_x_zz[i] = -2.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1662-1668)

    #pragma omp simd aligned(g_x_z_0_0_yy_xz_y_xx, g_x_z_0_0_yy_xz_y_xy, g_x_z_0_0_yy_xz_y_xz, g_x_z_0_0_yy_xz_y_yy, g_x_z_0_0_yy_xz_y_yz, g_x_z_0_0_yy_xz_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xzz_y_xx, g_xyy_xzz_y_xy, g_xyy_xzz_y_xz, g_xyy_xzz_y_yy, g_xyy_xzz_y_yz, g_xyy_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xz_y_xx[i] = -2.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_y_xy[i] = -2.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_y_xz[i] = -2.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_y_yy[i] = -2.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_y_yz[i] = -2.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_y_zz[i] = -2.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1668-1674)

    #pragma omp simd aligned(g_x_z_0_0_yy_xz_z_xx, g_x_z_0_0_yy_xz_z_xy, g_x_z_0_0_yy_xz_z_xz, g_x_z_0_0_yy_xz_z_yy, g_x_z_0_0_yy_xz_z_yz, g_x_z_0_0_yy_xz_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xzz_z_xx, g_xyy_xzz_z_xy, g_xyy_xzz_z_xz, g_xyy_xzz_z_yy, g_xyy_xzz_z_yz, g_xyy_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_xz_z_xx[i] = -2.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_z_xy[i] = -2.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_z_xz[i] = -2.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_z_yy[i] = -2.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_z_yz[i] = -2.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_xz_z_zz[i] = -2.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1674-1680)

    #pragma omp simd aligned(g_x_z_0_0_yy_yy_x_xx, g_x_z_0_0_yy_yy_x_xy, g_x_z_0_0_yy_yy_x_xz, g_x_z_0_0_yy_yy_x_yy, g_x_z_0_0_yy_yy_x_yz, g_x_z_0_0_yy_yy_x_zz, g_xyy_yyz_x_xx, g_xyy_yyz_x_xy, g_xyy_yyz_x_xz, g_xyy_yyz_x_yy, g_xyy_yyz_x_yz, g_xyy_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yy_x_xx[i] = 4.0 * g_xyy_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_x_xy[i] = 4.0 * g_xyy_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_x_xz[i] = 4.0 * g_xyy_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_x_yy[i] = 4.0 * g_xyy_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_x_yz[i] = 4.0 * g_xyy_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_x_zz[i] = 4.0 * g_xyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1680-1686)

    #pragma omp simd aligned(g_x_z_0_0_yy_yy_y_xx, g_x_z_0_0_yy_yy_y_xy, g_x_z_0_0_yy_yy_y_xz, g_x_z_0_0_yy_yy_y_yy, g_x_z_0_0_yy_yy_y_yz, g_x_z_0_0_yy_yy_y_zz, g_xyy_yyz_y_xx, g_xyy_yyz_y_xy, g_xyy_yyz_y_xz, g_xyy_yyz_y_yy, g_xyy_yyz_y_yz, g_xyy_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yy_y_xx[i] = 4.0 * g_xyy_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_y_xy[i] = 4.0 * g_xyy_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_y_xz[i] = 4.0 * g_xyy_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_y_yy[i] = 4.0 * g_xyy_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_y_yz[i] = 4.0 * g_xyy_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_y_zz[i] = 4.0 * g_xyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1686-1692)

    #pragma omp simd aligned(g_x_z_0_0_yy_yy_z_xx, g_x_z_0_0_yy_yy_z_xy, g_x_z_0_0_yy_yy_z_xz, g_x_z_0_0_yy_yy_z_yy, g_x_z_0_0_yy_yy_z_yz, g_x_z_0_0_yy_yy_z_zz, g_xyy_yyz_z_xx, g_xyy_yyz_z_xy, g_xyy_yyz_z_xz, g_xyy_yyz_z_yy, g_xyy_yyz_z_yz, g_xyy_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yy_z_xx[i] = 4.0 * g_xyy_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_z_xy[i] = 4.0 * g_xyy_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_z_xz[i] = 4.0 * g_xyy_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_z_yy[i] = 4.0 * g_xyy_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_z_yz[i] = 4.0 * g_xyy_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yy_z_zz[i] = 4.0 * g_xyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1692-1698)

    #pragma omp simd aligned(g_x_z_0_0_yy_yz_x_xx, g_x_z_0_0_yy_yz_x_xy, g_x_z_0_0_yy_yz_x_xz, g_x_z_0_0_yy_yz_x_yy, g_x_z_0_0_yy_yz_x_yz, g_x_z_0_0_yy_yz_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz, g_xyy_yzz_x_xx, g_xyy_yzz_x_xy, g_xyy_yzz_x_xz, g_xyy_yzz_x_yy, g_xyy_yzz_x_yz, g_xyy_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yz_x_xx[i] = -2.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_x_xy[i] = -2.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_x_xz[i] = -2.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_x_yy[i] = -2.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_x_yz[i] = -2.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_x_zz[i] = -2.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1698-1704)

    #pragma omp simd aligned(g_x_z_0_0_yy_yz_y_xx, g_x_z_0_0_yy_yz_y_xy, g_x_z_0_0_yy_yz_y_xz, g_x_z_0_0_yy_yz_y_yy, g_x_z_0_0_yy_yz_y_yz, g_x_z_0_0_yy_yz_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz, g_xyy_yzz_y_xx, g_xyy_yzz_y_xy, g_xyy_yzz_y_xz, g_xyy_yzz_y_yy, g_xyy_yzz_y_yz, g_xyy_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yz_y_xx[i] = -2.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_y_xy[i] = -2.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_y_xz[i] = -2.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_y_yy[i] = -2.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_y_yz[i] = -2.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_y_zz[i] = -2.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1704-1710)

    #pragma omp simd aligned(g_x_z_0_0_yy_yz_z_xx, g_x_z_0_0_yy_yz_z_xy, g_x_z_0_0_yy_yz_z_xz, g_x_z_0_0_yy_yz_z_yy, g_x_z_0_0_yy_yz_z_yz, g_x_z_0_0_yy_yz_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz, g_xyy_yzz_z_xx, g_xyy_yzz_z_xy, g_xyy_yzz_z_xz, g_xyy_yzz_z_yy, g_xyy_yzz_z_yz, g_xyy_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_yz_z_xx[i] = -2.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_z_xy[i] = -2.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_z_xz[i] = -2.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_z_yy[i] = -2.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_z_yz[i] = -2.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_yz_z_zz[i] = -2.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1710-1716)

    #pragma omp simd aligned(g_x_z_0_0_yy_zz_x_xx, g_x_z_0_0_yy_zz_x_xy, g_x_z_0_0_yy_zz_x_xz, g_x_z_0_0_yy_zz_x_yy, g_x_z_0_0_yy_zz_x_yz, g_x_z_0_0_yy_zz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz, g_xyy_zzz_x_xx, g_xyy_zzz_x_xy, g_xyy_zzz_x_xz, g_xyy_zzz_x_yy, g_xyy_zzz_x_yz, g_xyy_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_zz_x_xx[i] = -4.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_x_xy[i] = -4.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_x_xz[i] = -4.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_x_yy[i] = -4.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_x_yz[i] = -4.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_x_zz[i] = -4.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1716-1722)

    #pragma omp simd aligned(g_x_z_0_0_yy_zz_y_xx, g_x_z_0_0_yy_zz_y_xy, g_x_z_0_0_yy_zz_y_xz, g_x_z_0_0_yy_zz_y_yy, g_x_z_0_0_yy_zz_y_yz, g_x_z_0_0_yy_zz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz, g_xyy_zzz_y_xx, g_xyy_zzz_y_xy, g_xyy_zzz_y_xz, g_xyy_zzz_y_yy, g_xyy_zzz_y_yz, g_xyy_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_zz_y_xx[i] = -4.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_y_xy[i] = -4.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_y_xz[i] = -4.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_y_yy[i] = -4.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_y_yz[i] = -4.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_y_zz[i] = -4.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1722-1728)

    #pragma omp simd aligned(g_x_z_0_0_yy_zz_z_xx, g_x_z_0_0_yy_zz_z_xy, g_x_z_0_0_yy_zz_z_xz, g_x_z_0_0_yy_zz_z_yy, g_x_z_0_0_yy_zz_z_yz, g_x_z_0_0_yy_zz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz, g_xyy_zzz_z_xx, g_xyy_zzz_z_xy, g_xyy_zzz_z_xz, g_xyy_zzz_z_yy, g_xyy_zzz_z_yz, g_xyy_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yy_zz_z_xx[i] = -4.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_z_xy[i] = -4.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_z_xz[i] = -4.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_z_yy[i] = -4.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_z_yz[i] = -4.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yy_zz_z_zz[i] = -4.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1728-1734)

    #pragma omp simd aligned(g_x_z_0_0_yz_xx_x_xx, g_x_z_0_0_yz_xx_x_xy, g_x_z_0_0_yz_xx_x_xz, g_x_z_0_0_yz_xx_x_yy, g_x_z_0_0_yz_xx_x_yz, g_x_z_0_0_yz_xx_x_zz, g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xx_x_xx[i] = 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_x_xy[i] = 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_x_xz[i] = 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_x_yy[i] = 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_x_yz[i] = 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_x_zz[i] = 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1734-1740)

    #pragma omp simd aligned(g_x_z_0_0_yz_xx_y_xx, g_x_z_0_0_yz_xx_y_xy, g_x_z_0_0_yz_xx_y_xz, g_x_z_0_0_yz_xx_y_yy, g_x_z_0_0_yz_xx_y_yz, g_x_z_0_0_yz_xx_y_zz, g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xx_y_xx[i] = 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_y_xy[i] = 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_y_xz[i] = 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_y_yy[i] = 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_y_yz[i] = 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_y_zz[i] = 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1740-1746)

    #pragma omp simd aligned(g_x_z_0_0_yz_xx_z_xx, g_x_z_0_0_yz_xx_z_xy, g_x_z_0_0_yz_xx_z_xz, g_x_z_0_0_yz_xx_z_yy, g_x_z_0_0_yz_xx_z_yz, g_x_z_0_0_yz_xx_z_zz, g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xx_z_xx[i] = 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_z_xy[i] = 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_z_xz[i] = 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_z_yy[i] = 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_z_yz[i] = 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xx_z_zz[i] = 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1746-1752)

    #pragma omp simd aligned(g_x_z_0_0_yz_xy_x_xx, g_x_z_0_0_yz_xy_x_xy, g_x_z_0_0_yz_xy_x_xz, g_x_z_0_0_yz_xy_x_yy, g_x_z_0_0_yz_xy_x_yz, g_x_z_0_0_yz_xy_x_zz, g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xy_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1752-1758)

    #pragma omp simd aligned(g_x_z_0_0_yz_xy_y_xx, g_x_z_0_0_yz_xy_y_xy, g_x_z_0_0_yz_xy_y_xz, g_x_z_0_0_yz_xy_y_yy, g_x_z_0_0_yz_xy_y_yz, g_x_z_0_0_yz_xy_y_zz, g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xy_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1758-1764)

    #pragma omp simd aligned(g_x_z_0_0_yz_xy_z_xx, g_x_z_0_0_yz_xy_z_xy, g_x_z_0_0_yz_xy_z_xz, g_x_z_0_0_yz_xy_z_yy, g_x_z_0_0_yz_xy_z_yz, g_x_z_0_0_yz_xy_z_zz, g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xy_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xy_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1764-1770)

    #pragma omp simd aligned(g_x_z_0_0_yz_xz_x_xx, g_x_z_0_0_yz_xz_x_xy, g_x_z_0_0_yz_xz_x_xz, g_x_z_0_0_yz_xz_x_yy, g_x_z_0_0_yz_xz_x_yz, g_x_z_0_0_yz_xz_x_zz, g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xz_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1770-1776)

    #pragma omp simd aligned(g_x_z_0_0_yz_xz_y_xx, g_x_z_0_0_yz_xz_y_xy, g_x_z_0_0_yz_xz_y_xz, g_x_z_0_0_yz_xz_y_yy, g_x_z_0_0_yz_xz_y_yz, g_x_z_0_0_yz_xz_y_zz, g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xz_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1776-1782)

    #pragma omp simd aligned(g_x_z_0_0_yz_xz_z_xx, g_x_z_0_0_yz_xz_z_xy, g_x_z_0_0_yz_xz_z_xz, g_x_z_0_0_yz_xz_z_yy, g_x_z_0_0_yz_xz_z_yz, g_x_z_0_0_yz_xz_z_zz, g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_xz_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_xz_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1782-1788)

    #pragma omp simd aligned(g_x_z_0_0_yz_yy_x_xx, g_x_z_0_0_yz_yy_x_xy, g_x_z_0_0_yz_yy_x_xz, g_x_z_0_0_yz_yy_x_yy, g_x_z_0_0_yz_yy_x_yz, g_x_z_0_0_yz_yy_x_zz, g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yy_x_xx[i] = 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_x_xy[i] = 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_x_xz[i] = 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_x_yy[i] = 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_x_yz[i] = 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_x_zz[i] = 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1788-1794)

    #pragma omp simd aligned(g_x_z_0_0_yz_yy_y_xx, g_x_z_0_0_yz_yy_y_xy, g_x_z_0_0_yz_yy_y_xz, g_x_z_0_0_yz_yy_y_yy, g_x_z_0_0_yz_yy_y_yz, g_x_z_0_0_yz_yy_y_zz, g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yy_y_xx[i] = 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_y_xy[i] = 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_y_xz[i] = 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_y_yy[i] = 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_y_yz[i] = 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_y_zz[i] = 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1794-1800)

    #pragma omp simd aligned(g_x_z_0_0_yz_yy_z_xx, g_x_z_0_0_yz_yy_z_xy, g_x_z_0_0_yz_yy_z_xz, g_x_z_0_0_yz_yy_z_yy, g_x_z_0_0_yz_yy_z_yz, g_x_z_0_0_yz_yy_z_zz, g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yy_z_xx[i] = 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_z_xy[i] = 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_z_xz[i] = 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_z_yy[i] = 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_z_yz[i] = 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yy_z_zz[i] = 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1800-1806)

    #pragma omp simd aligned(g_x_z_0_0_yz_yz_x_xx, g_x_z_0_0_yz_yz_x_xy, g_x_z_0_0_yz_yz_x_xz, g_x_z_0_0_yz_yz_x_yy, g_x_z_0_0_yz_yz_x_yz, g_x_z_0_0_yz_yz_x_zz, g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yz_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1806-1812)

    #pragma omp simd aligned(g_x_z_0_0_yz_yz_y_xx, g_x_z_0_0_yz_yz_y_xy, g_x_z_0_0_yz_yz_y_xz, g_x_z_0_0_yz_yz_y_yy, g_x_z_0_0_yz_yz_y_yz, g_x_z_0_0_yz_yz_y_zz, g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yz_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1812-1818)

    #pragma omp simd aligned(g_x_z_0_0_yz_yz_z_xx, g_x_z_0_0_yz_yz_z_xy, g_x_z_0_0_yz_yz_z_xz, g_x_z_0_0_yz_yz_z_yy, g_x_z_0_0_yz_yz_z_yz, g_x_z_0_0_yz_yz_z_zz, g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_yz_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_yz_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1818-1824)

    #pragma omp simd aligned(g_x_z_0_0_yz_zz_x_xx, g_x_z_0_0_yz_zz_x_xy, g_x_z_0_0_yz_zz_x_xz, g_x_z_0_0_yz_zz_x_yy, g_x_z_0_0_yz_zz_x_yz, g_x_z_0_0_yz_zz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_xyz_zzz_x_xx, g_xyz_zzz_x_xy, g_xyz_zzz_x_xz, g_xyz_zzz_x_yy, g_xyz_zzz_x_yz, g_xyz_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_zz_x_xx[i] = -4.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_x_xy[i] = -4.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_x_xz[i] = -4.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_x_yy[i] = -4.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_x_yz[i] = -4.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_x_zz[i] = -4.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1824-1830)

    #pragma omp simd aligned(g_x_z_0_0_yz_zz_y_xx, g_x_z_0_0_yz_zz_y_xy, g_x_z_0_0_yz_zz_y_xz, g_x_z_0_0_yz_zz_y_yy, g_x_z_0_0_yz_zz_y_yz, g_x_z_0_0_yz_zz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_xyz_zzz_y_xx, g_xyz_zzz_y_xy, g_xyz_zzz_y_xz, g_xyz_zzz_y_yy, g_xyz_zzz_y_yz, g_xyz_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_zz_y_xx[i] = -4.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_y_xy[i] = -4.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_y_xz[i] = -4.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_y_yy[i] = -4.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_y_yz[i] = -4.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_y_zz[i] = -4.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1830-1836)

    #pragma omp simd aligned(g_x_z_0_0_yz_zz_z_xx, g_x_z_0_0_yz_zz_z_xy, g_x_z_0_0_yz_zz_z_xz, g_x_z_0_0_yz_zz_z_yy, g_x_z_0_0_yz_zz_z_yz, g_x_z_0_0_yz_zz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_xyz_zzz_z_xx, g_xyz_zzz_z_xy, g_xyz_zzz_z_xz, g_xyz_zzz_z_yy, g_xyz_zzz_z_yz, g_xyz_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_yz_zz_z_xx[i] = -4.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_z_xy[i] = -4.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_z_xz[i] = -4.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_z_yy[i] = -4.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_z_yz[i] = -4.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_yz_zz_z_zz[i] = -4.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1836-1842)

    #pragma omp simd aligned(g_x_z_0_0_zz_xx_x_xx, g_x_z_0_0_zz_xx_x_xy, g_x_z_0_0_zz_xx_x_xz, g_x_z_0_0_zz_xx_x_yy, g_x_z_0_0_zz_xx_x_yz, g_x_z_0_0_zz_xx_x_zz, g_xzz_xxz_x_xx, g_xzz_xxz_x_xy, g_xzz_xxz_x_xz, g_xzz_xxz_x_yy, g_xzz_xxz_x_yz, g_xzz_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xx_x_xx[i] = 4.0 * g_xzz_xxz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_x_xy[i] = 4.0 * g_xzz_xxz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_x_xz[i] = 4.0 * g_xzz_xxz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_x_yy[i] = 4.0 * g_xzz_xxz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_x_yz[i] = 4.0 * g_xzz_xxz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_x_zz[i] = 4.0 * g_xzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1842-1848)

    #pragma omp simd aligned(g_x_z_0_0_zz_xx_y_xx, g_x_z_0_0_zz_xx_y_xy, g_x_z_0_0_zz_xx_y_xz, g_x_z_0_0_zz_xx_y_yy, g_x_z_0_0_zz_xx_y_yz, g_x_z_0_0_zz_xx_y_zz, g_xzz_xxz_y_xx, g_xzz_xxz_y_xy, g_xzz_xxz_y_xz, g_xzz_xxz_y_yy, g_xzz_xxz_y_yz, g_xzz_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xx_y_xx[i] = 4.0 * g_xzz_xxz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_y_xy[i] = 4.0 * g_xzz_xxz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_y_xz[i] = 4.0 * g_xzz_xxz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_y_yy[i] = 4.0 * g_xzz_xxz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_y_yz[i] = 4.0 * g_xzz_xxz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_y_zz[i] = 4.0 * g_xzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1848-1854)

    #pragma omp simd aligned(g_x_z_0_0_zz_xx_z_xx, g_x_z_0_0_zz_xx_z_xy, g_x_z_0_0_zz_xx_z_xz, g_x_z_0_0_zz_xx_z_yy, g_x_z_0_0_zz_xx_z_yz, g_x_z_0_0_zz_xx_z_zz, g_xzz_xxz_z_xx, g_xzz_xxz_z_xy, g_xzz_xxz_z_xz, g_xzz_xxz_z_yy, g_xzz_xxz_z_yz, g_xzz_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xx_z_xx[i] = 4.0 * g_xzz_xxz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_z_xy[i] = 4.0 * g_xzz_xxz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_z_xz[i] = 4.0 * g_xzz_xxz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_z_yy[i] = 4.0 * g_xzz_xxz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_z_yz[i] = 4.0 * g_xzz_xxz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xx_z_zz[i] = 4.0 * g_xzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1854-1860)

    #pragma omp simd aligned(g_x_z_0_0_zz_xy_x_xx, g_x_z_0_0_zz_xy_x_xy, g_x_z_0_0_zz_xy_x_xz, g_x_z_0_0_zz_xy_x_yy, g_x_z_0_0_zz_xy_x_yz, g_x_z_0_0_zz_xy_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xy_x_xx[i] = 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_x_xy[i] = 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_x_xz[i] = 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_x_yy[i] = 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_x_yz[i] = 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_x_zz[i] = 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1860-1866)

    #pragma omp simd aligned(g_x_z_0_0_zz_xy_y_xx, g_x_z_0_0_zz_xy_y_xy, g_x_z_0_0_zz_xy_y_xz, g_x_z_0_0_zz_xy_y_yy, g_x_z_0_0_zz_xy_y_yz, g_x_z_0_0_zz_xy_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xy_y_xx[i] = 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_y_xy[i] = 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_y_xz[i] = 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_y_yy[i] = 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_y_yz[i] = 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_y_zz[i] = 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1866-1872)

    #pragma omp simd aligned(g_x_z_0_0_zz_xy_z_xx, g_x_z_0_0_zz_xy_z_xy, g_x_z_0_0_zz_xy_z_xz, g_x_z_0_0_zz_xy_z_yy, g_x_z_0_0_zz_xy_z_yz, g_x_z_0_0_zz_xy_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xy_z_xx[i] = 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_z_xy[i] = 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_z_xz[i] = 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_z_yy[i] = 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_z_yz[i] = 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xy_z_zz[i] = 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1872-1878)

    #pragma omp simd aligned(g_x_z_0_0_zz_xz_x_xx, g_x_z_0_0_zz_xz_x_xy, g_x_z_0_0_zz_xz_x_xz, g_x_z_0_0_zz_xz_x_yy, g_x_z_0_0_zz_xz_x_yz, g_x_z_0_0_zz_xz_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xzz_x_xx, g_xzz_xzz_x_xy, g_xzz_xzz_x_xz, g_xzz_xzz_x_yy, g_xzz_xzz_x_yz, g_xzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xz_x_xx[i] = -2.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_x_xy[i] = -2.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_x_xz[i] = -2.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_x_yy[i] = -2.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_x_yz[i] = -2.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_x_zz[i] = -2.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1878-1884)

    #pragma omp simd aligned(g_x_z_0_0_zz_xz_y_xx, g_x_z_0_0_zz_xz_y_xy, g_x_z_0_0_zz_xz_y_xz, g_x_z_0_0_zz_xz_y_yy, g_x_z_0_0_zz_xz_y_yz, g_x_z_0_0_zz_xz_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xzz_y_xx, g_xzz_xzz_y_xy, g_xzz_xzz_y_xz, g_xzz_xzz_y_yy, g_xzz_xzz_y_yz, g_xzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xz_y_xx[i] = -2.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_y_xy[i] = -2.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_y_xz[i] = -2.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_y_yy[i] = -2.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_y_yz[i] = -2.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_y_zz[i] = -2.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1884-1890)

    #pragma omp simd aligned(g_x_z_0_0_zz_xz_z_xx, g_x_z_0_0_zz_xz_z_xy, g_x_z_0_0_zz_xz_z_xz, g_x_z_0_0_zz_xz_z_yy, g_x_z_0_0_zz_xz_z_yz, g_x_z_0_0_zz_xz_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xzz_z_xx, g_xzz_xzz_z_xy, g_xzz_xzz_z_xz, g_xzz_xzz_z_yy, g_xzz_xzz_z_yz, g_xzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_xz_z_xx[i] = -2.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_z_xy[i] = -2.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_z_xz[i] = -2.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_z_yy[i] = -2.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_z_yz[i] = -2.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_xz_z_zz[i] = -2.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1890-1896)

    #pragma omp simd aligned(g_x_z_0_0_zz_yy_x_xx, g_x_z_0_0_zz_yy_x_xy, g_x_z_0_0_zz_yy_x_xz, g_x_z_0_0_zz_yy_x_yy, g_x_z_0_0_zz_yy_x_yz, g_x_z_0_0_zz_yy_x_zz, g_xzz_yyz_x_xx, g_xzz_yyz_x_xy, g_xzz_yyz_x_xz, g_xzz_yyz_x_yy, g_xzz_yyz_x_yz, g_xzz_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yy_x_xx[i] = 4.0 * g_xzz_yyz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_x_xy[i] = 4.0 * g_xzz_yyz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_x_xz[i] = 4.0 * g_xzz_yyz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_x_yy[i] = 4.0 * g_xzz_yyz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_x_yz[i] = 4.0 * g_xzz_yyz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_x_zz[i] = 4.0 * g_xzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1896-1902)

    #pragma omp simd aligned(g_x_z_0_0_zz_yy_y_xx, g_x_z_0_0_zz_yy_y_xy, g_x_z_0_0_zz_yy_y_xz, g_x_z_0_0_zz_yy_y_yy, g_x_z_0_0_zz_yy_y_yz, g_x_z_0_0_zz_yy_y_zz, g_xzz_yyz_y_xx, g_xzz_yyz_y_xy, g_xzz_yyz_y_xz, g_xzz_yyz_y_yy, g_xzz_yyz_y_yz, g_xzz_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yy_y_xx[i] = 4.0 * g_xzz_yyz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_y_xy[i] = 4.0 * g_xzz_yyz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_y_xz[i] = 4.0 * g_xzz_yyz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_y_yy[i] = 4.0 * g_xzz_yyz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_y_yz[i] = 4.0 * g_xzz_yyz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_y_zz[i] = 4.0 * g_xzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1902-1908)

    #pragma omp simd aligned(g_x_z_0_0_zz_yy_z_xx, g_x_z_0_0_zz_yy_z_xy, g_x_z_0_0_zz_yy_z_xz, g_x_z_0_0_zz_yy_z_yy, g_x_z_0_0_zz_yy_z_yz, g_x_z_0_0_zz_yy_z_zz, g_xzz_yyz_z_xx, g_xzz_yyz_z_xy, g_xzz_yyz_z_xz, g_xzz_yyz_z_yy, g_xzz_yyz_z_yz, g_xzz_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yy_z_xx[i] = 4.0 * g_xzz_yyz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_z_xy[i] = 4.0 * g_xzz_yyz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_z_xz[i] = 4.0 * g_xzz_yyz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_z_yy[i] = 4.0 * g_xzz_yyz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_z_yz[i] = 4.0 * g_xzz_yyz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yy_z_zz[i] = 4.0 * g_xzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1908-1914)

    #pragma omp simd aligned(g_x_z_0_0_zz_yz_x_xx, g_x_z_0_0_zz_yz_x_xy, g_x_z_0_0_zz_yz_x_xz, g_x_z_0_0_zz_yz_x_yy, g_x_z_0_0_zz_yz_x_yz, g_x_z_0_0_zz_yz_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz, g_xzz_yzz_x_xx, g_xzz_yzz_x_xy, g_xzz_yzz_x_xz, g_xzz_yzz_x_yy, g_xzz_yzz_x_yz, g_xzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yz_x_xx[i] = -2.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_yzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_x_xy[i] = -2.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_yzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_x_xz[i] = -2.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_yzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_x_yy[i] = -2.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_yzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_x_yz[i] = -2.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_yzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_x_zz[i] = -2.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1914-1920)

    #pragma omp simd aligned(g_x_z_0_0_zz_yz_y_xx, g_x_z_0_0_zz_yz_y_xy, g_x_z_0_0_zz_yz_y_xz, g_x_z_0_0_zz_yz_y_yy, g_x_z_0_0_zz_yz_y_yz, g_x_z_0_0_zz_yz_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz, g_xzz_yzz_y_xx, g_xzz_yzz_y_xy, g_xzz_yzz_y_xz, g_xzz_yzz_y_yy, g_xzz_yzz_y_yz, g_xzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yz_y_xx[i] = -2.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_yzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_y_xy[i] = -2.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_yzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_y_xz[i] = -2.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_yzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_y_yy[i] = -2.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_yzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_y_yz[i] = -2.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_yzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_y_zz[i] = -2.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1920-1926)

    #pragma omp simd aligned(g_x_z_0_0_zz_yz_z_xx, g_x_z_0_0_zz_yz_z_xy, g_x_z_0_0_zz_yz_z_xz, g_x_z_0_0_zz_yz_z_yy, g_x_z_0_0_zz_yz_z_yz, g_x_z_0_0_zz_yz_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz, g_xzz_yzz_z_xx, g_xzz_yzz_z_xy, g_xzz_yzz_z_xz, g_xzz_yzz_z_yy, g_xzz_yzz_z_yz, g_xzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_yz_z_xx[i] = -2.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_yzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_z_xy[i] = -2.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_yzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_z_xz[i] = -2.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_yzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_z_yy[i] = -2.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_yzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_z_yz[i] = -2.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_yzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_yz_z_zz[i] = -2.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1926-1932)

    #pragma omp simd aligned(g_x_z_0_0_zz_zz_x_xx, g_x_z_0_0_zz_zz_x_xy, g_x_z_0_0_zz_zz_x_xz, g_x_z_0_0_zz_zz_x_yy, g_x_z_0_0_zz_zz_x_yz, g_x_z_0_0_zz_zz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz, g_xzz_zzz_x_xx, g_xzz_zzz_x_xy, g_xzz_zzz_x_xz, g_xzz_zzz_x_yy, g_xzz_zzz_x_yz, g_xzz_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_zz_x_xx[i] = -4.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_zzz_x_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_x_xy[i] = -4.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_zzz_x_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_x_xz[i] = -4.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_zzz_x_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_x_yy[i] = -4.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_zzz_x_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_x_yz[i] = -4.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_zzz_x_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_x_zz[i] = -4.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1932-1938)

    #pragma omp simd aligned(g_x_z_0_0_zz_zz_y_xx, g_x_z_0_0_zz_zz_y_xy, g_x_z_0_0_zz_zz_y_xz, g_x_z_0_0_zz_zz_y_yy, g_x_z_0_0_zz_zz_y_yz, g_x_z_0_0_zz_zz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz, g_xzz_zzz_y_xx, g_xzz_zzz_y_xy, g_xzz_zzz_y_xz, g_xzz_zzz_y_yy, g_xzz_zzz_y_yz, g_xzz_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_zz_y_xx[i] = -4.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_zzz_y_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_y_xy[i] = -4.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_zzz_y_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_y_xz[i] = -4.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_zzz_y_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_y_yy[i] = -4.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_zzz_y_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_y_yz[i] = -4.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_zzz_y_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_y_zz[i] = -4.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1938-1944)

    #pragma omp simd aligned(g_x_z_0_0_zz_zz_z_xx, g_x_z_0_0_zz_zz_z_xy, g_x_z_0_0_zz_zz_z_xz, g_x_z_0_0_zz_zz_z_yy, g_x_z_0_0_zz_zz_z_yz, g_x_z_0_0_zz_zz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz, g_xzz_zzz_z_xx, g_xzz_zzz_z_xy, g_xzz_zzz_z_xz, g_xzz_zzz_z_yy, g_xzz_zzz_z_yz, g_xzz_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_x_z_0_0_zz_zz_z_xx[i] = -4.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_zzz_z_xx[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_z_xy[i] = -4.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_zzz_z_xy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_z_xz[i] = -4.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_zzz_z_xz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_z_yy[i] = -4.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_zzz_z_yy[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_z_yz[i] = -4.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_zzz_z_yz[i] * a_exp * b_exp;

        g_x_z_0_0_zz_zz_z_zz[i] = -4.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1944-1950)

    #pragma omp simd aligned(g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xxx_x_xx, g_xxy_xxx_x_xy, g_xxy_xxx_x_xz, g_xxy_xxx_x_yy, g_xxy_xxx_x_yz, g_xxy_xxx_x_zz, g_y_x_0_0_xx_xx_x_xx, g_y_x_0_0_xx_xx_x_xy, g_y_x_0_0_xx_xx_x_xz, g_y_x_0_0_xx_xx_x_yy, g_y_x_0_0_xx_xx_x_yz, g_y_x_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xx_x_xx[i] = -4.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_x_xy[i] = -4.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_x_xz[i] = -4.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_x_yy[i] = -4.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_x_yz[i] = -4.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_x_zz[i] = -4.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1950-1956)

    #pragma omp simd aligned(g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xxx_y_xx, g_xxy_xxx_y_xy, g_xxy_xxx_y_xz, g_xxy_xxx_y_yy, g_xxy_xxx_y_yz, g_xxy_xxx_y_zz, g_y_x_0_0_xx_xx_y_xx, g_y_x_0_0_xx_xx_y_xy, g_y_x_0_0_xx_xx_y_xz, g_y_x_0_0_xx_xx_y_yy, g_y_x_0_0_xx_xx_y_yz, g_y_x_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xx_y_xx[i] = -4.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_y_xy[i] = -4.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_y_xz[i] = -4.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_y_yy[i] = -4.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_y_yz[i] = -4.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_y_zz[i] = -4.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1956-1962)

    #pragma omp simd aligned(g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xxx_z_xx, g_xxy_xxx_z_xy, g_xxy_xxx_z_xz, g_xxy_xxx_z_yy, g_xxy_xxx_z_yz, g_xxy_xxx_z_zz, g_y_x_0_0_xx_xx_z_xx, g_y_x_0_0_xx_xx_z_xy, g_y_x_0_0_xx_xx_z_xz, g_y_x_0_0_xx_xx_z_yy, g_y_x_0_0_xx_xx_z_yz, g_y_x_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xx_z_xx[i] = -4.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_z_xy[i] = -4.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_z_xz[i] = -4.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_z_yy[i] = -4.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_z_yz[i] = -4.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xx_z_zz[i] = -4.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1962-1968)

    #pragma omp simd aligned(g_xxy_xxy_x_xx, g_xxy_xxy_x_xy, g_xxy_xxy_x_xz, g_xxy_xxy_x_yy, g_xxy_xxy_x_yz, g_xxy_xxy_x_zz, g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_y_x_0_0_xx_xy_x_xx, g_y_x_0_0_xx_xy_x_xy, g_y_x_0_0_xx_xy_x_xz, g_y_x_0_0_xx_xy_x_yy, g_y_x_0_0_xx_xy_x_yz, g_y_x_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xy_x_xx[i] = -2.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_x_xy[i] = -2.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_x_xz[i] = -2.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_x_yy[i] = -2.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_x_yz[i] = -2.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_x_zz[i] = -2.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1968-1974)

    #pragma omp simd aligned(g_xxy_xxy_y_xx, g_xxy_xxy_y_xy, g_xxy_xxy_y_xz, g_xxy_xxy_y_yy, g_xxy_xxy_y_yz, g_xxy_xxy_y_zz, g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_y_x_0_0_xx_xy_y_xx, g_y_x_0_0_xx_xy_y_xy, g_y_x_0_0_xx_xy_y_xz, g_y_x_0_0_xx_xy_y_yy, g_y_x_0_0_xx_xy_y_yz, g_y_x_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xy_y_xx[i] = -2.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_y_xy[i] = -2.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_y_xz[i] = -2.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_y_yy[i] = -2.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_y_yz[i] = -2.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_y_zz[i] = -2.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1974-1980)

    #pragma omp simd aligned(g_xxy_xxy_z_xx, g_xxy_xxy_z_xy, g_xxy_xxy_z_xz, g_xxy_xxy_z_yy, g_xxy_xxy_z_yz, g_xxy_xxy_z_zz, g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_y_x_0_0_xx_xy_z_xx, g_y_x_0_0_xx_xy_z_xy, g_y_x_0_0_xx_xy_z_xz, g_y_x_0_0_xx_xy_z_yy, g_y_x_0_0_xx_xy_z_yz, g_y_x_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xy_z_xx[i] = -2.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_z_xy[i] = -2.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_z_xz[i] = -2.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_z_yy[i] = -2.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_z_yz[i] = -2.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xy_z_zz[i] = -2.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1980-1986)

    #pragma omp simd aligned(g_xxy_xxz_x_xx, g_xxy_xxz_x_xy, g_xxy_xxz_x_xz, g_xxy_xxz_x_yy, g_xxy_xxz_x_yz, g_xxy_xxz_x_zz, g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_y_x_0_0_xx_xz_x_xx, g_y_x_0_0_xx_xz_x_xy, g_y_x_0_0_xx_xz_x_xz, g_y_x_0_0_xx_xz_x_yy, g_y_x_0_0_xx_xz_x_yz, g_y_x_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xz_x_xx[i] = -2.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_x_xy[i] = -2.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_x_xz[i] = -2.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_x_yy[i] = -2.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_x_yz[i] = -2.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_x_zz[i] = -2.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (1986-1992)

    #pragma omp simd aligned(g_xxy_xxz_y_xx, g_xxy_xxz_y_xy, g_xxy_xxz_y_xz, g_xxy_xxz_y_yy, g_xxy_xxz_y_yz, g_xxy_xxz_y_zz, g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_y_x_0_0_xx_xz_y_xx, g_y_x_0_0_xx_xz_y_xy, g_y_x_0_0_xx_xz_y_xz, g_y_x_0_0_xx_xz_y_yy, g_y_x_0_0_xx_xz_y_yz, g_y_x_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xz_y_xx[i] = -2.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_y_xy[i] = -2.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_y_xz[i] = -2.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_y_yy[i] = -2.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_y_yz[i] = -2.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_y_zz[i] = -2.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (1992-1998)

    #pragma omp simd aligned(g_xxy_xxz_z_xx, g_xxy_xxz_z_xy, g_xxy_xxz_z_xz, g_xxy_xxz_z_yy, g_xxy_xxz_z_yz, g_xxy_xxz_z_zz, g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_y_x_0_0_xx_xz_z_xx, g_y_x_0_0_xx_xz_z_xy, g_y_x_0_0_xx_xz_z_xz, g_y_x_0_0_xx_xz_z_yy, g_y_x_0_0_xx_xz_z_yz, g_y_x_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_xz_z_xx[i] = -2.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_z_xy[i] = -2.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_z_xz[i] = -2.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_z_yy[i] = -2.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_z_yz[i] = -2.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_xz_z_zz[i] = -2.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (1998-2004)

    #pragma omp simd aligned(g_xxy_xyy_x_xx, g_xxy_xyy_x_xy, g_xxy_xyy_x_xz, g_xxy_xyy_x_yy, g_xxy_xyy_x_yz, g_xxy_xyy_x_zz, g_y_x_0_0_xx_yy_x_xx, g_y_x_0_0_xx_yy_x_xy, g_y_x_0_0_xx_yy_x_xz, g_y_x_0_0_xx_yy_x_yy, g_y_x_0_0_xx_yy_x_yz, g_y_x_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yy_x_xx[i] = 4.0 * g_xxy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_x_xy[i] = 4.0 * g_xxy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_x_xz[i] = 4.0 * g_xxy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_x_yy[i] = 4.0 * g_xxy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_x_yz[i] = 4.0 * g_xxy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_x_zz[i] = 4.0 * g_xxy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2004-2010)

    #pragma omp simd aligned(g_xxy_xyy_y_xx, g_xxy_xyy_y_xy, g_xxy_xyy_y_xz, g_xxy_xyy_y_yy, g_xxy_xyy_y_yz, g_xxy_xyy_y_zz, g_y_x_0_0_xx_yy_y_xx, g_y_x_0_0_xx_yy_y_xy, g_y_x_0_0_xx_yy_y_xz, g_y_x_0_0_xx_yy_y_yy, g_y_x_0_0_xx_yy_y_yz, g_y_x_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yy_y_xx[i] = 4.0 * g_xxy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_y_xy[i] = 4.0 * g_xxy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_y_xz[i] = 4.0 * g_xxy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_y_yy[i] = 4.0 * g_xxy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_y_yz[i] = 4.0 * g_xxy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_y_zz[i] = 4.0 * g_xxy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2010-2016)

    #pragma omp simd aligned(g_xxy_xyy_z_xx, g_xxy_xyy_z_xy, g_xxy_xyy_z_xz, g_xxy_xyy_z_yy, g_xxy_xyy_z_yz, g_xxy_xyy_z_zz, g_y_x_0_0_xx_yy_z_xx, g_y_x_0_0_xx_yy_z_xy, g_y_x_0_0_xx_yy_z_xz, g_y_x_0_0_xx_yy_z_yy, g_y_x_0_0_xx_yy_z_yz, g_y_x_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yy_z_xx[i] = 4.0 * g_xxy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_z_xy[i] = 4.0 * g_xxy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_z_xz[i] = 4.0 * g_xxy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_z_yy[i] = 4.0 * g_xxy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_z_yz[i] = 4.0 * g_xxy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yy_z_zz[i] = 4.0 * g_xxy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2016-2022)

    #pragma omp simd aligned(g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_x_0_0_xx_yz_x_xx, g_y_x_0_0_xx_yz_x_xy, g_y_x_0_0_xx_yz_x_xz, g_y_x_0_0_xx_yz_x_yy, g_y_x_0_0_xx_yz_x_yz, g_y_x_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yz_x_xx[i] = 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_x_xy[i] = 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_x_xz[i] = 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_x_yy[i] = 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_x_yz[i] = 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_x_zz[i] = 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2022-2028)

    #pragma omp simd aligned(g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_x_0_0_xx_yz_y_xx, g_y_x_0_0_xx_yz_y_xy, g_y_x_0_0_xx_yz_y_xz, g_y_x_0_0_xx_yz_y_yy, g_y_x_0_0_xx_yz_y_yz, g_y_x_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yz_y_xx[i] = 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_y_xy[i] = 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_y_xz[i] = 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_y_yy[i] = 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_y_yz[i] = 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_y_zz[i] = 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2028-2034)

    #pragma omp simd aligned(g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_x_0_0_xx_yz_z_xx, g_y_x_0_0_xx_yz_z_xy, g_y_x_0_0_xx_yz_z_xz, g_y_x_0_0_xx_yz_z_yy, g_y_x_0_0_xx_yz_z_yz, g_y_x_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_yz_z_xx[i] = 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_z_xy[i] = 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_z_xz[i] = 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_z_yy[i] = 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_z_yz[i] = 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_yz_z_zz[i] = 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2034-2040)

    #pragma omp simd aligned(g_xxy_xzz_x_xx, g_xxy_xzz_x_xy, g_xxy_xzz_x_xz, g_xxy_xzz_x_yy, g_xxy_xzz_x_yz, g_xxy_xzz_x_zz, g_y_x_0_0_xx_zz_x_xx, g_y_x_0_0_xx_zz_x_xy, g_y_x_0_0_xx_zz_x_xz, g_y_x_0_0_xx_zz_x_yy, g_y_x_0_0_xx_zz_x_yz, g_y_x_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_zz_x_xx[i] = 4.0 * g_xxy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_x_xy[i] = 4.0 * g_xxy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_x_xz[i] = 4.0 * g_xxy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_x_yy[i] = 4.0 * g_xxy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_x_yz[i] = 4.0 * g_xxy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_x_zz[i] = 4.0 * g_xxy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2040-2046)

    #pragma omp simd aligned(g_xxy_xzz_y_xx, g_xxy_xzz_y_xy, g_xxy_xzz_y_xz, g_xxy_xzz_y_yy, g_xxy_xzz_y_yz, g_xxy_xzz_y_zz, g_y_x_0_0_xx_zz_y_xx, g_y_x_0_0_xx_zz_y_xy, g_y_x_0_0_xx_zz_y_xz, g_y_x_0_0_xx_zz_y_yy, g_y_x_0_0_xx_zz_y_yz, g_y_x_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_zz_y_xx[i] = 4.0 * g_xxy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_y_xy[i] = 4.0 * g_xxy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_y_xz[i] = 4.0 * g_xxy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_y_yy[i] = 4.0 * g_xxy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_y_yz[i] = 4.0 * g_xxy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_y_zz[i] = 4.0 * g_xxy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2046-2052)

    #pragma omp simd aligned(g_xxy_xzz_z_xx, g_xxy_xzz_z_xy, g_xxy_xzz_z_xz, g_xxy_xzz_z_yy, g_xxy_xzz_z_yz, g_xxy_xzz_z_zz, g_y_x_0_0_xx_zz_z_xx, g_y_x_0_0_xx_zz_z_xy, g_y_x_0_0_xx_zz_z_xz, g_y_x_0_0_xx_zz_z_yy, g_y_x_0_0_xx_zz_z_yz, g_y_x_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xx_zz_z_xx[i] = 4.0 * g_xxy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_z_xy[i] = 4.0 * g_xxy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_z_xz[i] = 4.0 * g_xxy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_z_yy[i] = 4.0 * g_xxy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_z_yz[i] = 4.0 * g_xxy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xx_zz_z_zz[i] = 4.0 * g_xxy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2052-2058)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xxx_x_xx, g_x_xxx_x_xy, g_x_xxx_x_xz, g_x_xxx_x_yy, g_x_xxx_x_yz, g_x_xxx_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xxx_x_xx, g_xyy_xxx_x_xy, g_xyy_xxx_x_xz, g_xyy_xxx_x_yy, g_xyy_xxx_x_yz, g_xyy_xxx_x_zz, g_y_x_0_0_xy_xx_x_xx, g_y_x_0_0_xy_xx_x_xy, g_y_x_0_0_xy_xx_x_xz, g_y_x_0_0_xy_xx_x_yy, g_y_x_0_0_xy_xx_x_yz, g_y_x_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xx_x_xx[i] = 2.0 * g_x_x_x_xx[i] - 2.0 * g_x_xxx_x_xx[i] * b_exp - 4.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_x_xy[i] = 2.0 * g_x_x_x_xy[i] - 2.0 * g_x_xxx_x_xy[i] * b_exp - 4.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_x_xz[i] = 2.0 * g_x_x_x_xz[i] - 2.0 * g_x_xxx_x_xz[i] * b_exp - 4.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_x_yy[i] = 2.0 * g_x_x_x_yy[i] - 2.0 * g_x_xxx_x_yy[i] * b_exp - 4.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_x_yz[i] = 2.0 * g_x_x_x_yz[i] - 2.0 * g_x_xxx_x_yz[i] * b_exp - 4.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_x_zz[i] = 2.0 * g_x_x_x_zz[i] - 2.0 * g_x_xxx_x_zz[i] * b_exp - 4.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2058-2064)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xxx_y_xx, g_x_xxx_y_xy, g_x_xxx_y_xz, g_x_xxx_y_yy, g_x_xxx_y_yz, g_x_xxx_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xxx_y_xx, g_xyy_xxx_y_xy, g_xyy_xxx_y_xz, g_xyy_xxx_y_yy, g_xyy_xxx_y_yz, g_xyy_xxx_y_zz, g_y_x_0_0_xy_xx_y_xx, g_y_x_0_0_xy_xx_y_xy, g_y_x_0_0_xy_xx_y_xz, g_y_x_0_0_xy_xx_y_yy, g_y_x_0_0_xy_xx_y_yz, g_y_x_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xx_y_xx[i] = 2.0 * g_x_x_y_xx[i] - 2.0 * g_x_xxx_y_xx[i] * b_exp - 4.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_y_xy[i] = 2.0 * g_x_x_y_xy[i] - 2.0 * g_x_xxx_y_xy[i] * b_exp - 4.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_y_xz[i] = 2.0 * g_x_x_y_xz[i] - 2.0 * g_x_xxx_y_xz[i] * b_exp - 4.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_y_yy[i] = 2.0 * g_x_x_y_yy[i] - 2.0 * g_x_xxx_y_yy[i] * b_exp - 4.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_y_yz[i] = 2.0 * g_x_x_y_yz[i] - 2.0 * g_x_xxx_y_yz[i] * b_exp - 4.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_y_zz[i] = 2.0 * g_x_x_y_zz[i] - 2.0 * g_x_xxx_y_zz[i] * b_exp - 4.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2064-2070)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xxx_z_xx, g_x_xxx_z_xy, g_x_xxx_z_xz, g_x_xxx_z_yy, g_x_xxx_z_yz, g_x_xxx_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xxx_z_xx, g_xyy_xxx_z_xy, g_xyy_xxx_z_xz, g_xyy_xxx_z_yy, g_xyy_xxx_z_yz, g_xyy_xxx_z_zz, g_y_x_0_0_xy_xx_z_xx, g_y_x_0_0_xy_xx_z_xy, g_y_x_0_0_xy_xx_z_xz, g_y_x_0_0_xy_xx_z_yy, g_y_x_0_0_xy_xx_z_yz, g_y_x_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xx_z_xx[i] = 2.0 * g_x_x_z_xx[i] - 2.0 * g_x_xxx_z_xx[i] * b_exp - 4.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_z_xy[i] = 2.0 * g_x_x_z_xy[i] - 2.0 * g_x_xxx_z_xy[i] * b_exp - 4.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_z_xz[i] = 2.0 * g_x_x_z_xz[i] - 2.0 * g_x_xxx_z_xz[i] * b_exp - 4.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_z_yy[i] = 2.0 * g_x_x_z_yy[i] - 2.0 * g_x_xxx_z_yy[i] * b_exp - 4.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_z_yz[i] = 2.0 * g_x_x_z_yz[i] - 2.0 * g_x_xxx_z_yz[i] * b_exp - 4.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xx_z_zz[i] = 2.0 * g_x_x_z_zz[i] - 2.0 * g_x_xxx_z_zz[i] * b_exp - 4.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2070-2076)

    #pragma omp simd aligned(g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_xyy_xxy_x_xx, g_xyy_xxy_x_xy, g_xyy_xxy_x_xz, g_xyy_xxy_x_yy, g_xyy_xxy_x_yz, g_xyy_xxy_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz, g_y_x_0_0_xy_xy_x_xx, g_y_x_0_0_xy_xy_x_xy, g_y_x_0_0_xy_xy_x_xz, g_y_x_0_0_xy_xy_x_yy, g_y_x_0_0_xy_xy_x_yz, g_y_x_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xy_x_xx[i] = g_x_y_x_xx[i] - 2.0 * g_x_xxy_x_xx[i] * b_exp - 2.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_x_xy[i] = g_x_y_x_xy[i] - 2.0 * g_x_xxy_x_xy[i] * b_exp - 2.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_x_xz[i] = g_x_y_x_xz[i] - 2.0 * g_x_xxy_x_xz[i] * b_exp - 2.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_x_yy[i] = g_x_y_x_yy[i] - 2.0 * g_x_xxy_x_yy[i] * b_exp - 2.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_x_yz[i] = g_x_y_x_yz[i] - 2.0 * g_x_xxy_x_yz[i] * b_exp - 2.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_x_zz[i] = g_x_y_x_zz[i] - 2.0 * g_x_xxy_x_zz[i] * b_exp - 2.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2076-2082)

    #pragma omp simd aligned(g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_xyy_xxy_y_xx, g_xyy_xxy_y_xy, g_xyy_xxy_y_xz, g_xyy_xxy_y_yy, g_xyy_xxy_y_yz, g_xyy_xxy_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz, g_y_x_0_0_xy_xy_y_xx, g_y_x_0_0_xy_xy_y_xy, g_y_x_0_0_xy_xy_y_xz, g_y_x_0_0_xy_xy_y_yy, g_y_x_0_0_xy_xy_y_yz, g_y_x_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xy_y_xx[i] = g_x_y_y_xx[i] - 2.0 * g_x_xxy_y_xx[i] * b_exp - 2.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_y_xy[i] = g_x_y_y_xy[i] - 2.0 * g_x_xxy_y_xy[i] * b_exp - 2.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_y_xz[i] = g_x_y_y_xz[i] - 2.0 * g_x_xxy_y_xz[i] * b_exp - 2.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_y_yy[i] = g_x_y_y_yy[i] - 2.0 * g_x_xxy_y_yy[i] * b_exp - 2.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_y_yz[i] = g_x_y_y_yz[i] - 2.0 * g_x_xxy_y_yz[i] * b_exp - 2.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_y_zz[i] = g_x_y_y_zz[i] - 2.0 * g_x_xxy_y_zz[i] * b_exp - 2.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2082-2088)

    #pragma omp simd aligned(g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_xyy_xxy_z_xx, g_xyy_xxy_z_xy, g_xyy_xxy_z_xz, g_xyy_xxy_z_yy, g_xyy_xxy_z_yz, g_xyy_xxy_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz, g_y_x_0_0_xy_xy_z_xx, g_y_x_0_0_xy_xy_z_xy, g_y_x_0_0_xy_xy_z_xz, g_y_x_0_0_xy_xy_z_yy, g_y_x_0_0_xy_xy_z_yz, g_y_x_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xy_z_xx[i] = g_x_y_z_xx[i] - 2.0 * g_x_xxy_z_xx[i] * b_exp - 2.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_z_xy[i] = g_x_y_z_xy[i] - 2.0 * g_x_xxy_z_xy[i] * b_exp - 2.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_z_xz[i] = g_x_y_z_xz[i] - 2.0 * g_x_xxy_z_xz[i] * b_exp - 2.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_z_yy[i] = g_x_y_z_yy[i] - 2.0 * g_x_xxy_z_yy[i] * b_exp - 2.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_z_yz[i] = g_x_y_z_yz[i] - 2.0 * g_x_xxy_z_yz[i] * b_exp - 2.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xy_z_zz[i] = g_x_y_z_zz[i] - 2.0 * g_x_xxy_z_zz[i] * b_exp - 2.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2088-2094)

    #pragma omp simd aligned(g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xyy_xxz_x_xx, g_xyy_xxz_x_xy, g_xyy_xxz_x_xz, g_xyy_xxz_x_yy, g_xyy_xxz_x_yz, g_xyy_xxz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz, g_y_x_0_0_xy_xz_x_xx, g_y_x_0_0_xy_xz_x_xy, g_y_x_0_0_xy_xz_x_xz, g_y_x_0_0_xy_xz_x_yy, g_y_x_0_0_xy_xz_x_yz, g_y_x_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xz_x_xx[i] = g_x_z_x_xx[i] - 2.0 * g_x_xxz_x_xx[i] * b_exp - 2.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_x_xy[i] = g_x_z_x_xy[i] - 2.0 * g_x_xxz_x_xy[i] * b_exp - 2.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_x_xz[i] = g_x_z_x_xz[i] - 2.0 * g_x_xxz_x_xz[i] * b_exp - 2.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_x_yy[i] = g_x_z_x_yy[i] - 2.0 * g_x_xxz_x_yy[i] * b_exp - 2.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_x_yz[i] = g_x_z_x_yz[i] - 2.0 * g_x_xxz_x_yz[i] * b_exp - 2.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_x_zz[i] = g_x_z_x_zz[i] - 2.0 * g_x_xxz_x_zz[i] * b_exp - 2.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2094-2100)

    #pragma omp simd aligned(g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xyy_xxz_y_xx, g_xyy_xxz_y_xy, g_xyy_xxz_y_xz, g_xyy_xxz_y_yy, g_xyy_xxz_y_yz, g_xyy_xxz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz, g_y_x_0_0_xy_xz_y_xx, g_y_x_0_0_xy_xz_y_xy, g_y_x_0_0_xy_xz_y_xz, g_y_x_0_0_xy_xz_y_yy, g_y_x_0_0_xy_xz_y_yz, g_y_x_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xz_y_xx[i] = g_x_z_y_xx[i] - 2.0 * g_x_xxz_y_xx[i] * b_exp - 2.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_y_xy[i] = g_x_z_y_xy[i] - 2.0 * g_x_xxz_y_xy[i] * b_exp - 2.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_y_xz[i] = g_x_z_y_xz[i] - 2.0 * g_x_xxz_y_xz[i] * b_exp - 2.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_y_yy[i] = g_x_z_y_yy[i] - 2.0 * g_x_xxz_y_yy[i] * b_exp - 2.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_y_yz[i] = g_x_z_y_yz[i] - 2.0 * g_x_xxz_y_yz[i] * b_exp - 2.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_y_zz[i] = g_x_z_y_zz[i] - 2.0 * g_x_xxz_y_zz[i] * b_exp - 2.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2100-2106)

    #pragma omp simd aligned(g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xyy_xxz_z_xx, g_xyy_xxz_z_xy, g_xyy_xxz_z_xz, g_xyy_xxz_z_yy, g_xyy_xxz_z_yz, g_xyy_xxz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz, g_y_x_0_0_xy_xz_z_xx, g_y_x_0_0_xy_xz_z_xy, g_y_x_0_0_xy_xz_z_xz, g_y_x_0_0_xy_xz_z_yy, g_y_x_0_0_xy_xz_z_yz, g_y_x_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_xz_z_xx[i] = g_x_z_z_xx[i] - 2.0 * g_x_xxz_z_xx[i] * b_exp - 2.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_z_xy[i] = g_x_z_z_xy[i] - 2.0 * g_x_xxz_z_xy[i] * b_exp - 2.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_z_xz[i] = g_x_z_z_xz[i] - 2.0 * g_x_xxz_z_xz[i] * b_exp - 2.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_z_yy[i] = g_x_z_z_yy[i] - 2.0 * g_x_xxz_z_yy[i] * b_exp - 2.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_z_yz[i] = g_x_z_z_yz[i] - 2.0 * g_x_xxz_z_yz[i] * b_exp - 2.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_xz_z_zz[i] = g_x_z_z_zz[i] - 2.0 * g_x_xxz_z_zz[i] * b_exp - 2.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2106-2112)

    #pragma omp simd aligned(g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_xyy_xyy_x_xx, g_xyy_xyy_x_xy, g_xyy_xyy_x_xz, g_xyy_xyy_x_yy, g_xyy_xyy_x_yz, g_xyy_xyy_x_zz, g_y_x_0_0_xy_yy_x_xx, g_y_x_0_0_xy_yy_x_xy, g_y_x_0_0_xy_yy_x_xz, g_y_x_0_0_xy_yy_x_yy, g_y_x_0_0_xy_yy_x_yz, g_y_x_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yy_x_xx[i] = -2.0 * g_x_xyy_x_xx[i] * b_exp + 4.0 * g_xyy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_x_xy[i] = -2.0 * g_x_xyy_x_xy[i] * b_exp + 4.0 * g_xyy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_x_xz[i] = -2.0 * g_x_xyy_x_xz[i] * b_exp + 4.0 * g_xyy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_x_yy[i] = -2.0 * g_x_xyy_x_yy[i] * b_exp + 4.0 * g_xyy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_x_yz[i] = -2.0 * g_x_xyy_x_yz[i] * b_exp + 4.0 * g_xyy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_x_zz[i] = -2.0 * g_x_xyy_x_zz[i] * b_exp + 4.0 * g_xyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2112-2118)

    #pragma omp simd aligned(g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_xyy_xyy_y_xx, g_xyy_xyy_y_xy, g_xyy_xyy_y_xz, g_xyy_xyy_y_yy, g_xyy_xyy_y_yz, g_xyy_xyy_y_zz, g_y_x_0_0_xy_yy_y_xx, g_y_x_0_0_xy_yy_y_xy, g_y_x_0_0_xy_yy_y_xz, g_y_x_0_0_xy_yy_y_yy, g_y_x_0_0_xy_yy_y_yz, g_y_x_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yy_y_xx[i] = -2.0 * g_x_xyy_y_xx[i] * b_exp + 4.0 * g_xyy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_y_xy[i] = -2.0 * g_x_xyy_y_xy[i] * b_exp + 4.0 * g_xyy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_y_xz[i] = -2.0 * g_x_xyy_y_xz[i] * b_exp + 4.0 * g_xyy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_y_yy[i] = -2.0 * g_x_xyy_y_yy[i] * b_exp + 4.0 * g_xyy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_y_yz[i] = -2.0 * g_x_xyy_y_yz[i] * b_exp + 4.0 * g_xyy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_y_zz[i] = -2.0 * g_x_xyy_y_zz[i] * b_exp + 4.0 * g_xyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2118-2124)

    #pragma omp simd aligned(g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_xyy_xyy_z_xx, g_xyy_xyy_z_xy, g_xyy_xyy_z_xz, g_xyy_xyy_z_yy, g_xyy_xyy_z_yz, g_xyy_xyy_z_zz, g_y_x_0_0_xy_yy_z_xx, g_y_x_0_0_xy_yy_z_xy, g_y_x_0_0_xy_yy_z_xz, g_y_x_0_0_xy_yy_z_yy, g_y_x_0_0_xy_yy_z_yz, g_y_x_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yy_z_xx[i] = -2.0 * g_x_xyy_z_xx[i] * b_exp + 4.0 * g_xyy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_z_xy[i] = -2.0 * g_x_xyy_z_xy[i] * b_exp + 4.0 * g_xyy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_z_xz[i] = -2.0 * g_x_xyy_z_xz[i] * b_exp + 4.0 * g_xyy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_z_yy[i] = -2.0 * g_x_xyy_z_yy[i] * b_exp + 4.0 * g_xyy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_z_yz[i] = -2.0 * g_x_xyy_z_yz[i] * b_exp + 4.0 * g_xyy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yy_z_zz[i] = -2.0 * g_x_xyy_z_zz[i] * b_exp + 4.0 * g_xyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2124-2130)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz, g_y_x_0_0_xy_yz_x_xx, g_y_x_0_0_xy_yz_x_xy, g_y_x_0_0_xy_yz_x_xz, g_y_x_0_0_xy_yz_x_yy, g_y_x_0_0_xy_yz_x_yz, g_y_x_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yz_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2130-2136)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz, g_y_x_0_0_xy_yz_y_xx, g_y_x_0_0_xy_yz_y_xy, g_y_x_0_0_xy_yz_y_xz, g_y_x_0_0_xy_yz_y_yy, g_y_x_0_0_xy_yz_y_yz, g_y_x_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yz_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2136-2142)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz, g_y_x_0_0_xy_yz_z_xx, g_y_x_0_0_xy_yz_z_xy, g_y_x_0_0_xy_yz_z_xz, g_y_x_0_0_xy_yz_z_yy, g_y_x_0_0_xy_yz_z_yz, g_y_x_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_yz_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_yz_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2142-2148)

    #pragma omp simd aligned(g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_xyy_xzz_x_xx, g_xyy_xzz_x_xy, g_xyy_xzz_x_xz, g_xyy_xzz_x_yy, g_xyy_xzz_x_yz, g_xyy_xzz_x_zz, g_y_x_0_0_xy_zz_x_xx, g_y_x_0_0_xy_zz_x_xy, g_y_x_0_0_xy_zz_x_xz, g_y_x_0_0_xy_zz_x_yy, g_y_x_0_0_xy_zz_x_yz, g_y_x_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_zz_x_xx[i] = -2.0 * g_x_xzz_x_xx[i] * b_exp + 4.0 * g_xyy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_x_xy[i] = -2.0 * g_x_xzz_x_xy[i] * b_exp + 4.0 * g_xyy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_x_xz[i] = -2.0 * g_x_xzz_x_xz[i] * b_exp + 4.0 * g_xyy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_x_yy[i] = -2.0 * g_x_xzz_x_yy[i] * b_exp + 4.0 * g_xyy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_x_yz[i] = -2.0 * g_x_xzz_x_yz[i] * b_exp + 4.0 * g_xyy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_x_zz[i] = -2.0 * g_x_xzz_x_zz[i] * b_exp + 4.0 * g_xyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2148-2154)

    #pragma omp simd aligned(g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_xyy_xzz_y_xx, g_xyy_xzz_y_xy, g_xyy_xzz_y_xz, g_xyy_xzz_y_yy, g_xyy_xzz_y_yz, g_xyy_xzz_y_zz, g_y_x_0_0_xy_zz_y_xx, g_y_x_0_0_xy_zz_y_xy, g_y_x_0_0_xy_zz_y_xz, g_y_x_0_0_xy_zz_y_yy, g_y_x_0_0_xy_zz_y_yz, g_y_x_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_zz_y_xx[i] = -2.0 * g_x_xzz_y_xx[i] * b_exp + 4.0 * g_xyy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_y_xy[i] = -2.0 * g_x_xzz_y_xy[i] * b_exp + 4.0 * g_xyy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_y_xz[i] = -2.0 * g_x_xzz_y_xz[i] * b_exp + 4.0 * g_xyy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_y_yy[i] = -2.0 * g_x_xzz_y_yy[i] * b_exp + 4.0 * g_xyy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_y_yz[i] = -2.0 * g_x_xzz_y_yz[i] * b_exp + 4.0 * g_xyy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_y_zz[i] = -2.0 * g_x_xzz_y_zz[i] * b_exp + 4.0 * g_xyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2154-2160)

    #pragma omp simd aligned(g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_xyy_xzz_z_xx, g_xyy_xzz_z_xy, g_xyy_xzz_z_xz, g_xyy_xzz_z_yy, g_xyy_xzz_z_yz, g_xyy_xzz_z_zz, g_y_x_0_0_xy_zz_z_xx, g_y_x_0_0_xy_zz_z_xy, g_y_x_0_0_xy_zz_z_xz, g_y_x_0_0_xy_zz_z_yy, g_y_x_0_0_xy_zz_z_yz, g_y_x_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xy_zz_z_xx[i] = -2.0 * g_x_xzz_z_xx[i] * b_exp + 4.0 * g_xyy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_z_xy[i] = -2.0 * g_x_xzz_z_xy[i] * b_exp + 4.0 * g_xyy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_z_xz[i] = -2.0 * g_x_xzz_z_xz[i] * b_exp + 4.0 * g_xyy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_z_yy[i] = -2.0 * g_x_xzz_z_yy[i] * b_exp + 4.0 * g_xyy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_z_yz[i] = -2.0 * g_x_xzz_z_yz[i] * b_exp + 4.0 * g_xyy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xy_zz_z_zz[i] = -2.0 * g_x_xzz_z_zz[i] * b_exp + 4.0 * g_xyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2160-2166)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xxx_x_xx, g_xyz_xxx_x_xy, g_xyz_xxx_x_xz, g_xyz_xxx_x_yy, g_xyz_xxx_x_yz, g_xyz_xxx_x_zz, g_y_x_0_0_xz_xx_x_xx, g_y_x_0_0_xz_xx_x_xy, g_y_x_0_0_xz_xx_x_xz, g_y_x_0_0_xz_xx_x_yy, g_y_x_0_0_xz_xx_x_yz, g_y_x_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xx_x_xx[i] = -4.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_x_xy[i] = -4.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_x_xz[i] = -4.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_x_yy[i] = -4.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_x_yz[i] = -4.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_x_zz[i] = -4.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2166-2172)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xxx_y_xx, g_xyz_xxx_y_xy, g_xyz_xxx_y_xz, g_xyz_xxx_y_yy, g_xyz_xxx_y_yz, g_xyz_xxx_y_zz, g_y_x_0_0_xz_xx_y_xx, g_y_x_0_0_xz_xx_y_xy, g_y_x_0_0_xz_xx_y_xz, g_y_x_0_0_xz_xx_y_yy, g_y_x_0_0_xz_xx_y_yz, g_y_x_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xx_y_xx[i] = -4.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_y_xy[i] = -4.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_y_xz[i] = -4.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_y_yy[i] = -4.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_y_yz[i] = -4.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_y_zz[i] = -4.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2172-2178)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xxx_z_xx, g_xyz_xxx_z_xy, g_xyz_xxx_z_xz, g_xyz_xxx_z_yy, g_xyz_xxx_z_yz, g_xyz_xxx_z_zz, g_y_x_0_0_xz_xx_z_xx, g_y_x_0_0_xz_xx_z_xy, g_y_x_0_0_xz_xx_z_xz, g_y_x_0_0_xz_xx_z_yy, g_y_x_0_0_xz_xx_z_yz, g_y_x_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xx_z_xx[i] = -4.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_z_xy[i] = -4.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_z_xz[i] = -4.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_z_yy[i] = -4.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_z_yz[i] = -4.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xx_z_zz[i] = -4.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2178-2184)

    #pragma omp simd aligned(g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz, g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_y_x_0_0_xz_xy_x_xx, g_y_x_0_0_xz_xy_x_xy, g_y_x_0_0_xz_xy_x_xz, g_y_x_0_0_xz_xy_x_yy, g_y_x_0_0_xz_xy_x_yz, g_y_x_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xy_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2184-2190)

    #pragma omp simd aligned(g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz, g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_y_x_0_0_xz_xy_y_xx, g_y_x_0_0_xz_xy_y_xy, g_y_x_0_0_xz_xy_y_xz, g_y_x_0_0_xz_xy_y_yy, g_y_x_0_0_xz_xy_y_yz, g_y_x_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xy_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2190-2196)

    #pragma omp simd aligned(g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz, g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_y_x_0_0_xz_xy_z_xx, g_y_x_0_0_xz_xy_z_xy, g_y_x_0_0_xz_xy_z_xz, g_y_x_0_0_xz_xy_z_yy, g_y_x_0_0_xz_xy_z_yz, g_y_x_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xy_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xy_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2196-2202)

    #pragma omp simd aligned(g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_y_x_0_0_xz_xz_x_xx, g_y_x_0_0_xz_xz_x_xy, g_y_x_0_0_xz_xz_x_xz, g_y_x_0_0_xz_xz_x_yy, g_y_x_0_0_xz_xz_x_yz, g_y_x_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2202-2208)

    #pragma omp simd aligned(g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_y_x_0_0_xz_xz_y_xx, g_y_x_0_0_xz_xz_y_xy, g_y_x_0_0_xz_xz_y_xz, g_y_x_0_0_xz_xz_y_yy, g_y_x_0_0_xz_xz_y_yz, g_y_x_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2208-2214)

    #pragma omp simd aligned(g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_y_x_0_0_xz_xz_z_xx, g_y_x_0_0_xz_xz_z_xy, g_y_x_0_0_xz_xz_z_xz, g_y_x_0_0_xz_xz_z_yy, g_y_x_0_0_xz_xz_z_yz, g_y_x_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_xz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_xz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2214-2220)

    #pragma omp simd aligned(g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz, g_y_x_0_0_xz_yy_x_xx, g_y_x_0_0_xz_yy_x_xy, g_y_x_0_0_xz_yy_x_xz, g_y_x_0_0_xz_yy_x_yy, g_y_x_0_0_xz_yy_x_yz, g_y_x_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yy_x_xx[i] = 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_x_xy[i] = 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_x_xz[i] = 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_x_yy[i] = 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_x_yz[i] = 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_x_zz[i] = 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2220-2226)

    #pragma omp simd aligned(g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz, g_y_x_0_0_xz_yy_y_xx, g_y_x_0_0_xz_yy_y_xy, g_y_x_0_0_xz_yy_y_xz, g_y_x_0_0_xz_yy_y_yy, g_y_x_0_0_xz_yy_y_yz, g_y_x_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yy_y_xx[i] = 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_y_xy[i] = 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_y_xz[i] = 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_y_yy[i] = 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_y_yz[i] = 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_y_zz[i] = 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2226-2232)

    #pragma omp simd aligned(g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz, g_y_x_0_0_xz_yy_z_xx, g_y_x_0_0_xz_yy_z_xy, g_y_x_0_0_xz_yy_z_xz, g_y_x_0_0_xz_yy_z_yy, g_y_x_0_0_xz_yy_z_yz, g_y_x_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yy_z_xx[i] = 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_z_xy[i] = 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_z_xz[i] = 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_z_yy[i] = 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_z_yz[i] = 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yy_z_zz[i] = 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2232-2238)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_y_x_0_0_xz_yz_x_xx, g_y_x_0_0_xz_yz_x_xy, g_y_x_0_0_xz_yz_x_xz, g_y_x_0_0_xz_yz_x_yy, g_y_x_0_0_xz_yz_x_yz, g_y_x_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2238-2244)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_y_x_0_0_xz_yz_y_xx, g_y_x_0_0_xz_yz_y_xy, g_y_x_0_0_xz_yz_y_xz, g_y_x_0_0_xz_yz_y_yy, g_y_x_0_0_xz_yz_y_yz, g_y_x_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2244-2250)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_y_x_0_0_xz_yz_z_xx, g_y_x_0_0_xz_yz_z_xy, g_y_x_0_0_xz_yz_z_xz, g_y_x_0_0_xz_yz_z_yy, g_y_x_0_0_xz_yz_z_yz, g_y_x_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_yz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_yz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2250-2256)

    #pragma omp simd aligned(g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz, g_y_x_0_0_xz_zz_x_xx, g_y_x_0_0_xz_zz_x_xy, g_y_x_0_0_xz_zz_x_xz, g_y_x_0_0_xz_zz_x_yy, g_y_x_0_0_xz_zz_x_yz, g_y_x_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_zz_x_xx[i] = 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_x_xy[i] = 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_x_xz[i] = 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_x_yy[i] = 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_x_yz[i] = 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_x_zz[i] = 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2256-2262)

    #pragma omp simd aligned(g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz, g_y_x_0_0_xz_zz_y_xx, g_y_x_0_0_xz_zz_y_xy, g_y_x_0_0_xz_zz_y_xz, g_y_x_0_0_xz_zz_y_yy, g_y_x_0_0_xz_zz_y_yz, g_y_x_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_zz_y_xx[i] = 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_y_xy[i] = 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_y_xz[i] = 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_y_yy[i] = 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_y_yz[i] = 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_y_zz[i] = 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2262-2268)

    #pragma omp simd aligned(g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz, g_y_x_0_0_xz_zz_z_xx, g_y_x_0_0_xz_zz_z_xy, g_y_x_0_0_xz_zz_z_xz, g_y_x_0_0_xz_zz_z_yy, g_y_x_0_0_xz_zz_z_yz, g_y_x_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_xz_zz_z_xx[i] = 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_z_xy[i] = 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_z_xz[i] = 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_z_yy[i] = 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_z_yz[i] = 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_xz_zz_z_zz[i] = 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2268-2274)

    #pragma omp simd aligned(g_y_x_0_0_yy_xx_x_xx, g_y_x_0_0_yy_xx_x_xy, g_y_x_0_0_yy_xx_x_xz, g_y_x_0_0_yy_xx_x_yy, g_y_x_0_0_yy_xx_x_yz, g_y_x_0_0_yy_xx_x_zz, g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xxx_x_xx, g_y_xxx_x_xy, g_y_xxx_x_xz, g_y_xxx_x_yy, g_y_xxx_x_yz, g_y_xxx_x_zz, g_yyy_x_x_xx, g_yyy_x_x_xy, g_yyy_x_x_xz, g_yyy_x_x_yy, g_yyy_x_x_yz, g_yyy_x_x_zz, g_yyy_xxx_x_xx, g_yyy_xxx_x_xy, g_yyy_xxx_x_xz, g_yyy_xxx_x_yy, g_yyy_xxx_x_yz, g_yyy_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xx_x_xx[i] = 4.0 * g_y_x_x_xx[i] - 4.0 * g_y_xxx_x_xx[i] * b_exp - 4.0 * g_yyy_x_x_xx[i] * a_exp + 4.0 * g_yyy_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_x_xy[i] = 4.0 * g_y_x_x_xy[i] - 4.0 * g_y_xxx_x_xy[i] * b_exp - 4.0 * g_yyy_x_x_xy[i] * a_exp + 4.0 * g_yyy_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_x_xz[i] = 4.0 * g_y_x_x_xz[i] - 4.0 * g_y_xxx_x_xz[i] * b_exp - 4.0 * g_yyy_x_x_xz[i] * a_exp + 4.0 * g_yyy_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_x_yy[i] = 4.0 * g_y_x_x_yy[i] - 4.0 * g_y_xxx_x_yy[i] * b_exp - 4.0 * g_yyy_x_x_yy[i] * a_exp + 4.0 * g_yyy_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_x_yz[i] = 4.0 * g_y_x_x_yz[i] - 4.0 * g_y_xxx_x_yz[i] * b_exp - 4.0 * g_yyy_x_x_yz[i] * a_exp + 4.0 * g_yyy_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_x_zz[i] = 4.0 * g_y_x_x_zz[i] - 4.0 * g_y_xxx_x_zz[i] * b_exp - 4.0 * g_yyy_x_x_zz[i] * a_exp + 4.0 * g_yyy_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2274-2280)

    #pragma omp simd aligned(g_y_x_0_0_yy_xx_y_xx, g_y_x_0_0_yy_xx_y_xy, g_y_x_0_0_yy_xx_y_xz, g_y_x_0_0_yy_xx_y_yy, g_y_x_0_0_yy_xx_y_yz, g_y_x_0_0_yy_xx_y_zz, g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xxx_y_xx, g_y_xxx_y_xy, g_y_xxx_y_xz, g_y_xxx_y_yy, g_y_xxx_y_yz, g_y_xxx_y_zz, g_yyy_x_y_xx, g_yyy_x_y_xy, g_yyy_x_y_xz, g_yyy_x_y_yy, g_yyy_x_y_yz, g_yyy_x_y_zz, g_yyy_xxx_y_xx, g_yyy_xxx_y_xy, g_yyy_xxx_y_xz, g_yyy_xxx_y_yy, g_yyy_xxx_y_yz, g_yyy_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xx_y_xx[i] = 4.0 * g_y_x_y_xx[i] - 4.0 * g_y_xxx_y_xx[i] * b_exp - 4.0 * g_yyy_x_y_xx[i] * a_exp + 4.0 * g_yyy_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_y_xy[i] = 4.0 * g_y_x_y_xy[i] - 4.0 * g_y_xxx_y_xy[i] * b_exp - 4.0 * g_yyy_x_y_xy[i] * a_exp + 4.0 * g_yyy_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_y_xz[i] = 4.0 * g_y_x_y_xz[i] - 4.0 * g_y_xxx_y_xz[i] * b_exp - 4.0 * g_yyy_x_y_xz[i] * a_exp + 4.0 * g_yyy_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_y_yy[i] = 4.0 * g_y_x_y_yy[i] - 4.0 * g_y_xxx_y_yy[i] * b_exp - 4.0 * g_yyy_x_y_yy[i] * a_exp + 4.0 * g_yyy_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_y_yz[i] = 4.0 * g_y_x_y_yz[i] - 4.0 * g_y_xxx_y_yz[i] * b_exp - 4.0 * g_yyy_x_y_yz[i] * a_exp + 4.0 * g_yyy_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_y_zz[i] = 4.0 * g_y_x_y_zz[i] - 4.0 * g_y_xxx_y_zz[i] * b_exp - 4.0 * g_yyy_x_y_zz[i] * a_exp + 4.0 * g_yyy_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2280-2286)

    #pragma omp simd aligned(g_y_x_0_0_yy_xx_z_xx, g_y_x_0_0_yy_xx_z_xy, g_y_x_0_0_yy_xx_z_xz, g_y_x_0_0_yy_xx_z_yy, g_y_x_0_0_yy_xx_z_yz, g_y_x_0_0_yy_xx_z_zz, g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xxx_z_xx, g_y_xxx_z_xy, g_y_xxx_z_xz, g_y_xxx_z_yy, g_y_xxx_z_yz, g_y_xxx_z_zz, g_yyy_x_z_xx, g_yyy_x_z_xy, g_yyy_x_z_xz, g_yyy_x_z_yy, g_yyy_x_z_yz, g_yyy_x_z_zz, g_yyy_xxx_z_xx, g_yyy_xxx_z_xy, g_yyy_xxx_z_xz, g_yyy_xxx_z_yy, g_yyy_xxx_z_yz, g_yyy_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xx_z_xx[i] = 4.0 * g_y_x_z_xx[i] - 4.0 * g_y_xxx_z_xx[i] * b_exp - 4.0 * g_yyy_x_z_xx[i] * a_exp + 4.0 * g_yyy_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_z_xy[i] = 4.0 * g_y_x_z_xy[i] - 4.0 * g_y_xxx_z_xy[i] * b_exp - 4.0 * g_yyy_x_z_xy[i] * a_exp + 4.0 * g_yyy_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_z_xz[i] = 4.0 * g_y_x_z_xz[i] - 4.0 * g_y_xxx_z_xz[i] * b_exp - 4.0 * g_yyy_x_z_xz[i] * a_exp + 4.0 * g_yyy_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_z_yy[i] = 4.0 * g_y_x_z_yy[i] - 4.0 * g_y_xxx_z_yy[i] * b_exp - 4.0 * g_yyy_x_z_yy[i] * a_exp + 4.0 * g_yyy_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_z_yz[i] = 4.0 * g_y_x_z_yz[i] - 4.0 * g_y_xxx_z_yz[i] * b_exp - 4.0 * g_yyy_x_z_yz[i] * a_exp + 4.0 * g_yyy_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xx_z_zz[i] = 4.0 * g_y_x_z_zz[i] - 4.0 * g_y_xxx_z_zz[i] * b_exp - 4.0 * g_yyy_x_z_zz[i] * a_exp + 4.0 * g_yyy_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2286-2292)

    #pragma omp simd aligned(g_y_x_0_0_yy_xy_x_xx, g_y_x_0_0_yy_xy_x_xy, g_y_x_0_0_yy_xy_x_xz, g_y_x_0_0_yy_xy_x_yy, g_y_x_0_0_yy_xy_x_yz, g_y_x_0_0_yy_xy_x_zz, g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_yyy_xxy_x_xx, g_yyy_xxy_x_xy, g_yyy_xxy_x_xz, g_yyy_xxy_x_yy, g_yyy_xxy_x_yz, g_yyy_xxy_x_zz, g_yyy_y_x_xx, g_yyy_y_x_xy, g_yyy_y_x_xz, g_yyy_y_x_yy, g_yyy_y_x_yz, g_yyy_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xy_x_xx[i] = 2.0 * g_y_y_x_xx[i] - 4.0 * g_y_xxy_x_xx[i] * b_exp - 2.0 * g_yyy_y_x_xx[i] * a_exp + 4.0 * g_yyy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_x_xy[i] = 2.0 * g_y_y_x_xy[i] - 4.0 * g_y_xxy_x_xy[i] * b_exp - 2.0 * g_yyy_y_x_xy[i] * a_exp + 4.0 * g_yyy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_x_xz[i] = 2.0 * g_y_y_x_xz[i] - 4.0 * g_y_xxy_x_xz[i] * b_exp - 2.0 * g_yyy_y_x_xz[i] * a_exp + 4.0 * g_yyy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_x_yy[i] = 2.0 * g_y_y_x_yy[i] - 4.0 * g_y_xxy_x_yy[i] * b_exp - 2.0 * g_yyy_y_x_yy[i] * a_exp + 4.0 * g_yyy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_x_yz[i] = 2.0 * g_y_y_x_yz[i] - 4.0 * g_y_xxy_x_yz[i] * b_exp - 2.0 * g_yyy_y_x_yz[i] * a_exp + 4.0 * g_yyy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_x_zz[i] = 2.0 * g_y_y_x_zz[i] - 4.0 * g_y_xxy_x_zz[i] * b_exp - 2.0 * g_yyy_y_x_zz[i] * a_exp + 4.0 * g_yyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2292-2298)

    #pragma omp simd aligned(g_y_x_0_0_yy_xy_y_xx, g_y_x_0_0_yy_xy_y_xy, g_y_x_0_0_yy_xy_y_xz, g_y_x_0_0_yy_xy_y_yy, g_y_x_0_0_yy_xy_y_yz, g_y_x_0_0_yy_xy_y_zz, g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_yyy_xxy_y_xx, g_yyy_xxy_y_xy, g_yyy_xxy_y_xz, g_yyy_xxy_y_yy, g_yyy_xxy_y_yz, g_yyy_xxy_y_zz, g_yyy_y_y_xx, g_yyy_y_y_xy, g_yyy_y_y_xz, g_yyy_y_y_yy, g_yyy_y_y_yz, g_yyy_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xy_y_xx[i] = 2.0 * g_y_y_y_xx[i] - 4.0 * g_y_xxy_y_xx[i] * b_exp - 2.0 * g_yyy_y_y_xx[i] * a_exp + 4.0 * g_yyy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_y_xy[i] = 2.0 * g_y_y_y_xy[i] - 4.0 * g_y_xxy_y_xy[i] * b_exp - 2.0 * g_yyy_y_y_xy[i] * a_exp + 4.0 * g_yyy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_y_xz[i] = 2.0 * g_y_y_y_xz[i] - 4.0 * g_y_xxy_y_xz[i] * b_exp - 2.0 * g_yyy_y_y_xz[i] * a_exp + 4.0 * g_yyy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_y_yy[i] = 2.0 * g_y_y_y_yy[i] - 4.0 * g_y_xxy_y_yy[i] * b_exp - 2.0 * g_yyy_y_y_yy[i] * a_exp + 4.0 * g_yyy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_y_yz[i] = 2.0 * g_y_y_y_yz[i] - 4.0 * g_y_xxy_y_yz[i] * b_exp - 2.0 * g_yyy_y_y_yz[i] * a_exp + 4.0 * g_yyy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_y_zz[i] = 2.0 * g_y_y_y_zz[i] - 4.0 * g_y_xxy_y_zz[i] * b_exp - 2.0 * g_yyy_y_y_zz[i] * a_exp + 4.0 * g_yyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2298-2304)

    #pragma omp simd aligned(g_y_x_0_0_yy_xy_z_xx, g_y_x_0_0_yy_xy_z_xy, g_y_x_0_0_yy_xy_z_xz, g_y_x_0_0_yy_xy_z_yy, g_y_x_0_0_yy_xy_z_yz, g_y_x_0_0_yy_xy_z_zz, g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_yyy_xxy_z_xx, g_yyy_xxy_z_xy, g_yyy_xxy_z_xz, g_yyy_xxy_z_yy, g_yyy_xxy_z_yz, g_yyy_xxy_z_zz, g_yyy_y_z_xx, g_yyy_y_z_xy, g_yyy_y_z_xz, g_yyy_y_z_yy, g_yyy_y_z_yz, g_yyy_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xy_z_xx[i] = 2.0 * g_y_y_z_xx[i] - 4.0 * g_y_xxy_z_xx[i] * b_exp - 2.0 * g_yyy_y_z_xx[i] * a_exp + 4.0 * g_yyy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_z_xy[i] = 2.0 * g_y_y_z_xy[i] - 4.0 * g_y_xxy_z_xy[i] * b_exp - 2.0 * g_yyy_y_z_xy[i] * a_exp + 4.0 * g_yyy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_z_xz[i] = 2.0 * g_y_y_z_xz[i] - 4.0 * g_y_xxy_z_xz[i] * b_exp - 2.0 * g_yyy_y_z_xz[i] * a_exp + 4.0 * g_yyy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_z_yy[i] = 2.0 * g_y_y_z_yy[i] - 4.0 * g_y_xxy_z_yy[i] * b_exp - 2.0 * g_yyy_y_z_yy[i] * a_exp + 4.0 * g_yyy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_z_yz[i] = 2.0 * g_y_y_z_yz[i] - 4.0 * g_y_xxy_z_yz[i] * b_exp - 2.0 * g_yyy_y_z_yz[i] * a_exp + 4.0 * g_yyy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xy_z_zz[i] = 2.0 * g_y_y_z_zz[i] - 4.0 * g_y_xxy_z_zz[i] * b_exp - 2.0 * g_yyy_y_z_zz[i] * a_exp + 4.0 * g_yyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2304-2310)

    #pragma omp simd aligned(g_y_x_0_0_yy_xz_x_xx, g_y_x_0_0_yy_xz_x_xy, g_y_x_0_0_yy_xz_x_xz, g_y_x_0_0_yy_xz_x_yy, g_y_x_0_0_yy_xz_x_yz, g_y_x_0_0_yy_xz_x_zz, g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_yyy_xxz_x_xx, g_yyy_xxz_x_xy, g_yyy_xxz_x_xz, g_yyy_xxz_x_yy, g_yyy_xxz_x_yz, g_yyy_xxz_x_zz, g_yyy_z_x_xx, g_yyy_z_x_xy, g_yyy_z_x_xz, g_yyy_z_x_yy, g_yyy_z_x_yz, g_yyy_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xz_x_xx[i] = 2.0 * g_y_z_x_xx[i] - 4.0 * g_y_xxz_x_xx[i] * b_exp - 2.0 * g_yyy_z_x_xx[i] * a_exp + 4.0 * g_yyy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_x_xy[i] = 2.0 * g_y_z_x_xy[i] - 4.0 * g_y_xxz_x_xy[i] * b_exp - 2.0 * g_yyy_z_x_xy[i] * a_exp + 4.0 * g_yyy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_x_xz[i] = 2.0 * g_y_z_x_xz[i] - 4.0 * g_y_xxz_x_xz[i] * b_exp - 2.0 * g_yyy_z_x_xz[i] * a_exp + 4.0 * g_yyy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_x_yy[i] = 2.0 * g_y_z_x_yy[i] - 4.0 * g_y_xxz_x_yy[i] * b_exp - 2.0 * g_yyy_z_x_yy[i] * a_exp + 4.0 * g_yyy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_x_yz[i] = 2.0 * g_y_z_x_yz[i] - 4.0 * g_y_xxz_x_yz[i] * b_exp - 2.0 * g_yyy_z_x_yz[i] * a_exp + 4.0 * g_yyy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_x_zz[i] = 2.0 * g_y_z_x_zz[i] - 4.0 * g_y_xxz_x_zz[i] * b_exp - 2.0 * g_yyy_z_x_zz[i] * a_exp + 4.0 * g_yyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2310-2316)

    #pragma omp simd aligned(g_y_x_0_0_yy_xz_y_xx, g_y_x_0_0_yy_xz_y_xy, g_y_x_0_0_yy_xz_y_xz, g_y_x_0_0_yy_xz_y_yy, g_y_x_0_0_yy_xz_y_yz, g_y_x_0_0_yy_xz_y_zz, g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_yyy_xxz_y_xx, g_yyy_xxz_y_xy, g_yyy_xxz_y_xz, g_yyy_xxz_y_yy, g_yyy_xxz_y_yz, g_yyy_xxz_y_zz, g_yyy_z_y_xx, g_yyy_z_y_xy, g_yyy_z_y_xz, g_yyy_z_y_yy, g_yyy_z_y_yz, g_yyy_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xz_y_xx[i] = 2.0 * g_y_z_y_xx[i] - 4.0 * g_y_xxz_y_xx[i] * b_exp - 2.0 * g_yyy_z_y_xx[i] * a_exp + 4.0 * g_yyy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_y_xy[i] = 2.0 * g_y_z_y_xy[i] - 4.0 * g_y_xxz_y_xy[i] * b_exp - 2.0 * g_yyy_z_y_xy[i] * a_exp + 4.0 * g_yyy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_y_xz[i] = 2.0 * g_y_z_y_xz[i] - 4.0 * g_y_xxz_y_xz[i] * b_exp - 2.0 * g_yyy_z_y_xz[i] * a_exp + 4.0 * g_yyy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_y_yy[i] = 2.0 * g_y_z_y_yy[i] - 4.0 * g_y_xxz_y_yy[i] * b_exp - 2.0 * g_yyy_z_y_yy[i] * a_exp + 4.0 * g_yyy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_y_yz[i] = 2.0 * g_y_z_y_yz[i] - 4.0 * g_y_xxz_y_yz[i] * b_exp - 2.0 * g_yyy_z_y_yz[i] * a_exp + 4.0 * g_yyy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_y_zz[i] = 2.0 * g_y_z_y_zz[i] - 4.0 * g_y_xxz_y_zz[i] * b_exp - 2.0 * g_yyy_z_y_zz[i] * a_exp + 4.0 * g_yyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2316-2322)

    #pragma omp simd aligned(g_y_x_0_0_yy_xz_z_xx, g_y_x_0_0_yy_xz_z_xy, g_y_x_0_0_yy_xz_z_xz, g_y_x_0_0_yy_xz_z_yy, g_y_x_0_0_yy_xz_z_yz, g_y_x_0_0_yy_xz_z_zz, g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_yyy_xxz_z_xx, g_yyy_xxz_z_xy, g_yyy_xxz_z_xz, g_yyy_xxz_z_yy, g_yyy_xxz_z_yz, g_yyy_xxz_z_zz, g_yyy_z_z_xx, g_yyy_z_z_xy, g_yyy_z_z_xz, g_yyy_z_z_yy, g_yyy_z_z_yz, g_yyy_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_xz_z_xx[i] = 2.0 * g_y_z_z_xx[i] - 4.0 * g_y_xxz_z_xx[i] * b_exp - 2.0 * g_yyy_z_z_xx[i] * a_exp + 4.0 * g_yyy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_z_xy[i] = 2.0 * g_y_z_z_xy[i] - 4.0 * g_y_xxz_z_xy[i] * b_exp - 2.0 * g_yyy_z_z_xy[i] * a_exp + 4.0 * g_yyy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_z_xz[i] = 2.0 * g_y_z_z_xz[i] - 4.0 * g_y_xxz_z_xz[i] * b_exp - 2.0 * g_yyy_z_z_xz[i] * a_exp + 4.0 * g_yyy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_z_yy[i] = 2.0 * g_y_z_z_yy[i] - 4.0 * g_y_xxz_z_yy[i] * b_exp - 2.0 * g_yyy_z_z_yy[i] * a_exp + 4.0 * g_yyy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_z_yz[i] = 2.0 * g_y_z_z_yz[i] - 4.0 * g_y_xxz_z_yz[i] * b_exp - 2.0 * g_yyy_z_z_yz[i] * a_exp + 4.0 * g_yyy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_xz_z_zz[i] = 2.0 * g_y_z_z_zz[i] - 4.0 * g_y_xxz_z_zz[i] * b_exp - 2.0 * g_yyy_z_z_zz[i] * a_exp + 4.0 * g_yyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2322-2328)

    #pragma omp simd aligned(g_y_x_0_0_yy_yy_x_xx, g_y_x_0_0_yy_yy_x_xy, g_y_x_0_0_yy_yy_x_xz, g_y_x_0_0_yy_yy_x_yy, g_y_x_0_0_yy_yy_x_yz, g_y_x_0_0_yy_yy_x_zz, g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz, g_yyy_xyy_x_xx, g_yyy_xyy_x_xy, g_yyy_xyy_x_xz, g_yyy_xyy_x_yy, g_yyy_xyy_x_yz, g_yyy_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yy_x_xx[i] = -4.0 * g_y_xyy_x_xx[i] * b_exp + 4.0 * g_yyy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_x_xy[i] = -4.0 * g_y_xyy_x_xy[i] * b_exp + 4.0 * g_yyy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_x_xz[i] = -4.0 * g_y_xyy_x_xz[i] * b_exp + 4.0 * g_yyy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_x_yy[i] = -4.0 * g_y_xyy_x_yy[i] * b_exp + 4.0 * g_yyy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_x_yz[i] = -4.0 * g_y_xyy_x_yz[i] * b_exp + 4.0 * g_yyy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_x_zz[i] = -4.0 * g_y_xyy_x_zz[i] * b_exp + 4.0 * g_yyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2328-2334)

    #pragma omp simd aligned(g_y_x_0_0_yy_yy_y_xx, g_y_x_0_0_yy_yy_y_xy, g_y_x_0_0_yy_yy_y_xz, g_y_x_0_0_yy_yy_y_yy, g_y_x_0_0_yy_yy_y_yz, g_y_x_0_0_yy_yy_y_zz, g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz, g_yyy_xyy_y_xx, g_yyy_xyy_y_xy, g_yyy_xyy_y_xz, g_yyy_xyy_y_yy, g_yyy_xyy_y_yz, g_yyy_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yy_y_xx[i] = -4.0 * g_y_xyy_y_xx[i] * b_exp + 4.0 * g_yyy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_y_xy[i] = -4.0 * g_y_xyy_y_xy[i] * b_exp + 4.0 * g_yyy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_y_xz[i] = -4.0 * g_y_xyy_y_xz[i] * b_exp + 4.0 * g_yyy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_y_yy[i] = -4.0 * g_y_xyy_y_yy[i] * b_exp + 4.0 * g_yyy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_y_yz[i] = -4.0 * g_y_xyy_y_yz[i] * b_exp + 4.0 * g_yyy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_y_zz[i] = -4.0 * g_y_xyy_y_zz[i] * b_exp + 4.0 * g_yyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2334-2340)

    #pragma omp simd aligned(g_y_x_0_0_yy_yy_z_xx, g_y_x_0_0_yy_yy_z_xy, g_y_x_0_0_yy_yy_z_xz, g_y_x_0_0_yy_yy_z_yy, g_y_x_0_0_yy_yy_z_yz, g_y_x_0_0_yy_yy_z_zz, g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz, g_yyy_xyy_z_xx, g_yyy_xyy_z_xy, g_yyy_xyy_z_xz, g_yyy_xyy_z_yy, g_yyy_xyy_z_yz, g_yyy_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yy_z_xx[i] = -4.0 * g_y_xyy_z_xx[i] * b_exp + 4.0 * g_yyy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_z_xy[i] = -4.0 * g_y_xyy_z_xy[i] * b_exp + 4.0 * g_yyy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_z_xz[i] = -4.0 * g_y_xyy_z_xz[i] * b_exp + 4.0 * g_yyy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_z_yy[i] = -4.0 * g_y_xyy_z_yy[i] * b_exp + 4.0 * g_yyy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_z_yz[i] = -4.0 * g_y_xyy_z_yz[i] * b_exp + 4.0 * g_yyy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yy_z_zz[i] = -4.0 * g_y_xyy_z_zz[i] * b_exp + 4.0 * g_yyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2340-2346)

    #pragma omp simd aligned(g_y_x_0_0_yy_yz_x_xx, g_y_x_0_0_yy_yz_x_xy, g_y_x_0_0_yy_yz_x_xz, g_y_x_0_0_yy_yz_x_yy, g_y_x_0_0_yy_yz_x_yz, g_y_x_0_0_yy_yz_x_zz, g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_yyy_xyz_x_xx, g_yyy_xyz_x_xy, g_yyy_xyz_x_xz, g_yyy_xyz_x_yy, g_yyy_xyz_x_yz, g_yyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yz_x_xx[i] = -4.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_x_xy[i] = -4.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_x_xz[i] = -4.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_x_yy[i] = -4.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_x_yz[i] = -4.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_x_zz[i] = -4.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2346-2352)

    #pragma omp simd aligned(g_y_x_0_0_yy_yz_y_xx, g_y_x_0_0_yy_yz_y_xy, g_y_x_0_0_yy_yz_y_xz, g_y_x_0_0_yy_yz_y_yy, g_y_x_0_0_yy_yz_y_yz, g_y_x_0_0_yy_yz_y_zz, g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_yyy_xyz_y_xx, g_yyy_xyz_y_xy, g_yyy_xyz_y_xz, g_yyy_xyz_y_yy, g_yyy_xyz_y_yz, g_yyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yz_y_xx[i] = -4.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_y_xy[i] = -4.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_y_xz[i] = -4.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_y_yy[i] = -4.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_y_yz[i] = -4.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_y_zz[i] = -4.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2352-2358)

    #pragma omp simd aligned(g_y_x_0_0_yy_yz_z_xx, g_y_x_0_0_yy_yz_z_xy, g_y_x_0_0_yy_yz_z_xz, g_y_x_0_0_yy_yz_z_yy, g_y_x_0_0_yy_yz_z_yz, g_y_x_0_0_yy_yz_z_zz, g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_yyy_xyz_z_xx, g_yyy_xyz_z_xy, g_yyy_xyz_z_xz, g_yyy_xyz_z_yy, g_yyy_xyz_z_yz, g_yyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_yz_z_xx[i] = -4.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_z_xy[i] = -4.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_z_xz[i] = -4.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_z_yy[i] = -4.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_z_yz[i] = -4.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_yz_z_zz[i] = -4.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2358-2364)

    #pragma omp simd aligned(g_y_x_0_0_yy_zz_x_xx, g_y_x_0_0_yy_zz_x_xy, g_y_x_0_0_yy_zz_x_xz, g_y_x_0_0_yy_zz_x_yy, g_y_x_0_0_yy_zz_x_yz, g_y_x_0_0_yy_zz_x_zz, g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz, g_yyy_xzz_x_xx, g_yyy_xzz_x_xy, g_yyy_xzz_x_xz, g_yyy_xzz_x_yy, g_yyy_xzz_x_yz, g_yyy_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_zz_x_xx[i] = -4.0 * g_y_xzz_x_xx[i] * b_exp + 4.0 * g_yyy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_x_xy[i] = -4.0 * g_y_xzz_x_xy[i] * b_exp + 4.0 * g_yyy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_x_xz[i] = -4.0 * g_y_xzz_x_xz[i] * b_exp + 4.0 * g_yyy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_x_yy[i] = -4.0 * g_y_xzz_x_yy[i] * b_exp + 4.0 * g_yyy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_x_yz[i] = -4.0 * g_y_xzz_x_yz[i] * b_exp + 4.0 * g_yyy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_x_zz[i] = -4.0 * g_y_xzz_x_zz[i] * b_exp + 4.0 * g_yyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2364-2370)

    #pragma omp simd aligned(g_y_x_0_0_yy_zz_y_xx, g_y_x_0_0_yy_zz_y_xy, g_y_x_0_0_yy_zz_y_xz, g_y_x_0_0_yy_zz_y_yy, g_y_x_0_0_yy_zz_y_yz, g_y_x_0_0_yy_zz_y_zz, g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz, g_yyy_xzz_y_xx, g_yyy_xzz_y_xy, g_yyy_xzz_y_xz, g_yyy_xzz_y_yy, g_yyy_xzz_y_yz, g_yyy_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_zz_y_xx[i] = -4.0 * g_y_xzz_y_xx[i] * b_exp + 4.0 * g_yyy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_y_xy[i] = -4.0 * g_y_xzz_y_xy[i] * b_exp + 4.0 * g_yyy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_y_xz[i] = -4.0 * g_y_xzz_y_xz[i] * b_exp + 4.0 * g_yyy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_y_yy[i] = -4.0 * g_y_xzz_y_yy[i] * b_exp + 4.0 * g_yyy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_y_yz[i] = -4.0 * g_y_xzz_y_yz[i] * b_exp + 4.0 * g_yyy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_y_zz[i] = -4.0 * g_y_xzz_y_zz[i] * b_exp + 4.0 * g_yyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2370-2376)

    #pragma omp simd aligned(g_y_x_0_0_yy_zz_z_xx, g_y_x_0_0_yy_zz_z_xy, g_y_x_0_0_yy_zz_z_xz, g_y_x_0_0_yy_zz_z_yy, g_y_x_0_0_yy_zz_z_yz, g_y_x_0_0_yy_zz_z_zz, g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz, g_yyy_xzz_z_xx, g_yyy_xzz_z_xy, g_yyy_xzz_z_xz, g_yyy_xzz_z_yy, g_yyy_xzz_z_yz, g_yyy_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yy_zz_z_xx[i] = -4.0 * g_y_xzz_z_xx[i] * b_exp + 4.0 * g_yyy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_z_xy[i] = -4.0 * g_y_xzz_z_xy[i] * b_exp + 4.0 * g_yyy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_z_xz[i] = -4.0 * g_y_xzz_z_xz[i] * b_exp + 4.0 * g_yyy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_z_yy[i] = -4.0 * g_y_xzz_z_yy[i] * b_exp + 4.0 * g_yyy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_z_yz[i] = -4.0 * g_y_xzz_z_yz[i] * b_exp + 4.0 * g_yyy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yy_zz_z_zz[i] = -4.0 * g_y_xzz_z_zz[i] * b_exp + 4.0 * g_yyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2376-2382)

    #pragma omp simd aligned(g_y_x_0_0_yz_xx_x_xx, g_y_x_0_0_yz_xx_x_xy, g_y_x_0_0_yz_xx_x_xz, g_y_x_0_0_yz_xx_x_yy, g_y_x_0_0_yz_xx_x_yz, g_y_x_0_0_yz_xx_x_zz, g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xxx_x_xx, g_yyz_xxx_x_xy, g_yyz_xxx_x_xz, g_yyz_xxx_x_yy, g_yyz_xxx_x_yz, g_yyz_xxx_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xxx_x_xx, g_z_xxx_x_xy, g_z_xxx_x_xz, g_z_xxx_x_yy, g_z_xxx_x_yz, g_z_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xx_x_xx[i] = 2.0 * g_z_x_x_xx[i] - 2.0 * g_z_xxx_x_xx[i] * b_exp - 4.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_x_xy[i] = 2.0 * g_z_x_x_xy[i] - 2.0 * g_z_xxx_x_xy[i] * b_exp - 4.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_x_xz[i] = 2.0 * g_z_x_x_xz[i] - 2.0 * g_z_xxx_x_xz[i] * b_exp - 4.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_x_yy[i] = 2.0 * g_z_x_x_yy[i] - 2.0 * g_z_xxx_x_yy[i] * b_exp - 4.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_x_yz[i] = 2.0 * g_z_x_x_yz[i] - 2.0 * g_z_xxx_x_yz[i] * b_exp - 4.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_x_zz[i] = 2.0 * g_z_x_x_zz[i] - 2.0 * g_z_xxx_x_zz[i] * b_exp - 4.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2382-2388)

    #pragma omp simd aligned(g_y_x_0_0_yz_xx_y_xx, g_y_x_0_0_yz_xx_y_xy, g_y_x_0_0_yz_xx_y_xz, g_y_x_0_0_yz_xx_y_yy, g_y_x_0_0_yz_xx_y_yz, g_y_x_0_0_yz_xx_y_zz, g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xxx_y_xx, g_yyz_xxx_y_xy, g_yyz_xxx_y_xz, g_yyz_xxx_y_yy, g_yyz_xxx_y_yz, g_yyz_xxx_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xxx_y_xx, g_z_xxx_y_xy, g_z_xxx_y_xz, g_z_xxx_y_yy, g_z_xxx_y_yz, g_z_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xx_y_xx[i] = 2.0 * g_z_x_y_xx[i] - 2.0 * g_z_xxx_y_xx[i] * b_exp - 4.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_y_xy[i] = 2.0 * g_z_x_y_xy[i] - 2.0 * g_z_xxx_y_xy[i] * b_exp - 4.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_y_xz[i] = 2.0 * g_z_x_y_xz[i] - 2.0 * g_z_xxx_y_xz[i] * b_exp - 4.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_y_yy[i] = 2.0 * g_z_x_y_yy[i] - 2.0 * g_z_xxx_y_yy[i] * b_exp - 4.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_y_yz[i] = 2.0 * g_z_x_y_yz[i] - 2.0 * g_z_xxx_y_yz[i] * b_exp - 4.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_y_zz[i] = 2.0 * g_z_x_y_zz[i] - 2.0 * g_z_xxx_y_zz[i] * b_exp - 4.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2388-2394)

    #pragma omp simd aligned(g_y_x_0_0_yz_xx_z_xx, g_y_x_0_0_yz_xx_z_xy, g_y_x_0_0_yz_xx_z_xz, g_y_x_0_0_yz_xx_z_yy, g_y_x_0_0_yz_xx_z_yz, g_y_x_0_0_yz_xx_z_zz, g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xxx_z_xx, g_yyz_xxx_z_xy, g_yyz_xxx_z_xz, g_yyz_xxx_z_yy, g_yyz_xxx_z_yz, g_yyz_xxx_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xxx_z_xx, g_z_xxx_z_xy, g_z_xxx_z_xz, g_z_xxx_z_yy, g_z_xxx_z_yz, g_z_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xx_z_xx[i] = 2.0 * g_z_x_z_xx[i] - 2.0 * g_z_xxx_z_xx[i] * b_exp - 4.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_z_xy[i] = 2.0 * g_z_x_z_xy[i] - 2.0 * g_z_xxx_z_xy[i] * b_exp - 4.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_z_xz[i] = 2.0 * g_z_x_z_xz[i] - 2.0 * g_z_xxx_z_xz[i] * b_exp - 4.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_z_yy[i] = 2.0 * g_z_x_z_yy[i] - 2.0 * g_z_xxx_z_yy[i] * b_exp - 4.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_z_yz[i] = 2.0 * g_z_x_z_yz[i] - 2.0 * g_z_xxx_z_yz[i] * b_exp - 4.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xx_z_zz[i] = 2.0 * g_z_x_z_zz[i] - 2.0 * g_z_xxx_z_zz[i] * b_exp - 4.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2394-2400)

    #pragma omp simd aligned(g_y_x_0_0_yz_xy_x_xx, g_y_x_0_0_yz_xy_x_xy, g_y_x_0_0_yz_xy_x_xz, g_y_x_0_0_yz_xy_x_yy, g_y_x_0_0_yz_xy_x_yz, g_y_x_0_0_yz_xy_x_zz, g_yyz_xxy_x_xx, g_yyz_xxy_x_xy, g_yyz_xxy_x_xz, g_yyz_xxy_x_yy, g_yyz_xxy_x_yz, g_yyz_xxy_x_zz, g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xy_x_xx[i] = g_z_y_x_xx[i] - 2.0 * g_z_xxy_x_xx[i] * b_exp - 2.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_x_xy[i] = g_z_y_x_xy[i] - 2.0 * g_z_xxy_x_xy[i] * b_exp - 2.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_x_xz[i] = g_z_y_x_xz[i] - 2.0 * g_z_xxy_x_xz[i] * b_exp - 2.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_x_yy[i] = g_z_y_x_yy[i] - 2.0 * g_z_xxy_x_yy[i] * b_exp - 2.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_x_yz[i] = g_z_y_x_yz[i] - 2.0 * g_z_xxy_x_yz[i] * b_exp - 2.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_x_zz[i] = g_z_y_x_zz[i] - 2.0 * g_z_xxy_x_zz[i] * b_exp - 2.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2400-2406)

    #pragma omp simd aligned(g_y_x_0_0_yz_xy_y_xx, g_y_x_0_0_yz_xy_y_xy, g_y_x_0_0_yz_xy_y_xz, g_y_x_0_0_yz_xy_y_yy, g_y_x_0_0_yz_xy_y_yz, g_y_x_0_0_yz_xy_y_zz, g_yyz_xxy_y_xx, g_yyz_xxy_y_xy, g_yyz_xxy_y_xz, g_yyz_xxy_y_yy, g_yyz_xxy_y_yz, g_yyz_xxy_y_zz, g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xy_y_xx[i] = g_z_y_y_xx[i] - 2.0 * g_z_xxy_y_xx[i] * b_exp - 2.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_y_xy[i] = g_z_y_y_xy[i] - 2.0 * g_z_xxy_y_xy[i] * b_exp - 2.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_y_xz[i] = g_z_y_y_xz[i] - 2.0 * g_z_xxy_y_xz[i] * b_exp - 2.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_y_yy[i] = g_z_y_y_yy[i] - 2.0 * g_z_xxy_y_yy[i] * b_exp - 2.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_y_yz[i] = g_z_y_y_yz[i] - 2.0 * g_z_xxy_y_yz[i] * b_exp - 2.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_y_zz[i] = g_z_y_y_zz[i] - 2.0 * g_z_xxy_y_zz[i] * b_exp - 2.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2406-2412)

    #pragma omp simd aligned(g_y_x_0_0_yz_xy_z_xx, g_y_x_0_0_yz_xy_z_xy, g_y_x_0_0_yz_xy_z_xz, g_y_x_0_0_yz_xy_z_yy, g_y_x_0_0_yz_xy_z_yz, g_y_x_0_0_yz_xy_z_zz, g_yyz_xxy_z_xx, g_yyz_xxy_z_xy, g_yyz_xxy_z_xz, g_yyz_xxy_z_yy, g_yyz_xxy_z_yz, g_yyz_xxy_z_zz, g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xy_z_xx[i] = g_z_y_z_xx[i] - 2.0 * g_z_xxy_z_xx[i] * b_exp - 2.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_z_xy[i] = g_z_y_z_xy[i] - 2.0 * g_z_xxy_z_xy[i] * b_exp - 2.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_z_xz[i] = g_z_y_z_xz[i] - 2.0 * g_z_xxy_z_xz[i] * b_exp - 2.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_z_yy[i] = g_z_y_z_yy[i] - 2.0 * g_z_xxy_z_yy[i] * b_exp - 2.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_z_yz[i] = g_z_y_z_yz[i] - 2.0 * g_z_xxy_z_yz[i] * b_exp - 2.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xy_z_zz[i] = g_z_y_z_zz[i] - 2.0 * g_z_xxy_z_zz[i] * b_exp - 2.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2412-2418)

    #pragma omp simd aligned(g_y_x_0_0_yz_xz_x_xx, g_y_x_0_0_yz_xz_x_xy, g_y_x_0_0_yz_xz_x_xz, g_y_x_0_0_yz_xz_x_yy, g_y_x_0_0_yz_xz_x_yz, g_y_x_0_0_yz_xz_x_zz, g_yyz_xxz_x_xx, g_yyz_xxz_x_xy, g_yyz_xxz_x_xz, g_yyz_xxz_x_yy, g_yyz_xxz_x_yz, g_yyz_xxz_x_zz, g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xz_x_xx[i] = g_z_z_x_xx[i] - 2.0 * g_z_xxz_x_xx[i] * b_exp - 2.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_x_xy[i] = g_z_z_x_xy[i] - 2.0 * g_z_xxz_x_xy[i] * b_exp - 2.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_x_xz[i] = g_z_z_x_xz[i] - 2.0 * g_z_xxz_x_xz[i] * b_exp - 2.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_x_yy[i] = g_z_z_x_yy[i] - 2.0 * g_z_xxz_x_yy[i] * b_exp - 2.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_x_yz[i] = g_z_z_x_yz[i] - 2.0 * g_z_xxz_x_yz[i] * b_exp - 2.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_x_zz[i] = g_z_z_x_zz[i] - 2.0 * g_z_xxz_x_zz[i] * b_exp - 2.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2418-2424)

    #pragma omp simd aligned(g_y_x_0_0_yz_xz_y_xx, g_y_x_0_0_yz_xz_y_xy, g_y_x_0_0_yz_xz_y_xz, g_y_x_0_0_yz_xz_y_yy, g_y_x_0_0_yz_xz_y_yz, g_y_x_0_0_yz_xz_y_zz, g_yyz_xxz_y_xx, g_yyz_xxz_y_xy, g_yyz_xxz_y_xz, g_yyz_xxz_y_yy, g_yyz_xxz_y_yz, g_yyz_xxz_y_zz, g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xz_y_xx[i] = g_z_z_y_xx[i] - 2.0 * g_z_xxz_y_xx[i] * b_exp - 2.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_y_xy[i] = g_z_z_y_xy[i] - 2.0 * g_z_xxz_y_xy[i] * b_exp - 2.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_y_xz[i] = g_z_z_y_xz[i] - 2.0 * g_z_xxz_y_xz[i] * b_exp - 2.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_y_yy[i] = g_z_z_y_yy[i] - 2.0 * g_z_xxz_y_yy[i] * b_exp - 2.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_y_yz[i] = g_z_z_y_yz[i] - 2.0 * g_z_xxz_y_yz[i] * b_exp - 2.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_y_zz[i] = g_z_z_y_zz[i] - 2.0 * g_z_xxz_y_zz[i] * b_exp - 2.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2424-2430)

    #pragma omp simd aligned(g_y_x_0_0_yz_xz_z_xx, g_y_x_0_0_yz_xz_z_xy, g_y_x_0_0_yz_xz_z_xz, g_y_x_0_0_yz_xz_z_yy, g_y_x_0_0_yz_xz_z_yz, g_y_x_0_0_yz_xz_z_zz, g_yyz_xxz_z_xx, g_yyz_xxz_z_xy, g_yyz_xxz_z_xz, g_yyz_xxz_z_yy, g_yyz_xxz_z_yz, g_yyz_xxz_z_zz, g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_xz_z_xx[i] = g_z_z_z_xx[i] - 2.0 * g_z_xxz_z_xx[i] * b_exp - 2.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_z_xy[i] = g_z_z_z_xy[i] - 2.0 * g_z_xxz_z_xy[i] * b_exp - 2.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_z_xz[i] = g_z_z_z_xz[i] - 2.0 * g_z_xxz_z_xz[i] * b_exp - 2.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_z_yy[i] = g_z_z_z_yy[i] - 2.0 * g_z_xxz_z_yy[i] * b_exp - 2.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_z_yz[i] = g_z_z_z_yz[i] - 2.0 * g_z_xxz_z_yz[i] * b_exp - 2.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_xz_z_zz[i] = g_z_z_z_zz[i] - 2.0 * g_z_xxz_z_zz[i] * b_exp - 2.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2430-2436)

    #pragma omp simd aligned(g_y_x_0_0_yz_yy_x_xx, g_y_x_0_0_yz_yy_x_xy, g_y_x_0_0_yz_yy_x_xz, g_y_x_0_0_yz_yy_x_yy, g_y_x_0_0_yz_yy_x_yz, g_y_x_0_0_yz_yy_x_zz, g_yyz_xyy_x_xx, g_yyz_xyy_x_xy, g_yyz_xyy_x_xz, g_yyz_xyy_x_yy, g_yyz_xyy_x_yz, g_yyz_xyy_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yy_x_xx[i] = -2.0 * g_z_xyy_x_xx[i] * b_exp + 4.0 * g_yyz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_x_xy[i] = -2.0 * g_z_xyy_x_xy[i] * b_exp + 4.0 * g_yyz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_x_xz[i] = -2.0 * g_z_xyy_x_xz[i] * b_exp + 4.0 * g_yyz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_x_yy[i] = -2.0 * g_z_xyy_x_yy[i] * b_exp + 4.0 * g_yyz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_x_yz[i] = -2.0 * g_z_xyy_x_yz[i] * b_exp + 4.0 * g_yyz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_x_zz[i] = -2.0 * g_z_xyy_x_zz[i] * b_exp + 4.0 * g_yyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2436-2442)

    #pragma omp simd aligned(g_y_x_0_0_yz_yy_y_xx, g_y_x_0_0_yz_yy_y_xy, g_y_x_0_0_yz_yy_y_xz, g_y_x_0_0_yz_yy_y_yy, g_y_x_0_0_yz_yy_y_yz, g_y_x_0_0_yz_yy_y_zz, g_yyz_xyy_y_xx, g_yyz_xyy_y_xy, g_yyz_xyy_y_xz, g_yyz_xyy_y_yy, g_yyz_xyy_y_yz, g_yyz_xyy_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yy_y_xx[i] = -2.0 * g_z_xyy_y_xx[i] * b_exp + 4.0 * g_yyz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_y_xy[i] = -2.0 * g_z_xyy_y_xy[i] * b_exp + 4.0 * g_yyz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_y_xz[i] = -2.0 * g_z_xyy_y_xz[i] * b_exp + 4.0 * g_yyz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_y_yy[i] = -2.0 * g_z_xyy_y_yy[i] * b_exp + 4.0 * g_yyz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_y_yz[i] = -2.0 * g_z_xyy_y_yz[i] * b_exp + 4.0 * g_yyz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_y_zz[i] = -2.0 * g_z_xyy_y_zz[i] * b_exp + 4.0 * g_yyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2442-2448)

    #pragma omp simd aligned(g_y_x_0_0_yz_yy_z_xx, g_y_x_0_0_yz_yy_z_xy, g_y_x_0_0_yz_yy_z_xz, g_y_x_0_0_yz_yy_z_yy, g_y_x_0_0_yz_yy_z_yz, g_y_x_0_0_yz_yy_z_zz, g_yyz_xyy_z_xx, g_yyz_xyy_z_xy, g_yyz_xyy_z_xz, g_yyz_xyy_z_yy, g_yyz_xyy_z_yz, g_yyz_xyy_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yy_z_xx[i] = -2.0 * g_z_xyy_z_xx[i] * b_exp + 4.0 * g_yyz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_z_xy[i] = -2.0 * g_z_xyy_z_xy[i] * b_exp + 4.0 * g_yyz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_z_xz[i] = -2.0 * g_z_xyy_z_xz[i] * b_exp + 4.0 * g_yyz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_z_yy[i] = -2.0 * g_z_xyy_z_yy[i] * b_exp + 4.0 * g_yyz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_z_yz[i] = -2.0 * g_z_xyy_z_yz[i] * b_exp + 4.0 * g_yyz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yy_z_zz[i] = -2.0 * g_z_xyy_z_zz[i] * b_exp + 4.0 * g_yyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2448-2454)

    #pragma omp simd aligned(g_y_x_0_0_yz_yz_x_xx, g_y_x_0_0_yz_yz_x_xy, g_y_x_0_0_yz_yz_x_xz, g_y_x_0_0_yz_yz_x_yy, g_y_x_0_0_yz_yz_x_yz, g_y_x_0_0_yz_yz_x_zz, g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yz_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2454-2460)

    #pragma omp simd aligned(g_y_x_0_0_yz_yz_y_xx, g_y_x_0_0_yz_yz_y_xy, g_y_x_0_0_yz_yz_y_xz, g_y_x_0_0_yz_yz_y_yy, g_y_x_0_0_yz_yz_y_yz, g_y_x_0_0_yz_yz_y_zz, g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yz_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2460-2466)

    #pragma omp simd aligned(g_y_x_0_0_yz_yz_z_xx, g_y_x_0_0_yz_yz_z_xy, g_y_x_0_0_yz_yz_z_xz, g_y_x_0_0_yz_yz_z_yy, g_y_x_0_0_yz_yz_z_yz, g_y_x_0_0_yz_yz_z_zz, g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_yz_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_yz_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2466-2472)

    #pragma omp simd aligned(g_y_x_0_0_yz_zz_x_xx, g_y_x_0_0_yz_zz_x_xy, g_y_x_0_0_yz_zz_x_xz, g_y_x_0_0_yz_zz_x_yy, g_y_x_0_0_yz_zz_x_yz, g_y_x_0_0_yz_zz_x_zz, g_yyz_xzz_x_xx, g_yyz_xzz_x_xy, g_yyz_xzz_x_xz, g_yyz_xzz_x_yy, g_yyz_xzz_x_yz, g_yyz_xzz_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_zz_x_xx[i] = -2.0 * g_z_xzz_x_xx[i] * b_exp + 4.0 * g_yyz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_x_xy[i] = -2.0 * g_z_xzz_x_xy[i] * b_exp + 4.0 * g_yyz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_x_xz[i] = -2.0 * g_z_xzz_x_xz[i] * b_exp + 4.0 * g_yyz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_x_yy[i] = -2.0 * g_z_xzz_x_yy[i] * b_exp + 4.0 * g_yyz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_x_yz[i] = -2.0 * g_z_xzz_x_yz[i] * b_exp + 4.0 * g_yyz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_x_zz[i] = -2.0 * g_z_xzz_x_zz[i] * b_exp + 4.0 * g_yyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2472-2478)

    #pragma omp simd aligned(g_y_x_0_0_yz_zz_y_xx, g_y_x_0_0_yz_zz_y_xy, g_y_x_0_0_yz_zz_y_xz, g_y_x_0_0_yz_zz_y_yy, g_y_x_0_0_yz_zz_y_yz, g_y_x_0_0_yz_zz_y_zz, g_yyz_xzz_y_xx, g_yyz_xzz_y_xy, g_yyz_xzz_y_xz, g_yyz_xzz_y_yy, g_yyz_xzz_y_yz, g_yyz_xzz_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_zz_y_xx[i] = -2.0 * g_z_xzz_y_xx[i] * b_exp + 4.0 * g_yyz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_y_xy[i] = -2.0 * g_z_xzz_y_xy[i] * b_exp + 4.0 * g_yyz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_y_xz[i] = -2.0 * g_z_xzz_y_xz[i] * b_exp + 4.0 * g_yyz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_y_yy[i] = -2.0 * g_z_xzz_y_yy[i] * b_exp + 4.0 * g_yyz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_y_yz[i] = -2.0 * g_z_xzz_y_yz[i] * b_exp + 4.0 * g_yyz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_y_zz[i] = -2.0 * g_z_xzz_y_zz[i] * b_exp + 4.0 * g_yyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2478-2484)

    #pragma omp simd aligned(g_y_x_0_0_yz_zz_z_xx, g_y_x_0_0_yz_zz_z_xy, g_y_x_0_0_yz_zz_z_xz, g_y_x_0_0_yz_zz_z_yy, g_y_x_0_0_yz_zz_z_yz, g_y_x_0_0_yz_zz_z_zz, g_yyz_xzz_z_xx, g_yyz_xzz_z_xy, g_yyz_xzz_z_xz, g_yyz_xzz_z_yy, g_yyz_xzz_z_yz, g_yyz_xzz_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_yz_zz_z_xx[i] = -2.0 * g_z_xzz_z_xx[i] * b_exp + 4.0 * g_yyz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_z_xy[i] = -2.0 * g_z_xzz_z_xy[i] * b_exp + 4.0 * g_yyz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_z_xz[i] = -2.0 * g_z_xzz_z_xz[i] * b_exp + 4.0 * g_yyz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_z_yy[i] = -2.0 * g_z_xzz_z_yy[i] * b_exp + 4.0 * g_yyz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_z_yz[i] = -2.0 * g_z_xzz_z_yz[i] * b_exp + 4.0 * g_yyz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_yz_zz_z_zz[i] = -2.0 * g_z_xzz_z_zz[i] * b_exp + 4.0 * g_yyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2484-2490)

    #pragma omp simd aligned(g_y_x_0_0_zz_xx_x_xx, g_y_x_0_0_zz_xx_x_xy, g_y_x_0_0_zz_xx_x_xz, g_y_x_0_0_zz_xx_x_yy, g_y_x_0_0_zz_xx_x_yz, g_y_x_0_0_zz_xx_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xxx_x_xx, g_yzz_xxx_x_xy, g_yzz_xxx_x_xz, g_yzz_xxx_x_yy, g_yzz_xxx_x_yz, g_yzz_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xx_x_xx[i] = -4.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xxx_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_x_xy[i] = -4.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xxx_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_x_xz[i] = -4.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xxx_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_x_yy[i] = -4.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xxx_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_x_yz[i] = -4.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xxx_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_x_zz[i] = -4.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2490-2496)

    #pragma omp simd aligned(g_y_x_0_0_zz_xx_y_xx, g_y_x_0_0_zz_xx_y_xy, g_y_x_0_0_zz_xx_y_xz, g_y_x_0_0_zz_xx_y_yy, g_y_x_0_0_zz_xx_y_yz, g_y_x_0_0_zz_xx_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xxx_y_xx, g_yzz_xxx_y_xy, g_yzz_xxx_y_xz, g_yzz_xxx_y_yy, g_yzz_xxx_y_yz, g_yzz_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xx_y_xx[i] = -4.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xxx_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_y_xy[i] = -4.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xxx_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_y_xz[i] = -4.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xxx_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_y_yy[i] = -4.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xxx_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_y_yz[i] = -4.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xxx_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_y_zz[i] = -4.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2496-2502)

    #pragma omp simd aligned(g_y_x_0_0_zz_xx_z_xx, g_y_x_0_0_zz_xx_z_xy, g_y_x_0_0_zz_xx_z_xz, g_y_x_0_0_zz_xx_z_yy, g_y_x_0_0_zz_xx_z_yz, g_y_x_0_0_zz_xx_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xxx_z_xx, g_yzz_xxx_z_xy, g_yzz_xxx_z_xz, g_yzz_xxx_z_yy, g_yzz_xxx_z_yz, g_yzz_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xx_z_xx[i] = -4.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xxx_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_z_xy[i] = -4.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xxx_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_z_xz[i] = -4.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xxx_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_z_yy[i] = -4.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xxx_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_z_yz[i] = -4.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xxx_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xx_z_zz[i] = -4.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2502-2508)

    #pragma omp simd aligned(g_y_x_0_0_zz_xy_x_xx, g_y_x_0_0_zz_xy_x_xy, g_y_x_0_0_zz_xy_x_xz, g_y_x_0_0_zz_xy_x_yy, g_y_x_0_0_zz_xy_x_yz, g_y_x_0_0_zz_xy_x_zz, g_yzz_xxy_x_xx, g_yzz_xxy_x_xy, g_yzz_xxy_x_xz, g_yzz_xxy_x_yy, g_yzz_xxy_x_yz, g_yzz_xxy_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xy_x_xx[i] = -2.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_x_xy[i] = -2.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_x_xz[i] = -2.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_x_yy[i] = -2.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_x_yz[i] = -2.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_x_zz[i] = -2.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2508-2514)

    #pragma omp simd aligned(g_y_x_0_0_zz_xy_y_xx, g_y_x_0_0_zz_xy_y_xy, g_y_x_0_0_zz_xy_y_xz, g_y_x_0_0_zz_xy_y_yy, g_y_x_0_0_zz_xy_y_yz, g_y_x_0_0_zz_xy_y_zz, g_yzz_xxy_y_xx, g_yzz_xxy_y_xy, g_yzz_xxy_y_xz, g_yzz_xxy_y_yy, g_yzz_xxy_y_yz, g_yzz_xxy_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xy_y_xx[i] = -2.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_y_xy[i] = -2.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_y_xz[i] = -2.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_y_yy[i] = -2.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_y_yz[i] = -2.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_y_zz[i] = -2.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2514-2520)

    #pragma omp simd aligned(g_y_x_0_0_zz_xy_z_xx, g_y_x_0_0_zz_xy_z_xy, g_y_x_0_0_zz_xy_z_xz, g_y_x_0_0_zz_xy_z_yy, g_y_x_0_0_zz_xy_z_yz, g_y_x_0_0_zz_xy_z_zz, g_yzz_xxy_z_xx, g_yzz_xxy_z_xy, g_yzz_xxy_z_xz, g_yzz_xxy_z_yy, g_yzz_xxy_z_yz, g_yzz_xxy_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xy_z_xx[i] = -2.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_z_xy[i] = -2.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_z_xz[i] = -2.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_z_yy[i] = -2.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_z_yz[i] = -2.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xy_z_zz[i] = -2.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2520-2526)

    #pragma omp simd aligned(g_y_x_0_0_zz_xz_x_xx, g_y_x_0_0_zz_xz_x_xy, g_y_x_0_0_zz_xz_x_xz, g_y_x_0_0_zz_xz_x_yy, g_y_x_0_0_zz_xz_x_yz, g_y_x_0_0_zz_xz_x_zz, g_yzz_xxz_x_xx, g_yzz_xxz_x_xy, g_yzz_xxz_x_xz, g_yzz_xxz_x_yy, g_yzz_xxz_x_yz, g_yzz_xxz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xz_x_xx[i] = -2.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_x_xy[i] = -2.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_x_xz[i] = -2.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_x_yy[i] = -2.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_x_yz[i] = -2.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_x_zz[i] = -2.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2526-2532)

    #pragma omp simd aligned(g_y_x_0_0_zz_xz_y_xx, g_y_x_0_0_zz_xz_y_xy, g_y_x_0_0_zz_xz_y_xz, g_y_x_0_0_zz_xz_y_yy, g_y_x_0_0_zz_xz_y_yz, g_y_x_0_0_zz_xz_y_zz, g_yzz_xxz_y_xx, g_yzz_xxz_y_xy, g_yzz_xxz_y_xz, g_yzz_xxz_y_yy, g_yzz_xxz_y_yz, g_yzz_xxz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xz_y_xx[i] = -2.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_y_xy[i] = -2.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_y_xz[i] = -2.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_y_yy[i] = -2.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_y_yz[i] = -2.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_y_zz[i] = -2.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2532-2538)

    #pragma omp simd aligned(g_y_x_0_0_zz_xz_z_xx, g_y_x_0_0_zz_xz_z_xy, g_y_x_0_0_zz_xz_z_xz, g_y_x_0_0_zz_xz_z_yy, g_y_x_0_0_zz_xz_z_yz, g_y_x_0_0_zz_xz_z_zz, g_yzz_xxz_z_xx, g_yzz_xxz_z_xy, g_yzz_xxz_z_xz, g_yzz_xxz_z_yy, g_yzz_xxz_z_yz, g_yzz_xxz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_xz_z_xx[i] = -2.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_z_xy[i] = -2.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_z_xz[i] = -2.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_z_yy[i] = -2.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_z_yz[i] = -2.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_xz_z_zz[i] = -2.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2538-2544)

    #pragma omp simd aligned(g_y_x_0_0_zz_yy_x_xx, g_y_x_0_0_zz_yy_x_xy, g_y_x_0_0_zz_yy_x_xz, g_y_x_0_0_zz_yy_x_yy, g_y_x_0_0_zz_yy_x_yz, g_y_x_0_0_zz_yy_x_zz, g_yzz_xyy_x_xx, g_yzz_xyy_x_xy, g_yzz_xyy_x_xz, g_yzz_xyy_x_yy, g_yzz_xyy_x_yz, g_yzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yy_x_xx[i] = 4.0 * g_yzz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_x_xy[i] = 4.0 * g_yzz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_x_xz[i] = 4.0 * g_yzz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_x_yy[i] = 4.0 * g_yzz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_x_yz[i] = 4.0 * g_yzz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_x_zz[i] = 4.0 * g_yzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2544-2550)

    #pragma omp simd aligned(g_y_x_0_0_zz_yy_y_xx, g_y_x_0_0_zz_yy_y_xy, g_y_x_0_0_zz_yy_y_xz, g_y_x_0_0_zz_yy_y_yy, g_y_x_0_0_zz_yy_y_yz, g_y_x_0_0_zz_yy_y_zz, g_yzz_xyy_y_xx, g_yzz_xyy_y_xy, g_yzz_xyy_y_xz, g_yzz_xyy_y_yy, g_yzz_xyy_y_yz, g_yzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yy_y_xx[i] = 4.0 * g_yzz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_y_xy[i] = 4.0 * g_yzz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_y_xz[i] = 4.0 * g_yzz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_y_yy[i] = 4.0 * g_yzz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_y_yz[i] = 4.0 * g_yzz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_y_zz[i] = 4.0 * g_yzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2550-2556)

    #pragma omp simd aligned(g_y_x_0_0_zz_yy_z_xx, g_y_x_0_0_zz_yy_z_xy, g_y_x_0_0_zz_yy_z_xz, g_y_x_0_0_zz_yy_z_yy, g_y_x_0_0_zz_yy_z_yz, g_y_x_0_0_zz_yy_z_zz, g_yzz_xyy_z_xx, g_yzz_xyy_z_xy, g_yzz_xyy_z_xz, g_yzz_xyy_z_yy, g_yzz_xyy_z_yz, g_yzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yy_z_xx[i] = 4.0 * g_yzz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_z_xy[i] = 4.0 * g_yzz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_z_xz[i] = 4.0 * g_yzz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_z_yy[i] = 4.0 * g_yzz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_z_yz[i] = 4.0 * g_yzz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yy_z_zz[i] = 4.0 * g_yzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2556-2562)

    #pragma omp simd aligned(g_y_x_0_0_zz_yz_x_xx, g_y_x_0_0_zz_yz_x_xy, g_y_x_0_0_zz_yz_x_xz, g_y_x_0_0_zz_yz_x_yy, g_y_x_0_0_zz_yz_x_yz, g_y_x_0_0_zz_yz_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yz_x_xx[i] = 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_x_xy[i] = 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_x_xz[i] = 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_x_yy[i] = 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_x_yz[i] = 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_x_zz[i] = 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2562-2568)

    #pragma omp simd aligned(g_y_x_0_0_zz_yz_y_xx, g_y_x_0_0_zz_yz_y_xy, g_y_x_0_0_zz_yz_y_xz, g_y_x_0_0_zz_yz_y_yy, g_y_x_0_0_zz_yz_y_yz, g_y_x_0_0_zz_yz_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yz_y_xx[i] = 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_y_xy[i] = 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_y_xz[i] = 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_y_yy[i] = 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_y_yz[i] = 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_y_zz[i] = 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2568-2574)

    #pragma omp simd aligned(g_y_x_0_0_zz_yz_z_xx, g_y_x_0_0_zz_yz_z_xy, g_y_x_0_0_zz_yz_z_xz, g_y_x_0_0_zz_yz_z_yy, g_y_x_0_0_zz_yz_z_yz, g_y_x_0_0_zz_yz_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_yz_z_xx[i] = 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_z_xy[i] = 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_z_xz[i] = 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_z_yy[i] = 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_z_yz[i] = 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_yz_z_zz[i] = 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2574-2580)

    #pragma omp simd aligned(g_y_x_0_0_zz_zz_x_xx, g_y_x_0_0_zz_zz_x_xy, g_y_x_0_0_zz_zz_x_xz, g_y_x_0_0_zz_zz_x_yy, g_y_x_0_0_zz_zz_x_yz, g_y_x_0_0_zz_zz_x_zz, g_yzz_xzz_x_xx, g_yzz_xzz_x_xy, g_yzz_xzz_x_xz, g_yzz_xzz_x_yy, g_yzz_xzz_x_yz, g_yzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_zz_x_xx[i] = 4.0 * g_yzz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_x_xy[i] = 4.0 * g_yzz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_x_xz[i] = 4.0 * g_yzz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_x_yy[i] = 4.0 * g_yzz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_x_yz[i] = 4.0 * g_yzz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_x_zz[i] = 4.0 * g_yzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2580-2586)

    #pragma omp simd aligned(g_y_x_0_0_zz_zz_y_xx, g_y_x_0_0_zz_zz_y_xy, g_y_x_0_0_zz_zz_y_xz, g_y_x_0_0_zz_zz_y_yy, g_y_x_0_0_zz_zz_y_yz, g_y_x_0_0_zz_zz_y_zz, g_yzz_xzz_y_xx, g_yzz_xzz_y_xy, g_yzz_xzz_y_xz, g_yzz_xzz_y_yy, g_yzz_xzz_y_yz, g_yzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_zz_y_xx[i] = 4.0 * g_yzz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_y_xy[i] = 4.0 * g_yzz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_y_xz[i] = 4.0 * g_yzz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_y_yy[i] = 4.0 * g_yzz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_y_yz[i] = 4.0 * g_yzz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_y_zz[i] = 4.0 * g_yzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2586-2592)

    #pragma omp simd aligned(g_y_x_0_0_zz_zz_z_xx, g_y_x_0_0_zz_zz_z_xy, g_y_x_0_0_zz_zz_z_xz, g_y_x_0_0_zz_zz_z_yy, g_y_x_0_0_zz_zz_z_yz, g_y_x_0_0_zz_zz_z_zz, g_yzz_xzz_z_xx, g_yzz_xzz_z_xy, g_yzz_xzz_z_xz, g_yzz_xzz_z_yy, g_yzz_xzz_z_yz, g_yzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_x_0_0_zz_zz_z_xx[i] = 4.0 * g_yzz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_z_xy[i] = 4.0 * g_yzz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_z_xz[i] = 4.0 * g_yzz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_z_yy[i] = 4.0 * g_yzz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_z_yz[i] = 4.0 * g_yzz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_x_0_0_zz_zz_z_zz[i] = 4.0 * g_yzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2592-2598)

    #pragma omp simd aligned(g_xxy_xxy_x_xx, g_xxy_xxy_x_xy, g_xxy_xxy_x_xz, g_xxy_xxy_x_yy, g_xxy_xxy_x_yz, g_xxy_xxy_x_zz, g_y_y_0_0_xx_xx_x_xx, g_y_y_0_0_xx_xx_x_xy, g_y_y_0_0_xx_xx_x_xz, g_y_y_0_0_xx_xx_x_yy, g_y_y_0_0_xx_xx_x_yz, g_y_y_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xx_x_xx[i] = 4.0 * g_xxy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_x_xy[i] = 4.0 * g_xxy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_x_xz[i] = 4.0 * g_xxy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_x_yy[i] = 4.0 * g_xxy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_x_yz[i] = 4.0 * g_xxy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_x_zz[i] = 4.0 * g_xxy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2598-2604)

    #pragma omp simd aligned(g_xxy_xxy_y_xx, g_xxy_xxy_y_xy, g_xxy_xxy_y_xz, g_xxy_xxy_y_yy, g_xxy_xxy_y_yz, g_xxy_xxy_y_zz, g_y_y_0_0_xx_xx_y_xx, g_y_y_0_0_xx_xx_y_xy, g_y_y_0_0_xx_xx_y_xz, g_y_y_0_0_xx_xx_y_yy, g_y_y_0_0_xx_xx_y_yz, g_y_y_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xx_y_xx[i] = 4.0 * g_xxy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_y_xy[i] = 4.0 * g_xxy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_y_xz[i] = 4.0 * g_xxy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_y_yy[i] = 4.0 * g_xxy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_y_yz[i] = 4.0 * g_xxy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_y_zz[i] = 4.0 * g_xxy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2604-2610)

    #pragma omp simd aligned(g_xxy_xxy_z_xx, g_xxy_xxy_z_xy, g_xxy_xxy_z_xz, g_xxy_xxy_z_yy, g_xxy_xxy_z_yz, g_xxy_xxy_z_zz, g_y_y_0_0_xx_xx_z_xx, g_y_y_0_0_xx_xx_z_xy, g_y_y_0_0_xx_xx_z_xz, g_y_y_0_0_xx_xx_z_yy, g_y_y_0_0_xx_xx_z_yz, g_y_y_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xx_z_xx[i] = 4.0 * g_xxy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_z_xy[i] = 4.0 * g_xxy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_z_xz[i] = 4.0 * g_xxy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_z_yy[i] = 4.0 * g_xxy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_z_yz[i] = 4.0 * g_xxy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xx_z_zz[i] = 4.0 * g_xxy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2610-2616)

    #pragma omp simd aligned(g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xyy_x_xx, g_xxy_xyy_x_xy, g_xxy_xyy_x_xz, g_xxy_xyy_x_yy, g_xxy_xyy_x_yz, g_xxy_xyy_x_zz, g_y_y_0_0_xx_xy_x_xx, g_y_y_0_0_xx_xy_x_xy, g_y_y_0_0_xx_xy_x_xz, g_y_y_0_0_xx_xy_x_yy, g_y_y_0_0_xx_xy_x_yz, g_y_y_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xy_x_xx[i] = -2.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_x_xy[i] = -2.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_x_xz[i] = -2.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_x_yy[i] = -2.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_x_yz[i] = -2.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_x_zz[i] = -2.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2616-2622)

    #pragma omp simd aligned(g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xyy_y_xx, g_xxy_xyy_y_xy, g_xxy_xyy_y_xz, g_xxy_xyy_y_yy, g_xxy_xyy_y_yz, g_xxy_xyy_y_zz, g_y_y_0_0_xx_xy_y_xx, g_y_y_0_0_xx_xy_y_xy, g_y_y_0_0_xx_xy_y_xz, g_y_y_0_0_xx_xy_y_yy, g_y_y_0_0_xx_xy_y_yz, g_y_y_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xy_y_xx[i] = -2.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_y_xy[i] = -2.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_y_xz[i] = -2.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_y_yy[i] = -2.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_y_yz[i] = -2.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_y_zz[i] = -2.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2622-2628)

    #pragma omp simd aligned(g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xyy_z_xx, g_xxy_xyy_z_xy, g_xxy_xyy_z_xz, g_xxy_xyy_z_yy, g_xxy_xyy_z_yz, g_xxy_xyy_z_zz, g_y_y_0_0_xx_xy_z_xx, g_y_y_0_0_xx_xy_z_xy, g_y_y_0_0_xx_xy_z_xz, g_y_y_0_0_xx_xy_z_yy, g_y_y_0_0_xx_xy_z_yz, g_y_y_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xy_z_xx[i] = -2.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_z_xy[i] = -2.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_z_xz[i] = -2.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_z_yy[i] = -2.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_z_yz[i] = -2.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xy_z_zz[i] = -2.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2628-2634)

    #pragma omp simd aligned(g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_y_0_0_xx_xz_x_xx, g_y_y_0_0_xx_xz_x_xy, g_y_y_0_0_xx_xz_x_xz, g_y_y_0_0_xx_xz_x_yy, g_y_y_0_0_xx_xz_x_yz, g_y_y_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xz_x_xx[i] = 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_x_xy[i] = 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_x_xz[i] = 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_x_yy[i] = 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_x_yz[i] = 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_x_zz[i] = 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2634-2640)

    #pragma omp simd aligned(g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_y_0_0_xx_xz_y_xx, g_y_y_0_0_xx_xz_y_xy, g_y_y_0_0_xx_xz_y_xz, g_y_y_0_0_xx_xz_y_yy, g_y_y_0_0_xx_xz_y_yz, g_y_y_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xz_y_xx[i] = 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_y_xy[i] = 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_y_xz[i] = 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_y_yy[i] = 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_y_yz[i] = 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_y_zz[i] = 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2640-2646)

    #pragma omp simd aligned(g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_y_0_0_xx_xz_z_xx, g_y_y_0_0_xx_xz_z_xy, g_y_y_0_0_xx_xz_z_xz, g_y_y_0_0_xx_xz_z_yy, g_y_y_0_0_xx_xz_z_yz, g_y_y_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_xz_z_xx[i] = 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_z_xy[i] = 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_z_xz[i] = 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_z_yy[i] = 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_z_yz[i] = 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_xz_z_zz[i] = 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2646-2652)

    #pragma omp simd aligned(g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_xxy_yyy_x_xx, g_xxy_yyy_x_xy, g_xxy_yyy_x_xz, g_xxy_yyy_x_yy, g_xxy_yyy_x_yz, g_xxy_yyy_x_zz, g_y_y_0_0_xx_yy_x_xx, g_y_y_0_0_xx_yy_x_xy, g_y_y_0_0_xx_yy_x_xz, g_y_y_0_0_xx_yy_x_yy, g_y_y_0_0_xx_yy_x_yz, g_y_y_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yy_x_xx[i] = -4.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_x_xy[i] = -4.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_x_xz[i] = -4.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_x_yy[i] = -4.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_x_yz[i] = -4.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_x_zz[i] = -4.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2652-2658)

    #pragma omp simd aligned(g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_xxy_yyy_y_xx, g_xxy_yyy_y_xy, g_xxy_yyy_y_xz, g_xxy_yyy_y_yy, g_xxy_yyy_y_yz, g_xxy_yyy_y_zz, g_y_y_0_0_xx_yy_y_xx, g_y_y_0_0_xx_yy_y_xy, g_y_y_0_0_xx_yy_y_xz, g_y_y_0_0_xx_yy_y_yy, g_y_y_0_0_xx_yy_y_yz, g_y_y_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yy_y_xx[i] = -4.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_y_xy[i] = -4.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_y_xz[i] = -4.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_y_yy[i] = -4.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_y_yz[i] = -4.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_y_zz[i] = -4.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2658-2664)

    #pragma omp simd aligned(g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_xxy_yyy_z_xx, g_xxy_yyy_z_xy, g_xxy_yyy_z_xz, g_xxy_yyy_z_yy, g_xxy_yyy_z_yz, g_xxy_yyy_z_zz, g_y_y_0_0_xx_yy_z_xx, g_y_y_0_0_xx_yy_z_xy, g_y_y_0_0_xx_yy_z_xz, g_y_y_0_0_xx_yy_z_yy, g_y_y_0_0_xx_yy_z_yz, g_y_y_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yy_z_xx[i] = -4.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_z_xy[i] = -4.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_z_xz[i] = -4.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_z_yy[i] = -4.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_z_yz[i] = -4.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yy_z_zz[i] = -4.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2664-2670)

    #pragma omp simd aligned(g_xxy_yyz_x_xx, g_xxy_yyz_x_xy, g_xxy_yyz_x_xz, g_xxy_yyz_x_yy, g_xxy_yyz_x_yz, g_xxy_yyz_x_zz, g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_y_y_0_0_xx_yz_x_xx, g_y_y_0_0_xx_yz_x_xy, g_y_y_0_0_xx_yz_x_xz, g_y_y_0_0_xx_yz_x_yy, g_y_y_0_0_xx_yz_x_yz, g_y_y_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yz_x_xx[i] = -2.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_x_xy[i] = -2.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_x_xz[i] = -2.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_x_yy[i] = -2.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_x_yz[i] = -2.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_x_zz[i] = -2.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2670-2676)

    #pragma omp simd aligned(g_xxy_yyz_y_xx, g_xxy_yyz_y_xy, g_xxy_yyz_y_xz, g_xxy_yyz_y_yy, g_xxy_yyz_y_yz, g_xxy_yyz_y_zz, g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_y_y_0_0_xx_yz_y_xx, g_y_y_0_0_xx_yz_y_xy, g_y_y_0_0_xx_yz_y_xz, g_y_y_0_0_xx_yz_y_yy, g_y_y_0_0_xx_yz_y_yz, g_y_y_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yz_y_xx[i] = -2.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_y_xy[i] = -2.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_y_xz[i] = -2.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_y_yy[i] = -2.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_y_yz[i] = -2.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_y_zz[i] = -2.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2676-2682)

    #pragma omp simd aligned(g_xxy_yyz_z_xx, g_xxy_yyz_z_xy, g_xxy_yyz_z_xz, g_xxy_yyz_z_yy, g_xxy_yyz_z_yz, g_xxy_yyz_z_zz, g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_y_y_0_0_xx_yz_z_xx, g_y_y_0_0_xx_yz_z_xy, g_y_y_0_0_xx_yz_z_xz, g_y_y_0_0_xx_yz_z_yy, g_y_y_0_0_xx_yz_z_yz, g_y_y_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_yz_z_xx[i] = -2.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_z_xy[i] = -2.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_z_xz[i] = -2.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_z_yy[i] = -2.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_z_yz[i] = -2.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_yz_z_zz[i] = -2.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2682-2688)

    #pragma omp simd aligned(g_xxy_yzz_x_xx, g_xxy_yzz_x_xy, g_xxy_yzz_x_xz, g_xxy_yzz_x_yy, g_xxy_yzz_x_yz, g_xxy_yzz_x_zz, g_y_y_0_0_xx_zz_x_xx, g_y_y_0_0_xx_zz_x_xy, g_y_y_0_0_xx_zz_x_xz, g_y_y_0_0_xx_zz_x_yy, g_y_y_0_0_xx_zz_x_yz, g_y_y_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_zz_x_xx[i] = 4.0 * g_xxy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_x_xy[i] = 4.0 * g_xxy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_x_xz[i] = 4.0 * g_xxy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_x_yy[i] = 4.0 * g_xxy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_x_yz[i] = 4.0 * g_xxy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_x_zz[i] = 4.0 * g_xxy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2688-2694)

    #pragma omp simd aligned(g_xxy_yzz_y_xx, g_xxy_yzz_y_xy, g_xxy_yzz_y_xz, g_xxy_yzz_y_yy, g_xxy_yzz_y_yz, g_xxy_yzz_y_zz, g_y_y_0_0_xx_zz_y_xx, g_y_y_0_0_xx_zz_y_xy, g_y_y_0_0_xx_zz_y_xz, g_y_y_0_0_xx_zz_y_yy, g_y_y_0_0_xx_zz_y_yz, g_y_y_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_zz_y_xx[i] = 4.0 * g_xxy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_y_xy[i] = 4.0 * g_xxy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_y_xz[i] = 4.0 * g_xxy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_y_yy[i] = 4.0 * g_xxy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_y_yz[i] = 4.0 * g_xxy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_y_zz[i] = 4.0 * g_xxy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2694-2700)

    #pragma omp simd aligned(g_xxy_yzz_z_xx, g_xxy_yzz_z_xy, g_xxy_yzz_z_xz, g_xxy_yzz_z_yy, g_xxy_yzz_z_yz, g_xxy_yzz_z_zz, g_y_y_0_0_xx_zz_z_xx, g_y_y_0_0_xx_zz_z_xy, g_y_y_0_0_xx_zz_z_xz, g_y_y_0_0_xx_zz_z_yy, g_y_y_0_0_xx_zz_z_yz, g_y_y_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xx_zz_z_xx[i] = 4.0 * g_xxy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_z_xy[i] = 4.0 * g_xxy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_z_xz[i] = 4.0 * g_xxy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_z_yy[i] = 4.0 * g_xxy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_z_yz[i] = 4.0 * g_xxy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xx_zz_z_zz[i] = 4.0 * g_xxy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2700-2706)

    #pragma omp simd aligned(g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_xyy_xxy_x_xx, g_xyy_xxy_x_xy, g_xyy_xxy_x_xz, g_xyy_xxy_x_yy, g_xyy_xxy_x_yz, g_xyy_xxy_x_zz, g_y_y_0_0_xy_xx_x_xx, g_y_y_0_0_xy_xx_x_xy, g_y_y_0_0_xy_xx_x_xz, g_y_y_0_0_xy_xx_x_yy, g_y_y_0_0_xy_xx_x_yz, g_y_y_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xx_x_xx[i] = -2.0 * g_x_xxy_x_xx[i] * b_exp + 4.0 * g_xyy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_x_xy[i] = -2.0 * g_x_xxy_x_xy[i] * b_exp + 4.0 * g_xyy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_x_xz[i] = -2.0 * g_x_xxy_x_xz[i] * b_exp + 4.0 * g_xyy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_x_yy[i] = -2.0 * g_x_xxy_x_yy[i] * b_exp + 4.0 * g_xyy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_x_yz[i] = -2.0 * g_x_xxy_x_yz[i] * b_exp + 4.0 * g_xyy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_x_zz[i] = -2.0 * g_x_xxy_x_zz[i] * b_exp + 4.0 * g_xyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2706-2712)

    #pragma omp simd aligned(g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_xyy_xxy_y_xx, g_xyy_xxy_y_xy, g_xyy_xxy_y_xz, g_xyy_xxy_y_yy, g_xyy_xxy_y_yz, g_xyy_xxy_y_zz, g_y_y_0_0_xy_xx_y_xx, g_y_y_0_0_xy_xx_y_xy, g_y_y_0_0_xy_xx_y_xz, g_y_y_0_0_xy_xx_y_yy, g_y_y_0_0_xy_xx_y_yz, g_y_y_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xx_y_xx[i] = -2.0 * g_x_xxy_y_xx[i] * b_exp + 4.0 * g_xyy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_y_xy[i] = -2.0 * g_x_xxy_y_xy[i] * b_exp + 4.0 * g_xyy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_y_xz[i] = -2.0 * g_x_xxy_y_xz[i] * b_exp + 4.0 * g_xyy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_y_yy[i] = -2.0 * g_x_xxy_y_yy[i] * b_exp + 4.0 * g_xyy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_y_yz[i] = -2.0 * g_x_xxy_y_yz[i] * b_exp + 4.0 * g_xyy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_y_zz[i] = -2.0 * g_x_xxy_y_zz[i] * b_exp + 4.0 * g_xyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2712-2718)

    #pragma omp simd aligned(g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_xyy_xxy_z_xx, g_xyy_xxy_z_xy, g_xyy_xxy_z_xz, g_xyy_xxy_z_yy, g_xyy_xxy_z_yz, g_xyy_xxy_z_zz, g_y_y_0_0_xy_xx_z_xx, g_y_y_0_0_xy_xx_z_xy, g_y_y_0_0_xy_xx_z_xz, g_y_y_0_0_xy_xx_z_yy, g_y_y_0_0_xy_xx_z_yz, g_y_y_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xx_z_xx[i] = -2.0 * g_x_xxy_z_xx[i] * b_exp + 4.0 * g_xyy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_z_xy[i] = -2.0 * g_x_xxy_z_xy[i] * b_exp + 4.0 * g_xyy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_z_xz[i] = -2.0 * g_x_xxy_z_xz[i] * b_exp + 4.0 * g_xyy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_z_yy[i] = -2.0 * g_x_xxy_z_yy[i] * b_exp + 4.0 * g_xyy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_z_yz[i] = -2.0 * g_x_xxy_z_yz[i] * b_exp + 4.0 * g_xyy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xx_z_zz[i] = -2.0 * g_x_xxy_z_zz[i] * b_exp + 4.0 * g_xyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2718-2724)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xyy_x_xx, g_xyy_xyy_x_xy, g_xyy_xyy_x_xz, g_xyy_xyy_x_yy, g_xyy_xyy_x_yz, g_xyy_xyy_x_zz, g_y_y_0_0_xy_xy_x_xx, g_y_y_0_0_xy_xy_x_xy, g_y_y_0_0_xy_xy_x_xz, g_y_y_0_0_xy_xy_x_yy, g_y_y_0_0_xy_xy_x_yz, g_y_y_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xy_x_xx[i] = g_x_x_x_xx[i] - 2.0 * g_x_xyy_x_xx[i] * b_exp - 2.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_x_xy[i] = g_x_x_x_xy[i] - 2.0 * g_x_xyy_x_xy[i] * b_exp - 2.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_x_xz[i] = g_x_x_x_xz[i] - 2.0 * g_x_xyy_x_xz[i] * b_exp - 2.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_x_yy[i] = g_x_x_x_yy[i] - 2.0 * g_x_xyy_x_yy[i] * b_exp - 2.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_x_yz[i] = g_x_x_x_yz[i] - 2.0 * g_x_xyy_x_yz[i] * b_exp - 2.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_x_zz[i] = g_x_x_x_zz[i] - 2.0 * g_x_xyy_x_zz[i] * b_exp - 2.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2724-2730)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xyy_y_xx, g_xyy_xyy_y_xy, g_xyy_xyy_y_xz, g_xyy_xyy_y_yy, g_xyy_xyy_y_yz, g_xyy_xyy_y_zz, g_y_y_0_0_xy_xy_y_xx, g_y_y_0_0_xy_xy_y_xy, g_y_y_0_0_xy_xy_y_xz, g_y_y_0_0_xy_xy_y_yy, g_y_y_0_0_xy_xy_y_yz, g_y_y_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xy_y_xx[i] = g_x_x_y_xx[i] - 2.0 * g_x_xyy_y_xx[i] * b_exp - 2.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_y_xy[i] = g_x_x_y_xy[i] - 2.0 * g_x_xyy_y_xy[i] * b_exp - 2.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_y_xz[i] = g_x_x_y_xz[i] - 2.0 * g_x_xyy_y_xz[i] * b_exp - 2.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_y_yy[i] = g_x_x_y_yy[i] - 2.0 * g_x_xyy_y_yy[i] * b_exp - 2.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_y_yz[i] = g_x_x_y_yz[i] - 2.0 * g_x_xyy_y_yz[i] * b_exp - 2.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_y_zz[i] = g_x_x_y_zz[i] - 2.0 * g_x_xyy_y_zz[i] * b_exp - 2.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2730-2736)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xyy_z_xx, g_xyy_xyy_z_xy, g_xyy_xyy_z_xz, g_xyy_xyy_z_yy, g_xyy_xyy_z_yz, g_xyy_xyy_z_zz, g_y_y_0_0_xy_xy_z_xx, g_y_y_0_0_xy_xy_z_xy, g_y_y_0_0_xy_xy_z_xz, g_y_y_0_0_xy_xy_z_yy, g_y_y_0_0_xy_xy_z_yz, g_y_y_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xy_z_xx[i] = g_x_x_z_xx[i] - 2.0 * g_x_xyy_z_xx[i] * b_exp - 2.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_z_xy[i] = g_x_x_z_xy[i] - 2.0 * g_x_xyy_z_xy[i] * b_exp - 2.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_z_xz[i] = g_x_x_z_xz[i] - 2.0 * g_x_xyy_z_xz[i] * b_exp - 2.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_z_yy[i] = g_x_x_z_yy[i] - 2.0 * g_x_xyy_z_yy[i] * b_exp - 2.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_z_yz[i] = g_x_x_z_yz[i] - 2.0 * g_x_xyy_z_yz[i] * b_exp - 2.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xy_z_zz[i] = g_x_x_z_zz[i] - 2.0 * g_x_xyy_z_zz[i] * b_exp - 2.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2736-2742)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz, g_y_y_0_0_xy_xz_x_xx, g_y_y_0_0_xy_xz_x_xy, g_y_y_0_0_xy_xz_x_xz, g_y_y_0_0_xy_xz_x_yy, g_y_y_0_0_xy_xz_x_yz, g_y_y_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xz_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2742-2748)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz, g_y_y_0_0_xy_xz_y_xx, g_y_y_0_0_xy_xz_y_xy, g_y_y_0_0_xy_xz_y_xz, g_y_y_0_0_xy_xz_y_yy, g_y_y_0_0_xy_xz_y_yz, g_y_y_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xz_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2748-2754)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz, g_y_y_0_0_xy_xz_z_xx, g_y_y_0_0_xy_xz_z_xy, g_y_y_0_0_xy_xz_z_xz, g_y_y_0_0_xy_xz_z_yy, g_y_y_0_0_xy_xz_z_yz, g_y_y_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_xz_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_xz_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2754-2760)

    #pragma omp simd aligned(g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yyy_x_xx, g_x_yyy_x_xy, g_x_yyy_x_xz, g_x_yyy_x_yy, g_x_yyy_x_yz, g_x_yyy_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz, g_xyy_yyy_x_xx, g_xyy_yyy_x_xy, g_xyy_yyy_x_xz, g_xyy_yyy_x_yy, g_xyy_yyy_x_yz, g_xyy_yyy_x_zz, g_y_y_0_0_xy_yy_x_xx, g_y_y_0_0_xy_yy_x_xy, g_y_y_0_0_xy_yy_x_xz, g_y_y_0_0_xy_yy_x_yy, g_y_y_0_0_xy_yy_x_yz, g_y_y_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yy_x_xx[i] = 2.0 * g_x_y_x_xx[i] - 2.0 * g_x_yyy_x_xx[i] * b_exp - 4.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_x_xy[i] = 2.0 * g_x_y_x_xy[i] - 2.0 * g_x_yyy_x_xy[i] * b_exp - 4.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_x_xz[i] = 2.0 * g_x_y_x_xz[i] - 2.0 * g_x_yyy_x_xz[i] * b_exp - 4.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_x_yy[i] = 2.0 * g_x_y_x_yy[i] - 2.0 * g_x_yyy_x_yy[i] * b_exp - 4.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_x_yz[i] = 2.0 * g_x_y_x_yz[i] - 2.0 * g_x_yyy_x_yz[i] * b_exp - 4.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_x_zz[i] = 2.0 * g_x_y_x_zz[i] - 2.0 * g_x_yyy_x_zz[i] * b_exp - 4.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2760-2766)

    #pragma omp simd aligned(g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yyy_y_xx, g_x_yyy_y_xy, g_x_yyy_y_xz, g_x_yyy_y_yy, g_x_yyy_y_yz, g_x_yyy_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz, g_xyy_yyy_y_xx, g_xyy_yyy_y_xy, g_xyy_yyy_y_xz, g_xyy_yyy_y_yy, g_xyy_yyy_y_yz, g_xyy_yyy_y_zz, g_y_y_0_0_xy_yy_y_xx, g_y_y_0_0_xy_yy_y_xy, g_y_y_0_0_xy_yy_y_xz, g_y_y_0_0_xy_yy_y_yy, g_y_y_0_0_xy_yy_y_yz, g_y_y_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yy_y_xx[i] = 2.0 * g_x_y_y_xx[i] - 2.0 * g_x_yyy_y_xx[i] * b_exp - 4.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_y_xy[i] = 2.0 * g_x_y_y_xy[i] - 2.0 * g_x_yyy_y_xy[i] * b_exp - 4.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_y_xz[i] = 2.0 * g_x_y_y_xz[i] - 2.0 * g_x_yyy_y_xz[i] * b_exp - 4.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_y_yy[i] = 2.0 * g_x_y_y_yy[i] - 2.0 * g_x_yyy_y_yy[i] * b_exp - 4.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_y_yz[i] = 2.0 * g_x_y_y_yz[i] - 2.0 * g_x_yyy_y_yz[i] * b_exp - 4.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_y_zz[i] = 2.0 * g_x_y_y_zz[i] - 2.0 * g_x_yyy_y_zz[i] * b_exp - 4.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2766-2772)

    #pragma omp simd aligned(g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yyy_z_xx, g_x_yyy_z_xy, g_x_yyy_z_xz, g_x_yyy_z_yy, g_x_yyy_z_yz, g_x_yyy_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz, g_xyy_yyy_z_xx, g_xyy_yyy_z_xy, g_xyy_yyy_z_xz, g_xyy_yyy_z_yy, g_xyy_yyy_z_yz, g_xyy_yyy_z_zz, g_y_y_0_0_xy_yy_z_xx, g_y_y_0_0_xy_yy_z_xy, g_y_y_0_0_xy_yy_z_xz, g_y_y_0_0_xy_yy_z_yy, g_y_y_0_0_xy_yy_z_yz, g_y_y_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yy_z_xx[i] = 2.0 * g_x_y_z_xx[i] - 2.0 * g_x_yyy_z_xx[i] * b_exp - 4.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_z_xy[i] = 2.0 * g_x_y_z_xy[i] - 2.0 * g_x_yyy_z_xy[i] * b_exp - 4.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_z_xz[i] = 2.0 * g_x_y_z_xz[i] - 2.0 * g_x_yyy_z_xz[i] * b_exp - 4.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_z_yy[i] = 2.0 * g_x_y_z_yy[i] - 2.0 * g_x_yyy_z_yy[i] * b_exp - 4.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_z_yz[i] = 2.0 * g_x_y_z_yz[i] - 2.0 * g_x_yyy_z_yz[i] * b_exp - 4.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yy_z_zz[i] = 2.0 * g_x_y_z_zz[i] - 2.0 * g_x_yyy_z_zz[i] * b_exp - 4.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2772-2778)

    #pragma omp simd aligned(g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xyy_yyz_x_xx, g_xyy_yyz_x_xy, g_xyy_yyz_x_xz, g_xyy_yyz_x_yy, g_xyy_yyz_x_yz, g_xyy_yyz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz, g_y_y_0_0_xy_yz_x_xx, g_y_y_0_0_xy_yz_x_xy, g_y_y_0_0_xy_yz_x_xz, g_y_y_0_0_xy_yz_x_yy, g_y_y_0_0_xy_yz_x_yz, g_y_y_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yz_x_xx[i] = g_x_z_x_xx[i] - 2.0 * g_x_yyz_x_xx[i] * b_exp - 2.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_x_xy[i] = g_x_z_x_xy[i] - 2.0 * g_x_yyz_x_xy[i] * b_exp - 2.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_x_xz[i] = g_x_z_x_xz[i] - 2.0 * g_x_yyz_x_xz[i] * b_exp - 2.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_x_yy[i] = g_x_z_x_yy[i] - 2.0 * g_x_yyz_x_yy[i] * b_exp - 2.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_x_yz[i] = g_x_z_x_yz[i] - 2.0 * g_x_yyz_x_yz[i] * b_exp - 2.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_x_zz[i] = g_x_z_x_zz[i] - 2.0 * g_x_yyz_x_zz[i] * b_exp - 2.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2778-2784)

    #pragma omp simd aligned(g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xyy_yyz_y_xx, g_xyy_yyz_y_xy, g_xyy_yyz_y_xz, g_xyy_yyz_y_yy, g_xyy_yyz_y_yz, g_xyy_yyz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz, g_y_y_0_0_xy_yz_y_xx, g_y_y_0_0_xy_yz_y_xy, g_y_y_0_0_xy_yz_y_xz, g_y_y_0_0_xy_yz_y_yy, g_y_y_0_0_xy_yz_y_yz, g_y_y_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yz_y_xx[i] = g_x_z_y_xx[i] - 2.0 * g_x_yyz_y_xx[i] * b_exp - 2.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_y_xy[i] = g_x_z_y_xy[i] - 2.0 * g_x_yyz_y_xy[i] * b_exp - 2.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_y_xz[i] = g_x_z_y_xz[i] - 2.0 * g_x_yyz_y_xz[i] * b_exp - 2.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_y_yy[i] = g_x_z_y_yy[i] - 2.0 * g_x_yyz_y_yy[i] * b_exp - 2.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_y_yz[i] = g_x_z_y_yz[i] - 2.0 * g_x_yyz_y_yz[i] * b_exp - 2.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_y_zz[i] = g_x_z_y_zz[i] - 2.0 * g_x_yyz_y_zz[i] * b_exp - 2.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2784-2790)

    #pragma omp simd aligned(g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xyy_yyz_z_xx, g_xyy_yyz_z_xy, g_xyy_yyz_z_xz, g_xyy_yyz_z_yy, g_xyy_yyz_z_yz, g_xyy_yyz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz, g_y_y_0_0_xy_yz_z_xx, g_y_y_0_0_xy_yz_z_xy, g_y_y_0_0_xy_yz_z_xz, g_y_y_0_0_xy_yz_z_yy, g_y_y_0_0_xy_yz_z_yz, g_y_y_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_yz_z_xx[i] = g_x_z_z_xx[i] - 2.0 * g_x_yyz_z_xx[i] * b_exp - 2.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_z_xy[i] = g_x_z_z_xy[i] - 2.0 * g_x_yyz_z_xy[i] * b_exp - 2.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_z_xz[i] = g_x_z_z_xz[i] - 2.0 * g_x_yyz_z_xz[i] * b_exp - 2.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_z_yy[i] = g_x_z_z_yy[i] - 2.0 * g_x_yyz_z_yy[i] * b_exp - 2.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_z_yz[i] = g_x_z_z_yz[i] - 2.0 * g_x_yyz_z_yz[i] * b_exp - 2.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_yz_z_zz[i] = g_x_z_z_zz[i] - 2.0 * g_x_yyz_z_zz[i] * b_exp - 2.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2790-2796)

    #pragma omp simd aligned(g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_xyy_yzz_x_xx, g_xyy_yzz_x_xy, g_xyy_yzz_x_xz, g_xyy_yzz_x_yy, g_xyy_yzz_x_yz, g_xyy_yzz_x_zz, g_y_y_0_0_xy_zz_x_xx, g_y_y_0_0_xy_zz_x_xy, g_y_y_0_0_xy_zz_x_xz, g_y_y_0_0_xy_zz_x_yy, g_y_y_0_0_xy_zz_x_yz, g_y_y_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_zz_x_xx[i] = -2.0 * g_x_yzz_x_xx[i] * b_exp + 4.0 * g_xyy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_x_xy[i] = -2.0 * g_x_yzz_x_xy[i] * b_exp + 4.0 * g_xyy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_x_xz[i] = -2.0 * g_x_yzz_x_xz[i] * b_exp + 4.0 * g_xyy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_x_yy[i] = -2.0 * g_x_yzz_x_yy[i] * b_exp + 4.0 * g_xyy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_x_yz[i] = -2.0 * g_x_yzz_x_yz[i] * b_exp + 4.0 * g_xyy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_x_zz[i] = -2.0 * g_x_yzz_x_zz[i] * b_exp + 4.0 * g_xyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2796-2802)

    #pragma omp simd aligned(g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_xyy_yzz_y_xx, g_xyy_yzz_y_xy, g_xyy_yzz_y_xz, g_xyy_yzz_y_yy, g_xyy_yzz_y_yz, g_xyy_yzz_y_zz, g_y_y_0_0_xy_zz_y_xx, g_y_y_0_0_xy_zz_y_xy, g_y_y_0_0_xy_zz_y_xz, g_y_y_0_0_xy_zz_y_yy, g_y_y_0_0_xy_zz_y_yz, g_y_y_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_zz_y_xx[i] = -2.0 * g_x_yzz_y_xx[i] * b_exp + 4.0 * g_xyy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_y_xy[i] = -2.0 * g_x_yzz_y_xy[i] * b_exp + 4.0 * g_xyy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_y_xz[i] = -2.0 * g_x_yzz_y_xz[i] * b_exp + 4.0 * g_xyy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_y_yy[i] = -2.0 * g_x_yzz_y_yy[i] * b_exp + 4.0 * g_xyy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_y_yz[i] = -2.0 * g_x_yzz_y_yz[i] * b_exp + 4.0 * g_xyy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_y_zz[i] = -2.0 * g_x_yzz_y_zz[i] * b_exp + 4.0 * g_xyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2802-2808)

    #pragma omp simd aligned(g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_xyy_yzz_z_xx, g_xyy_yzz_z_xy, g_xyy_yzz_z_xz, g_xyy_yzz_z_yy, g_xyy_yzz_z_yz, g_xyy_yzz_z_zz, g_y_y_0_0_xy_zz_z_xx, g_y_y_0_0_xy_zz_z_xy, g_y_y_0_0_xy_zz_z_xz, g_y_y_0_0_xy_zz_z_yy, g_y_y_0_0_xy_zz_z_yz, g_y_y_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xy_zz_z_xx[i] = -2.0 * g_x_yzz_z_xx[i] * b_exp + 4.0 * g_xyy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_z_xy[i] = -2.0 * g_x_yzz_z_xy[i] * b_exp + 4.0 * g_xyy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_z_xz[i] = -2.0 * g_x_yzz_z_xz[i] * b_exp + 4.0 * g_xyy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_z_yy[i] = -2.0 * g_x_yzz_z_yy[i] * b_exp + 4.0 * g_xyy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_z_yz[i] = -2.0 * g_x_yzz_z_yz[i] * b_exp + 4.0 * g_xyy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xy_zz_z_zz[i] = -2.0 * g_x_yzz_z_zz[i] * b_exp + 4.0 * g_xyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2808-2814)

    #pragma omp simd aligned(g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz, g_y_y_0_0_xz_xx_x_xx, g_y_y_0_0_xz_xx_x_xy, g_y_y_0_0_xz_xx_x_xz, g_y_y_0_0_xz_xx_x_yy, g_y_y_0_0_xz_xx_x_yz, g_y_y_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xx_x_xx[i] = 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_x_xy[i] = 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_x_xz[i] = 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_x_yy[i] = 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_x_yz[i] = 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_x_zz[i] = 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2814-2820)

    #pragma omp simd aligned(g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz, g_y_y_0_0_xz_xx_y_xx, g_y_y_0_0_xz_xx_y_xy, g_y_y_0_0_xz_xx_y_xz, g_y_y_0_0_xz_xx_y_yy, g_y_y_0_0_xz_xx_y_yz, g_y_y_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xx_y_xx[i] = 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_y_xy[i] = 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_y_xz[i] = 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_y_yy[i] = 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_y_yz[i] = 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_y_zz[i] = 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2820-2826)

    #pragma omp simd aligned(g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz, g_y_y_0_0_xz_xx_z_xx, g_y_y_0_0_xz_xx_z_xy, g_y_y_0_0_xz_xx_z_xz, g_y_y_0_0_xz_xx_z_yy, g_y_y_0_0_xz_xx_z_yz, g_y_y_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xx_z_xx[i] = 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_z_xy[i] = 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_z_xz[i] = 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_z_yy[i] = 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_z_yz[i] = 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xx_z_zz[i] = 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2826-2832)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz, g_y_y_0_0_xz_xy_x_xx, g_y_y_0_0_xz_xy_x_xy, g_y_y_0_0_xz_xy_x_xz, g_y_y_0_0_xz_xy_x_yy, g_y_y_0_0_xz_xy_x_yz, g_y_y_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xy_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2832-2838)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz, g_y_y_0_0_xz_xy_y_xx, g_y_y_0_0_xz_xy_y_xy, g_y_y_0_0_xz_xy_y_xz, g_y_y_0_0_xz_xy_y_yy, g_y_y_0_0_xz_xy_y_yz, g_y_y_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xy_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2838-2844)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz, g_y_y_0_0_xz_xy_z_xx, g_y_y_0_0_xz_xy_z_xy, g_y_y_0_0_xz_xy_z_xz, g_y_y_0_0_xz_xy_z_yy, g_y_y_0_0_xz_xy_z_yz, g_y_y_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xy_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xy_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2844-2850)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_y_y_0_0_xz_xz_x_xx, g_y_y_0_0_xz_xz_x_xy, g_y_y_0_0_xz_xz_x_xz, g_y_y_0_0_xz_xz_x_yy, g_y_y_0_0_xz_xz_x_yz, g_y_y_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2850-2856)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_y_y_0_0_xz_xz_y_xx, g_y_y_0_0_xz_xz_y_xy, g_y_y_0_0_xz_xz_y_xz, g_y_y_0_0_xz_xz_y_yy, g_y_y_0_0_xz_xz_y_yz, g_y_y_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2856-2862)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_y_y_0_0_xz_xz_z_xx, g_y_y_0_0_xz_xz_z_xy, g_y_y_0_0_xz_xz_z_xz, g_y_y_0_0_xz_xz_z_yy, g_y_y_0_0_xz_xz_z_yz, g_y_y_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_xz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_xz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2862-2868)

    #pragma omp simd aligned(g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yyy_x_xx, g_xyz_yyy_x_xy, g_xyz_yyy_x_xz, g_xyz_yyy_x_yy, g_xyz_yyy_x_yz, g_xyz_yyy_x_zz, g_y_y_0_0_xz_yy_x_xx, g_y_y_0_0_xz_yy_x_xy, g_y_y_0_0_xz_yy_x_xz, g_y_y_0_0_xz_yy_x_yy, g_y_y_0_0_xz_yy_x_yz, g_y_y_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yy_x_xx[i] = -4.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_x_xy[i] = -4.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_x_xz[i] = -4.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_x_yy[i] = -4.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_x_yz[i] = -4.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_x_zz[i] = -4.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2868-2874)

    #pragma omp simd aligned(g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yyy_y_xx, g_xyz_yyy_y_xy, g_xyz_yyy_y_xz, g_xyz_yyy_y_yy, g_xyz_yyy_y_yz, g_xyz_yyy_y_zz, g_y_y_0_0_xz_yy_y_xx, g_y_y_0_0_xz_yy_y_xy, g_y_y_0_0_xz_yy_y_xz, g_y_y_0_0_xz_yy_y_yy, g_y_y_0_0_xz_yy_y_yz, g_y_y_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yy_y_xx[i] = -4.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_y_xy[i] = -4.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_y_xz[i] = -4.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_y_yy[i] = -4.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_y_yz[i] = -4.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_y_zz[i] = -4.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2874-2880)

    #pragma omp simd aligned(g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yyy_z_xx, g_xyz_yyy_z_xy, g_xyz_yyy_z_xz, g_xyz_yyy_z_yy, g_xyz_yyy_z_yz, g_xyz_yyy_z_zz, g_y_y_0_0_xz_yy_z_xx, g_y_y_0_0_xz_yy_z_xy, g_y_y_0_0_xz_yy_z_xz, g_y_y_0_0_xz_yy_z_yy, g_y_y_0_0_xz_yy_z_yz, g_y_y_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yy_z_xx[i] = -4.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_z_xy[i] = -4.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_z_xz[i] = -4.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_z_yy[i] = -4.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_z_yz[i] = -4.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yy_z_zz[i] = -4.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2880-2886)

    #pragma omp simd aligned(g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_y_y_0_0_xz_yz_x_xx, g_y_y_0_0_xz_yz_x_xy, g_y_y_0_0_xz_yz_x_xz, g_y_y_0_0_xz_yz_x_yy, g_y_y_0_0_xz_yz_x_yz, g_y_y_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2886-2892)

    #pragma omp simd aligned(g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_y_y_0_0_xz_yz_y_xx, g_y_y_0_0_xz_yz_y_xy, g_y_y_0_0_xz_yz_y_xz, g_y_y_0_0_xz_yz_y_yy, g_y_y_0_0_xz_yz_y_yz, g_y_y_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2892-2898)

    #pragma omp simd aligned(g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_y_y_0_0_xz_yz_z_xx, g_y_y_0_0_xz_yz_z_xy, g_y_y_0_0_xz_yz_z_xz, g_y_y_0_0_xz_yz_z_yy, g_y_y_0_0_xz_yz_z_yz, g_y_y_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_yz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_yz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2898-2904)

    #pragma omp simd aligned(g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz, g_y_y_0_0_xz_zz_x_xx, g_y_y_0_0_xz_zz_x_xy, g_y_y_0_0_xz_zz_x_xz, g_y_y_0_0_xz_zz_x_yy, g_y_y_0_0_xz_zz_x_yz, g_y_y_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_zz_x_xx[i] = 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_x_xy[i] = 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_x_xz[i] = 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_x_yy[i] = 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_x_yz[i] = 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_x_zz[i] = 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2904-2910)

    #pragma omp simd aligned(g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz, g_y_y_0_0_xz_zz_y_xx, g_y_y_0_0_xz_zz_y_xy, g_y_y_0_0_xz_zz_y_xz, g_y_y_0_0_xz_zz_y_yy, g_y_y_0_0_xz_zz_y_yz, g_y_y_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_zz_y_xx[i] = 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_y_xy[i] = 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_y_xz[i] = 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_y_yy[i] = 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_y_yz[i] = 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_y_zz[i] = 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2910-2916)

    #pragma omp simd aligned(g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz, g_y_y_0_0_xz_zz_z_xx, g_y_y_0_0_xz_zz_z_xy, g_y_y_0_0_xz_zz_z_xz, g_y_y_0_0_xz_zz_z_yy, g_y_y_0_0_xz_zz_z_yz, g_y_y_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_xz_zz_z_xx[i] = 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_z_xy[i] = 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_z_xz[i] = 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_z_yy[i] = 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_z_yz[i] = 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_xz_zz_z_zz[i] = 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2916-2922)

    #pragma omp simd aligned(g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz, g_y_y_0_0_yy_xx_x_xx, g_y_y_0_0_yy_xx_x_xy, g_y_y_0_0_yy_xx_x_xz, g_y_y_0_0_yy_xx_x_yy, g_y_y_0_0_yy_xx_x_yz, g_y_y_0_0_yy_xx_x_zz, g_yyy_xxy_x_xx, g_yyy_xxy_x_xy, g_yyy_xxy_x_xz, g_yyy_xxy_x_yy, g_yyy_xxy_x_yz, g_yyy_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xx_x_xx[i] = -4.0 * g_y_xxy_x_xx[i] * b_exp + 4.0 * g_yyy_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_x_xy[i] = -4.0 * g_y_xxy_x_xy[i] * b_exp + 4.0 * g_yyy_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_x_xz[i] = -4.0 * g_y_xxy_x_xz[i] * b_exp + 4.0 * g_yyy_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_x_yy[i] = -4.0 * g_y_xxy_x_yy[i] * b_exp + 4.0 * g_yyy_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_x_yz[i] = -4.0 * g_y_xxy_x_yz[i] * b_exp + 4.0 * g_yyy_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_x_zz[i] = -4.0 * g_y_xxy_x_zz[i] * b_exp + 4.0 * g_yyy_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2922-2928)

    #pragma omp simd aligned(g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz, g_y_y_0_0_yy_xx_y_xx, g_y_y_0_0_yy_xx_y_xy, g_y_y_0_0_yy_xx_y_xz, g_y_y_0_0_yy_xx_y_yy, g_y_y_0_0_yy_xx_y_yz, g_y_y_0_0_yy_xx_y_zz, g_yyy_xxy_y_xx, g_yyy_xxy_y_xy, g_yyy_xxy_y_xz, g_yyy_xxy_y_yy, g_yyy_xxy_y_yz, g_yyy_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xx_y_xx[i] = -4.0 * g_y_xxy_y_xx[i] * b_exp + 4.0 * g_yyy_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_y_xy[i] = -4.0 * g_y_xxy_y_xy[i] * b_exp + 4.0 * g_yyy_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_y_xz[i] = -4.0 * g_y_xxy_y_xz[i] * b_exp + 4.0 * g_yyy_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_y_yy[i] = -4.0 * g_y_xxy_y_yy[i] * b_exp + 4.0 * g_yyy_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_y_yz[i] = -4.0 * g_y_xxy_y_yz[i] * b_exp + 4.0 * g_yyy_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_y_zz[i] = -4.0 * g_y_xxy_y_zz[i] * b_exp + 4.0 * g_yyy_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2928-2934)

    #pragma omp simd aligned(g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz, g_y_y_0_0_yy_xx_z_xx, g_y_y_0_0_yy_xx_z_xy, g_y_y_0_0_yy_xx_z_xz, g_y_y_0_0_yy_xx_z_yy, g_y_y_0_0_yy_xx_z_yz, g_y_y_0_0_yy_xx_z_zz, g_yyy_xxy_z_xx, g_yyy_xxy_z_xy, g_yyy_xxy_z_xz, g_yyy_xxy_z_yy, g_yyy_xxy_z_yz, g_yyy_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xx_z_xx[i] = -4.0 * g_y_xxy_z_xx[i] * b_exp + 4.0 * g_yyy_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_z_xy[i] = -4.0 * g_y_xxy_z_xy[i] * b_exp + 4.0 * g_yyy_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_z_xz[i] = -4.0 * g_y_xxy_z_xz[i] * b_exp + 4.0 * g_yyy_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_z_yy[i] = -4.0 * g_y_xxy_z_yy[i] * b_exp + 4.0 * g_yyy_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_z_yz[i] = -4.0 * g_y_xxy_z_yz[i] * b_exp + 4.0 * g_yyy_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xx_z_zz[i] = -4.0 * g_y_xxy_z_zz[i] * b_exp + 4.0 * g_yyy_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2934-2940)

    #pragma omp simd aligned(g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz, g_y_y_0_0_yy_xy_x_xx, g_y_y_0_0_yy_xy_x_xy, g_y_y_0_0_yy_xy_x_xz, g_y_y_0_0_yy_xy_x_yy, g_y_y_0_0_yy_xy_x_yz, g_y_y_0_0_yy_xy_x_zz, g_yyy_x_x_xx, g_yyy_x_x_xy, g_yyy_x_x_xz, g_yyy_x_x_yy, g_yyy_x_x_yz, g_yyy_x_x_zz, g_yyy_xyy_x_xx, g_yyy_xyy_x_xy, g_yyy_xyy_x_xz, g_yyy_xyy_x_yy, g_yyy_xyy_x_yz, g_yyy_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xy_x_xx[i] = 2.0 * g_y_x_x_xx[i] - 4.0 * g_y_xyy_x_xx[i] * b_exp - 2.0 * g_yyy_x_x_xx[i] * a_exp + 4.0 * g_yyy_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_x_xy[i] = 2.0 * g_y_x_x_xy[i] - 4.0 * g_y_xyy_x_xy[i] * b_exp - 2.0 * g_yyy_x_x_xy[i] * a_exp + 4.0 * g_yyy_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_x_xz[i] = 2.0 * g_y_x_x_xz[i] - 4.0 * g_y_xyy_x_xz[i] * b_exp - 2.0 * g_yyy_x_x_xz[i] * a_exp + 4.0 * g_yyy_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_x_yy[i] = 2.0 * g_y_x_x_yy[i] - 4.0 * g_y_xyy_x_yy[i] * b_exp - 2.0 * g_yyy_x_x_yy[i] * a_exp + 4.0 * g_yyy_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_x_yz[i] = 2.0 * g_y_x_x_yz[i] - 4.0 * g_y_xyy_x_yz[i] * b_exp - 2.0 * g_yyy_x_x_yz[i] * a_exp + 4.0 * g_yyy_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_x_zz[i] = 2.0 * g_y_x_x_zz[i] - 4.0 * g_y_xyy_x_zz[i] * b_exp - 2.0 * g_yyy_x_x_zz[i] * a_exp + 4.0 * g_yyy_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2940-2946)

    #pragma omp simd aligned(g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz, g_y_y_0_0_yy_xy_y_xx, g_y_y_0_0_yy_xy_y_xy, g_y_y_0_0_yy_xy_y_xz, g_y_y_0_0_yy_xy_y_yy, g_y_y_0_0_yy_xy_y_yz, g_y_y_0_0_yy_xy_y_zz, g_yyy_x_y_xx, g_yyy_x_y_xy, g_yyy_x_y_xz, g_yyy_x_y_yy, g_yyy_x_y_yz, g_yyy_x_y_zz, g_yyy_xyy_y_xx, g_yyy_xyy_y_xy, g_yyy_xyy_y_xz, g_yyy_xyy_y_yy, g_yyy_xyy_y_yz, g_yyy_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xy_y_xx[i] = 2.0 * g_y_x_y_xx[i] - 4.0 * g_y_xyy_y_xx[i] * b_exp - 2.0 * g_yyy_x_y_xx[i] * a_exp + 4.0 * g_yyy_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_y_xy[i] = 2.0 * g_y_x_y_xy[i] - 4.0 * g_y_xyy_y_xy[i] * b_exp - 2.0 * g_yyy_x_y_xy[i] * a_exp + 4.0 * g_yyy_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_y_xz[i] = 2.0 * g_y_x_y_xz[i] - 4.0 * g_y_xyy_y_xz[i] * b_exp - 2.0 * g_yyy_x_y_xz[i] * a_exp + 4.0 * g_yyy_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_y_yy[i] = 2.0 * g_y_x_y_yy[i] - 4.0 * g_y_xyy_y_yy[i] * b_exp - 2.0 * g_yyy_x_y_yy[i] * a_exp + 4.0 * g_yyy_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_y_yz[i] = 2.0 * g_y_x_y_yz[i] - 4.0 * g_y_xyy_y_yz[i] * b_exp - 2.0 * g_yyy_x_y_yz[i] * a_exp + 4.0 * g_yyy_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_y_zz[i] = 2.0 * g_y_x_y_zz[i] - 4.0 * g_y_xyy_y_zz[i] * b_exp - 2.0 * g_yyy_x_y_zz[i] * a_exp + 4.0 * g_yyy_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2946-2952)

    #pragma omp simd aligned(g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz, g_y_y_0_0_yy_xy_z_xx, g_y_y_0_0_yy_xy_z_xy, g_y_y_0_0_yy_xy_z_xz, g_y_y_0_0_yy_xy_z_yy, g_y_y_0_0_yy_xy_z_yz, g_y_y_0_0_yy_xy_z_zz, g_yyy_x_z_xx, g_yyy_x_z_xy, g_yyy_x_z_xz, g_yyy_x_z_yy, g_yyy_x_z_yz, g_yyy_x_z_zz, g_yyy_xyy_z_xx, g_yyy_xyy_z_xy, g_yyy_xyy_z_xz, g_yyy_xyy_z_yy, g_yyy_xyy_z_yz, g_yyy_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xy_z_xx[i] = 2.0 * g_y_x_z_xx[i] - 4.0 * g_y_xyy_z_xx[i] * b_exp - 2.0 * g_yyy_x_z_xx[i] * a_exp + 4.0 * g_yyy_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_z_xy[i] = 2.0 * g_y_x_z_xy[i] - 4.0 * g_y_xyy_z_xy[i] * b_exp - 2.0 * g_yyy_x_z_xy[i] * a_exp + 4.0 * g_yyy_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_z_xz[i] = 2.0 * g_y_x_z_xz[i] - 4.0 * g_y_xyy_z_xz[i] * b_exp - 2.0 * g_yyy_x_z_xz[i] * a_exp + 4.0 * g_yyy_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_z_yy[i] = 2.0 * g_y_x_z_yy[i] - 4.0 * g_y_xyy_z_yy[i] * b_exp - 2.0 * g_yyy_x_z_yy[i] * a_exp + 4.0 * g_yyy_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_z_yz[i] = 2.0 * g_y_x_z_yz[i] - 4.0 * g_y_xyy_z_yz[i] * b_exp - 2.0 * g_yyy_x_z_yz[i] * a_exp + 4.0 * g_yyy_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xy_z_zz[i] = 2.0 * g_y_x_z_zz[i] - 4.0 * g_y_xyy_z_zz[i] * b_exp - 2.0 * g_yyy_x_z_zz[i] * a_exp + 4.0 * g_yyy_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2952-2958)

    #pragma omp simd aligned(g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_y_y_0_0_yy_xz_x_xx, g_y_y_0_0_yy_xz_x_xy, g_y_y_0_0_yy_xz_x_xz, g_y_y_0_0_yy_xz_x_yy, g_y_y_0_0_yy_xz_x_yz, g_y_y_0_0_yy_xz_x_zz, g_yyy_xyz_x_xx, g_yyy_xyz_x_xy, g_yyy_xyz_x_xz, g_yyy_xyz_x_yy, g_yyy_xyz_x_yz, g_yyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xz_x_xx[i] = -4.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_x_xy[i] = -4.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_x_xz[i] = -4.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_x_yy[i] = -4.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_x_yz[i] = -4.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_x_zz[i] = -4.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2958-2964)

    #pragma omp simd aligned(g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_y_y_0_0_yy_xz_y_xx, g_y_y_0_0_yy_xz_y_xy, g_y_y_0_0_yy_xz_y_xz, g_y_y_0_0_yy_xz_y_yy, g_y_y_0_0_yy_xz_y_yz, g_y_y_0_0_yy_xz_y_zz, g_yyy_xyz_y_xx, g_yyy_xyz_y_xy, g_yyy_xyz_y_xz, g_yyy_xyz_y_yy, g_yyy_xyz_y_yz, g_yyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xz_y_xx[i] = -4.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_y_xy[i] = -4.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_y_xz[i] = -4.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_y_yy[i] = -4.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_y_yz[i] = -4.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_y_zz[i] = -4.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2964-2970)

    #pragma omp simd aligned(g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_y_y_0_0_yy_xz_z_xx, g_y_y_0_0_yy_xz_z_xy, g_y_y_0_0_yy_xz_z_xz, g_y_y_0_0_yy_xz_z_yy, g_y_y_0_0_yy_xz_z_yz, g_y_y_0_0_yy_xz_z_zz, g_yyy_xyz_z_xx, g_yyy_xyz_z_xy, g_yyy_xyz_z_xz, g_yyy_xyz_z_yy, g_yyy_xyz_z_yz, g_yyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_xz_z_xx[i] = -4.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_z_xy[i] = -4.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_z_xz[i] = -4.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_z_yy[i] = -4.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_z_yz[i] = -4.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_xz_z_zz[i] = -4.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2970-2976)

    #pragma omp simd aligned(g_y_y_0_0_yy_yy_x_xx, g_y_y_0_0_yy_yy_x_xy, g_y_y_0_0_yy_yy_x_xz, g_y_y_0_0_yy_yy_x_yy, g_y_y_0_0_yy_yy_x_yz, g_y_y_0_0_yy_yy_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yyy_x_xx, g_y_yyy_x_xy, g_y_yyy_x_xz, g_y_yyy_x_yy, g_y_yyy_x_yz, g_y_yyy_x_zz, g_yyy_y_x_xx, g_yyy_y_x_xy, g_yyy_y_x_xz, g_yyy_y_x_yy, g_yyy_y_x_yz, g_yyy_y_x_zz, g_yyy_yyy_x_xx, g_yyy_yyy_x_xy, g_yyy_yyy_x_xz, g_yyy_yyy_x_yy, g_yyy_yyy_x_yz, g_yyy_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yy_x_xx[i] = 4.0 * g_y_y_x_xx[i] - 4.0 * g_y_yyy_x_xx[i] * b_exp - 4.0 * g_yyy_y_x_xx[i] * a_exp + 4.0 * g_yyy_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_x_xy[i] = 4.0 * g_y_y_x_xy[i] - 4.0 * g_y_yyy_x_xy[i] * b_exp - 4.0 * g_yyy_y_x_xy[i] * a_exp + 4.0 * g_yyy_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_x_xz[i] = 4.0 * g_y_y_x_xz[i] - 4.0 * g_y_yyy_x_xz[i] * b_exp - 4.0 * g_yyy_y_x_xz[i] * a_exp + 4.0 * g_yyy_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_x_yy[i] = 4.0 * g_y_y_x_yy[i] - 4.0 * g_y_yyy_x_yy[i] * b_exp - 4.0 * g_yyy_y_x_yy[i] * a_exp + 4.0 * g_yyy_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_x_yz[i] = 4.0 * g_y_y_x_yz[i] - 4.0 * g_y_yyy_x_yz[i] * b_exp - 4.0 * g_yyy_y_x_yz[i] * a_exp + 4.0 * g_yyy_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_x_zz[i] = 4.0 * g_y_y_x_zz[i] - 4.0 * g_y_yyy_x_zz[i] * b_exp - 4.0 * g_yyy_y_x_zz[i] * a_exp + 4.0 * g_yyy_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2976-2982)

    #pragma omp simd aligned(g_y_y_0_0_yy_yy_y_xx, g_y_y_0_0_yy_yy_y_xy, g_y_y_0_0_yy_yy_y_xz, g_y_y_0_0_yy_yy_y_yy, g_y_y_0_0_yy_yy_y_yz, g_y_y_0_0_yy_yy_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yyy_y_xx, g_y_yyy_y_xy, g_y_yyy_y_xz, g_y_yyy_y_yy, g_y_yyy_y_yz, g_y_yyy_y_zz, g_yyy_y_y_xx, g_yyy_y_y_xy, g_yyy_y_y_xz, g_yyy_y_y_yy, g_yyy_y_y_yz, g_yyy_y_y_zz, g_yyy_yyy_y_xx, g_yyy_yyy_y_xy, g_yyy_yyy_y_xz, g_yyy_yyy_y_yy, g_yyy_yyy_y_yz, g_yyy_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yy_y_xx[i] = 4.0 * g_y_y_y_xx[i] - 4.0 * g_y_yyy_y_xx[i] * b_exp - 4.0 * g_yyy_y_y_xx[i] * a_exp + 4.0 * g_yyy_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_y_xy[i] = 4.0 * g_y_y_y_xy[i] - 4.0 * g_y_yyy_y_xy[i] * b_exp - 4.0 * g_yyy_y_y_xy[i] * a_exp + 4.0 * g_yyy_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_y_xz[i] = 4.0 * g_y_y_y_xz[i] - 4.0 * g_y_yyy_y_xz[i] * b_exp - 4.0 * g_yyy_y_y_xz[i] * a_exp + 4.0 * g_yyy_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_y_yy[i] = 4.0 * g_y_y_y_yy[i] - 4.0 * g_y_yyy_y_yy[i] * b_exp - 4.0 * g_yyy_y_y_yy[i] * a_exp + 4.0 * g_yyy_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_y_yz[i] = 4.0 * g_y_y_y_yz[i] - 4.0 * g_y_yyy_y_yz[i] * b_exp - 4.0 * g_yyy_y_y_yz[i] * a_exp + 4.0 * g_yyy_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_y_zz[i] = 4.0 * g_y_y_y_zz[i] - 4.0 * g_y_yyy_y_zz[i] * b_exp - 4.0 * g_yyy_y_y_zz[i] * a_exp + 4.0 * g_yyy_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (2982-2988)

    #pragma omp simd aligned(g_y_y_0_0_yy_yy_z_xx, g_y_y_0_0_yy_yy_z_xy, g_y_y_0_0_yy_yy_z_xz, g_y_y_0_0_yy_yy_z_yy, g_y_y_0_0_yy_yy_z_yz, g_y_y_0_0_yy_yy_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yyy_z_xx, g_y_yyy_z_xy, g_y_yyy_z_xz, g_y_yyy_z_yy, g_y_yyy_z_yz, g_y_yyy_z_zz, g_yyy_y_z_xx, g_yyy_y_z_xy, g_yyy_y_z_xz, g_yyy_y_z_yy, g_yyy_y_z_yz, g_yyy_y_z_zz, g_yyy_yyy_z_xx, g_yyy_yyy_z_xy, g_yyy_yyy_z_xz, g_yyy_yyy_z_yy, g_yyy_yyy_z_yz, g_yyy_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yy_z_xx[i] = 4.0 * g_y_y_z_xx[i] - 4.0 * g_y_yyy_z_xx[i] * b_exp - 4.0 * g_yyy_y_z_xx[i] * a_exp + 4.0 * g_yyy_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_z_xy[i] = 4.0 * g_y_y_z_xy[i] - 4.0 * g_y_yyy_z_xy[i] * b_exp - 4.0 * g_yyy_y_z_xy[i] * a_exp + 4.0 * g_yyy_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_z_xz[i] = 4.0 * g_y_y_z_xz[i] - 4.0 * g_y_yyy_z_xz[i] * b_exp - 4.0 * g_yyy_y_z_xz[i] * a_exp + 4.0 * g_yyy_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_z_yy[i] = 4.0 * g_y_y_z_yy[i] - 4.0 * g_y_yyy_z_yy[i] * b_exp - 4.0 * g_yyy_y_z_yy[i] * a_exp + 4.0 * g_yyy_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_z_yz[i] = 4.0 * g_y_y_z_yz[i] - 4.0 * g_y_yyy_z_yz[i] * b_exp - 4.0 * g_yyy_y_z_yz[i] * a_exp + 4.0 * g_yyy_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yy_z_zz[i] = 4.0 * g_y_y_z_zz[i] - 4.0 * g_y_yyy_z_zz[i] * b_exp - 4.0 * g_yyy_y_z_zz[i] * a_exp + 4.0 * g_yyy_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (2988-2994)

    #pragma omp simd aligned(g_y_y_0_0_yy_yz_x_xx, g_y_y_0_0_yy_yz_x_xy, g_y_y_0_0_yy_yz_x_xz, g_y_y_0_0_yy_yz_x_yy, g_y_y_0_0_yy_yz_x_yz, g_y_y_0_0_yy_yz_x_zz, g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_yyy_yyz_x_xx, g_yyy_yyz_x_xy, g_yyy_yyz_x_xz, g_yyy_yyz_x_yy, g_yyy_yyz_x_yz, g_yyy_yyz_x_zz, g_yyy_z_x_xx, g_yyy_z_x_xy, g_yyy_z_x_xz, g_yyy_z_x_yy, g_yyy_z_x_yz, g_yyy_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yz_x_xx[i] = 2.0 * g_y_z_x_xx[i] - 4.0 * g_y_yyz_x_xx[i] * b_exp - 2.0 * g_yyy_z_x_xx[i] * a_exp + 4.0 * g_yyy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_x_xy[i] = 2.0 * g_y_z_x_xy[i] - 4.0 * g_y_yyz_x_xy[i] * b_exp - 2.0 * g_yyy_z_x_xy[i] * a_exp + 4.0 * g_yyy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_x_xz[i] = 2.0 * g_y_z_x_xz[i] - 4.0 * g_y_yyz_x_xz[i] * b_exp - 2.0 * g_yyy_z_x_xz[i] * a_exp + 4.0 * g_yyy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_x_yy[i] = 2.0 * g_y_z_x_yy[i] - 4.0 * g_y_yyz_x_yy[i] * b_exp - 2.0 * g_yyy_z_x_yy[i] * a_exp + 4.0 * g_yyy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_x_yz[i] = 2.0 * g_y_z_x_yz[i] - 4.0 * g_y_yyz_x_yz[i] * b_exp - 2.0 * g_yyy_z_x_yz[i] * a_exp + 4.0 * g_yyy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_x_zz[i] = 2.0 * g_y_z_x_zz[i] - 4.0 * g_y_yyz_x_zz[i] * b_exp - 2.0 * g_yyy_z_x_zz[i] * a_exp + 4.0 * g_yyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (2994-3000)

    #pragma omp simd aligned(g_y_y_0_0_yy_yz_y_xx, g_y_y_0_0_yy_yz_y_xy, g_y_y_0_0_yy_yz_y_xz, g_y_y_0_0_yy_yz_y_yy, g_y_y_0_0_yy_yz_y_yz, g_y_y_0_0_yy_yz_y_zz, g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_yyy_yyz_y_xx, g_yyy_yyz_y_xy, g_yyy_yyz_y_xz, g_yyy_yyz_y_yy, g_yyy_yyz_y_yz, g_yyy_yyz_y_zz, g_yyy_z_y_xx, g_yyy_z_y_xy, g_yyy_z_y_xz, g_yyy_z_y_yy, g_yyy_z_y_yz, g_yyy_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yz_y_xx[i] = 2.0 * g_y_z_y_xx[i] - 4.0 * g_y_yyz_y_xx[i] * b_exp - 2.0 * g_yyy_z_y_xx[i] * a_exp + 4.0 * g_yyy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_y_xy[i] = 2.0 * g_y_z_y_xy[i] - 4.0 * g_y_yyz_y_xy[i] * b_exp - 2.0 * g_yyy_z_y_xy[i] * a_exp + 4.0 * g_yyy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_y_xz[i] = 2.0 * g_y_z_y_xz[i] - 4.0 * g_y_yyz_y_xz[i] * b_exp - 2.0 * g_yyy_z_y_xz[i] * a_exp + 4.0 * g_yyy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_y_yy[i] = 2.0 * g_y_z_y_yy[i] - 4.0 * g_y_yyz_y_yy[i] * b_exp - 2.0 * g_yyy_z_y_yy[i] * a_exp + 4.0 * g_yyy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_y_yz[i] = 2.0 * g_y_z_y_yz[i] - 4.0 * g_y_yyz_y_yz[i] * b_exp - 2.0 * g_yyy_z_y_yz[i] * a_exp + 4.0 * g_yyy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_y_zz[i] = 2.0 * g_y_z_y_zz[i] - 4.0 * g_y_yyz_y_zz[i] * b_exp - 2.0 * g_yyy_z_y_zz[i] * a_exp + 4.0 * g_yyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3000-3006)

    #pragma omp simd aligned(g_y_y_0_0_yy_yz_z_xx, g_y_y_0_0_yy_yz_z_xy, g_y_y_0_0_yy_yz_z_xz, g_y_y_0_0_yy_yz_z_yy, g_y_y_0_0_yy_yz_z_yz, g_y_y_0_0_yy_yz_z_zz, g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_yyy_yyz_z_xx, g_yyy_yyz_z_xy, g_yyy_yyz_z_xz, g_yyy_yyz_z_yy, g_yyy_yyz_z_yz, g_yyy_yyz_z_zz, g_yyy_z_z_xx, g_yyy_z_z_xy, g_yyy_z_z_xz, g_yyy_z_z_yy, g_yyy_z_z_yz, g_yyy_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_yz_z_xx[i] = 2.0 * g_y_z_z_xx[i] - 4.0 * g_y_yyz_z_xx[i] * b_exp - 2.0 * g_yyy_z_z_xx[i] * a_exp + 4.0 * g_yyy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_z_xy[i] = 2.0 * g_y_z_z_xy[i] - 4.0 * g_y_yyz_z_xy[i] * b_exp - 2.0 * g_yyy_z_z_xy[i] * a_exp + 4.0 * g_yyy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_z_xz[i] = 2.0 * g_y_z_z_xz[i] - 4.0 * g_y_yyz_z_xz[i] * b_exp - 2.0 * g_yyy_z_z_xz[i] * a_exp + 4.0 * g_yyy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_z_yy[i] = 2.0 * g_y_z_z_yy[i] - 4.0 * g_y_yyz_z_yy[i] * b_exp - 2.0 * g_yyy_z_z_yy[i] * a_exp + 4.0 * g_yyy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_z_yz[i] = 2.0 * g_y_z_z_yz[i] - 4.0 * g_y_yyz_z_yz[i] * b_exp - 2.0 * g_yyy_z_z_yz[i] * a_exp + 4.0 * g_yyy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_yz_z_zz[i] = 2.0 * g_y_z_z_zz[i] - 4.0 * g_y_yyz_z_zz[i] * b_exp - 2.0 * g_yyy_z_z_zz[i] * a_exp + 4.0 * g_yyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3006-3012)

    #pragma omp simd aligned(g_y_y_0_0_yy_zz_x_xx, g_y_y_0_0_yy_zz_x_xy, g_y_y_0_0_yy_zz_x_xz, g_y_y_0_0_yy_zz_x_yy, g_y_y_0_0_yy_zz_x_yz, g_y_y_0_0_yy_zz_x_zz, g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz, g_yyy_yzz_x_xx, g_yyy_yzz_x_xy, g_yyy_yzz_x_xz, g_yyy_yzz_x_yy, g_yyy_yzz_x_yz, g_yyy_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_zz_x_xx[i] = -4.0 * g_y_yzz_x_xx[i] * b_exp + 4.0 * g_yyy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_x_xy[i] = -4.0 * g_y_yzz_x_xy[i] * b_exp + 4.0 * g_yyy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_x_xz[i] = -4.0 * g_y_yzz_x_xz[i] * b_exp + 4.0 * g_yyy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_x_yy[i] = -4.0 * g_y_yzz_x_yy[i] * b_exp + 4.0 * g_yyy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_x_yz[i] = -4.0 * g_y_yzz_x_yz[i] * b_exp + 4.0 * g_yyy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_x_zz[i] = -4.0 * g_y_yzz_x_zz[i] * b_exp + 4.0 * g_yyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3012-3018)

    #pragma omp simd aligned(g_y_y_0_0_yy_zz_y_xx, g_y_y_0_0_yy_zz_y_xy, g_y_y_0_0_yy_zz_y_xz, g_y_y_0_0_yy_zz_y_yy, g_y_y_0_0_yy_zz_y_yz, g_y_y_0_0_yy_zz_y_zz, g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz, g_yyy_yzz_y_xx, g_yyy_yzz_y_xy, g_yyy_yzz_y_xz, g_yyy_yzz_y_yy, g_yyy_yzz_y_yz, g_yyy_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_zz_y_xx[i] = -4.0 * g_y_yzz_y_xx[i] * b_exp + 4.0 * g_yyy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_y_xy[i] = -4.0 * g_y_yzz_y_xy[i] * b_exp + 4.0 * g_yyy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_y_xz[i] = -4.0 * g_y_yzz_y_xz[i] * b_exp + 4.0 * g_yyy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_y_yy[i] = -4.0 * g_y_yzz_y_yy[i] * b_exp + 4.0 * g_yyy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_y_yz[i] = -4.0 * g_y_yzz_y_yz[i] * b_exp + 4.0 * g_yyy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_y_zz[i] = -4.0 * g_y_yzz_y_zz[i] * b_exp + 4.0 * g_yyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3018-3024)

    #pragma omp simd aligned(g_y_y_0_0_yy_zz_z_xx, g_y_y_0_0_yy_zz_z_xy, g_y_y_0_0_yy_zz_z_xz, g_y_y_0_0_yy_zz_z_yy, g_y_y_0_0_yy_zz_z_yz, g_y_y_0_0_yy_zz_z_zz, g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz, g_yyy_yzz_z_xx, g_yyy_yzz_z_xy, g_yyy_yzz_z_xz, g_yyy_yzz_z_yy, g_yyy_yzz_z_yz, g_yyy_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yy_zz_z_xx[i] = -4.0 * g_y_yzz_z_xx[i] * b_exp + 4.0 * g_yyy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_z_xy[i] = -4.0 * g_y_yzz_z_xy[i] * b_exp + 4.0 * g_yyy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_z_xz[i] = -4.0 * g_y_yzz_z_xz[i] * b_exp + 4.0 * g_yyy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_z_yy[i] = -4.0 * g_y_yzz_z_yy[i] * b_exp + 4.0 * g_yyy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_z_yz[i] = -4.0 * g_y_yzz_z_yz[i] * b_exp + 4.0 * g_yyy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yy_zz_z_zz[i] = -4.0 * g_y_yzz_z_zz[i] * b_exp + 4.0 * g_yyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3024-3030)

    #pragma omp simd aligned(g_y_y_0_0_yz_xx_x_xx, g_y_y_0_0_yz_xx_x_xy, g_y_y_0_0_yz_xx_x_xz, g_y_y_0_0_yz_xx_x_yy, g_y_y_0_0_yz_xx_x_yz, g_y_y_0_0_yz_xx_x_zz, g_yyz_xxy_x_xx, g_yyz_xxy_x_xy, g_yyz_xxy_x_xz, g_yyz_xxy_x_yy, g_yyz_xxy_x_yz, g_yyz_xxy_x_zz, g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xx_x_xx[i] = -2.0 * g_z_xxy_x_xx[i] * b_exp + 4.0 * g_yyz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_x_xy[i] = -2.0 * g_z_xxy_x_xy[i] * b_exp + 4.0 * g_yyz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_x_xz[i] = -2.0 * g_z_xxy_x_xz[i] * b_exp + 4.0 * g_yyz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_x_yy[i] = -2.0 * g_z_xxy_x_yy[i] * b_exp + 4.0 * g_yyz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_x_yz[i] = -2.0 * g_z_xxy_x_yz[i] * b_exp + 4.0 * g_yyz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_x_zz[i] = -2.0 * g_z_xxy_x_zz[i] * b_exp + 4.0 * g_yyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3030-3036)

    #pragma omp simd aligned(g_y_y_0_0_yz_xx_y_xx, g_y_y_0_0_yz_xx_y_xy, g_y_y_0_0_yz_xx_y_xz, g_y_y_0_0_yz_xx_y_yy, g_y_y_0_0_yz_xx_y_yz, g_y_y_0_0_yz_xx_y_zz, g_yyz_xxy_y_xx, g_yyz_xxy_y_xy, g_yyz_xxy_y_xz, g_yyz_xxy_y_yy, g_yyz_xxy_y_yz, g_yyz_xxy_y_zz, g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xx_y_xx[i] = -2.0 * g_z_xxy_y_xx[i] * b_exp + 4.0 * g_yyz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_y_xy[i] = -2.0 * g_z_xxy_y_xy[i] * b_exp + 4.0 * g_yyz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_y_xz[i] = -2.0 * g_z_xxy_y_xz[i] * b_exp + 4.0 * g_yyz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_y_yy[i] = -2.0 * g_z_xxy_y_yy[i] * b_exp + 4.0 * g_yyz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_y_yz[i] = -2.0 * g_z_xxy_y_yz[i] * b_exp + 4.0 * g_yyz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_y_zz[i] = -2.0 * g_z_xxy_y_zz[i] * b_exp + 4.0 * g_yyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3036-3042)

    #pragma omp simd aligned(g_y_y_0_0_yz_xx_z_xx, g_y_y_0_0_yz_xx_z_xy, g_y_y_0_0_yz_xx_z_xz, g_y_y_0_0_yz_xx_z_yy, g_y_y_0_0_yz_xx_z_yz, g_y_y_0_0_yz_xx_z_zz, g_yyz_xxy_z_xx, g_yyz_xxy_z_xy, g_yyz_xxy_z_xz, g_yyz_xxy_z_yy, g_yyz_xxy_z_yz, g_yyz_xxy_z_zz, g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xx_z_xx[i] = -2.0 * g_z_xxy_z_xx[i] * b_exp + 4.0 * g_yyz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_z_xy[i] = -2.0 * g_z_xxy_z_xy[i] * b_exp + 4.0 * g_yyz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_z_xz[i] = -2.0 * g_z_xxy_z_xz[i] * b_exp + 4.0 * g_yyz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_z_yy[i] = -2.0 * g_z_xxy_z_yy[i] * b_exp + 4.0 * g_yyz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_z_yz[i] = -2.0 * g_z_xxy_z_yz[i] * b_exp + 4.0 * g_yyz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xx_z_zz[i] = -2.0 * g_z_xxy_z_zz[i] * b_exp + 4.0 * g_yyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3042-3048)

    #pragma omp simd aligned(g_y_y_0_0_yz_xy_x_xx, g_y_y_0_0_yz_xy_x_xy, g_y_y_0_0_yz_xy_x_xz, g_y_y_0_0_yz_xy_x_yy, g_y_y_0_0_yz_xy_x_yz, g_y_y_0_0_yz_xy_x_zz, g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xyy_x_xx, g_yyz_xyy_x_xy, g_yyz_xyy_x_xz, g_yyz_xyy_x_yy, g_yyz_xyy_x_yz, g_yyz_xyy_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xy_x_xx[i] = g_z_x_x_xx[i] - 2.0 * g_z_xyy_x_xx[i] * b_exp - 2.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_x_xy[i] = g_z_x_x_xy[i] - 2.0 * g_z_xyy_x_xy[i] * b_exp - 2.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_x_xz[i] = g_z_x_x_xz[i] - 2.0 * g_z_xyy_x_xz[i] * b_exp - 2.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_x_yy[i] = g_z_x_x_yy[i] - 2.0 * g_z_xyy_x_yy[i] * b_exp - 2.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_x_yz[i] = g_z_x_x_yz[i] - 2.0 * g_z_xyy_x_yz[i] * b_exp - 2.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_x_zz[i] = g_z_x_x_zz[i] - 2.0 * g_z_xyy_x_zz[i] * b_exp - 2.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3048-3054)

    #pragma omp simd aligned(g_y_y_0_0_yz_xy_y_xx, g_y_y_0_0_yz_xy_y_xy, g_y_y_0_0_yz_xy_y_xz, g_y_y_0_0_yz_xy_y_yy, g_y_y_0_0_yz_xy_y_yz, g_y_y_0_0_yz_xy_y_zz, g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xyy_y_xx, g_yyz_xyy_y_xy, g_yyz_xyy_y_xz, g_yyz_xyy_y_yy, g_yyz_xyy_y_yz, g_yyz_xyy_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xy_y_xx[i] = g_z_x_y_xx[i] - 2.0 * g_z_xyy_y_xx[i] * b_exp - 2.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_y_xy[i] = g_z_x_y_xy[i] - 2.0 * g_z_xyy_y_xy[i] * b_exp - 2.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_y_xz[i] = g_z_x_y_xz[i] - 2.0 * g_z_xyy_y_xz[i] * b_exp - 2.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_y_yy[i] = g_z_x_y_yy[i] - 2.0 * g_z_xyy_y_yy[i] * b_exp - 2.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_y_yz[i] = g_z_x_y_yz[i] - 2.0 * g_z_xyy_y_yz[i] * b_exp - 2.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_y_zz[i] = g_z_x_y_zz[i] - 2.0 * g_z_xyy_y_zz[i] * b_exp - 2.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3054-3060)

    #pragma omp simd aligned(g_y_y_0_0_yz_xy_z_xx, g_y_y_0_0_yz_xy_z_xy, g_y_y_0_0_yz_xy_z_xz, g_y_y_0_0_yz_xy_z_yy, g_y_y_0_0_yz_xy_z_yz, g_y_y_0_0_yz_xy_z_zz, g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xyy_z_xx, g_yyz_xyy_z_xy, g_yyz_xyy_z_xz, g_yyz_xyy_z_yy, g_yyz_xyy_z_yz, g_yyz_xyy_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xy_z_xx[i] = g_z_x_z_xx[i] - 2.0 * g_z_xyy_z_xx[i] * b_exp - 2.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_z_xy[i] = g_z_x_z_xy[i] - 2.0 * g_z_xyy_z_xy[i] * b_exp - 2.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_z_xz[i] = g_z_x_z_xz[i] - 2.0 * g_z_xyy_z_xz[i] * b_exp - 2.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_z_yy[i] = g_z_x_z_yy[i] - 2.0 * g_z_xyy_z_yy[i] * b_exp - 2.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_z_yz[i] = g_z_x_z_yz[i] - 2.0 * g_z_xyy_z_yz[i] * b_exp - 2.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xy_z_zz[i] = g_z_x_z_zz[i] - 2.0 * g_z_xyy_z_zz[i] * b_exp - 2.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3060-3066)

    #pragma omp simd aligned(g_y_y_0_0_yz_xz_x_xx, g_y_y_0_0_yz_xz_x_xy, g_y_y_0_0_yz_xz_x_xz, g_y_y_0_0_yz_xz_x_yy, g_y_y_0_0_yz_xz_x_yz, g_y_y_0_0_yz_xz_x_zz, g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xz_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3066-3072)

    #pragma omp simd aligned(g_y_y_0_0_yz_xz_y_xx, g_y_y_0_0_yz_xz_y_xy, g_y_y_0_0_yz_xz_y_xz, g_y_y_0_0_yz_xz_y_yy, g_y_y_0_0_yz_xz_y_yz, g_y_y_0_0_yz_xz_y_zz, g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xz_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3072-3078)

    #pragma omp simd aligned(g_y_y_0_0_yz_xz_z_xx, g_y_y_0_0_yz_xz_z_xy, g_y_y_0_0_yz_xz_z_xz, g_y_y_0_0_yz_xz_z_yy, g_y_y_0_0_yz_xz_z_yz, g_y_y_0_0_yz_xz_z_zz, g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_xz_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_xz_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3078-3084)

    #pragma omp simd aligned(g_y_y_0_0_yz_yy_x_xx, g_y_y_0_0_yz_yy_x_xy, g_y_y_0_0_yz_yy_x_xz, g_y_y_0_0_yz_yy_x_yy, g_y_y_0_0_yz_yy_x_yz, g_y_y_0_0_yz_yy_x_zz, g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_yyz_yyy_x_xx, g_yyz_yyy_x_xy, g_yyz_yyy_x_xz, g_yyz_yyy_x_yy, g_yyz_yyy_x_yz, g_yyz_yyy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yyy_x_xx, g_z_yyy_x_xy, g_z_yyy_x_xz, g_z_yyy_x_yy, g_z_yyy_x_yz, g_z_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yy_x_xx[i] = 2.0 * g_z_y_x_xx[i] - 2.0 * g_z_yyy_x_xx[i] * b_exp - 4.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_x_xy[i] = 2.0 * g_z_y_x_xy[i] - 2.0 * g_z_yyy_x_xy[i] * b_exp - 4.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_x_xz[i] = 2.0 * g_z_y_x_xz[i] - 2.0 * g_z_yyy_x_xz[i] * b_exp - 4.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_x_yy[i] = 2.0 * g_z_y_x_yy[i] - 2.0 * g_z_yyy_x_yy[i] * b_exp - 4.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_x_yz[i] = 2.0 * g_z_y_x_yz[i] - 2.0 * g_z_yyy_x_yz[i] * b_exp - 4.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_x_zz[i] = 2.0 * g_z_y_x_zz[i] - 2.0 * g_z_yyy_x_zz[i] * b_exp - 4.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3084-3090)

    #pragma omp simd aligned(g_y_y_0_0_yz_yy_y_xx, g_y_y_0_0_yz_yy_y_xy, g_y_y_0_0_yz_yy_y_xz, g_y_y_0_0_yz_yy_y_yy, g_y_y_0_0_yz_yy_y_yz, g_y_y_0_0_yz_yy_y_zz, g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_yyz_yyy_y_xx, g_yyz_yyy_y_xy, g_yyz_yyy_y_xz, g_yyz_yyy_y_yy, g_yyz_yyy_y_yz, g_yyz_yyy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yyy_y_xx, g_z_yyy_y_xy, g_z_yyy_y_xz, g_z_yyy_y_yy, g_z_yyy_y_yz, g_z_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yy_y_xx[i] = 2.0 * g_z_y_y_xx[i] - 2.0 * g_z_yyy_y_xx[i] * b_exp - 4.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_y_xy[i] = 2.0 * g_z_y_y_xy[i] - 2.0 * g_z_yyy_y_xy[i] * b_exp - 4.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_y_xz[i] = 2.0 * g_z_y_y_xz[i] - 2.0 * g_z_yyy_y_xz[i] * b_exp - 4.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_y_yy[i] = 2.0 * g_z_y_y_yy[i] - 2.0 * g_z_yyy_y_yy[i] * b_exp - 4.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_y_yz[i] = 2.0 * g_z_y_y_yz[i] - 2.0 * g_z_yyy_y_yz[i] * b_exp - 4.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_y_zz[i] = 2.0 * g_z_y_y_zz[i] - 2.0 * g_z_yyy_y_zz[i] * b_exp - 4.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3090-3096)

    #pragma omp simd aligned(g_y_y_0_0_yz_yy_z_xx, g_y_y_0_0_yz_yy_z_xy, g_y_y_0_0_yz_yy_z_xz, g_y_y_0_0_yz_yy_z_yy, g_y_y_0_0_yz_yy_z_yz, g_y_y_0_0_yz_yy_z_zz, g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_yyz_yyy_z_xx, g_yyz_yyy_z_xy, g_yyz_yyy_z_xz, g_yyz_yyy_z_yy, g_yyz_yyy_z_yz, g_yyz_yyy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yyy_z_xx, g_z_yyy_z_xy, g_z_yyy_z_xz, g_z_yyy_z_yy, g_z_yyy_z_yz, g_z_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yy_z_xx[i] = 2.0 * g_z_y_z_xx[i] - 2.0 * g_z_yyy_z_xx[i] * b_exp - 4.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_z_xy[i] = 2.0 * g_z_y_z_xy[i] - 2.0 * g_z_yyy_z_xy[i] * b_exp - 4.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_z_xz[i] = 2.0 * g_z_y_z_xz[i] - 2.0 * g_z_yyy_z_xz[i] * b_exp - 4.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_z_yy[i] = 2.0 * g_z_y_z_yy[i] - 2.0 * g_z_yyy_z_yy[i] * b_exp - 4.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_z_yz[i] = 2.0 * g_z_y_z_yz[i] - 2.0 * g_z_yyy_z_yz[i] * b_exp - 4.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yy_z_zz[i] = 2.0 * g_z_y_z_zz[i] - 2.0 * g_z_yyy_z_zz[i] * b_exp - 4.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3096-3102)

    #pragma omp simd aligned(g_y_y_0_0_yz_yz_x_xx, g_y_y_0_0_yz_yz_x_xy, g_y_y_0_0_yz_yz_x_xz, g_y_y_0_0_yz_yz_x_yy, g_y_y_0_0_yz_yz_x_yz, g_y_y_0_0_yz_yz_x_zz, g_yyz_yyz_x_xx, g_yyz_yyz_x_xy, g_yyz_yyz_x_xz, g_yyz_yyz_x_yy, g_yyz_yyz_x_yz, g_yyz_yyz_x_zz, g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yz_x_xx[i] = g_z_z_x_xx[i] - 2.0 * g_z_yyz_x_xx[i] * b_exp - 2.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_x_xy[i] = g_z_z_x_xy[i] - 2.0 * g_z_yyz_x_xy[i] * b_exp - 2.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_x_xz[i] = g_z_z_x_xz[i] - 2.0 * g_z_yyz_x_xz[i] * b_exp - 2.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_x_yy[i] = g_z_z_x_yy[i] - 2.0 * g_z_yyz_x_yy[i] * b_exp - 2.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_x_yz[i] = g_z_z_x_yz[i] - 2.0 * g_z_yyz_x_yz[i] * b_exp - 2.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_x_zz[i] = g_z_z_x_zz[i] - 2.0 * g_z_yyz_x_zz[i] * b_exp - 2.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3102-3108)

    #pragma omp simd aligned(g_y_y_0_0_yz_yz_y_xx, g_y_y_0_0_yz_yz_y_xy, g_y_y_0_0_yz_yz_y_xz, g_y_y_0_0_yz_yz_y_yy, g_y_y_0_0_yz_yz_y_yz, g_y_y_0_0_yz_yz_y_zz, g_yyz_yyz_y_xx, g_yyz_yyz_y_xy, g_yyz_yyz_y_xz, g_yyz_yyz_y_yy, g_yyz_yyz_y_yz, g_yyz_yyz_y_zz, g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yz_y_xx[i] = g_z_z_y_xx[i] - 2.0 * g_z_yyz_y_xx[i] * b_exp - 2.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_y_xy[i] = g_z_z_y_xy[i] - 2.0 * g_z_yyz_y_xy[i] * b_exp - 2.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_y_xz[i] = g_z_z_y_xz[i] - 2.0 * g_z_yyz_y_xz[i] * b_exp - 2.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_y_yy[i] = g_z_z_y_yy[i] - 2.0 * g_z_yyz_y_yy[i] * b_exp - 2.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_y_yz[i] = g_z_z_y_yz[i] - 2.0 * g_z_yyz_y_yz[i] * b_exp - 2.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_y_zz[i] = g_z_z_y_zz[i] - 2.0 * g_z_yyz_y_zz[i] * b_exp - 2.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3108-3114)

    #pragma omp simd aligned(g_y_y_0_0_yz_yz_z_xx, g_y_y_0_0_yz_yz_z_xy, g_y_y_0_0_yz_yz_z_xz, g_y_y_0_0_yz_yz_z_yy, g_y_y_0_0_yz_yz_z_yz, g_y_y_0_0_yz_yz_z_zz, g_yyz_yyz_z_xx, g_yyz_yyz_z_xy, g_yyz_yyz_z_xz, g_yyz_yyz_z_yy, g_yyz_yyz_z_yz, g_yyz_yyz_z_zz, g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_yz_z_xx[i] = g_z_z_z_xx[i] - 2.0 * g_z_yyz_z_xx[i] * b_exp - 2.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_z_xy[i] = g_z_z_z_xy[i] - 2.0 * g_z_yyz_z_xy[i] * b_exp - 2.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_z_xz[i] = g_z_z_z_xz[i] - 2.0 * g_z_yyz_z_xz[i] * b_exp - 2.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_z_yy[i] = g_z_z_z_yy[i] - 2.0 * g_z_yyz_z_yy[i] * b_exp - 2.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_z_yz[i] = g_z_z_z_yz[i] - 2.0 * g_z_yyz_z_yz[i] * b_exp - 2.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_yz_z_zz[i] = g_z_z_z_zz[i] - 2.0 * g_z_yyz_z_zz[i] * b_exp - 2.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3114-3120)

    #pragma omp simd aligned(g_y_y_0_0_yz_zz_x_xx, g_y_y_0_0_yz_zz_x_xy, g_y_y_0_0_yz_zz_x_xz, g_y_y_0_0_yz_zz_x_yy, g_y_y_0_0_yz_zz_x_yz, g_y_y_0_0_yz_zz_x_zz, g_yyz_yzz_x_xx, g_yyz_yzz_x_xy, g_yyz_yzz_x_xz, g_yyz_yzz_x_yy, g_yyz_yzz_x_yz, g_yyz_yzz_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_zz_x_xx[i] = -2.0 * g_z_yzz_x_xx[i] * b_exp + 4.0 * g_yyz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_x_xy[i] = -2.0 * g_z_yzz_x_xy[i] * b_exp + 4.0 * g_yyz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_x_xz[i] = -2.0 * g_z_yzz_x_xz[i] * b_exp + 4.0 * g_yyz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_x_yy[i] = -2.0 * g_z_yzz_x_yy[i] * b_exp + 4.0 * g_yyz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_x_yz[i] = -2.0 * g_z_yzz_x_yz[i] * b_exp + 4.0 * g_yyz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_x_zz[i] = -2.0 * g_z_yzz_x_zz[i] * b_exp + 4.0 * g_yyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3120-3126)

    #pragma omp simd aligned(g_y_y_0_0_yz_zz_y_xx, g_y_y_0_0_yz_zz_y_xy, g_y_y_0_0_yz_zz_y_xz, g_y_y_0_0_yz_zz_y_yy, g_y_y_0_0_yz_zz_y_yz, g_y_y_0_0_yz_zz_y_zz, g_yyz_yzz_y_xx, g_yyz_yzz_y_xy, g_yyz_yzz_y_xz, g_yyz_yzz_y_yy, g_yyz_yzz_y_yz, g_yyz_yzz_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_zz_y_xx[i] = -2.0 * g_z_yzz_y_xx[i] * b_exp + 4.0 * g_yyz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_y_xy[i] = -2.0 * g_z_yzz_y_xy[i] * b_exp + 4.0 * g_yyz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_y_xz[i] = -2.0 * g_z_yzz_y_xz[i] * b_exp + 4.0 * g_yyz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_y_yy[i] = -2.0 * g_z_yzz_y_yy[i] * b_exp + 4.0 * g_yyz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_y_yz[i] = -2.0 * g_z_yzz_y_yz[i] * b_exp + 4.0 * g_yyz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_y_zz[i] = -2.0 * g_z_yzz_y_zz[i] * b_exp + 4.0 * g_yyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3126-3132)

    #pragma omp simd aligned(g_y_y_0_0_yz_zz_z_xx, g_y_y_0_0_yz_zz_z_xy, g_y_y_0_0_yz_zz_z_xz, g_y_y_0_0_yz_zz_z_yy, g_y_y_0_0_yz_zz_z_yz, g_y_y_0_0_yz_zz_z_zz, g_yyz_yzz_z_xx, g_yyz_yzz_z_xy, g_yyz_yzz_z_xz, g_yyz_yzz_z_yy, g_yyz_yzz_z_yz, g_yyz_yzz_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_yz_zz_z_xx[i] = -2.0 * g_z_yzz_z_xx[i] * b_exp + 4.0 * g_yyz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_z_xy[i] = -2.0 * g_z_yzz_z_xy[i] * b_exp + 4.0 * g_yyz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_z_xz[i] = -2.0 * g_z_yzz_z_xz[i] * b_exp + 4.0 * g_yyz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_z_yy[i] = -2.0 * g_z_yzz_z_yy[i] * b_exp + 4.0 * g_yyz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_z_yz[i] = -2.0 * g_z_yzz_z_yz[i] * b_exp + 4.0 * g_yyz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_yz_zz_z_zz[i] = -2.0 * g_z_yzz_z_zz[i] * b_exp + 4.0 * g_yyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3132-3138)

    #pragma omp simd aligned(g_y_y_0_0_zz_xx_x_xx, g_y_y_0_0_zz_xx_x_xy, g_y_y_0_0_zz_xx_x_xz, g_y_y_0_0_zz_xx_x_yy, g_y_y_0_0_zz_xx_x_yz, g_y_y_0_0_zz_xx_x_zz, g_yzz_xxy_x_xx, g_yzz_xxy_x_xy, g_yzz_xxy_x_xz, g_yzz_xxy_x_yy, g_yzz_xxy_x_yz, g_yzz_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xx_x_xx[i] = 4.0 * g_yzz_xxy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_x_xy[i] = 4.0 * g_yzz_xxy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_x_xz[i] = 4.0 * g_yzz_xxy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_x_yy[i] = 4.0 * g_yzz_xxy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_x_yz[i] = 4.0 * g_yzz_xxy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_x_zz[i] = 4.0 * g_yzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3138-3144)

    #pragma omp simd aligned(g_y_y_0_0_zz_xx_y_xx, g_y_y_0_0_zz_xx_y_xy, g_y_y_0_0_zz_xx_y_xz, g_y_y_0_0_zz_xx_y_yy, g_y_y_0_0_zz_xx_y_yz, g_y_y_0_0_zz_xx_y_zz, g_yzz_xxy_y_xx, g_yzz_xxy_y_xy, g_yzz_xxy_y_xz, g_yzz_xxy_y_yy, g_yzz_xxy_y_yz, g_yzz_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xx_y_xx[i] = 4.0 * g_yzz_xxy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_y_xy[i] = 4.0 * g_yzz_xxy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_y_xz[i] = 4.0 * g_yzz_xxy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_y_yy[i] = 4.0 * g_yzz_xxy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_y_yz[i] = 4.0 * g_yzz_xxy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_y_zz[i] = 4.0 * g_yzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3144-3150)

    #pragma omp simd aligned(g_y_y_0_0_zz_xx_z_xx, g_y_y_0_0_zz_xx_z_xy, g_y_y_0_0_zz_xx_z_xz, g_y_y_0_0_zz_xx_z_yy, g_y_y_0_0_zz_xx_z_yz, g_y_y_0_0_zz_xx_z_zz, g_yzz_xxy_z_xx, g_yzz_xxy_z_xy, g_yzz_xxy_z_xz, g_yzz_xxy_z_yy, g_yzz_xxy_z_yz, g_yzz_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xx_z_xx[i] = 4.0 * g_yzz_xxy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_z_xy[i] = 4.0 * g_yzz_xxy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_z_xz[i] = 4.0 * g_yzz_xxy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_z_yy[i] = 4.0 * g_yzz_xxy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_z_yz[i] = 4.0 * g_yzz_xxy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xx_z_zz[i] = 4.0 * g_yzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3150-3156)

    #pragma omp simd aligned(g_y_y_0_0_zz_xy_x_xx, g_y_y_0_0_zz_xy_x_xy, g_y_y_0_0_zz_xy_x_xz, g_y_y_0_0_zz_xy_x_yy, g_y_y_0_0_zz_xy_x_yz, g_y_y_0_0_zz_xy_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xyy_x_xx, g_yzz_xyy_x_xy, g_yzz_xyy_x_xz, g_yzz_xyy_x_yy, g_yzz_xyy_x_yz, g_yzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xy_x_xx[i] = -2.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_x_xy[i] = -2.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_x_xz[i] = -2.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_x_yy[i] = -2.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_x_yz[i] = -2.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_x_zz[i] = -2.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3156-3162)

    #pragma omp simd aligned(g_y_y_0_0_zz_xy_y_xx, g_y_y_0_0_zz_xy_y_xy, g_y_y_0_0_zz_xy_y_xz, g_y_y_0_0_zz_xy_y_yy, g_y_y_0_0_zz_xy_y_yz, g_y_y_0_0_zz_xy_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xyy_y_xx, g_yzz_xyy_y_xy, g_yzz_xyy_y_xz, g_yzz_xyy_y_yy, g_yzz_xyy_y_yz, g_yzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xy_y_xx[i] = -2.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_y_xy[i] = -2.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_y_xz[i] = -2.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_y_yy[i] = -2.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_y_yz[i] = -2.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_y_zz[i] = -2.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3162-3168)

    #pragma omp simd aligned(g_y_y_0_0_zz_xy_z_xx, g_y_y_0_0_zz_xy_z_xy, g_y_y_0_0_zz_xy_z_xz, g_y_y_0_0_zz_xy_z_yy, g_y_y_0_0_zz_xy_z_yz, g_y_y_0_0_zz_xy_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xyy_z_xx, g_yzz_xyy_z_xy, g_yzz_xyy_z_xz, g_yzz_xyy_z_yy, g_yzz_xyy_z_yz, g_yzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xy_z_xx[i] = -2.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_z_xy[i] = -2.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_z_xz[i] = -2.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_z_yy[i] = -2.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_z_yz[i] = -2.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xy_z_zz[i] = -2.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3168-3174)

    #pragma omp simd aligned(g_y_y_0_0_zz_xz_x_xx, g_y_y_0_0_zz_xz_x_xy, g_y_y_0_0_zz_xz_x_xz, g_y_y_0_0_zz_xz_x_yy, g_y_y_0_0_zz_xz_x_yz, g_y_y_0_0_zz_xz_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xz_x_xx[i] = 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_x_xy[i] = 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_x_xz[i] = 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_x_yy[i] = 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_x_yz[i] = 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_x_zz[i] = 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3174-3180)

    #pragma omp simd aligned(g_y_y_0_0_zz_xz_y_xx, g_y_y_0_0_zz_xz_y_xy, g_y_y_0_0_zz_xz_y_xz, g_y_y_0_0_zz_xz_y_yy, g_y_y_0_0_zz_xz_y_yz, g_y_y_0_0_zz_xz_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xz_y_xx[i] = 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_y_xy[i] = 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_y_xz[i] = 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_y_yy[i] = 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_y_yz[i] = 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_y_zz[i] = 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3180-3186)

    #pragma omp simd aligned(g_y_y_0_0_zz_xz_z_xx, g_y_y_0_0_zz_xz_z_xy, g_y_y_0_0_zz_xz_z_xz, g_y_y_0_0_zz_xz_z_yy, g_y_y_0_0_zz_xz_z_yz, g_y_y_0_0_zz_xz_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_xz_z_xx[i] = 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_z_xy[i] = 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_z_xz[i] = 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_z_yy[i] = 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_z_yz[i] = 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_xz_z_zz[i] = 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3186-3192)

    #pragma omp simd aligned(g_y_y_0_0_zz_yy_x_xx, g_y_y_0_0_zz_yy_x_xy, g_y_y_0_0_zz_yy_x_xz, g_y_y_0_0_zz_yy_x_yy, g_y_y_0_0_zz_yy_x_yz, g_y_y_0_0_zz_yy_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz, g_yzz_yyy_x_xx, g_yzz_yyy_x_xy, g_yzz_yyy_x_xz, g_yzz_yyy_x_yy, g_yzz_yyy_x_yz, g_yzz_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yy_x_xx[i] = -4.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_yyy_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_x_xy[i] = -4.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_yyy_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_x_xz[i] = -4.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_yyy_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_x_yy[i] = -4.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_yyy_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_x_yz[i] = -4.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_yyy_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_x_zz[i] = -4.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3192-3198)

    #pragma omp simd aligned(g_y_y_0_0_zz_yy_y_xx, g_y_y_0_0_zz_yy_y_xy, g_y_y_0_0_zz_yy_y_xz, g_y_y_0_0_zz_yy_y_yy, g_y_y_0_0_zz_yy_y_yz, g_y_y_0_0_zz_yy_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz, g_yzz_yyy_y_xx, g_yzz_yyy_y_xy, g_yzz_yyy_y_xz, g_yzz_yyy_y_yy, g_yzz_yyy_y_yz, g_yzz_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yy_y_xx[i] = -4.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_yyy_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_y_xy[i] = -4.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_yyy_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_y_xz[i] = -4.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_yyy_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_y_yy[i] = -4.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_yyy_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_y_yz[i] = -4.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_yyy_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_y_zz[i] = -4.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3198-3204)

    #pragma omp simd aligned(g_y_y_0_0_zz_yy_z_xx, g_y_y_0_0_zz_yy_z_xy, g_y_y_0_0_zz_yy_z_xz, g_y_y_0_0_zz_yy_z_yy, g_y_y_0_0_zz_yy_z_yz, g_y_y_0_0_zz_yy_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz, g_yzz_yyy_z_xx, g_yzz_yyy_z_xy, g_yzz_yyy_z_xz, g_yzz_yyy_z_yy, g_yzz_yyy_z_yz, g_yzz_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yy_z_xx[i] = -4.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_yyy_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_z_xy[i] = -4.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_yyy_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_z_xz[i] = -4.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_yyy_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_z_yy[i] = -4.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_yyy_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_z_yz[i] = -4.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_yyy_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yy_z_zz[i] = -4.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3204-3210)

    #pragma omp simd aligned(g_y_y_0_0_zz_yz_x_xx, g_y_y_0_0_zz_yz_x_xy, g_y_y_0_0_zz_yz_x_xz, g_y_y_0_0_zz_yz_x_yy, g_y_y_0_0_zz_yz_x_yz, g_y_y_0_0_zz_yz_x_zz, g_yzz_yyz_x_xx, g_yzz_yyz_x_xy, g_yzz_yyz_x_xz, g_yzz_yyz_x_yy, g_yzz_yyz_x_yz, g_yzz_yyz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yz_x_xx[i] = -2.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_x_xy[i] = -2.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_x_xz[i] = -2.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_x_yy[i] = -2.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_x_yz[i] = -2.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_x_zz[i] = -2.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3210-3216)

    #pragma omp simd aligned(g_y_y_0_0_zz_yz_y_xx, g_y_y_0_0_zz_yz_y_xy, g_y_y_0_0_zz_yz_y_xz, g_y_y_0_0_zz_yz_y_yy, g_y_y_0_0_zz_yz_y_yz, g_y_y_0_0_zz_yz_y_zz, g_yzz_yyz_y_xx, g_yzz_yyz_y_xy, g_yzz_yyz_y_xz, g_yzz_yyz_y_yy, g_yzz_yyz_y_yz, g_yzz_yyz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yz_y_xx[i] = -2.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_y_xy[i] = -2.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_y_xz[i] = -2.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_y_yy[i] = -2.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_y_yz[i] = -2.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_y_zz[i] = -2.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3216-3222)

    #pragma omp simd aligned(g_y_y_0_0_zz_yz_z_xx, g_y_y_0_0_zz_yz_z_xy, g_y_y_0_0_zz_yz_z_xz, g_y_y_0_0_zz_yz_z_yy, g_y_y_0_0_zz_yz_z_yz, g_y_y_0_0_zz_yz_z_zz, g_yzz_yyz_z_xx, g_yzz_yyz_z_xy, g_yzz_yyz_z_xz, g_yzz_yyz_z_yy, g_yzz_yyz_z_yz, g_yzz_yyz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_yz_z_xx[i] = -2.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_z_xy[i] = -2.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_z_xz[i] = -2.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_z_yy[i] = -2.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_z_yz[i] = -2.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_yz_z_zz[i] = -2.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3222-3228)

    #pragma omp simd aligned(g_y_y_0_0_zz_zz_x_xx, g_y_y_0_0_zz_zz_x_xy, g_y_y_0_0_zz_zz_x_xz, g_y_y_0_0_zz_zz_x_yy, g_y_y_0_0_zz_zz_x_yz, g_y_y_0_0_zz_zz_x_zz, g_yzz_yzz_x_xx, g_yzz_yzz_x_xy, g_yzz_yzz_x_xz, g_yzz_yzz_x_yy, g_yzz_yzz_x_yz, g_yzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_zz_x_xx[i] = 4.0 * g_yzz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_x_xy[i] = 4.0 * g_yzz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_x_xz[i] = 4.0 * g_yzz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_x_yy[i] = 4.0 * g_yzz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_x_yz[i] = 4.0 * g_yzz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_x_zz[i] = 4.0 * g_yzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3228-3234)

    #pragma omp simd aligned(g_y_y_0_0_zz_zz_y_xx, g_y_y_0_0_zz_zz_y_xy, g_y_y_0_0_zz_zz_y_xz, g_y_y_0_0_zz_zz_y_yy, g_y_y_0_0_zz_zz_y_yz, g_y_y_0_0_zz_zz_y_zz, g_yzz_yzz_y_xx, g_yzz_yzz_y_xy, g_yzz_yzz_y_xz, g_yzz_yzz_y_yy, g_yzz_yzz_y_yz, g_yzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_zz_y_xx[i] = 4.0 * g_yzz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_y_xy[i] = 4.0 * g_yzz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_y_xz[i] = 4.0 * g_yzz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_y_yy[i] = 4.0 * g_yzz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_y_yz[i] = 4.0 * g_yzz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_y_zz[i] = 4.0 * g_yzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3234-3240)

    #pragma omp simd aligned(g_y_y_0_0_zz_zz_z_xx, g_y_y_0_0_zz_zz_z_xy, g_y_y_0_0_zz_zz_z_xz, g_y_y_0_0_zz_zz_z_yy, g_y_y_0_0_zz_zz_z_yz, g_y_y_0_0_zz_zz_z_zz, g_yzz_yzz_z_xx, g_yzz_yzz_z_xy, g_yzz_yzz_z_xz, g_yzz_yzz_z_yy, g_yzz_yzz_z_yz, g_yzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_y_0_0_zz_zz_z_xx[i] = 4.0 * g_yzz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_z_xy[i] = 4.0 * g_yzz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_z_xz[i] = 4.0 * g_yzz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_z_yy[i] = 4.0 * g_yzz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_z_yz[i] = 4.0 * g_yzz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_y_0_0_zz_zz_z_zz[i] = 4.0 * g_yzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3240-3246)

    #pragma omp simd aligned(g_xxy_xxz_x_xx, g_xxy_xxz_x_xy, g_xxy_xxz_x_xz, g_xxy_xxz_x_yy, g_xxy_xxz_x_yz, g_xxy_xxz_x_zz, g_y_z_0_0_xx_xx_x_xx, g_y_z_0_0_xx_xx_x_xy, g_y_z_0_0_xx_xx_x_xz, g_y_z_0_0_xx_xx_x_yy, g_y_z_0_0_xx_xx_x_yz, g_y_z_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xx_x_xx[i] = 4.0 * g_xxy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_x_xy[i] = 4.0 * g_xxy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_x_xz[i] = 4.0 * g_xxy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_x_yy[i] = 4.0 * g_xxy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_x_yz[i] = 4.0 * g_xxy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_x_zz[i] = 4.0 * g_xxy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3246-3252)

    #pragma omp simd aligned(g_xxy_xxz_y_xx, g_xxy_xxz_y_xy, g_xxy_xxz_y_xz, g_xxy_xxz_y_yy, g_xxy_xxz_y_yz, g_xxy_xxz_y_zz, g_y_z_0_0_xx_xx_y_xx, g_y_z_0_0_xx_xx_y_xy, g_y_z_0_0_xx_xx_y_xz, g_y_z_0_0_xx_xx_y_yy, g_y_z_0_0_xx_xx_y_yz, g_y_z_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xx_y_xx[i] = 4.0 * g_xxy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_y_xy[i] = 4.0 * g_xxy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_y_xz[i] = 4.0 * g_xxy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_y_yy[i] = 4.0 * g_xxy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_y_yz[i] = 4.0 * g_xxy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_y_zz[i] = 4.0 * g_xxy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3252-3258)

    #pragma omp simd aligned(g_xxy_xxz_z_xx, g_xxy_xxz_z_xy, g_xxy_xxz_z_xz, g_xxy_xxz_z_yy, g_xxy_xxz_z_yz, g_xxy_xxz_z_zz, g_y_z_0_0_xx_xx_z_xx, g_y_z_0_0_xx_xx_z_xy, g_y_z_0_0_xx_xx_z_xz, g_y_z_0_0_xx_xx_z_yy, g_y_z_0_0_xx_xx_z_yz, g_y_z_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xx_z_xx[i] = 4.0 * g_xxy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_z_xy[i] = 4.0 * g_xxy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_z_xz[i] = 4.0 * g_xxy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_z_yy[i] = 4.0 * g_xxy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_z_yz[i] = 4.0 * g_xxy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xx_z_zz[i] = 4.0 * g_xxy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3258-3264)

    #pragma omp simd aligned(g_xxy_xyz_x_xx, g_xxy_xyz_x_xy, g_xxy_xyz_x_xz, g_xxy_xyz_x_yy, g_xxy_xyz_x_yz, g_xxy_xyz_x_zz, g_y_z_0_0_xx_xy_x_xx, g_y_z_0_0_xx_xy_x_xy, g_y_z_0_0_xx_xy_x_xz, g_y_z_0_0_xx_xy_x_yy, g_y_z_0_0_xx_xy_x_yz, g_y_z_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xy_x_xx[i] = 4.0 * g_xxy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_x_xy[i] = 4.0 * g_xxy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_x_xz[i] = 4.0 * g_xxy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_x_yy[i] = 4.0 * g_xxy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_x_yz[i] = 4.0 * g_xxy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_x_zz[i] = 4.0 * g_xxy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3264-3270)

    #pragma omp simd aligned(g_xxy_xyz_y_xx, g_xxy_xyz_y_xy, g_xxy_xyz_y_xz, g_xxy_xyz_y_yy, g_xxy_xyz_y_yz, g_xxy_xyz_y_zz, g_y_z_0_0_xx_xy_y_xx, g_y_z_0_0_xx_xy_y_xy, g_y_z_0_0_xx_xy_y_xz, g_y_z_0_0_xx_xy_y_yy, g_y_z_0_0_xx_xy_y_yz, g_y_z_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xy_y_xx[i] = 4.0 * g_xxy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_y_xy[i] = 4.0 * g_xxy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_y_xz[i] = 4.0 * g_xxy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_y_yy[i] = 4.0 * g_xxy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_y_yz[i] = 4.0 * g_xxy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_y_zz[i] = 4.0 * g_xxy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3270-3276)

    #pragma omp simd aligned(g_xxy_xyz_z_xx, g_xxy_xyz_z_xy, g_xxy_xyz_z_xz, g_xxy_xyz_z_yy, g_xxy_xyz_z_yz, g_xxy_xyz_z_zz, g_y_z_0_0_xx_xy_z_xx, g_y_z_0_0_xx_xy_z_xy, g_y_z_0_0_xx_xy_z_xz, g_y_z_0_0_xx_xy_z_yy, g_y_z_0_0_xx_xy_z_yz, g_y_z_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xy_z_xx[i] = 4.0 * g_xxy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_z_xy[i] = 4.0 * g_xxy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_z_xz[i] = 4.0 * g_xxy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_z_yy[i] = 4.0 * g_xxy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_z_yz[i] = 4.0 * g_xxy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xy_z_zz[i] = 4.0 * g_xxy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3276-3282)

    #pragma omp simd aligned(g_xxy_x_x_xx, g_xxy_x_x_xy, g_xxy_x_x_xz, g_xxy_x_x_yy, g_xxy_x_x_yz, g_xxy_x_x_zz, g_xxy_xzz_x_xx, g_xxy_xzz_x_xy, g_xxy_xzz_x_xz, g_xxy_xzz_x_yy, g_xxy_xzz_x_yz, g_xxy_xzz_x_zz, g_y_z_0_0_xx_xz_x_xx, g_y_z_0_0_xx_xz_x_xy, g_y_z_0_0_xx_xz_x_xz, g_y_z_0_0_xx_xz_x_yy, g_y_z_0_0_xx_xz_x_yz, g_y_z_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xz_x_xx[i] = -2.0 * g_xxy_x_x_xx[i] * a_exp + 4.0 * g_xxy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_x_xy[i] = -2.0 * g_xxy_x_x_xy[i] * a_exp + 4.0 * g_xxy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_x_xz[i] = -2.0 * g_xxy_x_x_xz[i] * a_exp + 4.0 * g_xxy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_x_yy[i] = -2.0 * g_xxy_x_x_yy[i] * a_exp + 4.0 * g_xxy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_x_yz[i] = -2.0 * g_xxy_x_x_yz[i] * a_exp + 4.0 * g_xxy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_x_zz[i] = -2.0 * g_xxy_x_x_zz[i] * a_exp + 4.0 * g_xxy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3282-3288)

    #pragma omp simd aligned(g_xxy_x_y_xx, g_xxy_x_y_xy, g_xxy_x_y_xz, g_xxy_x_y_yy, g_xxy_x_y_yz, g_xxy_x_y_zz, g_xxy_xzz_y_xx, g_xxy_xzz_y_xy, g_xxy_xzz_y_xz, g_xxy_xzz_y_yy, g_xxy_xzz_y_yz, g_xxy_xzz_y_zz, g_y_z_0_0_xx_xz_y_xx, g_y_z_0_0_xx_xz_y_xy, g_y_z_0_0_xx_xz_y_xz, g_y_z_0_0_xx_xz_y_yy, g_y_z_0_0_xx_xz_y_yz, g_y_z_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xz_y_xx[i] = -2.0 * g_xxy_x_y_xx[i] * a_exp + 4.0 * g_xxy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_y_xy[i] = -2.0 * g_xxy_x_y_xy[i] * a_exp + 4.0 * g_xxy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_y_xz[i] = -2.0 * g_xxy_x_y_xz[i] * a_exp + 4.0 * g_xxy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_y_yy[i] = -2.0 * g_xxy_x_y_yy[i] * a_exp + 4.0 * g_xxy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_y_yz[i] = -2.0 * g_xxy_x_y_yz[i] * a_exp + 4.0 * g_xxy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_y_zz[i] = -2.0 * g_xxy_x_y_zz[i] * a_exp + 4.0 * g_xxy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3288-3294)

    #pragma omp simd aligned(g_xxy_x_z_xx, g_xxy_x_z_xy, g_xxy_x_z_xz, g_xxy_x_z_yy, g_xxy_x_z_yz, g_xxy_x_z_zz, g_xxy_xzz_z_xx, g_xxy_xzz_z_xy, g_xxy_xzz_z_xz, g_xxy_xzz_z_yy, g_xxy_xzz_z_yz, g_xxy_xzz_z_zz, g_y_z_0_0_xx_xz_z_xx, g_y_z_0_0_xx_xz_z_xy, g_y_z_0_0_xx_xz_z_xz, g_y_z_0_0_xx_xz_z_yy, g_y_z_0_0_xx_xz_z_yz, g_y_z_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_xz_z_xx[i] = -2.0 * g_xxy_x_z_xx[i] * a_exp + 4.0 * g_xxy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_z_xy[i] = -2.0 * g_xxy_x_z_xy[i] * a_exp + 4.0 * g_xxy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_z_xz[i] = -2.0 * g_xxy_x_z_xz[i] * a_exp + 4.0 * g_xxy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_z_yy[i] = -2.0 * g_xxy_x_z_yy[i] * a_exp + 4.0 * g_xxy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_z_yz[i] = -2.0 * g_xxy_x_z_yz[i] * a_exp + 4.0 * g_xxy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_xz_z_zz[i] = -2.0 * g_xxy_x_z_zz[i] * a_exp + 4.0 * g_xxy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3294-3300)

    #pragma omp simd aligned(g_xxy_yyz_x_xx, g_xxy_yyz_x_xy, g_xxy_yyz_x_xz, g_xxy_yyz_x_yy, g_xxy_yyz_x_yz, g_xxy_yyz_x_zz, g_y_z_0_0_xx_yy_x_xx, g_y_z_0_0_xx_yy_x_xy, g_y_z_0_0_xx_yy_x_xz, g_y_z_0_0_xx_yy_x_yy, g_y_z_0_0_xx_yy_x_yz, g_y_z_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yy_x_xx[i] = 4.0 * g_xxy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_x_xy[i] = 4.0 * g_xxy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_x_xz[i] = 4.0 * g_xxy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_x_yy[i] = 4.0 * g_xxy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_x_yz[i] = 4.0 * g_xxy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_x_zz[i] = 4.0 * g_xxy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3300-3306)

    #pragma omp simd aligned(g_xxy_yyz_y_xx, g_xxy_yyz_y_xy, g_xxy_yyz_y_xz, g_xxy_yyz_y_yy, g_xxy_yyz_y_yz, g_xxy_yyz_y_zz, g_y_z_0_0_xx_yy_y_xx, g_y_z_0_0_xx_yy_y_xy, g_y_z_0_0_xx_yy_y_xz, g_y_z_0_0_xx_yy_y_yy, g_y_z_0_0_xx_yy_y_yz, g_y_z_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yy_y_xx[i] = 4.0 * g_xxy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_y_xy[i] = 4.0 * g_xxy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_y_xz[i] = 4.0 * g_xxy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_y_yy[i] = 4.0 * g_xxy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_y_yz[i] = 4.0 * g_xxy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_y_zz[i] = 4.0 * g_xxy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3306-3312)

    #pragma omp simd aligned(g_xxy_yyz_z_xx, g_xxy_yyz_z_xy, g_xxy_yyz_z_xz, g_xxy_yyz_z_yy, g_xxy_yyz_z_yz, g_xxy_yyz_z_zz, g_y_z_0_0_xx_yy_z_xx, g_y_z_0_0_xx_yy_z_xy, g_y_z_0_0_xx_yy_z_xz, g_y_z_0_0_xx_yy_z_yy, g_y_z_0_0_xx_yy_z_yz, g_y_z_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yy_z_xx[i] = 4.0 * g_xxy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_z_xy[i] = 4.0 * g_xxy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_z_xz[i] = 4.0 * g_xxy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_z_yy[i] = 4.0 * g_xxy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_z_yz[i] = 4.0 * g_xxy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yy_z_zz[i] = 4.0 * g_xxy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3312-3318)

    #pragma omp simd aligned(g_xxy_y_x_xx, g_xxy_y_x_xy, g_xxy_y_x_xz, g_xxy_y_x_yy, g_xxy_y_x_yz, g_xxy_y_x_zz, g_xxy_yzz_x_xx, g_xxy_yzz_x_xy, g_xxy_yzz_x_xz, g_xxy_yzz_x_yy, g_xxy_yzz_x_yz, g_xxy_yzz_x_zz, g_y_z_0_0_xx_yz_x_xx, g_y_z_0_0_xx_yz_x_xy, g_y_z_0_0_xx_yz_x_xz, g_y_z_0_0_xx_yz_x_yy, g_y_z_0_0_xx_yz_x_yz, g_y_z_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yz_x_xx[i] = -2.0 * g_xxy_y_x_xx[i] * a_exp + 4.0 * g_xxy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_x_xy[i] = -2.0 * g_xxy_y_x_xy[i] * a_exp + 4.0 * g_xxy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_x_xz[i] = -2.0 * g_xxy_y_x_xz[i] * a_exp + 4.0 * g_xxy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_x_yy[i] = -2.0 * g_xxy_y_x_yy[i] * a_exp + 4.0 * g_xxy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_x_yz[i] = -2.0 * g_xxy_y_x_yz[i] * a_exp + 4.0 * g_xxy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_x_zz[i] = -2.0 * g_xxy_y_x_zz[i] * a_exp + 4.0 * g_xxy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3318-3324)

    #pragma omp simd aligned(g_xxy_y_y_xx, g_xxy_y_y_xy, g_xxy_y_y_xz, g_xxy_y_y_yy, g_xxy_y_y_yz, g_xxy_y_y_zz, g_xxy_yzz_y_xx, g_xxy_yzz_y_xy, g_xxy_yzz_y_xz, g_xxy_yzz_y_yy, g_xxy_yzz_y_yz, g_xxy_yzz_y_zz, g_y_z_0_0_xx_yz_y_xx, g_y_z_0_0_xx_yz_y_xy, g_y_z_0_0_xx_yz_y_xz, g_y_z_0_0_xx_yz_y_yy, g_y_z_0_0_xx_yz_y_yz, g_y_z_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yz_y_xx[i] = -2.0 * g_xxy_y_y_xx[i] * a_exp + 4.0 * g_xxy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_y_xy[i] = -2.0 * g_xxy_y_y_xy[i] * a_exp + 4.0 * g_xxy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_y_xz[i] = -2.0 * g_xxy_y_y_xz[i] * a_exp + 4.0 * g_xxy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_y_yy[i] = -2.0 * g_xxy_y_y_yy[i] * a_exp + 4.0 * g_xxy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_y_yz[i] = -2.0 * g_xxy_y_y_yz[i] * a_exp + 4.0 * g_xxy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_y_zz[i] = -2.0 * g_xxy_y_y_zz[i] * a_exp + 4.0 * g_xxy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3324-3330)

    #pragma omp simd aligned(g_xxy_y_z_xx, g_xxy_y_z_xy, g_xxy_y_z_xz, g_xxy_y_z_yy, g_xxy_y_z_yz, g_xxy_y_z_zz, g_xxy_yzz_z_xx, g_xxy_yzz_z_xy, g_xxy_yzz_z_xz, g_xxy_yzz_z_yy, g_xxy_yzz_z_yz, g_xxy_yzz_z_zz, g_y_z_0_0_xx_yz_z_xx, g_y_z_0_0_xx_yz_z_xy, g_y_z_0_0_xx_yz_z_xz, g_y_z_0_0_xx_yz_z_yy, g_y_z_0_0_xx_yz_z_yz, g_y_z_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_yz_z_xx[i] = -2.0 * g_xxy_y_z_xx[i] * a_exp + 4.0 * g_xxy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_z_xy[i] = -2.0 * g_xxy_y_z_xy[i] * a_exp + 4.0 * g_xxy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_z_xz[i] = -2.0 * g_xxy_y_z_xz[i] * a_exp + 4.0 * g_xxy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_z_yy[i] = -2.0 * g_xxy_y_z_yy[i] * a_exp + 4.0 * g_xxy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_z_yz[i] = -2.0 * g_xxy_y_z_yz[i] * a_exp + 4.0 * g_xxy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_yz_z_zz[i] = -2.0 * g_xxy_y_z_zz[i] * a_exp + 4.0 * g_xxy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3330-3336)

    #pragma omp simd aligned(g_xxy_z_x_xx, g_xxy_z_x_xy, g_xxy_z_x_xz, g_xxy_z_x_yy, g_xxy_z_x_yz, g_xxy_z_x_zz, g_xxy_zzz_x_xx, g_xxy_zzz_x_xy, g_xxy_zzz_x_xz, g_xxy_zzz_x_yy, g_xxy_zzz_x_yz, g_xxy_zzz_x_zz, g_y_z_0_0_xx_zz_x_xx, g_y_z_0_0_xx_zz_x_xy, g_y_z_0_0_xx_zz_x_xz, g_y_z_0_0_xx_zz_x_yy, g_y_z_0_0_xx_zz_x_yz, g_y_z_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_zz_x_xx[i] = -4.0 * g_xxy_z_x_xx[i] * a_exp + 4.0 * g_xxy_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_x_xy[i] = -4.0 * g_xxy_z_x_xy[i] * a_exp + 4.0 * g_xxy_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_x_xz[i] = -4.0 * g_xxy_z_x_xz[i] * a_exp + 4.0 * g_xxy_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_x_yy[i] = -4.0 * g_xxy_z_x_yy[i] * a_exp + 4.0 * g_xxy_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_x_yz[i] = -4.0 * g_xxy_z_x_yz[i] * a_exp + 4.0 * g_xxy_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_x_zz[i] = -4.0 * g_xxy_z_x_zz[i] * a_exp + 4.0 * g_xxy_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3336-3342)

    #pragma omp simd aligned(g_xxy_z_y_xx, g_xxy_z_y_xy, g_xxy_z_y_xz, g_xxy_z_y_yy, g_xxy_z_y_yz, g_xxy_z_y_zz, g_xxy_zzz_y_xx, g_xxy_zzz_y_xy, g_xxy_zzz_y_xz, g_xxy_zzz_y_yy, g_xxy_zzz_y_yz, g_xxy_zzz_y_zz, g_y_z_0_0_xx_zz_y_xx, g_y_z_0_0_xx_zz_y_xy, g_y_z_0_0_xx_zz_y_xz, g_y_z_0_0_xx_zz_y_yy, g_y_z_0_0_xx_zz_y_yz, g_y_z_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_zz_y_xx[i] = -4.0 * g_xxy_z_y_xx[i] * a_exp + 4.0 * g_xxy_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_y_xy[i] = -4.0 * g_xxy_z_y_xy[i] * a_exp + 4.0 * g_xxy_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_y_xz[i] = -4.0 * g_xxy_z_y_xz[i] * a_exp + 4.0 * g_xxy_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_y_yy[i] = -4.0 * g_xxy_z_y_yy[i] * a_exp + 4.0 * g_xxy_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_y_yz[i] = -4.0 * g_xxy_z_y_yz[i] * a_exp + 4.0 * g_xxy_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_y_zz[i] = -4.0 * g_xxy_z_y_zz[i] * a_exp + 4.0 * g_xxy_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3342-3348)

    #pragma omp simd aligned(g_xxy_z_z_xx, g_xxy_z_z_xy, g_xxy_z_z_xz, g_xxy_z_z_yy, g_xxy_z_z_yz, g_xxy_z_z_zz, g_xxy_zzz_z_xx, g_xxy_zzz_z_xy, g_xxy_zzz_z_xz, g_xxy_zzz_z_yy, g_xxy_zzz_z_yz, g_xxy_zzz_z_zz, g_y_z_0_0_xx_zz_z_xx, g_y_z_0_0_xx_zz_z_xy, g_y_z_0_0_xx_zz_z_xz, g_y_z_0_0_xx_zz_z_yy, g_y_z_0_0_xx_zz_z_yz, g_y_z_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xx_zz_z_xx[i] = -4.0 * g_xxy_z_z_xx[i] * a_exp + 4.0 * g_xxy_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_z_xy[i] = -4.0 * g_xxy_z_z_xy[i] * a_exp + 4.0 * g_xxy_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_z_xz[i] = -4.0 * g_xxy_z_z_xz[i] * a_exp + 4.0 * g_xxy_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_z_yy[i] = -4.0 * g_xxy_z_z_yy[i] * a_exp + 4.0 * g_xxy_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_z_yz[i] = -4.0 * g_xxy_z_z_yz[i] * a_exp + 4.0 * g_xxy_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xx_zz_z_zz[i] = -4.0 * g_xxy_z_z_zz[i] * a_exp + 4.0 * g_xxy_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3348-3354)

    #pragma omp simd aligned(g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_xyy_xxz_x_xx, g_xyy_xxz_x_xy, g_xyy_xxz_x_xz, g_xyy_xxz_x_yy, g_xyy_xxz_x_yz, g_xyy_xxz_x_zz, g_y_z_0_0_xy_xx_x_xx, g_y_z_0_0_xy_xx_x_xy, g_y_z_0_0_xy_xx_x_xz, g_y_z_0_0_xy_xx_x_yy, g_y_z_0_0_xy_xx_x_yz, g_y_z_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xx_x_xx[i] = -2.0 * g_x_xxz_x_xx[i] * b_exp + 4.0 * g_xyy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_x_xy[i] = -2.0 * g_x_xxz_x_xy[i] * b_exp + 4.0 * g_xyy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_x_xz[i] = -2.0 * g_x_xxz_x_xz[i] * b_exp + 4.0 * g_xyy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_x_yy[i] = -2.0 * g_x_xxz_x_yy[i] * b_exp + 4.0 * g_xyy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_x_yz[i] = -2.0 * g_x_xxz_x_yz[i] * b_exp + 4.0 * g_xyy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_x_zz[i] = -2.0 * g_x_xxz_x_zz[i] * b_exp + 4.0 * g_xyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3354-3360)

    #pragma omp simd aligned(g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_xyy_xxz_y_xx, g_xyy_xxz_y_xy, g_xyy_xxz_y_xz, g_xyy_xxz_y_yy, g_xyy_xxz_y_yz, g_xyy_xxz_y_zz, g_y_z_0_0_xy_xx_y_xx, g_y_z_0_0_xy_xx_y_xy, g_y_z_0_0_xy_xx_y_xz, g_y_z_0_0_xy_xx_y_yy, g_y_z_0_0_xy_xx_y_yz, g_y_z_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xx_y_xx[i] = -2.0 * g_x_xxz_y_xx[i] * b_exp + 4.0 * g_xyy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_y_xy[i] = -2.0 * g_x_xxz_y_xy[i] * b_exp + 4.0 * g_xyy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_y_xz[i] = -2.0 * g_x_xxz_y_xz[i] * b_exp + 4.0 * g_xyy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_y_yy[i] = -2.0 * g_x_xxz_y_yy[i] * b_exp + 4.0 * g_xyy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_y_yz[i] = -2.0 * g_x_xxz_y_yz[i] * b_exp + 4.0 * g_xyy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_y_zz[i] = -2.0 * g_x_xxz_y_zz[i] * b_exp + 4.0 * g_xyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3360-3366)

    #pragma omp simd aligned(g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_xyy_xxz_z_xx, g_xyy_xxz_z_xy, g_xyy_xxz_z_xz, g_xyy_xxz_z_yy, g_xyy_xxz_z_yz, g_xyy_xxz_z_zz, g_y_z_0_0_xy_xx_z_xx, g_y_z_0_0_xy_xx_z_xy, g_y_z_0_0_xy_xx_z_xz, g_y_z_0_0_xy_xx_z_yy, g_y_z_0_0_xy_xx_z_yz, g_y_z_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xx_z_xx[i] = -2.0 * g_x_xxz_z_xx[i] * b_exp + 4.0 * g_xyy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_z_xy[i] = -2.0 * g_x_xxz_z_xy[i] * b_exp + 4.0 * g_xyy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_z_xz[i] = -2.0 * g_x_xxz_z_xz[i] * b_exp + 4.0 * g_xyy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_z_yy[i] = -2.0 * g_x_xxz_z_yy[i] * b_exp + 4.0 * g_xyy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_z_yz[i] = -2.0 * g_x_xxz_z_yz[i] * b_exp + 4.0 * g_xyy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xx_z_zz[i] = -2.0 * g_x_xxz_z_zz[i] * b_exp + 4.0 * g_xyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3366-3372)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xyy_xyz_x_xx, g_xyy_xyz_x_xy, g_xyy_xyz_x_xz, g_xyy_xyz_x_yy, g_xyy_xyz_x_yz, g_xyy_xyz_x_zz, g_y_z_0_0_xy_xy_x_xx, g_y_z_0_0_xy_xy_x_xy, g_y_z_0_0_xy_xy_x_xz, g_y_z_0_0_xy_xy_x_yy, g_y_z_0_0_xy_xy_x_yz, g_y_z_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xy_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3372-3378)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xyy_xyz_y_xx, g_xyy_xyz_y_xy, g_xyy_xyz_y_xz, g_xyy_xyz_y_yy, g_xyy_xyz_y_yz, g_xyy_xyz_y_zz, g_y_z_0_0_xy_xy_y_xx, g_y_z_0_0_xy_xy_y_xy, g_y_z_0_0_xy_xy_y_xz, g_y_z_0_0_xy_xy_y_yy, g_y_z_0_0_xy_xy_y_yz, g_y_z_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xy_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3378-3384)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xyy_xyz_z_xx, g_xyy_xyz_z_xy, g_xyy_xyz_z_xz, g_xyy_xyz_z_yy, g_xyy_xyz_z_yz, g_xyy_xyz_z_zz, g_y_z_0_0_xy_xy_z_xx, g_y_z_0_0_xy_xy_z_xy, g_y_z_0_0_xy_xy_z_xz, g_y_z_0_0_xy_xy_z_yy, g_y_z_0_0_xy_xy_z_yz, g_y_z_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xy_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xy_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3384-3390)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_xyy_x_x_xx, g_xyy_x_x_xy, g_xyy_x_x_xz, g_xyy_x_x_yy, g_xyy_x_x_yz, g_xyy_x_x_zz, g_xyy_xzz_x_xx, g_xyy_xzz_x_xy, g_xyy_xzz_x_xz, g_xyy_xzz_x_yy, g_xyy_xzz_x_yz, g_xyy_xzz_x_zz, g_y_z_0_0_xy_xz_x_xx, g_y_z_0_0_xy_xz_x_xy, g_y_z_0_0_xy_xz_x_xz, g_y_z_0_0_xy_xz_x_yy, g_y_z_0_0_xy_xz_x_yz, g_y_z_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xz_x_xx[i] = g_x_x_x_xx[i] - 2.0 * g_x_xzz_x_xx[i] * b_exp - 2.0 * g_xyy_x_x_xx[i] * a_exp + 4.0 * g_xyy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_x_xy[i] = g_x_x_x_xy[i] - 2.0 * g_x_xzz_x_xy[i] * b_exp - 2.0 * g_xyy_x_x_xy[i] * a_exp + 4.0 * g_xyy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_x_xz[i] = g_x_x_x_xz[i] - 2.0 * g_x_xzz_x_xz[i] * b_exp - 2.0 * g_xyy_x_x_xz[i] * a_exp + 4.0 * g_xyy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_x_yy[i] = g_x_x_x_yy[i] - 2.0 * g_x_xzz_x_yy[i] * b_exp - 2.0 * g_xyy_x_x_yy[i] * a_exp + 4.0 * g_xyy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_x_yz[i] = g_x_x_x_yz[i] - 2.0 * g_x_xzz_x_yz[i] * b_exp - 2.0 * g_xyy_x_x_yz[i] * a_exp + 4.0 * g_xyy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_x_zz[i] = g_x_x_x_zz[i] - 2.0 * g_x_xzz_x_zz[i] * b_exp - 2.0 * g_xyy_x_x_zz[i] * a_exp + 4.0 * g_xyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3390-3396)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_xyy_x_y_xx, g_xyy_x_y_xy, g_xyy_x_y_xz, g_xyy_x_y_yy, g_xyy_x_y_yz, g_xyy_x_y_zz, g_xyy_xzz_y_xx, g_xyy_xzz_y_xy, g_xyy_xzz_y_xz, g_xyy_xzz_y_yy, g_xyy_xzz_y_yz, g_xyy_xzz_y_zz, g_y_z_0_0_xy_xz_y_xx, g_y_z_0_0_xy_xz_y_xy, g_y_z_0_0_xy_xz_y_xz, g_y_z_0_0_xy_xz_y_yy, g_y_z_0_0_xy_xz_y_yz, g_y_z_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xz_y_xx[i] = g_x_x_y_xx[i] - 2.0 * g_x_xzz_y_xx[i] * b_exp - 2.0 * g_xyy_x_y_xx[i] * a_exp + 4.0 * g_xyy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_y_xy[i] = g_x_x_y_xy[i] - 2.0 * g_x_xzz_y_xy[i] * b_exp - 2.0 * g_xyy_x_y_xy[i] * a_exp + 4.0 * g_xyy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_y_xz[i] = g_x_x_y_xz[i] - 2.0 * g_x_xzz_y_xz[i] * b_exp - 2.0 * g_xyy_x_y_xz[i] * a_exp + 4.0 * g_xyy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_y_yy[i] = g_x_x_y_yy[i] - 2.0 * g_x_xzz_y_yy[i] * b_exp - 2.0 * g_xyy_x_y_yy[i] * a_exp + 4.0 * g_xyy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_y_yz[i] = g_x_x_y_yz[i] - 2.0 * g_x_xzz_y_yz[i] * b_exp - 2.0 * g_xyy_x_y_yz[i] * a_exp + 4.0 * g_xyy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_y_zz[i] = g_x_x_y_zz[i] - 2.0 * g_x_xzz_y_zz[i] * b_exp - 2.0 * g_xyy_x_y_zz[i] * a_exp + 4.0 * g_xyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3396-3402)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_xyy_x_z_xx, g_xyy_x_z_xy, g_xyy_x_z_xz, g_xyy_x_z_yy, g_xyy_x_z_yz, g_xyy_x_z_zz, g_xyy_xzz_z_xx, g_xyy_xzz_z_xy, g_xyy_xzz_z_xz, g_xyy_xzz_z_yy, g_xyy_xzz_z_yz, g_xyy_xzz_z_zz, g_y_z_0_0_xy_xz_z_xx, g_y_z_0_0_xy_xz_z_xy, g_y_z_0_0_xy_xz_z_xz, g_y_z_0_0_xy_xz_z_yy, g_y_z_0_0_xy_xz_z_yz, g_y_z_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_xz_z_xx[i] = g_x_x_z_xx[i] - 2.0 * g_x_xzz_z_xx[i] * b_exp - 2.0 * g_xyy_x_z_xx[i] * a_exp + 4.0 * g_xyy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_z_xy[i] = g_x_x_z_xy[i] - 2.0 * g_x_xzz_z_xy[i] * b_exp - 2.0 * g_xyy_x_z_xy[i] * a_exp + 4.0 * g_xyy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_z_xz[i] = g_x_x_z_xz[i] - 2.0 * g_x_xzz_z_xz[i] * b_exp - 2.0 * g_xyy_x_z_xz[i] * a_exp + 4.0 * g_xyy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_z_yy[i] = g_x_x_z_yy[i] - 2.0 * g_x_xzz_z_yy[i] * b_exp - 2.0 * g_xyy_x_z_yy[i] * a_exp + 4.0 * g_xyy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_z_yz[i] = g_x_x_z_yz[i] - 2.0 * g_x_xzz_z_yz[i] * b_exp - 2.0 * g_xyy_x_z_yz[i] * a_exp + 4.0 * g_xyy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_xz_z_zz[i] = g_x_x_z_zz[i] - 2.0 * g_x_xzz_z_zz[i] * b_exp - 2.0 * g_xyy_x_z_zz[i] * a_exp + 4.0 * g_xyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3402-3408)

    #pragma omp simd aligned(g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_xyy_yyz_x_xx, g_xyy_yyz_x_xy, g_xyy_yyz_x_xz, g_xyy_yyz_x_yy, g_xyy_yyz_x_yz, g_xyy_yyz_x_zz, g_y_z_0_0_xy_yy_x_xx, g_y_z_0_0_xy_yy_x_xy, g_y_z_0_0_xy_yy_x_xz, g_y_z_0_0_xy_yy_x_yy, g_y_z_0_0_xy_yy_x_yz, g_y_z_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yy_x_xx[i] = -2.0 * g_x_yyz_x_xx[i] * b_exp + 4.0 * g_xyy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_x_xy[i] = -2.0 * g_x_yyz_x_xy[i] * b_exp + 4.0 * g_xyy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_x_xz[i] = -2.0 * g_x_yyz_x_xz[i] * b_exp + 4.0 * g_xyy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_x_yy[i] = -2.0 * g_x_yyz_x_yy[i] * b_exp + 4.0 * g_xyy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_x_yz[i] = -2.0 * g_x_yyz_x_yz[i] * b_exp + 4.0 * g_xyy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_x_zz[i] = -2.0 * g_x_yyz_x_zz[i] * b_exp + 4.0 * g_xyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3408-3414)

    #pragma omp simd aligned(g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_xyy_yyz_y_xx, g_xyy_yyz_y_xy, g_xyy_yyz_y_xz, g_xyy_yyz_y_yy, g_xyy_yyz_y_yz, g_xyy_yyz_y_zz, g_y_z_0_0_xy_yy_y_xx, g_y_z_0_0_xy_yy_y_xy, g_y_z_0_0_xy_yy_y_xz, g_y_z_0_0_xy_yy_y_yy, g_y_z_0_0_xy_yy_y_yz, g_y_z_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yy_y_xx[i] = -2.0 * g_x_yyz_y_xx[i] * b_exp + 4.0 * g_xyy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_y_xy[i] = -2.0 * g_x_yyz_y_xy[i] * b_exp + 4.0 * g_xyy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_y_xz[i] = -2.0 * g_x_yyz_y_xz[i] * b_exp + 4.0 * g_xyy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_y_yy[i] = -2.0 * g_x_yyz_y_yy[i] * b_exp + 4.0 * g_xyy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_y_yz[i] = -2.0 * g_x_yyz_y_yz[i] * b_exp + 4.0 * g_xyy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_y_zz[i] = -2.0 * g_x_yyz_y_zz[i] * b_exp + 4.0 * g_xyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3414-3420)

    #pragma omp simd aligned(g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_xyy_yyz_z_xx, g_xyy_yyz_z_xy, g_xyy_yyz_z_xz, g_xyy_yyz_z_yy, g_xyy_yyz_z_yz, g_xyy_yyz_z_zz, g_y_z_0_0_xy_yy_z_xx, g_y_z_0_0_xy_yy_z_xy, g_y_z_0_0_xy_yy_z_xz, g_y_z_0_0_xy_yy_z_yy, g_y_z_0_0_xy_yy_z_yz, g_y_z_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yy_z_xx[i] = -2.0 * g_x_yyz_z_xx[i] * b_exp + 4.0 * g_xyy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_z_xy[i] = -2.0 * g_x_yyz_z_xy[i] * b_exp + 4.0 * g_xyy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_z_xz[i] = -2.0 * g_x_yyz_z_xz[i] * b_exp + 4.0 * g_xyy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_z_yy[i] = -2.0 * g_x_yyz_z_yy[i] * b_exp + 4.0 * g_xyy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_z_yz[i] = -2.0 * g_x_yyz_z_yz[i] * b_exp + 4.0 * g_xyy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yy_z_zz[i] = -2.0 * g_x_yyz_z_zz[i] * b_exp + 4.0 * g_xyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3420-3426)

    #pragma omp simd aligned(g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_xyy_y_x_xx, g_xyy_y_x_xy, g_xyy_y_x_xz, g_xyy_y_x_yy, g_xyy_y_x_yz, g_xyy_y_x_zz, g_xyy_yzz_x_xx, g_xyy_yzz_x_xy, g_xyy_yzz_x_xz, g_xyy_yzz_x_yy, g_xyy_yzz_x_yz, g_xyy_yzz_x_zz, g_y_z_0_0_xy_yz_x_xx, g_y_z_0_0_xy_yz_x_xy, g_y_z_0_0_xy_yz_x_xz, g_y_z_0_0_xy_yz_x_yy, g_y_z_0_0_xy_yz_x_yz, g_y_z_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yz_x_xx[i] = g_x_y_x_xx[i] - 2.0 * g_x_yzz_x_xx[i] * b_exp - 2.0 * g_xyy_y_x_xx[i] * a_exp + 4.0 * g_xyy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_x_xy[i] = g_x_y_x_xy[i] - 2.0 * g_x_yzz_x_xy[i] * b_exp - 2.0 * g_xyy_y_x_xy[i] * a_exp + 4.0 * g_xyy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_x_xz[i] = g_x_y_x_xz[i] - 2.0 * g_x_yzz_x_xz[i] * b_exp - 2.0 * g_xyy_y_x_xz[i] * a_exp + 4.0 * g_xyy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_x_yy[i] = g_x_y_x_yy[i] - 2.0 * g_x_yzz_x_yy[i] * b_exp - 2.0 * g_xyy_y_x_yy[i] * a_exp + 4.0 * g_xyy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_x_yz[i] = g_x_y_x_yz[i] - 2.0 * g_x_yzz_x_yz[i] * b_exp - 2.0 * g_xyy_y_x_yz[i] * a_exp + 4.0 * g_xyy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_x_zz[i] = g_x_y_x_zz[i] - 2.0 * g_x_yzz_x_zz[i] * b_exp - 2.0 * g_xyy_y_x_zz[i] * a_exp + 4.0 * g_xyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3426-3432)

    #pragma omp simd aligned(g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_xyy_y_y_xx, g_xyy_y_y_xy, g_xyy_y_y_xz, g_xyy_y_y_yy, g_xyy_y_y_yz, g_xyy_y_y_zz, g_xyy_yzz_y_xx, g_xyy_yzz_y_xy, g_xyy_yzz_y_xz, g_xyy_yzz_y_yy, g_xyy_yzz_y_yz, g_xyy_yzz_y_zz, g_y_z_0_0_xy_yz_y_xx, g_y_z_0_0_xy_yz_y_xy, g_y_z_0_0_xy_yz_y_xz, g_y_z_0_0_xy_yz_y_yy, g_y_z_0_0_xy_yz_y_yz, g_y_z_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yz_y_xx[i] = g_x_y_y_xx[i] - 2.0 * g_x_yzz_y_xx[i] * b_exp - 2.0 * g_xyy_y_y_xx[i] * a_exp + 4.0 * g_xyy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_y_xy[i] = g_x_y_y_xy[i] - 2.0 * g_x_yzz_y_xy[i] * b_exp - 2.0 * g_xyy_y_y_xy[i] * a_exp + 4.0 * g_xyy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_y_xz[i] = g_x_y_y_xz[i] - 2.0 * g_x_yzz_y_xz[i] * b_exp - 2.0 * g_xyy_y_y_xz[i] * a_exp + 4.0 * g_xyy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_y_yy[i] = g_x_y_y_yy[i] - 2.0 * g_x_yzz_y_yy[i] * b_exp - 2.0 * g_xyy_y_y_yy[i] * a_exp + 4.0 * g_xyy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_y_yz[i] = g_x_y_y_yz[i] - 2.0 * g_x_yzz_y_yz[i] * b_exp - 2.0 * g_xyy_y_y_yz[i] * a_exp + 4.0 * g_xyy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_y_zz[i] = g_x_y_y_zz[i] - 2.0 * g_x_yzz_y_zz[i] * b_exp - 2.0 * g_xyy_y_y_zz[i] * a_exp + 4.0 * g_xyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3432-3438)

    #pragma omp simd aligned(g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_xyy_y_z_xx, g_xyy_y_z_xy, g_xyy_y_z_xz, g_xyy_y_z_yy, g_xyy_y_z_yz, g_xyy_y_z_zz, g_xyy_yzz_z_xx, g_xyy_yzz_z_xy, g_xyy_yzz_z_xz, g_xyy_yzz_z_yy, g_xyy_yzz_z_yz, g_xyy_yzz_z_zz, g_y_z_0_0_xy_yz_z_xx, g_y_z_0_0_xy_yz_z_xy, g_y_z_0_0_xy_yz_z_xz, g_y_z_0_0_xy_yz_z_yy, g_y_z_0_0_xy_yz_z_yz, g_y_z_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_yz_z_xx[i] = g_x_y_z_xx[i] - 2.0 * g_x_yzz_z_xx[i] * b_exp - 2.0 * g_xyy_y_z_xx[i] * a_exp + 4.0 * g_xyy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_z_xy[i] = g_x_y_z_xy[i] - 2.0 * g_x_yzz_z_xy[i] * b_exp - 2.0 * g_xyy_y_z_xy[i] * a_exp + 4.0 * g_xyy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_z_xz[i] = g_x_y_z_xz[i] - 2.0 * g_x_yzz_z_xz[i] * b_exp - 2.0 * g_xyy_y_z_xz[i] * a_exp + 4.0 * g_xyy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_z_yy[i] = g_x_y_z_yy[i] - 2.0 * g_x_yzz_z_yy[i] * b_exp - 2.0 * g_xyy_y_z_yy[i] * a_exp + 4.0 * g_xyy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_z_yz[i] = g_x_y_z_yz[i] - 2.0 * g_x_yzz_z_yz[i] * b_exp - 2.0 * g_xyy_y_z_yz[i] * a_exp + 4.0 * g_xyy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_yz_z_zz[i] = g_x_y_z_zz[i] - 2.0 * g_x_yzz_z_zz[i] * b_exp - 2.0 * g_xyy_y_z_zz[i] * a_exp + 4.0 * g_xyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3438-3444)

    #pragma omp simd aligned(g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_x_zzz_x_xx, g_x_zzz_x_xy, g_x_zzz_x_xz, g_x_zzz_x_yy, g_x_zzz_x_yz, g_x_zzz_x_zz, g_xyy_z_x_xx, g_xyy_z_x_xy, g_xyy_z_x_xz, g_xyy_z_x_yy, g_xyy_z_x_yz, g_xyy_z_x_zz, g_xyy_zzz_x_xx, g_xyy_zzz_x_xy, g_xyy_zzz_x_xz, g_xyy_zzz_x_yy, g_xyy_zzz_x_yz, g_xyy_zzz_x_zz, g_y_z_0_0_xy_zz_x_xx, g_y_z_0_0_xy_zz_x_xy, g_y_z_0_0_xy_zz_x_xz, g_y_z_0_0_xy_zz_x_yy, g_y_z_0_0_xy_zz_x_yz, g_y_z_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_zz_x_xx[i] = 2.0 * g_x_z_x_xx[i] - 2.0 * g_x_zzz_x_xx[i] * b_exp - 4.0 * g_xyy_z_x_xx[i] * a_exp + 4.0 * g_xyy_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_x_xy[i] = 2.0 * g_x_z_x_xy[i] - 2.0 * g_x_zzz_x_xy[i] * b_exp - 4.0 * g_xyy_z_x_xy[i] * a_exp + 4.0 * g_xyy_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_x_xz[i] = 2.0 * g_x_z_x_xz[i] - 2.0 * g_x_zzz_x_xz[i] * b_exp - 4.0 * g_xyy_z_x_xz[i] * a_exp + 4.0 * g_xyy_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_x_yy[i] = 2.0 * g_x_z_x_yy[i] - 2.0 * g_x_zzz_x_yy[i] * b_exp - 4.0 * g_xyy_z_x_yy[i] * a_exp + 4.0 * g_xyy_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_x_yz[i] = 2.0 * g_x_z_x_yz[i] - 2.0 * g_x_zzz_x_yz[i] * b_exp - 4.0 * g_xyy_z_x_yz[i] * a_exp + 4.0 * g_xyy_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_x_zz[i] = 2.0 * g_x_z_x_zz[i] - 2.0 * g_x_zzz_x_zz[i] * b_exp - 4.0 * g_xyy_z_x_zz[i] * a_exp + 4.0 * g_xyy_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3444-3450)

    #pragma omp simd aligned(g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_x_zzz_y_xx, g_x_zzz_y_xy, g_x_zzz_y_xz, g_x_zzz_y_yy, g_x_zzz_y_yz, g_x_zzz_y_zz, g_xyy_z_y_xx, g_xyy_z_y_xy, g_xyy_z_y_xz, g_xyy_z_y_yy, g_xyy_z_y_yz, g_xyy_z_y_zz, g_xyy_zzz_y_xx, g_xyy_zzz_y_xy, g_xyy_zzz_y_xz, g_xyy_zzz_y_yy, g_xyy_zzz_y_yz, g_xyy_zzz_y_zz, g_y_z_0_0_xy_zz_y_xx, g_y_z_0_0_xy_zz_y_xy, g_y_z_0_0_xy_zz_y_xz, g_y_z_0_0_xy_zz_y_yy, g_y_z_0_0_xy_zz_y_yz, g_y_z_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_zz_y_xx[i] = 2.0 * g_x_z_y_xx[i] - 2.0 * g_x_zzz_y_xx[i] * b_exp - 4.0 * g_xyy_z_y_xx[i] * a_exp + 4.0 * g_xyy_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_y_xy[i] = 2.0 * g_x_z_y_xy[i] - 2.0 * g_x_zzz_y_xy[i] * b_exp - 4.0 * g_xyy_z_y_xy[i] * a_exp + 4.0 * g_xyy_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_y_xz[i] = 2.0 * g_x_z_y_xz[i] - 2.0 * g_x_zzz_y_xz[i] * b_exp - 4.0 * g_xyy_z_y_xz[i] * a_exp + 4.0 * g_xyy_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_y_yy[i] = 2.0 * g_x_z_y_yy[i] - 2.0 * g_x_zzz_y_yy[i] * b_exp - 4.0 * g_xyy_z_y_yy[i] * a_exp + 4.0 * g_xyy_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_y_yz[i] = 2.0 * g_x_z_y_yz[i] - 2.0 * g_x_zzz_y_yz[i] * b_exp - 4.0 * g_xyy_z_y_yz[i] * a_exp + 4.0 * g_xyy_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_y_zz[i] = 2.0 * g_x_z_y_zz[i] - 2.0 * g_x_zzz_y_zz[i] * b_exp - 4.0 * g_xyy_z_y_zz[i] * a_exp + 4.0 * g_xyy_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3450-3456)

    #pragma omp simd aligned(g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_x_zzz_z_xx, g_x_zzz_z_xy, g_x_zzz_z_xz, g_x_zzz_z_yy, g_x_zzz_z_yz, g_x_zzz_z_zz, g_xyy_z_z_xx, g_xyy_z_z_xy, g_xyy_z_z_xz, g_xyy_z_z_yy, g_xyy_z_z_yz, g_xyy_z_z_zz, g_xyy_zzz_z_xx, g_xyy_zzz_z_xy, g_xyy_zzz_z_xz, g_xyy_zzz_z_yy, g_xyy_zzz_z_yz, g_xyy_zzz_z_zz, g_y_z_0_0_xy_zz_z_xx, g_y_z_0_0_xy_zz_z_xy, g_y_z_0_0_xy_zz_z_xz, g_y_z_0_0_xy_zz_z_yy, g_y_z_0_0_xy_zz_z_yz, g_y_z_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xy_zz_z_xx[i] = 2.0 * g_x_z_z_xx[i] - 2.0 * g_x_zzz_z_xx[i] * b_exp - 4.0 * g_xyy_z_z_xx[i] * a_exp + 4.0 * g_xyy_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_z_xy[i] = 2.0 * g_x_z_z_xy[i] - 2.0 * g_x_zzz_z_xy[i] * b_exp - 4.0 * g_xyy_z_z_xy[i] * a_exp + 4.0 * g_xyy_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_z_xz[i] = 2.0 * g_x_z_z_xz[i] - 2.0 * g_x_zzz_z_xz[i] * b_exp - 4.0 * g_xyy_z_z_xz[i] * a_exp + 4.0 * g_xyy_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_z_yy[i] = 2.0 * g_x_z_z_yy[i] - 2.0 * g_x_zzz_z_yy[i] * b_exp - 4.0 * g_xyy_z_z_yy[i] * a_exp + 4.0 * g_xyy_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_z_yz[i] = 2.0 * g_x_z_z_yz[i] - 2.0 * g_x_zzz_z_yz[i] * b_exp - 4.0 * g_xyy_z_z_yz[i] * a_exp + 4.0 * g_xyy_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xy_zz_z_zz[i] = 2.0 * g_x_z_z_zz[i] - 2.0 * g_x_zzz_z_zz[i] * b_exp - 4.0 * g_xyy_z_z_zz[i] * a_exp + 4.0 * g_xyy_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3456-3462)

    #pragma omp simd aligned(g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz, g_y_z_0_0_xz_xx_x_xx, g_y_z_0_0_xz_xx_x_xy, g_y_z_0_0_xz_xx_x_xz, g_y_z_0_0_xz_xx_x_yy, g_y_z_0_0_xz_xx_x_yz, g_y_z_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xx_x_xx[i] = 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_x_xy[i] = 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_x_xz[i] = 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_x_yy[i] = 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_x_yz[i] = 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_x_zz[i] = 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3462-3468)

    #pragma omp simd aligned(g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz, g_y_z_0_0_xz_xx_y_xx, g_y_z_0_0_xz_xx_y_xy, g_y_z_0_0_xz_xx_y_xz, g_y_z_0_0_xz_xx_y_yy, g_y_z_0_0_xz_xx_y_yz, g_y_z_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xx_y_xx[i] = 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_y_xy[i] = 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_y_xz[i] = 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_y_yy[i] = 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_y_yz[i] = 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_y_zz[i] = 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3468-3474)

    #pragma omp simd aligned(g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz, g_y_z_0_0_xz_xx_z_xx, g_y_z_0_0_xz_xx_z_xy, g_y_z_0_0_xz_xx_z_xz, g_y_z_0_0_xz_xx_z_yy, g_y_z_0_0_xz_xx_z_yz, g_y_z_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xx_z_xx[i] = 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_z_xy[i] = 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_z_xz[i] = 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_z_yy[i] = 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_z_yz[i] = 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xx_z_zz[i] = 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3474-3480)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_y_z_0_0_xz_xy_x_xx, g_y_z_0_0_xz_xy_x_xy, g_y_z_0_0_xz_xy_x_xz, g_y_z_0_0_xz_xy_x_yy, g_y_z_0_0_xz_xy_x_yz, g_y_z_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xy_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3480-3486)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_y_z_0_0_xz_xy_y_xx, g_y_z_0_0_xz_xy_y_xy, g_y_z_0_0_xz_xy_y_xz, g_y_z_0_0_xz_xy_y_yy, g_y_z_0_0_xz_xy_y_yz, g_y_z_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xy_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3486-3492)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_y_z_0_0_xz_xy_z_xx, g_y_z_0_0_xz_xy_z_xy, g_y_z_0_0_xz_xy_z_xz, g_y_z_0_0_xz_xy_z_yy, g_y_z_0_0_xz_xy_z_yz, g_y_z_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xy_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xy_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3492-3498)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz, g_y_z_0_0_xz_xz_x_xx, g_y_z_0_0_xz_xz_x_xy, g_y_z_0_0_xz_xz_x_xz, g_y_z_0_0_xz_xz_x_yy, g_y_z_0_0_xz_xz_x_yz, g_y_z_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xz_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3498-3504)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz, g_y_z_0_0_xz_xz_y_xx, g_y_z_0_0_xz_xz_y_xy, g_y_z_0_0_xz_xz_y_xz, g_y_z_0_0_xz_xz_y_yy, g_y_z_0_0_xz_xz_y_yz, g_y_z_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xz_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3504-3510)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz, g_y_z_0_0_xz_xz_z_xx, g_y_z_0_0_xz_xz_z_xy, g_y_z_0_0_xz_xz_z_xz, g_y_z_0_0_xz_xz_z_yy, g_y_z_0_0_xz_xz_z_yz, g_y_z_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_xz_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_xz_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3510-3516)

    #pragma omp simd aligned(g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz, g_y_z_0_0_xz_yy_x_xx, g_y_z_0_0_xz_yy_x_xy, g_y_z_0_0_xz_yy_x_xz, g_y_z_0_0_xz_yy_x_yy, g_y_z_0_0_xz_yy_x_yz, g_y_z_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yy_x_xx[i] = 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_x_xy[i] = 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_x_xz[i] = 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_x_yy[i] = 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_x_yz[i] = 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_x_zz[i] = 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3516-3522)

    #pragma omp simd aligned(g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz, g_y_z_0_0_xz_yy_y_xx, g_y_z_0_0_xz_yy_y_xy, g_y_z_0_0_xz_yy_y_xz, g_y_z_0_0_xz_yy_y_yy, g_y_z_0_0_xz_yy_y_yz, g_y_z_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yy_y_xx[i] = 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_y_xy[i] = 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_y_xz[i] = 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_y_yy[i] = 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_y_yz[i] = 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_y_zz[i] = 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3522-3528)

    #pragma omp simd aligned(g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz, g_y_z_0_0_xz_yy_z_xx, g_y_z_0_0_xz_yy_z_xy, g_y_z_0_0_xz_yy_z_xz, g_y_z_0_0_xz_yy_z_yy, g_y_z_0_0_xz_yy_z_yz, g_y_z_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yy_z_xx[i] = 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_z_xy[i] = 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_z_xz[i] = 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_z_yy[i] = 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_z_yz[i] = 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yy_z_zz[i] = 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3528-3534)

    #pragma omp simd aligned(g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz, g_y_z_0_0_xz_yz_x_xx, g_y_z_0_0_xz_yz_x_xy, g_y_z_0_0_xz_yz_x_xz, g_y_z_0_0_xz_yz_x_yy, g_y_z_0_0_xz_yz_x_yz, g_y_z_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yz_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3534-3540)

    #pragma omp simd aligned(g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz, g_y_z_0_0_xz_yz_y_xx, g_y_z_0_0_xz_yz_y_xy, g_y_z_0_0_xz_yz_y_xz, g_y_z_0_0_xz_yz_y_yy, g_y_z_0_0_xz_yz_y_yz, g_y_z_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yz_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3540-3546)

    #pragma omp simd aligned(g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz, g_y_z_0_0_xz_yz_z_xx, g_y_z_0_0_xz_yz_z_xy, g_y_z_0_0_xz_yz_z_xz, g_y_z_0_0_xz_yz_z_yy, g_y_z_0_0_xz_yz_z_yz, g_y_z_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_yz_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_yz_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3546-3552)

    #pragma omp simd aligned(g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_xyz_zzz_x_xx, g_xyz_zzz_x_xy, g_xyz_zzz_x_xz, g_xyz_zzz_x_yy, g_xyz_zzz_x_yz, g_xyz_zzz_x_zz, g_y_z_0_0_xz_zz_x_xx, g_y_z_0_0_xz_zz_x_xy, g_y_z_0_0_xz_zz_x_xz, g_y_z_0_0_xz_zz_x_yy, g_y_z_0_0_xz_zz_x_yz, g_y_z_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_zz_x_xx[i] = -4.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_x_xy[i] = -4.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_x_xz[i] = -4.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_x_yy[i] = -4.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_x_yz[i] = -4.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_x_zz[i] = -4.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3552-3558)

    #pragma omp simd aligned(g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_xyz_zzz_y_xx, g_xyz_zzz_y_xy, g_xyz_zzz_y_xz, g_xyz_zzz_y_yy, g_xyz_zzz_y_yz, g_xyz_zzz_y_zz, g_y_z_0_0_xz_zz_y_xx, g_y_z_0_0_xz_zz_y_xy, g_y_z_0_0_xz_zz_y_xz, g_y_z_0_0_xz_zz_y_yy, g_y_z_0_0_xz_zz_y_yz, g_y_z_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_zz_y_xx[i] = -4.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_y_xy[i] = -4.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_y_xz[i] = -4.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_y_yy[i] = -4.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_y_yz[i] = -4.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_y_zz[i] = -4.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3558-3564)

    #pragma omp simd aligned(g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_xyz_zzz_z_xx, g_xyz_zzz_z_xy, g_xyz_zzz_z_xz, g_xyz_zzz_z_yy, g_xyz_zzz_z_yz, g_xyz_zzz_z_zz, g_y_z_0_0_xz_zz_z_xx, g_y_z_0_0_xz_zz_z_xy, g_y_z_0_0_xz_zz_z_xz, g_y_z_0_0_xz_zz_z_yy, g_y_z_0_0_xz_zz_z_yz, g_y_z_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_xz_zz_z_xx[i] = -4.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_z_xy[i] = -4.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_z_xz[i] = -4.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_z_yy[i] = -4.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_z_yz[i] = -4.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_xz_zz_z_zz[i] = -4.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3564-3570)

    #pragma omp simd aligned(g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz, g_y_z_0_0_yy_xx_x_xx, g_y_z_0_0_yy_xx_x_xy, g_y_z_0_0_yy_xx_x_xz, g_y_z_0_0_yy_xx_x_yy, g_y_z_0_0_yy_xx_x_yz, g_y_z_0_0_yy_xx_x_zz, g_yyy_xxz_x_xx, g_yyy_xxz_x_xy, g_yyy_xxz_x_xz, g_yyy_xxz_x_yy, g_yyy_xxz_x_yz, g_yyy_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xx_x_xx[i] = -4.0 * g_y_xxz_x_xx[i] * b_exp + 4.0 * g_yyy_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_x_xy[i] = -4.0 * g_y_xxz_x_xy[i] * b_exp + 4.0 * g_yyy_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_x_xz[i] = -4.0 * g_y_xxz_x_xz[i] * b_exp + 4.0 * g_yyy_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_x_yy[i] = -4.0 * g_y_xxz_x_yy[i] * b_exp + 4.0 * g_yyy_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_x_yz[i] = -4.0 * g_y_xxz_x_yz[i] * b_exp + 4.0 * g_yyy_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_x_zz[i] = -4.0 * g_y_xxz_x_zz[i] * b_exp + 4.0 * g_yyy_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3570-3576)

    #pragma omp simd aligned(g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz, g_y_z_0_0_yy_xx_y_xx, g_y_z_0_0_yy_xx_y_xy, g_y_z_0_0_yy_xx_y_xz, g_y_z_0_0_yy_xx_y_yy, g_y_z_0_0_yy_xx_y_yz, g_y_z_0_0_yy_xx_y_zz, g_yyy_xxz_y_xx, g_yyy_xxz_y_xy, g_yyy_xxz_y_xz, g_yyy_xxz_y_yy, g_yyy_xxz_y_yz, g_yyy_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xx_y_xx[i] = -4.0 * g_y_xxz_y_xx[i] * b_exp + 4.0 * g_yyy_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_y_xy[i] = -4.0 * g_y_xxz_y_xy[i] * b_exp + 4.0 * g_yyy_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_y_xz[i] = -4.0 * g_y_xxz_y_xz[i] * b_exp + 4.0 * g_yyy_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_y_yy[i] = -4.0 * g_y_xxz_y_yy[i] * b_exp + 4.0 * g_yyy_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_y_yz[i] = -4.0 * g_y_xxz_y_yz[i] * b_exp + 4.0 * g_yyy_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_y_zz[i] = -4.0 * g_y_xxz_y_zz[i] * b_exp + 4.0 * g_yyy_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3576-3582)

    #pragma omp simd aligned(g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz, g_y_z_0_0_yy_xx_z_xx, g_y_z_0_0_yy_xx_z_xy, g_y_z_0_0_yy_xx_z_xz, g_y_z_0_0_yy_xx_z_yy, g_y_z_0_0_yy_xx_z_yz, g_y_z_0_0_yy_xx_z_zz, g_yyy_xxz_z_xx, g_yyy_xxz_z_xy, g_yyy_xxz_z_xz, g_yyy_xxz_z_yy, g_yyy_xxz_z_yz, g_yyy_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xx_z_xx[i] = -4.0 * g_y_xxz_z_xx[i] * b_exp + 4.0 * g_yyy_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_z_xy[i] = -4.0 * g_y_xxz_z_xy[i] * b_exp + 4.0 * g_yyy_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_z_xz[i] = -4.0 * g_y_xxz_z_xz[i] * b_exp + 4.0 * g_yyy_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_z_yy[i] = -4.0 * g_y_xxz_z_yy[i] * b_exp + 4.0 * g_yyy_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_z_yz[i] = -4.0 * g_y_xxz_z_yz[i] * b_exp + 4.0 * g_yyy_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xx_z_zz[i] = -4.0 * g_y_xxz_z_zz[i] * b_exp + 4.0 * g_yyy_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3582-3588)

    #pragma omp simd aligned(g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_y_z_0_0_yy_xy_x_xx, g_y_z_0_0_yy_xy_x_xy, g_y_z_0_0_yy_xy_x_xz, g_y_z_0_0_yy_xy_x_yy, g_y_z_0_0_yy_xy_x_yz, g_y_z_0_0_yy_xy_x_zz, g_yyy_xyz_x_xx, g_yyy_xyz_x_xy, g_yyy_xyz_x_xz, g_yyy_xyz_x_yy, g_yyy_xyz_x_yz, g_yyy_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xy_x_xx[i] = -4.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yyy_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_x_xy[i] = -4.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yyy_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_x_xz[i] = -4.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yyy_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_x_yy[i] = -4.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yyy_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_x_yz[i] = -4.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yyy_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_x_zz[i] = -4.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yyy_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3588-3594)

    #pragma omp simd aligned(g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_y_z_0_0_yy_xy_y_xx, g_y_z_0_0_yy_xy_y_xy, g_y_z_0_0_yy_xy_y_xz, g_y_z_0_0_yy_xy_y_yy, g_y_z_0_0_yy_xy_y_yz, g_y_z_0_0_yy_xy_y_zz, g_yyy_xyz_y_xx, g_yyy_xyz_y_xy, g_yyy_xyz_y_xz, g_yyy_xyz_y_yy, g_yyy_xyz_y_yz, g_yyy_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xy_y_xx[i] = -4.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yyy_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_y_xy[i] = -4.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yyy_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_y_xz[i] = -4.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yyy_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_y_yy[i] = -4.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yyy_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_y_yz[i] = -4.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yyy_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_y_zz[i] = -4.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yyy_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3594-3600)

    #pragma omp simd aligned(g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_y_z_0_0_yy_xy_z_xx, g_y_z_0_0_yy_xy_z_xy, g_y_z_0_0_yy_xy_z_xz, g_y_z_0_0_yy_xy_z_yy, g_y_z_0_0_yy_xy_z_yz, g_y_z_0_0_yy_xy_z_zz, g_yyy_xyz_z_xx, g_yyy_xyz_z_xy, g_yyy_xyz_z_xz, g_yyy_xyz_z_yy, g_yyy_xyz_z_yz, g_yyy_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xy_z_xx[i] = -4.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yyy_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_z_xy[i] = -4.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yyy_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_z_xz[i] = -4.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yyy_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_z_yy[i] = -4.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yyy_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_z_yz[i] = -4.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yyy_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xy_z_zz[i] = -4.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yyy_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3600-3606)

    #pragma omp simd aligned(g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz, g_y_z_0_0_yy_xz_x_xx, g_y_z_0_0_yy_xz_x_xy, g_y_z_0_0_yy_xz_x_xz, g_y_z_0_0_yy_xz_x_yy, g_y_z_0_0_yy_xz_x_yz, g_y_z_0_0_yy_xz_x_zz, g_yyy_x_x_xx, g_yyy_x_x_xy, g_yyy_x_x_xz, g_yyy_x_x_yy, g_yyy_x_x_yz, g_yyy_x_x_zz, g_yyy_xzz_x_xx, g_yyy_xzz_x_xy, g_yyy_xzz_x_xz, g_yyy_xzz_x_yy, g_yyy_xzz_x_yz, g_yyy_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xz_x_xx[i] = 2.0 * g_y_x_x_xx[i] - 4.0 * g_y_xzz_x_xx[i] * b_exp - 2.0 * g_yyy_x_x_xx[i] * a_exp + 4.0 * g_yyy_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_x_xy[i] = 2.0 * g_y_x_x_xy[i] - 4.0 * g_y_xzz_x_xy[i] * b_exp - 2.0 * g_yyy_x_x_xy[i] * a_exp + 4.0 * g_yyy_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_x_xz[i] = 2.0 * g_y_x_x_xz[i] - 4.0 * g_y_xzz_x_xz[i] * b_exp - 2.0 * g_yyy_x_x_xz[i] * a_exp + 4.0 * g_yyy_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_x_yy[i] = 2.0 * g_y_x_x_yy[i] - 4.0 * g_y_xzz_x_yy[i] * b_exp - 2.0 * g_yyy_x_x_yy[i] * a_exp + 4.0 * g_yyy_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_x_yz[i] = 2.0 * g_y_x_x_yz[i] - 4.0 * g_y_xzz_x_yz[i] * b_exp - 2.0 * g_yyy_x_x_yz[i] * a_exp + 4.0 * g_yyy_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_x_zz[i] = 2.0 * g_y_x_x_zz[i] - 4.0 * g_y_xzz_x_zz[i] * b_exp - 2.0 * g_yyy_x_x_zz[i] * a_exp + 4.0 * g_yyy_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3606-3612)

    #pragma omp simd aligned(g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz, g_y_z_0_0_yy_xz_y_xx, g_y_z_0_0_yy_xz_y_xy, g_y_z_0_0_yy_xz_y_xz, g_y_z_0_0_yy_xz_y_yy, g_y_z_0_0_yy_xz_y_yz, g_y_z_0_0_yy_xz_y_zz, g_yyy_x_y_xx, g_yyy_x_y_xy, g_yyy_x_y_xz, g_yyy_x_y_yy, g_yyy_x_y_yz, g_yyy_x_y_zz, g_yyy_xzz_y_xx, g_yyy_xzz_y_xy, g_yyy_xzz_y_xz, g_yyy_xzz_y_yy, g_yyy_xzz_y_yz, g_yyy_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xz_y_xx[i] = 2.0 * g_y_x_y_xx[i] - 4.0 * g_y_xzz_y_xx[i] * b_exp - 2.0 * g_yyy_x_y_xx[i] * a_exp + 4.0 * g_yyy_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_y_xy[i] = 2.0 * g_y_x_y_xy[i] - 4.0 * g_y_xzz_y_xy[i] * b_exp - 2.0 * g_yyy_x_y_xy[i] * a_exp + 4.0 * g_yyy_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_y_xz[i] = 2.0 * g_y_x_y_xz[i] - 4.0 * g_y_xzz_y_xz[i] * b_exp - 2.0 * g_yyy_x_y_xz[i] * a_exp + 4.0 * g_yyy_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_y_yy[i] = 2.0 * g_y_x_y_yy[i] - 4.0 * g_y_xzz_y_yy[i] * b_exp - 2.0 * g_yyy_x_y_yy[i] * a_exp + 4.0 * g_yyy_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_y_yz[i] = 2.0 * g_y_x_y_yz[i] - 4.0 * g_y_xzz_y_yz[i] * b_exp - 2.0 * g_yyy_x_y_yz[i] * a_exp + 4.0 * g_yyy_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_y_zz[i] = 2.0 * g_y_x_y_zz[i] - 4.0 * g_y_xzz_y_zz[i] * b_exp - 2.0 * g_yyy_x_y_zz[i] * a_exp + 4.0 * g_yyy_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3612-3618)

    #pragma omp simd aligned(g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz, g_y_z_0_0_yy_xz_z_xx, g_y_z_0_0_yy_xz_z_xy, g_y_z_0_0_yy_xz_z_xz, g_y_z_0_0_yy_xz_z_yy, g_y_z_0_0_yy_xz_z_yz, g_y_z_0_0_yy_xz_z_zz, g_yyy_x_z_xx, g_yyy_x_z_xy, g_yyy_x_z_xz, g_yyy_x_z_yy, g_yyy_x_z_yz, g_yyy_x_z_zz, g_yyy_xzz_z_xx, g_yyy_xzz_z_xy, g_yyy_xzz_z_xz, g_yyy_xzz_z_yy, g_yyy_xzz_z_yz, g_yyy_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_xz_z_xx[i] = 2.0 * g_y_x_z_xx[i] - 4.0 * g_y_xzz_z_xx[i] * b_exp - 2.0 * g_yyy_x_z_xx[i] * a_exp + 4.0 * g_yyy_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_z_xy[i] = 2.0 * g_y_x_z_xy[i] - 4.0 * g_y_xzz_z_xy[i] * b_exp - 2.0 * g_yyy_x_z_xy[i] * a_exp + 4.0 * g_yyy_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_z_xz[i] = 2.0 * g_y_x_z_xz[i] - 4.0 * g_y_xzz_z_xz[i] * b_exp - 2.0 * g_yyy_x_z_xz[i] * a_exp + 4.0 * g_yyy_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_z_yy[i] = 2.0 * g_y_x_z_yy[i] - 4.0 * g_y_xzz_z_yy[i] * b_exp - 2.0 * g_yyy_x_z_yy[i] * a_exp + 4.0 * g_yyy_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_z_yz[i] = 2.0 * g_y_x_z_yz[i] - 4.0 * g_y_xzz_z_yz[i] * b_exp - 2.0 * g_yyy_x_z_yz[i] * a_exp + 4.0 * g_yyy_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_xz_z_zz[i] = 2.0 * g_y_x_z_zz[i] - 4.0 * g_y_xzz_z_zz[i] * b_exp - 2.0 * g_yyy_x_z_zz[i] * a_exp + 4.0 * g_yyy_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3618-3624)

    #pragma omp simd aligned(g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz, g_y_z_0_0_yy_yy_x_xx, g_y_z_0_0_yy_yy_x_xy, g_y_z_0_0_yy_yy_x_xz, g_y_z_0_0_yy_yy_x_yy, g_y_z_0_0_yy_yy_x_yz, g_y_z_0_0_yy_yy_x_zz, g_yyy_yyz_x_xx, g_yyy_yyz_x_xy, g_yyy_yyz_x_xz, g_yyy_yyz_x_yy, g_yyy_yyz_x_yz, g_yyy_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yy_x_xx[i] = -4.0 * g_y_yyz_x_xx[i] * b_exp + 4.0 * g_yyy_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_x_xy[i] = -4.0 * g_y_yyz_x_xy[i] * b_exp + 4.0 * g_yyy_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_x_xz[i] = -4.0 * g_y_yyz_x_xz[i] * b_exp + 4.0 * g_yyy_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_x_yy[i] = -4.0 * g_y_yyz_x_yy[i] * b_exp + 4.0 * g_yyy_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_x_yz[i] = -4.0 * g_y_yyz_x_yz[i] * b_exp + 4.0 * g_yyy_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_x_zz[i] = -4.0 * g_y_yyz_x_zz[i] * b_exp + 4.0 * g_yyy_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3624-3630)

    #pragma omp simd aligned(g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz, g_y_z_0_0_yy_yy_y_xx, g_y_z_0_0_yy_yy_y_xy, g_y_z_0_0_yy_yy_y_xz, g_y_z_0_0_yy_yy_y_yy, g_y_z_0_0_yy_yy_y_yz, g_y_z_0_0_yy_yy_y_zz, g_yyy_yyz_y_xx, g_yyy_yyz_y_xy, g_yyy_yyz_y_xz, g_yyy_yyz_y_yy, g_yyy_yyz_y_yz, g_yyy_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yy_y_xx[i] = -4.0 * g_y_yyz_y_xx[i] * b_exp + 4.0 * g_yyy_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_y_xy[i] = -4.0 * g_y_yyz_y_xy[i] * b_exp + 4.0 * g_yyy_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_y_xz[i] = -4.0 * g_y_yyz_y_xz[i] * b_exp + 4.0 * g_yyy_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_y_yy[i] = -4.0 * g_y_yyz_y_yy[i] * b_exp + 4.0 * g_yyy_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_y_yz[i] = -4.0 * g_y_yyz_y_yz[i] * b_exp + 4.0 * g_yyy_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_y_zz[i] = -4.0 * g_y_yyz_y_zz[i] * b_exp + 4.0 * g_yyy_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3630-3636)

    #pragma omp simd aligned(g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz, g_y_z_0_0_yy_yy_z_xx, g_y_z_0_0_yy_yy_z_xy, g_y_z_0_0_yy_yy_z_xz, g_y_z_0_0_yy_yy_z_yy, g_y_z_0_0_yy_yy_z_yz, g_y_z_0_0_yy_yy_z_zz, g_yyy_yyz_z_xx, g_yyy_yyz_z_xy, g_yyy_yyz_z_xz, g_yyy_yyz_z_yy, g_yyy_yyz_z_yz, g_yyy_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yy_z_xx[i] = -4.0 * g_y_yyz_z_xx[i] * b_exp + 4.0 * g_yyy_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_z_xy[i] = -4.0 * g_y_yyz_z_xy[i] * b_exp + 4.0 * g_yyy_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_z_xz[i] = -4.0 * g_y_yyz_z_xz[i] * b_exp + 4.0 * g_yyy_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_z_yy[i] = -4.0 * g_y_yyz_z_yy[i] * b_exp + 4.0 * g_yyy_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_z_yz[i] = -4.0 * g_y_yyz_z_yz[i] * b_exp + 4.0 * g_yyy_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yy_z_zz[i] = -4.0 * g_y_yyz_z_zz[i] * b_exp + 4.0 * g_yyy_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3636-3642)

    #pragma omp simd aligned(g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz, g_y_z_0_0_yy_yz_x_xx, g_y_z_0_0_yy_yz_x_xy, g_y_z_0_0_yy_yz_x_xz, g_y_z_0_0_yy_yz_x_yy, g_y_z_0_0_yy_yz_x_yz, g_y_z_0_0_yy_yz_x_zz, g_yyy_y_x_xx, g_yyy_y_x_xy, g_yyy_y_x_xz, g_yyy_y_x_yy, g_yyy_y_x_yz, g_yyy_y_x_zz, g_yyy_yzz_x_xx, g_yyy_yzz_x_xy, g_yyy_yzz_x_xz, g_yyy_yzz_x_yy, g_yyy_yzz_x_yz, g_yyy_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yz_x_xx[i] = 2.0 * g_y_y_x_xx[i] - 4.0 * g_y_yzz_x_xx[i] * b_exp - 2.0 * g_yyy_y_x_xx[i] * a_exp + 4.0 * g_yyy_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_x_xy[i] = 2.0 * g_y_y_x_xy[i] - 4.0 * g_y_yzz_x_xy[i] * b_exp - 2.0 * g_yyy_y_x_xy[i] * a_exp + 4.0 * g_yyy_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_x_xz[i] = 2.0 * g_y_y_x_xz[i] - 4.0 * g_y_yzz_x_xz[i] * b_exp - 2.0 * g_yyy_y_x_xz[i] * a_exp + 4.0 * g_yyy_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_x_yy[i] = 2.0 * g_y_y_x_yy[i] - 4.0 * g_y_yzz_x_yy[i] * b_exp - 2.0 * g_yyy_y_x_yy[i] * a_exp + 4.0 * g_yyy_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_x_yz[i] = 2.0 * g_y_y_x_yz[i] - 4.0 * g_y_yzz_x_yz[i] * b_exp - 2.0 * g_yyy_y_x_yz[i] * a_exp + 4.0 * g_yyy_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_x_zz[i] = 2.0 * g_y_y_x_zz[i] - 4.0 * g_y_yzz_x_zz[i] * b_exp - 2.0 * g_yyy_y_x_zz[i] * a_exp + 4.0 * g_yyy_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3642-3648)

    #pragma omp simd aligned(g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz, g_y_z_0_0_yy_yz_y_xx, g_y_z_0_0_yy_yz_y_xy, g_y_z_0_0_yy_yz_y_xz, g_y_z_0_0_yy_yz_y_yy, g_y_z_0_0_yy_yz_y_yz, g_y_z_0_0_yy_yz_y_zz, g_yyy_y_y_xx, g_yyy_y_y_xy, g_yyy_y_y_xz, g_yyy_y_y_yy, g_yyy_y_y_yz, g_yyy_y_y_zz, g_yyy_yzz_y_xx, g_yyy_yzz_y_xy, g_yyy_yzz_y_xz, g_yyy_yzz_y_yy, g_yyy_yzz_y_yz, g_yyy_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yz_y_xx[i] = 2.0 * g_y_y_y_xx[i] - 4.0 * g_y_yzz_y_xx[i] * b_exp - 2.0 * g_yyy_y_y_xx[i] * a_exp + 4.0 * g_yyy_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_y_xy[i] = 2.0 * g_y_y_y_xy[i] - 4.0 * g_y_yzz_y_xy[i] * b_exp - 2.0 * g_yyy_y_y_xy[i] * a_exp + 4.0 * g_yyy_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_y_xz[i] = 2.0 * g_y_y_y_xz[i] - 4.0 * g_y_yzz_y_xz[i] * b_exp - 2.0 * g_yyy_y_y_xz[i] * a_exp + 4.0 * g_yyy_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_y_yy[i] = 2.0 * g_y_y_y_yy[i] - 4.0 * g_y_yzz_y_yy[i] * b_exp - 2.0 * g_yyy_y_y_yy[i] * a_exp + 4.0 * g_yyy_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_y_yz[i] = 2.0 * g_y_y_y_yz[i] - 4.0 * g_y_yzz_y_yz[i] * b_exp - 2.0 * g_yyy_y_y_yz[i] * a_exp + 4.0 * g_yyy_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_y_zz[i] = 2.0 * g_y_y_y_zz[i] - 4.0 * g_y_yzz_y_zz[i] * b_exp - 2.0 * g_yyy_y_y_zz[i] * a_exp + 4.0 * g_yyy_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3648-3654)

    #pragma omp simd aligned(g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz, g_y_z_0_0_yy_yz_z_xx, g_y_z_0_0_yy_yz_z_xy, g_y_z_0_0_yy_yz_z_xz, g_y_z_0_0_yy_yz_z_yy, g_y_z_0_0_yy_yz_z_yz, g_y_z_0_0_yy_yz_z_zz, g_yyy_y_z_xx, g_yyy_y_z_xy, g_yyy_y_z_xz, g_yyy_y_z_yy, g_yyy_y_z_yz, g_yyy_y_z_zz, g_yyy_yzz_z_xx, g_yyy_yzz_z_xy, g_yyy_yzz_z_xz, g_yyy_yzz_z_yy, g_yyy_yzz_z_yz, g_yyy_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_yz_z_xx[i] = 2.0 * g_y_y_z_xx[i] - 4.0 * g_y_yzz_z_xx[i] * b_exp - 2.0 * g_yyy_y_z_xx[i] * a_exp + 4.0 * g_yyy_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_z_xy[i] = 2.0 * g_y_y_z_xy[i] - 4.0 * g_y_yzz_z_xy[i] * b_exp - 2.0 * g_yyy_y_z_xy[i] * a_exp + 4.0 * g_yyy_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_z_xz[i] = 2.0 * g_y_y_z_xz[i] - 4.0 * g_y_yzz_z_xz[i] * b_exp - 2.0 * g_yyy_y_z_xz[i] * a_exp + 4.0 * g_yyy_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_z_yy[i] = 2.0 * g_y_y_z_yy[i] - 4.0 * g_y_yzz_z_yy[i] * b_exp - 2.0 * g_yyy_y_z_yy[i] * a_exp + 4.0 * g_yyy_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_z_yz[i] = 2.0 * g_y_y_z_yz[i] - 4.0 * g_y_yzz_z_yz[i] * b_exp - 2.0 * g_yyy_y_z_yz[i] * a_exp + 4.0 * g_yyy_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_yz_z_zz[i] = 2.0 * g_y_y_z_zz[i] - 4.0 * g_y_yzz_z_zz[i] * b_exp - 2.0 * g_yyy_y_z_zz[i] * a_exp + 4.0 * g_yyy_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3654-3660)

    #pragma omp simd aligned(g_y_z_0_0_yy_zz_x_xx, g_y_z_0_0_yy_zz_x_xy, g_y_z_0_0_yy_zz_x_xz, g_y_z_0_0_yy_zz_x_yy, g_y_z_0_0_yy_zz_x_yz, g_y_z_0_0_yy_zz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_y_zzz_x_xx, g_y_zzz_x_xy, g_y_zzz_x_xz, g_y_zzz_x_yy, g_y_zzz_x_yz, g_y_zzz_x_zz, g_yyy_z_x_xx, g_yyy_z_x_xy, g_yyy_z_x_xz, g_yyy_z_x_yy, g_yyy_z_x_yz, g_yyy_z_x_zz, g_yyy_zzz_x_xx, g_yyy_zzz_x_xy, g_yyy_zzz_x_xz, g_yyy_zzz_x_yy, g_yyy_zzz_x_yz, g_yyy_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_zz_x_xx[i] = 4.0 * g_y_z_x_xx[i] - 4.0 * g_y_zzz_x_xx[i] * b_exp - 4.0 * g_yyy_z_x_xx[i] * a_exp + 4.0 * g_yyy_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_x_xy[i] = 4.0 * g_y_z_x_xy[i] - 4.0 * g_y_zzz_x_xy[i] * b_exp - 4.0 * g_yyy_z_x_xy[i] * a_exp + 4.0 * g_yyy_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_x_xz[i] = 4.0 * g_y_z_x_xz[i] - 4.0 * g_y_zzz_x_xz[i] * b_exp - 4.0 * g_yyy_z_x_xz[i] * a_exp + 4.0 * g_yyy_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_x_yy[i] = 4.0 * g_y_z_x_yy[i] - 4.0 * g_y_zzz_x_yy[i] * b_exp - 4.0 * g_yyy_z_x_yy[i] * a_exp + 4.0 * g_yyy_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_x_yz[i] = 4.0 * g_y_z_x_yz[i] - 4.0 * g_y_zzz_x_yz[i] * b_exp - 4.0 * g_yyy_z_x_yz[i] * a_exp + 4.0 * g_yyy_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_x_zz[i] = 4.0 * g_y_z_x_zz[i] - 4.0 * g_y_zzz_x_zz[i] * b_exp - 4.0 * g_yyy_z_x_zz[i] * a_exp + 4.0 * g_yyy_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3660-3666)

    #pragma omp simd aligned(g_y_z_0_0_yy_zz_y_xx, g_y_z_0_0_yy_zz_y_xy, g_y_z_0_0_yy_zz_y_xz, g_y_z_0_0_yy_zz_y_yy, g_y_z_0_0_yy_zz_y_yz, g_y_z_0_0_yy_zz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_y_zzz_y_xx, g_y_zzz_y_xy, g_y_zzz_y_xz, g_y_zzz_y_yy, g_y_zzz_y_yz, g_y_zzz_y_zz, g_yyy_z_y_xx, g_yyy_z_y_xy, g_yyy_z_y_xz, g_yyy_z_y_yy, g_yyy_z_y_yz, g_yyy_z_y_zz, g_yyy_zzz_y_xx, g_yyy_zzz_y_xy, g_yyy_zzz_y_xz, g_yyy_zzz_y_yy, g_yyy_zzz_y_yz, g_yyy_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_zz_y_xx[i] = 4.0 * g_y_z_y_xx[i] - 4.0 * g_y_zzz_y_xx[i] * b_exp - 4.0 * g_yyy_z_y_xx[i] * a_exp + 4.0 * g_yyy_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_y_xy[i] = 4.0 * g_y_z_y_xy[i] - 4.0 * g_y_zzz_y_xy[i] * b_exp - 4.0 * g_yyy_z_y_xy[i] * a_exp + 4.0 * g_yyy_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_y_xz[i] = 4.0 * g_y_z_y_xz[i] - 4.0 * g_y_zzz_y_xz[i] * b_exp - 4.0 * g_yyy_z_y_xz[i] * a_exp + 4.0 * g_yyy_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_y_yy[i] = 4.0 * g_y_z_y_yy[i] - 4.0 * g_y_zzz_y_yy[i] * b_exp - 4.0 * g_yyy_z_y_yy[i] * a_exp + 4.0 * g_yyy_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_y_yz[i] = 4.0 * g_y_z_y_yz[i] - 4.0 * g_y_zzz_y_yz[i] * b_exp - 4.0 * g_yyy_z_y_yz[i] * a_exp + 4.0 * g_yyy_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_y_zz[i] = 4.0 * g_y_z_y_zz[i] - 4.0 * g_y_zzz_y_zz[i] * b_exp - 4.0 * g_yyy_z_y_zz[i] * a_exp + 4.0 * g_yyy_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3666-3672)

    #pragma omp simd aligned(g_y_z_0_0_yy_zz_z_xx, g_y_z_0_0_yy_zz_z_xy, g_y_z_0_0_yy_zz_z_xz, g_y_z_0_0_yy_zz_z_yy, g_y_z_0_0_yy_zz_z_yz, g_y_z_0_0_yy_zz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_y_zzz_z_xx, g_y_zzz_z_xy, g_y_zzz_z_xz, g_y_zzz_z_yy, g_y_zzz_z_yz, g_y_zzz_z_zz, g_yyy_z_z_xx, g_yyy_z_z_xy, g_yyy_z_z_xz, g_yyy_z_z_yy, g_yyy_z_z_yz, g_yyy_z_z_zz, g_yyy_zzz_z_xx, g_yyy_zzz_z_xy, g_yyy_zzz_z_xz, g_yyy_zzz_z_yy, g_yyy_zzz_z_yz, g_yyy_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yy_zz_z_xx[i] = 4.0 * g_y_z_z_xx[i] - 4.0 * g_y_zzz_z_xx[i] * b_exp - 4.0 * g_yyy_z_z_xx[i] * a_exp + 4.0 * g_yyy_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_z_xy[i] = 4.0 * g_y_z_z_xy[i] - 4.0 * g_y_zzz_z_xy[i] * b_exp - 4.0 * g_yyy_z_z_xy[i] * a_exp + 4.0 * g_yyy_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_z_xz[i] = 4.0 * g_y_z_z_xz[i] - 4.0 * g_y_zzz_z_xz[i] * b_exp - 4.0 * g_yyy_z_z_xz[i] * a_exp + 4.0 * g_yyy_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_z_yy[i] = 4.0 * g_y_z_z_yy[i] - 4.0 * g_y_zzz_z_yy[i] * b_exp - 4.0 * g_yyy_z_z_yy[i] * a_exp + 4.0 * g_yyy_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_z_yz[i] = 4.0 * g_y_z_z_yz[i] - 4.0 * g_y_zzz_z_yz[i] * b_exp - 4.0 * g_yyy_z_z_yz[i] * a_exp + 4.0 * g_yyy_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yy_zz_z_zz[i] = 4.0 * g_y_z_z_zz[i] - 4.0 * g_y_zzz_z_zz[i] * b_exp - 4.0 * g_yyy_z_z_zz[i] * a_exp + 4.0 * g_yyy_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3672-3678)

    #pragma omp simd aligned(g_y_z_0_0_yz_xx_x_xx, g_y_z_0_0_yz_xx_x_xy, g_y_z_0_0_yz_xx_x_xz, g_y_z_0_0_yz_xx_x_yy, g_y_z_0_0_yz_xx_x_yz, g_y_z_0_0_yz_xx_x_zz, g_yyz_xxz_x_xx, g_yyz_xxz_x_xy, g_yyz_xxz_x_xz, g_yyz_xxz_x_yy, g_yyz_xxz_x_yz, g_yyz_xxz_x_zz, g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xx_x_xx[i] = -2.0 * g_z_xxz_x_xx[i] * b_exp + 4.0 * g_yyz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_x_xy[i] = -2.0 * g_z_xxz_x_xy[i] * b_exp + 4.0 * g_yyz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_x_xz[i] = -2.0 * g_z_xxz_x_xz[i] * b_exp + 4.0 * g_yyz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_x_yy[i] = -2.0 * g_z_xxz_x_yy[i] * b_exp + 4.0 * g_yyz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_x_yz[i] = -2.0 * g_z_xxz_x_yz[i] * b_exp + 4.0 * g_yyz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_x_zz[i] = -2.0 * g_z_xxz_x_zz[i] * b_exp + 4.0 * g_yyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3678-3684)

    #pragma omp simd aligned(g_y_z_0_0_yz_xx_y_xx, g_y_z_0_0_yz_xx_y_xy, g_y_z_0_0_yz_xx_y_xz, g_y_z_0_0_yz_xx_y_yy, g_y_z_0_0_yz_xx_y_yz, g_y_z_0_0_yz_xx_y_zz, g_yyz_xxz_y_xx, g_yyz_xxz_y_xy, g_yyz_xxz_y_xz, g_yyz_xxz_y_yy, g_yyz_xxz_y_yz, g_yyz_xxz_y_zz, g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xx_y_xx[i] = -2.0 * g_z_xxz_y_xx[i] * b_exp + 4.0 * g_yyz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_y_xy[i] = -2.0 * g_z_xxz_y_xy[i] * b_exp + 4.0 * g_yyz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_y_xz[i] = -2.0 * g_z_xxz_y_xz[i] * b_exp + 4.0 * g_yyz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_y_yy[i] = -2.0 * g_z_xxz_y_yy[i] * b_exp + 4.0 * g_yyz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_y_yz[i] = -2.0 * g_z_xxz_y_yz[i] * b_exp + 4.0 * g_yyz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_y_zz[i] = -2.0 * g_z_xxz_y_zz[i] * b_exp + 4.0 * g_yyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3684-3690)

    #pragma omp simd aligned(g_y_z_0_0_yz_xx_z_xx, g_y_z_0_0_yz_xx_z_xy, g_y_z_0_0_yz_xx_z_xz, g_y_z_0_0_yz_xx_z_yy, g_y_z_0_0_yz_xx_z_yz, g_y_z_0_0_yz_xx_z_zz, g_yyz_xxz_z_xx, g_yyz_xxz_z_xy, g_yyz_xxz_z_xz, g_yyz_xxz_z_yy, g_yyz_xxz_z_yz, g_yyz_xxz_z_zz, g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xx_z_xx[i] = -2.0 * g_z_xxz_z_xx[i] * b_exp + 4.0 * g_yyz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_z_xy[i] = -2.0 * g_z_xxz_z_xy[i] * b_exp + 4.0 * g_yyz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_z_xz[i] = -2.0 * g_z_xxz_z_xz[i] * b_exp + 4.0 * g_yyz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_z_yy[i] = -2.0 * g_z_xxz_z_yy[i] * b_exp + 4.0 * g_yyz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_z_yz[i] = -2.0 * g_z_xxz_z_yz[i] * b_exp + 4.0 * g_yyz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xx_z_zz[i] = -2.0 * g_z_xxz_z_zz[i] * b_exp + 4.0 * g_yyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3690-3696)

    #pragma omp simd aligned(g_y_z_0_0_yz_xy_x_xx, g_y_z_0_0_yz_xy_x_xy, g_y_z_0_0_yz_xy_x_xz, g_y_z_0_0_yz_xy_x_yy, g_y_z_0_0_yz_xy_x_yz, g_y_z_0_0_yz_xy_x_zz, g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xy_x_xx[i] = -2.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_x_xy[i] = -2.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_x_xz[i] = -2.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_x_yy[i] = -2.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_x_yz[i] = -2.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_x_zz[i] = -2.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3696-3702)

    #pragma omp simd aligned(g_y_z_0_0_yz_xy_y_xx, g_y_z_0_0_yz_xy_y_xy, g_y_z_0_0_yz_xy_y_xz, g_y_z_0_0_yz_xy_y_yy, g_y_z_0_0_yz_xy_y_yz, g_y_z_0_0_yz_xy_y_zz, g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xy_y_xx[i] = -2.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_y_xy[i] = -2.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_y_xz[i] = -2.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_y_yy[i] = -2.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_y_yz[i] = -2.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_y_zz[i] = -2.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3702-3708)

    #pragma omp simd aligned(g_y_z_0_0_yz_xy_z_xx, g_y_z_0_0_yz_xy_z_xy, g_y_z_0_0_yz_xy_z_xz, g_y_z_0_0_yz_xy_z_yy, g_y_z_0_0_yz_xy_z_yz, g_y_z_0_0_yz_xy_z_zz, g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xy_z_xx[i] = -2.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_z_xy[i] = -2.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_z_xz[i] = -2.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_z_yy[i] = -2.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_z_yz[i] = -2.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xy_z_zz[i] = -2.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3708-3714)

    #pragma omp simd aligned(g_y_z_0_0_yz_xz_x_xx, g_y_z_0_0_yz_xz_x_xy, g_y_z_0_0_yz_xz_x_xz, g_y_z_0_0_yz_xz_x_yy, g_y_z_0_0_yz_xz_x_yz, g_y_z_0_0_yz_xz_x_zz, g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xzz_x_xx, g_yyz_xzz_x_xy, g_yyz_xzz_x_xz, g_yyz_xzz_x_yy, g_yyz_xzz_x_yz, g_yyz_xzz_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xz_x_xx[i] = g_z_x_x_xx[i] - 2.0 * g_z_xzz_x_xx[i] * b_exp - 2.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_x_xy[i] = g_z_x_x_xy[i] - 2.0 * g_z_xzz_x_xy[i] * b_exp - 2.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_x_xz[i] = g_z_x_x_xz[i] - 2.0 * g_z_xzz_x_xz[i] * b_exp - 2.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_x_yy[i] = g_z_x_x_yy[i] - 2.0 * g_z_xzz_x_yy[i] * b_exp - 2.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_x_yz[i] = g_z_x_x_yz[i] - 2.0 * g_z_xzz_x_yz[i] * b_exp - 2.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_x_zz[i] = g_z_x_x_zz[i] - 2.0 * g_z_xzz_x_zz[i] * b_exp - 2.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3714-3720)

    #pragma omp simd aligned(g_y_z_0_0_yz_xz_y_xx, g_y_z_0_0_yz_xz_y_xy, g_y_z_0_0_yz_xz_y_xz, g_y_z_0_0_yz_xz_y_yy, g_y_z_0_0_yz_xz_y_yz, g_y_z_0_0_yz_xz_y_zz, g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xzz_y_xx, g_yyz_xzz_y_xy, g_yyz_xzz_y_xz, g_yyz_xzz_y_yy, g_yyz_xzz_y_yz, g_yyz_xzz_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xz_y_xx[i] = g_z_x_y_xx[i] - 2.0 * g_z_xzz_y_xx[i] * b_exp - 2.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_y_xy[i] = g_z_x_y_xy[i] - 2.0 * g_z_xzz_y_xy[i] * b_exp - 2.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_y_xz[i] = g_z_x_y_xz[i] - 2.0 * g_z_xzz_y_xz[i] * b_exp - 2.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_y_yy[i] = g_z_x_y_yy[i] - 2.0 * g_z_xzz_y_yy[i] * b_exp - 2.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_y_yz[i] = g_z_x_y_yz[i] - 2.0 * g_z_xzz_y_yz[i] * b_exp - 2.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_y_zz[i] = g_z_x_y_zz[i] - 2.0 * g_z_xzz_y_zz[i] * b_exp - 2.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3720-3726)

    #pragma omp simd aligned(g_y_z_0_0_yz_xz_z_xx, g_y_z_0_0_yz_xz_z_xy, g_y_z_0_0_yz_xz_z_xz, g_y_z_0_0_yz_xz_z_yy, g_y_z_0_0_yz_xz_z_yz, g_y_z_0_0_yz_xz_z_zz, g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xzz_z_xx, g_yyz_xzz_z_xy, g_yyz_xzz_z_xz, g_yyz_xzz_z_yy, g_yyz_xzz_z_yz, g_yyz_xzz_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_xz_z_xx[i] = g_z_x_z_xx[i] - 2.0 * g_z_xzz_z_xx[i] * b_exp - 2.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_z_xy[i] = g_z_x_z_xy[i] - 2.0 * g_z_xzz_z_xy[i] * b_exp - 2.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_z_xz[i] = g_z_x_z_xz[i] - 2.0 * g_z_xzz_z_xz[i] * b_exp - 2.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_z_yy[i] = g_z_x_z_yy[i] - 2.0 * g_z_xzz_z_yy[i] * b_exp - 2.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_z_yz[i] = g_z_x_z_yz[i] - 2.0 * g_z_xzz_z_yz[i] * b_exp - 2.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_xz_z_zz[i] = g_z_x_z_zz[i] - 2.0 * g_z_xzz_z_zz[i] * b_exp - 2.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3726-3732)

    #pragma omp simd aligned(g_y_z_0_0_yz_yy_x_xx, g_y_z_0_0_yz_yy_x_xy, g_y_z_0_0_yz_yy_x_xz, g_y_z_0_0_yz_yy_x_yy, g_y_z_0_0_yz_yy_x_yz, g_y_z_0_0_yz_yy_x_zz, g_yyz_yyz_x_xx, g_yyz_yyz_x_xy, g_yyz_yyz_x_xz, g_yyz_yyz_x_yy, g_yyz_yyz_x_yz, g_yyz_yyz_x_zz, g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yy_x_xx[i] = -2.0 * g_z_yyz_x_xx[i] * b_exp + 4.0 * g_yyz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_x_xy[i] = -2.0 * g_z_yyz_x_xy[i] * b_exp + 4.0 * g_yyz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_x_xz[i] = -2.0 * g_z_yyz_x_xz[i] * b_exp + 4.0 * g_yyz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_x_yy[i] = -2.0 * g_z_yyz_x_yy[i] * b_exp + 4.0 * g_yyz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_x_yz[i] = -2.0 * g_z_yyz_x_yz[i] * b_exp + 4.0 * g_yyz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_x_zz[i] = -2.0 * g_z_yyz_x_zz[i] * b_exp + 4.0 * g_yyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3732-3738)

    #pragma omp simd aligned(g_y_z_0_0_yz_yy_y_xx, g_y_z_0_0_yz_yy_y_xy, g_y_z_0_0_yz_yy_y_xz, g_y_z_0_0_yz_yy_y_yy, g_y_z_0_0_yz_yy_y_yz, g_y_z_0_0_yz_yy_y_zz, g_yyz_yyz_y_xx, g_yyz_yyz_y_xy, g_yyz_yyz_y_xz, g_yyz_yyz_y_yy, g_yyz_yyz_y_yz, g_yyz_yyz_y_zz, g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yy_y_xx[i] = -2.0 * g_z_yyz_y_xx[i] * b_exp + 4.0 * g_yyz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_y_xy[i] = -2.0 * g_z_yyz_y_xy[i] * b_exp + 4.0 * g_yyz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_y_xz[i] = -2.0 * g_z_yyz_y_xz[i] * b_exp + 4.0 * g_yyz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_y_yy[i] = -2.0 * g_z_yyz_y_yy[i] * b_exp + 4.0 * g_yyz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_y_yz[i] = -2.0 * g_z_yyz_y_yz[i] * b_exp + 4.0 * g_yyz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_y_zz[i] = -2.0 * g_z_yyz_y_zz[i] * b_exp + 4.0 * g_yyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3738-3744)

    #pragma omp simd aligned(g_y_z_0_0_yz_yy_z_xx, g_y_z_0_0_yz_yy_z_xy, g_y_z_0_0_yz_yy_z_xz, g_y_z_0_0_yz_yy_z_yy, g_y_z_0_0_yz_yy_z_yz, g_y_z_0_0_yz_yy_z_zz, g_yyz_yyz_z_xx, g_yyz_yyz_z_xy, g_yyz_yyz_z_xz, g_yyz_yyz_z_yy, g_yyz_yyz_z_yz, g_yyz_yyz_z_zz, g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yy_z_xx[i] = -2.0 * g_z_yyz_z_xx[i] * b_exp + 4.0 * g_yyz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_z_xy[i] = -2.0 * g_z_yyz_z_xy[i] * b_exp + 4.0 * g_yyz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_z_xz[i] = -2.0 * g_z_yyz_z_xz[i] * b_exp + 4.0 * g_yyz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_z_yy[i] = -2.0 * g_z_yyz_z_yy[i] * b_exp + 4.0 * g_yyz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_z_yz[i] = -2.0 * g_z_yyz_z_yz[i] * b_exp + 4.0 * g_yyz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yy_z_zz[i] = -2.0 * g_z_yyz_z_zz[i] * b_exp + 4.0 * g_yyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3744-3750)

    #pragma omp simd aligned(g_y_z_0_0_yz_yz_x_xx, g_y_z_0_0_yz_yz_x_xy, g_y_z_0_0_yz_yz_x_xz, g_y_z_0_0_yz_yz_x_yy, g_y_z_0_0_yz_yz_x_yz, g_y_z_0_0_yz_yz_x_zz, g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_yyz_yzz_x_xx, g_yyz_yzz_x_xy, g_yyz_yzz_x_xz, g_yyz_yzz_x_yy, g_yyz_yzz_x_yz, g_yyz_yzz_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yz_x_xx[i] = g_z_y_x_xx[i] - 2.0 * g_z_yzz_x_xx[i] * b_exp - 2.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_x_xy[i] = g_z_y_x_xy[i] - 2.0 * g_z_yzz_x_xy[i] * b_exp - 2.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_x_xz[i] = g_z_y_x_xz[i] - 2.0 * g_z_yzz_x_xz[i] * b_exp - 2.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_x_yy[i] = g_z_y_x_yy[i] - 2.0 * g_z_yzz_x_yy[i] * b_exp - 2.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_x_yz[i] = g_z_y_x_yz[i] - 2.0 * g_z_yzz_x_yz[i] * b_exp - 2.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_x_zz[i] = g_z_y_x_zz[i] - 2.0 * g_z_yzz_x_zz[i] * b_exp - 2.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3750-3756)

    #pragma omp simd aligned(g_y_z_0_0_yz_yz_y_xx, g_y_z_0_0_yz_yz_y_xy, g_y_z_0_0_yz_yz_y_xz, g_y_z_0_0_yz_yz_y_yy, g_y_z_0_0_yz_yz_y_yz, g_y_z_0_0_yz_yz_y_zz, g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_yyz_yzz_y_xx, g_yyz_yzz_y_xy, g_yyz_yzz_y_xz, g_yyz_yzz_y_yy, g_yyz_yzz_y_yz, g_yyz_yzz_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yz_y_xx[i] = g_z_y_y_xx[i] - 2.0 * g_z_yzz_y_xx[i] * b_exp - 2.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_y_xy[i] = g_z_y_y_xy[i] - 2.0 * g_z_yzz_y_xy[i] * b_exp - 2.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_y_xz[i] = g_z_y_y_xz[i] - 2.0 * g_z_yzz_y_xz[i] * b_exp - 2.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_y_yy[i] = g_z_y_y_yy[i] - 2.0 * g_z_yzz_y_yy[i] * b_exp - 2.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_y_yz[i] = g_z_y_y_yz[i] - 2.0 * g_z_yzz_y_yz[i] * b_exp - 2.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_y_zz[i] = g_z_y_y_zz[i] - 2.0 * g_z_yzz_y_zz[i] * b_exp - 2.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3756-3762)

    #pragma omp simd aligned(g_y_z_0_0_yz_yz_z_xx, g_y_z_0_0_yz_yz_z_xy, g_y_z_0_0_yz_yz_z_xz, g_y_z_0_0_yz_yz_z_yy, g_y_z_0_0_yz_yz_z_yz, g_y_z_0_0_yz_yz_z_zz, g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_yyz_yzz_z_xx, g_yyz_yzz_z_xy, g_yyz_yzz_z_xz, g_yyz_yzz_z_yy, g_yyz_yzz_z_yz, g_yyz_yzz_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_yz_z_xx[i] = g_z_y_z_xx[i] - 2.0 * g_z_yzz_z_xx[i] * b_exp - 2.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_z_xy[i] = g_z_y_z_xy[i] - 2.0 * g_z_yzz_z_xy[i] * b_exp - 2.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_z_xz[i] = g_z_y_z_xz[i] - 2.0 * g_z_yzz_z_xz[i] * b_exp - 2.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_z_yy[i] = g_z_y_z_yy[i] - 2.0 * g_z_yzz_z_yy[i] * b_exp - 2.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_z_yz[i] = g_z_y_z_yz[i] - 2.0 * g_z_yzz_z_yz[i] * b_exp - 2.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_yz_z_zz[i] = g_z_y_z_zz[i] - 2.0 * g_z_yzz_z_zz[i] * b_exp - 2.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3762-3768)

    #pragma omp simd aligned(g_y_z_0_0_yz_zz_x_xx, g_y_z_0_0_yz_zz_x_xy, g_y_z_0_0_yz_zz_x_xz, g_y_z_0_0_yz_zz_x_yy, g_y_z_0_0_yz_zz_x_yz, g_y_z_0_0_yz_zz_x_zz, g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_yyz_zzz_x_xx, g_yyz_zzz_x_xy, g_yyz_zzz_x_xz, g_yyz_zzz_x_yy, g_yyz_zzz_x_yz, g_yyz_zzz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz, g_z_zzz_x_xx, g_z_zzz_x_xy, g_z_zzz_x_xz, g_z_zzz_x_yy, g_z_zzz_x_yz, g_z_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_zz_x_xx[i] = 2.0 * g_z_z_x_xx[i] - 2.0 * g_z_zzz_x_xx[i] * b_exp - 4.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_x_xy[i] = 2.0 * g_z_z_x_xy[i] - 2.0 * g_z_zzz_x_xy[i] * b_exp - 4.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_x_xz[i] = 2.0 * g_z_z_x_xz[i] - 2.0 * g_z_zzz_x_xz[i] * b_exp - 4.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_x_yy[i] = 2.0 * g_z_z_x_yy[i] - 2.0 * g_z_zzz_x_yy[i] * b_exp - 4.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_x_yz[i] = 2.0 * g_z_z_x_yz[i] - 2.0 * g_z_zzz_x_yz[i] * b_exp - 4.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_x_zz[i] = 2.0 * g_z_z_x_zz[i] - 2.0 * g_z_zzz_x_zz[i] * b_exp - 4.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3768-3774)

    #pragma omp simd aligned(g_y_z_0_0_yz_zz_y_xx, g_y_z_0_0_yz_zz_y_xy, g_y_z_0_0_yz_zz_y_xz, g_y_z_0_0_yz_zz_y_yy, g_y_z_0_0_yz_zz_y_yz, g_y_z_0_0_yz_zz_y_zz, g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_yyz_zzz_y_xx, g_yyz_zzz_y_xy, g_yyz_zzz_y_xz, g_yyz_zzz_y_yy, g_yyz_zzz_y_yz, g_yyz_zzz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz, g_z_zzz_y_xx, g_z_zzz_y_xy, g_z_zzz_y_xz, g_z_zzz_y_yy, g_z_zzz_y_yz, g_z_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_zz_y_xx[i] = 2.0 * g_z_z_y_xx[i] - 2.0 * g_z_zzz_y_xx[i] * b_exp - 4.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_y_xy[i] = 2.0 * g_z_z_y_xy[i] - 2.0 * g_z_zzz_y_xy[i] * b_exp - 4.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_y_xz[i] = 2.0 * g_z_z_y_xz[i] - 2.0 * g_z_zzz_y_xz[i] * b_exp - 4.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_y_yy[i] = 2.0 * g_z_z_y_yy[i] - 2.0 * g_z_zzz_y_yy[i] * b_exp - 4.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_y_yz[i] = 2.0 * g_z_z_y_yz[i] - 2.0 * g_z_zzz_y_yz[i] * b_exp - 4.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_y_zz[i] = 2.0 * g_z_z_y_zz[i] - 2.0 * g_z_zzz_y_zz[i] * b_exp - 4.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3774-3780)

    #pragma omp simd aligned(g_y_z_0_0_yz_zz_z_xx, g_y_z_0_0_yz_zz_z_xy, g_y_z_0_0_yz_zz_z_xz, g_y_z_0_0_yz_zz_z_yy, g_y_z_0_0_yz_zz_z_yz, g_y_z_0_0_yz_zz_z_zz, g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_yyz_zzz_z_xx, g_yyz_zzz_z_xy, g_yyz_zzz_z_xz, g_yyz_zzz_z_yy, g_yyz_zzz_z_yz, g_yyz_zzz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz, g_z_zzz_z_xx, g_z_zzz_z_xy, g_z_zzz_z_xz, g_z_zzz_z_yy, g_z_zzz_z_yz, g_z_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_yz_zz_z_xx[i] = 2.0 * g_z_z_z_xx[i] - 2.0 * g_z_zzz_z_xx[i] * b_exp - 4.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_z_xy[i] = 2.0 * g_z_z_z_xy[i] - 2.0 * g_z_zzz_z_xy[i] * b_exp - 4.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_z_xz[i] = 2.0 * g_z_z_z_xz[i] - 2.0 * g_z_zzz_z_xz[i] * b_exp - 4.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_z_yy[i] = 2.0 * g_z_z_z_yy[i] - 2.0 * g_z_zzz_z_yy[i] * b_exp - 4.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_z_yz[i] = 2.0 * g_z_z_z_yz[i] - 2.0 * g_z_zzz_z_yz[i] * b_exp - 4.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_yz_zz_z_zz[i] = 2.0 * g_z_z_z_zz[i] - 2.0 * g_z_zzz_z_zz[i] * b_exp - 4.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3780-3786)

    #pragma omp simd aligned(g_y_z_0_0_zz_xx_x_xx, g_y_z_0_0_zz_xx_x_xy, g_y_z_0_0_zz_xx_x_xz, g_y_z_0_0_zz_xx_x_yy, g_y_z_0_0_zz_xx_x_yz, g_y_z_0_0_zz_xx_x_zz, g_yzz_xxz_x_xx, g_yzz_xxz_x_xy, g_yzz_xxz_x_xz, g_yzz_xxz_x_yy, g_yzz_xxz_x_yz, g_yzz_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xx_x_xx[i] = 4.0 * g_yzz_xxz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_x_xy[i] = 4.0 * g_yzz_xxz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_x_xz[i] = 4.0 * g_yzz_xxz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_x_yy[i] = 4.0 * g_yzz_xxz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_x_yz[i] = 4.0 * g_yzz_xxz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_x_zz[i] = 4.0 * g_yzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3786-3792)

    #pragma omp simd aligned(g_y_z_0_0_zz_xx_y_xx, g_y_z_0_0_zz_xx_y_xy, g_y_z_0_0_zz_xx_y_xz, g_y_z_0_0_zz_xx_y_yy, g_y_z_0_0_zz_xx_y_yz, g_y_z_0_0_zz_xx_y_zz, g_yzz_xxz_y_xx, g_yzz_xxz_y_xy, g_yzz_xxz_y_xz, g_yzz_xxz_y_yy, g_yzz_xxz_y_yz, g_yzz_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xx_y_xx[i] = 4.0 * g_yzz_xxz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_y_xy[i] = 4.0 * g_yzz_xxz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_y_xz[i] = 4.0 * g_yzz_xxz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_y_yy[i] = 4.0 * g_yzz_xxz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_y_yz[i] = 4.0 * g_yzz_xxz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_y_zz[i] = 4.0 * g_yzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3792-3798)

    #pragma omp simd aligned(g_y_z_0_0_zz_xx_z_xx, g_y_z_0_0_zz_xx_z_xy, g_y_z_0_0_zz_xx_z_xz, g_y_z_0_0_zz_xx_z_yy, g_y_z_0_0_zz_xx_z_yz, g_y_z_0_0_zz_xx_z_zz, g_yzz_xxz_z_xx, g_yzz_xxz_z_xy, g_yzz_xxz_z_xz, g_yzz_xxz_z_yy, g_yzz_xxz_z_yz, g_yzz_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xx_z_xx[i] = 4.0 * g_yzz_xxz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_z_xy[i] = 4.0 * g_yzz_xxz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_z_xz[i] = 4.0 * g_yzz_xxz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_z_yy[i] = 4.0 * g_yzz_xxz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_z_yz[i] = 4.0 * g_yzz_xxz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xx_z_zz[i] = 4.0 * g_yzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3798-3804)

    #pragma omp simd aligned(g_y_z_0_0_zz_xy_x_xx, g_y_z_0_0_zz_xy_x_xy, g_y_z_0_0_zz_xy_x_xz, g_y_z_0_0_zz_xy_x_yy, g_y_z_0_0_zz_xy_x_yz, g_y_z_0_0_zz_xy_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xy_x_xx[i] = 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_x_xy[i] = 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_x_xz[i] = 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_x_yy[i] = 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_x_yz[i] = 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_x_zz[i] = 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3804-3810)

    #pragma omp simd aligned(g_y_z_0_0_zz_xy_y_xx, g_y_z_0_0_zz_xy_y_xy, g_y_z_0_0_zz_xy_y_xz, g_y_z_0_0_zz_xy_y_yy, g_y_z_0_0_zz_xy_y_yz, g_y_z_0_0_zz_xy_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xy_y_xx[i] = 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_y_xy[i] = 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_y_xz[i] = 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_y_yy[i] = 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_y_yz[i] = 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_y_zz[i] = 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3810-3816)

    #pragma omp simd aligned(g_y_z_0_0_zz_xy_z_xx, g_y_z_0_0_zz_xy_z_xy, g_y_z_0_0_zz_xy_z_xz, g_y_z_0_0_zz_xy_z_yy, g_y_z_0_0_zz_xy_z_yz, g_y_z_0_0_zz_xy_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xy_z_xx[i] = 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_z_xy[i] = 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_z_xz[i] = 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_z_yy[i] = 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_z_yz[i] = 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xy_z_zz[i] = 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3816-3822)

    #pragma omp simd aligned(g_y_z_0_0_zz_xz_x_xx, g_y_z_0_0_zz_xz_x_xy, g_y_z_0_0_zz_xz_x_xz, g_y_z_0_0_zz_xz_x_yy, g_y_z_0_0_zz_xz_x_yz, g_y_z_0_0_zz_xz_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xzz_x_xx, g_yzz_xzz_x_xy, g_yzz_xzz_x_xz, g_yzz_xzz_x_yy, g_yzz_xzz_x_yz, g_yzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xz_x_xx[i] = -2.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_x_xy[i] = -2.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_x_xz[i] = -2.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_x_yy[i] = -2.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_x_yz[i] = -2.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_x_zz[i] = -2.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3822-3828)

    #pragma omp simd aligned(g_y_z_0_0_zz_xz_y_xx, g_y_z_0_0_zz_xz_y_xy, g_y_z_0_0_zz_xz_y_xz, g_y_z_0_0_zz_xz_y_yy, g_y_z_0_0_zz_xz_y_yz, g_y_z_0_0_zz_xz_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xzz_y_xx, g_yzz_xzz_y_xy, g_yzz_xzz_y_xz, g_yzz_xzz_y_yy, g_yzz_xzz_y_yz, g_yzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xz_y_xx[i] = -2.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_y_xy[i] = -2.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_y_xz[i] = -2.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_y_yy[i] = -2.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_y_yz[i] = -2.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_y_zz[i] = -2.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3828-3834)

    #pragma omp simd aligned(g_y_z_0_0_zz_xz_z_xx, g_y_z_0_0_zz_xz_z_xy, g_y_z_0_0_zz_xz_z_xz, g_y_z_0_0_zz_xz_z_yy, g_y_z_0_0_zz_xz_z_yz, g_y_z_0_0_zz_xz_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xzz_z_xx, g_yzz_xzz_z_xy, g_yzz_xzz_z_xz, g_yzz_xzz_z_yy, g_yzz_xzz_z_yz, g_yzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_xz_z_xx[i] = -2.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_z_xy[i] = -2.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_z_xz[i] = -2.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_z_yy[i] = -2.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_z_yz[i] = -2.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_xz_z_zz[i] = -2.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3834-3840)

    #pragma omp simd aligned(g_y_z_0_0_zz_yy_x_xx, g_y_z_0_0_zz_yy_x_xy, g_y_z_0_0_zz_yy_x_xz, g_y_z_0_0_zz_yy_x_yy, g_y_z_0_0_zz_yy_x_yz, g_y_z_0_0_zz_yy_x_zz, g_yzz_yyz_x_xx, g_yzz_yyz_x_xy, g_yzz_yyz_x_xz, g_yzz_yyz_x_yy, g_yzz_yyz_x_yz, g_yzz_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yy_x_xx[i] = 4.0 * g_yzz_yyz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_x_xy[i] = 4.0 * g_yzz_yyz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_x_xz[i] = 4.0 * g_yzz_yyz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_x_yy[i] = 4.0 * g_yzz_yyz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_x_yz[i] = 4.0 * g_yzz_yyz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_x_zz[i] = 4.0 * g_yzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3840-3846)

    #pragma omp simd aligned(g_y_z_0_0_zz_yy_y_xx, g_y_z_0_0_zz_yy_y_xy, g_y_z_0_0_zz_yy_y_xz, g_y_z_0_0_zz_yy_y_yy, g_y_z_0_0_zz_yy_y_yz, g_y_z_0_0_zz_yy_y_zz, g_yzz_yyz_y_xx, g_yzz_yyz_y_xy, g_yzz_yyz_y_xz, g_yzz_yyz_y_yy, g_yzz_yyz_y_yz, g_yzz_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yy_y_xx[i] = 4.0 * g_yzz_yyz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_y_xy[i] = 4.0 * g_yzz_yyz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_y_xz[i] = 4.0 * g_yzz_yyz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_y_yy[i] = 4.0 * g_yzz_yyz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_y_yz[i] = 4.0 * g_yzz_yyz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_y_zz[i] = 4.0 * g_yzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3846-3852)

    #pragma omp simd aligned(g_y_z_0_0_zz_yy_z_xx, g_y_z_0_0_zz_yy_z_xy, g_y_z_0_0_zz_yy_z_xz, g_y_z_0_0_zz_yy_z_yy, g_y_z_0_0_zz_yy_z_yz, g_y_z_0_0_zz_yy_z_zz, g_yzz_yyz_z_xx, g_yzz_yyz_z_xy, g_yzz_yyz_z_xz, g_yzz_yyz_z_yy, g_yzz_yyz_z_yz, g_yzz_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yy_z_xx[i] = 4.0 * g_yzz_yyz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_z_xy[i] = 4.0 * g_yzz_yyz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_z_xz[i] = 4.0 * g_yzz_yyz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_z_yy[i] = 4.0 * g_yzz_yyz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_z_yz[i] = 4.0 * g_yzz_yyz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yy_z_zz[i] = 4.0 * g_yzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3852-3858)

    #pragma omp simd aligned(g_y_z_0_0_zz_yz_x_xx, g_y_z_0_0_zz_yz_x_xy, g_y_z_0_0_zz_yz_x_xz, g_y_z_0_0_zz_yz_x_yy, g_y_z_0_0_zz_yz_x_yz, g_y_z_0_0_zz_yz_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz, g_yzz_yzz_x_xx, g_yzz_yzz_x_xy, g_yzz_yzz_x_xz, g_yzz_yzz_x_yy, g_yzz_yzz_x_yz, g_yzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yz_x_xx[i] = -2.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_yzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_x_xy[i] = -2.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_yzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_x_xz[i] = -2.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_yzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_x_yy[i] = -2.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_yzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_x_yz[i] = -2.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_yzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_x_zz[i] = -2.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3858-3864)

    #pragma omp simd aligned(g_y_z_0_0_zz_yz_y_xx, g_y_z_0_0_zz_yz_y_xy, g_y_z_0_0_zz_yz_y_xz, g_y_z_0_0_zz_yz_y_yy, g_y_z_0_0_zz_yz_y_yz, g_y_z_0_0_zz_yz_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz, g_yzz_yzz_y_xx, g_yzz_yzz_y_xy, g_yzz_yzz_y_xz, g_yzz_yzz_y_yy, g_yzz_yzz_y_yz, g_yzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yz_y_xx[i] = -2.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_yzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_y_xy[i] = -2.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_yzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_y_xz[i] = -2.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_yzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_y_yy[i] = -2.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_yzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_y_yz[i] = -2.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_yzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_y_zz[i] = -2.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3864-3870)

    #pragma omp simd aligned(g_y_z_0_0_zz_yz_z_xx, g_y_z_0_0_zz_yz_z_xy, g_y_z_0_0_zz_yz_z_xz, g_y_z_0_0_zz_yz_z_yy, g_y_z_0_0_zz_yz_z_yz, g_y_z_0_0_zz_yz_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz, g_yzz_yzz_z_xx, g_yzz_yzz_z_xy, g_yzz_yzz_z_xz, g_yzz_yzz_z_yy, g_yzz_yzz_z_yz, g_yzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_yz_z_xx[i] = -2.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_yzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_z_xy[i] = -2.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_yzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_z_xz[i] = -2.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_yzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_z_yy[i] = -2.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_yzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_z_yz[i] = -2.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_yzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_yz_z_zz[i] = -2.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3870-3876)

    #pragma omp simd aligned(g_y_z_0_0_zz_zz_x_xx, g_y_z_0_0_zz_zz_x_xy, g_y_z_0_0_zz_zz_x_xz, g_y_z_0_0_zz_zz_x_yy, g_y_z_0_0_zz_zz_x_yz, g_y_z_0_0_zz_zz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz, g_yzz_zzz_x_xx, g_yzz_zzz_x_xy, g_yzz_zzz_x_xz, g_yzz_zzz_x_yy, g_yzz_zzz_x_yz, g_yzz_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_zz_x_xx[i] = -4.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_zzz_x_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_x_xy[i] = -4.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_zzz_x_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_x_xz[i] = -4.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_zzz_x_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_x_yy[i] = -4.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_zzz_x_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_x_yz[i] = -4.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_zzz_x_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_x_zz[i] = -4.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3876-3882)

    #pragma omp simd aligned(g_y_z_0_0_zz_zz_y_xx, g_y_z_0_0_zz_zz_y_xy, g_y_z_0_0_zz_zz_y_xz, g_y_z_0_0_zz_zz_y_yy, g_y_z_0_0_zz_zz_y_yz, g_y_z_0_0_zz_zz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz, g_yzz_zzz_y_xx, g_yzz_zzz_y_xy, g_yzz_zzz_y_xz, g_yzz_zzz_y_yy, g_yzz_zzz_y_yz, g_yzz_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_zz_y_xx[i] = -4.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_zzz_y_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_y_xy[i] = -4.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_zzz_y_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_y_xz[i] = -4.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_zzz_y_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_y_yy[i] = -4.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_zzz_y_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_y_yz[i] = -4.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_zzz_y_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_y_zz[i] = -4.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3882-3888)

    #pragma omp simd aligned(g_y_z_0_0_zz_zz_z_xx, g_y_z_0_0_zz_zz_z_xy, g_y_z_0_0_zz_zz_z_xz, g_y_z_0_0_zz_zz_z_yy, g_y_z_0_0_zz_zz_z_yz, g_y_z_0_0_zz_zz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz, g_yzz_zzz_z_xx, g_yzz_zzz_z_xy, g_yzz_zzz_z_xz, g_yzz_zzz_z_yy, g_yzz_zzz_z_yz, g_yzz_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_y_z_0_0_zz_zz_z_xx[i] = -4.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_zzz_z_xx[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_z_xy[i] = -4.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_zzz_z_xy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_z_xz[i] = -4.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_zzz_z_xz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_z_yy[i] = -4.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_zzz_z_yy[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_z_yz[i] = -4.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_zzz_z_yz[i] * a_exp * b_exp;

        g_y_z_0_0_zz_zz_z_zz[i] = -4.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3888-3894)

    #pragma omp simd aligned(g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xxx_x_xx, g_xxz_xxx_x_xy, g_xxz_xxx_x_xz, g_xxz_xxx_x_yy, g_xxz_xxx_x_yz, g_xxz_xxx_x_zz, g_z_x_0_0_xx_xx_x_xx, g_z_x_0_0_xx_xx_x_xy, g_z_x_0_0_xx_xx_x_xz, g_z_x_0_0_xx_xx_x_yy, g_z_x_0_0_xx_xx_x_yz, g_z_x_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xx_x_xx[i] = -4.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_x_xy[i] = -4.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_x_xz[i] = -4.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_x_yy[i] = -4.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_x_yz[i] = -4.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_x_zz[i] = -4.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3894-3900)

    #pragma omp simd aligned(g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xxx_y_xx, g_xxz_xxx_y_xy, g_xxz_xxx_y_xz, g_xxz_xxx_y_yy, g_xxz_xxx_y_yz, g_xxz_xxx_y_zz, g_z_x_0_0_xx_xx_y_xx, g_z_x_0_0_xx_xx_y_xy, g_z_x_0_0_xx_xx_y_xz, g_z_x_0_0_xx_xx_y_yy, g_z_x_0_0_xx_xx_y_yz, g_z_x_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xx_y_xx[i] = -4.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_y_xy[i] = -4.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_y_xz[i] = -4.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_y_yy[i] = -4.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_y_yz[i] = -4.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_y_zz[i] = -4.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3900-3906)

    #pragma omp simd aligned(g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xxx_z_xx, g_xxz_xxx_z_xy, g_xxz_xxx_z_xz, g_xxz_xxx_z_yy, g_xxz_xxx_z_yz, g_xxz_xxx_z_zz, g_z_x_0_0_xx_xx_z_xx, g_z_x_0_0_xx_xx_z_xy, g_z_x_0_0_xx_xx_z_xz, g_z_x_0_0_xx_xx_z_yy, g_z_x_0_0_xx_xx_z_yz, g_z_x_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xx_z_xx[i] = -4.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_z_xy[i] = -4.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_z_xz[i] = -4.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_z_yy[i] = -4.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_z_yz[i] = -4.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xx_z_zz[i] = -4.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3906-3912)

    #pragma omp simd aligned(g_xxz_xxy_x_xx, g_xxz_xxy_x_xy, g_xxz_xxy_x_xz, g_xxz_xxy_x_yy, g_xxz_xxy_x_yz, g_xxz_xxy_x_zz, g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_z_x_0_0_xx_xy_x_xx, g_z_x_0_0_xx_xy_x_xy, g_z_x_0_0_xx_xy_x_xz, g_z_x_0_0_xx_xy_x_yy, g_z_x_0_0_xx_xy_x_yz, g_z_x_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xy_x_xx[i] = -2.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_x_xy[i] = -2.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_x_xz[i] = -2.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_x_yy[i] = -2.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_x_yz[i] = -2.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_x_zz[i] = -2.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3912-3918)

    #pragma omp simd aligned(g_xxz_xxy_y_xx, g_xxz_xxy_y_xy, g_xxz_xxy_y_xz, g_xxz_xxy_y_yy, g_xxz_xxy_y_yz, g_xxz_xxy_y_zz, g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_z_x_0_0_xx_xy_y_xx, g_z_x_0_0_xx_xy_y_xy, g_z_x_0_0_xx_xy_y_xz, g_z_x_0_0_xx_xy_y_yy, g_z_x_0_0_xx_xy_y_yz, g_z_x_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xy_y_xx[i] = -2.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_y_xy[i] = -2.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_y_xz[i] = -2.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_y_yy[i] = -2.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_y_yz[i] = -2.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_y_zz[i] = -2.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3918-3924)

    #pragma omp simd aligned(g_xxz_xxy_z_xx, g_xxz_xxy_z_xy, g_xxz_xxy_z_xz, g_xxz_xxy_z_yy, g_xxz_xxy_z_yz, g_xxz_xxy_z_zz, g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_z_x_0_0_xx_xy_z_xx, g_z_x_0_0_xx_xy_z_xy, g_z_x_0_0_xx_xy_z_xz, g_z_x_0_0_xx_xy_z_yy, g_z_x_0_0_xx_xy_z_yz, g_z_x_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xy_z_xx[i] = -2.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_z_xy[i] = -2.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_z_xz[i] = -2.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_z_yy[i] = -2.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_z_yz[i] = -2.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xy_z_zz[i] = -2.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3924-3930)

    #pragma omp simd aligned(g_xxz_xxz_x_xx, g_xxz_xxz_x_xy, g_xxz_xxz_x_xz, g_xxz_xxz_x_yy, g_xxz_xxz_x_yz, g_xxz_xxz_x_zz, g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_z_x_0_0_xx_xz_x_xx, g_z_x_0_0_xx_xz_x_xy, g_z_x_0_0_xx_xz_x_xz, g_z_x_0_0_xx_xz_x_yy, g_z_x_0_0_xx_xz_x_yz, g_z_x_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xz_x_xx[i] = -2.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_x_xy[i] = -2.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_x_xz[i] = -2.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_x_yy[i] = -2.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_x_yz[i] = -2.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_x_zz[i] = -2.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3930-3936)

    #pragma omp simd aligned(g_xxz_xxz_y_xx, g_xxz_xxz_y_xy, g_xxz_xxz_y_xz, g_xxz_xxz_y_yy, g_xxz_xxz_y_yz, g_xxz_xxz_y_zz, g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_z_x_0_0_xx_xz_y_xx, g_z_x_0_0_xx_xz_y_xy, g_z_x_0_0_xx_xz_y_xz, g_z_x_0_0_xx_xz_y_yy, g_z_x_0_0_xx_xz_y_yz, g_z_x_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xz_y_xx[i] = -2.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_y_xy[i] = -2.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_y_xz[i] = -2.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_y_yy[i] = -2.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_y_yz[i] = -2.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_y_zz[i] = -2.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3936-3942)

    #pragma omp simd aligned(g_xxz_xxz_z_xx, g_xxz_xxz_z_xy, g_xxz_xxz_z_xz, g_xxz_xxz_z_yy, g_xxz_xxz_z_yz, g_xxz_xxz_z_zz, g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_z_x_0_0_xx_xz_z_xx, g_z_x_0_0_xx_xz_z_xy, g_z_x_0_0_xx_xz_z_xz, g_z_x_0_0_xx_xz_z_yy, g_z_x_0_0_xx_xz_z_yz, g_z_x_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_xz_z_xx[i] = -2.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_z_xy[i] = -2.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_z_xz[i] = -2.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_z_yy[i] = -2.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_z_yz[i] = -2.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_xz_z_zz[i] = -2.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3942-3948)

    #pragma omp simd aligned(g_xxz_xyy_x_xx, g_xxz_xyy_x_xy, g_xxz_xyy_x_xz, g_xxz_xyy_x_yy, g_xxz_xyy_x_yz, g_xxz_xyy_x_zz, g_z_x_0_0_xx_yy_x_xx, g_z_x_0_0_xx_yy_x_xy, g_z_x_0_0_xx_yy_x_xz, g_z_x_0_0_xx_yy_x_yy, g_z_x_0_0_xx_yy_x_yz, g_z_x_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yy_x_xx[i] = 4.0 * g_xxz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_x_xy[i] = 4.0 * g_xxz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_x_xz[i] = 4.0 * g_xxz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_x_yy[i] = 4.0 * g_xxz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_x_yz[i] = 4.0 * g_xxz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_x_zz[i] = 4.0 * g_xxz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3948-3954)

    #pragma omp simd aligned(g_xxz_xyy_y_xx, g_xxz_xyy_y_xy, g_xxz_xyy_y_xz, g_xxz_xyy_y_yy, g_xxz_xyy_y_yz, g_xxz_xyy_y_zz, g_z_x_0_0_xx_yy_y_xx, g_z_x_0_0_xx_yy_y_xy, g_z_x_0_0_xx_yy_y_xz, g_z_x_0_0_xx_yy_y_yy, g_z_x_0_0_xx_yy_y_yz, g_z_x_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yy_y_xx[i] = 4.0 * g_xxz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_y_xy[i] = 4.0 * g_xxz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_y_xz[i] = 4.0 * g_xxz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_y_yy[i] = 4.0 * g_xxz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_y_yz[i] = 4.0 * g_xxz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_y_zz[i] = 4.0 * g_xxz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3954-3960)

    #pragma omp simd aligned(g_xxz_xyy_z_xx, g_xxz_xyy_z_xy, g_xxz_xyy_z_xz, g_xxz_xyy_z_yy, g_xxz_xyy_z_yz, g_xxz_xyy_z_zz, g_z_x_0_0_xx_yy_z_xx, g_z_x_0_0_xx_yy_z_xy, g_z_x_0_0_xx_yy_z_xz, g_z_x_0_0_xx_yy_z_yy, g_z_x_0_0_xx_yy_z_yz, g_z_x_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yy_z_xx[i] = 4.0 * g_xxz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_z_xy[i] = 4.0 * g_xxz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_z_xz[i] = 4.0 * g_xxz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_z_yy[i] = 4.0 * g_xxz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_z_yz[i] = 4.0 * g_xxz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yy_z_zz[i] = 4.0 * g_xxz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3960-3966)

    #pragma omp simd aligned(g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_x_0_0_xx_yz_x_xx, g_z_x_0_0_xx_yz_x_xy, g_z_x_0_0_xx_yz_x_xz, g_z_x_0_0_xx_yz_x_yy, g_z_x_0_0_xx_yz_x_yz, g_z_x_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yz_x_xx[i] = 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_x_xy[i] = 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_x_xz[i] = 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_x_yy[i] = 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_x_yz[i] = 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_x_zz[i] = 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3966-3972)

    #pragma omp simd aligned(g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_x_0_0_xx_yz_y_xx, g_z_x_0_0_xx_yz_y_xy, g_z_x_0_0_xx_yz_y_xz, g_z_x_0_0_xx_yz_y_yy, g_z_x_0_0_xx_yz_y_yz, g_z_x_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yz_y_xx[i] = 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_y_xy[i] = 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_y_xz[i] = 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_y_yy[i] = 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_y_yz[i] = 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_y_zz[i] = 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3972-3978)

    #pragma omp simd aligned(g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_x_0_0_xx_yz_z_xx, g_z_x_0_0_xx_yz_z_xy, g_z_x_0_0_xx_yz_z_xz, g_z_x_0_0_xx_yz_z_yy, g_z_x_0_0_xx_yz_z_yz, g_z_x_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_yz_z_xx[i] = 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_z_xy[i] = 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_z_xz[i] = 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_z_yy[i] = 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_z_yz[i] = 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_yz_z_zz[i] = 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3978-3984)

    #pragma omp simd aligned(g_xxz_xzz_x_xx, g_xxz_xzz_x_xy, g_xxz_xzz_x_xz, g_xxz_xzz_x_yy, g_xxz_xzz_x_yz, g_xxz_xzz_x_zz, g_z_x_0_0_xx_zz_x_xx, g_z_x_0_0_xx_zz_x_xy, g_z_x_0_0_xx_zz_x_xz, g_z_x_0_0_xx_zz_x_yy, g_z_x_0_0_xx_zz_x_yz, g_z_x_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_zz_x_xx[i] = 4.0 * g_xxz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_x_xy[i] = 4.0 * g_xxz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_x_xz[i] = 4.0 * g_xxz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_x_yy[i] = 4.0 * g_xxz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_x_yz[i] = 4.0 * g_xxz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_x_zz[i] = 4.0 * g_xxz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (3984-3990)

    #pragma omp simd aligned(g_xxz_xzz_y_xx, g_xxz_xzz_y_xy, g_xxz_xzz_y_xz, g_xxz_xzz_y_yy, g_xxz_xzz_y_yz, g_xxz_xzz_y_zz, g_z_x_0_0_xx_zz_y_xx, g_z_x_0_0_xx_zz_y_xy, g_z_x_0_0_xx_zz_y_xz, g_z_x_0_0_xx_zz_y_yy, g_z_x_0_0_xx_zz_y_yz, g_z_x_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_zz_y_xx[i] = 4.0 * g_xxz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_y_xy[i] = 4.0 * g_xxz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_y_xz[i] = 4.0 * g_xxz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_y_yy[i] = 4.0 * g_xxz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_y_yz[i] = 4.0 * g_xxz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_y_zz[i] = 4.0 * g_xxz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (3990-3996)

    #pragma omp simd aligned(g_xxz_xzz_z_xx, g_xxz_xzz_z_xy, g_xxz_xzz_z_xz, g_xxz_xzz_z_yy, g_xxz_xzz_z_yz, g_xxz_xzz_z_zz, g_z_x_0_0_xx_zz_z_xx, g_z_x_0_0_xx_zz_z_xy, g_z_x_0_0_xx_zz_z_xz, g_z_x_0_0_xx_zz_z_yy, g_z_x_0_0_xx_zz_z_yz, g_z_x_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xx_zz_z_xx[i] = 4.0 * g_xxz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_z_xy[i] = 4.0 * g_xxz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_z_xz[i] = 4.0 * g_xxz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_z_yy[i] = 4.0 * g_xxz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_z_yz[i] = 4.0 * g_xxz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xx_zz_z_zz[i] = 4.0 * g_xxz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (3996-4002)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xxx_x_xx, g_xyz_xxx_x_xy, g_xyz_xxx_x_xz, g_xyz_xxx_x_yy, g_xyz_xxx_x_yz, g_xyz_xxx_x_zz, g_z_x_0_0_xy_xx_x_xx, g_z_x_0_0_xy_xx_x_xy, g_z_x_0_0_xy_xx_x_xz, g_z_x_0_0_xy_xx_x_yy, g_z_x_0_0_xy_xx_x_yz, g_z_x_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xx_x_xx[i] = -4.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_x_xy[i] = -4.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_x_xz[i] = -4.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_x_yy[i] = -4.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_x_yz[i] = -4.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_x_zz[i] = -4.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4002-4008)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xxx_y_xx, g_xyz_xxx_y_xy, g_xyz_xxx_y_xz, g_xyz_xxx_y_yy, g_xyz_xxx_y_yz, g_xyz_xxx_y_zz, g_z_x_0_0_xy_xx_y_xx, g_z_x_0_0_xy_xx_y_xy, g_z_x_0_0_xy_xx_y_xz, g_z_x_0_0_xy_xx_y_yy, g_z_x_0_0_xy_xx_y_yz, g_z_x_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xx_y_xx[i] = -4.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_y_xy[i] = -4.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_y_xz[i] = -4.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_y_yy[i] = -4.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_y_yz[i] = -4.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_y_zz[i] = -4.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4008-4014)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xxx_z_xx, g_xyz_xxx_z_xy, g_xyz_xxx_z_xz, g_xyz_xxx_z_yy, g_xyz_xxx_z_yz, g_xyz_xxx_z_zz, g_z_x_0_0_xy_xx_z_xx, g_z_x_0_0_xy_xx_z_xy, g_z_x_0_0_xy_xx_z_xz, g_z_x_0_0_xy_xx_z_yy, g_z_x_0_0_xy_xx_z_yz, g_z_x_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xx_z_xx[i] = -4.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_z_xy[i] = -4.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_z_xz[i] = -4.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_z_yy[i] = -4.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_z_yz[i] = -4.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xx_z_zz[i] = -4.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4014-4020)

    #pragma omp simd aligned(g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz, g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_z_x_0_0_xy_xy_x_xx, g_z_x_0_0_xy_xy_x_xy, g_z_x_0_0_xy_xy_x_xz, g_z_x_0_0_xy_xy_x_yy, g_z_x_0_0_xy_xy_x_yz, g_z_x_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xy_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4020-4026)

    #pragma omp simd aligned(g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz, g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_z_x_0_0_xy_xy_y_xx, g_z_x_0_0_xy_xy_y_xy, g_z_x_0_0_xy_xy_y_xz, g_z_x_0_0_xy_xy_y_yy, g_z_x_0_0_xy_xy_y_yz, g_z_x_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xy_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4026-4032)

    #pragma omp simd aligned(g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz, g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_z_x_0_0_xy_xy_z_xx, g_z_x_0_0_xy_xy_z_xy, g_z_x_0_0_xy_xy_z_xz, g_z_x_0_0_xy_xy_z_yy, g_z_x_0_0_xy_xy_z_yz, g_z_x_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xy_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xy_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4032-4038)

    #pragma omp simd aligned(g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_z_x_0_0_xy_xz_x_xx, g_z_x_0_0_xy_xz_x_xy, g_z_x_0_0_xy_xz_x_xz, g_z_x_0_0_xy_xz_x_yy, g_z_x_0_0_xy_xz_x_yz, g_z_x_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4038-4044)

    #pragma omp simd aligned(g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_z_x_0_0_xy_xz_y_xx, g_z_x_0_0_xy_xz_y_xy, g_z_x_0_0_xy_xz_y_xz, g_z_x_0_0_xy_xz_y_yy, g_z_x_0_0_xy_xz_y_yz, g_z_x_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4044-4050)

    #pragma omp simd aligned(g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_z_x_0_0_xy_xz_z_xx, g_z_x_0_0_xy_xz_z_xy, g_z_x_0_0_xy_xz_z_xz, g_z_x_0_0_xy_xz_z_yy, g_z_x_0_0_xy_xz_z_yz, g_z_x_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_xz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_xz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4050-4056)

    #pragma omp simd aligned(g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz, g_z_x_0_0_xy_yy_x_xx, g_z_x_0_0_xy_yy_x_xy, g_z_x_0_0_xy_yy_x_xz, g_z_x_0_0_xy_yy_x_yy, g_z_x_0_0_xy_yy_x_yz, g_z_x_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yy_x_xx[i] = 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_x_xy[i] = 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_x_xz[i] = 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_x_yy[i] = 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_x_yz[i] = 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_x_zz[i] = 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4056-4062)

    #pragma omp simd aligned(g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz, g_z_x_0_0_xy_yy_y_xx, g_z_x_0_0_xy_yy_y_xy, g_z_x_0_0_xy_yy_y_xz, g_z_x_0_0_xy_yy_y_yy, g_z_x_0_0_xy_yy_y_yz, g_z_x_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yy_y_xx[i] = 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_y_xy[i] = 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_y_xz[i] = 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_y_yy[i] = 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_y_yz[i] = 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_y_zz[i] = 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4062-4068)

    #pragma omp simd aligned(g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz, g_z_x_0_0_xy_yy_z_xx, g_z_x_0_0_xy_yy_z_xy, g_z_x_0_0_xy_yy_z_xz, g_z_x_0_0_xy_yy_z_yy, g_z_x_0_0_xy_yy_z_yz, g_z_x_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yy_z_xx[i] = 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_z_xy[i] = 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_z_xz[i] = 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_z_yy[i] = 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_z_yz[i] = 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yy_z_zz[i] = 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4068-4074)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_z_x_0_0_xy_yz_x_xx, g_z_x_0_0_xy_yz_x_xy, g_z_x_0_0_xy_yz_x_xz, g_z_x_0_0_xy_yz_x_yy, g_z_x_0_0_xy_yz_x_yz, g_z_x_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4074-4080)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_z_x_0_0_xy_yz_y_xx, g_z_x_0_0_xy_yz_y_xy, g_z_x_0_0_xy_yz_y_xz, g_z_x_0_0_xy_yz_y_yy, g_z_x_0_0_xy_yz_y_yz, g_z_x_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4080-4086)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_z_x_0_0_xy_yz_z_xx, g_z_x_0_0_xy_yz_z_xy, g_z_x_0_0_xy_yz_z_xz, g_z_x_0_0_xy_yz_z_yy, g_z_x_0_0_xy_yz_z_yz, g_z_x_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_yz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_yz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4086-4092)

    #pragma omp simd aligned(g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz, g_z_x_0_0_xy_zz_x_xx, g_z_x_0_0_xy_zz_x_xy, g_z_x_0_0_xy_zz_x_xz, g_z_x_0_0_xy_zz_x_yy, g_z_x_0_0_xy_zz_x_yz, g_z_x_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_zz_x_xx[i] = 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_x_xy[i] = 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_x_xz[i] = 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_x_yy[i] = 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_x_yz[i] = 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_x_zz[i] = 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4092-4098)

    #pragma omp simd aligned(g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz, g_z_x_0_0_xy_zz_y_xx, g_z_x_0_0_xy_zz_y_xy, g_z_x_0_0_xy_zz_y_xz, g_z_x_0_0_xy_zz_y_yy, g_z_x_0_0_xy_zz_y_yz, g_z_x_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_zz_y_xx[i] = 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_y_xy[i] = 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_y_xz[i] = 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_y_yy[i] = 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_y_yz[i] = 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_y_zz[i] = 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4098-4104)

    #pragma omp simd aligned(g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz, g_z_x_0_0_xy_zz_z_xx, g_z_x_0_0_xy_zz_z_xy, g_z_x_0_0_xy_zz_z_xz, g_z_x_0_0_xy_zz_z_yy, g_z_x_0_0_xy_zz_z_yz, g_z_x_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xy_zz_z_xx[i] = 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_z_xy[i] = 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_z_xz[i] = 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_z_yy[i] = 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_z_yz[i] = 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xy_zz_z_zz[i] = 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4104-4110)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xxx_x_xx, g_x_xxx_x_xy, g_x_xxx_x_xz, g_x_xxx_x_yy, g_x_xxx_x_yz, g_x_xxx_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xxx_x_xx, g_xzz_xxx_x_xy, g_xzz_xxx_x_xz, g_xzz_xxx_x_yy, g_xzz_xxx_x_yz, g_xzz_xxx_x_zz, g_z_x_0_0_xz_xx_x_xx, g_z_x_0_0_xz_xx_x_xy, g_z_x_0_0_xz_xx_x_xz, g_z_x_0_0_xz_xx_x_yy, g_z_x_0_0_xz_xx_x_yz, g_z_x_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xx_x_xx[i] = 2.0 * g_x_x_x_xx[i] - 2.0 * g_x_xxx_x_xx[i] * b_exp - 4.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_x_xy[i] = 2.0 * g_x_x_x_xy[i] - 2.0 * g_x_xxx_x_xy[i] * b_exp - 4.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_x_xz[i] = 2.0 * g_x_x_x_xz[i] - 2.0 * g_x_xxx_x_xz[i] * b_exp - 4.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_x_yy[i] = 2.0 * g_x_x_x_yy[i] - 2.0 * g_x_xxx_x_yy[i] * b_exp - 4.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_x_yz[i] = 2.0 * g_x_x_x_yz[i] - 2.0 * g_x_xxx_x_yz[i] * b_exp - 4.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_x_zz[i] = 2.0 * g_x_x_x_zz[i] - 2.0 * g_x_xxx_x_zz[i] * b_exp - 4.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4110-4116)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xxx_y_xx, g_x_xxx_y_xy, g_x_xxx_y_xz, g_x_xxx_y_yy, g_x_xxx_y_yz, g_x_xxx_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xxx_y_xx, g_xzz_xxx_y_xy, g_xzz_xxx_y_xz, g_xzz_xxx_y_yy, g_xzz_xxx_y_yz, g_xzz_xxx_y_zz, g_z_x_0_0_xz_xx_y_xx, g_z_x_0_0_xz_xx_y_xy, g_z_x_0_0_xz_xx_y_xz, g_z_x_0_0_xz_xx_y_yy, g_z_x_0_0_xz_xx_y_yz, g_z_x_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xx_y_xx[i] = 2.0 * g_x_x_y_xx[i] - 2.0 * g_x_xxx_y_xx[i] * b_exp - 4.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_y_xy[i] = 2.0 * g_x_x_y_xy[i] - 2.0 * g_x_xxx_y_xy[i] * b_exp - 4.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_y_xz[i] = 2.0 * g_x_x_y_xz[i] - 2.0 * g_x_xxx_y_xz[i] * b_exp - 4.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_y_yy[i] = 2.0 * g_x_x_y_yy[i] - 2.0 * g_x_xxx_y_yy[i] * b_exp - 4.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_y_yz[i] = 2.0 * g_x_x_y_yz[i] - 2.0 * g_x_xxx_y_yz[i] * b_exp - 4.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_y_zz[i] = 2.0 * g_x_x_y_zz[i] - 2.0 * g_x_xxx_y_zz[i] * b_exp - 4.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4116-4122)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xxx_z_xx, g_x_xxx_z_xy, g_x_xxx_z_xz, g_x_xxx_z_yy, g_x_xxx_z_yz, g_x_xxx_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xxx_z_xx, g_xzz_xxx_z_xy, g_xzz_xxx_z_xz, g_xzz_xxx_z_yy, g_xzz_xxx_z_yz, g_xzz_xxx_z_zz, g_z_x_0_0_xz_xx_z_xx, g_z_x_0_0_xz_xx_z_xy, g_z_x_0_0_xz_xx_z_xz, g_z_x_0_0_xz_xx_z_yy, g_z_x_0_0_xz_xx_z_yz, g_z_x_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xx_z_xx[i] = 2.0 * g_x_x_z_xx[i] - 2.0 * g_x_xxx_z_xx[i] * b_exp - 4.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_z_xy[i] = 2.0 * g_x_x_z_xy[i] - 2.0 * g_x_xxx_z_xy[i] * b_exp - 4.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_z_xz[i] = 2.0 * g_x_x_z_xz[i] - 2.0 * g_x_xxx_z_xz[i] * b_exp - 4.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_z_yy[i] = 2.0 * g_x_x_z_yy[i] - 2.0 * g_x_xxx_z_yy[i] * b_exp - 4.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_z_yz[i] = 2.0 * g_x_x_z_yz[i] - 2.0 * g_x_xxx_z_yz[i] * b_exp - 4.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xx_z_zz[i] = 2.0 * g_x_x_z_zz[i] - 2.0 * g_x_xxx_z_zz[i] * b_exp - 4.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4122-4128)

    #pragma omp simd aligned(g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_xzz_xxy_x_xx, g_xzz_xxy_x_xy, g_xzz_xxy_x_xz, g_xzz_xxy_x_yy, g_xzz_xxy_x_yz, g_xzz_xxy_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz, g_z_x_0_0_xz_xy_x_xx, g_z_x_0_0_xz_xy_x_xy, g_z_x_0_0_xz_xy_x_xz, g_z_x_0_0_xz_xy_x_yy, g_z_x_0_0_xz_xy_x_yz, g_z_x_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xy_x_xx[i] = g_x_y_x_xx[i] - 2.0 * g_x_xxy_x_xx[i] * b_exp - 2.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_x_xy[i] = g_x_y_x_xy[i] - 2.0 * g_x_xxy_x_xy[i] * b_exp - 2.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_x_xz[i] = g_x_y_x_xz[i] - 2.0 * g_x_xxy_x_xz[i] * b_exp - 2.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_x_yy[i] = g_x_y_x_yy[i] - 2.0 * g_x_xxy_x_yy[i] * b_exp - 2.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_x_yz[i] = g_x_y_x_yz[i] - 2.0 * g_x_xxy_x_yz[i] * b_exp - 2.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_x_zz[i] = g_x_y_x_zz[i] - 2.0 * g_x_xxy_x_zz[i] * b_exp - 2.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4128-4134)

    #pragma omp simd aligned(g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_xzz_xxy_y_xx, g_xzz_xxy_y_xy, g_xzz_xxy_y_xz, g_xzz_xxy_y_yy, g_xzz_xxy_y_yz, g_xzz_xxy_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz, g_z_x_0_0_xz_xy_y_xx, g_z_x_0_0_xz_xy_y_xy, g_z_x_0_0_xz_xy_y_xz, g_z_x_0_0_xz_xy_y_yy, g_z_x_0_0_xz_xy_y_yz, g_z_x_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xy_y_xx[i] = g_x_y_y_xx[i] - 2.0 * g_x_xxy_y_xx[i] * b_exp - 2.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_y_xy[i] = g_x_y_y_xy[i] - 2.0 * g_x_xxy_y_xy[i] * b_exp - 2.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_y_xz[i] = g_x_y_y_xz[i] - 2.0 * g_x_xxy_y_xz[i] * b_exp - 2.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_y_yy[i] = g_x_y_y_yy[i] - 2.0 * g_x_xxy_y_yy[i] * b_exp - 2.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_y_yz[i] = g_x_y_y_yz[i] - 2.0 * g_x_xxy_y_yz[i] * b_exp - 2.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_y_zz[i] = g_x_y_y_zz[i] - 2.0 * g_x_xxy_y_zz[i] * b_exp - 2.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4134-4140)

    #pragma omp simd aligned(g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_xzz_xxy_z_xx, g_xzz_xxy_z_xy, g_xzz_xxy_z_xz, g_xzz_xxy_z_yy, g_xzz_xxy_z_yz, g_xzz_xxy_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz, g_z_x_0_0_xz_xy_z_xx, g_z_x_0_0_xz_xy_z_xy, g_z_x_0_0_xz_xy_z_xz, g_z_x_0_0_xz_xy_z_yy, g_z_x_0_0_xz_xy_z_yz, g_z_x_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xy_z_xx[i] = g_x_y_z_xx[i] - 2.0 * g_x_xxy_z_xx[i] * b_exp - 2.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_z_xy[i] = g_x_y_z_xy[i] - 2.0 * g_x_xxy_z_xy[i] * b_exp - 2.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_z_xz[i] = g_x_y_z_xz[i] - 2.0 * g_x_xxy_z_xz[i] * b_exp - 2.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_z_yy[i] = g_x_y_z_yy[i] - 2.0 * g_x_xxy_z_yy[i] * b_exp - 2.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_z_yz[i] = g_x_y_z_yz[i] - 2.0 * g_x_xxy_z_yz[i] * b_exp - 2.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xy_z_zz[i] = g_x_y_z_zz[i] - 2.0 * g_x_xxy_z_zz[i] * b_exp - 2.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4140-4146)

    #pragma omp simd aligned(g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xzz_xxz_x_xx, g_xzz_xxz_x_xy, g_xzz_xxz_x_xz, g_xzz_xxz_x_yy, g_xzz_xxz_x_yz, g_xzz_xxz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz, g_z_x_0_0_xz_xz_x_xx, g_z_x_0_0_xz_xz_x_xy, g_z_x_0_0_xz_xz_x_xz, g_z_x_0_0_xz_xz_x_yy, g_z_x_0_0_xz_xz_x_yz, g_z_x_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xz_x_xx[i] = g_x_z_x_xx[i] - 2.0 * g_x_xxz_x_xx[i] * b_exp - 2.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_x_xy[i] = g_x_z_x_xy[i] - 2.0 * g_x_xxz_x_xy[i] * b_exp - 2.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_x_xz[i] = g_x_z_x_xz[i] - 2.0 * g_x_xxz_x_xz[i] * b_exp - 2.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_x_yy[i] = g_x_z_x_yy[i] - 2.0 * g_x_xxz_x_yy[i] * b_exp - 2.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_x_yz[i] = g_x_z_x_yz[i] - 2.0 * g_x_xxz_x_yz[i] * b_exp - 2.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_x_zz[i] = g_x_z_x_zz[i] - 2.0 * g_x_xxz_x_zz[i] * b_exp - 2.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4146-4152)

    #pragma omp simd aligned(g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xzz_xxz_y_xx, g_xzz_xxz_y_xy, g_xzz_xxz_y_xz, g_xzz_xxz_y_yy, g_xzz_xxz_y_yz, g_xzz_xxz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz, g_z_x_0_0_xz_xz_y_xx, g_z_x_0_0_xz_xz_y_xy, g_z_x_0_0_xz_xz_y_xz, g_z_x_0_0_xz_xz_y_yy, g_z_x_0_0_xz_xz_y_yz, g_z_x_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xz_y_xx[i] = g_x_z_y_xx[i] - 2.0 * g_x_xxz_y_xx[i] * b_exp - 2.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_y_xy[i] = g_x_z_y_xy[i] - 2.0 * g_x_xxz_y_xy[i] * b_exp - 2.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_y_xz[i] = g_x_z_y_xz[i] - 2.0 * g_x_xxz_y_xz[i] * b_exp - 2.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_y_yy[i] = g_x_z_y_yy[i] - 2.0 * g_x_xxz_y_yy[i] * b_exp - 2.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_y_yz[i] = g_x_z_y_yz[i] - 2.0 * g_x_xxz_y_yz[i] * b_exp - 2.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_y_zz[i] = g_x_z_y_zz[i] - 2.0 * g_x_xxz_y_zz[i] * b_exp - 2.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4152-4158)

    #pragma omp simd aligned(g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xzz_xxz_z_xx, g_xzz_xxz_z_xy, g_xzz_xxz_z_xz, g_xzz_xxz_z_yy, g_xzz_xxz_z_yz, g_xzz_xxz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz, g_z_x_0_0_xz_xz_z_xx, g_z_x_0_0_xz_xz_z_xy, g_z_x_0_0_xz_xz_z_xz, g_z_x_0_0_xz_xz_z_yy, g_z_x_0_0_xz_xz_z_yz, g_z_x_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_xz_z_xx[i] = g_x_z_z_xx[i] - 2.0 * g_x_xxz_z_xx[i] * b_exp - 2.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_z_xy[i] = g_x_z_z_xy[i] - 2.0 * g_x_xxz_z_xy[i] * b_exp - 2.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_z_xz[i] = g_x_z_z_xz[i] - 2.0 * g_x_xxz_z_xz[i] * b_exp - 2.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_z_yy[i] = g_x_z_z_yy[i] - 2.0 * g_x_xxz_z_yy[i] * b_exp - 2.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_z_yz[i] = g_x_z_z_yz[i] - 2.0 * g_x_xxz_z_yz[i] * b_exp - 2.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_xz_z_zz[i] = g_x_z_z_zz[i] - 2.0 * g_x_xxz_z_zz[i] * b_exp - 2.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4158-4164)

    #pragma omp simd aligned(g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_xzz_xyy_x_xx, g_xzz_xyy_x_xy, g_xzz_xyy_x_xz, g_xzz_xyy_x_yy, g_xzz_xyy_x_yz, g_xzz_xyy_x_zz, g_z_x_0_0_xz_yy_x_xx, g_z_x_0_0_xz_yy_x_xy, g_z_x_0_0_xz_yy_x_xz, g_z_x_0_0_xz_yy_x_yy, g_z_x_0_0_xz_yy_x_yz, g_z_x_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yy_x_xx[i] = -2.0 * g_x_xyy_x_xx[i] * b_exp + 4.0 * g_xzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_x_xy[i] = -2.0 * g_x_xyy_x_xy[i] * b_exp + 4.0 * g_xzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_x_xz[i] = -2.0 * g_x_xyy_x_xz[i] * b_exp + 4.0 * g_xzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_x_yy[i] = -2.0 * g_x_xyy_x_yy[i] * b_exp + 4.0 * g_xzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_x_yz[i] = -2.0 * g_x_xyy_x_yz[i] * b_exp + 4.0 * g_xzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_x_zz[i] = -2.0 * g_x_xyy_x_zz[i] * b_exp + 4.0 * g_xzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4164-4170)

    #pragma omp simd aligned(g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_xzz_xyy_y_xx, g_xzz_xyy_y_xy, g_xzz_xyy_y_xz, g_xzz_xyy_y_yy, g_xzz_xyy_y_yz, g_xzz_xyy_y_zz, g_z_x_0_0_xz_yy_y_xx, g_z_x_0_0_xz_yy_y_xy, g_z_x_0_0_xz_yy_y_xz, g_z_x_0_0_xz_yy_y_yy, g_z_x_0_0_xz_yy_y_yz, g_z_x_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yy_y_xx[i] = -2.0 * g_x_xyy_y_xx[i] * b_exp + 4.0 * g_xzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_y_xy[i] = -2.0 * g_x_xyy_y_xy[i] * b_exp + 4.0 * g_xzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_y_xz[i] = -2.0 * g_x_xyy_y_xz[i] * b_exp + 4.0 * g_xzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_y_yy[i] = -2.0 * g_x_xyy_y_yy[i] * b_exp + 4.0 * g_xzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_y_yz[i] = -2.0 * g_x_xyy_y_yz[i] * b_exp + 4.0 * g_xzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_y_zz[i] = -2.0 * g_x_xyy_y_zz[i] * b_exp + 4.0 * g_xzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4170-4176)

    #pragma omp simd aligned(g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_xzz_xyy_z_xx, g_xzz_xyy_z_xy, g_xzz_xyy_z_xz, g_xzz_xyy_z_yy, g_xzz_xyy_z_yz, g_xzz_xyy_z_zz, g_z_x_0_0_xz_yy_z_xx, g_z_x_0_0_xz_yy_z_xy, g_z_x_0_0_xz_yy_z_xz, g_z_x_0_0_xz_yy_z_yy, g_z_x_0_0_xz_yy_z_yz, g_z_x_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yy_z_xx[i] = -2.0 * g_x_xyy_z_xx[i] * b_exp + 4.0 * g_xzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_z_xy[i] = -2.0 * g_x_xyy_z_xy[i] * b_exp + 4.0 * g_xzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_z_xz[i] = -2.0 * g_x_xyy_z_xz[i] * b_exp + 4.0 * g_xzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_z_yy[i] = -2.0 * g_x_xyy_z_yy[i] * b_exp + 4.0 * g_xzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_z_yz[i] = -2.0 * g_x_xyy_z_yz[i] * b_exp + 4.0 * g_xzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yy_z_zz[i] = -2.0 * g_x_xyy_z_zz[i] * b_exp + 4.0 * g_xzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4176-4182)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz, g_z_x_0_0_xz_yz_x_xx, g_z_x_0_0_xz_yz_x_xy, g_z_x_0_0_xz_yz_x_xz, g_z_x_0_0_xz_yz_x_yy, g_z_x_0_0_xz_yz_x_yz, g_z_x_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yz_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4182-4188)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz, g_z_x_0_0_xz_yz_y_xx, g_z_x_0_0_xz_yz_y_xy, g_z_x_0_0_xz_yz_y_xz, g_z_x_0_0_xz_yz_y_yy, g_z_x_0_0_xz_yz_y_yz, g_z_x_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yz_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4188-4194)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz, g_z_x_0_0_xz_yz_z_xx, g_z_x_0_0_xz_yz_z_xy, g_z_x_0_0_xz_yz_z_xz, g_z_x_0_0_xz_yz_z_yy, g_z_x_0_0_xz_yz_z_yz, g_z_x_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_yz_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_yz_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4194-4200)

    #pragma omp simd aligned(g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_xzz_xzz_x_xx, g_xzz_xzz_x_xy, g_xzz_xzz_x_xz, g_xzz_xzz_x_yy, g_xzz_xzz_x_yz, g_xzz_xzz_x_zz, g_z_x_0_0_xz_zz_x_xx, g_z_x_0_0_xz_zz_x_xy, g_z_x_0_0_xz_zz_x_xz, g_z_x_0_0_xz_zz_x_yy, g_z_x_0_0_xz_zz_x_yz, g_z_x_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_zz_x_xx[i] = -2.0 * g_x_xzz_x_xx[i] * b_exp + 4.0 * g_xzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_x_xy[i] = -2.0 * g_x_xzz_x_xy[i] * b_exp + 4.0 * g_xzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_x_xz[i] = -2.0 * g_x_xzz_x_xz[i] * b_exp + 4.0 * g_xzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_x_yy[i] = -2.0 * g_x_xzz_x_yy[i] * b_exp + 4.0 * g_xzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_x_yz[i] = -2.0 * g_x_xzz_x_yz[i] * b_exp + 4.0 * g_xzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_x_zz[i] = -2.0 * g_x_xzz_x_zz[i] * b_exp + 4.0 * g_xzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4200-4206)

    #pragma omp simd aligned(g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_xzz_xzz_y_xx, g_xzz_xzz_y_xy, g_xzz_xzz_y_xz, g_xzz_xzz_y_yy, g_xzz_xzz_y_yz, g_xzz_xzz_y_zz, g_z_x_0_0_xz_zz_y_xx, g_z_x_0_0_xz_zz_y_xy, g_z_x_0_0_xz_zz_y_xz, g_z_x_0_0_xz_zz_y_yy, g_z_x_0_0_xz_zz_y_yz, g_z_x_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_zz_y_xx[i] = -2.0 * g_x_xzz_y_xx[i] * b_exp + 4.0 * g_xzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_y_xy[i] = -2.0 * g_x_xzz_y_xy[i] * b_exp + 4.0 * g_xzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_y_xz[i] = -2.0 * g_x_xzz_y_xz[i] * b_exp + 4.0 * g_xzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_y_yy[i] = -2.0 * g_x_xzz_y_yy[i] * b_exp + 4.0 * g_xzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_y_yz[i] = -2.0 * g_x_xzz_y_yz[i] * b_exp + 4.0 * g_xzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_y_zz[i] = -2.0 * g_x_xzz_y_zz[i] * b_exp + 4.0 * g_xzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4206-4212)

    #pragma omp simd aligned(g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_xzz_xzz_z_xx, g_xzz_xzz_z_xy, g_xzz_xzz_z_xz, g_xzz_xzz_z_yy, g_xzz_xzz_z_yz, g_xzz_xzz_z_zz, g_z_x_0_0_xz_zz_z_xx, g_z_x_0_0_xz_zz_z_xy, g_z_x_0_0_xz_zz_z_xz, g_z_x_0_0_xz_zz_z_yy, g_z_x_0_0_xz_zz_z_yz, g_z_x_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_xz_zz_z_xx[i] = -2.0 * g_x_xzz_z_xx[i] * b_exp + 4.0 * g_xzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_z_xy[i] = -2.0 * g_x_xzz_z_xy[i] * b_exp + 4.0 * g_xzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_z_xz[i] = -2.0 * g_x_xzz_z_xz[i] * b_exp + 4.0 * g_xzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_z_yy[i] = -2.0 * g_x_xzz_z_yy[i] * b_exp + 4.0 * g_xzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_z_yz[i] = -2.0 * g_x_xzz_z_yz[i] * b_exp + 4.0 * g_xzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_xz_zz_z_zz[i] = -2.0 * g_x_xzz_z_zz[i] * b_exp + 4.0 * g_xzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4212-4218)

    #pragma omp simd aligned(g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xxx_x_xx, g_yyz_xxx_x_xy, g_yyz_xxx_x_xz, g_yyz_xxx_x_yy, g_yyz_xxx_x_yz, g_yyz_xxx_x_zz, g_z_x_0_0_yy_xx_x_xx, g_z_x_0_0_yy_xx_x_xy, g_z_x_0_0_yy_xx_x_xz, g_z_x_0_0_yy_xx_x_yy, g_z_x_0_0_yy_xx_x_yz, g_z_x_0_0_yy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xx_x_xx[i] = -4.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_x_xy[i] = -4.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_x_xz[i] = -4.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_x_yy[i] = -4.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_x_yz[i] = -4.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_x_zz[i] = -4.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4218-4224)

    #pragma omp simd aligned(g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xxx_y_xx, g_yyz_xxx_y_xy, g_yyz_xxx_y_xz, g_yyz_xxx_y_yy, g_yyz_xxx_y_yz, g_yyz_xxx_y_zz, g_z_x_0_0_yy_xx_y_xx, g_z_x_0_0_yy_xx_y_xy, g_z_x_0_0_yy_xx_y_xz, g_z_x_0_0_yy_xx_y_yy, g_z_x_0_0_yy_xx_y_yz, g_z_x_0_0_yy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xx_y_xx[i] = -4.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_y_xy[i] = -4.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_y_xz[i] = -4.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_y_yy[i] = -4.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_y_yz[i] = -4.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_y_zz[i] = -4.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4224-4230)

    #pragma omp simd aligned(g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xxx_z_xx, g_yyz_xxx_z_xy, g_yyz_xxx_z_xz, g_yyz_xxx_z_yy, g_yyz_xxx_z_yz, g_yyz_xxx_z_zz, g_z_x_0_0_yy_xx_z_xx, g_z_x_0_0_yy_xx_z_xy, g_z_x_0_0_yy_xx_z_xz, g_z_x_0_0_yy_xx_z_yy, g_z_x_0_0_yy_xx_z_yz, g_z_x_0_0_yy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xx_z_xx[i] = -4.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_z_xy[i] = -4.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_z_xz[i] = -4.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_z_yy[i] = -4.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_z_yz[i] = -4.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xx_z_zz[i] = -4.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4230-4236)

    #pragma omp simd aligned(g_yyz_xxy_x_xx, g_yyz_xxy_x_xy, g_yyz_xxy_x_xz, g_yyz_xxy_x_yy, g_yyz_xxy_x_yz, g_yyz_xxy_x_zz, g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_z_x_0_0_yy_xy_x_xx, g_z_x_0_0_yy_xy_x_xy, g_z_x_0_0_yy_xy_x_xz, g_z_x_0_0_yy_xy_x_yy, g_z_x_0_0_yy_xy_x_yz, g_z_x_0_0_yy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xy_x_xx[i] = -2.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_x_xy[i] = -2.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_x_xz[i] = -2.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_x_yy[i] = -2.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_x_yz[i] = -2.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_x_zz[i] = -2.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4236-4242)

    #pragma omp simd aligned(g_yyz_xxy_y_xx, g_yyz_xxy_y_xy, g_yyz_xxy_y_xz, g_yyz_xxy_y_yy, g_yyz_xxy_y_yz, g_yyz_xxy_y_zz, g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_z_x_0_0_yy_xy_y_xx, g_z_x_0_0_yy_xy_y_xy, g_z_x_0_0_yy_xy_y_xz, g_z_x_0_0_yy_xy_y_yy, g_z_x_0_0_yy_xy_y_yz, g_z_x_0_0_yy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xy_y_xx[i] = -2.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_y_xy[i] = -2.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_y_xz[i] = -2.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_y_yy[i] = -2.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_y_yz[i] = -2.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_y_zz[i] = -2.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4242-4248)

    #pragma omp simd aligned(g_yyz_xxy_z_xx, g_yyz_xxy_z_xy, g_yyz_xxy_z_xz, g_yyz_xxy_z_yy, g_yyz_xxy_z_yz, g_yyz_xxy_z_zz, g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_z_x_0_0_yy_xy_z_xx, g_z_x_0_0_yy_xy_z_xy, g_z_x_0_0_yy_xy_z_xz, g_z_x_0_0_yy_xy_z_yy, g_z_x_0_0_yy_xy_z_yz, g_z_x_0_0_yy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xy_z_xx[i] = -2.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_z_xy[i] = -2.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_z_xz[i] = -2.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_z_yy[i] = -2.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_z_yz[i] = -2.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xy_z_zz[i] = -2.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4248-4254)

    #pragma omp simd aligned(g_yyz_xxz_x_xx, g_yyz_xxz_x_xy, g_yyz_xxz_x_xz, g_yyz_xxz_x_yy, g_yyz_xxz_x_yz, g_yyz_xxz_x_zz, g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_z_x_0_0_yy_xz_x_xx, g_z_x_0_0_yy_xz_x_xy, g_z_x_0_0_yy_xz_x_xz, g_z_x_0_0_yy_xz_x_yy, g_z_x_0_0_yy_xz_x_yz, g_z_x_0_0_yy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xz_x_xx[i] = -2.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_x_xy[i] = -2.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_x_xz[i] = -2.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_x_yy[i] = -2.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_x_yz[i] = -2.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_x_zz[i] = -2.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4254-4260)

    #pragma omp simd aligned(g_yyz_xxz_y_xx, g_yyz_xxz_y_xy, g_yyz_xxz_y_xz, g_yyz_xxz_y_yy, g_yyz_xxz_y_yz, g_yyz_xxz_y_zz, g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_z_x_0_0_yy_xz_y_xx, g_z_x_0_0_yy_xz_y_xy, g_z_x_0_0_yy_xz_y_xz, g_z_x_0_0_yy_xz_y_yy, g_z_x_0_0_yy_xz_y_yz, g_z_x_0_0_yy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xz_y_xx[i] = -2.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_y_xy[i] = -2.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_y_xz[i] = -2.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_y_yy[i] = -2.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_y_yz[i] = -2.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_y_zz[i] = -2.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4260-4266)

    #pragma omp simd aligned(g_yyz_xxz_z_xx, g_yyz_xxz_z_xy, g_yyz_xxz_z_xz, g_yyz_xxz_z_yy, g_yyz_xxz_z_yz, g_yyz_xxz_z_zz, g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_z_x_0_0_yy_xz_z_xx, g_z_x_0_0_yy_xz_z_xy, g_z_x_0_0_yy_xz_z_xz, g_z_x_0_0_yy_xz_z_yy, g_z_x_0_0_yy_xz_z_yz, g_z_x_0_0_yy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_xz_z_xx[i] = -2.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_z_xy[i] = -2.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_z_xz[i] = -2.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_z_yy[i] = -2.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_z_yz[i] = -2.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_xz_z_zz[i] = -2.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4266-4272)

    #pragma omp simd aligned(g_yyz_xyy_x_xx, g_yyz_xyy_x_xy, g_yyz_xyy_x_xz, g_yyz_xyy_x_yy, g_yyz_xyy_x_yz, g_yyz_xyy_x_zz, g_z_x_0_0_yy_yy_x_xx, g_z_x_0_0_yy_yy_x_xy, g_z_x_0_0_yy_yy_x_xz, g_z_x_0_0_yy_yy_x_yy, g_z_x_0_0_yy_yy_x_yz, g_z_x_0_0_yy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yy_x_xx[i] = 4.0 * g_yyz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_x_xy[i] = 4.0 * g_yyz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_x_xz[i] = 4.0 * g_yyz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_x_yy[i] = 4.0 * g_yyz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_x_yz[i] = 4.0 * g_yyz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_x_zz[i] = 4.0 * g_yyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4272-4278)

    #pragma omp simd aligned(g_yyz_xyy_y_xx, g_yyz_xyy_y_xy, g_yyz_xyy_y_xz, g_yyz_xyy_y_yy, g_yyz_xyy_y_yz, g_yyz_xyy_y_zz, g_z_x_0_0_yy_yy_y_xx, g_z_x_0_0_yy_yy_y_xy, g_z_x_0_0_yy_yy_y_xz, g_z_x_0_0_yy_yy_y_yy, g_z_x_0_0_yy_yy_y_yz, g_z_x_0_0_yy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yy_y_xx[i] = 4.0 * g_yyz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_y_xy[i] = 4.0 * g_yyz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_y_xz[i] = 4.0 * g_yyz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_y_yy[i] = 4.0 * g_yyz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_y_yz[i] = 4.0 * g_yyz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_y_zz[i] = 4.0 * g_yyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4278-4284)

    #pragma omp simd aligned(g_yyz_xyy_z_xx, g_yyz_xyy_z_xy, g_yyz_xyy_z_xz, g_yyz_xyy_z_yy, g_yyz_xyy_z_yz, g_yyz_xyy_z_zz, g_z_x_0_0_yy_yy_z_xx, g_z_x_0_0_yy_yy_z_xy, g_z_x_0_0_yy_yy_z_xz, g_z_x_0_0_yy_yy_z_yy, g_z_x_0_0_yy_yy_z_yz, g_z_x_0_0_yy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yy_z_xx[i] = 4.0 * g_yyz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_z_xy[i] = 4.0 * g_yyz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_z_xz[i] = 4.0 * g_yyz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_z_yy[i] = 4.0 * g_yyz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_z_yz[i] = 4.0 * g_yyz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yy_z_zz[i] = 4.0 * g_yyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4284-4290)

    #pragma omp simd aligned(g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_x_0_0_yy_yz_x_xx, g_z_x_0_0_yy_yz_x_xy, g_z_x_0_0_yy_yz_x_xz, g_z_x_0_0_yy_yz_x_yy, g_z_x_0_0_yy_yz_x_yz, g_z_x_0_0_yy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yz_x_xx[i] = 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_x_xy[i] = 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_x_xz[i] = 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_x_yy[i] = 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_x_yz[i] = 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_x_zz[i] = 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4290-4296)

    #pragma omp simd aligned(g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_x_0_0_yy_yz_y_xx, g_z_x_0_0_yy_yz_y_xy, g_z_x_0_0_yy_yz_y_xz, g_z_x_0_0_yy_yz_y_yy, g_z_x_0_0_yy_yz_y_yz, g_z_x_0_0_yy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yz_y_xx[i] = 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_y_xy[i] = 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_y_xz[i] = 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_y_yy[i] = 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_y_yz[i] = 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_y_zz[i] = 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4296-4302)

    #pragma omp simd aligned(g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_x_0_0_yy_yz_z_xx, g_z_x_0_0_yy_yz_z_xy, g_z_x_0_0_yy_yz_z_xz, g_z_x_0_0_yy_yz_z_yy, g_z_x_0_0_yy_yz_z_yz, g_z_x_0_0_yy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_yz_z_xx[i] = 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_z_xy[i] = 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_z_xz[i] = 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_z_yy[i] = 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_z_yz[i] = 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_yz_z_zz[i] = 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4302-4308)

    #pragma omp simd aligned(g_yyz_xzz_x_xx, g_yyz_xzz_x_xy, g_yyz_xzz_x_xz, g_yyz_xzz_x_yy, g_yyz_xzz_x_yz, g_yyz_xzz_x_zz, g_z_x_0_0_yy_zz_x_xx, g_z_x_0_0_yy_zz_x_xy, g_z_x_0_0_yy_zz_x_xz, g_z_x_0_0_yy_zz_x_yy, g_z_x_0_0_yy_zz_x_yz, g_z_x_0_0_yy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_zz_x_xx[i] = 4.0 * g_yyz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_x_xy[i] = 4.0 * g_yyz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_x_xz[i] = 4.0 * g_yyz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_x_yy[i] = 4.0 * g_yyz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_x_yz[i] = 4.0 * g_yyz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_x_zz[i] = 4.0 * g_yyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4308-4314)

    #pragma omp simd aligned(g_yyz_xzz_y_xx, g_yyz_xzz_y_xy, g_yyz_xzz_y_xz, g_yyz_xzz_y_yy, g_yyz_xzz_y_yz, g_yyz_xzz_y_zz, g_z_x_0_0_yy_zz_y_xx, g_z_x_0_0_yy_zz_y_xy, g_z_x_0_0_yy_zz_y_xz, g_z_x_0_0_yy_zz_y_yy, g_z_x_0_0_yy_zz_y_yz, g_z_x_0_0_yy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_zz_y_xx[i] = 4.0 * g_yyz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_y_xy[i] = 4.0 * g_yyz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_y_xz[i] = 4.0 * g_yyz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_y_yy[i] = 4.0 * g_yyz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_y_yz[i] = 4.0 * g_yyz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_y_zz[i] = 4.0 * g_yyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4314-4320)

    #pragma omp simd aligned(g_yyz_xzz_z_xx, g_yyz_xzz_z_xy, g_yyz_xzz_z_xz, g_yyz_xzz_z_yy, g_yyz_xzz_z_yz, g_yyz_xzz_z_zz, g_z_x_0_0_yy_zz_z_xx, g_z_x_0_0_yy_zz_z_xy, g_z_x_0_0_yy_zz_z_xz, g_z_x_0_0_yy_zz_z_yy, g_z_x_0_0_yy_zz_z_yz, g_z_x_0_0_yy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yy_zz_z_xx[i] = 4.0 * g_yyz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_z_xy[i] = 4.0 * g_yyz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_z_xz[i] = 4.0 * g_yyz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_z_yy[i] = 4.0 * g_yyz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_z_yz[i] = 4.0 * g_yyz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yy_zz_z_zz[i] = 4.0 * g_yyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4320-4326)

    #pragma omp simd aligned(g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xxx_x_xx, g_y_xxx_x_xy, g_y_xxx_x_xz, g_y_xxx_x_yy, g_y_xxx_x_yz, g_y_xxx_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xxx_x_xx, g_yzz_xxx_x_xy, g_yzz_xxx_x_xz, g_yzz_xxx_x_yy, g_yzz_xxx_x_yz, g_yzz_xxx_x_zz, g_z_x_0_0_yz_xx_x_xx, g_z_x_0_0_yz_xx_x_xy, g_z_x_0_0_yz_xx_x_xz, g_z_x_0_0_yz_xx_x_yy, g_z_x_0_0_yz_xx_x_yz, g_z_x_0_0_yz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xx_x_xx[i] = 2.0 * g_y_x_x_xx[i] - 2.0 * g_y_xxx_x_xx[i] * b_exp - 4.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_x_xy[i] = 2.0 * g_y_x_x_xy[i] - 2.0 * g_y_xxx_x_xy[i] * b_exp - 4.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_x_xz[i] = 2.0 * g_y_x_x_xz[i] - 2.0 * g_y_xxx_x_xz[i] * b_exp - 4.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_x_yy[i] = 2.0 * g_y_x_x_yy[i] - 2.0 * g_y_xxx_x_yy[i] * b_exp - 4.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_x_yz[i] = 2.0 * g_y_x_x_yz[i] - 2.0 * g_y_xxx_x_yz[i] * b_exp - 4.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_x_zz[i] = 2.0 * g_y_x_x_zz[i] - 2.0 * g_y_xxx_x_zz[i] * b_exp - 4.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4326-4332)

    #pragma omp simd aligned(g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xxx_y_xx, g_y_xxx_y_xy, g_y_xxx_y_xz, g_y_xxx_y_yy, g_y_xxx_y_yz, g_y_xxx_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xxx_y_xx, g_yzz_xxx_y_xy, g_yzz_xxx_y_xz, g_yzz_xxx_y_yy, g_yzz_xxx_y_yz, g_yzz_xxx_y_zz, g_z_x_0_0_yz_xx_y_xx, g_z_x_0_0_yz_xx_y_xy, g_z_x_0_0_yz_xx_y_xz, g_z_x_0_0_yz_xx_y_yy, g_z_x_0_0_yz_xx_y_yz, g_z_x_0_0_yz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xx_y_xx[i] = 2.0 * g_y_x_y_xx[i] - 2.0 * g_y_xxx_y_xx[i] * b_exp - 4.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_y_xy[i] = 2.0 * g_y_x_y_xy[i] - 2.0 * g_y_xxx_y_xy[i] * b_exp - 4.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_y_xz[i] = 2.0 * g_y_x_y_xz[i] - 2.0 * g_y_xxx_y_xz[i] * b_exp - 4.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_y_yy[i] = 2.0 * g_y_x_y_yy[i] - 2.0 * g_y_xxx_y_yy[i] * b_exp - 4.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_y_yz[i] = 2.0 * g_y_x_y_yz[i] - 2.0 * g_y_xxx_y_yz[i] * b_exp - 4.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_y_zz[i] = 2.0 * g_y_x_y_zz[i] - 2.0 * g_y_xxx_y_zz[i] * b_exp - 4.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4332-4338)

    #pragma omp simd aligned(g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xxx_z_xx, g_y_xxx_z_xy, g_y_xxx_z_xz, g_y_xxx_z_yy, g_y_xxx_z_yz, g_y_xxx_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xxx_z_xx, g_yzz_xxx_z_xy, g_yzz_xxx_z_xz, g_yzz_xxx_z_yy, g_yzz_xxx_z_yz, g_yzz_xxx_z_zz, g_z_x_0_0_yz_xx_z_xx, g_z_x_0_0_yz_xx_z_xy, g_z_x_0_0_yz_xx_z_xz, g_z_x_0_0_yz_xx_z_yy, g_z_x_0_0_yz_xx_z_yz, g_z_x_0_0_yz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xx_z_xx[i] = 2.0 * g_y_x_z_xx[i] - 2.0 * g_y_xxx_z_xx[i] * b_exp - 4.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_z_xy[i] = 2.0 * g_y_x_z_xy[i] - 2.0 * g_y_xxx_z_xy[i] * b_exp - 4.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_z_xz[i] = 2.0 * g_y_x_z_xz[i] - 2.0 * g_y_xxx_z_xz[i] * b_exp - 4.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_z_yy[i] = 2.0 * g_y_x_z_yy[i] - 2.0 * g_y_xxx_z_yy[i] * b_exp - 4.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_z_yz[i] = 2.0 * g_y_x_z_yz[i] - 2.0 * g_y_xxx_z_yz[i] * b_exp - 4.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xx_z_zz[i] = 2.0 * g_y_x_z_zz[i] - 2.0 * g_y_xxx_z_zz[i] * b_exp - 4.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4338-4344)

    #pragma omp simd aligned(g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz, g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_yzz_xxy_x_xx, g_yzz_xxy_x_xy, g_yzz_xxy_x_xz, g_yzz_xxy_x_yy, g_yzz_xxy_x_yz, g_yzz_xxy_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz, g_z_x_0_0_yz_xy_x_xx, g_z_x_0_0_yz_xy_x_xy, g_z_x_0_0_yz_xy_x_xz, g_z_x_0_0_yz_xy_x_yy, g_z_x_0_0_yz_xy_x_yz, g_z_x_0_0_yz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xy_x_xx[i] = g_y_y_x_xx[i] - 2.0 * g_y_xxy_x_xx[i] * b_exp - 2.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_x_xy[i] = g_y_y_x_xy[i] - 2.0 * g_y_xxy_x_xy[i] * b_exp - 2.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_x_xz[i] = g_y_y_x_xz[i] - 2.0 * g_y_xxy_x_xz[i] * b_exp - 2.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_x_yy[i] = g_y_y_x_yy[i] - 2.0 * g_y_xxy_x_yy[i] * b_exp - 2.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_x_yz[i] = g_y_y_x_yz[i] - 2.0 * g_y_xxy_x_yz[i] * b_exp - 2.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_x_zz[i] = g_y_y_x_zz[i] - 2.0 * g_y_xxy_x_zz[i] * b_exp - 2.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4344-4350)

    #pragma omp simd aligned(g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz, g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_yzz_xxy_y_xx, g_yzz_xxy_y_xy, g_yzz_xxy_y_xz, g_yzz_xxy_y_yy, g_yzz_xxy_y_yz, g_yzz_xxy_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz, g_z_x_0_0_yz_xy_y_xx, g_z_x_0_0_yz_xy_y_xy, g_z_x_0_0_yz_xy_y_xz, g_z_x_0_0_yz_xy_y_yy, g_z_x_0_0_yz_xy_y_yz, g_z_x_0_0_yz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xy_y_xx[i] = g_y_y_y_xx[i] - 2.0 * g_y_xxy_y_xx[i] * b_exp - 2.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_y_xy[i] = g_y_y_y_xy[i] - 2.0 * g_y_xxy_y_xy[i] * b_exp - 2.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_y_xz[i] = g_y_y_y_xz[i] - 2.0 * g_y_xxy_y_xz[i] * b_exp - 2.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_y_yy[i] = g_y_y_y_yy[i] - 2.0 * g_y_xxy_y_yy[i] * b_exp - 2.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_y_yz[i] = g_y_y_y_yz[i] - 2.0 * g_y_xxy_y_yz[i] * b_exp - 2.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_y_zz[i] = g_y_y_y_zz[i] - 2.0 * g_y_xxy_y_zz[i] * b_exp - 2.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4350-4356)

    #pragma omp simd aligned(g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz, g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_yzz_xxy_z_xx, g_yzz_xxy_z_xy, g_yzz_xxy_z_xz, g_yzz_xxy_z_yy, g_yzz_xxy_z_yz, g_yzz_xxy_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz, g_z_x_0_0_yz_xy_z_xx, g_z_x_0_0_yz_xy_z_xy, g_z_x_0_0_yz_xy_z_xz, g_z_x_0_0_yz_xy_z_yy, g_z_x_0_0_yz_xy_z_yz, g_z_x_0_0_yz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xy_z_xx[i] = g_y_y_z_xx[i] - 2.0 * g_y_xxy_z_xx[i] * b_exp - 2.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_z_xy[i] = g_y_y_z_xy[i] - 2.0 * g_y_xxy_z_xy[i] * b_exp - 2.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_z_xz[i] = g_y_y_z_xz[i] - 2.0 * g_y_xxy_z_xz[i] * b_exp - 2.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_z_yy[i] = g_y_y_z_yy[i] - 2.0 * g_y_xxy_z_yy[i] * b_exp - 2.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_z_yz[i] = g_y_y_z_yz[i] - 2.0 * g_y_xxy_z_yz[i] * b_exp - 2.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xy_z_zz[i] = g_y_y_z_zz[i] - 2.0 * g_y_xxy_z_zz[i] * b_exp - 2.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4356-4362)

    #pragma omp simd aligned(g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_yzz_xxz_x_xx, g_yzz_xxz_x_xy, g_yzz_xxz_x_xz, g_yzz_xxz_x_yy, g_yzz_xxz_x_yz, g_yzz_xxz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz, g_z_x_0_0_yz_xz_x_xx, g_z_x_0_0_yz_xz_x_xy, g_z_x_0_0_yz_xz_x_xz, g_z_x_0_0_yz_xz_x_yy, g_z_x_0_0_yz_xz_x_yz, g_z_x_0_0_yz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xz_x_xx[i] = g_y_z_x_xx[i] - 2.0 * g_y_xxz_x_xx[i] * b_exp - 2.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_x_xy[i] = g_y_z_x_xy[i] - 2.0 * g_y_xxz_x_xy[i] * b_exp - 2.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_x_xz[i] = g_y_z_x_xz[i] - 2.0 * g_y_xxz_x_xz[i] * b_exp - 2.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_x_yy[i] = g_y_z_x_yy[i] - 2.0 * g_y_xxz_x_yy[i] * b_exp - 2.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_x_yz[i] = g_y_z_x_yz[i] - 2.0 * g_y_xxz_x_yz[i] * b_exp - 2.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_x_zz[i] = g_y_z_x_zz[i] - 2.0 * g_y_xxz_x_zz[i] * b_exp - 2.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4362-4368)

    #pragma omp simd aligned(g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_yzz_xxz_y_xx, g_yzz_xxz_y_xy, g_yzz_xxz_y_xz, g_yzz_xxz_y_yy, g_yzz_xxz_y_yz, g_yzz_xxz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz, g_z_x_0_0_yz_xz_y_xx, g_z_x_0_0_yz_xz_y_xy, g_z_x_0_0_yz_xz_y_xz, g_z_x_0_0_yz_xz_y_yy, g_z_x_0_0_yz_xz_y_yz, g_z_x_0_0_yz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xz_y_xx[i] = g_y_z_y_xx[i] - 2.0 * g_y_xxz_y_xx[i] * b_exp - 2.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_y_xy[i] = g_y_z_y_xy[i] - 2.0 * g_y_xxz_y_xy[i] * b_exp - 2.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_y_xz[i] = g_y_z_y_xz[i] - 2.0 * g_y_xxz_y_xz[i] * b_exp - 2.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_y_yy[i] = g_y_z_y_yy[i] - 2.0 * g_y_xxz_y_yy[i] * b_exp - 2.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_y_yz[i] = g_y_z_y_yz[i] - 2.0 * g_y_xxz_y_yz[i] * b_exp - 2.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_y_zz[i] = g_y_z_y_zz[i] - 2.0 * g_y_xxz_y_zz[i] * b_exp - 2.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4368-4374)

    #pragma omp simd aligned(g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_yzz_xxz_z_xx, g_yzz_xxz_z_xy, g_yzz_xxz_z_xz, g_yzz_xxz_z_yy, g_yzz_xxz_z_yz, g_yzz_xxz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz, g_z_x_0_0_yz_xz_z_xx, g_z_x_0_0_yz_xz_z_xy, g_z_x_0_0_yz_xz_z_xz, g_z_x_0_0_yz_xz_z_yy, g_z_x_0_0_yz_xz_z_yz, g_z_x_0_0_yz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_xz_z_xx[i] = g_y_z_z_xx[i] - 2.0 * g_y_xxz_z_xx[i] * b_exp - 2.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_z_xy[i] = g_y_z_z_xy[i] - 2.0 * g_y_xxz_z_xy[i] * b_exp - 2.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_z_xz[i] = g_y_z_z_xz[i] - 2.0 * g_y_xxz_z_xz[i] * b_exp - 2.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_z_yy[i] = g_y_z_z_yy[i] - 2.0 * g_y_xxz_z_yy[i] * b_exp - 2.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_z_yz[i] = g_y_z_z_yz[i] - 2.0 * g_y_xxz_z_yz[i] * b_exp - 2.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_xz_z_zz[i] = g_y_z_z_zz[i] - 2.0 * g_y_xxz_z_zz[i] * b_exp - 2.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4374-4380)

    #pragma omp simd aligned(g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz, g_yzz_xyy_x_xx, g_yzz_xyy_x_xy, g_yzz_xyy_x_xz, g_yzz_xyy_x_yy, g_yzz_xyy_x_yz, g_yzz_xyy_x_zz, g_z_x_0_0_yz_yy_x_xx, g_z_x_0_0_yz_yy_x_xy, g_z_x_0_0_yz_yy_x_xz, g_z_x_0_0_yz_yy_x_yy, g_z_x_0_0_yz_yy_x_yz, g_z_x_0_0_yz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yy_x_xx[i] = -2.0 * g_y_xyy_x_xx[i] * b_exp + 4.0 * g_yzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_x_xy[i] = -2.0 * g_y_xyy_x_xy[i] * b_exp + 4.0 * g_yzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_x_xz[i] = -2.0 * g_y_xyy_x_xz[i] * b_exp + 4.0 * g_yzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_x_yy[i] = -2.0 * g_y_xyy_x_yy[i] * b_exp + 4.0 * g_yzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_x_yz[i] = -2.0 * g_y_xyy_x_yz[i] * b_exp + 4.0 * g_yzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_x_zz[i] = -2.0 * g_y_xyy_x_zz[i] * b_exp + 4.0 * g_yzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4380-4386)

    #pragma omp simd aligned(g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz, g_yzz_xyy_y_xx, g_yzz_xyy_y_xy, g_yzz_xyy_y_xz, g_yzz_xyy_y_yy, g_yzz_xyy_y_yz, g_yzz_xyy_y_zz, g_z_x_0_0_yz_yy_y_xx, g_z_x_0_0_yz_yy_y_xy, g_z_x_0_0_yz_yy_y_xz, g_z_x_0_0_yz_yy_y_yy, g_z_x_0_0_yz_yy_y_yz, g_z_x_0_0_yz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yy_y_xx[i] = -2.0 * g_y_xyy_y_xx[i] * b_exp + 4.0 * g_yzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_y_xy[i] = -2.0 * g_y_xyy_y_xy[i] * b_exp + 4.0 * g_yzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_y_xz[i] = -2.0 * g_y_xyy_y_xz[i] * b_exp + 4.0 * g_yzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_y_yy[i] = -2.0 * g_y_xyy_y_yy[i] * b_exp + 4.0 * g_yzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_y_yz[i] = -2.0 * g_y_xyy_y_yz[i] * b_exp + 4.0 * g_yzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_y_zz[i] = -2.0 * g_y_xyy_y_zz[i] * b_exp + 4.0 * g_yzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4386-4392)

    #pragma omp simd aligned(g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz, g_yzz_xyy_z_xx, g_yzz_xyy_z_xy, g_yzz_xyy_z_xz, g_yzz_xyy_z_yy, g_yzz_xyy_z_yz, g_yzz_xyy_z_zz, g_z_x_0_0_yz_yy_z_xx, g_z_x_0_0_yz_yy_z_xy, g_z_x_0_0_yz_yy_z_xz, g_z_x_0_0_yz_yy_z_yy, g_z_x_0_0_yz_yy_z_yz, g_z_x_0_0_yz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yy_z_xx[i] = -2.0 * g_y_xyy_z_xx[i] * b_exp + 4.0 * g_yzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_z_xy[i] = -2.0 * g_y_xyy_z_xy[i] * b_exp + 4.0 * g_yzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_z_xz[i] = -2.0 * g_y_xyy_z_xz[i] * b_exp + 4.0 * g_yzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_z_yy[i] = -2.0 * g_y_xyy_z_yy[i] * b_exp + 4.0 * g_yzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_z_yz[i] = -2.0 * g_y_xyy_z_yz[i] * b_exp + 4.0 * g_yzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yy_z_zz[i] = -2.0 * g_y_xyy_z_zz[i] * b_exp + 4.0 * g_yzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4392-4398)

    #pragma omp simd aligned(g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz, g_z_x_0_0_yz_yz_x_xx, g_z_x_0_0_yz_yz_x_xy, g_z_x_0_0_yz_yz_x_xz, g_z_x_0_0_yz_yz_x_yy, g_z_x_0_0_yz_yz_x_yz, g_z_x_0_0_yz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yz_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4398-4404)

    #pragma omp simd aligned(g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz, g_z_x_0_0_yz_yz_y_xx, g_z_x_0_0_yz_yz_y_xy, g_z_x_0_0_yz_yz_y_xz, g_z_x_0_0_yz_yz_y_yy, g_z_x_0_0_yz_yz_y_yz, g_z_x_0_0_yz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yz_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4404-4410)

    #pragma omp simd aligned(g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz, g_z_x_0_0_yz_yz_z_xx, g_z_x_0_0_yz_yz_z_xy, g_z_x_0_0_yz_yz_z_xz, g_z_x_0_0_yz_yz_z_yy, g_z_x_0_0_yz_yz_z_yz, g_z_x_0_0_yz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_yz_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_yz_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4410-4416)

    #pragma omp simd aligned(g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz, g_yzz_xzz_x_xx, g_yzz_xzz_x_xy, g_yzz_xzz_x_xz, g_yzz_xzz_x_yy, g_yzz_xzz_x_yz, g_yzz_xzz_x_zz, g_z_x_0_0_yz_zz_x_xx, g_z_x_0_0_yz_zz_x_xy, g_z_x_0_0_yz_zz_x_xz, g_z_x_0_0_yz_zz_x_yy, g_z_x_0_0_yz_zz_x_yz, g_z_x_0_0_yz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_zz_x_xx[i] = -2.0 * g_y_xzz_x_xx[i] * b_exp + 4.0 * g_yzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_x_xy[i] = -2.0 * g_y_xzz_x_xy[i] * b_exp + 4.0 * g_yzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_x_xz[i] = -2.0 * g_y_xzz_x_xz[i] * b_exp + 4.0 * g_yzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_x_yy[i] = -2.0 * g_y_xzz_x_yy[i] * b_exp + 4.0 * g_yzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_x_yz[i] = -2.0 * g_y_xzz_x_yz[i] * b_exp + 4.0 * g_yzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_x_zz[i] = -2.0 * g_y_xzz_x_zz[i] * b_exp + 4.0 * g_yzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4416-4422)

    #pragma omp simd aligned(g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz, g_yzz_xzz_y_xx, g_yzz_xzz_y_xy, g_yzz_xzz_y_xz, g_yzz_xzz_y_yy, g_yzz_xzz_y_yz, g_yzz_xzz_y_zz, g_z_x_0_0_yz_zz_y_xx, g_z_x_0_0_yz_zz_y_xy, g_z_x_0_0_yz_zz_y_xz, g_z_x_0_0_yz_zz_y_yy, g_z_x_0_0_yz_zz_y_yz, g_z_x_0_0_yz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_zz_y_xx[i] = -2.0 * g_y_xzz_y_xx[i] * b_exp + 4.0 * g_yzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_y_xy[i] = -2.0 * g_y_xzz_y_xy[i] * b_exp + 4.0 * g_yzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_y_xz[i] = -2.0 * g_y_xzz_y_xz[i] * b_exp + 4.0 * g_yzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_y_yy[i] = -2.0 * g_y_xzz_y_yy[i] * b_exp + 4.0 * g_yzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_y_yz[i] = -2.0 * g_y_xzz_y_yz[i] * b_exp + 4.0 * g_yzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_y_zz[i] = -2.0 * g_y_xzz_y_zz[i] * b_exp + 4.0 * g_yzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4422-4428)

    #pragma omp simd aligned(g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz, g_yzz_xzz_z_xx, g_yzz_xzz_z_xy, g_yzz_xzz_z_xz, g_yzz_xzz_z_yy, g_yzz_xzz_z_yz, g_yzz_xzz_z_zz, g_z_x_0_0_yz_zz_z_xx, g_z_x_0_0_yz_zz_z_xy, g_z_x_0_0_yz_zz_z_xz, g_z_x_0_0_yz_zz_z_yy, g_z_x_0_0_yz_zz_z_yz, g_z_x_0_0_yz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_yz_zz_z_xx[i] = -2.0 * g_y_xzz_z_xx[i] * b_exp + 4.0 * g_yzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_z_xy[i] = -2.0 * g_y_xzz_z_xy[i] * b_exp + 4.0 * g_yzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_z_xz[i] = -2.0 * g_y_xzz_z_xz[i] * b_exp + 4.0 * g_yzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_z_yy[i] = -2.0 * g_y_xzz_z_yy[i] * b_exp + 4.0 * g_yzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_z_yz[i] = -2.0 * g_y_xzz_z_yz[i] * b_exp + 4.0 * g_yzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_yz_zz_z_zz[i] = -2.0 * g_y_xzz_z_zz[i] * b_exp + 4.0 * g_yzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4428-4434)

    #pragma omp simd aligned(g_z_x_0_0_zz_xx_x_xx, g_z_x_0_0_zz_xx_x_xy, g_z_x_0_0_zz_xx_x_xz, g_z_x_0_0_zz_xx_x_yy, g_z_x_0_0_zz_xx_x_yz, g_z_x_0_0_zz_xx_x_zz, g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xxx_x_xx, g_z_xxx_x_xy, g_z_xxx_x_xz, g_z_xxx_x_yy, g_z_xxx_x_yz, g_z_xxx_x_zz, g_zzz_x_x_xx, g_zzz_x_x_xy, g_zzz_x_x_xz, g_zzz_x_x_yy, g_zzz_x_x_yz, g_zzz_x_x_zz, g_zzz_xxx_x_xx, g_zzz_xxx_x_xy, g_zzz_xxx_x_xz, g_zzz_xxx_x_yy, g_zzz_xxx_x_yz, g_zzz_xxx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xx_x_xx[i] = 4.0 * g_z_x_x_xx[i] - 4.0 * g_z_xxx_x_xx[i] * b_exp - 4.0 * g_zzz_x_x_xx[i] * a_exp + 4.0 * g_zzz_xxx_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_x_xy[i] = 4.0 * g_z_x_x_xy[i] - 4.0 * g_z_xxx_x_xy[i] * b_exp - 4.0 * g_zzz_x_x_xy[i] * a_exp + 4.0 * g_zzz_xxx_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_x_xz[i] = 4.0 * g_z_x_x_xz[i] - 4.0 * g_z_xxx_x_xz[i] * b_exp - 4.0 * g_zzz_x_x_xz[i] * a_exp + 4.0 * g_zzz_xxx_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_x_yy[i] = 4.0 * g_z_x_x_yy[i] - 4.0 * g_z_xxx_x_yy[i] * b_exp - 4.0 * g_zzz_x_x_yy[i] * a_exp + 4.0 * g_zzz_xxx_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_x_yz[i] = 4.0 * g_z_x_x_yz[i] - 4.0 * g_z_xxx_x_yz[i] * b_exp - 4.0 * g_zzz_x_x_yz[i] * a_exp + 4.0 * g_zzz_xxx_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_x_zz[i] = 4.0 * g_z_x_x_zz[i] - 4.0 * g_z_xxx_x_zz[i] * b_exp - 4.0 * g_zzz_x_x_zz[i] * a_exp + 4.0 * g_zzz_xxx_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4434-4440)

    #pragma omp simd aligned(g_z_x_0_0_zz_xx_y_xx, g_z_x_0_0_zz_xx_y_xy, g_z_x_0_0_zz_xx_y_xz, g_z_x_0_0_zz_xx_y_yy, g_z_x_0_0_zz_xx_y_yz, g_z_x_0_0_zz_xx_y_zz, g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xxx_y_xx, g_z_xxx_y_xy, g_z_xxx_y_xz, g_z_xxx_y_yy, g_z_xxx_y_yz, g_z_xxx_y_zz, g_zzz_x_y_xx, g_zzz_x_y_xy, g_zzz_x_y_xz, g_zzz_x_y_yy, g_zzz_x_y_yz, g_zzz_x_y_zz, g_zzz_xxx_y_xx, g_zzz_xxx_y_xy, g_zzz_xxx_y_xz, g_zzz_xxx_y_yy, g_zzz_xxx_y_yz, g_zzz_xxx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xx_y_xx[i] = 4.0 * g_z_x_y_xx[i] - 4.0 * g_z_xxx_y_xx[i] * b_exp - 4.0 * g_zzz_x_y_xx[i] * a_exp + 4.0 * g_zzz_xxx_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_y_xy[i] = 4.0 * g_z_x_y_xy[i] - 4.0 * g_z_xxx_y_xy[i] * b_exp - 4.0 * g_zzz_x_y_xy[i] * a_exp + 4.0 * g_zzz_xxx_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_y_xz[i] = 4.0 * g_z_x_y_xz[i] - 4.0 * g_z_xxx_y_xz[i] * b_exp - 4.0 * g_zzz_x_y_xz[i] * a_exp + 4.0 * g_zzz_xxx_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_y_yy[i] = 4.0 * g_z_x_y_yy[i] - 4.0 * g_z_xxx_y_yy[i] * b_exp - 4.0 * g_zzz_x_y_yy[i] * a_exp + 4.0 * g_zzz_xxx_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_y_yz[i] = 4.0 * g_z_x_y_yz[i] - 4.0 * g_z_xxx_y_yz[i] * b_exp - 4.0 * g_zzz_x_y_yz[i] * a_exp + 4.0 * g_zzz_xxx_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_y_zz[i] = 4.0 * g_z_x_y_zz[i] - 4.0 * g_z_xxx_y_zz[i] * b_exp - 4.0 * g_zzz_x_y_zz[i] * a_exp + 4.0 * g_zzz_xxx_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4440-4446)

    #pragma omp simd aligned(g_z_x_0_0_zz_xx_z_xx, g_z_x_0_0_zz_xx_z_xy, g_z_x_0_0_zz_xx_z_xz, g_z_x_0_0_zz_xx_z_yy, g_z_x_0_0_zz_xx_z_yz, g_z_x_0_0_zz_xx_z_zz, g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xxx_z_xx, g_z_xxx_z_xy, g_z_xxx_z_xz, g_z_xxx_z_yy, g_z_xxx_z_yz, g_z_xxx_z_zz, g_zzz_x_z_xx, g_zzz_x_z_xy, g_zzz_x_z_xz, g_zzz_x_z_yy, g_zzz_x_z_yz, g_zzz_x_z_zz, g_zzz_xxx_z_xx, g_zzz_xxx_z_xy, g_zzz_xxx_z_xz, g_zzz_xxx_z_yy, g_zzz_xxx_z_yz, g_zzz_xxx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xx_z_xx[i] = 4.0 * g_z_x_z_xx[i] - 4.0 * g_z_xxx_z_xx[i] * b_exp - 4.0 * g_zzz_x_z_xx[i] * a_exp + 4.0 * g_zzz_xxx_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_z_xy[i] = 4.0 * g_z_x_z_xy[i] - 4.0 * g_z_xxx_z_xy[i] * b_exp - 4.0 * g_zzz_x_z_xy[i] * a_exp + 4.0 * g_zzz_xxx_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_z_xz[i] = 4.0 * g_z_x_z_xz[i] - 4.0 * g_z_xxx_z_xz[i] * b_exp - 4.0 * g_zzz_x_z_xz[i] * a_exp + 4.0 * g_zzz_xxx_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_z_yy[i] = 4.0 * g_z_x_z_yy[i] - 4.0 * g_z_xxx_z_yy[i] * b_exp - 4.0 * g_zzz_x_z_yy[i] * a_exp + 4.0 * g_zzz_xxx_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_z_yz[i] = 4.0 * g_z_x_z_yz[i] - 4.0 * g_z_xxx_z_yz[i] * b_exp - 4.0 * g_zzz_x_z_yz[i] * a_exp + 4.0 * g_zzz_xxx_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xx_z_zz[i] = 4.0 * g_z_x_z_zz[i] - 4.0 * g_z_xxx_z_zz[i] * b_exp - 4.0 * g_zzz_x_z_zz[i] * a_exp + 4.0 * g_zzz_xxx_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4446-4452)

    #pragma omp simd aligned(g_z_x_0_0_zz_xy_x_xx, g_z_x_0_0_zz_xy_x_xy, g_z_x_0_0_zz_xy_x_xz, g_z_x_0_0_zz_xy_x_yy, g_z_x_0_0_zz_xy_x_yz, g_z_x_0_0_zz_xy_x_zz, g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_zzz_xxy_x_xx, g_zzz_xxy_x_xy, g_zzz_xxy_x_xz, g_zzz_xxy_x_yy, g_zzz_xxy_x_yz, g_zzz_xxy_x_zz, g_zzz_y_x_xx, g_zzz_y_x_xy, g_zzz_y_x_xz, g_zzz_y_x_yy, g_zzz_y_x_yz, g_zzz_y_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xy_x_xx[i] = 2.0 * g_z_y_x_xx[i] - 4.0 * g_z_xxy_x_xx[i] * b_exp - 2.0 * g_zzz_y_x_xx[i] * a_exp + 4.0 * g_zzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_x_xy[i] = 2.0 * g_z_y_x_xy[i] - 4.0 * g_z_xxy_x_xy[i] * b_exp - 2.0 * g_zzz_y_x_xy[i] * a_exp + 4.0 * g_zzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_x_xz[i] = 2.0 * g_z_y_x_xz[i] - 4.0 * g_z_xxy_x_xz[i] * b_exp - 2.0 * g_zzz_y_x_xz[i] * a_exp + 4.0 * g_zzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_x_yy[i] = 2.0 * g_z_y_x_yy[i] - 4.0 * g_z_xxy_x_yy[i] * b_exp - 2.0 * g_zzz_y_x_yy[i] * a_exp + 4.0 * g_zzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_x_yz[i] = 2.0 * g_z_y_x_yz[i] - 4.0 * g_z_xxy_x_yz[i] * b_exp - 2.0 * g_zzz_y_x_yz[i] * a_exp + 4.0 * g_zzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_x_zz[i] = 2.0 * g_z_y_x_zz[i] - 4.0 * g_z_xxy_x_zz[i] * b_exp - 2.0 * g_zzz_y_x_zz[i] * a_exp + 4.0 * g_zzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4452-4458)

    #pragma omp simd aligned(g_z_x_0_0_zz_xy_y_xx, g_z_x_0_0_zz_xy_y_xy, g_z_x_0_0_zz_xy_y_xz, g_z_x_0_0_zz_xy_y_yy, g_z_x_0_0_zz_xy_y_yz, g_z_x_0_0_zz_xy_y_zz, g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_zzz_xxy_y_xx, g_zzz_xxy_y_xy, g_zzz_xxy_y_xz, g_zzz_xxy_y_yy, g_zzz_xxy_y_yz, g_zzz_xxy_y_zz, g_zzz_y_y_xx, g_zzz_y_y_xy, g_zzz_y_y_xz, g_zzz_y_y_yy, g_zzz_y_y_yz, g_zzz_y_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xy_y_xx[i] = 2.0 * g_z_y_y_xx[i] - 4.0 * g_z_xxy_y_xx[i] * b_exp - 2.0 * g_zzz_y_y_xx[i] * a_exp + 4.0 * g_zzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_y_xy[i] = 2.0 * g_z_y_y_xy[i] - 4.0 * g_z_xxy_y_xy[i] * b_exp - 2.0 * g_zzz_y_y_xy[i] * a_exp + 4.0 * g_zzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_y_xz[i] = 2.0 * g_z_y_y_xz[i] - 4.0 * g_z_xxy_y_xz[i] * b_exp - 2.0 * g_zzz_y_y_xz[i] * a_exp + 4.0 * g_zzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_y_yy[i] = 2.0 * g_z_y_y_yy[i] - 4.0 * g_z_xxy_y_yy[i] * b_exp - 2.0 * g_zzz_y_y_yy[i] * a_exp + 4.0 * g_zzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_y_yz[i] = 2.0 * g_z_y_y_yz[i] - 4.0 * g_z_xxy_y_yz[i] * b_exp - 2.0 * g_zzz_y_y_yz[i] * a_exp + 4.0 * g_zzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_y_zz[i] = 2.0 * g_z_y_y_zz[i] - 4.0 * g_z_xxy_y_zz[i] * b_exp - 2.0 * g_zzz_y_y_zz[i] * a_exp + 4.0 * g_zzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4458-4464)

    #pragma omp simd aligned(g_z_x_0_0_zz_xy_z_xx, g_z_x_0_0_zz_xy_z_xy, g_z_x_0_0_zz_xy_z_xz, g_z_x_0_0_zz_xy_z_yy, g_z_x_0_0_zz_xy_z_yz, g_z_x_0_0_zz_xy_z_zz, g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_zzz_xxy_z_xx, g_zzz_xxy_z_xy, g_zzz_xxy_z_xz, g_zzz_xxy_z_yy, g_zzz_xxy_z_yz, g_zzz_xxy_z_zz, g_zzz_y_z_xx, g_zzz_y_z_xy, g_zzz_y_z_xz, g_zzz_y_z_yy, g_zzz_y_z_yz, g_zzz_y_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xy_z_xx[i] = 2.0 * g_z_y_z_xx[i] - 4.0 * g_z_xxy_z_xx[i] * b_exp - 2.0 * g_zzz_y_z_xx[i] * a_exp + 4.0 * g_zzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_z_xy[i] = 2.0 * g_z_y_z_xy[i] - 4.0 * g_z_xxy_z_xy[i] * b_exp - 2.0 * g_zzz_y_z_xy[i] * a_exp + 4.0 * g_zzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_z_xz[i] = 2.0 * g_z_y_z_xz[i] - 4.0 * g_z_xxy_z_xz[i] * b_exp - 2.0 * g_zzz_y_z_xz[i] * a_exp + 4.0 * g_zzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_z_yy[i] = 2.0 * g_z_y_z_yy[i] - 4.0 * g_z_xxy_z_yy[i] * b_exp - 2.0 * g_zzz_y_z_yy[i] * a_exp + 4.0 * g_zzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_z_yz[i] = 2.0 * g_z_y_z_yz[i] - 4.0 * g_z_xxy_z_yz[i] * b_exp - 2.0 * g_zzz_y_z_yz[i] * a_exp + 4.0 * g_zzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xy_z_zz[i] = 2.0 * g_z_y_z_zz[i] - 4.0 * g_z_xxy_z_zz[i] * b_exp - 2.0 * g_zzz_y_z_zz[i] * a_exp + 4.0 * g_zzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4464-4470)

    #pragma omp simd aligned(g_z_x_0_0_zz_xz_x_xx, g_z_x_0_0_zz_xz_x_xy, g_z_x_0_0_zz_xz_x_xz, g_z_x_0_0_zz_xz_x_yy, g_z_x_0_0_zz_xz_x_yz, g_z_x_0_0_zz_xz_x_zz, g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz, g_zzz_xxz_x_xx, g_zzz_xxz_x_xy, g_zzz_xxz_x_xz, g_zzz_xxz_x_yy, g_zzz_xxz_x_yz, g_zzz_xxz_x_zz, g_zzz_z_x_xx, g_zzz_z_x_xy, g_zzz_z_x_xz, g_zzz_z_x_yy, g_zzz_z_x_yz, g_zzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xz_x_xx[i] = 2.0 * g_z_z_x_xx[i] - 4.0 * g_z_xxz_x_xx[i] * b_exp - 2.0 * g_zzz_z_x_xx[i] * a_exp + 4.0 * g_zzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_x_xy[i] = 2.0 * g_z_z_x_xy[i] - 4.0 * g_z_xxz_x_xy[i] * b_exp - 2.0 * g_zzz_z_x_xy[i] * a_exp + 4.0 * g_zzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_x_xz[i] = 2.0 * g_z_z_x_xz[i] - 4.0 * g_z_xxz_x_xz[i] * b_exp - 2.0 * g_zzz_z_x_xz[i] * a_exp + 4.0 * g_zzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_x_yy[i] = 2.0 * g_z_z_x_yy[i] - 4.0 * g_z_xxz_x_yy[i] * b_exp - 2.0 * g_zzz_z_x_yy[i] * a_exp + 4.0 * g_zzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_x_yz[i] = 2.0 * g_z_z_x_yz[i] - 4.0 * g_z_xxz_x_yz[i] * b_exp - 2.0 * g_zzz_z_x_yz[i] * a_exp + 4.0 * g_zzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_x_zz[i] = 2.0 * g_z_z_x_zz[i] - 4.0 * g_z_xxz_x_zz[i] * b_exp - 2.0 * g_zzz_z_x_zz[i] * a_exp + 4.0 * g_zzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4470-4476)

    #pragma omp simd aligned(g_z_x_0_0_zz_xz_y_xx, g_z_x_0_0_zz_xz_y_xy, g_z_x_0_0_zz_xz_y_xz, g_z_x_0_0_zz_xz_y_yy, g_z_x_0_0_zz_xz_y_yz, g_z_x_0_0_zz_xz_y_zz, g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz, g_zzz_xxz_y_xx, g_zzz_xxz_y_xy, g_zzz_xxz_y_xz, g_zzz_xxz_y_yy, g_zzz_xxz_y_yz, g_zzz_xxz_y_zz, g_zzz_z_y_xx, g_zzz_z_y_xy, g_zzz_z_y_xz, g_zzz_z_y_yy, g_zzz_z_y_yz, g_zzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xz_y_xx[i] = 2.0 * g_z_z_y_xx[i] - 4.0 * g_z_xxz_y_xx[i] * b_exp - 2.0 * g_zzz_z_y_xx[i] * a_exp + 4.0 * g_zzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_y_xy[i] = 2.0 * g_z_z_y_xy[i] - 4.0 * g_z_xxz_y_xy[i] * b_exp - 2.0 * g_zzz_z_y_xy[i] * a_exp + 4.0 * g_zzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_y_xz[i] = 2.0 * g_z_z_y_xz[i] - 4.0 * g_z_xxz_y_xz[i] * b_exp - 2.0 * g_zzz_z_y_xz[i] * a_exp + 4.0 * g_zzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_y_yy[i] = 2.0 * g_z_z_y_yy[i] - 4.0 * g_z_xxz_y_yy[i] * b_exp - 2.0 * g_zzz_z_y_yy[i] * a_exp + 4.0 * g_zzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_y_yz[i] = 2.0 * g_z_z_y_yz[i] - 4.0 * g_z_xxz_y_yz[i] * b_exp - 2.0 * g_zzz_z_y_yz[i] * a_exp + 4.0 * g_zzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_y_zz[i] = 2.0 * g_z_z_y_zz[i] - 4.0 * g_z_xxz_y_zz[i] * b_exp - 2.0 * g_zzz_z_y_zz[i] * a_exp + 4.0 * g_zzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4476-4482)

    #pragma omp simd aligned(g_z_x_0_0_zz_xz_z_xx, g_z_x_0_0_zz_xz_z_xy, g_z_x_0_0_zz_xz_z_xz, g_z_x_0_0_zz_xz_z_yy, g_z_x_0_0_zz_xz_z_yz, g_z_x_0_0_zz_xz_z_zz, g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz, g_zzz_xxz_z_xx, g_zzz_xxz_z_xy, g_zzz_xxz_z_xz, g_zzz_xxz_z_yy, g_zzz_xxz_z_yz, g_zzz_xxz_z_zz, g_zzz_z_z_xx, g_zzz_z_z_xy, g_zzz_z_z_xz, g_zzz_z_z_yy, g_zzz_z_z_yz, g_zzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_xz_z_xx[i] = 2.0 * g_z_z_z_xx[i] - 4.0 * g_z_xxz_z_xx[i] * b_exp - 2.0 * g_zzz_z_z_xx[i] * a_exp + 4.0 * g_zzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_z_xy[i] = 2.0 * g_z_z_z_xy[i] - 4.0 * g_z_xxz_z_xy[i] * b_exp - 2.0 * g_zzz_z_z_xy[i] * a_exp + 4.0 * g_zzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_z_xz[i] = 2.0 * g_z_z_z_xz[i] - 4.0 * g_z_xxz_z_xz[i] * b_exp - 2.0 * g_zzz_z_z_xz[i] * a_exp + 4.0 * g_zzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_z_yy[i] = 2.0 * g_z_z_z_yy[i] - 4.0 * g_z_xxz_z_yy[i] * b_exp - 2.0 * g_zzz_z_z_yy[i] * a_exp + 4.0 * g_zzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_z_yz[i] = 2.0 * g_z_z_z_yz[i] - 4.0 * g_z_xxz_z_yz[i] * b_exp - 2.0 * g_zzz_z_z_yz[i] * a_exp + 4.0 * g_zzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_xz_z_zz[i] = 2.0 * g_z_z_z_zz[i] - 4.0 * g_z_xxz_z_zz[i] * b_exp - 2.0 * g_zzz_z_z_zz[i] * a_exp + 4.0 * g_zzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4482-4488)

    #pragma omp simd aligned(g_z_x_0_0_zz_yy_x_xx, g_z_x_0_0_zz_yy_x_xy, g_z_x_0_0_zz_yy_x_xz, g_z_x_0_0_zz_yy_x_yy, g_z_x_0_0_zz_yy_x_yz, g_z_x_0_0_zz_yy_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz, g_zzz_xyy_x_xx, g_zzz_xyy_x_xy, g_zzz_xyy_x_xz, g_zzz_xyy_x_yy, g_zzz_xyy_x_yz, g_zzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yy_x_xx[i] = -4.0 * g_z_xyy_x_xx[i] * b_exp + 4.0 * g_zzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_x_xy[i] = -4.0 * g_z_xyy_x_xy[i] * b_exp + 4.0 * g_zzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_x_xz[i] = -4.0 * g_z_xyy_x_xz[i] * b_exp + 4.0 * g_zzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_x_yy[i] = -4.0 * g_z_xyy_x_yy[i] * b_exp + 4.0 * g_zzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_x_yz[i] = -4.0 * g_z_xyy_x_yz[i] * b_exp + 4.0 * g_zzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_x_zz[i] = -4.0 * g_z_xyy_x_zz[i] * b_exp + 4.0 * g_zzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4488-4494)

    #pragma omp simd aligned(g_z_x_0_0_zz_yy_y_xx, g_z_x_0_0_zz_yy_y_xy, g_z_x_0_0_zz_yy_y_xz, g_z_x_0_0_zz_yy_y_yy, g_z_x_0_0_zz_yy_y_yz, g_z_x_0_0_zz_yy_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz, g_zzz_xyy_y_xx, g_zzz_xyy_y_xy, g_zzz_xyy_y_xz, g_zzz_xyy_y_yy, g_zzz_xyy_y_yz, g_zzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yy_y_xx[i] = -4.0 * g_z_xyy_y_xx[i] * b_exp + 4.0 * g_zzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_y_xy[i] = -4.0 * g_z_xyy_y_xy[i] * b_exp + 4.0 * g_zzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_y_xz[i] = -4.0 * g_z_xyy_y_xz[i] * b_exp + 4.0 * g_zzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_y_yy[i] = -4.0 * g_z_xyy_y_yy[i] * b_exp + 4.0 * g_zzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_y_yz[i] = -4.0 * g_z_xyy_y_yz[i] * b_exp + 4.0 * g_zzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_y_zz[i] = -4.0 * g_z_xyy_y_zz[i] * b_exp + 4.0 * g_zzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4494-4500)

    #pragma omp simd aligned(g_z_x_0_0_zz_yy_z_xx, g_z_x_0_0_zz_yy_z_xy, g_z_x_0_0_zz_yy_z_xz, g_z_x_0_0_zz_yy_z_yy, g_z_x_0_0_zz_yy_z_yz, g_z_x_0_0_zz_yy_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz, g_zzz_xyy_z_xx, g_zzz_xyy_z_xy, g_zzz_xyy_z_xz, g_zzz_xyy_z_yy, g_zzz_xyy_z_yz, g_zzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yy_z_xx[i] = -4.0 * g_z_xyy_z_xx[i] * b_exp + 4.0 * g_zzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_z_xy[i] = -4.0 * g_z_xyy_z_xy[i] * b_exp + 4.0 * g_zzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_z_xz[i] = -4.0 * g_z_xyy_z_xz[i] * b_exp + 4.0 * g_zzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_z_yy[i] = -4.0 * g_z_xyy_z_yy[i] * b_exp + 4.0 * g_zzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_z_yz[i] = -4.0 * g_z_xyy_z_yz[i] * b_exp + 4.0 * g_zzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yy_z_zz[i] = -4.0 * g_z_xyy_z_zz[i] * b_exp + 4.0 * g_zzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4500-4506)

    #pragma omp simd aligned(g_z_x_0_0_zz_yz_x_xx, g_z_x_0_0_zz_yz_x_xy, g_z_x_0_0_zz_yz_x_xz, g_z_x_0_0_zz_yz_x_yy, g_z_x_0_0_zz_yz_x_yz, g_z_x_0_0_zz_yz_x_zz, g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz, g_zzz_xyz_x_xx, g_zzz_xyz_x_xy, g_zzz_xyz_x_xz, g_zzz_xyz_x_yy, g_zzz_xyz_x_yz, g_zzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yz_x_xx[i] = -4.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_zzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_x_xy[i] = -4.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_zzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_x_xz[i] = -4.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_zzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_x_yy[i] = -4.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_zzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_x_yz[i] = -4.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_zzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_x_zz[i] = -4.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_zzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4506-4512)

    #pragma omp simd aligned(g_z_x_0_0_zz_yz_y_xx, g_z_x_0_0_zz_yz_y_xy, g_z_x_0_0_zz_yz_y_xz, g_z_x_0_0_zz_yz_y_yy, g_z_x_0_0_zz_yz_y_yz, g_z_x_0_0_zz_yz_y_zz, g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz, g_zzz_xyz_y_xx, g_zzz_xyz_y_xy, g_zzz_xyz_y_xz, g_zzz_xyz_y_yy, g_zzz_xyz_y_yz, g_zzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yz_y_xx[i] = -4.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_zzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_y_xy[i] = -4.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_zzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_y_xz[i] = -4.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_zzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_y_yy[i] = -4.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_zzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_y_yz[i] = -4.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_zzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_y_zz[i] = -4.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_zzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4512-4518)

    #pragma omp simd aligned(g_z_x_0_0_zz_yz_z_xx, g_z_x_0_0_zz_yz_z_xy, g_z_x_0_0_zz_yz_z_xz, g_z_x_0_0_zz_yz_z_yy, g_z_x_0_0_zz_yz_z_yz, g_z_x_0_0_zz_yz_z_zz, g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz, g_zzz_xyz_z_xx, g_zzz_xyz_z_xy, g_zzz_xyz_z_xz, g_zzz_xyz_z_yy, g_zzz_xyz_z_yz, g_zzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_yz_z_xx[i] = -4.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_zzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_z_xy[i] = -4.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_zzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_z_xz[i] = -4.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_zzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_z_yy[i] = -4.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_zzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_z_yz[i] = -4.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_zzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_yz_z_zz[i] = -4.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_zzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4518-4524)

    #pragma omp simd aligned(g_z_x_0_0_zz_zz_x_xx, g_z_x_0_0_zz_zz_x_xy, g_z_x_0_0_zz_zz_x_xz, g_z_x_0_0_zz_zz_x_yy, g_z_x_0_0_zz_zz_x_yz, g_z_x_0_0_zz_zz_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz, g_zzz_xzz_x_xx, g_zzz_xzz_x_xy, g_zzz_xzz_x_xz, g_zzz_xzz_x_yy, g_zzz_xzz_x_yz, g_zzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_zz_x_xx[i] = -4.0 * g_z_xzz_x_xx[i] * b_exp + 4.0 * g_zzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_x_xy[i] = -4.0 * g_z_xzz_x_xy[i] * b_exp + 4.0 * g_zzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_x_xz[i] = -4.0 * g_z_xzz_x_xz[i] * b_exp + 4.0 * g_zzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_x_yy[i] = -4.0 * g_z_xzz_x_yy[i] * b_exp + 4.0 * g_zzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_x_yz[i] = -4.0 * g_z_xzz_x_yz[i] * b_exp + 4.0 * g_zzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_x_zz[i] = -4.0 * g_z_xzz_x_zz[i] * b_exp + 4.0 * g_zzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4524-4530)

    #pragma omp simd aligned(g_z_x_0_0_zz_zz_y_xx, g_z_x_0_0_zz_zz_y_xy, g_z_x_0_0_zz_zz_y_xz, g_z_x_0_0_zz_zz_y_yy, g_z_x_0_0_zz_zz_y_yz, g_z_x_0_0_zz_zz_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz, g_zzz_xzz_y_xx, g_zzz_xzz_y_xy, g_zzz_xzz_y_xz, g_zzz_xzz_y_yy, g_zzz_xzz_y_yz, g_zzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_zz_y_xx[i] = -4.0 * g_z_xzz_y_xx[i] * b_exp + 4.0 * g_zzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_y_xy[i] = -4.0 * g_z_xzz_y_xy[i] * b_exp + 4.0 * g_zzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_y_xz[i] = -4.0 * g_z_xzz_y_xz[i] * b_exp + 4.0 * g_zzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_y_yy[i] = -4.0 * g_z_xzz_y_yy[i] * b_exp + 4.0 * g_zzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_y_yz[i] = -4.0 * g_z_xzz_y_yz[i] * b_exp + 4.0 * g_zzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_y_zz[i] = -4.0 * g_z_xzz_y_zz[i] * b_exp + 4.0 * g_zzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4530-4536)

    #pragma omp simd aligned(g_z_x_0_0_zz_zz_z_xx, g_z_x_0_0_zz_zz_z_xy, g_z_x_0_0_zz_zz_z_xz, g_z_x_0_0_zz_zz_z_yy, g_z_x_0_0_zz_zz_z_yz, g_z_x_0_0_zz_zz_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz, g_zzz_xzz_z_xx, g_zzz_xzz_z_xy, g_zzz_xzz_z_xz, g_zzz_xzz_z_yy, g_zzz_xzz_z_yz, g_zzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_x_0_0_zz_zz_z_xx[i] = -4.0 * g_z_xzz_z_xx[i] * b_exp + 4.0 * g_zzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_z_xy[i] = -4.0 * g_z_xzz_z_xy[i] * b_exp + 4.0 * g_zzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_z_xz[i] = -4.0 * g_z_xzz_z_xz[i] * b_exp + 4.0 * g_zzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_z_yy[i] = -4.0 * g_z_xzz_z_yy[i] * b_exp + 4.0 * g_zzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_z_yz[i] = -4.0 * g_z_xzz_z_yz[i] * b_exp + 4.0 * g_zzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_x_0_0_zz_zz_z_zz[i] = -4.0 * g_z_xzz_z_zz[i] * b_exp + 4.0 * g_zzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4536-4542)

    #pragma omp simd aligned(g_xxz_xxy_x_xx, g_xxz_xxy_x_xy, g_xxz_xxy_x_xz, g_xxz_xxy_x_yy, g_xxz_xxy_x_yz, g_xxz_xxy_x_zz, g_z_y_0_0_xx_xx_x_xx, g_z_y_0_0_xx_xx_x_xy, g_z_y_0_0_xx_xx_x_xz, g_z_y_0_0_xx_xx_x_yy, g_z_y_0_0_xx_xx_x_yz, g_z_y_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xx_x_xx[i] = 4.0 * g_xxz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_x_xy[i] = 4.0 * g_xxz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_x_xz[i] = 4.0 * g_xxz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_x_yy[i] = 4.0 * g_xxz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_x_yz[i] = 4.0 * g_xxz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_x_zz[i] = 4.0 * g_xxz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4542-4548)

    #pragma omp simd aligned(g_xxz_xxy_y_xx, g_xxz_xxy_y_xy, g_xxz_xxy_y_xz, g_xxz_xxy_y_yy, g_xxz_xxy_y_yz, g_xxz_xxy_y_zz, g_z_y_0_0_xx_xx_y_xx, g_z_y_0_0_xx_xx_y_xy, g_z_y_0_0_xx_xx_y_xz, g_z_y_0_0_xx_xx_y_yy, g_z_y_0_0_xx_xx_y_yz, g_z_y_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xx_y_xx[i] = 4.0 * g_xxz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_y_xy[i] = 4.0 * g_xxz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_y_xz[i] = 4.0 * g_xxz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_y_yy[i] = 4.0 * g_xxz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_y_yz[i] = 4.0 * g_xxz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_y_zz[i] = 4.0 * g_xxz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4548-4554)

    #pragma omp simd aligned(g_xxz_xxy_z_xx, g_xxz_xxy_z_xy, g_xxz_xxy_z_xz, g_xxz_xxy_z_yy, g_xxz_xxy_z_yz, g_xxz_xxy_z_zz, g_z_y_0_0_xx_xx_z_xx, g_z_y_0_0_xx_xx_z_xy, g_z_y_0_0_xx_xx_z_xz, g_z_y_0_0_xx_xx_z_yy, g_z_y_0_0_xx_xx_z_yz, g_z_y_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xx_z_xx[i] = 4.0 * g_xxz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_z_xy[i] = 4.0 * g_xxz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_z_xz[i] = 4.0 * g_xxz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_z_yy[i] = 4.0 * g_xxz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_z_yz[i] = 4.0 * g_xxz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xx_z_zz[i] = 4.0 * g_xxz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4554-4560)

    #pragma omp simd aligned(g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xyy_x_xx, g_xxz_xyy_x_xy, g_xxz_xyy_x_xz, g_xxz_xyy_x_yy, g_xxz_xyy_x_yz, g_xxz_xyy_x_zz, g_z_y_0_0_xx_xy_x_xx, g_z_y_0_0_xx_xy_x_xy, g_z_y_0_0_xx_xy_x_xz, g_z_y_0_0_xx_xy_x_yy, g_z_y_0_0_xx_xy_x_yz, g_z_y_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xy_x_xx[i] = -2.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_x_xy[i] = -2.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_x_xz[i] = -2.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_x_yy[i] = -2.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_x_yz[i] = -2.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_x_zz[i] = -2.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4560-4566)

    #pragma omp simd aligned(g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xyy_y_xx, g_xxz_xyy_y_xy, g_xxz_xyy_y_xz, g_xxz_xyy_y_yy, g_xxz_xyy_y_yz, g_xxz_xyy_y_zz, g_z_y_0_0_xx_xy_y_xx, g_z_y_0_0_xx_xy_y_xy, g_z_y_0_0_xx_xy_y_xz, g_z_y_0_0_xx_xy_y_yy, g_z_y_0_0_xx_xy_y_yz, g_z_y_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xy_y_xx[i] = -2.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_y_xy[i] = -2.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_y_xz[i] = -2.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_y_yy[i] = -2.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_y_yz[i] = -2.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_y_zz[i] = -2.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4566-4572)

    #pragma omp simd aligned(g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xyy_z_xx, g_xxz_xyy_z_xy, g_xxz_xyy_z_xz, g_xxz_xyy_z_yy, g_xxz_xyy_z_yz, g_xxz_xyy_z_zz, g_z_y_0_0_xx_xy_z_xx, g_z_y_0_0_xx_xy_z_xy, g_z_y_0_0_xx_xy_z_xz, g_z_y_0_0_xx_xy_z_yy, g_z_y_0_0_xx_xy_z_yz, g_z_y_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xy_z_xx[i] = -2.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_z_xy[i] = -2.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_z_xz[i] = -2.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_z_yy[i] = -2.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_z_yz[i] = -2.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xy_z_zz[i] = -2.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4572-4578)

    #pragma omp simd aligned(g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_y_0_0_xx_xz_x_xx, g_z_y_0_0_xx_xz_x_xy, g_z_y_0_0_xx_xz_x_xz, g_z_y_0_0_xx_xz_x_yy, g_z_y_0_0_xx_xz_x_yz, g_z_y_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xz_x_xx[i] = 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_x_xy[i] = 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_x_xz[i] = 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_x_yy[i] = 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_x_yz[i] = 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_x_zz[i] = 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4578-4584)

    #pragma omp simd aligned(g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_y_0_0_xx_xz_y_xx, g_z_y_0_0_xx_xz_y_xy, g_z_y_0_0_xx_xz_y_xz, g_z_y_0_0_xx_xz_y_yy, g_z_y_0_0_xx_xz_y_yz, g_z_y_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xz_y_xx[i] = 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_y_xy[i] = 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_y_xz[i] = 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_y_yy[i] = 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_y_yz[i] = 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_y_zz[i] = 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4584-4590)

    #pragma omp simd aligned(g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_y_0_0_xx_xz_z_xx, g_z_y_0_0_xx_xz_z_xy, g_z_y_0_0_xx_xz_z_xz, g_z_y_0_0_xx_xz_z_yy, g_z_y_0_0_xx_xz_z_yz, g_z_y_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_xz_z_xx[i] = 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_z_xy[i] = 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_z_xz[i] = 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_z_yy[i] = 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_z_yz[i] = 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_xz_z_zz[i] = 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4590-4596)

    #pragma omp simd aligned(g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_xxz_yyy_x_xx, g_xxz_yyy_x_xy, g_xxz_yyy_x_xz, g_xxz_yyy_x_yy, g_xxz_yyy_x_yz, g_xxz_yyy_x_zz, g_z_y_0_0_xx_yy_x_xx, g_z_y_0_0_xx_yy_x_xy, g_z_y_0_0_xx_yy_x_xz, g_z_y_0_0_xx_yy_x_yy, g_z_y_0_0_xx_yy_x_yz, g_z_y_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yy_x_xx[i] = -4.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_x_xy[i] = -4.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_x_xz[i] = -4.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_x_yy[i] = -4.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_x_yz[i] = -4.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_x_zz[i] = -4.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4596-4602)

    #pragma omp simd aligned(g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_xxz_yyy_y_xx, g_xxz_yyy_y_xy, g_xxz_yyy_y_xz, g_xxz_yyy_y_yy, g_xxz_yyy_y_yz, g_xxz_yyy_y_zz, g_z_y_0_0_xx_yy_y_xx, g_z_y_0_0_xx_yy_y_xy, g_z_y_0_0_xx_yy_y_xz, g_z_y_0_0_xx_yy_y_yy, g_z_y_0_0_xx_yy_y_yz, g_z_y_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yy_y_xx[i] = -4.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_y_xy[i] = -4.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_y_xz[i] = -4.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_y_yy[i] = -4.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_y_yz[i] = -4.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_y_zz[i] = -4.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4602-4608)

    #pragma omp simd aligned(g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_xxz_yyy_z_xx, g_xxz_yyy_z_xy, g_xxz_yyy_z_xz, g_xxz_yyy_z_yy, g_xxz_yyy_z_yz, g_xxz_yyy_z_zz, g_z_y_0_0_xx_yy_z_xx, g_z_y_0_0_xx_yy_z_xy, g_z_y_0_0_xx_yy_z_xz, g_z_y_0_0_xx_yy_z_yy, g_z_y_0_0_xx_yy_z_yz, g_z_y_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yy_z_xx[i] = -4.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_z_xy[i] = -4.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_z_xz[i] = -4.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_z_yy[i] = -4.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_z_yz[i] = -4.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yy_z_zz[i] = -4.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4608-4614)

    #pragma omp simd aligned(g_xxz_yyz_x_xx, g_xxz_yyz_x_xy, g_xxz_yyz_x_xz, g_xxz_yyz_x_yy, g_xxz_yyz_x_yz, g_xxz_yyz_x_zz, g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_z_y_0_0_xx_yz_x_xx, g_z_y_0_0_xx_yz_x_xy, g_z_y_0_0_xx_yz_x_xz, g_z_y_0_0_xx_yz_x_yy, g_z_y_0_0_xx_yz_x_yz, g_z_y_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yz_x_xx[i] = -2.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_x_xy[i] = -2.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_x_xz[i] = -2.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_x_yy[i] = -2.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_x_yz[i] = -2.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_x_zz[i] = -2.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4614-4620)

    #pragma omp simd aligned(g_xxz_yyz_y_xx, g_xxz_yyz_y_xy, g_xxz_yyz_y_xz, g_xxz_yyz_y_yy, g_xxz_yyz_y_yz, g_xxz_yyz_y_zz, g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_z_y_0_0_xx_yz_y_xx, g_z_y_0_0_xx_yz_y_xy, g_z_y_0_0_xx_yz_y_xz, g_z_y_0_0_xx_yz_y_yy, g_z_y_0_0_xx_yz_y_yz, g_z_y_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yz_y_xx[i] = -2.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_y_xy[i] = -2.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_y_xz[i] = -2.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_y_yy[i] = -2.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_y_yz[i] = -2.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_y_zz[i] = -2.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4620-4626)

    #pragma omp simd aligned(g_xxz_yyz_z_xx, g_xxz_yyz_z_xy, g_xxz_yyz_z_xz, g_xxz_yyz_z_yy, g_xxz_yyz_z_yz, g_xxz_yyz_z_zz, g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_z_y_0_0_xx_yz_z_xx, g_z_y_0_0_xx_yz_z_xy, g_z_y_0_0_xx_yz_z_xz, g_z_y_0_0_xx_yz_z_yy, g_z_y_0_0_xx_yz_z_yz, g_z_y_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_yz_z_xx[i] = -2.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_z_xy[i] = -2.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_z_xz[i] = -2.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_z_yy[i] = -2.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_z_yz[i] = -2.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_yz_z_zz[i] = -2.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4626-4632)

    #pragma omp simd aligned(g_xxz_yzz_x_xx, g_xxz_yzz_x_xy, g_xxz_yzz_x_xz, g_xxz_yzz_x_yy, g_xxz_yzz_x_yz, g_xxz_yzz_x_zz, g_z_y_0_0_xx_zz_x_xx, g_z_y_0_0_xx_zz_x_xy, g_z_y_0_0_xx_zz_x_xz, g_z_y_0_0_xx_zz_x_yy, g_z_y_0_0_xx_zz_x_yz, g_z_y_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_zz_x_xx[i] = 4.0 * g_xxz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_x_xy[i] = 4.0 * g_xxz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_x_xz[i] = 4.0 * g_xxz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_x_yy[i] = 4.0 * g_xxz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_x_yz[i] = 4.0 * g_xxz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_x_zz[i] = 4.0 * g_xxz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4632-4638)

    #pragma omp simd aligned(g_xxz_yzz_y_xx, g_xxz_yzz_y_xy, g_xxz_yzz_y_xz, g_xxz_yzz_y_yy, g_xxz_yzz_y_yz, g_xxz_yzz_y_zz, g_z_y_0_0_xx_zz_y_xx, g_z_y_0_0_xx_zz_y_xy, g_z_y_0_0_xx_zz_y_xz, g_z_y_0_0_xx_zz_y_yy, g_z_y_0_0_xx_zz_y_yz, g_z_y_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_zz_y_xx[i] = 4.0 * g_xxz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_y_xy[i] = 4.0 * g_xxz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_y_xz[i] = 4.0 * g_xxz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_y_yy[i] = 4.0 * g_xxz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_y_yz[i] = 4.0 * g_xxz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_y_zz[i] = 4.0 * g_xxz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4638-4644)

    #pragma omp simd aligned(g_xxz_yzz_z_xx, g_xxz_yzz_z_xy, g_xxz_yzz_z_xz, g_xxz_yzz_z_yy, g_xxz_yzz_z_yz, g_xxz_yzz_z_zz, g_z_y_0_0_xx_zz_z_xx, g_z_y_0_0_xx_zz_z_xy, g_z_y_0_0_xx_zz_z_xz, g_z_y_0_0_xx_zz_z_yy, g_z_y_0_0_xx_zz_z_yz, g_z_y_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xx_zz_z_xx[i] = 4.0 * g_xxz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_z_xy[i] = 4.0 * g_xxz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_z_xz[i] = 4.0 * g_xxz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_z_yy[i] = 4.0 * g_xxz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_z_yz[i] = 4.0 * g_xxz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xx_zz_z_zz[i] = 4.0 * g_xxz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4644-4650)

    #pragma omp simd aligned(g_xyz_xxy_x_xx, g_xyz_xxy_x_xy, g_xyz_xxy_x_xz, g_xyz_xxy_x_yy, g_xyz_xxy_x_yz, g_xyz_xxy_x_zz, g_z_y_0_0_xy_xx_x_xx, g_z_y_0_0_xy_xx_x_xy, g_z_y_0_0_xy_xx_x_xz, g_z_y_0_0_xy_xx_x_yy, g_z_y_0_0_xy_xx_x_yz, g_z_y_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xx_x_xx[i] = 4.0 * g_xyz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_x_xy[i] = 4.0 * g_xyz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_x_xz[i] = 4.0 * g_xyz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_x_yy[i] = 4.0 * g_xyz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_x_yz[i] = 4.0 * g_xyz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_x_zz[i] = 4.0 * g_xyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4650-4656)

    #pragma omp simd aligned(g_xyz_xxy_y_xx, g_xyz_xxy_y_xy, g_xyz_xxy_y_xz, g_xyz_xxy_y_yy, g_xyz_xxy_y_yz, g_xyz_xxy_y_zz, g_z_y_0_0_xy_xx_y_xx, g_z_y_0_0_xy_xx_y_xy, g_z_y_0_0_xy_xx_y_xz, g_z_y_0_0_xy_xx_y_yy, g_z_y_0_0_xy_xx_y_yz, g_z_y_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xx_y_xx[i] = 4.0 * g_xyz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_y_xy[i] = 4.0 * g_xyz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_y_xz[i] = 4.0 * g_xyz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_y_yy[i] = 4.0 * g_xyz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_y_yz[i] = 4.0 * g_xyz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_y_zz[i] = 4.0 * g_xyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4656-4662)

    #pragma omp simd aligned(g_xyz_xxy_z_xx, g_xyz_xxy_z_xy, g_xyz_xxy_z_xz, g_xyz_xxy_z_yy, g_xyz_xxy_z_yz, g_xyz_xxy_z_zz, g_z_y_0_0_xy_xx_z_xx, g_z_y_0_0_xy_xx_z_xy, g_z_y_0_0_xy_xx_z_xz, g_z_y_0_0_xy_xx_z_yy, g_z_y_0_0_xy_xx_z_yz, g_z_y_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xx_z_xx[i] = 4.0 * g_xyz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_z_xy[i] = 4.0 * g_xyz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_z_xz[i] = 4.0 * g_xyz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_z_yy[i] = 4.0 * g_xyz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_z_yz[i] = 4.0 * g_xyz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xx_z_zz[i] = 4.0 * g_xyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4662-4668)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xyy_x_xx, g_xyz_xyy_x_xy, g_xyz_xyy_x_xz, g_xyz_xyy_x_yy, g_xyz_xyy_x_yz, g_xyz_xyy_x_zz, g_z_y_0_0_xy_xy_x_xx, g_z_y_0_0_xy_xy_x_xy, g_z_y_0_0_xy_xy_x_xz, g_z_y_0_0_xy_xy_x_yy, g_z_y_0_0_xy_xy_x_yz, g_z_y_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xy_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4668-4674)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xyy_y_xx, g_xyz_xyy_y_xy, g_xyz_xyy_y_xz, g_xyz_xyy_y_yy, g_xyz_xyy_y_yz, g_xyz_xyy_y_zz, g_z_y_0_0_xy_xy_y_xx, g_z_y_0_0_xy_xy_y_xy, g_z_y_0_0_xy_xy_y_xz, g_z_y_0_0_xy_xy_y_yy, g_z_y_0_0_xy_xy_y_yz, g_z_y_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xy_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4674-4680)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xyy_z_xx, g_xyz_xyy_z_xy, g_xyz_xyy_z_xz, g_xyz_xyy_z_yy, g_xyz_xyy_z_yz, g_xyz_xyy_z_zz, g_z_y_0_0_xy_xy_z_xx, g_z_y_0_0_xy_xy_z_xy, g_z_y_0_0_xy_xy_z_xz, g_z_y_0_0_xy_xy_z_yy, g_z_y_0_0_xy_xy_z_yz, g_z_y_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xy_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xy_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4680-4686)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_z_y_0_0_xy_xz_x_xx, g_z_y_0_0_xy_xz_x_xy, g_z_y_0_0_xy_xz_x_xz, g_z_y_0_0_xy_xz_x_yy, g_z_y_0_0_xy_xz_x_yz, g_z_y_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xz_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4686-4692)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_z_y_0_0_xy_xz_y_xx, g_z_y_0_0_xy_xz_y_xy, g_z_y_0_0_xy_xz_y_xz, g_z_y_0_0_xy_xz_y_yy, g_z_y_0_0_xy_xz_y_yz, g_z_y_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xz_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4692-4698)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_z_y_0_0_xy_xz_z_xx, g_z_y_0_0_xy_xz_z_xy, g_z_y_0_0_xy_xz_z_xz, g_z_y_0_0_xy_xz_z_yy, g_z_y_0_0_xy_xz_z_yz, g_z_y_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_xz_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_xz_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4698-4704)

    #pragma omp simd aligned(g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yyy_x_xx, g_xyz_yyy_x_xy, g_xyz_yyy_x_xz, g_xyz_yyy_x_yy, g_xyz_yyy_x_yz, g_xyz_yyy_x_zz, g_z_y_0_0_xy_yy_x_xx, g_z_y_0_0_xy_yy_x_xy, g_z_y_0_0_xy_yy_x_xz, g_z_y_0_0_xy_yy_x_yy, g_z_y_0_0_xy_yy_x_yz, g_z_y_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yy_x_xx[i] = -4.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_x_xy[i] = -4.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_x_xz[i] = -4.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_x_yy[i] = -4.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_x_yz[i] = -4.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_x_zz[i] = -4.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4704-4710)

    #pragma omp simd aligned(g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yyy_y_xx, g_xyz_yyy_y_xy, g_xyz_yyy_y_xz, g_xyz_yyy_y_yy, g_xyz_yyy_y_yz, g_xyz_yyy_y_zz, g_z_y_0_0_xy_yy_y_xx, g_z_y_0_0_xy_yy_y_xy, g_z_y_0_0_xy_yy_y_xz, g_z_y_0_0_xy_yy_y_yy, g_z_y_0_0_xy_yy_y_yz, g_z_y_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yy_y_xx[i] = -4.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_y_xy[i] = -4.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_y_xz[i] = -4.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_y_yy[i] = -4.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_y_yz[i] = -4.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_y_zz[i] = -4.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4710-4716)

    #pragma omp simd aligned(g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yyy_z_xx, g_xyz_yyy_z_xy, g_xyz_yyy_z_xz, g_xyz_yyy_z_yy, g_xyz_yyy_z_yz, g_xyz_yyy_z_zz, g_z_y_0_0_xy_yy_z_xx, g_z_y_0_0_xy_yy_z_xy, g_z_y_0_0_xy_yy_z_xz, g_z_y_0_0_xy_yy_z_yy, g_z_y_0_0_xy_yy_z_yz, g_z_y_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yy_z_xx[i] = -4.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_z_xy[i] = -4.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_z_xz[i] = -4.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_z_yy[i] = -4.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_z_yz[i] = -4.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yy_z_zz[i] = -4.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4716-4722)

    #pragma omp simd aligned(g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz, g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_z_y_0_0_xy_yz_x_xx, g_z_y_0_0_xy_yz_x_xy, g_z_y_0_0_xy_yz_x_xz, g_z_y_0_0_xy_yz_x_yy, g_z_y_0_0_xy_yz_x_yz, g_z_y_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yz_x_xx[i] = -2.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_x_xy[i] = -2.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_x_xz[i] = -2.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_x_yy[i] = -2.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_x_yz[i] = -2.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_x_zz[i] = -2.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4722-4728)

    #pragma omp simd aligned(g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz, g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_z_y_0_0_xy_yz_y_xx, g_z_y_0_0_xy_yz_y_xy, g_z_y_0_0_xy_yz_y_xz, g_z_y_0_0_xy_yz_y_yy, g_z_y_0_0_xy_yz_y_yz, g_z_y_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yz_y_xx[i] = -2.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_y_xy[i] = -2.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_y_xz[i] = -2.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_y_yy[i] = -2.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_y_yz[i] = -2.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_y_zz[i] = -2.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4728-4734)

    #pragma omp simd aligned(g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz, g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_z_y_0_0_xy_yz_z_xx, g_z_y_0_0_xy_yz_z_xy, g_z_y_0_0_xy_yz_z_xz, g_z_y_0_0_xy_yz_z_yy, g_z_y_0_0_xy_yz_z_yz, g_z_y_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_yz_z_xx[i] = -2.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_z_xy[i] = -2.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_z_xz[i] = -2.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_z_yy[i] = -2.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_z_yz[i] = -2.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_yz_z_zz[i] = -2.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4734-4740)

    #pragma omp simd aligned(g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz, g_z_y_0_0_xy_zz_x_xx, g_z_y_0_0_xy_zz_x_xy, g_z_y_0_0_xy_zz_x_xz, g_z_y_0_0_xy_zz_x_yy, g_z_y_0_0_xy_zz_x_yz, g_z_y_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_zz_x_xx[i] = 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_x_xy[i] = 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_x_xz[i] = 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_x_yy[i] = 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_x_yz[i] = 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_x_zz[i] = 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4740-4746)

    #pragma omp simd aligned(g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz, g_z_y_0_0_xy_zz_y_xx, g_z_y_0_0_xy_zz_y_xy, g_z_y_0_0_xy_zz_y_xz, g_z_y_0_0_xy_zz_y_yy, g_z_y_0_0_xy_zz_y_yz, g_z_y_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_zz_y_xx[i] = 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_y_xy[i] = 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_y_xz[i] = 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_y_yy[i] = 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_y_yz[i] = 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_y_zz[i] = 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4746-4752)

    #pragma omp simd aligned(g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz, g_z_y_0_0_xy_zz_z_xx, g_z_y_0_0_xy_zz_z_xy, g_z_y_0_0_xy_zz_z_xz, g_z_y_0_0_xy_zz_z_yy, g_z_y_0_0_xy_zz_z_yz, g_z_y_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xy_zz_z_xx[i] = 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_z_xy[i] = 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_z_xz[i] = 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_z_yy[i] = 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_z_yz[i] = 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xy_zz_z_zz[i] = 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4752-4758)

    #pragma omp simd aligned(g_x_xxy_x_xx, g_x_xxy_x_xy, g_x_xxy_x_xz, g_x_xxy_x_yy, g_x_xxy_x_yz, g_x_xxy_x_zz, g_xzz_xxy_x_xx, g_xzz_xxy_x_xy, g_xzz_xxy_x_xz, g_xzz_xxy_x_yy, g_xzz_xxy_x_yz, g_xzz_xxy_x_zz, g_z_y_0_0_xz_xx_x_xx, g_z_y_0_0_xz_xx_x_xy, g_z_y_0_0_xz_xx_x_xz, g_z_y_0_0_xz_xx_x_yy, g_z_y_0_0_xz_xx_x_yz, g_z_y_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xx_x_xx[i] = -2.0 * g_x_xxy_x_xx[i] * b_exp + 4.0 * g_xzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_x_xy[i] = -2.0 * g_x_xxy_x_xy[i] * b_exp + 4.0 * g_xzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_x_xz[i] = -2.0 * g_x_xxy_x_xz[i] * b_exp + 4.0 * g_xzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_x_yy[i] = -2.0 * g_x_xxy_x_yy[i] * b_exp + 4.0 * g_xzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_x_yz[i] = -2.0 * g_x_xxy_x_yz[i] * b_exp + 4.0 * g_xzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_x_zz[i] = -2.0 * g_x_xxy_x_zz[i] * b_exp + 4.0 * g_xzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4758-4764)

    #pragma omp simd aligned(g_x_xxy_y_xx, g_x_xxy_y_xy, g_x_xxy_y_xz, g_x_xxy_y_yy, g_x_xxy_y_yz, g_x_xxy_y_zz, g_xzz_xxy_y_xx, g_xzz_xxy_y_xy, g_xzz_xxy_y_xz, g_xzz_xxy_y_yy, g_xzz_xxy_y_yz, g_xzz_xxy_y_zz, g_z_y_0_0_xz_xx_y_xx, g_z_y_0_0_xz_xx_y_xy, g_z_y_0_0_xz_xx_y_xz, g_z_y_0_0_xz_xx_y_yy, g_z_y_0_0_xz_xx_y_yz, g_z_y_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xx_y_xx[i] = -2.0 * g_x_xxy_y_xx[i] * b_exp + 4.0 * g_xzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_y_xy[i] = -2.0 * g_x_xxy_y_xy[i] * b_exp + 4.0 * g_xzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_y_xz[i] = -2.0 * g_x_xxy_y_xz[i] * b_exp + 4.0 * g_xzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_y_yy[i] = -2.0 * g_x_xxy_y_yy[i] * b_exp + 4.0 * g_xzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_y_yz[i] = -2.0 * g_x_xxy_y_yz[i] * b_exp + 4.0 * g_xzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_y_zz[i] = -2.0 * g_x_xxy_y_zz[i] * b_exp + 4.0 * g_xzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4764-4770)

    #pragma omp simd aligned(g_x_xxy_z_xx, g_x_xxy_z_xy, g_x_xxy_z_xz, g_x_xxy_z_yy, g_x_xxy_z_yz, g_x_xxy_z_zz, g_xzz_xxy_z_xx, g_xzz_xxy_z_xy, g_xzz_xxy_z_xz, g_xzz_xxy_z_yy, g_xzz_xxy_z_yz, g_xzz_xxy_z_zz, g_z_y_0_0_xz_xx_z_xx, g_z_y_0_0_xz_xx_z_xy, g_z_y_0_0_xz_xx_z_xz, g_z_y_0_0_xz_xx_z_yy, g_z_y_0_0_xz_xx_z_yz, g_z_y_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xx_z_xx[i] = -2.0 * g_x_xxy_z_xx[i] * b_exp + 4.0 * g_xzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_z_xy[i] = -2.0 * g_x_xxy_z_xy[i] * b_exp + 4.0 * g_xzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_z_xz[i] = -2.0 * g_x_xxy_z_xz[i] * b_exp + 4.0 * g_xzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_z_yy[i] = -2.0 * g_x_xxy_z_yy[i] * b_exp + 4.0 * g_xzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_z_yz[i] = -2.0 * g_x_xxy_z_yz[i] * b_exp + 4.0 * g_xzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xx_z_zz[i] = -2.0 * g_x_xxy_z_zz[i] * b_exp + 4.0 * g_xzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4770-4776)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xyy_x_xx, g_x_xyy_x_xy, g_x_xyy_x_xz, g_x_xyy_x_yy, g_x_xyy_x_yz, g_x_xyy_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xyy_x_xx, g_xzz_xyy_x_xy, g_xzz_xyy_x_xz, g_xzz_xyy_x_yy, g_xzz_xyy_x_yz, g_xzz_xyy_x_zz, g_z_y_0_0_xz_xy_x_xx, g_z_y_0_0_xz_xy_x_xy, g_z_y_0_0_xz_xy_x_xz, g_z_y_0_0_xz_xy_x_yy, g_z_y_0_0_xz_xy_x_yz, g_z_y_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xy_x_xx[i] = g_x_x_x_xx[i] - 2.0 * g_x_xyy_x_xx[i] * b_exp - 2.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_x_xy[i] = g_x_x_x_xy[i] - 2.0 * g_x_xyy_x_xy[i] * b_exp - 2.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_x_xz[i] = g_x_x_x_xz[i] - 2.0 * g_x_xyy_x_xz[i] * b_exp - 2.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_x_yy[i] = g_x_x_x_yy[i] - 2.0 * g_x_xyy_x_yy[i] * b_exp - 2.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_x_yz[i] = g_x_x_x_yz[i] - 2.0 * g_x_xyy_x_yz[i] * b_exp - 2.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_x_zz[i] = g_x_x_x_zz[i] - 2.0 * g_x_xyy_x_zz[i] * b_exp - 2.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4776-4782)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xyy_y_xx, g_x_xyy_y_xy, g_x_xyy_y_xz, g_x_xyy_y_yy, g_x_xyy_y_yz, g_x_xyy_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xyy_y_xx, g_xzz_xyy_y_xy, g_xzz_xyy_y_xz, g_xzz_xyy_y_yy, g_xzz_xyy_y_yz, g_xzz_xyy_y_zz, g_z_y_0_0_xz_xy_y_xx, g_z_y_0_0_xz_xy_y_xy, g_z_y_0_0_xz_xy_y_xz, g_z_y_0_0_xz_xy_y_yy, g_z_y_0_0_xz_xy_y_yz, g_z_y_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xy_y_xx[i] = g_x_x_y_xx[i] - 2.0 * g_x_xyy_y_xx[i] * b_exp - 2.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_y_xy[i] = g_x_x_y_xy[i] - 2.0 * g_x_xyy_y_xy[i] * b_exp - 2.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_y_xz[i] = g_x_x_y_xz[i] - 2.0 * g_x_xyy_y_xz[i] * b_exp - 2.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_y_yy[i] = g_x_x_y_yy[i] - 2.0 * g_x_xyy_y_yy[i] * b_exp - 2.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_y_yz[i] = g_x_x_y_yz[i] - 2.0 * g_x_xyy_y_yz[i] * b_exp - 2.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_y_zz[i] = g_x_x_y_zz[i] - 2.0 * g_x_xyy_y_zz[i] * b_exp - 2.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4782-4788)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xyy_z_xx, g_x_xyy_z_xy, g_x_xyy_z_xz, g_x_xyy_z_yy, g_x_xyy_z_yz, g_x_xyy_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xyy_z_xx, g_xzz_xyy_z_xy, g_xzz_xyy_z_xz, g_xzz_xyy_z_yy, g_xzz_xyy_z_yz, g_xzz_xyy_z_zz, g_z_y_0_0_xz_xy_z_xx, g_z_y_0_0_xz_xy_z_xy, g_z_y_0_0_xz_xy_z_xz, g_z_y_0_0_xz_xy_z_yy, g_z_y_0_0_xz_xy_z_yz, g_z_y_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xy_z_xx[i] = g_x_x_z_xx[i] - 2.0 * g_x_xyy_z_xx[i] * b_exp - 2.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_z_xy[i] = g_x_x_z_xy[i] - 2.0 * g_x_xyy_z_xy[i] * b_exp - 2.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_z_xz[i] = g_x_x_z_xz[i] - 2.0 * g_x_xyy_z_xz[i] * b_exp - 2.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_z_yy[i] = g_x_x_z_yy[i] - 2.0 * g_x_xyy_z_yy[i] * b_exp - 2.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_z_yz[i] = g_x_x_z_yz[i] - 2.0 * g_x_xyy_z_yz[i] * b_exp - 2.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xy_z_zz[i] = g_x_x_z_zz[i] - 2.0 * g_x_xyy_z_zz[i] * b_exp - 2.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4788-4794)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz, g_z_y_0_0_xz_xz_x_xx, g_z_y_0_0_xz_xz_x_xy, g_z_y_0_0_xz_xz_x_xz, g_z_y_0_0_xz_xz_x_yy, g_z_y_0_0_xz_xz_x_yz, g_z_y_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xz_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4794-4800)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz, g_z_y_0_0_xz_xz_y_xx, g_z_y_0_0_xz_xz_y_xy, g_z_y_0_0_xz_xz_y_xz, g_z_y_0_0_xz_xz_y_yy, g_z_y_0_0_xz_xz_y_yz, g_z_y_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xz_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4800-4806)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz, g_z_y_0_0_xz_xz_z_xx, g_z_y_0_0_xz_xz_z_xy, g_z_y_0_0_xz_xz_z_xz, g_z_y_0_0_xz_xz_z_yy, g_z_y_0_0_xz_xz_z_yz, g_z_y_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_xz_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_xz_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4806-4812)

    #pragma omp simd aligned(g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yyy_x_xx, g_x_yyy_x_xy, g_x_yyy_x_xz, g_x_yyy_x_yy, g_x_yyy_x_yz, g_x_yyy_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz, g_xzz_yyy_x_xx, g_xzz_yyy_x_xy, g_xzz_yyy_x_xz, g_xzz_yyy_x_yy, g_xzz_yyy_x_yz, g_xzz_yyy_x_zz, g_z_y_0_0_xz_yy_x_xx, g_z_y_0_0_xz_yy_x_xy, g_z_y_0_0_xz_yy_x_xz, g_z_y_0_0_xz_yy_x_yy, g_z_y_0_0_xz_yy_x_yz, g_z_y_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yy_x_xx[i] = 2.0 * g_x_y_x_xx[i] - 2.0 * g_x_yyy_x_xx[i] * b_exp - 4.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_x_xy[i] = 2.0 * g_x_y_x_xy[i] - 2.0 * g_x_yyy_x_xy[i] * b_exp - 4.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_x_xz[i] = 2.0 * g_x_y_x_xz[i] - 2.0 * g_x_yyy_x_xz[i] * b_exp - 4.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_x_yy[i] = 2.0 * g_x_y_x_yy[i] - 2.0 * g_x_yyy_x_yy[i] * b_exp - 4.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_x_yz[i] = 2.0 * g_x_y_x_yz[i] - 2.0 * g_x_yyy_x_yz[i] * b_exp - 4.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_x_zz[i] = 2.0 * g_x_y_x_zz[i] - 2.0 * g_x_yyy_x_zz[i] * b_exp - 4.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4812-4818)

    #pragma omp simd aligned(g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yyy_y_xx, g_x_yyy_y_xy, g_x_yyy_y_xz, g_x_yyy_y_yy, g_x_yyy_y_yz, g_x_yyy_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz, g_xzz_yyy_y_xx, g_xzz_yyy_y_xy, g_xzz_yyy_y_xz, g_xzz_yyy_y_yy, g_xzz_yyy_y_yz, g_xzz_yyy_y_zz, g_z_y_0_0_xz_yy_y_xx, g_z_y_0_0_xz_yy_y_xy, g_z_y_0_0_xz_yy_y_xz, g_z_y_0_0_xz_yy_y_yy, g_z_y_0_0_xz_yy_y_yz, g_z_y_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yy_y_xx[i] = 2.0 * g_x_y_y_xx[i] - 2.0 * g_x_yyy_y_xx[i] * b_exp - 4.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_y_xy[i] = 2.0 * g_x_y_y_xy[i] - 2.0 * g_x_yyy_y_xy[i] * b_exp - 4.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_y_xz[i] = 2.0 * g_x_y_y_xz[i] - 2.0 * g_x_yyy_y_xz[i] * b_exp - 4.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_y_yy[i] = 2.0 * g_x_y_y_yy[i] - 2.0 * g_x_yyy_y_yy[i] * b_exp - 4.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_y_yz[i] = 2.0 * g_x_y_y_yz[i] - 2.0 * g_x_yyy_y_yz[i] * b_exp - 4.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_y_zz[i] = 2.0 * g_x_y_y_zz[i] - 2.0 * g_x_yyy_y_zz[i] * b_exp - 4.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4818-4824)

    #pragma omp simd aligned(g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yyy_z_xx, g_x_yyy_z_xy, g_x_yyy_z_xz, g_x_yyy_z_yy, g_x_yyy_z_yz, g_x_yyy_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz, g_xzz_yyy_z_xx, g_xzz_yyy_z_xy, g_xzz_yyy_z_xz, g_xzz_yyy_z_yy, g_xzz_yyy_z_yz, g_xzz_yyy_z_zz, g_z_y_0_0_xz_yy_z_xx, g_z_y_0_0_xz_yy_z_xy, g_z_y_0_0_xz_yy_z_xz, g_z_y_0_0_xz_yy_z_yy, g_z_y_0_0_xz_yy_z_yz, g_z_y_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yy_z_xx[i] = 2.0 * g_x_y_z_xx[i] - 2.0 * g_x_yyy_z_xx[i] * b_exp - 4.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_z_xy[i] = 2.0 * g_x_y_z_xy[i] - 2.0 * g_x_yyy_z_xy[i] * b_exp - 4.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_z_xz[i] = 2.0 * g_x_y_z_xz[i] - 2.0 * g_x_yyy_z_xz[i] * b_exp - 4.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_z_yy[i] = 2.0 * g_x_y_z_yy[i] - 2.0 * g_x_yyy_z_yy[i] * b_exp - 4.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_z_yz[i] = 2.0 * g_x_y_z_yz[i] - 2.0 * g_x_yyy_z_yz[i] * b_exp - 4.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yy_z_zz[i] = 2.0 * g_x_y_z_zz[i] - 2.0 * g_x_yyy_z_zz[i] * b_exp - 4.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4824-4830)

    #pragma omp simd aligned(g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_xzz_yyz_x_xx, g_xzz_yyz_x_xy, g_xzz_yyz_x_xz, g_xzz_yyz_x_yy, g_xzz_yyz_x_yz, g_xzz_yyz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz, g_z_y_0_0_xz_yz_x_xx, g_z_y_0_0_xz_yz_x_xy, g_z_y_0_0_xz_yz_x_xz, g_z_y_0_0_xz_yz_x_yy, g_z_y_0_0_xz_yz_x_yz, g_z_y_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yz_x_xx[i] = g_x_z_x_xx[i] - 2.0 * g_x_yyz_x_xx[i] * b_exp - 2.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_x_xy[i] = g_x_z_x_xy[i] - 2.0 * g_x_yyz_x_xy[i] * b_exp - 2.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_x_xz[i] = g_x_z_x_xz[i] - 2.0 * g_x_yyz_x_xz[i] * b_exp - 2.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_x_yy[i] = g_x_z_x_yy[i] - 2.0 * g_x_yyz_x_yy[i] * b_exp - 2.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_x_yz[i] = g_x_z_x_yz[i] - 2.0 * g_x_yyz_x_yz[i] * b_exp - 2.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_x_zz[i] = g_x_z_x_zz[i] - 2.0 * g_x_yyz_x_zz[i] * b_exp - 2.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4830-4836)

    #pragma omp simd aligned(g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_xzz_yyz_y_xx, g_xzz_yyz_y_xy, g_xzz_yyz_y_xz, g_xzz_yyz_y_yy, g_xzz_yyz_y_yz, g_xzz_yyz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz, g_z_y_0_0_xz_yz_y_xx, g_z_y_0_0_xz_yz_y_xy, g_z_y_0_0_xz_yz_y_xz, g_z_y_0_0_xz_yz_y_yy, g_z_y_0_0_xz_yz_y_yz, g_z_y_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yz_y_xx[i] = g_x_z_y_xx[i] - 2.0 * g_x_yyz_y_xx[i] * b_exp - 2.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_y_xy[i] = g_x_z_y_xy[i] - 2.0 * g_x_yyz_y_xy[i] * b_exp - 2.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_y_xz[i] = g_x_z_y_xz[i] - 2.0 * g_x_yyz_y_xz[i] * b_exp - 2.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_y_yy[i] = g_x_z_y_yy[i] - 2.0 * g_x_yyz_y_yy[i] * b_exp - 2.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_y_yz[i] = g_x_z_y_yz[i] - 2.0 * g_x_yyz_y_yz[i] * b_exp - 2.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_y_zz[i] = g_x_z_y_zz[i] - 2.0 * g_x_yyz_y_zz[i] * b_exp - 2.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4836-4842)

    #pragma omp simd aligned(g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_xzz_yyz_z_xx, g_xzz_yyz_z_xy, g_xzz_yyz_z_xz, g_xzz_yyz_z_yy, g_xzz_yyz_z_yz, g_xzz_yyz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz, g_z_y_0_0_xz_yz_z_xx, g_z_y_0_0_xz_yz_z_xy, g_z_y_0_0_xz_yz_z_xz, g_z_y_0_0_xz_yz_z_yy, g_z_y_0_0_xz_yz_z_yz, g_z_y_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_yz_z_xx[i] = g_x_z_z_xx[i] - 2.0 * g_x_yyz_z_xx[i] * b_exp - 2.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_z_xy[i] = g_x_z_z_xy[i] - 2.0 * g_x_yyz_z_xy[i] * b_exp - 2.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_z_xz[i] = g_x_z_z_xz[i] - 2.0 * g_x_yyz_z_xz[i] * b_exp - 2.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_z_yy[i] = g_x_z_z_yy[i] - 2.0 * g_x_yyz_z_yy[i] * b_exp - 2.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_z_yz[i] = g_x_z_z_yz[i] - 2.0 * g_x_yyz_z_yz[i] * b_exp - 2.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_yz_z_zz[i] = g_x_z_z_zz[i] - 2.0 * g_x_yyz_z_zz[i] * b_exp - 2.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4842-4848)

    #pragma omp simd aligned(g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_xzz_yzz_x_xx, g_xzz_yzz_x_xy, g_xzz_yzz_x_xz, g_xzz_yzz_x_yy, g_xzz_yzz_x_yz, g_xzz_yzz_x_zz, g_z_y_0_0_xz_zz_x_xx, g_z_y_0_0_xz_zz_x_xy, g_z_y_0_0_xz_zz_x_xz, g_z_y_0_0_xz_zz_x_yy, g_z_y_0_0_xz_zz_x_yz, g_z_y_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_zz_x_xx[i] = -2.0 * g_x_yzz_x_xx[i] * b_exp + 4.0 * g_xzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_x_xy[i] = -2.0 * g_x_yzz_x_xy[i] * b_exp + 4.0 * g_xzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_x_xz[i] = -2.0 * g_x_yzz_x_xz[i] * b_exp + 4.0 * g_xzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_x_yy[i] = -2.0 * g_x_yzz_x_yy[i] * b_exp + 4.0 * g_xzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_x_yz[i] = -2.0 * g_x_yzz_x_yz[i] * b_exp + 4.0 * g_xzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_x_zz[i] = -2.0 * g_x_yzz_x_zz[i] * b_exp + 4.0 * g_xzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4848-4854)

    #pragma omp simd aligned(g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_xzz_yzz_y_xx, g_xzz_yzz_y_xy, g_xzz_yzz_y_xz, g_xzz_yzz_y_yy, g_xzz_yzz_y_yz, g_xzz_yzz_y_zz, g_z_y_0_0_xz_zz_y_xx, g_z_y_0_0_xz_zz_y_xy, g_z_y_0_0_xz_zz_y_xz, g_z_y_0_0_xz_zz_y_yy, g_z_y_0_0_xz_zz_y_yz, g_z_y_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_zz_y_xx[i] = -2.0 * g_x_yzz_y_xx[i] * b_exp + 4.0 * g_xzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_y_xy[i] = -2.0 * g_x_yzz_y_xy[i] * b_exp + 4.0 * g_xzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_y_xz[i] = -2.0 * g_x_yzz_y_xz[i] * b_exp + 4.0 * g_xzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_y_yy[i] = -2.0 * g_x_yzz_y_yy[i] * b_exp + 4.0 * g_xzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_y_yz[i] = -2.0 * g_x_yzz_y_yz[i] * b_exp + 4.0 * g_xzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_y_zz[i] = -2.0 * g_x_yzz_y_zz[i] * b_exp + 4.0 * g_xzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4854-4860)

    #pragma omp simd aligned(g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_xzz_yzz_z_xx, g_xzz_yzz_z_xy, g_xzz_yzz_z_xz, g_xzz_yzz_z_yy, g_xzz_yzz_z_yz, g_xzz_yzz_z_zz, g_z_y_0_0_xz_zz_z_xx, g_z_y_0_0_xz_zz_z_xy, g_z_y_0_0_xz_zz_z_xz, g_z_y_0_0_xz_zz_z_yy, g_z_y_0_0_xz_zz_z_yz, g_z_y_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_xz_zz_z_xx[i] = -2.0 * g_x_yzz_z_xx[i] * b_exp + 4.0 * g_xzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_z_xy[i] = -2.0 * g_x_yzz_z_xy[i] * b_exp + 4.0 * g_xzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_z_xz[i] = -2.0 * g_x_yzz_z_xz[i] * b_exp + 4.0 * g_xzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_z_yy[i] = -2.0 * g_x_yzz_z_yy[i] * b_exp + 4.0 * g_xzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_z_yz[i] = -2.0 * g_x_yzz_z_yz[i] * b_exp + 4.0 * g_xzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_xz_zz_z_zz[i] = -2.0 * g_x_yzz_z_zz[i] * b_exp + 4.0 * g_xzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4860-4866)

    #pragma omp simd aligned(g_yyz_xxy_x_xx, g_yyz_xxy_x_xy, g_yyz_xxy_x_xz, g_yyz_xxy_x_yy, g_yyz_xxy_x_yz, g_yyz_xxy_x_zz, g_z_y_0_0_yy_xx_x_xx, g_z_y_0_0_yy_xx_x_xy, g_z_y_0_0_yy_xx_x_xz, g_z_y_0_0_yy_xx_x_yy, g_z_y_0_0_yy_xx_x_yz, g_z_y_0_0_yy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xx_x_xx[i] = 4.0 * g_yyz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_x_xy[i] = 4.0 * g_yyz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_x_xz[i] = 4.0 * g_yyz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_x_yy[i] = 4.0 * g_yyz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_x_yz[i] = 4.0 * g_yyz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_x_zz[i] = 4.0 * g_yyz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4866-4872)

    #pragma omp simd aligned(g_yyz_xxy_y_xx, g_yyz_xxy_y_xy, g_yyz_xxy_y_xz, g_yyz_xxy_y_yy, g_yyz_xxy_y_yz, g_yyz_xxy_y_zz, g_z_y_0_0_yy_xx_y_xx, g_z_y_0_0_yy_xx_y_xy, g_z_y_0_0_yy_xx_y_xz, g_z_y_0_0_yy_xx_y_yy, g_z_y_0_0_yy_xx_y_yz, g_z_y_0_0_yy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xx_y_xx[i] = 4.0 * g_yyz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_y_xy[i] = 4.0 * g_yyz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_y_xz[i] = 4.0 * g_yyz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_y_yy[i] = 4.0 * g_yyz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_y_yz[i] = 4.0 * g_yyz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_y_zz[i] = 4.0 * g_yyz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4872-4878)

    #pragma omp simd aligned(g_yyz_xxy_z_xx, g_yyz_xxy_z_xy, g_yyz_xxy_z_xz, g_yyz_xxy_z_yy, g_yyz_xxy_z_yz, g_yyz_xxy_z_zz, g_z_y_0_0_yy_xx_z_xx, g_z_y_0_0_yy_xx_z_xy, g_z_y_0_0_yy_xx_z_xz, g_z_y_0_0_yy_xx_z_yy, g_z_y_0_0_yy_xx_z_yz, g_z_y_0_0_yy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xx_z_xx[i] = 4.0 * g_yyz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_z_xy[i] = 4.0 * g_yyz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_z_xz[i] = 4.0 * g_yyz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_z_yy[i] = 4.0 * g_yyz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_z_yz[i] = 4.0 * g_yyz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xx_z_zz[i] = 4.0 * g_yyz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4878-4884)

    #pragma omp simd aligned(g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xyy_x_xx, g_yyz_xyy_x_xy, g_yyz_xyy_x_xz, g_yyz_xyy_x_yy, g_yyz_xyy_x_yz, g_yyz_xyy_x_zz, g_z_y_0_0_yy_xy_x_xx, g_z_y_0_0_yy_xy_x_xy, g_z_y_0_0_yy_xy_x_xz, g_z_y_0_0_yy_xy_x_yy, g_z_y_0_0_yy_xy_x_yz, g_z_y_0_0_yy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xy_x_xx[i] = -2.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_x_xy[i] = -2.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_x_xz[i] = -2.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_x_yy[i] = -2.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_x_yz[i] = -2.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_x_zz[i] = -2.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4884-4890)

    #pragma omp simd aligned(g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xyy_y_xx, g_yyz_xyy_y_xy, g_yyz_xyy_y_xz, g_yyz_xyy_y_yy, g_yyz_xyy_y_yz, g_yyz_xyy_y_zz, g_z_y_0_0_yy_xy_y_xx, g_z_y_0_0_yy_xy_y_xy, g_z_y_0_0_yy_xy_y_xz, g_z_y_0_0_yy_xy_y_yy, g_z_y_0_0_yy_xy_y_yz, g_z_y_0_0_yy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xy_y_xx[i] = -2.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_y_xy[i] = -2.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_y_xz[i] = -2.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_y_yy[i] = -2.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_y_yz[i] = -2.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_y_zz[i] = -2.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4890-4896)

    #pragma omp simd aligned(g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xyy_z_xx, g_yyz_xyy_z_xy, g_yyz_xyy_z_xz, g_yyz_xyy_z_yy, g_yyz_xyy_z_yz, g_yyz_xyy_z_zz, g_z_y_0_0_yy_xy_z_xx, g_z_y_0_0_yy_xy_z_xy, g_z_y_0_0_yy_xy_z_xz, g_z_y_0_0_yy_xy_z_yy, g_z_y_0_0_yy_xy_z_yz, g_z_y_0_0_yy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xy_z_xx[i] = -2.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_z_xy[i] = -2.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_z_xz[i] = -2.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_z_yy[i] = -2.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_z_yz[i] = -2.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xy_z_zz[i] = -2.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4896-4902)

    #pragma omp simd aligned(g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_y_0_0_yy_xz_x_xx, g_z_y_0_0_yy_xz_x_xy, g_z_y_0_0_yy_xz_x_xz, g_z_y_0_0_yy_xz_x_yy, g_z_y_0_0_yy_xz_x_yz, g_z_y_0_0_yy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xz_x_xx[i] = 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_x_xy[i] = 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_x_xz[i] = 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_x_yy[i] = 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_x_yz[i] = 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_x_zz[i] = 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4902-4908)

    #pragma omp simd aligned(g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_y_0_0_yy_xz_y_xx, g_z_y_0_0_yy_xz_y_xy, g_z_y_0_0_yy_xz_y_xz, g_z_y_0_0_yy_xz_y_yy, g_z_y_0_0_yy_xz_y_yz, g_z_y_0_0_yy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xz_y_xx[i] = 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_y_xy[i] = 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_y_xz[i] = 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_y_yy[i] = 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_y_yz[i] = 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_y_zz[i] = 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4908-4914)

    #pragma omp simd aligned(g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_y_0_0_yy_xz_z_xx, g_z_y_0_0_yy_xz_z_xy, g_z_y_0_0_yy_xz_z_xz, g_z_y_0_0_yy_xz_z_yy, g_z_y_0_0_yy_xz_z_yz, g_z_y_0_0_yy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_xz_z_xx[i] = 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_z_xy[i] = 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_z_xz[i] = 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_z_yy[i] = 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_z_yz[i] = 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_xz_z_zz[i] = 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4914-4920)

    #pragma omp simd aligned(g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_yyz_yyy_x_xx, g_yyz_yyy_x_xy, g_yyz_yyy_x_xz, g_yyz_yyy_x_yy, g_yyz_yyy_x_yz, g_yyz_yyy_x_zz, g_z_y_0_0_yy_yy_x_xx, g_z_y_0_0_yy_yy_x_xy, g_z_y_0_0_yy_yy_x_xz, g_z_y_0_0_yy_yy_x_yy, g_z_y_0_0_yy_yy_x_yz, g_z_y_0_0_yy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yy_x_xx[i] = -4.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_x_xy[i] = -4.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_x_xz[i] = -4.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_x_yy[i] = -4.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_x_yz[i] = -4.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_x_zz[i] = -4.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4920-4926)

    #pragma omp simd aligned(g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_yyz_yyy_y_xx, g_yyz_yyy_y_xy, g_yyz_yyy_y_xz, g_yyz_yyy_y_yy, g_yyz_yyy_y_yz, g_yyz_yyy_y_zz, g_z_y_0_0_yy_yy_y_xx, g_z_y_0_0_yy_yy_y_xy, g_z_y_0_0_yy_yy_y_xz, g_z_y_0_0_yy_yy_y_yy, g_z_y_0_0_yy_yy_y_yz, g_z_y_0_0_yy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yy_y_xx[i] = -4.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_y_xy[i] = -4.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_y_xz[i] = -4.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_y_yy[i] = -4.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_y_yz[i] = -4.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_y_zz[i] = -4.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4926-4932)

    #pragma omp simd aligned(g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_yyz_yyy_z_xx, g_yyz_yyy_z_xy, g_yyz_yyy_z_xz, g_yyz_yyy_z_yy, g_yyz_yyy_z_yz, g_yyz_yyy_z_zz, g_z_y_0_0_yy_yy_z_xx, g_z_y_0_0_yy_yy_z_xy, g_z_y_0_0_yy_yy_z_xz, g_z_y_0_0_yy_yy_z_yy, g_z_y_0_0_yy_yy_z_yz, g_z_y_0_0_yy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yy_z_xx[i] = -4.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_z_xy[i] = -4.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_z_xz[i] = -4.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_z_yy[i] = -4.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_z_yz[i] = -4.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yy_z_zz[i] = -4.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4932-4938)

    #pragma omp simd aligned(g_yyz_yyz_x_xx, g_yyz_yyz_x_xy, g_yyz_yyz_x_xz, g_yyz_yyz_x_yy, g_yyz_yyz_x_yz, g_yyz_yyz_x_zz, g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_z_y_0_0_yy_yz_x_xx, g_z_y_0_0_yy_yz_x_xy, g_z_y_0_0_yy_yz_x_xz, g_z_y_0_0_yy_yz_x_yy, g_z_y_0_0_yy_yz_x_yz, g_z_y_0_0_yy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yz_x_xx[i] = -2.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_x_xy[i] = -2.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_x_xz[i] = -2.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_x_yy[i] = -2.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_x_yz[i] = -2.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_x_zz[i] = -2.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4938-4944)

    #pragma omp simd aligned(g_yyz_yyz_y_xx, g_yyz_yyz_y_xy, g_yyz_yyz_y_xz, g_yyz_yyz_y_yy, g_yyz_yyz_y_yz, g_yyz_yyz_y_zz, g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_z_y_0_0_yy_yz_y_xx, g_z_y_0_0_yy_yz_y_xy, g_z_y_0_0_yy_yz_y_xz, g_z_y_0_0_yy_yz_y_yy, g_z_y_0_0_yy_yz_y_yz, g_z_y_0_0_yy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yz_y_xx[i] = -2.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_y_xy[i] = -2.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_y_xz[i] = -2.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_y_yy[i] = -2.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_y_yz[i] = -2.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_y_zz[i] = -2.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4944-4950)

    #pragma omp simd aligned(g_yyz_yyz_z_xx, g_yyz_yyz_z_xy, g_yyz_yyz_z_xz, g_yyz_yyz_z_yy, g_yyz_yyz_z_yz, g_yyz_yyz_z_zz, g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_z_y_0_0_yy_yz_z_xx, g_z_y_0_0_yy_yz_z_xy, g_z_y_0_0_yy_yz_z_xz, g_z_y_0_0_yy_yz_z_yy, g_z_y_0_0_yy_yz_z_yz, g_z_y_0_0_yy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_yz_z_xx[i] = -2.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_z_xy[i] = -2.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_z_xz[i] = -2.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_z_yy[i] = -2.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_z_yz[i] = -2.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_yz_z_zz[i] = -2.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4950-4956)

    #pragma omp simd aligned(g_yyz_yzz_x_xx, g_yyz_yzz_x_xy, g_yyz_yzz_x_xz, g_yyz_yzz_x_yy, g_yyz_yzz_x_yz, g_yyz_yzz_x_zz, g_z_y_0_0_yy_zz_x_xx, g_z_y_0_0_yy_zz_x_xy, g_z_y_0_0_yy_zz_x_xz, g_z_y_0_0_yy_zz_x_yy, g_z_y_0_0_yy_zz_x_yz, g_z_y_0_0_yy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_zz_x_xx[i] = 4.0 * g_yyz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_x_xy[i] = 4.0 * g_yyz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_x_xz[i] = 4.0 * g_yyz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_x_yy[i] = 4.0 * g_yyz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_x_yz[i] = 4.0 * g_yyz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_x_zz[i] = 4.0 * g_yyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4956-4962)

    #pragma omp simd aligned(g_yyz_yzz_y_xx, g_yyz_yzz_y_xy, g_yyz_yzz_y_xz, g_yyz_yzz_y_yy, g_yyz_yzz_y_yz, g_yyz_yzz_y_zz, g_z_y_0_0_yy_zz_y_xx, g_z_y_0_0_yy_zz_y_xy, g_z_y_0_0_yy_zz_y_xz, g_z_y_0_0_yy_zz_y_yy, g_z_y_0_0_yy_zz_y_yz, g_z_y_0_0_yy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_zz_y_xx[i] = 4.0 * g_yyz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_y_xy[i] = 4.0 * g_yyz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_y_xz[i] = 4.0 * g_yyz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_y_yy[i] = 4.0 * g_yyz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_y_yz[i] = 4.0 * g_yyz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_y_zz[i] = 4.0 * g_yyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4962-4968)

    #pragma omp simd aligned(g_yyz_yzz_z_xx, g_yyz_yzz_z_xy, g_yyz_yzz_z_xz, g_yyz_yzz_z_yy, g_yyz_yzz_z_yz, g_yyz_yzz_z_zz, g_z_y_0_0_yy_zz_z_xx, g_z_y_0_0_yy_zz_z_xy, g_z_y_0_0_yy_zz_z_xz, g_z_y_0_0_yy_zz_z_yy, g_z_y_0_0_yy_zz_z_yz, g_z_y_0_0_yy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yy_zz_z_xx[i] = 4.0 * g_yyz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_z_xy[i] = 4.0 * g_yyz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_z_xz[i] = 4.0 * g_yyz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_z_yy[i] = 4.0 * g_yyz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_z_yz[i] = 4.0 * g_yyz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yy_zz_z_zz[i] = 4.0 * g_yyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4968-4974)

    #pragma omp simd aligned(g_y_xxy_x_xx, g_y_xxy_x_xy, g_y_xxy_x_xz, g_y_xxy_x_yy, g_y_xxy_x_yz, g_y_xxy_x_zz, g_yzz_xxy_x_xx, g_yzz_xxy_x_xy, g_yzz_xxy_x_xz, g_yzz_xxy_x_yy, g_yzz_xxy_x_yz, g_yzz_xxy_x_zz, g_z_y_0_0_yz_xx_x_xx, g_z_y_0_0_yz_xx_x_xy, g_z_y_0_0_yz_xx_x_xz, g_z_y_0_0_yz_xx_x_yy, g_z_y_0_0_yz_xx_x_yz, g_z_y_0_0_yz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xx_x_xx[i] = -2.0 * g_y_xxy_x_xx[i] * b_exp + 4.0 * g_yzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_x_xy[i] = -2.0 * g_y_xxy_x_xy[i] * b_exp + 4.0 * g_yzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_x_xz[i] = -2.0 * g_y_xxy_x_xz[i] * b_exp + 4.0 * g_yzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_x_yy[i] = -2.0 * g_y_xxy_x_yy[i] * b_exp + 4.0 * g_yzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_x_yz[i] = -2.0 * g_y_xxy_x_yz[i] * b_exp + 4.0 * g_yzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_x_zz[i] = -2.0 * g_y_xxy_x_zz[i] * b_exp + 4.0 * g_yzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4974-4980)

    #pragma omp simd aligned(g_y_xxy_y_xx, g_y_xxy_y_xy, g_y_xxy_y_xz, g_y_xxy_y_yy, g_y_xxy_y_yz, g_y_xxy_y_zz, g_yzz_xxy_y_xx, g_yzz_xxy_y_xy, g_yzz_xxy_y_xz, g_yzz_xxy_y_yy, g_yzz_xxy_y_yz, g_yzz_xxy_y_zz, g_z_y_0_0_yz_xx_y_xx, g_z_y_0_0_yz_xx_y_xy, g_z_y_0_0_yz_xx_y_xz, g_z_y_0_0_yz_xx_y_yy, g_z_y_0_0_yz_xx_y_yz, g_z_y_0_0_yz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xx_y_xx[i] = -2.0 * g_y_xxy_y_xx[i] * b_exp + 4.0 * g_yzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_y_xy[i] = -2.0 * g_y_xxy_y_xy[i] * b_exp + 4.0 * g_yzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_y_xz[i] = -2.0 * g_y_xxy_y_xz[i] * b_exp + 4.0 * g_yzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_y_yy[i] = -2.0 * g_y_xxy_y_yy[i] * b_exp + 4.0 * g_yzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_y_yz[i] = -2.0 * g_y_xxy_y_yz[i] * b_exp + 4.0 * g_yzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_y_zz[i] = -2.0 * g_y_xxy_y_zz[i] * b_exp + 4.0 * g_yzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4980-4986)

    #pragma omp simd aligned(g_y_xxy_z_xx, g_y_xxy_z_xy, g_y_xxy_z_xz, g_y_xxy_z_yy, g_y_xxy_z_yz, g_y_xxy_z_zz, g_yzz_xxy_z_xx, g_yzz_xxy_z_xy, g_yzz_xxy_z_xz, g_yzz_xxy_z_yy, g_yzz_xxy_z_yz, g_yzz_xxy_z_zz, g_z_y_0_0_yz_xx_z_xx, g_z_y_0_0_yz_xx_z_xy, g_z_y_0_0_yz_xx_z_xz, g_z_y_0_0_yz_xx_z_yy, g_z_y_0_0_yz_xx_z_yz, g_z_y_0_0_yz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xx_z_xx[i] = -2.0 * g_y_xxy_z_xx[i] * b_exp + 4.0 * g_yzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_z_xy[i] = -2.0 * g_y_xxy_z_xy[i] * b_exp + 4.0 * g_yzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_z_xz[i] = -2.0 * g_y_xxy_z_xz[i] * b_exp + 4.0 * g_yzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_z_yy[i] = -2.0 * g_y_xxy_z_yy[i] * b_exp + 4.0 * g_yzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_z_yz[i] = -2.0 * g_y_xxy_z_yz[i] * b_exp + 4.0 * g_yzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xx_z_zz[i] = -2.0 * g_y_xxy_z_zz[i] * b_exp + 4.0 * g_yzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (4986-4992)

    #pragma omp simd aligned(g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xyy_x_xx, g_y_xyy_x_xy, g_y_xyy_x_xz, g_y_xyy_x_yy, g_y_xyy_x_yz, g_y_xyy_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xyy_x_xx, g_yzz_xyy_x_xy, g_yzz_xyy_x_xz, g_yzz_xyy_x_yy, g_yzz_xyy_x_yz, g_yzz_xyy_x_zz, g_z_y_0_0_yz_xy_x_xx, g_z_y_0_0_yz_xy_x_xy, g_z_y_0_0_yz_xy_x_xz, g_z_y_0_0_yz_xy_x_yy, g_z_y_0_0_yz_xy_x_yz, g_z_y_0_0_yz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xy_x_xx[i] = g_y_x_x_xx[i] - 2.0 * g_y_xyy_x_xx[i] * b_exp - 2.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_x_xy[i] = g_y_x_x_xy[i] - 2.0 * g_y_xyy_x_xy[i] * b_exp - 2.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_x_xz[i] = g_y_x_x_xz[i] - 2.0 * g_y_xyy_x_xz[i] * b_exp - 2.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_x_yy[i] = g_y_x_x_yy[i] - 2.0 * g_y_xyy_x_yy[i] * b_exp - 2.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_x_yz[i] = g_y_x_x_yz[i] - 2.0 * g_y_xyy_x_yz[i] * b_exp - 2.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_x_zz[i] = g_y_x_x_zz[i] - 2.0 * g_y_xyy_x_zz[i] * b_exp - 2.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (4992-4998)

    #pragma omp simd aligned(g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xyy_y_xx, g_y_xyy_y_xy, g_y_xyy_y_xz, g_y_xyy_y_yy, g_y_xyy_y_yz, g_y_xyy_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xyy_y_xx, g_yzz_xyy_y_xy, g_yzz_xyy_y_xz, g_yzz_xyy_y_yy, g_yzz_xyy_y_yz, g_yzz_xyy_y_zz, g_z_y_0_0_yz_xy_y_xx, g_z_y_0_0_yz_xy_y_xy, g_z_y_0_0_yz_xy_y_xz, g_z_y_0_0_yz_xy_y_yy, g_z_y_0_0_yz_xy_y_yz, g_z_y_0_0_yz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xy_y_xx[i] = g_y_x_y_xx[i] - 2.0 * g_y_xyy_y_xx[i] * b_exp - 2.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_y_xy[i] = g_y_x_y_xy[i] - 2.0 * g_y_xyy_y_xy[i] * b_exp - 2.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_y_xz[i] = g_y_x_y_xz[i] - 2.0 * g_y_xyy_y_xz[i] * b_exp - 2.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_y_yy[i] = g_y_x_y_yy[i] - 2.0 * g_y_xyy_y_yy[i] * b_exp - 2.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_y_yz[i] = g_y_x_y_yz[i] - 2.0 * g_y_xyy_y_yz[i] * b_exp - 2.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_y_zz[i] = g_y_x_y_zz[i] - 2.0 * g_y_xyy_y_zz[i] * b_exp - 2.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (4998-5004)

    #pragma omp simd aligned(g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xyy_z_xx, g_y_xyy_z_xy, g_y_xyy_z_xz, g_y_xyy_z_yy, g_y_xyy_z_yz, g_y_xyy_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xyy_z_xx, g_yzz_xyy_z_xy, g_yzz_xyy_z_xz, g_yzz_xyy_z_yy, g_yzz_xyy_z_yz, g_yzz_xyy_z_zz, g_z_y_0_0_yz_xy_z_xx, g_z_y_0_0_yz_xy_z_xy, g_z_y_0_0_yz_xy_z_xz, g_z_y_0_0_yz_xy_z_yy, g_z_y_0_0_yz_xy_z_yz, g_z_y_0_0_yz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xy_z_xx[i] = g_y_x_z_xx[i] - 2.0 * g_y_xyy_z_xx[i] * b_exp - 2.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_z_xy[i] = g_y_x_z_xy[i] - 2.0 * g_y_xyy_z_xy[i] * b_exp - 2.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_z_xz[i] = g_y_x_z_xz[i] - 2.0 * g_y_xyy_z_xz[i] * b_exp - 2.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_z_yy[i] = g_y_x_z_yy[i] - 2.0 * g_y_xyy_z_yy[i] * b_exp - 2.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_z_yz[i] = g_y_x_z_yz[i] - 2.0 * g_y_xyy_z_yz[i] * b_exp - 2.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xy_z_zz[i] = g_y_x_z_zz[i] - 2.0 * g_y_xyy_z_zz[i] * b_exp - 2.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5004-5010)

    #pragma omp simd aligned(g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz, g_z_y_0_0_yz_xz_x_xx, g_z_y_0_0_yz_xz_x_xy, g_z_y_0_0_yz_xz_x_xz, g_z_y_0_0_yz_xz_x_yy, g_z_y_0_0_yz_xz_x_yz, g_z_y_0_0_yz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xz_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5010-5016)

    #pragma omp simd aligned(g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz, g_z_y_0_0_yz_xz_y_xx, g_z_y_0_0_yz_xz_y_xy, g_z_y_0_0_yz_xz_y_xz, g_z_y_0_0_yz_xz_y_yy, g_z_y_0_0_yz_xz_y_yz, g_z_y_0_0_yz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xz_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5016-5022)

    #pragma omp simd aligned(g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz, g_z_y_0_0_yz_xz_z_xx, g_z_y_0_0_yz_xz_z_xy, g_z_y_0_0_yz_xz_z_xz, g_z_y_0_0_yz_xz_z_yy, g_z_y_0_0_yz_xz_z_yz, g_z_y_0_0_yz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_xz_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_xz_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5022-5028)

    #pragma omp simd aligned(g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yyy_x_xx, g_y_yyy_x_xy, g_y_yyy_x_xz, g_y_yyy_x_yy, g_y_yyy_x_yz, g_y_yyy_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz, g_yzz_yyy_x_xx, g_yzz_yyy_x_xy, g_yzz_yyy_x_xz, g_yzz_yyy_x_yy, g_yzz_yyy_x_yz, g_yzz_yyy_x_zz, g_z_y_0_0_yz_yy_x_xx, g_z_y_0_0_yz_yy_x_xy, g_z_y_0_0_yz_yy_x_xz, g_z_y_0_0_yz_yy_x_yy, g_z_y_0_0_yz_yy_x_yz, g_z_y_0_0_yz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yy_x_xx[i] = 2.0 * g_y_y_x_xx[i] - 2.0 * g_y_yyy_x_xx[i] * b_exp - 4.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_x_xy[i] = 2.0 * g_y_y_x_xy[i] - 2.0 * g_y_yyy_x_xy[i] * b_exp - 4.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_x_xz[i] = 2.0 * g_y_y_x_xz[i] - 2.0 * g_y_yyy_x_xz[i] * b_exp - 4.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_x_yy[i] = 2.0 * g_y_y_x_yy[i] - 2.0 * g_y_yyy_x_yy[i] * b_exp - 4.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_x_yz[i] = 2.0 * g_y_y_x_yz[i] - 2.0 * g_y_yyy_x_yz[i] * b_exp - 4.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_x_zz[i] = 2.0 * g_y_y_x_zz[i] - 2.0 * g_y_yyy_x_zz[i] * b_exp - 4.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5028-5034)

    #pragma omp simd aligned(g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yyy_y_xx, g_y_yyy_y_xy, g_y_yyy_y_xz, g_y_yyy_y_yy, g_y_yyy_y_yz, g_y_yyy_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz, g_yzz_yyy_y_xx, g_yzz_yyy_y_xy, g_yzz_yyy_y_xz, g_yzz_yyy_y_yy, g_yzz_yyy_y_yz, g_yzz_yyy_y_zz, g_z_y_0_0_yz_yy_y_xx, g_z_y_0_0_yz_yy_y_xy, g_z_y_0_0_yz_yy_y_xz, g_z_y_0_0_yz_yy_y_yy, g_z_y_0_0_yz_yy_y_yz, g_z_y_0_0_yz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yy_y_xx[i] = 2.0 * g_y_y_y_xx[i] - 2.0 * g_y_yyy_y_xx[i] * b_exp - 4.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_y_xy[i] = 2.0 * g_y_y_y_xy[i] - 2.0 * g_y_yyy_y_xy[i] * b_exp - 4.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_y_xz[i] = 2.0 * g_y_y_y_xz[i] - 2.0 * g_y_yyy_y_xz[i] * b_exp - 4.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_y_yy[i] = 2.0 * g_y_y_y_yy[i] - 2.0 * g_y_yyy_y_yy[i] * b_exp - 4.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_y_yz[i] = 2.0 * g_y_y_y_yz[i] - 2.0 * g_y_yyy_y_yz[i] * b_exp - 4.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_y_zz[i] = 2.0 * g_y_y_y_zz[i] - 2.0 * g_y_yyy_y_zz[i] * b_exp - 4.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5034-5040)

    #pragma omp simd aligned(g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yyy_z_xx, g_y_yyy_z_xy, g_y_yyy_z_xz, g_y_yyy_z_yy, g_y_yyy_z_yz, g_y_yyy_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz, g_yzz_yyy_z_xx, g_yzz_yyy_z_xy, g_yzz_yyy_z_xz, g_yzz_yyy_z_yy, g_yzz_yyy_z_yz, g_yzz_yyy_z_zz, g_z_y_0_0_yz_yy_z_xx, g_z_y_0_0_yz_yy_z_xy, g_z_y_0_0_yz_yy_z_xz, g_z_y_0_0_yz_yy_z_yy, g_z_y_0_0_yz_yy_z_yz, g_z_y_0_0_yz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yy_z_xx[i] = 2.0 * g_y_y_z_xx[i] - 2.0 * g_y_yyy_z_xx[i] * b_exp - 4.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_z_xy[i] = 2.0 * g_y_y_z_xy[i] - 2.0 * g_y_yyy_z_xy[i] * b_exp - 4.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_z_xz[i] = 2.0 * g_y_y_z_xz[i] - 2.0 * g_y_yyy_z_xz[i] * b_exp - 4.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_z_yy[i] = 2.0 * g_y_y_z_yy[i] - 2.0 * g_y_yyy_z_yy[i] * b_exp - 4.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_z_yz[i] = 2.0 * g_y_y_z_yz[i] - 2.0 * g_y_yyy_z_yz[i] * b_exp - 4.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yy_z_zz[i] = 2.0 * g_y_y_z_zz[i] - 2.0 * g_y_yyy_z_zz[i] * b_exp - 4.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5040-5046)

    #pragma omp simd aligned(g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz, g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_yzz_yyz_x_xx, g_yzz_yyz_x_xy, g_yzz_yyz_x_xz, g_yzz_yyz_x_yy, g_yzz_yyz_x_yz, g_yzz_yyz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz, g_z_y_0_0_yz_yz_x_xx, g_z_y_0_0_yz_yz_x_xy, g_z_y_0_0_yz_yz_x_xz, g_z_y_0_0_yz_yz_x_yy, g_z_y_0_0_yz_yz_x_yz, g_z_y_0_0_yz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yz_x_xx[i] = g_y_z_x_xx[i] - 2.0 * g_y_yyz_x_xx[i] * b_exp - 2.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_x_xy[i] = g_y_z_x_xy[i] - 2.0 * g_y_yyz_x_xy[i] * b_exp - 2.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_x_xz[i] = g_y_z_x_xz[i] - 2.0 * g_y_yyz_x_xz[i] * b_exp - 2.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_x_yy[i] = g_y_z_x_yy[i] - 2.0 * g_y_yyz_x_yy[i] * b_exp - 2.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_x_yz[i] = g_y_z_x_yz[i] - 2.0 * g_y_yyz_x_yz[i] * b_exp - 2.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_x_zz[i] = g_y_z_x_zz[i] - 2.0 * g_y_yyz_x_zz[i] * b_exp - 2.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5046-5052)

    #pragma omp simd aligned(g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz, g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_yzz_yyz_y_xx, g_yzz_yyz_y_xy, g_yzz_yyz_y_xz, g_yzz_yyz_y_yy, g_yzz_yyz_y_yz, g_yzz_yyz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz, g_z_y_0_0_yz_yz_y_xx, g_z_y_0_0_yz_yz_y_xy, g_z_y_0_0_yz_yz_y_xz, g_z_y_0_0_yz_yz_y_yy, g_z_y_0_0_yz_yz_y_yz, g_z_y_0_0_yz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yz_y_xx[i] = g_y_z_y_xx[i] - 2.0 * g_y_yyz_y_xx[i] * b_exp - 2.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_y_xy[i] = g_y_z_y_xy[i] - 2.0 * g_y_yyz_y_xy[i] * b_exp - 2.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_y_xz[i] = g_y_z_y_xz[i] - 2.0 * g_y_yyz_y_xz[i] * b_exp - 2.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_y_yy[i] = g_y_z_y_yy[i] - 2.0 * g_y_yyz_y_yy[i] * b_exp - 2.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_y_yz[i] = g_y_z_y_yz[i] - 2.0 * g_y_yyz_y_yz[i] * b_exp - 2.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_y_zz[i] = g_y_z_y_zz[i] - 2.0 * g_y_yyz_y_zz[i] * b_exp - 2.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5052-5058)

    #pragma omp simd aligned(g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz, g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_yzz_yyz_z_xx, g_yzz_yyz_z_xy, g_yzz_yyz_z_xz, g_yzz_yyz_z_yy, g_yzz_yyz_z_yz, g_yzz_yyz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz, g_z_y_0_0_yz_yz_z_xx, g_z_y_0_0_yz_yz_z_xy, g_z_y_0_0_yz_yz_z_xz, g_z_y_0_0_yz_yz_z_yy, g_z_y_0_0_yz_yz_z_yz, g_z_y_0_0_yz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_yz_z_xx[i] = g_y_z_z_xx[i] - 2.0 * g_y_yyz_z_xx[i] * b_exp - 2.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_z_xy[i] = g_y_z_z_xy[i] - 2.0 * g_y_yyz_z_xy[i] * b_exp - 2.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_z_xz[i] = g_y_z_z_xz[i] - 2.0 * g_y_yyz_z_xz[i] * b_exp - 2.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_z_yy[i] = g_y_z_z_yy[i] - 2.0 * g_y_yyz_z_yy[i] * b_exp - 2.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_z_yz[i] = g_y_z_z_yz[i] - 2.0 * g_y_yyz_z_yz[i] * b_exp - 2.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_yz_z_zz[i] = g_y_z_z_zz[i] - 2.0 * g_y_yyz_z_zz[i] * b_exp - 2.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5058-5064)

    #pragma omp simd aligned(g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz, g_yzz_yzz_x_xx, g_yzz_yzz_x_xy, g_yzz_yzz_x_xz, g_yzz_yzz_x_yy, g_yzz_yzz_x_yz, g_yzz_yzz_x_zz, g_z_y_0_0_yz_zz_x_xx, g_z_y_0_0_yz_zz_x_xy, g_z_y_0_0_yz_zz_x_xz, g_z_y_0_0_yz_zz_x_yy, g_z_y_0_0_yz_zz_x_yz, g_z_y_0_0_yz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_zz_x_xx[i] = -2.0 * g_y_yzz_x_xx[i] * b_exp + 4.0 * g_yzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_x_xy[i] = -2.0 * g_y_yzz_x_xy[i] * b_exp + 4.0 * g_yzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_x_xz[i] = -2.0 * g_y_yzz_x_xz[i] * b_exp + 4.0 * g_yzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_x_yy[i] = -2.0 * g_y_yzz_x_yy[i] * b_exp + 4.0 * g_yzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_x_yz[i] = -2.0 * g_y_yzz_x_yz[i] * b_exp + 4.0 * g_yzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_x_zz[i] = -2.0 * g_y_yzz_x_zz[i] * b_exp + 4.0 * g_yzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5064-5070)

    #pragma omp simd aligned(g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz, g_yzz_yzz_y_xx, g_yzz_yzz_y_xy, g_yzz_yzz_y_xz, g_yzz_yzz_y_yy, g_yzz_yzz_y_yz, g_yzz_yzz_y_zz, g_z_y_0_0_yz_zz_y_xx, g_z_y_0_0_yz_zz_y_xy, g_z_y_0_0_yz_zz_y_xz, g_z_y_0_0_yz_zz_y_yy, g_z_y_0_0_yz_zz_y_yz, g_z_y_0_0_yz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_zz_y_xx[i] = -2.0 * g_y_yzz_y_xx[i] * b_exp + 4.0 * g_yzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_y_xy[i] = -2.0 * g_y_yzz_y_xy[i] * b_exp + 4.0 * g_yzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_y_xz[i] = -2.0 * g_y_yzz_y_xz[i] * b_exp + 4.0 * g_yzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_y_yy[i] = -2.0 * g_y_yzz_y_yy[i] * b_exp + 4.0 * g_yzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_y_yz[i] = -2.0 * g_y_yzz_y_yz[i] * b_exp + 4.0 * g_yzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_y_zz[i] = -2.0 * g_y_yzz_y_zz[i] * b_exp + 4.0 * g_yzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5070-5076)

    #pragma omp simd aligned(g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz, g_yzz_yzz_z_xx, g_yzz_yzz_z_xy, g_yzz_yzz_z_xz, g_yzz_yzz_z_yy, g_yzz_yzz_z_yz, g_yzz_yzz_z_zz, g_z_y_0_0_yz_zz_z_xx, g_z_y_0_0_yz_zz_z_xy, g_z_y_0_0_yz_zz_z_xz, g_z_y_0_0_yz_zz_z_yy, g_z_y_0_0_yz_zz_z_yz, g_z_y_0_0_yz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_yz_zz_z_xx[i] = -2.0 * g_y_yzz_z_xx[i] * b_exp + 4.0 * g_yzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_z_xy[i] = -2.0 * g_y_yzz_z_xy[i] * b_exp + 4.0 * g_yzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_z_xz[i] = -2.0 * g_y_yzz_z_xz[i] * b_exp + 4.0 * g_yzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_z_yy[i] = -2.0 * g_y_yzz_z_yy[i] * b_exp + 4.0 * g_yzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_z_yz[i] = -2.0 * g_y_yzz_z_yz[i] * b_exp + 4.0 * g_yzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_yz_zz_z_zz[i] = -2.0 * g_y_yzz_z_zz[i] * b_exp + 4.0 * g_yzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5076-5082)

    #pragma omp simd aligned(g_z_xxy_x_xx, g_z_xxy_x_xy, g_z_xxy_x_xz, g_z_xxy_x_yy, g_z_xxy_x_yz, g_z_xxy_x_zz, g_z_y_0_0_zz_xx_x_xx, g_z_y_0_0_zz_xx_x_xy, g_z_y_0_0_zz_xx_x_xz, g_z_y_0_0_zz_xx_x_yy, g_z_y_0_0_zz_xx_x_yz, g_z_y_0_0_zz_xx_x_zz, g_zzz_xxy_x_xx, g_zzz_xxy_x_xy, g_zzz_xxy_x_xz, g_zzz_xxy_x_yy, g_zzz_xxy_x_yz, g_zzz_xxy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xx_x_xx[i] = -4.0 * g_z_xxy_x_xx[i] * b_exp + 4.0 * g_zzz_xxy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_x_xy[i] = -4.0 * g_z_xxy_x_xy[i] * b_exp + 4.0 * g_zzz_xxy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_x_xz[i] = -4.0 * g_z_xxy_x_xz[i] * b_exp + 4.0 * g_zzz_xxy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_x_yy[i] = -4.0 * g_z_xxy_x_yy[i] * b_exp + 4.0 * g_zzz_xxy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_x_yz[i] = -4.0 * g_z_xxy_x_yz[i] * b_exp + 4.0 * g_zzz_xxy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_x_zz[i] = -4.0 * g_z_xxy_x_zz[i] * b_exp + 4.0 * g_zzz_xxy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5082-5088)

    #pragma omp simd aligned(g_z_xxy_y_xx, g_z_xxy_y_xy, g_z_xxy_y_xz, g_z_xxy_y_yy, g_z_xxy_y_yz, g_z_xxy_y_zz, g_z_y_0_0_zz_xx_y_xx, g_z_y_0_0_zz_xx_y_xy, g_z_y_0_0_zz_xx_y_xz, g_z_y_0_0_zz_xx_y_yy, g_z_y_0_0_zz_xx_y_yz, g_z_y_0_0_zz_xx_y_zz, g_zzz_xxy_y_xx, g_zzz_xxy_y_xy, g_zzz_xxy_y_xz, g_zzz_xxy_y_yy, g_zzz_xxy_y_yz, g_zzz_xxy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xx_y_xx[i] = -4.0 * g_z_xxy_y_xx[i] * b_exp + 4.0 * g_zzz_xxy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_y_xy[i] = -4.0 * g_z_xxy_y_xy[i] * b_exp + 4.0 * g_zzz_xxy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_y_xz[i] = -4.0 * g_z_xxy_y_xz[i] * b_exp + 4.0 * g_zzz_xxy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_y_yy[i] = -4.0 * g_z_xxy_y_yy[i] * b_exp + 4.0 * g_zzz_xxy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_y_yz[i] = -4.0 * g_z_xxy_y_yz[i] * b_exp + 4.0 * g_zzz_xxy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_y_zz[i] = -4.0 * g_z_xxy_y_zz[i] * b_exp + 4.0 * g_zzz_xxy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5088-5094)

    #pragma omp simd aligned(g_z_xxy_z_xx, g_z_xxy_z_xy, g_z_xxy_z_xz, g_z_xxy_z_yy, g_z_xxy_z_yz, g_z_xxy_z_zz, g_z_y_0_0_zz_xx_z_xx, g_z_y_0_0_zz_xx_z_xy, g_z_y_0_0_zz_xx_z_xz, g_z_y_0_0_zz_xx_z_yy, g_z_y_0_0_zz_xx_z_yz, g_z_y_0_0_zz_xx_z_zz, g_zzz_xxy_z_xx, g_zzz_xxy_z_xy, g_zzz_xxy_z_xz, g_zzz_xxy_z_yy, g_zzz_xxy_z_yz, g_zzz_xxy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xx_z_xx[i] = -4.0 * g_z_xxy_z_xx[i] * b_exp + 4.0 * g_zzz_xxy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_z_xy[i] = -4.0 * g_z_xxy_z_xy[i] * b_exp + 4.0 * g_zzz_xxy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_z_xz[i] = -4.0 * g_z_xxy_z_xz[i] * b_exp + 4.0 * g_zzz_xxy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_z_yy[i] = -4.0 * g_z_xxy_z_yy[i] * b_exp + 4.0 * g_zzz_xxy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_z_yz[i] = -4.0 * g_z_xxy_z_yz[i] * b_exp + 4.0 * g_zzz_xxy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xx_z_zz[i] = -4.0 * g_z_xxy_z_zz[i] * b_exp + 4.0 * g_zzz_xxy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5094-5100)

    #pragma omp simd aligned(g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xyy_x_xx, g_z_xyy_x_xy, g_z_xyy_x_xz, g_z_xyy_x_yy, g_z_xyy_x_yz, g_z_xyy_x_zz, g_z_y_0_0_zz_xy_x_xx, g_z_y_0_0_zz_xy_x_xy, g_z_y_0_0_zz_xy_x_xz, g_z_y_0_0_zz_xy_x_yy, g_z_y_0_0_zz_xy_x_yz, g_z_y_0_0_zz_xy_x_zz, g_zzz_x_x_xx, g_zzz_x_x_xy, g_zzz_x_x_xz, g_zzz_x_x_yy, g_zzz_x_x_yz, g_zzz_x_x_zz, g_zzz_xyy_x_xx, g_zzz_xyy_x_xy, g_zzz_xyy_x_xz, g_zzz_xyy_x_yy, g_zzz_xyy_x_yz, g_zzz_xyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xy_x_xx[i] = 2.0 * g_z_x_x_xx[i] - 4.0 * g_z_xyy_x_xx[i] * b_exp - 2.0 * g_zzz_x_x_xx[i] * a_exp + 4.0 * g_zzz_xyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_x_xy[i] = 2.0 * g_z_x_x_xy[i] - 4.0 * g_z_xyy_x_xy[i] * b_exp - 2.0 * g_zzz_x_x_xy[i] * a_exp + 4.0 * g_zzz_xyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_x_xz[i] = 2.0 * g_z_x_x_xz[i] - 4.0 * g_z_xyy_x_xz[i] * b_exp - 2.0 * g_zzz_x_x_xz[i] * a_exp + 4.0 * g_zzz_xyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_x_yy[i] = 2.0 * g_z_x_x_yy[i] - 4.0 * g_z_xyy_x_yy[i] * b_exp - 2.0 * g_zzz_x_x_yy[i] * a_exp + 4.0 * g_zzz_xyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_x_yz[i] = 2.0 * g_z_x_x_yz[i] - 4.0 * g_z_xyy_x_yz[i] * b_exp - 2.0 * g_zzz_x_x_yz[i] * a_exp + 4.0 * g_zzz_xyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_x_zz[i] = 2.0 * g_z_x_x_zz[i] - 4.0 * g_z_xyy_x_zz[i] * b_exp - 2.0 * g_zzz_x_x_zz[i] * a_exp + 4.0 * g_zzz_xyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5100-5106)

    #pragma omp simd aligned(g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xyy_y_xx, g_z_xyy_y_xy, g_z_xyy_y_xz, g_z_xyy_y_yy, g_z_xyy_y_yz, g_z_xyy_y_zz, g_z_y_0_0_zz_xy_y_xx, g_z_y_0_0_zz_xy_y_xy, g_z_y_0_0_zz_xy_y_xz, g_z_y_0_0_zz_xy_y_yy, g_z_y_0_0_zz_xy_y_yz, g_z_y_0_0_zz_xy_y_zz, g_zzz_x_y_xx, g_zzz_x_y_xy, g_zzz_x_y_xz, g_zzz_x_y_yy, g_zzz_x_y_yz, g_zzz_x_y_zz, g_zzz_xyy_y_xx, g_zzz_xyy_y_xy, g_zzz_xyy_y_xz, g_zzz_xyy_y_yy, g_zzz_xyy_y_yz, g_zzz_xyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xy_y_xx[i] = 2.0 * g_z_x_y_xx[i] - 4.0 * g_z_xyy_y_xx[i] * b_exp - 2.0 * g_zzz_x_y_xx[i] * a_exp + 4.0 * g_zzz_xyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_y_xy[i] = 2.0 * g_z_x_y_xy[i] - 4.0 * g_z_xyy_y_xy[i] * b_exp - 2.0 * g_zzz_x_y_xy[i] * a_exp + 4.0 * g_zzz_xyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_y_xz[i] = 2.0 * g_z_x_y_xz[i] - 4.0 * g_z_xyy_y_xz[i] * b_exp - 2.0 * g_zzz_x_y_xz[i] * a_exp + 4.0 * g_zzz_xyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_y_yy[i] = 2.0 * g_z_x_y_yy[i] - 4.0 * g_z_xyy_y_yy[i] * b_exp - 2.0 * g_zzz_x_y_yy[i] * a_exp + 4.0 * g_zzz_xyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_y_yz[i] = 2.0 * g_z_x_y_yz[i] - 4.0 * g_z_xyy_y_yz[i] * b_exp - 2.0 * g_zzz_x_y_yz[i] * a_exp + 4.0 * g_zzz_xyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_y_zz[i] = 2.0 * g_z_x_y_zz[i] - 4.0 * g_z_xyy_y_zz[i] * b_exp - 2.0 * g_zzz_x_y_zz[i] * a_exp + 4.0 * g_zzz_xyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5106-5112)

    #pragma omp simd aligned(g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xyy_z_xx, g_z_xyy_z_xy, g_z_xyy_z_xz, g_z_xyy_z_yy, g_z_xyy_z_yz, g_z_xyy_z_zz, g_z_y_0_0_zz_xy_z_xx, g_z_y_0_0_zz_xy_z_xy, g_z_y_0_0_zz_xy_z_xz, g_z_y_0_0_zz_xy_z_yy, g_z_y_0_0_zz_xy_z_yz, g_z_y_0_0_zz_xy_z_zz, g_zzz_x_z_xx, g_zzz_x_z_xy, g_zzz_x_z_xz, g_zzz_x_z_yy, g_zzz_x_z_yz, g_zzz_x_z_zz, g_zzz_xyy_z_xx, g_zzz_xyy_z_xy, g_zzz_xyy_z_xz, g_zzz_xyy_z_yy, g_zzz_xyy_z_yz, g_zzz_xyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xy_z_xx[i] = 2.0 * g_z_x_z_xx[i] - 4.0 * g_z_xyy_z_xx[i] * b_exp - 2.0 * g_zzz_x_z_xx[i] * a_exp + 4.0 * g_zzz_xyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_z_xy[i] = 2.0 * g_z_x_z_xy[i] - 4.0 * g_z_xyy_z_xy[i] * b_exp - 2.0 * g_zzz_x_z_xy[i] * a_exp + 4.0 * g_zzz_xyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_z_xz[i] = 2.0 * g_z_x_z_xz[i] - 4.0 * g_z_xyy_z_xz[i] * b_exp - 2.0 * g_zzz_x_z_xz[i] * a_exp + 4.0 * g_zzz_xyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_z_yy[i] = 2.0 * g_z_x_z_yy[i] - 4.0 * g_z_xyy_z_yy[i] * b_exp - 2.0 * g_zzz_x_z_yy[i] * a_exp + 4.0 * g_zzz_xyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_z_yz[i] = 2.0 * g_z_x_z_yz[i] - 4.0 * g_z_xyy_z_yz[i] * b_exp - 2.0 * g_zzz_x_z_yz[i] * a_exp + 4.0 * g_zzz_xyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xy_z_zz[i] = 2.0 * g_z_x_z_zz[i] - 4.0 * g_z_xyy_z_zz[i] * b_exp - 2.0 * g_zzz_x_z_zz[i] * a_exp + 4.0 * g_zzz_xyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5112-5118)

    #pragma omp simd aligned(g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz, g_z_y_0_0_zz_xz_x_xx, g_z_y_0_0_zz_xz_x_xy, g_z_y_0_0_zz_xz_x_xz, g_z_y_0_0_zz_xz_x_yy, g_z_y_0_0_zz_xz_x_yz, g_z_y_0_0_zz_xz_x_zz, g_zzz_xyz_x_xx, g_zzz_xyz_x_xy, g_zzz_xyz_x_xz, g_zzz_xyz_x_yy, g_zzz_xyz_x_yz, g_zzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xz_x_xx[i] = -4.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_zzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_x_xy[i] = -4.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_zzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_x_xz[i] = -4.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_zzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_x_yy[i] = -4.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_zzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_x_yz[i] = -4.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_zzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_x_zz[i] = -4.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_zzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5118-5124)

    #pragma omp simd aligned(g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz, g_z_y_0_0_zz_xz_y_xx, g_z_y_0_0_zz_xz_y_xy, g_z_y_0_0_zz_xz_y_xz, g_z_y_0_0_zz_xz_y_yy, g_z_y_0_0_zz_xz_y_yz, g_z_y_0_0_zz_xz_y_zz, g_zzz_xyz_y_xx, g_zzz_xyz_y_xy, g_zzz_xyz_y_xz, g_zzz_xyz_y_yy, g_zzz_xyz_y_yz, g_zzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xz_y_xx[i] = -4.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_zzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_y_xy[i] = -4.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_zzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_y_xz[i] = -4.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_zzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_y_yy[i] = -4.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_zzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_y_yz[i] = -4.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_zzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_y_zz[i] = -4.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_zzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5124-5130)

    #pragma omp simd aligned(g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz, g_z_y_0_0_zz_xz_z_xx, g_z_y_0_0_zz_xz_z_xy, g_z_y_0_0_zz_xz_z_xz, g_z_y_0_0_zz_xz_z_yy, g_z_y_0_0_zz_xz_z_yz, g_z_y_0_0_zz_xz_z_zz, g_zzz_xyz_z_xx, g_zzz_xyz_z_xy, g_zzz_xyz_z_xz, g_zzz_xyz_z_yy, g_zzz_xyz_z_yz, g_zzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_xz_z_xx[i] = -4.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_zzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_z_xy[i] = -4.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_zzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_z_xz[i] = -4.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_zzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_z_yy[i] = -4.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_zzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_z_yz[i] = -4.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_zzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_xz_z_zz[i] = -4.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_zzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5130-5136)

    #pragma omp simd aligned(g_z_y_0_0_zz_yy_x_xx, g_z_y_0_0_zz_yy_x_xy, g_z_y_0_0_zz_yy_x_xz, g_z_y_0_0_zz_yy_x_yy, g_z_y_0_0_zz_yy_x_yz, g_z_y_0_0_zz_yy_x_zz, g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yyy_x_xx, g_z_yyy_x_xy, g_z_yyy_x_xz, g_z_yyy_x_yy, g_z_yyy_x_yz, g_z_yyy_x_zz, g_zzz_y_x_xx, g_zzz_y_x_xy, g_zzz_y_x_xz, g_zzz_y_x_yy, g_zzz_y_x_yz, g_zzz_y_x_zz, g_zzz_yyy_x_xx, g_zzz_yyy_x_xy, g_zzz_yyy_x_xz, g_zzz_yyy_x_yy, g_zzz_yyy_x_yz, g_zzz_yyy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yy_x_xx[i] = 4.0 * g_z_y_x_xx[i] - 4.0 * g_z_yyy_x_xx[i] * b_exp - 4.0 * g_zzz_y_x_xx[i] * a_exp + 4.0 * g_zzz_yyy_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_x_xy[i] = 4.0 * g_z_y_x_xy[i] - 4.0 * g_z_yyy_x_xy[i] * b_exp - 4.0 * g_zzz_y_x_xy[i] * a_exp + 4.0 * g_zzz_yyy_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_x_xz[i] = 4.0 * g_z_y_x_xz[i] - 4.0 * g_z_yyy_x_xz[i] * b_exp - 4.0 * g_zzz_y_x_xz[i] * a_exp + 4.0 * g_zzz_yyy_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_x_yy[i] = 4.0 * g_z_y_x_yy[i] - 4.0 * g_z_yyy_x_yy[i] * b_exp - 4.0 * g_zzz_y_x_yy[i] * a_exp + 4.0 * g_zzz_yyy_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_x_yz[i] = 4.0 * g_z_y_x_yz[i] - 4.0 * g_z_yyy_x_yz[i] * b_exp - 4.0 * g_zzz_y_x_yz[i] * a_exp + 4.0 * g_zzz_yyy_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_x_zz[i] = 4.0 * g_z_y_x_zz[i] - 4.0 * g_z_yyy_x_zz[i] * b_exp - 4.0 * g_zzz_y_x_zz[i] * a_exp + 4.0 * g_zzz_yyy_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5136-5142)

    #pragma omp simd aligned(g_z_y_0_0_zz_yy_y_xx, g_z_y_0_0_zz_yy_y_xy, g_z_y_0_0_zz_yy_y_xz, g_z_y_0_0_zz_yy_y_yy, g_z_y_0_0_zz_yy_y_yz, g_z_y_0_0_zz_yy_y_zz, g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yyy_y_xx, g_z_yyy_y_xy, g_z_yyy_y_xz, g_z_yyy_y_yy, g_z_yyy_y_yz, g_z_yyy_y_zz, g_zzz_y_y_xx, g_zzz_y_y_xy, g_zzz_y_y_xz, g_zzz_y_y_yy, g_zzz_y_y_yz, g_zzz_y_y_zz, g_zzz_yyy_y_xx, g_zzz_yyy_y_xy, g_zzz_yyy_y_xz, g_zzz_yyy_y_yy, g_zzz_yyy_y_yz, g_zzz_yyy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yy_y_xx[i] = 4.0 * g_z_y_y_xx[i] - 4.0 * g_z_yyy_y_xx[i] * b_exp - 4.0 * g_zzz_y_y_xx[i] * a_exp + 4.0 * g_zzz_yyy_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_y_xy[i] = 4.0 * g_z_y_y_xy[i] - 4.0 * g_z_yyy_y_xy[i] * b_exp - 4.0 * g_zzz_y_y_xy[i] * a_exp + 4.0 * g_zzz_yyy_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_y_xz[i] = 4.0 * g_z_y_y_xz[i] - 4.0 * g_z_yyy_y_xz[i] * b_exp - 4.0 * g_zzz_y_y_xz[i] * a_exp + 4.0 * g_zzz_yyy_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_y_yy[i] = 4.0 * g_z_y_y_yy[i] - 4.0 * g_z_yyy_y_yy[i] * b_exp - 4.0 * g_zzz_y_y_yy[i] * a_exp + 4.0 * g_zzz_yyy_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_y_yz[i] = 4.0 * g_z_y_y_yz[i] - 4.0 * g_z_yyy_y_yz[i] * b_exp - 4.0 * g_zzz_y_y_yz[i] * a_exp + 4.0 * g_zzz_yyy_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_y_zz[i] = 4.0 * g_z_y_y_zz[i] - 4.0 * g_z_yyy_y_zz[i] * b_exp - 4.0 * g_zzz_y_y_zz[i] * a_exp + 4.0 * g_zzz_yyy_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5142-5148)

    #pragma omp simd aligned(g_z_y_0_0_zz_yy_z_xx, g_z_y_0_0_zz_yy_z_xy, g_z_y_0_0_zz_yy_z_xz, g_z_y_0_0_zz_yy_z_yy, g_z_y_0_0_zz_yy_z_yz, g_z_y_0_0_zz_yy_z_zz, g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yyy_z_xx, g_z_yyy_z_xy, g_z_yyy_z_xz, g_z_yyy_z_yy, g_z_yyy_z_yz, g_z_yyy_z_zz, g_zzz_y_z_xx, g_zzz_y_z_xy, g_zzz_y_z_xz, g_zzz_y_z_yy, g_zzz_y_z_yz, g_zzz_y_z_zz, g_zzz_yyy_z_xx, g_zzz_yyy_z_xy, g_zzz_yyy_z_xz, g_zzz_yyy_z_yy, g_zzz_yyy_z_yz, g_zzz_yyy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yy_z_xx[i] = 4.0 * g_z_y_z_xx[i] - 4.0 * g_z_yyy_z_xx[i] * b_exp - 4.0 * g_zzz_y_z_xx[i] * a_exp + 4.0 * g_zzz_yyy_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_z_xy[i] = 4.0 * g_z_y_z_xy[i] - 4.0 * g_z_yyy_z_xy[i] * b_exp - 4.0 * g_zzz_y_z_xy[i] * a_exp + 4.0 * g_zzz_yyy_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_z_xz[i] = 4.0 * g_z_y_z_xz[i] - 4.0 * g_z_yyy_z_xz[i] * b_exp - 4.0 * g_zzz_y_z_xz[i] * a_exp + 4.0 * g_zzz_yyy_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_z_yy[i] = 4.0 * g_z_y_z_yy[i] - 4.0 * g_z_yyy_z_yy[i] * b_exp - 4.0 * g_zzz_y_z_yy[i] * a_exp + 4.0 * g_zzz_yyy_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_z_yz[i] = 4.0 * g_z_y_z_yz[i] - 4.0 * g_z_yyy_z_yz[i] * b_exp - 4.0 * g_zzz_y_z_yz[i] * a_exp + 4.0 * g_zzz_yyy_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yy_z_zz[i] = 4.0 * g_z_y_z_zz[i] - 4.0 * g_z_yyy_z_zz[i] * b_exp - 4.0 * g_zzz_y_z_zz[i] * a_exp + 4.0 * g_zzz_yyy_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5148-5154)

    #pragma omp simd aligned(g_z_y_0_0_zz_yz_x_xx, g_z_y_0_0_zz_yz_x_xy, g_z_y_0_0_zz_yz_x_xz, g_z_y_0_0_zz_yz_x_yy, g_z_y_0_0_zz_yz_x_yz, g_z_y_0_0_zz_yz_x_zz, g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz, g_zzz_yyz_x_xx, g_zzz_yyz_x_xy, g_zzz_yyz_x_xz, g_zzz_yyz_x_yy, g_zzz_yyz_x_yz, g_zzz_yyz_x_zz, g_zzz_z_x_xx, g_zzz_z_x_xy, g_zzz_z_x_xz, g_zzz_z_x_yy, g_zzz_z_x_yz, g_zzz_z_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yz_x_xx[i] = 2.0 * g_z_z_x_xx[i] - 4.0 * g_z_yyz_x_xx[i] * b_exp - 2.0 * g_zzz_z_x_xx[i] * a_exp + 4.0 * g_zzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_x_xy[i] = 2.0 * g_z_z_x_xy[i] - 4.0 * g_z_yyz_x_xy[i] * b_exp - 2.0 * g_zzz_z_x_xy[i] * a_exp + 4.0 * g_zzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_x_xz[i] = 2.0 * g_z_z_x_xz[i] - 4.0 * g_z_yyz_x_xz[i] * b_exp - 2.0 * g_zzz_z_x_xz[i] * a_exp + 4.0 * g_zzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_x_yy[i] = 2.0 * g_z_z_x_yy[i] - 4.0 * g_z_yyz_x_yy[i] * b_exp - 2.0 * g_zzz_z_x_yy[i] * a_exp + 4.0 * g_zzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_x_yz[i] = 2.0 * g_z_z_x_yz[i] - 4.0 * g_z_yyz_x_yz[i] * b_exp - 2.0 * g_zzz_z_x_yz[i] * a_exp + 4.0 * g_zzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_x_zz[i] = 2.0 * g_z_z_x_zz[i] - 4.0 * g_z_yyz_x_zz[i] * b_exp - 2.0 * g_zzz_z_x_zz[i] * a_exp + 4.0 * g_zzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5154-5160)

    #pragma omp simd aligned(g_z_y_0_0_zz_yz_y_xx, g_z_y_0_0_zz_yz_y_xy, g_z_y_0_0_zz_yz_y_xz, g_z_y_0_0_zz_yz_y_yy, g_z_y_0_0_zz_yz_y_yz, g_z_y_0_0_zz_yz_y_zz, g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz, g_zzz_yyz_y_xx, g_zzz_yyz_y_xy, g_zzz_yyz_y_xz, g_zzz_yyz_y_yy, g_zzz_yyz_y_yz, g_zzz_yyz_y_zz, g_zzz_z_y_xx, g_zzz_z_y_xy, g_zzz_z_y_xz, g_zzz_z_y_yy, g_zzz_z_y_yz, g_zzz_z_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yz_y_xx[i] = 2.0 * g_z_z_y_xx[i] - 4.0 * g_z_yyz_y_xx[i] * b_exp - 2.0 * g_zzz_z_y_xx[i] * a_exp + 4.0 * g_zzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_y_xy[i] = 2.0 * g_z_z_y_xy[i] - 4.0 * g_z_yyz_y_xy[i] * b_exp - 2.0 * g_zzz_z_y_xy[i] * a_exp + 4.0 * g_zzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_y_xz[i] = 2.0 * g_z_z_y_xz[i] - 4.0 * g_z_yyz_y_xz[i] * b_exp - 2.0 * g_zzz_z_y_xz[i] * a_exp + 4.0 * g_zzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_y_yy[i] = 2.0 * g_z_z_y_yy[i] - 4.0 * g_z_yyz_y_yy[i] * b_exp - 2.0 * g_zzz_z_y_yy[i] * a_exp + 4.0 * g_zzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_y_yz[i] = 2.0 * g_z_z_y_yz[i] - 4.0 * g_z_yyz_y_yz[i] * b_exp - 2.0 * g_zzz_z_y_yz[i] * a_exp + 4.0 * g_zzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_y_zz[i] = 2.0 * g_z_z_y_zz[i] - 4.0 * g_z_yyz_y_zz[i] * b_exp - 2.0 * g_zzz_z_y_zz[i] * a_exp + 4.0 * g_zzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5160-5166)

    #pragma omp simd aligned(g_z_y_0_0_zz_yz_z_xx, g_z_y_0_0_zz_yz_z_xy, g_z_y_0_0_zz_yz_z_xz, g_z_y_0_0_zz_yz_z_yy, g_z_y_0_0_zz_yz_z_yz, g_z_y_0_0_zz_yz_z_zz, g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz, g_zzz_yyz_z_xx, g_zzz_yyz_z_xy, g_zzz_yyz_z_xz, g_zzz_yyz_z_yy, g_zzz_yyz_z_yz, g_zzz_yyz_z_zz, g_zzz_z_z_xx, g_zzz_z_z_xy, g_zzz_z_z_xz, g_zzz_z_z_yy, g_zzz_z_z_yz, g_zzz_z_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_yz_z_xx[i] = 2.0 * g_z_z_z_xx[i] - 4.0 * g_z_yyz_z_xx[i] * b_exp - 2.0 * g_zzz_z_z_xx[i] * a_exp + 4.0 * g_zzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_z_xy[i] = 2.0 * g_z_z_z_xy[i] - 4.0 * g_z_yyz_z_xy[i] * b_exp - 2.0 * g_zzz_z_z_xy[i] * a_exp + 4.0 * g_zzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_z_xz[i] = 2.0 * g_z_z_z_xz[i] - 4.0 * g_z_yyz_z_xz[i] * b_exp - 2.0 * g_zzz_z_z_xz[i] * a_exp + 4.0 * g_zzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_z_yy[i] = 2.0 * g_z_z_z_yy[i] - 4.0 * g_z_yyz_z_yy[i] * b_exp - 2.0 * g_zzz_z_z_yy[i] * a_exp + 4.0 * g_zzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_z_yz[i] = 2.0 * g_z_z_z_yz[i] - 4.0 * g_z_yyz_z_yz[i] * b_exp - 2.0 * g_zzz_z_z_yz[i] * a_exp + 4.0 * g_zzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_yz_z_zz[i] = 2.0 * g_z_z_z_zz[i] - 4.0 * g_z_yyz_z_zz[i] * b_exp - 2.0 * g_zzz_z_z_zz[i] * a_exp + 4.0 * g_zzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5166-5172)

    #pragma omp simd aligned(g_z_y_0_0_zz_zz_x_xx, g_z_y_0_0_zz_zz_x_xy, g_z_y_0_0_zz_zz_x_xz, g_z_y_0_0_zz_zz_x_yy, g_z_y_0_0_zz_zz_x_yz, g_z_y_0_0_zz_zz_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz, g_zzz_yzz_x_xx, g_zzz_yzz_x_xy, g_zzz_yzz_x_xz, g_zzz_yzz_x_yy, g_zzz_yzz_x_yz, g_zzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_zz_x_xx[i] = -4.0 * g_z_yzz_x_xx[i] * b_exp + 4.0 * g_zzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_x_xy[i] = -4.0 * g_z_yzz_x_xy[i] * b_exp + 4.0 * g_zzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_x_xz[i] = -4.0 * g_z_yzz_x_xz[i] * b_exp + 4.0 * g_zzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_x_yy[i] = -4.0 * g_z_yzz_x_yy[i] * b_exp + 4.0 * g_zzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_x_yz[i] = -4.0 * g_z_yzz_x_yz[i] * b_exp + 4.0 * g_zzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_x_zz[i] = -4.0 * g_z_yzz_x_zz[i] * b_exp + 4.0 * g_zzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5172-5178)

    #pragma omp simd aligned(g_z_y_0_0_zz_zz_y_xx, g_z_y_0_0_zz_zz_y_xy, g_z_y_0_0_zz_zz_y_xz, g_z_y_0_0_zz_zz_y_yy, g_z_y_0_0_zz_zz_y_yz, g_z_y_0_0_zz_zz_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz, g_zzz_yzz_y_xx, g_zzz_yzz_y_xy, g_zzz_yzz_y_xz, g_zzz_yzz_y_yy, g_zzz_yzz_y_yz, g_zzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_zz_y_xx[i] = -4.0 * g_z_yzz_y_xx[i] * b_exp + 4.0 * g_zzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_y_xy[i] = -4.0 * g_z_yzz_y_xy[i] * b_exp + 4.0 * g_zzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_y_xz[i] = -4.0 * g_z_yzz_y_xz[i] * b_exp + 4.0 * g_zzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_y_yy[i] = -4.0 * g_z_yzz_y_yy[i] * b_exp + 4.0 * g_zzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_y_yz[i] = -4.0 * g_z_yzz_y_yz[i] * b_exp + 4.0 * g_zzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_y_zz[i] = -4.0 * g_z_yzz_y_zz[i] * b_exp + 4.0 * g_zzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5178-5184)

    #pragma omp simd aligned(g_z_y_0_0_zz_zz_z_xx, g_z_y_0_0_zz_zz_z_xy, g_z_y_0_0_zz_zz_z_xz, g_z_y_0_0_zz_zz_z_yy, g_z_y_0_0_zz_zz_z_yz, g_z_y_0_0_zz_zz_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz, g_zzz_yzz_z_xx, g_zzz_yzz_z_xy, g_zzz_yzz_z_xz, g_zzz_yzz_z_yy, g_zzz_yzz_z_yz, g_zzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_y_0_0_zz_zz_z_xx[i] = -4.0 * g_z_yzz_z_xx[i] * b_exp + 4.0 * g_zzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_z_xy[i] = -4.0 * g_z_yzz_z_xy[i] * b_exp + 4.0 * g_zzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_z_xz[i] = -4.0 * g_z_yzz_z_xz[i] * b_exp + 4.0 * g_zzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_z_yy[i] = -4.0 * g_z_yzz_z_yy[i] * b_exp + 4.0 * g_zzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_z_yz[i] = -4.0 * g_z_yzz_z_yz[i] * b_exp + 4.0 * g_zzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_y_0_0_zz_zz_z_zz[i] = -4.0 * g_z_yzz_z_zz[i] * b_exp + 4.0 * g_zzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5184-5190)

    #pragma omp simd aligned(g_xxz_xxz_x_xx, g_xxz_xxz_x_xy, g_xxz_xxz_x_xz, g_xxz_xxz_x_yy, g_xxz_xxz_x_yz, g_xxz_xxz_x_zz, g_z_z_0_0_xx_xx_x_xx, g_z_z_0_0_xx_xx_x_xy, g_z_z_0_0_xx_xx_x_xz, g_z_z_0_0_xx_xx_x_yy, g_z_z_0_0_xx_xx_x_yz, g_z_z_0_0_xx_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xx_x_xx[i] = 4.0 * g_xxz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_x_xy[i] = 4.0 * g_xxz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_x_xz[i] = 4.0 * g_xxz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_x_yy[i] = 4.0 * g_xxz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_x_yz[i] = 4.0 * g_xxz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_x_zz[i] = 4.0 * g_xxz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5190-5196)

    #pragma omp simd aligned(g_xxz_xxz_y_xx, g_xxz_xxz_y_xy, g_xxz_xxz_y_xz, g_xxz_xxz_y_yy, g_xxz_xxz_y_yz, g_xxz_xxz_y_zz, g_z_z_0_0_xx_xx_y_xx, g_z_z_0_0_xx_xx_y_xy, g_z_z_0_0_xx_xx_y_xz, g_z_z_0_0_xx_xx_y_yy, g_z_z_0_0_xx_xx_y_yz, g_z_z_0_0_xx_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xx_y_xx[i] = 4.0 * g_xxz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_y_xy[i] = 4.0 * g_xxz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_y_xz[i] = 4.0 * g_xxz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_y_yy[i] = 4.0 * g_xxz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_y_yz[i] = 4.0 * g_xxz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_y_zz[i] = 4.0 * g_xxz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5196-5202)

    #pragma omp simd aligned(g_xxz_xxz_z_xx, g_xxz_xxz_z_xy, g_xxz_xxz_z_xz, g_xxz_xxz_z_yy, g_xxz_xxz_z_yz, g_xxz_xxz_z_zz, g_z_z_0_0_xx_xx_z_xx, g_z_z_0_0_xx_xx_z_xy, g_z_z_0_0_xx_xx_z_xz, g_z_z_0_0_xx_xx_z_yy, g_z_z_0_0_xx_xx_z_yz, g_z_z_0_0_xx_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xx_z_xx[i] = 4.0 * g_xxz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_z_xy[i] = 4.0 * g_xxz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_z_xz[i] = 4.0 * g_xxz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_z_yy[i] = 4.0 * g_xxz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_z_yz[i] = 4.0 * g_xxz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xx_z_zz[i] = 4.0 * g_xxz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5202-5208)

    #pragma omp simd aligned(g_xxz_xyz_x_xx, g_xxz_xyz_x_xy, g_xxz_xyz_x_xz, g_xxz_xyz_x_yy, g_xxz_xyz_x_yz, g_xxz_xyz_x_zz, g_z_z_0_0_xx_xy_x_xx, g_z_z_0_0_xx_xy_x_xy, g_z_z_0_0_xx_xy_x_xz, g_z_z_0_0_xx_xy_x_yy, g_z_z_0_0_xx_xy_x_yz, g_z_z_0_0_xx_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xy_x_xx[i] = 4.0 * g_xxz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_x_xy[i] = 4.0 * g_xxz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_x_xz[i] = 4.0 * g_xxz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_x_yy[i] = 4.0 * g_xxz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_x_yz[i] = 4.0 * g_xxz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_x_zz[i] = 4.0 * g_xxz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5208-5214)

    #pragma omp simd aligned(g_xxz_xyz_y_xx, g_xxz_xyz_y_xy, g_xxz_xyz_y_xz, g_xxz_xyz_y_yy, g_xxz_xyz_y_yz, g_xxz_xyz_y_zz, g_z_z_0_0_xx_xy_y_xx, g_z_z_0_0_xx_xy_y_xy, g_z_z_0_0_xx_xy_y_xz, g_z_z_0_0_xx_xy_y_yy, g_z_z_0_0_xx_xy_y_yz, g_z_z_0_0_xx_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xy_y_xx[i] = 4.0 * g_xxz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_y_xy[i] = 4.0 * g_xxz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_y_xz[i] = 4.0 * g_xxz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_y_yy[i] = 4.0 * g_xxz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_y_yz[i] = 4.0 * g_xxz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_y_zz[i] = 4.0 * g_xxz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5214-5220)

    #pragma omp simd aligned(g_xxz_xyz_z_xx, g_xxz_xyz_z_xy, g_xxz_xyz_z_xz, g_xxz_xyz_z_yy, g_xxz_xyz_z_yz, g_xxz_xyz_z_zz, g_z_z_0_0_xx_xy_z_xx, g_z_z_0_0_xx_xy_z_xy, g_z_z_0_0_xx_xy_z_xz, g_z_z_0_0_xx_xy_z_yy, g_z_z_0_0_xx_xy_z_yz, g_z_z_0_0_xx_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xy_z_xx[i] = 4.0 * g_xxz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_z_xy[i] = 4.0 * g_xxz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_z_xz[i] = 4.0 * g_xxz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_z_yy[i] = 4.0 * g_xxz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_z_yz[i] = 4.0 * g_xxz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xy_z_zz[i] = 4.0 * g_xxz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5220-5226)

    #pragma omp simd aligned(g_xxz_x_x_xx, g_xxz_x_x_xy, g_xxz_x_x_xz, g_xxz_x_x_yy, g_xxz_x_x_yz, g_xxz_x_x_zz, g_xxz_xzz_x_xx, g_xxz_xzz_x_xy, g_xxz_xzz_x_xz, g_xxz_xzz_x_yy, g_xxz_xzz_x_yz, g_xxz_xzz_x_zz, g_z_z_0_0_xx_xz_x_xx, g_z_z_0_0_xx_xz_x_xy, g_z_z_0_0_xx_xz_x_xz, g_z_z_0_0_xx_xz_x_yy, g_z_z_0_0_xx_xz_x_yz, g_z_z_0_0_xx_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xz_x_xx[i] = -2.0 * g_xxz_x_x_xx[i] * a_exp + 4.0 * g_xxz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_x_xy[i] = -2.0 * g_xxz_x_x_xy[i] * a_exp + 4.0 * g_xxz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_x_xz[i] = -2.0 * g_xxz_x_x_xz[i] * a_exp + 4.0 * g_xxz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_x_yy[i] = -2.0 * g_xxz_x_x_yy[i] * a_exp + 4.0 * g_xxz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_x_yz[i] = -2.0 * g_xxz_x_x_yz[i] * a_exp + 4.0 * g_xxz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_x_zz[i] = -2.0 * g_xxz_x_x_zz[i] * a_exp + 4.0 * g_xxz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5226-5232)

    #pragma omp simd aligned(g_xxz_x_y_xx, g_xxz_x_y_xy, g_xxz_x_y_xz, g_xxz_x_y_yy, g_xxz_x_y_yz, g_xxz_x_y_zz, g_xxz_xzz_y_xx, g_xxz_xzz_y_xy, g_xxz_xzz_y_xz, g_xxz_xzz_y_yy, g_xxz_xzz_y_yz, g_xxz_xzz_y_zz, g_z_z_0_0_xx_xz_y_xx, g_z_z_0_0_xx_xz_y_xy, g_z_z_0_0_xx_xz_y_xz, g_z_z_0_0_xx_xz_y_yy, g_z_z_0_0_xx_xz_y_yz, g_z_z_0_0_xx_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xz_y_xx[i] = -2.0 * g_xxz_x_y_xx[i] * a_exp + 4.0 * g_xxz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_y_xy[i] = -2.0 * g_xxz_x_y_xy[i] * a_exp + 4.0 * g_xxz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_y_xz[i] = -2.0 * g_xxz_x_y_xz[i] * a_exp + 4.0 * g_xxz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_y_yy[i] = -2.0 * g_xxz_x_y_yy[i] * a_exp + 4.0 * g_xxz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_y_yz[i] = -2.0 * g_xxz_x_y_yz[i] * a_exp + 4.0 * g_xxz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_y_zz[i] = -2.0 * g_xxz_x_y_zz[i] * a_exp + 4.0 * g_xxz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5232-5238)

    #pragma omp simd aligned(g_xxz_x_z_xx, g_xxz_x_z_xy, g_xxz_x_z_xz, g_xxz_x_z_yy, g_xxz_x_z_yz, g_xxz_x_z_zz, g_xxz_xzz_z_xx, g_xxz_xzz_z_xy, g_xxz_xzz_z_xz, g_xxz_xzz_z_yy, g_xxz_xzz_z_yz, g_xxz_xzz_z_zz, g_z_z_0_0_xx_xz_z_xx, g_z_z_0_0_xx_xz_z_xy, g_z_z_0_0_xx_xz_z_xz, g_z_z_0_0_xx_xz_z_yy, g_z_z_0_0_xx_xz_z_yz, g_z_z_0_0_xx_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_xz_z_xx[i] = -2.0 * g_xxz_x_z_xx[i] * a_exp + 4.0 * g_xxz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_z_xy[i] = -2.0 * g_xxz_x_z_xy[i] * a_exp + 4.0 * g_xxz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_z_xz[i] = -2.0 * g_xxz_x_z_xz[i] * a_exp + 4.0 * g_xxz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_z_yy[i] = -2.0 * g_xxz_x_z_yy[i] * a_exp + 4.0 * g_xxz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_z_yz[i] = -2.0 * g_xxz_x_z_yz[i] * a_exp + 4.0 * g_xxz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_xz_z_zz[i] = -2.0 * g_xxz_x_z_zz[i] * a_exp + 4.0 * g_xxz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5238-5244)

    #pragma omp simd aligned(g_xxz_yyz_x_xx, g_xxz_yyz_x_xy, g_xxz_yyz_x_xz, g_xxz_yyz_x_yy, g_xxz_yyz_x_yz, g_xxz_yyz_x_zz, g_z_z_0_0_xx_yy_x_xx, g_z_z_0_0_xx_yy_x_xy, g_z_z_0_0_xx_yy_x_xz, g_z_z_0_0_xx_yy_x_yy, g_z_z_0_0_xx_yy_x_yz, g_z_z_0_0_xx_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yy_x_xx[i] = 4.0 * g_xxz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_x_xy[i] = 4.0 * g_xxz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_x_xz[i] = 4.0 * g_xxz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_x_yy[i] = 4.0 * g_xxz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_x_yz[i] = 4.0 * g_xxz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_x_zz[i] = 4.0 * g_xxz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5244-5250)

    #pragma omp simd aligned(g_xxz_yyz_y_xx, g_xxz_yyz_y_xy, g_xxz_yyz_y_xz, g_xxz_yyz_y_yy, g_xxz_yyz_y_yz, g_xxz_yyz_y_zz, g_z_z_0_0_xx_yy_y_xx, g_z_z_0_0_xx_yy_y_xy, g_z_z_0_0_xx_yy_y_xz, g_z_z_0_0_xx_yy_y_yy, g_z_z_0_0_xx_yy_y_yz, g_z_z_0_0_xx_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yy_y_xx[i] = 4.0 * g_xxz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_y_xy[i] = 4.0 * g_xxz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_y_xz[i] = 4.0 * g_xxz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_y_yy[i] = 4.0 * g_xxz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_y_yz[i] = 4.0 * g_xxz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_y_zz[i] = 4.0 * g_xxz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5250-5256)

    #pragma omp simd aligned(g_xxz_yyz_z_xx, g_xxz_yyz_z_xy, g_xxz_yyz_z_xz, g_xxz_yyz_z_yy, g_xxz_yyz_z_yz, g_xxz_yyz_z_zz, g_z_z_0_0_xx_yy_z_xx, g_z_z_0_0_xx_yy_z_xy, g_z_z_0_0_xx_yy_z_xz, g_z_z_0_0_xx_yy_z_yy, g_z_z_0_0_xx_yy_z_yz, g_z_z_0_0_xx_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yy_z_xx[i] = 4.0 * g_xxz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_z_xy[i] = 4.0 * g_xxz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_z_xz[i] = 4.0 * g_xxz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_z_yy[i] = 4.0 * g_xxz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_z_yz[i] = 4.0 * g_xxz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yy_z_zz[i] = 4.0 * g_xxz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5256-5262)

    #pragma omp simd aligned(g_xxz_y_x_xx, g_xxz_y_x_xy, g_xxz_y_x_xz, g_xxz_y_x_yy, g_xxz_y_x_yz, g_xxz_y_x_zz, g_xxz_yzz_x_xx, g_xxz_yzz_x_xy, g_xxz_yzz_x_xz, g_xxz_yzz_x_yy, g_xxz_yzz_x_yz, g_xxz_yzz_x_zz, g_z_z_0_0_xx_yz_x_xx, g_z_z_0_0_xx_yz_x_xy, g_z_z_0_0_xx_yz_x_xz, g_z_z_0_0_xx_yz_x_yy, g_z_z_0_0_xx_yz_x_yz, g_z_z_0_0_xx_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yz_x_xx[i] = -2.0 * g_xxz_y_x_xx[i] * a_exp + 4.0 * g_xxz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_x_xy[i] = -2.0 * g_xxz_y_x_xy[i] * a_exp + 4.0 * g_xxz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_x_xz[i] = -2.0 * g_xxz_y_x_xz[i] * a_exp + 4.0 * g_xxz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_x_yy[i] = -2.0 * g_xxz_y_x_yy[i] * a_exp + 4.0 * g_xxz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_x_yz[i] = -2.0 * g_xxz_y_x_yz[i] * a_exp + 4.0 * g_xxz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_x_zz[i] = -2.0 * g_xxz_y_x_zz[i] * a_exp + 4.0 * g_xxz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5262-5268)

    #pragma omp simd aligned(g_xxz_y_y_xx, g_xxz_y_y_xy, g_xxz_y_y_xz, g_xxz_y_y_yy, g_xxz_y_y_yz, g_xxz_y_y_zz, g_xxz_yzz_y_xx, g_xxz_yzz_y_xy, g_xxz_yzz_y_xz, g_xxz_yzz_y_yy, g_xxz_yzz_y_yz, g_xxz_yzz_y_zz, g_z_z_0_0_xx_yz_y_xx, g_z_z_0_0_xx_yz_y_xy, g_z_z_0_0_xx_yz_y_xz, g_z_z_0_0_xx_yz_y_yy, g_z_z_0_0_xx_yz_y_yz, g_z_z_0_0_xx_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yz_y_xx[i] = -2.0 * g_xxz_y_y_xx[i] * a_exp + 4.0 * g_xxz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_y_xy[i] = -2.0 * g_xxz_y_y_xy[i] * a_exp + 4.0 * g_xxz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_y_xz[i] = -2.0 * g_xxz_y_y_xz[i] * a_exp + 4.0 * g_xxz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_y_yy[i] = -2.0 * g_xxz_y_y_yy[i] * a_exp + 4.0 * g_xxz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_y_yz[i] = -2.0 * g_xxz_y_y_yz[i] * a_exp + 4.0 * g_xxz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_y_zz[i] = -2.0 * g_xxz_y_y_zz[i] * a_exp + 4.0 * g_xxz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5268-5274)

    #pragma omp simd aligned(g_xxz_y_z_xx, g_xxz_y_z_xy, g_xxz_y_z_xz, g_xxz_y_z_yy, g_xxz_y_z_yz, g_xxz_y_z_zz, g_xxz_yzz_z_xx, g_xxz_yzz_z_xy, g_xxz_yzz_z_xz, g_xxz_yzz_z_yy, g_xxz_yzz_z_yz, g_xxz_yzz_z_zz, g_z_z_0_0_xx_yz_z_xx, g_z_z_0_0_xx_yz_z_xy, g_z_z_0_0_xx_yz_z_xz, g_z_z_0_0_xx_yz_z_yy, g_z_z_0_0_xx_yz_z_yz, g_z_z_0_0_xx_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_yz_z_xx[i] = -2.0 * g_xxz_y_z_xx[i] * a_exp + 4.0 * g_xxz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_z_xy[i] = -2.0 * g_xxz_y_z_xy[i] * a_exp + 4.0 * g_xxz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_z_xz[i] = -2.0 * g_xxz_y_z_xz[i] * a_exp + 4.0 * g_xxz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_z_yy[i] = -2.0 * g_xxz_y_z_yy[i] * a_exp + 4.0 * g_xxz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_z_yz[i] = -2.0 * g_xxz_y_z_yz[i] * a_exp + 4.0 * g_xxz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_yz_z_zz[i] = -2.0 * g_xxz_y_z_zz[i] * a_exp + 4.0 * g_xxz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5274-5280)

    #pragma omp simd aligned(g_xxz_z_x_xx, g_xxz_z_x_xy, g_xxz_z_x_xz, g_xxz_z_x_yy, g_xxz_z_x_yz, g_xxz_z_x_zz, g_xxz_zzz_x_xx, g_xxz_zzz_x_xy, g_xxz_zzz_x_xz, g_xxz_zzz_x_yy, g_xxz_zzz_x_yz, g_xxz_zzz_x_zz, g_z_z_0_0_xx_zz_x_xx, g_z_z_0_0_xx_zz_x_xy, g_z_z_0_0_xx_zz_x_xz, g_z_z_0_0_xx_zz_x_yy, g_z_z_0_0_xx_zz_x_yz, g_z_z_0_0_xx_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_zz_x_xx[i] = -4.0 * g_xxz_z_x_xx[i] * a_exp + 4.0 * g_xxz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_x_xy[i] = -4.0 * g_xxz_z_x_xy[i] * a_exp + 4.0 * g_xxz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_x_xz[i] = -4.0 * g_xxz_z_x_xz[i] * a_exp + 4.0 * g_xxz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_x_yy[i] = -4.0 * g_xxz_z_x_yy[i] * a_exp + 4.0 * g_xxz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_x_yz[i] = -4.0 * g_xxz_z_x_yz[i] * a_exp + 4.0 * g_xxz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_x_zz[i] = -4.0 * g_xxz_z_x_zz[i] * a_exp + 4.0 * g_xxz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5280-5286)

    #pragma omp simd aligned(g_xxz_z_y_xx, g_xxz_z_y_xy, g_xxz_z_y_xz, g_xxz_z_y_yy, g_xxz_z_y_yz, g_xxz_z_y_zz, g_xxz_zzz_y_xx, g_xxz_zzz_y_xy, g_xxz_zzz_y_xz, g_xxz_zzz_y_yy, g_xxz_zzz_y_yz, g_xxz_zzz_y_zz, g_z_z_0_0_xx_zz_y_xx, g_z_z_0_0_xx_zz_y_xy, g_z_z_0_0_xx_zz_y_xz, g_z_z_0_0_xx_zz_y_yy, g_z_z_0_0_xx_zz_y_yz, g_z_z_0_0_xx_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_zz_y_xx[i] = -4.0 * g_xxz_z_y_xx[i] * a_exp + 4.0 * g_xxz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_y_xy[i] = -4.0 * g_xxz_z_y_xy[i] * a_exp + 4.0 * g_xxz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_y_xz[i] = -4.0 * g_xxz_z_y_xz[i] * a_exp + 4.0 * g_xxz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_y_yy[i] = -4.0 * g_xxz_z_y_yy[i] * a_exp + 4.0 * g_xxz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_y_yz[i] = -4.0 * g_xxz_z_y_yz[i] * a_exp + 4.0 * g_xxz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_y_zz[i] = -4.0 * g_xxz_z_y_zz[i] * a_exp + 4.0 * g_xxz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5286-5292)

    #pragma omp simd aligned(g_xxz_z_z_xx, g_xxz_z_z_xy, g_xxz_z_z_xz, g_xxz_z_z_yy, g_xxz_z_z_yz, g_xxz_z_z_zz, g_xxz_zzz_z_xx, g_xxz_zzz_z_xy, g_xxz_zzz_z_xz, g_xxz_zzz_z_yy, g_xxz_zzz_z_yz, g_xxz_zzz_z_zz, g_z_z_0_0_xx_zz_z_xx, g_z_z_0_0_xx_zz_z_xy, g_z_z_0_0_xx_zz_z_xz, g_z_z_0_0_xx_zz_z_yy, g_z_z_0_0_xx_zz_z_yz, g_z_z_0_0_xx_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xx_zz_z_xx[i] = -4.0 * g_xxz_z_z_xx[i] * a_exp + 4.0 * g_xxz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_z_xy[i] = -4.0 * g_xxz_z_z_xy[i] * a_exp + 4.0 * g_xxz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_z_xz[i] = -4.0 * g_xxz_z_z_xz[i] * a_exp + 4.0 * g_xxz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_z_yy[i] = -4.0 * g_xxz_z_z_yy[i] * a_exp + 4.0 * g_xxz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_z_yz[i] = -4.0 * g_xxz_z_z_yz[i] * a_exp + 4.0 * g_xxz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xx_zz_z_zz[i] = -4.0 * g_xxz_z_z_zz[i] * a_exp + 4.0 * g_xxz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5292-5298)

    #pragma omp simd aligned(g_xyz_xxz_x_xx, g_xyz_xxz_x_xy, g_xyz_xxz_x_xz, g_xyz_xxz_x_yy, g_xyz_xxz_x_yz, g_xyz_xxz_x_zz, g_z_z_0_0_xy_xx_x_xx, g_z_z_0_0_xy_xx_x_xy, g_z_z_0_0_xy_xx_x_xz, g_z_z_0_0_xy_xx_x_yy, g_z_z_0_0_xy_xx_x_yz, g_z_z_0_0_xy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xx_x_xx[i] = 4.0 * g_xyz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_x_xy[i] = 4.0 * g_xyz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_x_xz[i] = 4.0 * g_xyz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_x_yy[i] = 4.0 * g_xyz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_x_yz[i] = 4.0 * g_xyz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_x_zz[i] = 4.0 * g_xyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5298-5304)

    #pragma omp simd aligned(g_xyz_xxz_y_xx, g_xyz_xxz_y_xy, g_xyz_xxz_y_xz, g_xyz_xxz_y_yy, g_xyz_xxz_y_yz, g_xyz_xxz_y_zz, g_z_z_0_0_xy_xx_y_xx, g_z_z_0_0_xy_xx_y_xy, g_z_z_0_0_xy_xx_y_xz, g_z_z_0_0_xy_xx_y_yy, g_z_z_0_0_xy_xx_y_yz, g_z_z_0_0_xy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xx_y_xx[i] = 4.0 * g_xyz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_y_xy[i] = 4.0 * g_xyz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_y_xz[i] = 4.0 * g_xyz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_y_yy[i] = 4.0 * g_xyz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_y_yz[i] = 4.0 * g_xyz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_y_zz[i] = 4.0 * g_xyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5304-5310)

    #pragma omp simd aligned(g_xyz_xxz_z_xx, g_xyz_xxz_z_xy, g_xyz_xxz_z_xz, g_xyz_xxz_z_yy, g_xyz_xxz_z_yz, g_xyz_xxz_z_zz, g_z_z_0_0_xy_xx_z_xx, g_z_z_0_0_xy_xx_z_xy, g_z_z_0_0_xy_xx_z_xz, g_z_z_0_0_xy_xx_z_yy, g_z_z_0_0_xy_xx_z_yz, g_z_z_0_0_xy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xx_z_xx[i] = 4.0 * g_xyz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_z_xy[i] = 4.0 * g_xyz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_z_xz[i] = 4.0 * g_xyz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_z_yy[i] = 4.0 * g_xyz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_z_yz[i] = 4.0 * g_xyz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xx_z_zz[i] = 4.0 * g_xyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5310-5316)

    #pragma omp simd aligned(g_xyz_xyz_x_xx, g_xyz_xyz_x_xy, g_xyz_xyz_x_xz, g_xyz_xyz_x_yy, g_xyz_xyz_x_yz, g_xyz_xyz_x_zz, g_z_z_0_0_xy_xy_x_xx, g_z_z_0_0_xy_xy_x_xy, g_z_z_0_0_xy_xy_x_xz, g_z_z_0_0_xy_xy_x_yy, g_z_z_0_0_xy_xy_x_yz, g_z_z_0_0_xy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xy_x_xx[i] = 4.0 * g_xyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_x_xy[i] = 4.0 * g_xyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_x_xz[i] = 4.0 * g_xyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_x_yy[i] = 4.0 * g_xyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_x_yz[i] = 4.0 * g_xyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_x_zz[i] = 4.0 * g_xyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5316-5322)

    #pragma omp simd aligned(g_xyz_xyz_y_xx, g_xyz_xyz_y_xy, g_xyz_xyz_y_xz, g_xyz_xyz_y_yy, g_xyz_xyz_y_yz, g_xyz_xyz_y_zz, g_z_z_0_0_xy_xy_y_xx, g_z_z_0_0_xy_xy_y_xy, g_z_z_0_0_xy_xy_y_xz, g_z_z_0_0_xy_xy_y_yy, g_z_z_0_0_xy_xy_y_yz, g_z_z_0_0_xy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xy_y_xx[i] = 4.0 * g_xyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_y_xy[i] = 4.0 * g_xyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_y_xz[i] = 4.0 * g_xyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_y_yy[i] = 4.0 * g_xyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_y_yz[i] = 4.0 * g_xyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_y_zz[i] = 4.0 * g_xyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5322-5328)

    #pragma omp simd aligned(g_xyz_xyz_z_xx, g_xyz_xyz_z_xy, g_xyz_xyz_z_xz, g_xyz_xyz_z_yy, g_xyz_xyz_z_yz, g_xyz_xyz_z_zz, g_z_z_0_0_xy_xy_z_xx, g_z_z_0_0_xy_xy_z_xy, g_z_z_0_0_xy_xy_z_xz, g_z_z_0_0_xy_xy_z_yy, g_z_z_0_0_xy_xy_z_yz, g_z_z_0_0_xy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xy_z_xx[i] = 4.0 * g_xyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_z_xy[i] = 4.0 * g_xyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_z_xz[i] = 4.0 * g_xyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_z_yy[i] = 4.0 * g_xyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_z_yz[i] = 4.0 * g_xyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xy_z_zz[i] = 4.0 * g_xyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5328-5334)

    #pragma omp simd aligned(g_xyz_x_x_xx, g_xyz_x_x_xy, g_xyz_x_x_xz, g_xyz_x_x_yy, g_xyz_x_x_yz, g_xyz_x_x_zz, g_xyz_xzz_x_xx, g_xyz_xzz_x_xy, g_xyz_xzz_x_xz, g_xyz_xzz_x_yy, g_xyz_xzz_x_yz, g_xyz_xzz_x_zz, g_z_z_0_0_xy_xz_x_xx, g_z_z_0_0_xy_xz_x_xy, g_z_z_0_0_xy_xz_x_xz, g_z_z_0_0_xy_xz_x_yy, g_z_z_0_0_xy_xz_x_yz, g_z_z_0_0_xy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xz_x_xx[i] = -2.0 * g_xyz_x_x_xx[i] * a_exp + 4.0 * g_xyz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_x_xy[i] = -2.0 * g_xyz_x_x_xy[i] * a_exp + 4.0 * g_xyz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_x_xz[i] = -2.0 * g_xyz_x_x_xz[i] * a_exp + 4.0 * g_xyz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_x_yy[i] = -2.0 * g_xyz_x_x_yy[i] * a_exp + 4.0 * g_xyz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_x_yz[i] = -2.0 * g_xyz_x_x_yz[i] * a_exp + 4.0 * g_xyz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_x_zz[i] = -2.0 * g_xyz_x_x_zz[i] * a_exp + 4.0 * g_xyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5334-5340)

    #pragma omp simd aligned(g_xyz_x_y_xx, g_xyz_x_y_xy, g_xyz_x_y_xz, g_xyz_x_y_yy, g_xyz_x_y_yz, g_xyz_x_y_zz, g_xyz_xzz_y_xx, g_xyz_xzz_y_xy, g_xyz_xzz_y_xz, g_xyz_xzz_y_yy, g_xyz_xzz_y_yz, g_xyz_xzz_y_zz, g_z_z_0_0_xy_xz_y_xx, g_z_z_0_0_xy_xz_y_xy, g_z_z_0_0_xy_xz_y_xz, g_z_z_0_0_xy_xz_y_yy, g_z_z_0_0_xy_xz_y_yz, g_z_z_0_0_xy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xz_y_xx[i] = -2.0 * g_xyz_x_y_xx[i] * a_exp + 4.0 * g_xyz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_y_xy[i] = -2.0 * g_xyz_x_y_xy[i] * a_exp + 4.0 * g_xyz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_y_xz[i] = -2.0 * g_xyz_x_y_xz[i] * a_exp + 4.0 * g_xyz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_y_yy[i] = -2.0 * g_xyz_x_y_yy[i] * a_exp + 4.0 * g_xyz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_y_yz[i] = -2.0 * g_xyz_x_y_yz[i] * a_exp + 4.0 * g_xyz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_y_zz[i] = -2.0 * g_xyz_x_y_zz[i] * a_exp + 4.0 * g_xyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5340-5346)

    #pragma omp simd aligned(g_xyz_x_z_xx, g_xyz_x_z_xy, g_xyz_x_z_xz, g_xyz_x_z_yy, g_xyz_x_z_yz, g_xyz_x_z_zz, g_xyz_xzz_z_xx, g_xyz_xzz_z_xy, g_xyz_xzz_z_xz, g_xyz_xzz_z_yy, g_xyz_xzz_z_yz, g_xyz_xzz_z_zz, g_z_z_0_0_xy_xz_z_xx, g_z_z_0_0_xy_xz_z_xy, g_z_z_0_0_xy_xz_z_xz, g_z_z_0_0_xy_xz_z_yy, g_z_z_0_0_xy_xz_z_yz, g_z_z_0_0_xy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_xz_z_xx[i] = -2.0 * g_xyz_x_z_xx[i] * a_exp + 4.0 * g_xyz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_z_xy[i] = -2.0 * g_xyz_x_z_xy[i] * a_exp + 4.0 * g_xyz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_z_xz[i] = -2.0 * g_xyz_x_z_xz[i] * a_exp + 4.0 * g_xyz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_z_yy[i] = -2.0 * g_xyz_x_z_yy[i] * a_exp + 4.0 * g_xyz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_z_yz[i] = -2.0 * g_xyz_x_z_yz[i] * a_exp + 4.0 * g_xyz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_xz_z_zz[i] = -2.0 * g_xyz_x_z_zz[i] * a_exp + 4.0 * g_xyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5346-5352)

    #pragma omp simd aligned(g_xyz_yyz_x_xx, g_xyz_yyz_x_xy, g_xyz_yyz_x_xz, g_xyz_yyz_x_yy, g_xyz_yyz_x_yz, g_xyz_yyz_x_zz, g_z_z_0_0_xy_yy_x_xx, g_z_z_0_0_xy_yy_x_xy, g_z_z_0_0_xy_yy_x_xz, g_z_z_0_0_xy_yy_x_yy, g_z_z_0_0_xy_yy_x_yz, g_z_z_0_0_xy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yy_x_xx[i] = 4.0 * g_xyz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_x_xy[i] = 4.0 * g_xyz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_x_xz[i] = 4.0 * g_xyz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_x_yy[i] = 4.0 * g_xyz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_x_yz[i] = 4.0 * g_xyz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_x_zz[i] = 4.0 * g_xyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5352-5358)

    #pragma omp simd aligned(g_xyz_yyz_y_xx, g_xyz_yyz_y_xy, g_xyz_yyz_y_xz, g_xyz_yyz_y_yy, g_xyz_yyz_y_yz, g_xyz_yyz_y_zz, g_z_z_0_0_xy_yy_y_xx, g_z_z_0_0_xy_yy_y_xy, g_z_z_0_0_xy_yy_y_xz, g_z_z_0_0_xy_yy_y_yy, g_z_z_0_0_xy_yy_y_yz, g_z_z_0_0_xy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yy_y_xx[i] = 4.0 * g_xyz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_y_xy[i] = 4.0 * g_xyz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_y_xz[i] = 4.0 * g_xyz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_y_yy[i] = 4.0 * g_xyz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_y_yz[i] = 4.0 * g_xyz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_y_zz[i] = 4.0 * g_xyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5358-5364)

    #pragma omp simd aligned(g_xyz_yyz_z_xx, g_xyz_yyz_z_xy, g_xyz_yyz_z_xz, g_xyz_yyz_z_yy, g_xyz_yyz_z_yz, g_xyz_yyz_z_zz, g_z_z_0_0_xy_yy_z_xx, g_z_z_0_0_xy_yy_z_xy, g_z_z_0_0_xy_yy_z_xz, g_z_z_0_0_xy_yy_z_yy, g_z_z_0_0_xy_yy_z_yz, g_z_z_0_0_xy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yy_z_xx[i] = 4.0 * g_xyz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_z_xy[i] = 4.0 * g_xyz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_z_xz[i] = 4.0 * g_xyz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_z_yy[i] = 4.0 * g_xyz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_z_yz[i] = 4.0 * g_xyz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yy_z_zz[i] = 4.0 * g_xyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5364-5370)

    #pragma omp simd aligned(g_xyz_y_x_xx, g_xyz_y_x_xy, g_xyz_y_x_xz, g_xyz_y_x_yy, g_xyz_y_x_yz, g_xyz_y_x_zz, g_xyz_yzz_x_xx, g_xyz_yzz_x_xy, g_xyz_yzz_x_xz, g_xyz_yzz_x_yy, g_xyz_yzz_x_yz, g_xyz_yzz_x_zz, g_z_z_0_0_xy_yz_x_xx, g_z_z_0_0_xy_yz_x_xy, g_z_z_0_0_xy_yz_x_xz, g_z_z_0_0_xy_yz_x_yy, g_z_z_0_0_xy_yz_x_yz, g_z_z_0_0_xy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yz_x_xx[i] = -2.0 * g_xyz_y_x_xx[i] * a_exp + 4.0 * g_xyz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_x_xy[i] = -2.0 * g_xyz_y_x_xy[i] * a_exp + 4.0 * g_xyz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_x_xz[i] = -2.0 * g_xyz_y_x_xz[i] * a_exp + 4.0 * g_xyz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_x_yy[i] = -2.0 * g_xyz_y_x_yy[i] * a_exp + 4.0 * g_xyz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_x_yz[i] = -2.0 * g_xyz_y_x_yz[i] * a_exp + 4.0 * g_xyz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_x_zz[i] = -2.0 * g_xyz_y_x_zz[i] * a_exp + 4.0 * g_xyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5370-5376)

    #pragma omp simd aligned(g_xyz_y_y_xx, g_xyz_y_y_xy, g_xyz_y_y_xz, g_xyz_y_y_yy, g_xyz_y_y_yz, g_xyz_y_y_zz, g_xyz_yzz_y_xx, g_xyz_yzz_y_xy, g_xyz_yzz_y_xz, g_xyz_yzz_y_yy, g_xyz_yzz_y_yz, g_xyz_yzz_y_zz, g_z_z_0_0_xy_yz_y_xx, g_z_z_0_0_xy_yz_y_xy, g_z_z_0_0_xy_yz_y_xz, g_z_z_0_0_xy_yz_y_yy, g_z_z_0_0_xy_yz_y_yz, g_z_z_0_0_xy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yz_y_xx[i] = -2.0 * g_xyz_y_y_xx[i] * a_exp + 4.0 * g_xyz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_y_xy[i] = -2.0 * g_xyz_y_y_xy[i] * a_exp + 4.0 * g_xyz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_y_xz[i] = -2.0 * g_xyz_y_y_xz[i] * a_exp + 4.0 * g_xyz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_y_yy[i] = -2.0 * g_xyz_y_y_yy[i] * a_exp + 4.0 * g_xyz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_y_yz[i] = -2.0 * g_xyz_y_y_yz[i] * a_exp + 4.0 * g_xyz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_y_zz[i] = -2.0 * g_xyz_y_y_zz[i] * a_exp + 4.0 * g_xyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5376-5382)

    #pragma omp simd aligned(g_xyz_y_z_xx, g_xyz_y_z_xy, g_xyz_y_z_xz, g_xyz_y_z_yy, g_xyz_y_z_yz, g_xyz_y_z_zz, g_xyz_yzz_z_xx, g_xyz_yzz_z_xy, g_xyz_yzz_z_xz, g_xyz_yzz_z_yy, g_xyz_yzz_z_yz, g_xyz_yzz_z_zz, g_z_z_0_0_xy_yz_z_xx, g_z_z_0_0_xy_yz_z_xy, g_z_z_0_0_xy_yz_z_xz, g_z_z_0_0_xy_yz_z_yy, g_z_z_0_0_xy_yz_z_yz, g_z_z_0_0_xy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_yz_z_xx[i] = -2.0 * g_xyz_y_z_xx[i] * a_exp + 4.0 * g_xyz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_z_xy[i] = -2.0 * g_xyz_y_z_xy[i] * a_exp + 4.0 * g_xyz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_z_xz[i] = -2.0 * g_xyz_y_z_xz[i] * a_exp + 4.0 * g_xyz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_z_yy[i] = -2.0 * g_xyz_y_z_yy[i] * a_exp + 4.0 * g_xyz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_z_yz[i] = -2.0 * g_xyz_y_z_yz[i] * a_exp + 4.0 * g_xyz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_yz_z_zz[i] = -2.0 * g_xyz_y_z_zz[i] * a_exp + 4.0 * g_xyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5382-5388)

    #pragma omp simd aligned(g_xyz_z_x_xx, g_xyz_z_x_xy, g_xyz_z_x_xz, g_xyz_z_x_yy, g_xyz_z_x_yz, g_xyz_z_x_zz, g_xyz_zzz_x_xx, g_xyz_zzz_x_xy, g_xyz_zzz_x_xz, g_xyz_zzz_x_yy, g_xyz_zzz_x_yz, g_xyz_zzz_x_zz, g_z_z_0_0_xy_zz_x_xx, g_z_z_0_0_xy_zz_x_xy, g_z_z_0_0_xy_zz_x_xz, g_z_z_0_0_xy_zz_x_yy, g_z_z_0_0_xy_zz_x_yz, g_z_z_0_0_xy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_zz_x_xx[i] = -4.0 * g_xyz_z_x_xx[i] * a_exp + 4.0 * g_xyz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_x_xy[i] = -4.0 * g_xyz_z_x_xy[i] * a_exp + 4.0 * g_xyz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_x_xz[i] = -4.0 * g_xyz_z_x_xz[i] * a_exp + 4.0 * g_xyz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_x_yy[i] = -4.0 * g_xyz_z_x_yy[i] * a_exp + 4.0 * g_xyz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_x_yz[i] = -4.0 * g_xyz_z_x_yz[i] * a_exp + 4.0 * g_xyz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_x_zz[i] = -4.0 * g_xyz_z_x_zz[i] * a_exp + 4.0 * g_xyz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5388-5394)

    #pragma omp simd aligned(g_xyz_z_y_xx, g_xyz_z_y_xy, g_xyz_z_y_xz, g_xyz_z_y_yy, g_xyz_z_y_yz, g_xyz_z_y_zz, g_xyz_zzz_y_xx, g_xyz_zzz_y_xy, g_xyz_zzz_y_xz, g_xyz_zzz_y_yy, g_xyz_zzz_y_yz, g_xyz_zzz_y_zz, g_z_z_0_0_xy_zz_y_xx, g_z_z_0_0_xy_zz_y_xy, g_z_z_0_0_xy_zz_y_xz, g_z_z_0_0_xy_zz_y_yy, g_z_z_0_0_xy_zz_y_yz, g_z_z_0_0_xy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_zz_y_xx[i] = -4.0 * g_xyz_z_y_xx[i] * a_exp + 4.0 * g_xyz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_y_xy[i] = -4.0 * g_xyz_z_y_xy[i] * a_exp + 4.0 * g_xyz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_y_xz[i] = -4.0 * g_xyz_z_y_xz[i] * a_exp + 4.0 * g_xyz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_y_yy[i] = -4.0 * g_xyz_z_y_yy[i] * a_exp + 4.0 * g_xyz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_y_yz[i] = -4.0 * g_xyz_z_y_yz[i] * a_exp + 4.0 * g_xyz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_y_zz[i] = -4.0 * g_xyz_z_y_zz[i] * a_exp + 4.0 * g_xyz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5394-5400)

    #pragma omp simd aligned(g_xyz_z_z_xx, g_xyz_z_z_xy, g_xyz_z_z_xz, g_xyz_z_z_yy, g_xyz_z_z_yz, g_xyz_z_z_zz, g_xyz_zzz_z_xx, g_xyz_zzz_z_xy, g_xyz_zzz_z_xz, g_xyz_zzz_z_yy, g_xyz_zzz_z_yz, g_xyz_zzz_z_zz, g_z_z_0_0_xy_zz_z_xx, g_z_z_0_0_xy_zz_z_xy, g_z_z_0_0_xy_zz_z_xz, g_z_z_0_0_xy_zz_z_yy, g_z_z_0_0_xy_zz_z_yz, g_z_z_0_0_xy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xy_zz_z_xx[i] = -4.0 * g_xyz_z_z_xx[i] * a_exp + 4.0 * g_xyz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_z_xy[i] = -4.0 * g_xyz_z_z_xy[i] * a_exp + 4.0 * g_xyz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_z_xz[i] = -4.0 * g_xyz_z_z_xz[i] * a_exp + 4.0 * g_xyz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_z_yy[i] = -4.0 * g_xyz_z_z_yy[i] * a_exp + 4.0 * g_xyz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_z_yz[i] = -4.0 * g_xyz_z_z_yz[i] * a_exp + 4.0 * g_xyz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xy_zz_z_zz[i] = -4.0 * g_xyz_z_z_zz[i] * a_exp + 4.0 * g_xyz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5400-5406)

    #pragma omp simd aligned(g_x_xxz_x_xx, g_x_xxz_x_xy, g_x_xxz_x_xz, g_x_xxz_x_yy, g_x_xxz_x_yz, g_x_xxz_x_zz, g_xzz_xxz_x_xx, g_xzz_xxz_x_xy, g_xzz_xxz_x_xz, g_xzz_xxz_x_yy, g_xzz_xxz_x_yz, g_xzz_xxz_x_zz, g_z_z_0_0_xz_xx_x_xx, g_z_z_0_0_xz_xx_x_xy, g_z_z_0_0_xz_xx_x_xz, g_z_z_0_0_xz_xx_x_yy, g_z_z_0_0_xz_xx_x_yz, g_z_z_0_0_xz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xx_x_xx[i] = -2.0 * g_x_xxz_x_xx[i] * b_exp + 4.0 * g_xzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_x_xy[i] = -2.0 * g_x_xxz_x_xy[i] * b_exp + 4.0 * g_xzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_x_xz[i] = -2.0 * g_x_xxz_x_xz[i] * b_exp + 4.0 * g_xzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_x_yy[i] = -2.0 * g_x_xxz_x_yy[i] * b_exp + 4.0 * g_xzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_x_yz[i] = -2.0 * g_x_xxz_x_yz[i] * b_exp + 4.0 * g_xzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_x_zz[i] = -2.0 * g_x_xxz_x_zz[i] * b_exp + 4.0 * g_xzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5406-5412)

    #pragma omp simd aligned(g_x_xxz_y_xx, g_x_xxz_y_xy, g_x_xxz_y_xz, g_x_xxz_y_yy, g_x_xxz_y_yz, g_x_xxz_y_zz, g_xzz_xxz_y_xx, g_xzz_xxz_y_xy, g_xzz_xxz_y_xz, g_xzz_xxz_y_yy, g_xzz_xxz_y_yz, g_xzz_xxz_y_zz, g_z_z_0_0_xz_xx_y_xx, g_z_z_0_0_xz_xx_y_xy, g_z_z_0_0_xz_xx_y_xz, g_z_z_0_0_xz_xx_y_yy, g_z_z_0_0_xz_xx_y_yz, g_z_z_0_0_xz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xx_y_xx[i] = -2.0 * g_x_xxz_y_xx[i] * b_exp + 4.0 * g_xzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_y_xy[i] = -2.0 * g_x_xxz_y_xy[i] * b_exp + 4.0 * g_xzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_y_xz[i] = -2.0 * g_x_xxz_y_xz[i] * b_exp + 4.0 * g_xzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_y_yy[i] = -2.0 * g_x_xxz_y_yy[i] * b_exp + 4.0 * g_xzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_y_yz[i] = -2.0 * g_x_xxz_y_yz[i] * b_exp + 4.0 * g_xzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_y_zz[i] = -2.0 * g_x_xxz_y_zz[i] * b_exp + 4.0 * g_xzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5412-5418)

    #pragma omp simd aligned(g_x_xxz_z_xx, g_x_xxz_z_xy, g_x_xxz_z_xz, g_x_xxz_z_yy, g_x_xxz_z_yz, g_x_xxz_z_zz, g_xzz_xxz_z_xx, g_xzz_xxz_z_xy, g_xzz_xxz_z_xz, g_xzz_xxz_z_yy, g_xzz_xxz_z_yz, g_xzz_xxz_z_zz, g_z_z_0_0_xz_xx_z_xx, g_z_z_0_0_xz_xx_z_xy, g_z_z_0_0_xz_xx_z_xz, g_z_z_0_0_xz_xx_z_yy, g_z_z_0_0_xz_xx_z_yz, g_z_z_0_0_xz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xx_z_xx[i] = -2.0 * g_x_xxz_z_xx[i] * b_exp + 4.0 * g_xzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_z_xy[i] = -2.0 * g_x_xxz_z_xy[i] * b_exp + 4.0 * g_xzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_z_xz[i] = -2.0 * g_x_xxz_z_xz[i] * b_exp + 4.0 * g_xzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_z_yy[i] = -2.0 * g_x_xxz_z_yy[i] * b_exp + 4.0 * g_xzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_z_yz[i] = -2.0 * g_x_xxz_z_yz[i] * b_exp + 4.0 * g_xzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xx_z_zz[i] = -2.0 * g_x_xxz_z_zz[i] * b_exp + 4.0 * g_xzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5418-5424)

    #pragma omp simd aligned(g_x_xyz_x_xx, g_x_xyz_x_xy, g_x_xyz_x_xz, g_x_xyz_x_yy, g_x_xyz_x_yz, g_x_xyz_x_zz, g_xzz_xyz_x_xx, g_xzz_xyz_x_xy, g_xzz_xyz_x_xz, g_xzz_xyz_x_yy, g_xzz_xyz_x_yz, g_xzz_xyz_x_zz, g_z_z_0_0_xz_xy_x_xx, g_z_z_0_0_xz_xy_x_xy, g_z_z_0_0_xz_xy_x_xz, g_z_z_0_0_xz_xy_x_yy, g_z_z_0_0_xz_xy_x_yz, g_z_z_0_0_xz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xy_x_xx[i] = -2.0 * g_x_xyz_x_xx[i] * b_exp + 4.0 * g_xzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_x_xy[i] = -2.0 * g_x_xyz_x_xy[i] * b_exp + 4.0 * g_xzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_x_xz[i] = -2.0 * g_x_xyz_x_xz[i] * b_exp + 4.0 * g_xzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_x_yy[i] = -2.0 * g_x_xyz_x_yy[i] * b_exp + 4.0 * g_xzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_x_yz[i] = -2.0 * g_x_xyz_x_yz[i] * b_exp + 4.0 * g_xzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_x_zz[i] = -2.0 * g_x_xyz_x_zz[i] * b_exp + 4.0 * g_xzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5424-5430)

    #pragma omp simd aligned(g_x_xyz_y_xx, g_x_xyz_y_xy, g_x_xyz_y_xz, g_x_xyz_y_yy, g_x_xyz_y_yz, g_x_xyz_y_zz, g_xzz_xyz_y_xx, g_xzz_xyz_y_xy, g_xzz_xyz_y_xz, g_xzz_xyz_y_yy, g_xzz_xyz_y_yz, g_xzz_xyz_y_zz, g_z_z_0_0_xz_xy_y_xx, g_z_z_0_0_xz_xy_y_xy, g_z_z_0_0_xz_xy_y_xz, g_z_z_0_0_xz_xy_y_yy, g_z_z_0_0_xz_xy_y_yz, g_z_z_0_0_xz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xy_y_xx[i] = -2.0 * g_x_xyz_y_xx[i] * b_exp + 4.0 * g_xzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_y_xy[i] = -2.0 * g_x_xyz_y_xy[i] * b_exp + 4.0 * g_xzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_y_xz[i] = -2.0 * g_x_xyz_y_xz[i] * b_exp + 4.0 * g_xzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_y_yy[i] = -2.0 * g_x_xyz_y_yy[i] * b_exp + 4.0 * g_xzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_y_yz[i] = -2.0 * g_x_xyz_y_yz[i] * b_exp + 4.0 * g_xzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_y_zz[i] = -2.0 * g_x_xyz_y_zz[i] * b_exp + 4.0 * g_xzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5430-5436)

    #pragma omp simd aligned(g_x_xyz_z_xx, g_x_xyz_z_xy, g_x_xyz_z_xz, g_x_xyz_z_yy, g_x_xyz_z_yz, g_x_xyz_z_zz, g_xzz_xyz_z_xx, g_xzz_xyz_z_xy, g_xzz_xyz_z_xz, g_xzz_xyz_z_yy, g_xzz_xyz_z_yz, g_xzz_xyz_z_zz, g_z_z_0_0_xz_xy_z_xx, g_z_z_0_0_xz_xy_z_xy, g_z_z_0_0_xz_xy_z_xz, g_z_z_0_0_xz_xy_z_yy, g_z_z_0_0_xz_xy_z_yz, g_z_z_0_0_xz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xy_z_xx[i] = -2.0 * g_x_xyz_z_xx[i] * b_exp + 4.0 * g_xzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_z_xy[i] = -2.0 * g_x_xyz_z_xy[i] * b_exp + 4.0 * g_xzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_z_xz[i] = -2.0 * g_x_xyz_z_xz[i] * b_exp + 4.0 * g_xzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_z_yy[i] = -2.0 * g_x_xyz_z_yy[i] * b_exp + 4.0 * g_xzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_z_yz[i] = -2.0 * g_x_xyz_z_yz[i] * b_exp + 4.0 * g_xzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xy_z_zz[i] = -2.0 * g_x_xyz_z_zz[i] * b_exp + 4.0 * g_xzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5436-5442)

    #pragma omp simd aligned(g_x_x_x_xx, g_x_x_x_xy, g_x_x_x_xz, g_x_x_x_yy, g_x_x_x_yz, g_x_x_x_zz, g_x_xzz_x_xx, g_x_xzz_x_xy, g_x_xzz_x_xz, g_x_xzz_x_yy, g_x_xzz_x_yz, g_x_xzz_x_zz, g_xzz_x_x_xx, g_xzz_x_x_xy, g_xzz_x_x_xz, g_xzz_x_x_yy, g_xzz_x_x_yz, g_xzz_x_x_zz, g_xzz_xzz_x_xx, g_xzz_xzz_x_xy, g_xzz_xzz_x_xz, g_xzz_xzz_x_yy, g_xzz_xzz_x_yz, g_xzz_xzz_x_zz, g_z_z_0_0_xz_xz_x_xx, g_z_z_0_0_xz_xz_x_xy, g_z_z_0_0_xz_xz_x_xz, g_z_z_0_0_xz_xz_x_yy, g_z_z_0_0_xz_xz_x_yz, g_z_z_0_0_xz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xz_x_xx[i] = g_x_x_x_xx[i] - 2.0 * g_x_xzz_x_xx[i] * b_exp - 2.0 * g_xzz_x_x_xx[i] * a_exp + 4.0 * g_xzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_x_xy[i] = g_x_x_x_xy[i] - 2.0 * g_x_xzz_x_xy[i] * b_exp - 2.0 * g_xzz_x_x_xy[i] * a_exp + 4.0 * g_xzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_x_xz[i] = g_x_x_x_xz[i] - 2.0 * g_x_xzz_x_xz[i] * b_exp - 2.0 * g_xzz_x_x_xz[i] * a_exp + 4.0 * g_xzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_x_yy[i] = g_x_x_x_yy[i] - 2.0 * g_x_xzz_x_yy[i] * b_exp - 2.0 * g_xzz_x_x_yy[i] * a_exp + 4.0 * g_xzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_x_yz[i] = g_x_x_x_yz[i] - 2.0 * g_x_xzz_x_yz[i] * b_exp - 2.0 * g_xzz_x_x_yz[i] * a_exp + 4.0 * g_xzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_x_zz[i] = g_x_x_x_zz[i] - 2.0 * g_x_xzz_x_zz[i] * b_exp - 2.0 * g_xzz_x_x_zz[i] * a_exp + 4.0 * g_xzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5442-5448)

    #pragma omp simd aligned(g_x_x_y_xx, g_x_x_y_xy, g_x_x_y_xz, g_x_x_y_yy, g_x_x_y_yz, g_x_x_y_zz, g_x_xzz_y_xx, g_x_xzz_y_xy, g_x_xzz_y_xz, g_x_xzz_y_yy, g_x_xzz_y_yz, g_x_xzz_y_zz, g_xzz_x_y_xx, g_xzz_x_y_xy, g_xzz_x_y_xz, g_xzz_x_y_yy, g_xzz_x_y_yz, g_xzz_x_y_zz, g_xzz_xzz_y_xx, g_xzz_xzz_y_xy, g_xzz_xzz_y_xz, g_xzz_xzz_y_yy, g_xzz_xzz_y_yz, g_xzz_xzz_y_zz, g_z_z_0_0_xz_xz_y_xx, g_z_z_0_0_xz_xz_y_xy, g_z_z_0_0_xz_xz_y_xz, g_z_z_0_0_xz_xz_y_yy, g_z_z_0_0_xz_xz_y_yz, g_z_z_0_0_xz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xz_y_xx[i] = g_x_x_y_xx[i] - 2.0 * g_x_xzz_y_xx[i] * b_exp - 2.0 * g_xzz_x_y_xx[i] * a_exp + 4.0 * g_xzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_y_xy[i] = g_x_x_y_xy[i] - 2.0 * g_x_xzz_y_xy[i] * b_exp - 2.0 * g_xzz_x_y_xy[i] * a_exp + 4.0 * g_xzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_y_xz[i] = g_x_x_y_xz[i] - 2.0 * g_x_xzz_y_xz[i] * b_exp - 2.0 * g_xzz_x_y_xz[i] * a_exp + 4.0 * g_xzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_y_yy[i] = g_x_x_y_yy[i] - 2.0 * g_x_xzz_y_yy[i] * b_exp - 2.0 * g_xzz_x_y_yy[i] * a_exp + 4.0 * g_xzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_y_yz[i] = g_x_x_y_yz[i] - 2.0 * g_x_xzz_y_yz[i] * b_exp - 2.0 * g_xzz_x_y_yz[i] * a_exp + 4.0 * g_xzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_y_zz[i] = g_x_x_y_zz[i] - 2.0 * g_x_xzz_y_zz[i] * b_exp - 2.0 * g_xzz_x_y_zz[i] * a_exp + 4.0 * g_xzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5448-5454)

    #pragma omp simd aligned(g_x_x_z_xx, g_x_x_z_xy, g_x_x_z_xz, g_x_x_z_yy, g_x_x_z_yz, g_x_x_z_zz, g_x_xzz_z_xx, g_x_xzz_z_xy, g_x_xzz_z_xz, g_x_xzz_z_yy, g_x_xzz_z_yz, g_x_xzz_z_zz, g_xzz_x_z_xx, g_xzz_x_z_xy, g_xzz_x_z_xz, g_xzz_x_z_yy, g_xzz_x_z_yz, g_xzz_x_z_zz, g_xzz_xzz_z_xx, g_xzz_xzz_z_xy, g_xzz_xzz_z_xz, g_xzz_xzz_z_yy, g_xzz_xzz_z_yz, g_xzz_xzz_z_zz, g_z_z_0_0_xz_xz_z_xx, g_z_z_0_0_xz_xz_z_xy, g_z_z_0_0_xz_xz_z_xz, g_z_z_0_0_xz_xz_z_yy, g_z_z_0_0_xz_xz_z_yz, g_z_z_0_0_xz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_xz_z_xx[i] = g_x_x_z_xx[i] - 2.0 * g_x_xzz_z_xx[i] * b_exp - 2.0 * g_xzz_x_z_xx[i] * a_exp + 4.0 * g_xzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_z_xy[i] = g_x_x_z_xy[i] - 2.0 * g_x_xzz_z_xy[i] * b_exp - 2.0 * g_xzz_x_z_xy[i] * a_exp + 4.0 * g_xzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_z_xz[i] = g_x_x_z_xz[i] - 2.0 * g_x_xzz_z_xz[i] * b_exp - 2.0 * g_xzz_x_z_xz[i] * a_exp + 4.0 * g_xzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_z_yy[i] = g_x_x_z_yy[i] - 2.0 * g_x_xzz_z_yy[i] * b_exp - 2.0 * g_xzz_x_z_yy[i] * a_exp + 4.0 * g_xzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_z_yz[i] = g_x_x_z_yz[i] - 2.0 * g_x_xzz_z_yz[i] * b_exp - 2.0 * g_xzz_x_z_yz[i] * a_exp + 4.0 * g_xzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_xz_z_zz[i] = g_x_x_z_zz[i] - 2.0 * g_x_xzz_z_zz[i] * b_exp - 2.0 * g_xzz_x_z_zz[i] * a_exp + 4.0 * g_xzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5454-5460)

    #pragma omp simd aligned(g_x_yyz_x_xx, g_x_yyz_x_xy, g_x_yyz_x_xz, g_x_yyz_x_yy, g_x_yyz_x_yz, g_x_yyz_x_zz, g_xzz_yyz_x_xx, g_xzz_yyz_x_xy, g_xzz_yyz_x_xz, g_xzz_yyz_x_yy, g_xzz_yyz_x_yz, g_xzz_yyz_x_zz, g_z_z_0_0_xz_yy_x_xx, g_z_z_0_0_xz_yy_x_xy, g_z_z_0_0_xz_yy_x_xz, g_z_z_0_0_xz_yy_x_yy, g_z_z_0_0_xz_yy_x_yz, g_z_z_0_0_xz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yy_x_xx[i] = -2.0 * g_x_yyz_x_xx[i] * b_exp + 4.0 * g_xzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_x_xy[i] = -2.0 * g_x_yyz_x_xy[i] * b_exp + 4.0 * g_xzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_x_xz[i] = -2.0 * g_x_yyz_x_xz[i] * b_exp + 4.0 * g_xzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_x_yy[i] = -2.0 * g_x_yyz_x_yy[i] * b_exp + 4.0 * g_xzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_x_yz[i] = -2.0 * g_x_yyz_x_yz[i] * b_exp + 4.0 * g_xzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_x_zz[i] = -2.0 * g_x_yyz_x_zz[i] * b_exp + 4.0 * g_xzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5460-5466)

    #pragma omp simd aligned(g_x_yyz_y_xx, g_x_yyz_y_xy, g_x_yyz_y_xz, g_x_yyz_y_yy, g_x_yyz_y_yz, g_x_yyz_y_zz, g_xzz_yyz_y_xx, g_xzz_yyz_y_xy, g_xzz_yyz_y_xz, g_xzz_yyz_y_yy, g_xzz_yyz_y_yz, g_xzz_yyz_y_zz, g_z_z_0_0_xz_yy_y_xx, g_z_z_0_0_xz_yy_y_xy, g_z_z_0_0_xz_yy_y_xz, g_z_z_0_0_xz_yy_y_yy, g_z_z_0_0_xz_yy_y_yz, g_z_z_0_0_xz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yy_y_xx[i] = -2.0 * g_x_yyz_y_xx[i] * b_exp + 4.0 * g_xzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_y_xy[i] = -2.0 * g_x_yyz_y_xy[i] * b_exp + 4.0 * g_xzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_y_xz[i] = -2.0 * g_x_yyz_y_xz[i] * b_exp + 4.0 * g_xzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_y_yy[i] = -2.0 * g_x_yyz_y_yy[i] * b_exp + 4.0 * g_xzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_y_yz[i] = -2.0 * g_x_yyz_y_yz[i] * b_exp + 4.0 * g_xzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_y_zz[i] = -2.0 * g_x_yyz_y_zz[i] * b_exp + 4.0 * g_xzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5466-5472)

    #pragma omp simd aligned(g_x_yyz_z_xx, g_x_yyz_z_xy, g_x_yyz_z_xz, g_x_yyz_z_yy, g_x_yyz_z_yz, g_x_yyz_z_zz, g_xzz_yyz_z_xx, g_xzz_yyz_z_xy, g_xzz_yyz_z_xz, g_xzz_yyz_z_yy, g_xzz_yyz_z_yz, g_xzz_yyz_z_zz, g_z_z_0_0_xz_yy_z_xx, g_z_z_0_0_xz_yy_z_xy, g_z_z_0_0_xz_yy_z_xz, g_z_z_0_0_xz_yy_z_yy, g_z_z_0_0_xz_yy_z_yz, g_z_z_0_0_xz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yy_z_xx[i] = -2.0 * g_x_yyz_z_xx[i] * b_exp + 4.0 * g_xzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_z_xy[i] = -2.0 * g_x_yyz_z_xy[i] * b_exp + 4.0 * g_xzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_z_xz[i] = -2.0 * g_x_yyz_z_xz[i] * b_exp + 4.0 * g_xzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_z_yy[i] = -2.0 * g_x_yyz_z_yy[i] * b_exp + 4.0 * g_xzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_z_yz[i] = -2.0 * g_x_yyz_z_yz[i] * b_exp + 4.0 * g_xzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yy_z_zz[i] = -2.0 * g_x_yyz_z_zz[i] * b_exp + 4.0 * g_xzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5472-5478)

    #pragma omp simd aligned(g_x_y_x_xx, g_x_y_x_xy, g_x_y_x_xz, g_x_y_x_yy, g_x_y_x_yz, g_x_y_x_zz, g_x_yzz_x_xx, g_x_yzz_x_xy, g_x_yzz_x_xz, g_x_yzz_x_yy, g_x_yzz_x_yz, g_x_yzz_x_zz, g_xzz_y_x_xx, g_xzz_y_x_xy, g_xzz_y_x_xz, g_xzz_y_x_yy, g_xzz_y_x_yz, g_xzz_y_x_zz, g_xzz_yzz_x_xx, g_xzz_yzz_x_xy, g_xzz_yzz_x_xz, g_xzz_yzz_x_yy, g_xzz_yzz_x_yz, g_xzz_yzz_x_zz, g_z_z_0_0_xz_yz_x_xx, g_z_z_0_0_xz_yz_x_xy, g_z_z_0_0_xz_yz_x_xz, g_z_z_0_0_xz_yz_x_yy, g_z_z_0_0_xz_yz_x_yz, g_z_z_0_0_xz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yz_x_xx[i] = g_x_y_x_xx[i] - 2.0 * g_x_yzz_x_xx[i] * b_exp - 2.0 * g_xzz_y_x_xx[i] * a_exp + 4.0 * g_xzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_x_xy[i] = g_x_y_x_xy[i] - 2.0 * g_x_yzz_x_xy[i] * b_exp - 2.0 * g_xzz_y_x_xy[i] * a_exp + 4.0 * g_xzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_x_xz[i] = g_x_y_x_xz[i] - 2.0 * g_x_yzz_x_xz[i] * b_exp - 2.0 * g_xzz_y_x_xz[i] * a_exp + 4.0 * g_xzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_x_yy[i] = g_x_y_x_yy[i] - 2.0 * g_x_yzz_x_yy[i] * b_exp - 2.0 * g_xzz_y_x_yy[i] * a_exp + 4.0 * g_xzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_x_yz[i] = g_x_y_x_yz[i] - 2.0 * g_x_yzz_x_yz[i] * b_exp - 2.0 * g_xzz_y_x_yz[i] * a_exp + 4.0 * g_xzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_x_zz[i] = g_x_y_x_zz[i] - 2.0 * g_x_yzz_x_zz[i] * b_exp - 2.0 * g_xzz_y_x_zz[i] * a_exp + 4.0 * g_xzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5478-5484)

    #pragma omp simd aligned(g_x_y_y_xx, g_x_y_y_xy, g_x_y_y_xz, g_x_y_y_yy, g_x_y_y_yz, g_x_y_y_zz, g_x_yzz_y_xx, g_x_yzz_y_xy, g_x_yzz_y_xz, g_x_yzz_y_yy, g_x_yzz_y_yz, g_x_yzz_y_zz, g_xzz_y_y_xx, g_xzz_y_y_xy, g_xzz_y_y_xz, g_xzz_y_y_yy, g_xzz_y_y_yz, g_xzz_y_y_zz, g_xzz_yzz_y_xx, g_xzz_yzz_y_xy, g_xzz_yzz_y_xz, g_xzz_yzz_y_yy, g_xzz_yzz_y_yz, g_xzz_yzz_y_zz, g_z_z_0_0_xz_yz_y_xx, g_z_z_0_0_xz_yz_y_xy, g_z_z_0_0_xz_yz_y_xz, g_z_z_0_0_xz_yz_y_yy, g_z_z_0_0_xz_yz_y_yz, g_z_z_0_0_xz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yz_y_xx[i] = g_x_y_y_xx[i] - 2.0 * g_x_yzz_y_xx[i] * b_exp - 2.0 * g_xzz_y_y_xx[i] * a_exp + 4.0 * g_xzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_y_xy[i] = g_x_y_y_xy[i] - 2.0 * g_x_yzz_y_xy[i] * b_exp - 2.0 * g_xzz_y_y_xy[i] * a_exp + 4.0 * g_xzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_y_xz[i] = g_x_y_y_xz[i] - 2.0 * g_x_yzz_y_xz[i] * b_exp - 2.0 * g_xzz_y_y_xz[i] * a_exp + 4.0 * g_xzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_y_yy[i] = g_x_y_y_yy[i] - 2.0 * g_x_yzz_y_yy[i] * b_exp - 2.0 * g_xzz_y_y_yy[i] * a_exp + 4.0 * g_xzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_y_yz[i] = g_x_y_y_yz[i] - 2.0 * g_x_yzz_y_yz[i] * b_exp - 2.0 * g_xzz_y_y_yz[i] * a_exp + 4.0 * g_xzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_y_zz[i] = g_x_y_y_zz[i] - 2.0 * g_x_yzz_y_zz[i] * b_exp - 2.0 * g_xzz_y_y_zz[i] * a_exp + 4.0 * g_xzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5484-5490)

    #pragma omp simd aligned(g_x_y_z_xx, g_x_y_z_xy, g_x_y_z_xz, g_x_y_z_yy, g_x_y_z_yz, g_x_y_z_zz, g_x_yzz_z_xx, g_x_yzz_z_xy, g_x_yzz_z_xz, g_x_yzz_z_yy, g_x_yzz_z_yz, g_x_yzz_z_zz, g_xzz_y_z_xx, g_xzz_y_z_xy, g_xzz_y_z_xz, g_xzz_y_z_yy, g_xzz_y_z_yz, g_xzz_y_z_zz, g_xzz_yzz_z_xx, g_xzz_yzz_z_xy, g_xzz_yzz_z_xz, g_xzz_yzz_z_yy, g_xzz_yzz_z_yz, g_xzz_yzz_z_zz, g_z_z_0_0_xz_yz_z_xx, g_z_z_0_0_xz_yz_z_xy, g_z_z_0_0_xz_yz_z_xz, g_z_z_0_0_xz_yz_z_yy, g_z_z_0_0_xz_yz_z_yz, g_z_z_0_0_xz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_yz_z_xx[i] = g_x_y_z_xx[i] - 2.0 * g_x_yzz_z_xx[i] * b_exp - 2.0 * g_xzz_y_z_xx[i] * a_exp + 4.0 * g_xzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_z_xy[i] = g_x_y_z_xy[i] - 2.0 * g_x_yzz_z_xy[i] * b_exp - 2.0 * g_xzz_y_z_xy[i] * a_exp + 4.0 * g_xzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_z_xz[i] = g_x_y_z_xz[i] - 2.0 * g_x_yzz_z_xz[i] * b_exp - 2.0 * g_xzz_y_z_xz[i] * a_exp + 4.0 * g_xzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_z_yy[i] = g_x_y_z_yy[i] - 2.0 * g_x_yzz_z_yy[i] * b_exp - 2.0 * g_xzz_y_z_yy[i] * a_exp + 4.0 * g_xzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_z_yz[i] = g_x_y_z_yz[i] - 2.0 * g_x_yzz_z_yz[i] * b_exp - 2.0 * g_xzz_y_z_yz[i] * a_exp + 4.0 * g_xzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_yz_z_zz[i] = g_x_y_z_zz[i] - 2.0 * g_x_yzz_z_zz[i] * b_exp - 2.0 * g_xzz_y_z_zz[i] * a_exp + 4.0 * g_xzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5490-5496)

    #pragma omp simd aligned(g_x_z_x_xx, g_x_z_x_xy, g_x_z_x_xz, g_x_z_x_yy, g_x_z_x_yz, g_x_z_x_zz, g_x_zzz_x_xx, g_x_zzz_x_xy, g_x_zzz_x_xz, g_x_zzz_x_yy, g_x_zzz_x_yz, g_x_zzz_x_zz, g_xzz_z_x_xx, g_xzz_z_x_xy, g_xzz_z_x_xz, g_xzz_z_x_yy, g_xzz_z_x_yz, g_xzz_z_x_zz, g_xzz_zzz_x_xx, g_xzz_zzz_x_xy, g_xzz_zzz_x_xz, g_xzz_zzz_x_yy, g_xzz_zzz_x_yz, g_xzz_zzz_x_zz, g_z_z_0_0_xz_zz_x_xx, g_z_z_0_0_xz_zz_x_xy, g_z_z_0_0_xz_zz_x_xz, g_z_z_0_0_xz_zz_x_yy, g_z_z_0_0_xz_zz_x_yz, g_z_z_0_0_xz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_zz_x_xx[i] = 2.0 * g_x_z_x_xx[i] - 2.0 * g_x_zzz_x_xx[i] * b_exp - 4.0 * g_xzz_z_x_xx[i] * a_exp + 4.0 * g_xzz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_x_xy[i] = 2.0 * g_x_z_x_xy[i] - 2.0 * g_x_zzz_x_xy[i] * b_exp - 4.0 * g_xzz_z_x_xy[i] * a_exp + 4.0 * g_xzz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_x_xz[i] = 2.0 * g_x_z_x_xz[i] - 2.0 * g_x_zzz_x_xz[i] * b_exp - 4.0 * g_xzz_z_x_xz[i] * a_exp + 4.0 * g_xzz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_x_yy[i] = 2.0 * g_x_z_x_yy[i] - 2.0 * g_x_zzz_x_yy[i] * b_exp - 4.0 * g_xzz_z_x_yy[i] * a_exp + 4.0 * g_xzz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_x_yz[i] = 2.0 * g_x_z_x_yz[i] - 2.0 * g_x_zzz_x_yz[i] * b_exp - 4.0 * g_xzz_z_x_yz[i] * a_exp + 4.0 * g_xzz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_x_zz[i] = 2.0 * g_x_z_x_zz[i] - 2.0 * g_x_zzz_x_zz[i] * b_exp - 4.0 * g_xzz_z_x_zz[i] * a_exp + 4.0 * g_xzz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5496-5502)

    #pragma omp simd aligned(g_x_z_y_xx, g_x_z_y_xy, g_x_z_y_xz, g_x_z_y_yy, g_x_z_y_yz, g_x_z_y_zz, g_x_zzz_y_xx, g_x_zzz_y_xy, g_x_zzz_y_xz, g_x_zzz_y_yy, g_x_zzz_y_yz, g_x_zzz_y_zz, g_xzz_z_y_xx, g_xzz_z_y_xy, g_xzz_z_y_xz, g_xzz_z_y_yy, g_xzz_z_y_yz, g_xzz_z_y_zz, g_xzz_zzz_y_xx, g_xzz_zzz_y_xy, g_xzz_zzz_y_xz, g_xzz_zzz_y_yy, g_xzz_zzz_y_yz, g_xzz_zzz_y_zz, g_z_z_0_0_xz_zz_y_xx, g_z_z_0_0_xz_zz_y_xy, g_z_z_0_0_xz_zz_y_xz, g_z_z_0_0_xz_zz_y_yy, g_z_z_0_0_xz_zz_y_yz, g_z_z_0_0_xz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_zz_y_xx[i] = 2.0 * g_x_z_y_xx[i] - 2.0 * g_x_zzz_y_xx[i] * b_exp - 4.0 * g_xzz_z_y_xx[i] * a_exp + 4.0 * g_xzz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_y_xy[i] = 2.0 * g_x_z_y_xy[i] - 2.0 * g_x_zzz_y_xy[i] * b_exp - 4.0 * g_xzz_z_y_xy[i] * a_exp + 4.0 * g_xzz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_y_xz[i] = 2.0 * g_x_z_y_xz[i] - 2.0 * g_x_zzz_y_xz[i] * b_exp - 4.0 * g_xzz_z_y_xz[i] * a_exp + 4.0 * g_xzz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_y_yy[i] = 2.0 * g_x_z_y_yy[i] - 2.0 * g_x_zzz_y_yy[i] * b_exp - 4.0 * g_xzz_z_y_yy[i] * a_exp + 4.0 * g_xzz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_y_yz[i] = 2.0 * g_x_z_y_yz[i] - 2.0 * g_x_zzz_y_yz[i] * b_exp - 4.0 * g_xzz_z_y_yz[i] * a_exp + 4.0 * g_xzz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_y_zz[i] = 2.0 * g_x_z_y_zz[i] - 2.0 * g_x_zzz_y_zz[i] * b_exp - 4.0 * g_xzz_z_y_zz[i] * a_exp + 4.0 * g_xzz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5502-5508)

    #pragma omp simd aligned(g_x_z_z_xx, g_x_z_z_xy, g_x_z_z_xz, g_x_z_z_yy, g_x_z_z_yz, g_x_z_z_zz, g_x_zzz_z_xx, g_x_zzz_z_xy, g_x_zzz_z_xz, g_x_zzz_z_yy, g_x_zzz_z_yz, g_x_zzz_z_zz, g_xzz_z_z_xx, g_xzz_z_z_xy, g_xzz_z_z_xz, g_xzz_z_z_yy, g_xzz_z_z_yz, g_xzz_z_z_zz, g_xzz_zzz_z_xx, g_xzz_zzz_z_xy, g_xzz_zzz_z_xz, g_xzz_zzz_z_yy, g_xzz_zzz_z_yz, g_xzz_zzz_z_zz, g_z_z_0_0_xz_zz_z_xx, g_z_z_0_0_xz_zz_z_xy, g_z_z_0_0_xz_zz_z_xz, g_z_z_0_0_xz_zz_z_yy, g_z_z_0_0_xz_zz_z_yz, g_z_z_0_0_xz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_xz_zz_z_xx[i] = 2.0 * g_x_z_z_xx[i] - 2.0 * g_x_zzz_z_xx[i] * b_exp - 4.0 * g_xzz_z_z_xx[i] * a_exp + 4.0 * g_xzz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_z_xy[i] = 2.0 * g_x_z_z_xy[i] - 2.0 * g_x_zzz_z_xy[i] * b_exp - 4.0 * g_xzz_z_z_xy[i] * a_exp + 4.0 * g_xzz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_z_xz[i] = 2.0 * g_x_z_z_xz[i] - 2.0 * g_x_zzz_z_xz[i] * b_exp - 4.0 * g_xzz_z_z_xz[i] * a_exp + 4.0 * g_xzz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_z_yy[i] = 2.0 * g_x_z_z_yy[i] - 2.0 * g_x_zzz_z_yy[i] * b_exp - 4.0 * g_xzz_z_z_yy[i] * a_exp + 4.0 * g_xzz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_z_yz[i] = 2.0 * g_x_z_z_yz[i] - 2.0 * g_x_zzz_z_yz[i] * b_exp - 4.0 * g_xzz_z_z_yz[i] * a_exp + 4.0 * g_xzz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_xz_zz_z_zz[i] = 2.0 * g_x_z_z_zz[i] - 2.0 * g_x_zzz_z_zz[i] * b_exp - 4.0 * g_xzz_z_z_zz[i] * a_exp + 4.0 * g_xzz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5508-5514)

    #pragma omp simd aligned(g_yyz_xxz_x_xx, g_yyz_xxz_x_xy, g_yyz_xxz_x_xz, g_yyz_xxz_x_yy, g_yyz_xxz_x_yz, g_yyz_xxz_x_zz, g_z_z_0_0_yy_xx_x_xx, g_z_z_0_0_yy_xx_x_xy, g_z_z_0_0_yy_xx_x_xz, g_z_z_0_0_yy_xx_x_yy, g_z_z_0_0_yy_xx_x_yz, g_z_z_0_0_yy_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xx_x_xx[i] = 4.0 * g_yyz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_x_xy[i] = 4.0 * g_yyz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_x_xz[i] = 4.0 * g_yyz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_x_yy[i] = 4.0 * g_yyz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_x_yz[i] = 4.0 * g_yyz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_x_zz[i] = 4.0 * g_yyz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5514-5520)

    #pragma omp simd aligned(g_yyz_xxz_y_xx, g_yyz_xxz_y_xy, g_yyz_xxz_y_xz, g_yyz_xxz_y_yy, g_yyz_xxz_y_yz, g_yyz_xxz_y_zz, g_z_z_0_0_yy_xx_y_xx, g_z_z_0_0_yy_xx_y_xy, g_z_z_0_0_yy_xx_y_xz, g_z_z_0_0_yy_xx_y_yy, g_z_z_0_0_yy_xx_y_yz, g_z_z_0_0_yy_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xx_y_xx[i] = 4.0 * g_yyz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_y_xy[i] = 4.0 * g_yyz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_y_xz[i] = 4.0 * g_yyz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_y_yy[i] = 4.0 * g_yyz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_y_yz[i] = 4.0 * g_yyz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_y_zz[i] = 4.0 * g_yyz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5520-5526)

    #pragma omp simd aligned(g_yyz_xxz_z_xx, g_yyz_xxz_z_xy, g_yyz_xxz_z_xz, g_yyz_xxz_z_yy, g_yyz_xxz_z_yz, g_yyz_xxz_z_zz, g_z_z_0_0_yy_xx_z_xx, g_z_z_0_0_yy_xx_z_xy, g_z_z_0_0_yy_xx_z_xz, g_z_z_0_0_yy_xx_z_yy, g_z_z_0_0_yy_xx_z_yz, g_z_z_0_0_yy_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xx_z_xx[i] = 4.0 * g_yyz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_z_xy[i] = 4.0 * g_yyz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_z_xz[i] = 4.0 * g_yyz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_z_yy[i] = 4.0 * g_yyz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_z_yz[i] = 4.0 * g_yyz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xx_z_zz[i] = 4.0 * g_yyz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5526-5532)

    #pragma omp simd aligned(g_yyz_xyz_x_xx, g_yyz_xyz_x_xy, g_yyz_xyz_x_xz, g_yyz_xyz_x_yy, g_yyz_xyz_x_yz, g_yyz_xyz_x_zz, g_z_z_0_0_yy_xy_x_xx, g_z_z_0_0_yy_xy_x_xy, g_z_z_0_0_yy_xy_x_xz, g_z_z_0_0_yy_xy_x_yy, g_z_z_0_0_yy_xy_x_yz, g_z_z_0_0_yy_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xy_x_xx[i] = 4.0 * g_yyz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_x_xy[i] = 4.0 * g_yyz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_x_xz[i] = 4.0 * g_yyz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_x_yy[i] = 4.0 * g_yyz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_x_yz[i] = 4.0 * g_yyz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_x_zz[i] = 4.0 * g_yyz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5532-5538)

    #pragma omp simd aligned(g_yyz_xyz_y_xx, g_yyz_xyz_y_xy, g_yyz_xyz_y_xz, g_yyz_xyz_y_yy, g_yyz_xyz_y_yz, g_yyz_xyz_y_zz, g_z_z_0_0_yy_xy_y_xx, g_z_z_0_0_yy_xy_y_xy, g_z_z_0_0_yy_xy_y_xz, g_z_z_0_0_yy_xy_y_yy, g_z_z_0_0_yy_xy_y_yz, g_z_z_0_0_yy_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xy_y_xx[i] = 4.0 * g_yyz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_y_xy[i] = 4.0 * g_yyz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_y_xz[i] = 4.0 * g_yyz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_y_yy[i] = 4.0 * g_yyz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_y_yz[i] = 4.0 * g_yyz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_y_zz[i] = 4.0 * g_yyz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5538-5544)

    #pragma omp simd aligned(g_yyz_xyz_z_xx, g_yyz_xyz_z_xy, g_yyz_xyz_z_xz, g_yyz_xyz_z_yy, g_yyz_xyz_z_yz, g_yyz_xyz_z_zz, g_z_z_0_0_yy_xy_z_xx, g_z_z_0_0_yy_xy_z_xy, g_z_z_0_0_yy_xy_z_xz, g_z_z_0_0_yy_xy_z_yy, g_z_z_0_0_yy_xy_z_yz, g_z_z_0_0_yy_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xy_z_xx[i] = 4.0 * g_yyz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_z_xy[i] = 4.0 * g_yyz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_z_xz[i] = 4.0 * g_yyz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_z_yy[i] = 4.0 * g_yyz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_z_yz[i] = 4.0 * g_yyz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xy_z_zz[i] = 4.0 * g_yyz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5544-5550)

    #pragma omp simd aligned(g_yyz_x_x_xx, g_yyz_x_x_xy, g_yyz_x_x_xz, g_yyz_x_x_yy, g_yyz_x_x_yz, g_yyz_x_x_zz, g_yyz_xzz_x_xx, g_yyz_xzz_x_xy, g_yyz_xzz_x_xz, g_yyz_xzz_x_yy, g_yyz_xzz_x_yz, g_yyz_xzz_x_zz, g_z_z_0_0_yy_xz_x_xx, g_z_z_0_0_yy_xz_x_xy, g_z_z_0_0_yy_xz_x_xz, g_z_z_0_0_yy_xz_x_yy, g_z_z_0_0_yy_xz_x_yz, g_z_z_0_0_yy_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xz_x_xx[i] = -2.0 * g_yyz_x_x_xx[i] * a_exp + 4.0 * g_yyz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_x_xy[i] = -2.0 * g_yyz_x_x_xy[i] * a_exp + 4.0 * g_yyz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_x_xz[i] = -2.0 * g_yyz_x_x_xz[i] * a_exp + 4.0 * g_yyz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_x_yy[i] = -2.0 * g_yyz_x_x_yy[i] * a_exp + 4.0 * g_yyz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_x_yz[i] = -2.0 * g_yyz_x_x_yz[i] * a_exp + 4.0 * g_yyz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_x_zz[i] = -2.0 * g_yyz_x_x_zz[i] * a_exp + 4.0 * g_yyz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5550-5556)

    #pragma omp simd aligned(g_yyz_x_y_xx, g_yyz_x_y_xy, g_yyz_x_y_xz, g_yyz_x_y_yy, g_yyz_x_y_yz, g_yyz_x_y_zz, g_yyz_xzz_y_xx, g_yyz_xzz_y_xy, g_yyz_xzz_y_xz, g_yyz_xzz_y_yy, g_yyz_xzz_y_yz, g_yyz_xzz_y_zz, g_z_z_0_0_yy_xz_y_xx, g_z_z_0_0_yy_xz_y_xy, g_z_z_0_0_yy_xz_y_xz, g_z_z_0_0_yy_xz_y_yy, g_z_z_0_0_yy_xz_y_yz, g_z_z_0_0_yy_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xz_y_xx[i] = -2.0 * g_yyz_x_y_xx[i] * a_exp + 4.0 * g_yyz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_y_xy[i] = -2.0 * g_yyz_x_y_xy[i] * a_exp + 4.0 * g_yyz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_y_xz[i] = -2.0 * g_yyz_x_y_xz[i] * a_exp + 4.0 * g_yyz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_y_yy[i] = -2.0 * g_yyz_x_y_yy[i] * a_exp + 4.0 * g_yyz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_y_yz[i] = -2.0 * g_yyz_x_y_yz[i] * a_exp + 4.0 * g_yyz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_y_zz[i] = -2.0 * g_yyz_x_y_zz[i] * a_exp + 4.0 * g_yyz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5556-5562)

    #pragma omp simd aligned(g_yyz_x_z_xx, g_yyz_x_z_xy, g_yyz_x_z_xz, g_yyz_x_z_yy, g_yyz_x_z_yz, g_yyz_x_z_zz, g_yyz_xzz_z_xx, g_yyz_xzz_z_xy, g_yyz_xzz_z_xz, g_yyz_xzz_z_yy, g_yyz_xzz_z_yz, g_yyz_xzz_z_zz, g_z_z_0_0_yy_xz_z_xx, g_z_z_0_0_yy_xz_z_xy, g_z_z_0_0_yy_xz_z_xz, g_z_z_0_0_yy_xz_z_yy, g_z_z_0_0_yy_xz_z_yz, g_z_z_0_0_yy_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_xz_z_xx[i] = -2.0 * g_yyz_x_z_xx[i] * a_exp + 4.0 * g_yyz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_z_xy[i] = -2.0 * g_yyz_x_z_xy[i] * a_exp + 4.0 * g_yyz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_z_xz[i] = -2.0 * g_yyz_x_z_xz[i] * a_exp + 4.0 * g_yyz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_z_yy[i] = -2.0 * g_yyz_x_z_yy[i] * a_exp + 4.0 * g_yyz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_z_yz[i] = -2.0 * g_yyz_x_z_yz[i] * a_exp + 4.0 * g_yyz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_xz_z_zz[i] = -2.0 * g_yyz_x_z_zz[i] * a_exp + 4.0 * g_yyz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5562-5568)

    #pragma omp simd aligned(g_yyz_yyz_x_xx, g_yyz_yyz_x_xy, g_yyz_yyz_x_xz, g_yyz_yyz_x_yy, g_yyz_yyz_x_yz, g_yyz_yyz_x_zz, g_z_z_0_0_yy_yy_x_xx, g_z_z_0_0_yy_yy_x_xy, g_z_z_0_0_yy_yy_x_xz, g_z_z_0_0_yy_yy_x_yy, g_z_z_0_0_yy_yy_x_yz, g_z_z_0_0_yy_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yy_x_xx[i] = 4.0 * g_yyz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_x_xy[i] = 4.0 * g_yyz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_x_xz[i] = 4.0 * g_yyz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_x_yy[i] = 4.0 * g_yyz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_x_yz[i] = 4.0 * g_yyz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_x_zz[i] = 4.0 * g_yyz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5568-5574)

    #pragma omp simd aligned(g_yyz_yyz_y_xx, g_yyz_yyz_y_xy, g_yyz_yyz_y_xz, g_yyz_yyz_y_yy, g_yyz_yyz_y_yz, g_yyz_yyz_y_zz, g_z_z_0_0_yy_yy_y_xx, g_z_z_0_0_yy_yy_y_xy, g_z_z_0_0_yy_yy_y_xz, g_z_z_0_0_yy_yy_y_yy, g_z_z_0_0_yy_yy_y_yz, g_z_z_0_0_yy_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yy_y_xx[i] = 4.0 * g_yyz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_y_xy[i] = 4.0 * g_yyz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_y_xz[i] = 4.0 * g_yyz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_y_yy[i] = 4.0 * g_yyz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_y_yz[i] = 4.0 * g_yyz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_y_zz[i] = 4.0 * g_yyz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5574-5580)

    #pragma omp simd aligned(g_yyz_yyz_z_xx, g_yyz_yyz_z_xy, g_yyz_yyz_z_xz, g_yyz_yyz_z_yy, g_yyz_yyz_z_yz, g_yyz_yyz_z_zz, g_z_z_0_0_yy_yy_z_xx, g_z_z_0_0_yy_yy_z_xy, g_z_z_0_0_yy_yy_z_xz, g_z_z_0_0_yy_yy_z_yy, g_z_z_0_0_yy_yy_z_yz, g_z_z_0_0_yy_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yy_z_xx[i] = 4.0 * g_yyz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_z_xy[i] = 4.0 * g_yyz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_z_xz[i] = 4.0 * g_yyz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_z_yy[i] = 4.0 * g_yyz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_z_yz[i] = 4.0 * g_yyz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yy_z_zz[i] = 4.0 * g_yyz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5580-5586)

    #pragma omp simd aligned(g_yyz_y_x_xx, g_yyz_y_x_xy, g_yyz_y_x_xz, g_yyz_y_x_yy, g_yyz_y_x_yz, g_yyz_y_x_zz, g_yyz_yzz_x_xx, g_yyz_yzz_x_xy, g_yyz_yzz_x_xz, g_yyz_yzz_x_yy, g_yyz_yzz_x_yz, g_yyz_yzz_x_zz, g_z_z_0_0_yy_yz_x_xx, g_z_z_0_0_yy_yz_x_xy, g_z_z_0_0_yy_yz_x_xz, g_z_z_0_0_yy_yz_x_yy, g_z_z_0_0_yy_yz_x_yz, g_z_z_0_0_yy_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yz_x_xx[i] = -2.0 * g_yyz_y_x_xx[i] * a_exp + 4.0 * g_yyz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_x_xy[i] = -2.0 * g_yyz_y_x_xy[i] * a_exp + 4.0 * g_yyz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_x_xz[i] = -2.0 * g_yyz_y_x_xz[i] * a_exp + 4.0 * g_yyz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_x_yy[i] = -2.0 * g_yyz_y_x_yy[i] * a_exp + 4.0 * g_yyz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_x_yz[i] = -2.0 * g_yyz_y_x_yz[i] * a_exp + 4.0 * g_yyz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_x_zz[i] = -2.0 * g_yyz_y_x_zz[i] * a_exp + 4.0 * g_yyz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5586-5592)

    #pragma omp simd aligned(g_yyz_y_y_xx, g_yyz_y_y_xy, g_yyz_y_y_xz, g_yyz_y_y_yy, g_yyz_y_y_yz, g_yyz_y_y_zz, g_yyz_yzz_y_xx, g_yyz_yzz_y_xy, g_yyz_yzz_y_xz, g_yyz_yzz_y_yy, g_yyz_yzz_y_yz, g_yyz_yzz_y_zz, g_z_z_0_0_yy_yz_y_xx, g_z_z_0_0_yy_yz_y_xy, g_z_z_0_0_yy_yz_y_xz, g_z_z_0_0_yy_yz_y_yy, g_z_z_0_0_yy_yz_y_yz, g_z_z_0_0_yy_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yz_y_xx[i] = -2.0 * g_yyz_y_y_xx[i] * a_exp + 4.0 * g_yyz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_y_xy[i] = -2.0 * g_yyz_y_y_xy[i] * a_exp + 4.0 * g_yyz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_y_xz[i] = -2.0 * g_yyz_y_y_xz[i] * a_exp + 4.0 * g_yyz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_y_yy[i] = -2.0 * g_yyz_y_y_yy[i] * a_exp + 4.0 * g_yyz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_y_yz[i] = -2.0 * g_yyz_y_y_yz[i] * a_exp + 4.0 * g_yyz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_y_zz[i] = -2.0 * g_yyz_y_y_zz[i] * a_exp + 4.0 * g_yyz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5592-5598)

    #pragma omp simd aligned(g_yyz_y_z_xx, g_yyz_y_z_xy, g_yyz_y_z_xz, g_yyz_y_z_yy, g_yyz_y_z_yz, g_yyz_y_z_zz, g_yyz_yzz_z_xx, g_yyz_yzz_z_xy, g_yyz_yzz_z_xz, g_yyz_yzz_z_yy, g_yyz_yzz_z_yz, g_yyz_yzz_z_zz, g_z_z_0_0_yy_yz_z_xx, g_z_z_0_0_yy_yz_z_xy, g_z_z_0_0_yy_yz_z_xz, g_z_z_0_0_yy_yz_z_yy, g_z_z_0_0_yy_yz_z_yz, g_z_z_0_0_yy_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_yz_z_xx[i] = -2.0 * g_yyz_y_z_xx[i] * a_exp + 4.0 * g_yyz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_z_xy[i] = -2.0 * g_yyz_y_z_xy[i] * a_exp + 4.0 * g_yyz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_z_xz[i] = -2.0 * g_yyz_y_z_xz[i] * a_exp + 4.0 * g_yyz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_z_yy[i] = -2.0 * g_yyz_y_z_yy[i] * a_exp + 4.0 * g_yyz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_z_yz[i] = -2.0 * g_yyz_y_z_yz[i] * a_exp + 4.0 * g_yyz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_yz_z_zz[i] = -2.0 * g_yyz_y_z_zz[i] * a_exp + 4.0 * g_yyz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5598-5604)

    #pragma omp simd aligned(g_yyz_z_x_xx, g_yyz_z_x_xy, g_yyz_z_x_xz, g_yyz_z_x_yy, g_yyz_z_x_yz, g_yyz_z_x_zz, g_yyz_zzz_x_xx, g_yyz_zzz_x_xy, g_yyz_zzz_x_xz, g_yyz_zzz_x_yy, g_yyz_zzz_x_yz, g_yyz_zzz_x_zz, g_z_z_0_0_yy_zz_x_xx, g_z_z_0_0_yy_zz_x_xy, g_z_z_0_0_yy_zz_x_xz, g_z_z_0_0_yy_zz_x_yy, g_z_z_0_0_yy_zz_x_yz, g_z_z_0_0_yy_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_zz_x_xx[i] = -4.0 * g_yyz_z_x_xx[i] * a_exp + 4.0 * g_yyz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_x_xy[i] = -4.0 * g_yyz_z_x_xy[i] * a_exp + 4.0 * g_yyz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_x_xz[i] = -4.0 * g_yyz_z_x_xz[i] * a_exp + 4.0 * g_yyz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_x_yy[i] = -4.0 * g_yyz_z_x_yy[i] * a_exp + 4.0 * g_yyz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_x_yz[i] = -4.0 * g_yyz_z_x_yz[i] * a_exp + 4.0 * g_yyz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_x_zz[i] = -4.0 * g_yyz_z_x_zz[i] * a_exp + 4.0 * g_yyz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5604-5610)

    #pragma omp simd aligned(g_yyz_z_y_xx, g_yyz_z_y_xy, g_yyz_z_y_xz, g_yyz_z_y_yy, g_yyz_z_y_yz, g_yyz_z_y_zz, g_yyz_zzz_y_xx, g_yyz_zzz_y_xy, g_yyz_zzz_y_xz, g_yyz_zzz_y_yy, g_yyz_zzz_y_yz, g_yyz_zzz_y_zz, g_z_z_0_0_yy_zz_y_xx, g_z_z_0_0_yy_zz_y_xy, g_z_z_0_0_yy_zz_y_xz, g_z_z_0_0_yy_zz_y_yy, g_z_z_0_0_yy_zz_y_yz, g_z_z_0_0_yy_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_zz_y_xx[i] = -4.0 * g_yyz_z_y_xx[i] * a_exp + 4.0 * g_yyz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_y_xy[i] = -4.0 * g_yyz_z_y_xy[i] * a_exp + 4.0 * g_yyz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_y_xz[i] = -4.0 * g_yyz_z_y_xz[i] * a_exp + 4.0 * g_yyz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_y_yy[i] = -4.0 * g_yyz_z_y_yy[i] * a_exp + 4.0 * g_yyz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_y_yz[i] = -4.0 * g_yyz_z_y_yz[i] * a_exp + 4.0 * g_yyz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_y_zz[i] = -4.0 * g_yyz_z_y_zz[i] * a_exp + 4.0 * g_yyz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5610-5616)

    #pragma omp simd aligned(g_yyz_z_z_xx, g_yyz_z_z_xy, g_yyz_z_z_xz, g_yyz_z_z_yy, g_yyz_z_z_yz, g_yyz_z_z_zz, g_yyz_zzz_z_xx, g_yyz_zzz_z_xy, g_yyz_zzz_z_xz, g_yyz_zzz_z_yy, g_yyz_zzz_z_yz, g_yyz_zzz_z_zz, g_z_z_0_0_yy_zz_z_xx, g_z_z_0_0_yy_zz_z_xy, g_z_z_0_0_yy_zz_z_xz, g_z_z_0_0_yy_zz_z_yy, g_z_z_0_0_yy_zz_z_yz, g_z_z_0_0_yy_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yy_zz_z_xx[i] = -4.0 * g_yyz_z_z_xx[i] * a_exp + 4.0 * g_yyz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_z_xy[i] = -4.0 * g_yyz_z_z_xy[i] * a_exp + 4.0 * g_yyz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_z_xz[i] = -4.0 * g_yyz_z_z_xz[i] * a_exp + 4.0 * g_yyz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_z_yy[i] = -4.0 * g_yyz_z_z_yy[i] * a_exp + 4.0 * g_yyz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_z_yz[i] = -4.0 * g_yyz_z_z_yz[i] * a_exp + 4.0 * g_yyz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yy_zz_z_zz[i] = -4.0 * g_yyz_z_z_zz[i] * a_exp + 4.0 * g_yyz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5616-5622)

    #pragma omp simd aligned(g_y_xxz_x_xx, g_y_xxz_x_xy, g_y_xxz_x_xz, g_y_xxz_x_yy, g_y_xxz_x_yz, g_y_xxz_x_zz, g_yzz_xxz_x_xx, g_yzz_xxz_x_xy, g_yzz_xxz_x_xz, g_yzz_xxz_x_yy, g_yzz_xxz_x_yz, g_yzz_xxz_x_zz, g_z_z_0_0_yz_xx_x_xx, g_z_z_0_0_yz_xx_x_xy, g_z_z_0_0_yz_xx_x_xz, g_z_z_0_0_yz_xx_x_yy, g_z_z_0_0_yz_xx_x_yz, g_z_z_0_0_yz_xx_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xx_x_xx[i] = -2.0 * g_y_xxz_x_xx[i] * b_exp + 4.0 * g_yzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_x_xy[i] = -2.0 * g_y_xxz_x_xy[i] * b_exp + 4.0 * g_yzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_x_xz[i] = -2.0 * g_y_xxz_x_xz[i] * b_exp + 4.0 * g_yzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_x_yy[i] = -2.0 * g_y_xxz_x_yy[i] * b_exp + 4.0 * g_yzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_x_yz[i] = -2.0 * g_y_xxz_x_yz[i] * b_exp + 4.0 * g_yzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_x_zz[i] = -2.0 * g_y_xxz_x_zz[i] * b_exp + 4.0 * g_yzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5622-5628)

    #pragma omp simd aligned(g_y_xxz_y_xx, g_y_xxz_y_xy, g_y_xxz_y_xz, g_y_xxz_y_yy, g_y_xxz_y_yz, g_y_xxz_y_zz, g_yzz_xxz_y_xx, g_yzz_xxz_y_xy, g_yzz_xxz_y_xz, g_yzz_xxz_y_yy, g_yzz_xxz_y_yz, g_yzz_xxz_y_zz, g_z_z_0_0_yz_xx_y_xx, g_z_z_0_0_yz_xx_y_xy, g_z_z_0_0_yz_xx_y_xz, g_z_z_0_0_yz_xx_y_yy, g_z_z_0_0_yz_xx_y_yz, g_z_z_0_0_yz_xx_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xx_y_xx[i] = -2.0 * g_y_xxz_y_xx[i] * b_exp + 4.0 * g_yzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_y_xy[i] = -2.0 * g_y_xxz_y_xy[i] * b_exp + 4.0 * g_yzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_y_xz[i] = -2.0 * g_y_xxz_y_xz[i] * b_exp + 4.0 * g_yzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_y_yy[i] = -2.0 * g_y_xxz_y_yy[i] * b_exp + 4.0 * g_yzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_y_yz[i] = -2.0 * g_y_xxz_y_yz[i] * b_exp + 4.0 * g_yzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_y_zz[i] = -2.0 * g_y_xxz_y_zz[i] * b_exp + 4.0 * g_yzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5628-5634)

    #pragma omp simd aligned(g_y_xxz_z_xx, g_y_xxz_z_xy, g_y_xxz_z_xz, g_y_xxz_z_yy, g_y_xxz_z_yz, g_y_xxz_z_zz, g_yzz_xxz_z_xx, g_yzz_xxz_z_xy, g_yzz_xxz_z_xz, g_yzz_xxz_z_yy, g_yzz_xxz_z_yz, g_yzz_xxz_z_zz, g_z_z_0_0_yz_xx_z_xx, g_z_z_0_0_yz_xx_z_xy, g_z_z_0_0_yz_xx_z_xz, g_z_z_0_0_yz_xx_z_yy, g_z_z_0_0_yz_xx_z_yz, g_z_z_0_0_yz_xx_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xx_z_xx[i] = -2.0 * g_y_xxz_z_xx[i] * b_exp + 4.0 * g_yzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_z_xy[i] = -2.0 * g_y_xxz_z_xy[i] * b_exp + 4.0 * g_yzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_z_xz[i] = -2.0 * g_y_xxz_z_xz[i] * b_exp + 4.0 * g_yzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_z_yy[i] = -2.0 * g_y_xxz_z_yy[i] * b_exp + 4.0 * g_yzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_z_yz[i] = -2.0 * g_y_xxz_z_yz[i] * b_exp + 4.0 * g_yzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xx_z_zz[i] = -2.0 * g_y_xxz_z_zz[i] * b_exp + 4.0 * g_yzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5634-5640)

    #pragma omp simd aligned(g_y_xyz_x_xx, g_y_xyz_x_xy, g_y_xyz_x_xz, g_y_xyz_x_yy, g_y_xyz_x_yz, g_y_xyz_x_zz, g_yzz_xyz_x_xx, g_yzz_xyz_x_xy, g_yzz_xyz_x_xz, g_yzz_xyz_x_yy, g_yzz_xyz_x_yz, g_yzz_xyz_x_zz, g_z_z_0_0_yz_xy_x_xx, g_z_z_0_0_yz_xy_x_xy, g_z_z_0_0_yz_xy_x_xz, g_z_z_0_0_yz_xy_x_yy, g_z_z_0_0_yz_xy_x_yz, g_z_z_0_0_yz_xy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xy_x_xx[i] = -2.0 * g_y_xyz_x_xx[i] * b_exp + 4.0 * g_yzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_x_xy[i] = -2.0 * g_y_xyz_x_xy[i] * b_exp + 4.0 * g_yzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_x_xz[i] = -2.0 * g_y_xyz_x_xz[i] * b_exp + 4.0 * g_yzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_x_yy[i] = -2.0 * g_y_xyz_x_yy[i] * b_exp + 4.0 * g_yzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_x_yz[i] = -2.0 * g_y_xyz_x_yz[i] * b_exp + 4.0 * g_yzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_x_zz[i] = -2.0 * g_y_xyz_x_zz[i] * b_exp + 4.0 * g_yzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5640-5646)

    #pragma omp simd aligned(g_y_xyz_y_xx, g_y_xyz_y_xy, g_y_xyz_y_xz, g_y_xyz_y_yy, g_y_xyz_y_yz, g_y_xyz_y_zz, g_yzz_xyz_y_xx, g_yzz_xyz_y_xy, g_yzz_xyz_y_xz, g_yzz_xyz_y_yy, g_yzz_xyz_y_yz, g_yzz_xyz_y_zz, g_z_z_0_0_yz_xy_y_xx, g_z_z_0_0_yz_xy_y_xy, g_z_z_0_0_yz_xy_y_xz, g_z_z_0_0_yz_xy_y_yy, g_z_z_0_0_yz_xy_y_yz, g_z_z_0_0_yz_xy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xy_y_xx[i] = -2.0 * g_y_xyz_y_xx[i] * b_exp + 4.0 * g_yzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_y_xy[i] = -2.0 * g_y_xyz_y_xy[i] * b_exp + 4.0 * g_yzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_y_xz[i] = -2.0 * g_y_xyz_y_xz[i] * b_exp + 4.0 * g_yzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_y_yy[i] = -2.0 * g_y_xyz_y_yy[i] * b_exp + 4.0 * g_yzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_y_yz[i] = -2.0 * g_y_xyz_y_yz[i] * b_exp + 4.0 * g_yzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_y_zz[i] = -2.0 * g_y_xyz_y_zz[i] * b_exp + 4.0 * g_yzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5646-5652)

    #pragma omp simd aligned(g_y_xyz_z_xx, g_y_xyz_z_xy, g_y_xyz_z_xz, g_y_xyz_z_yy, g_y_xyz_z_yz, g_y_xyz_z_zz, g_yzz_xyz_z_xx, g_yzz_xyz_z_xy, g_yzz_xyz_z_xz, g_yzz_xyz_z_yy, g_yzz_xyz_z_yz, g_yzz_xyz_z_zz, g_z_z_0_0_yz_xy_z_xx, g_z_z_0_0_yz_xy_z_xy, g_z_z_0_0_yz_xy_z_xz, g_z_z_0_0_yz_xy_z_yy, g_z_z_0_0_yz_xy_z_yz, g_z_z_0_0_yz_xy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xy_z_xx[i] = -2.0 * g_y_xyz_z_xx[i] * b_exp + 4.0 * g_yzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_z_xy[i] = -2.0 * g_y_xyz_z_xy[i] * b_exp + 4.0 * g_yzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_z_xz[i] = -2.0 * g_y_xyz_z_xz[i] * b_exp + 4.0 * g_yzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_z_yy[i] = -2.0 * g_y_xyz_z_yy[i] * b_exp + 4.0 * g_yzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_z_yz[i] = -2.0 * g_y_xyz_z_yz[i] * b_exp + 4.0 * g_yzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xy_z_zz[i] = -2.0 * g_y_xyz_z_zz[i] * b_exp + 4.0 * g_yzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5652-5658)

    #pragma omp simd aligned(g_y_x_x_xx, g_y_x_x_xy, g_y_x_x_xz, g_y_x_x_yy, g_y_x_x_yz, g_y_x_x_zz, g_y_xzz_x_xx, g_y_xzz_x_xy, g_y_xzz_x_xz, g_y_xzz_x_yy, g_y_xzz_x_yz, g_y_xzz_x_zz, g_yzz_x_x_xx, g_yzz_x_x_xy, g_yzz_x_x_xz, g_yzz_x_x_yy, g_yzz_x_x_yz, g_yzz_x_x_zz, g_yzz_xzz_x_xx, g_yzz_xzz_x_xy, g_yzz_xzz_x_xz, g_yzz_xzz_x_yy, g_yzz_xzz_x_yz, g_yzz_xzz_x_zz, g_z_z_0_0_yz_xz_x_xx, g_z_z_0_0_yz_xz_x_xy, g_z_z_0_0_yz_xz_x_xz, g_z_z_0_0_yz_xz_x_yy, g_z_z_0_0_yz_xz_x_yz, g_z_z_0_0_yz_xz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xz_x_xx[i] = g_y_x_x_xx[i] - 2.0 * g_y_xzz_x_xx[i] * b_exp - 2.0 * g_yzz_x_x_xx[i] * a_exp + 4.0 * g_yzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_x_xy[i] = g_y_x_x_xy[i] - 2.0 * g_y_xzz_x_xy[i] * b_exp - 2.0 * g_yzz_x_x_xy[i] * a_exp + 4.0 * g_yzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_x_xz[i] = g_y_x_x_xz[i] - 2.0 * g_y_xzz_x_xz[i] * b_exp - 2.0 * g_yzz_x_x_xz[i] * a_exp + 4.0 * g_yzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_x_yy[i] = g_y_x_x_yy[i] - 2.0 * g_y_xzz_x_yy[i] * b_exp - 2.0 * g_yzz_x_x_yy[i] * a_exp + 4.0 * g_yzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_x_yz[i] = g_y_x_x_yz[i] - 2.0 * g_y_xzz_x_yz[i] * b_exp - 2.0 * g_yzz_x_x_yz[i] * a_exp + 4.0 * g_yzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_x_zz[i] = g_y_x_x_zz[i] - 2.0 * g_y_xzz_x_zz[i] * b_exp - 2.0 * g_yzz_x_x_zz[i] * a_exp + 4.0 * g_yzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5658-5664)

    #pragma omp simd aligned(g_y_x_y_xx, g_y_x_y_xy, g_y_x_y_xz, g_y_x_y_yy, g_y_x_y_yz, g_y_x_y_zz, g_y_xzz_y_xx, g_y_xzz_y_xy, g_y_xzz_y_xz, g_y_xzz_y_yy, g_y_xzz_y_yz, g_y_xzz_y_zz, g_yzz_x_y_xx, g_yzz_x_y_xy, g_yzz_x_y_xz, g_yzz_x_y_yy, g_yzz_x_y_yz, g_yzz_x_y_zz, g_yzz_xzz_y_xx, g_yzz_xzz_y_xy, g_yzz_xzz_y_xz, g_yzz_xzz_y_yy, g_yzz_xzz_y_yz, g_yzz_xzz_y_zz, g_z_z_0_0_yz_xz_y_xx, g_z_z_0_0_yz_xz_y_xy, g_z_z_0_0_yz_xz_y_xz, g_z_z_0_0_yz_xz_y_yy, g_z_z_0_0_yz_xz_y_yz, g_z_z_0_0_yz_xz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xz_y_xx[i] = g_y_x_y_xx[i] - 2.0 * g_y_xzz_y_xx[i] * b_exp - 2.0 * g_yzz_x_y_xx[i] * a_exp + 4.0 * g_yzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_y_xy[i] = g_y_x_y_xy[i] - 2.0 * g_y_xzz_y_xy[i] * b_exp - 2.0 * g_yzz_x_y_xy[i] * a_exp + 4.0 * g_yzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_y_xz[i] = g_y_x_y_xz[i] - 2.0 * g_y_xzz_y_xz[i] * b_exp - 2.0 * g_yzz_x_y_xz[i] * a_exp + 4.0 * g_yzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_y_yy[i] = g_y_x_y_yy[i] - 2.0 * g_y_xzz_y_yy[i] * b_exp - 2.0 * g_yzz_x_y_yy[i] * a_exp + 4.0 * g_yzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_y_yz[i] = g_y_x_y_yz[i] - 2.0 * g_y_xzz_y_yz[i] * b_exp - 2.0 * g_yzz_x_y_yz[i] * a_exp + 4.0 * g_yzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_y_zz[i] = g_y_x_y_zz[i] - 2.0 * g_y_xzz_y_zz[i] * b_exp - 2.0 * g_yzz_x_y_zz[i] * a_exp + 4.0 * g_yzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5664-5670)

    #pragma omp simd aligned(g_y_x_z_xx, g_y_x_z_xy, g_y_x_z_xz, g_y_x_z_yy, g_y_x_z_yz, g_y_x_z_zz, g_y_xzz_z_xx, g_y_xzz_z_xy, g_y_xzz_z_xz, g_y_xzz_z_yy, g_y_xzz_z_yz, g_y_xzz_z_zz, g_yzz_x_z_xx, g_yzz_x_z_xy, g_yzz_x_z_xz, g_yzz_x_z_yy, g_yzz_x_z_yz, g_yzz_x_z_zz, g_yzz_xzz_z_xx, g_yzz_xzz_z_xy, g_yzz_xzz_z_xz, g_yzz_xzz_z_yy, g_yzz_xzz_z_yz, g_yzz_xzz_z_zz, g_z_z_0_0_yz_xz_z_xx, g_z_z_0_0_yz_xz_z_xy, g_z_z_0_0_yz_xz_z_xz, g_z_z_0_0_yz_xz_z_yy, g_z_z_0_0_yz_xz_z_yz, g_z_z_0_0_yz_xz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_xz_z_xx[i] = g_y_x_z_xx[i] - 2.0 * g_y_xzz_z_xx[i] * b_exp - 2.0 * g_yzz_x_z_xx[i] * a_exp + 4.0 * g_yzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_z_xy[i] = g_y_x_z_xy[i] - 2.0 * g_y_xzz_z_xy[i] * b_exp - 2.0 * g_yzz_x_z_xy[i] * a_exp + 4.0 * g_yzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_z_xz[i] = g_y_x_z_xz[i] - 2.0 * g_y_xzz_z_xz[i] * b_exp - 2.0 * g_yzz_x_z_xz[i] * a_exp + 4.0 * g_yzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_z_yy[i] = g_y_x_z_yy[i] - 2.0 * g_y_xzz_z_yy[i] * b_exp - 2.0 * g_yzz_x_z_yy[i] * a_exp + 4.0 * g_yzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_z_yz[i] = g_y_x_z_yz[i] - 2.0 * g_y_xzz_z_yz[i] * b_exp - 2.0 * g_yzz_x_z_yz[i] * a_exp + 4.0 * g_yzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_xz_z_zz[i] = g_y_x_z_zz[i] - 2.0 * g_y_xzz_z_zz[i] * b_exp - 2.0 * g_yzz_x_z_zz[i] * a_exp + 4.0 * g_yzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5670-5676)

    #pragma omp simd aligned(g_y_yyz_x_xx, g_y_yyz_x_xy, g_y_yyz_x_xz, g_y_yyz_x_yy, g_y_yyz_x_yz, g_y_yyz_x_zz, g_yzz_yyz_x_xx, g_yzz_yyz_x_xy, g_yzz_yyz_x_xz, g_yzz_yyz_x_yy, g_yzz_yyz_x_yz, g_yzz_yyz_x_zz, g_z_z_0_0_yz_yy_x_xx, g_z_z_0_0_yz_yy_x_xy, g_z_z_0_0_yz_yy_x_xz, g_z_z_0_0_yz_yy_x_yy, g_z_z_0_0_yz_yy_x_yz, g_z_z_0_0_yz_yy_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yy_x_xx[i] = -2.0 * g_y_yyz_x_xx[i] * b_exp + 4.0 * g_yzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_x_xy[i] = -2.0 * g_y_yyz_x_xy[i] * b_exp + 4.0 * g_yzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_x_xz[i] = -2.0 * g_y_yyz_x_xz[i] * b_exp + 4.0 * g_yzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_x_yy[i] = -2.0 * g_y_yyz_x_yy[i] * b_exp + 4.0 * g_yzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_x_yz[i] = -2.0 * g_y_yyz_x_yz[i] * b_exp + 4.0 * g_yzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_x_zz[i] = -2.0 * g_y_yyz_x_zz[i] * b_exp + 4.0 * g_yzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5676-5682)

    #pragma omp simd aligned(g_y_yyz_y_xx, g_y_yyz_y_xy, g_y_yyz_y_xz, g_y_yyz_y_yy, g_y_yyz_y_yz, g_y_yyz_y_zz, g_yzz_yyz_y_xx, g_yzz_yyz_y_xy, g_yzz_yyz_y_xz, g_yzz_yyz_y_yy, g_yzz_yyz_y_yz, g_yzz_yyz_y_zz, g_z_z_0_0_yz_yy_y_xx, g_z_z_0_0_yz_yy_y_xy, g_z_z_0_0_yz_yy_y_xz, g_z_z_0_0_yz_yy_y_yy, g_z_z_0_0_yz_yy_y_yz, g_z_z_0_0_yz_yy_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yy_y_xx[i] = -2.0 * g_y_yyz_y_xx[i] * b_exp + 4.0 * g_yzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_y_xy[i] = -2.0 * g_y_yyz_y_xy[i] * b_exp + 4.0 * g_yzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_y_xz[i] = -2.0 * g_y_yyz_y_xz[i] * b_exp + 4.0 * g_yzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_y_yy[i] = -2.0 * g_y_yyz_y_yy[i] * b_exp + 4.0 * g_yzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_y_yz[i] = -2.0 * g_y_yyz_y_yz[i] * b_exp + 4.0 * g_yzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_y_zz[i] = -2.0 * g_y_yyz_y_zz[i] * b_exp + 4.0 * g_yzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5682-5688)

    #pragma omp simd aligned(g_y_yyz_z_xx, g_y_yyz_z_xy, g_y_yyz_z_xz, g_y_yyz_z_yy, g_y_yyz_z_yz, g_y_yyz_z_zz, g_yzz_yyz_z_xx, g_yzz_yyz_z_xy, g_yzz_yyz_z_xz, g_yzz_yyz_z_yy, g_yzz_yyz_z_yz, g_yzz_yyz_z_zz, g_z_z_0_0_yz_yy_z_xx, g_z_z_0_0_yz_yy_z_xy, g_z_z_0_0_yz_yy_z_xz, g_z_z_0_0_yz_yy_z_yy, g_z_z_0_0_yz_yy_z_yz, g_z_z_0_0_yz_yy_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yy_z_xx[i] = -2.0 * g_y_yyz_z_xx[i] * b_exp + 4.0 * g_yzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_z_xy[i] = -2.0 * g_y_yyz_z_xy[i] * b_exp + 4.0 * g_yzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_z_xz[i] = -2.0 * g_y_yyz_z_xz[i] * b_exp + 4.0 * g_yzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_z_yy[i] = -2.0 * g_y_yyz_z_yy[i] * b_exp + 4.0 * g_yzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_z_yz[i] = -2.0 * g_y_yyz_z_yz[i] * b_exp + 4.0 * g_yzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yy_z_zz[i] = -2.0 * g_y_yyz_z_zz[i] * b_exp + 4.0 * g_yzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5688-5694)

    #pragma omp simd aligned(g_y_y_x_xx, g_y_y_x_xy, g_y_y_x_xz, g_y_y_x_yy, g_y_y_x_yz, g_y_y_x_zz, g_y_yzz_x_xx, g_y_yzz_x_xy, g_y_yzz_x_xz, g_y_yzz_x_yy, g_y_yzz_x_yz, g_y_yzz_x_zz, g_yzz_y_x_xx, g_yzz_y_x_xy, g_yzz_y_x_xz, g_yzz_y_x_yy, g_yzz_y_x_yz, g_yzz_y_x_zz, g_yzz_yzz_x_xx, g_yzz_yzz_x_xy, g_yzz_yzz_x_xz, g_yzz_yzz_x_yy, g_yzz_yzz_x_yz, g_yzz_yzz_x_zz, g_z_z_0_0_yz_yz_x_xx, g_z_z_0_0_yz_yz_x_xy, g_z_z_0_0_yz_yz_x_xz, g_z_z_0_0_yz_yz_x_yy, g_z_z_0_0_yz_yz_x_yz, g_z_z_0_0_yz_yz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yz_x_xx[i] = g_y_y_x_xx[i] - 2.0 * g_y_yzz_x_xx[i] * b_exp - 2.0 * g_yzz_y_x_xx[i] * a_exp + 4.0 * g_yzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_x_xy[i] = g_y_y_x_xy[i] - 2.0 * g_y_yzz_x_xy[i] * b_exp - 2.0 * g_yzz_y_x_xy[i] * a_exp + 4.0 * g_yzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_x_xz[i] = g_y_y_x_xz[i] - 2.0 * g_y_yzz_x_xz[i] * b_exp - 2.0 * g_yzz_y_x_xz[i] * a_exp + 4.0 * g_yzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_x_yy[i] = g_y_y_x_yy[i] - 2.0 * g_y_yzz_x_yy[i] * b_exp - 2.0 * g_yzz_y_x_yy[i] * a_exp + 4.0 * g_yzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_x_yz[i] = g_y_y_x_yz[i] - 2.0 * g_y_yzz_x_yz[i] * b_exp - 2.0 * g_yzz_y_x_yz[i] * a_exp + 4.0 * g_yzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_x_zz[i] = g_y_y_x_zz[i] - 2.0 * g_y_yzz_x_zz[i] * b_exp - 2.0 * g_yzz_y_x_zz[i] * a_exp + 4.0 * g_yzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5694-5700)

    #pragma omp simd aligned(g_y_y_y_xx, g_y_y_y_xy, g_y_y_y_xz, g_y_y_y_yy, g_y_y_y_yz, g_y_y_y_zz, g_y_yzz_y_xx, g_y_yzz_y_xy, g_y_yzz_y_xz, g_y_yzz_y_yy, g_y_yzz_y_yz, g_y_yzz_y_zz, g_yzz_y_y_xx, g_yzz_y_y_xy, g_yzz_y_y_xz, g_yzz_y_y_yy, g_yzz_y_y_yz, g_yzz_y_y_zz, g_yzz_yzz_y_xx, g_yzz_yzz_y_xy, g_yzz_yzz_y_xz, g_yzz_yzz_y_yy, g_yzz_yzz_y_yz, g_yzz_yzz_y_zz, g_z_z_0_0_yz_yz_y_xx, g_z_z_0_0_yz_yz_y_xy, g_z_z_0_0_yz_yz_y_xz, g_z_z_0_0_yz_yz_y_yy, g_z_z_0_0_yz_yz_y_yz, g_z_z_0_0_yz_yz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yz_y_xx[i] = g_y_y_y_xx[i] - 2.0 * g_y_yzz_y_xx[i] * b_exp - 2.0 * g_yzz_y_y_xx[i] * a_exp + 4.0 * g_yzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_y_xy[i] = g_y_y_y_xy[i] - 2.0 * g_y_yzz_y_xy[i] * b_exp - 2.0 * g_yzz_y_y_xy[i] * a_exp + 4.0 * g_yzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_y_xz[i] = g_y_y_y_xz[i] - 2.0 * g_y_yzz_y_xz[i] * b_exp - 2.0 * g_yzz_y_y_xz[i] * a_exp + 4.0 * g_yzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_y_yy[i] = g_y_y_y_yy[i] - 2.0 * g_y_yzz_y_yy[i] * b_exp - 2.0 * g_yzz_y_y_yy[i] * a_exp + 4.0 * g_yzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_y_yz[i] = g_y_y_y_yz[i] - 2.0 * g_y_yzz_y_yz[i] * b_exp - 2.0 * g_yzz_y_y_yz[i] * a_exp + 4.0 * g_yzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_y_zz[i] = g_y_y_y_zz[i] - 2.0 * g_y_yzz_y_zz[i] * b_exp - 2.0 * g_yzz_y_y_zz[i] * a_exp + 4.0 * g_yzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5700-5706)

    #pragma omp simd aligned(g_y_y_z_xx, g_y_y_z_xy, g_y_y_z_xz, g_y_y_z_yy, g_y_y_z_yz, g_y_y_z_zz, g_y_yzz_z_xx, g_y_yzz_z_xy, g_y_yzz_z_xz, g_y_yzz_z_yy, g_y_yzz_z_yz, g_y_yzz_z_zz, g_yzz_y_z_xx, g_yzz_y_z_xy, g_yzz_y_z_xz, g_yzz_y_z_yy, g_yzz_y_z_yz, g_yzz_y_z_zz, g_yzz_yzz_z_xx, g_yzz_yzz_z_xy, g_yzz_yzz_z_xz, g_yzz_yzz_z_yy, g_yzz_yzz_z_yz, g_yzz_yzz_z_zz, g_z_z_0_0_yz_yz_z_xx, g_z_z_0_0_yz_yz_z_xy, g_z_z_0_0_yz_yz_z_xz, g_z_z_0_0_yz_yz_z_yy, g_z_z_0_0_yz_yz_z_yz, g_z_z_0_0_yz_yz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_yz_z_xx[i] = g_y_y_z_xx[i] - 2.0 * g_y_yzz_z_xx[i] * b_exp - 2.0 * g_yzz_y_z_xx[i] * a_exp + 4.0 * g_yzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_z_xy[i] = g_y_y_z_xy[i] - 2.0 * g_y_yzz_z_xy[i] * b_exp - 2.0 * g_yzz_y_z_xy[i] * a_exp + 4.0 * g_yzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_z_xz[i] = g_y_y_z_xz[i] - 2.0 * g_y_yzz_z_xz[i] * b_exp - 2.0 * g_yzz_y_z_xz[i] * a_exp + 4.0 * g_yzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_z_yy[i] = g_y_y_z_yy[i] - 2.0 * g_y_yzz_z_yy[i] * b_exp - 2.0 * g_yzz_y_z_yy[i] * a_exp + 4.0 * g_yzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_z_yz[i] = g_y_y_z_yz[i] - 2.0 * g_y_yzz_z_yz[i] * b_exp - 2.0 * g_yzz_y_z_yz[i] * a_exp + 4.0 * g_yzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_yz_z_zz[i] = g_y_y_z_zz[i] - 2.0 * g_y_yzz_z_zz[i] * b_exp - 2.0 * g_yzz_y_z_zz[i] * a_exp + 4.0 * g_yzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5706-5712)

    #pragma omp simd aligned(g_y_z_x_xx, g_y_z_x_xy, g_y_z_x_xz, g_y_z_x_yy, g_y_z_x_yz, g_y_z_x_zz, g_y_zzz_x_xx, g_y_zzz_x_xy, g_y_zzz_x_xz, g_y_zzz_x_yy, g_y_zzz_x_yz, g_y_zzz_x_zz, g_yzz_z_x_xx, g_yzz_z_x_xy, g_yzz_z_x_xz, g_yzz_z_x_yy, g_yzz_z_x_yz, g_yzz_z_x_zz, g_yzz_zzz_x_xx, g_yzz_zzz_x_xy, g_yzz_zzz_x_xz, g_yzz_zzz_x_yy, g_yzz_zzz_x_yz, g_yzz_zzz_x_zz, g_z_z_0_0_yz_zz_x_xx, g_z_z_0_0_yz_zz_x_xy, g_z_z_0_0_yz_zz_x_xz, g_z_z_0_0_yz_zz_x_yy, g_z_z_0_0_yz_zz_x_yz, g_z_z_0_0_yz_zz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_zz_x_xx[i] = 2.0 * g_y_z_x_xx[i] - 2.0 * g_y_zzz_x_xx[i] * b_exp - 4.0 * g_yzz_z_x_xx[i] * a_exp + 4.0 * g_yzz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_x_xy[i] = 2.0 * g_y_z_x_xy[i] - 2.0 * g_y_zzz_x_xy[i] * b_exp - 4.0 * g_yzz_z_x_xy[i] * a_exp + 4.0 * g_yzz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_x_xz[i] = 2.0 * g_y_z_x_xz[i] - 2.0 * g_y_zzz_x_xz[i] * b_exp - 4.0 * g_yzz_z_x_xz[i] * a_exp + 4.0 * g_yzz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_x_yy[i] = 2.0 * g_y_z_x_yy[i] - 2.0 * g_y_zzz_x_yy[i] * b_exp - 4.0 * g_yzz_z_x_yy[i] * a_exp + 4.0 * g_yzz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_x_yz[i] = 2.0 * g_y_z_x_yz[i] - 2.0 * g_y_zzz_x_yz[i] * b_exp - 4.0 * g_yzz_z_x_yz[i] * a_exp + 4.0 * g_yzz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_x_zz[i] = 2.0 * g_y_z_x_zz[i] - 2.0 * g_y_zzz_x_zz[i] * b_exp - 4.0 * g_yzz_z_x_zz[i] * a_exp + 4.0 * g_yzz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5712-5718)

    #pragma omp simd aligned(g_y_z_y_xx, g_y_z_y_xy, g_y_z_y_xz, g_y_z_y_yy, g_y_z_y_yz, g_y_z_y_zz, g_y_zzz_y_xx, g_y_zzz_y_xy, g_y_zzz_y_xz, g_y_zzz_y_yy, g_y_zzz_y_yz, g_y_zzz_y_zz, g_yzz_z_y_xx, g_yzz_z_y_xy, g_yzz_z_y_xz, g_yzz_z_y_yy, g_yzz_z_y_yz, g_yzz_z_y_zz, g_yzz_zzz_y_xx, g_yzz_zzz_y_xy, g_yzz_zzz_y_xz, g_yzz_zzz_y_yy, g_yzz_zzz_y_yz, g_yzz_zzz_y_zz, g_z_z_0_0_yz_zz_y_xx, g_z_z_0_0_yz_zz_y_xy, g_z_z_0_0_yz_zz_y_xz, g_z_z_0_0_yz_zz_y_yy, g_z_z_0_0_yz_zz_y_yz, g_z_z_0_0_yz_zz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_zz_y_xx[i] = 2.0 * g_y_z_y_xx[i] - 2.0 * g_y_zzz_y_xx[i] * b_exp - 4.0 * g_yzz_z_y_xx[i] * a_exp + 4.0 * g_yzz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_y_xy[i] = 2.0 * g_y_z_y_xy[i] - 2.0 * g_y_zzz_y_xy[i] * b_exp - 4.0 * g_yzz_z_y_xy[i] * a_exp + 4.0 * g_yzz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_y_xz[i] = 2.0 * g_y_z_y_xz[i] - 2.0 * g_y_zzz_y_xz[i] * b_exp - 4.0 * g_yzz_z_y_xz[i] * a_exp + 4.0 * g_yzz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_y_yy[i] = 2.0 * g_y_z_y_yy[i] - 2.0 * g_y_zzz_y_yy[i] * b_exp - 4.0 * g_yzz_z_y_yy[i] * a_exp + 4.0 * g_yzz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_y_yz[i] = 2.0 * g_y_z_y_yz[i] - 2.0 * g_y_zzz_y_yz[i] * b_exp - 4.0 * g_yzz_z_y_yz[i] * a_exp + 4.0 * g_yzz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_y_zz[i] = 2.0 * g_y_z_y_zz[i] - 2.0 * g_y_zzz_y_zz[i] * b_exp - 4.0 * g_yzz_z_y_zz[i] * a_exp + 4.0 * g_yzz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5718-5724)

    #pragma omp simd aligned(g_y_z_z_xx, g_y_z_z_xy, g_y_z_z_xz, g_y_z_z_yy, g_y_z_z_yz, g_y_z_z_zz, g_y_zzz_z_xx, g_y_zzz_z_xy, g_y_zzz_z_xz, g_y_zzz_z_yy, g_y_zzz_z_yz, g_y_zzz_z_zz, g_yzz_z_z_xx, g_yzz_z_z_xy, g_yzz_z_z_xz, g_yzz_z_z_yy, g_yzz_z_z_yz, g_yzz_z_z_zz, g_yzz_zzz_z_xx, g_yzz_zzz_z_xy, g_yzz_zzz_z_xz, g_yzz_zzz_z_yy, g_yzz_zzz_z_yz, g_yzz_zzz_z_zz, g_z_z_0_0_yz_zz_z_xx, g_z_z_0_0_yz_zz_z_xy, g_z_z_0_0_yz_zz_z_xz, g_z_z_0_0_yz_zz_z_yy, g_z_z_0_0_yz_zz_z_yz, g_z_z_0_0_yz_zz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_yz_zz_z_xx[i] = 2.0 * g_y_z_z_xx[i] - 2.0 * g_y_zzz_z_xx[i] * b_exp - 4.0 * g_yzz_z_z_xx[i] * a_exp + 4.0 * g_yzz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_z_xy[i] = 2.0 * g_y_z_z_xy[i] - 2.0 * g_y_zzz_z_xy[i] * b_exp - 4.0 * g_yzz_z_z_xy[i] * a_exp + 4.0 * g_yzz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_z_xz[i] = 2.0 * g_y_z_z_xz[i] - 2.0 * g_y_zzz_z_xz[i] * b_exp - 4.0 * g_yzz_z_z_xz[i] * a_exp + 4.0 * g_yzz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_z_yy[i] = 2.0 * g_y_z_z_yy[i] - 2.0 * g_y_zzz_z_yy[i] * b_exp - 4.0 * g_yzz_z_z_yy[i] * a_exp + 4.0 * g_yzz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_z_yz[i] = 2.0 * g_y_z_z_yz[i] - 2.0 * g_y_zzz_z_yz[i] * b_exp - 4.0 * g_yzz_z_z_yz[i] * a_exp + 4.0 * g_yzz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_yz_zz_z_zz[i] = 2.0 * g_y_z_z_zz[i] - 2.0 * g_y_zzz_z_zz[i] * b_exp - 4.0 * g_yzz_z_z_zz[i] * a_exp + 4.0 * g_yzz_zzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5724-5730)

    #pragma omp simd aligned(g_z_xxz_x_xx, g_z_xxz_x_xy, g_z_xxz_x_xz, g_z_xxz_x_yy, g_z_xxz_x_yz, g_z_xxz_x_zz, g_z_z_0_0_zz_xx_x_xx, g_z_z_0_0_zz_xx_x_xy, g_z_z_0_0_zz_xx_x_xz, g_z_z_0_0_zz_xx_x_yy, g_z_z_0_0_zz_xx_x_yz, g_z_z_0_0_zz_xx_x_zz, g_zzz_xxz_x_xx, g_zzz_xxz_x_xy, g_zzz_xxz_x_xz, g_zzz_xxz_x_yy, g_zzz_xxz_x_yz, g_zzz_xxz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xx_x_xx[i] = -4.0 * g_z_xxz_x_xx[i] * b_exp + 4.0 * g_zzz_xxz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_x_xy[i] = -4.0 * g_z_xxz_x_xy[i] * b_exp + 4.0 * g_zzz_xxz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_x_xz[i] = -4.0 * g_z_xxz_x_xz[i] * b_exp + 4.0 * g_zzz_xxz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_x_yy[i] = -4.0 * g_z_xxz_x_yy[i] * b_exp + 4.0 * g_zzz_xxz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_x_yz[i] = -4.0 * g_z_xxz_x_yz[i] * b_exp + 4.0 * g_zzz_xxz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_x_zz[i] = -4.0 * g_z_xxz_x_zz[i] * b_exp + 4.0 * g_zzz_xxz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5730-5736)

    #pragma omp simd aligned(g_z_xxz_y_xx, g_z_xxz_y_xy, g_z_xxz_y_xz, g_z_xxz_y_yy, g_z_xxz_y_yz, g_z_xxz_y_zz, g_z_z_0_0_zz_xx_y_xx, g_z_z_0_0_zz_xx_y_xy, g_z_z_0_0_zz_xx_y_xz, g_z_z_0_0_zz_xx_y_yy, g_z_z_0_0_zz_xx_y_yz, g_z_z_0_0_zz_xx_y_zz, g_zzz_xxz_y_xx, g_zzz_xxz_y_xy, g_zzz_xxz_y_xz, g_zzz_xxz_y_yy, g_zzz_xxz_y_yz, g_zzz_xxz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xx_y_xx[i] = -4.0 * g_z_xxz_y_xx[i] * b_exp + 4.0 * g_zzz_xxz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_y_xy[i] = -4.0 * g_z_xxz_y_xy[i] * b_exp + 4.0 * g_zzz_xxz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_y_xz[i] = -4.0 * g_z_xxz_y_xz[i] * b_exp + 4.0 * g_zzz_xxz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_y_yy[i] = -4.0 * g_z_xxz_y_yy[i] * b_exp + 4.0 * g_zzz_xxz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_y_yz[i] = -4.0 * g_z_xxz_y_yz[i] * b_exp + 4.0 * g_zzz_xxz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_y_zz[i] = -4.0 * g_z_xxz_y_zz[i] * b_exp + 4.0 * g_zzz_xxz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5736-5742)

    #pragma omp simd aligned(g_z_xxz_z_xx, g_z_xxz_z_xy, g_z_xxz_z_xz, g_z_xxz_z_yy, g_z_xxz_z_yz, g_z_xxz_z_zz, g_z_z_0_0_zz_xx_z_xx, g_z_z_0_0_zz_xx_z_xy, g_z_z_0_0_zz_xx_z_xz, g_z_z_0_0_zz_xx_z_yy, g_z_z_0_0_zz_xx_z_yz, g_z_z_0_0_zz_xx_z_zz, g_zzz_xxz_z_xx, g_zzz_xxz_z_xy, g_zzz_xxz_z_xz, g_zzz_xxz_z_yy, g_zzz_xxz_z_yz, g_zzz_xxz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xx_z_xx[i] = -4.0 * g_z_xxz_z_xx[i] * b_exp + 4.0 * g_zzz_xxz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_z_xy[i] = -4.0 * g_z_xxz_z_xy[i] * b_exp + 4.0 * g_zzz_xxz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_z_xz[i] = -4.0 * g_z_xxz_z_xz[i] * b_exp + 4.0 * g_zzz_xxz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_z_yy[i] = -4.0 * g_z_xxz_z_yy[i] * b_exp + 4.0 * g_zzz_xxz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_z_yz[i] = -4.0 * g_z_xxz_z_yz[i] * b_exp + 4.0 * g_zzz_xxz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xx_z_zz[i] = -4.0 * g_z_xxz_z_zz[i] * b_exp + 4.0 * g_zzz_xxz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5742-5748)

    #pragma omp simd aligned(g_z_xyz_x_xx, g_z_xyz_x_xy, g_z_xyz_x_xz, g_z_xyz_x_yy, g_z_xyz_x_yz, g_z_xyz_x_zz, g_z_z_0_0_zz_xy_x_xx, g_z_z_0_0_zz_xy_x_xy, g_z_z_0_0_zz_xy_x_xz, g_z_z_0_0_zz_xy_x_yy, g_z_z_0_0_zz_xy_x_yz, g_z_z_0_0_zz_xy_x_zz, g_zzz_xyz_x_xx, g_zzz_xyz_x_xy, g_zzz_xyz_x_xz, g_zzz_xyz_x_yy, g_zzz_xyz_x_yz, g_zzz_xyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xy_x_xx[i] = -4.0 * g_z_xyz_x_xx[i] * b_exp + 4.0 * g_zzz_xyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_x_xy[i] = -4.0 * g_z_xyz_x_xy[i] * b_exp + 4.0 * g_zzz_xyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_x_xz[i] = -4.0 * g_z_xyz_x_xz[i] * b_exp + 4.0 * g_zzz_xyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_x_yy[i] = -4.0 * g_z_xyz_x_yy[i] * b_exp + 4.0 * g_zzz_xyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_x_yz[i] = -4.0 * g_z_xyz_x_yz[i] * b_exp + 4.0 * g_zzz_xyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_x_zz[i] = -4.0 * g_z_xyz_x_zz[i] * b_exp + 4.0 * g_zzz_xyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5748-5754)

    #pragma omp simd aligned(g_z_xyz_y_xx, g_z_xyz_y_xy, g_z_xyz_y_xz, g_z_xyz_y_yy, g_z_xyz_y_yz, g_z_xyz_y_zz, g_z_z_0_0_zz_xy_y_xx, g_z_z_0_0_zz_xy_y_xy, g_z_z_0_0_zz_xy_y_xz, g_z_z_0_0_zz_xy_y_yy, g_z_z_0_0_zz_xy_y_yz, g_z_z_0_0_zz_xy_y_zz, g_zzz_xyz_y_xx, g_zzz_xyz_y_xy, g_zzz_xyz_y_xz, g_zzz_xyz_y_yy, g_zzz_xyz_y_yz, g_zzz_xyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xy_y_xx[i] = -4.0 * g_z_xyz_y_xx[i] * b_exp + 4.0 * g_zzz_xyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_y_xy[i] = -4.0 * g_z_xyz_y_xy[i] * b_exp + 4.0 * g_zzz_xyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_y_xz[i] = -4.0 * g_z_xyz_y_xz[i] * b_exp + 4.0 * g_zzz_xyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_y_yy[i] = -4.0 * g_z_xyz_y_yy[i] * b_exp + 4.0 * g_zzz_xyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_y_yz[i] = -4.0 * g_z_xyz_y_yz[i] * b_exp + 4.0 * g_zzz_xyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_y_zz[i] = -4.0 * g_z_xyz_y_zz[i] * b_exp + 4.0 * g_zzz_xyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5754-5760)

    #pragma omp simd aligned(g_z_xyz_z_xx, g_z_xyz_z_xy, g_z_xyz_z_xz, g_z_xyz_z_yy, g_z_xyz_z_yz, g_z_xyz_z_zz, g_z_z_0_0_zz_xy_z_xx, g_z_z_0_0_zz_xy_z_xy, g_z_z_0_0_zz_xy_z_xz, g_z_z_0_0_zz_xy_z_yy, g_z_z_0_0_zz_xy_z_yz, g_z_z_0_0_zz_xy_z_zz, g_zzz_xyz_z_xx, g_zzz_xyz_z_xy, g_zzz_xyz_z_xz, g_zzz_xyz_z_yy, g_zzz_xyz_z_yz, g_zzz_xyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xy_z_xx[i] = -4.0 * g_z_xyz_z_xx[i] * b_exp + 4.0 * g_zzz_xyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_z_xy[i] = -4.0 * g_z_xyz_z_xy[i] * b_exp + 4.0 * g_zzz_xyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_z_xz[i] = -4.0 * g_z_xyz_z_xz[i] * b_exp + 4.0 * g_zzz_xyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_z_yy[i] = -4.0 * g_z_xyz_z_yy[i] * b_exp + 4.0 * g_zzz_xyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_z_yz[i] = -4.0 * g_z_xyz_z_yz[i] * b_exp + 4.0 * g_zzz_xyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xy_z_zz[i] = -4.0 * g_z_xyz_z_zz[i] * b_exp + 4.0 * g_zzz_xyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5760-5766)

    #pragma omp simd aligned(g_z_x_x_xx, g_z_x_x_xy, g_z_x_x_xz, g_z_x_x_yy, g_z_x_x_yz, g_z_x_x_zz, g_z_xzz_x_xx, g_z_xzz_x_xy, g_z_xzz_x_xz, g_z_xzz_x_yy, g_z_xzz_x_yz, g_z_xzz_x_zz, g_z_z_0_0_zz_xz_x_xx, g_z_z_0_0_zz_xz_x_xy, g_z_z_0_0_zz_xz_x_xz, g_z_z_0_0_zz_xz_x_yy, g_z_z_0_0_zz_xz_x_yz, g_z_z_0_0_zz_xz_x_zz, g_zzz_x_x_xx, g_zzz_x_x_xy, g_zzz_x_x_xz, g_zzz_x_x_yy, g_zzz_x_x_yz, g_zzz_x_x_zz, g_zzz_xzz_x_xx, g_zzz_xzz_x_xy, g_zzz_xzz_x_xz, g_zzz_xzz_x_yy, g_zzz_xzz_x_yz, g_zzz_xzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xz_x_xx[i] = 2.0 * g_z_x_x_xx[i] - 4.0 * g_z_xzz_x_xx[i] * b_exp - 2.0 * g_zzz_x_x_xx[i] * a_exp + 4.0 * g_zzz_xzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_x_xy[i] = 2.0 * g_z_x_x_xy[i] - 4.0 * g_z_xzz_x_xy[i] * b_exp - 2.0 * g_zzz_x_x_xy[i] * a_exp + 4.0 * g_zzz_xzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_x_xz[i] = 2.0 * g_z_x_x_xz[i] - 4.0 * g_z_xzz_x_xz[i] * b_exp - 2.0 * g_zzz_x_x_xz[i] * a_exp + 4.0 * g_zzz_xzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_x_yy[i] = 2.0 * g_z_x_x_yy[i] - 4.0 * g_z_xzz_x_yy[i] * b_exp - 2.0 * g_zzz_x_x_yy[i] * a_exp + 4.0 * g_zzz_xzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_x_yz[i] = 2.0 * g_z_x_x_yz[i] - 4.0 * g_z_xzz_x_yz[i] * b_exp - 2.0 * g_zzz_x_x_yz[i] * a_exp + 4.0 * g_zzz_xzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_x_zz[i] = 2.0 * g_z_x_x_zz[i] - 4.0 * g_z_xzz_x_zz[i] * b_exp - 2.0 * g_zzz_x_x_zz[i] * a_exp + 4.0 * g_zzz_xzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5766-5772)

    #pragma omp simd aligned(g_z_x_y_xx, g_z_x_y_xy, g_z_x_y_xz, g_z_x_y_yy, g_z_x_y_yz, g_z_x_y_zz, g_z_xzz_y_xx, g_z_xzz_y_xy, g_z_xzz_y_xz, g_z_xzz_y_yy, g_z_xzz_y_yz, g_z_xzz_y_zz, g_z_z_0_0_zz_xz_y_xx, g_z_z_0_0_zz_xz_y_xy, g_z_z_0_0_zz_xz_y_xz, g_z_z_0_0_zz_xz_y_yy, g_z_z_0_0_zz_xz_y_yz, g_z_z_0_0_zz_xz_y_zz, g_zzz_x_y_xx, g_zzz_x_y_xy, g_zzz_x_y_xz, g_zzz_x_y_yy, g_zzz_x_y_yz, g_zzz_x_y_zz, g_zzz_xzz_y_xx, g_zzz_xzz_y_xy, g_zzz_xzz_y_xz, g_zzz_xzz_y_yy, g_zzz_xzz_y_yz, g_zzz_xzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xz_y_xx[i] = 2.0 * g_z_x_y_xx[i] - 4.0 * g_z_xzz_y_xx[i] * b_exp - 2.0 * g_zzz_x_y_xx[i] * a_exp + 4.0 * g_zzz_xzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_y_xy[i] = 2.0 * g_z_x_y_xy[i] - 4.0 * g_z_xzz_y_xy[i] * b_exp - 2.0 * g_zzz_x_y_xy[i] * a_exp + 4.0 * g_zzz_xzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_y_xz[i] = 2.0 * g_z_x_y_xz[i] - 4.0 * g_z_xzz_y_xz[i] * b_exp - 2.0 * g_zzz_x_y_xz[i] * a_exp + 4.0 * g_zzz_xzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_y_yy[i] = 2.0 * g_z_x_y_yy[i] - 4.0 * g_z_xzz_y_yy[i] * b_exp - 2.0 * g_zzz_x_y_yy[i] * a_exp + 4.0 * g_zzz_xzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_y_yz[i] = 2.0 * g_z_x_y_yz[i] - 4.0 * g_z_xzz_y_yz[i] * b_exp - 2.0 * g_zzz_x_y_yz[i] * a_exp + 4.0 * g_zzz_xzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_y_zz[i] = 2.0 * g_z_x_y_zz[i] - 4.0 * g_z_xzz_y_zz[i] * b_exp - 2.0 * g_zzz_x_y_zz[i] * a_exp + 4.0 * g_zzz_xzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5772-5778)

    #pragma omp simd aligned(g_z_x_z_xx, g_z_x_z_xy, g_z_x_z_xz, g_z_x_z_yy, g_z_x_z_yz, g_z_x_z_zz, g_z_xzz_z_xx, g_z_xzz_z_xy, g_z_xzz_z_xz, g_z_xzz_z_yy, g_z_xzz_z_yz, g_z_xzz_z_zz, g_z_z_0_0_zz_xz_z_xx, g_z_z_0_0_zz_xz_z_xy, g_z_z_0_0_zz_xz_z_xz, g_z_z_0_0_zz_xz_z_yy, g_z_z_0_0_zz_xz_z_yz, g_z_z_0_0_zz_xz_z_zz, g_zzz_x_z_xx, g_zzz_x_z_xy, g_zzz_x_z_xz, g_zzz_x_z_yy, g_zzz_x_z_yz, g_zzz_x_z_zz, g_zzz_xzz_z_xx, g_zzz_xzz_z_xy, g_zzz_xzz_z_xz, g_zzz_xzz_z_yy, g_zzz_xzz_z_yz, g_zzz_xzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_xz_z_xx[i] = 2.0 * g_z_x_z_xx[i] - 4.0 * g_z_xzz_z_xx[i] * b_exp - 2.0 * g_zzz_x_z_xx[i] * a_exp + 4.0 * g_zzz_xzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_z_xy[i] = 2.0 * g_z_x_z_xy[i] - 4.0 * g_z_xzz_z_xy[i] * b_exp - 2.0 * g_zzz_x_z_xy[i] * a_exp + 4.0 * g_zzz_xzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_z_xz[i] = 2.0 * g_z_x_z_xz[i] - 4.0 * g_z_xzz_z_xz[i] * b_exp - 2.0 * g_zzz_x_z_xz[i] * a_exp + 4.0 * g_zzz_xzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_z_yy[i] = 2.0 * g_z_x_z_yy[i] - 4.0 * g_z_xzz_z_yy[i] * b_exp - 2.0 * g_zzz_x_z_yy[i] * a_exp + 4.0 * g_zzz_xzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_z_yz[i] = 2.0 * g_z_x_z_yz[i] - 4.0 * g_z_xzz_z_yz[i] * b_exp - 2.0 * g_zzz_x_z_yz[i] * a_exp + 4.0 * g_zzz_xzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_xz_z_zz[i] = 2.0 * g_z_x_z_zz[i] - 4.0 * g_z_xzz_z_zz[i] * b_exp - 2.0 * g_zzz_x_z_zz[i] * a_exp + 4.0 * g_zzz_xzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5778-5784)

    #pragma omp simd aligned(g_z_yyz_x_xx, g_z_yyz_x_xy, g_z_yyz_x_xz, g_z_yyz_x_yy, g_z_yyz_x_yz, g_z_yyz_x_zz, g_z_z_0_0_zz_yy_x_xx, g_z_z_0_0_zz_yy_x_xy, g_z_z_0_0_zz_yy_x_xz, g_z_z_0_0_zz_yy_x_yy, g_z_z_0_0_zz_yy_x_yz, g_z_z_0_0_zz_yy_x_zz, g_zzz_yyz_x_xx, g_zzz_yyz_x_xy, g_zzz_yyz_x_xz, g_zzz_yyz_x_yy, g_zzz_yyz_x_yz, g_zzz_yyz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yy_x_xx[i] = -4.0 * g_z_yyz_x_xx[i] * b_exp + 4.0 * g_zzz_yyz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_x_xy[i] = -4.0 * g_z_yyz_x_xy[i] * b_exp + 4.0 * g_zzz_yyz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_x_xz[i] = -4.0 * g_z_yyz_x_xz[i] * b_exp + 4.0 * g_zzz_yyz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_x_yy[i] = -4.0 * g_z_yyz_x_yy[i] * b_exp + 4.0 * g_zzz_yyz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_x_yz[i] = -4.0 * g_z_yyz_x_yz[i] * b_exp + 4.0 * g_zzz_yyz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_x_zz[i] = -4.0 * g_z_yyz_x_zz[i] * b_exp + 4.0 * g_zzz_yyz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5784-5790)

    #pragma omp simd aligned(g_z_yyz_y_xx, g_z_yyz_y_xy, g_z_yyz_y_xz, g_z_yyz_y_yy, g_z_yyz_y_yz, g_z_yyz_y_zz, g_z_z_0_0_zz_yy_y_xx, g_z_z_0_0_zz_yy_y_xy, g_z_z_0_0_zz_yy_y_xz, g_z_z_0_0_zz_yy_y_yy, g_z_z_0_0_zz_yy_y_yz, g_z_z_0_0_zz_yy_y_zz, g_zzz_yyz_y_xx, g_zzz_yyz_y_xy, g_zzz_yyz_y_xz, g_zzz_yyz_y_yy, g_zzz_yyz_y_yz, g_zzz_yyz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yy_y_xx[i] = -4.0 * g_z_yyz_y_xx[i] * b_exp + 4.0 * g_zzz_yyz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_y_xy[i] = -4.0 * g_z_yyz_y_xy[i] * b_exp + 4.0 * g_zzz_yyz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_y_xz[i] = -4.0 * g_z_yyz_y_xz[i] * b_exp + 4.0 * g_zzz_yyz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_y_yy[i] = -4.0 * g_z_yyz_y_yy[i] * b_exp + 4.0 * g_zzz_yyz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_y_yz[i] = -4.0 * g_z_yyz_y_yz[i] * b_exp + 4.0 * g_zzz_yyz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_y_zz[i] = -4.0 * g_z_yyz_y_zz[i] * b_exp + 4.0 * g_zzz_yyz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5790-5796)

    #pragma omp simd aligned(g_z_yyz_z_xx, g_z_yyz_z_xy, g_z_yyz_z_xz, g_z_yyz_z_yy, g_z_yyz_z_yz, g_z_yyz_z_zz, g_z_z_0_0_zz_yy_z_xx, g_z_z_0_0_zz_yy_z_xy, g_z_z_0_0_zz_yy_z_xz, g_z_z_0_0_zz_yy_z_yy, g_z_z_0_0_zz_yy_z_yz, g_z_z_0_0_zz_yy_z_zz, g_zzz_yyz_z_xx, g_zzz_yyz_z_xy, g_zzz_yyz_z_xz, g_zzz_yyz_z_yy, g_zzz_yyz_z_yz, g_zzz_yyz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yy_z_xx[i] = -4.0 * g_z_yyz_z_xx[i] * b_exp + 4.0 * g_zzz_yyz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_z_xy[i] = -4.0 * g_z_yyz_z_xy[i] * b_exp + 4.0 * g_zzz_yyz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_z_xz[i] = -4.0 * g_z_yyz_z_xz[i] * b_exp + 4.0 * g_zzz_yyz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_z_yy[i] = -4.0 * g_z_yyz_z_yy[i] * b_exp + 4.0 * g_zzz_yyz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_z_yz[i] = -4.0 * g_z_yyz_z_yz[i] * b_exp + 4.0 * g_zzz_yyz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yy_z_zz[i] = -4.0 * g_z_yyz_z_zz[i] * b_exp + 4.0 * g_zzz_yyz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5796-5802)

    #pragma omp simd aligned(g_z_y_x_xx, g_z_y_x_xy, g_z_y_x_xz, g_z_y_x_yy, g_z_y_x_yz, g_z_y_x_zz, g_z_yzz_x_xx, g_z_yzz_x_xy, g_z_yzz_x_xz, g_z_yzz_x_yy, g_z_yzz_x_yz, g_z_yzz_x_zz, g_z_z_0_0_zz_yz_x_xx, g_z_z_0_0_zz_yz_x_xy, g_z_z_0_0_zz_yz_x_xz, g_z_z_0_0_zz_yz_x_yy, g_z_z_0_0_zz_yz_x_yz, g_z_z_0_0_zz_yz_x_zz, g_zzz_y_x_xx, g_zzz_y_x_xy, g_zzz_y_x_xz, g_zzz_y_x_yy, g_zzz_y_x_yz, g_zzz_y_x_zz, g_zzz_yzz_x_xx, g_zzz_yzz_x_xy, g_zzz_yzz_x_xz, g_zzz_yzz_x_yy, g_zzz_yzz_x_yz, g_zzz_yzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yz_x_xx[i] = 2.0 * g_z_y_x_xx[i] - 4.0 * g_z_yzz_x_xx[i] * b_exp - 2.0 * g_zzz_y_x_xx[i] * a_exp + 4.0 * g_zzz_yzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_x_xy[i] = 2.0 * g_z_y_x_xy[i] - 4.0 * g_z_yzz_x_xy[i] * b_exp - 2.0 * g_zzz_y_x_xy[i] * a_exp + 4.0 * g_zzz_yzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_x_xz[i] = 2.0 * g_z_y_x_xz[i] - 4.0 * g_z_yzz_x_xz[i] * b_exp - 2.0 * g_zzz_y_x_xz[i] * a_exp + 4.0 * g_zzz_yzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_x_yy[i] = 2.0 * g_z_y_x_yy[i] - 4.0 * g_z_yzz_x_yy[i] * b_exp - 2.0 * g_zzz_y_x_yy[i] * a_exp + 4.0 * g_zzz_yzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_x_yz[i] = 2.0 * g_z_y_x_yz[i] - 4.0 * g_z_yzz_x_yz[i] * b_exp - 2.0 * g_zzz_y_x_yz[i] * a_exp + 4.0 * g_zzz_yzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_x_zz[i] = 2.0 * g_z_y_x_zz[i] - 4.0 * g_z_yzz_x_zz[i] * b_exp - 2.0 * g_zzz_y_x_zz[i] * a_exp + 4.0 * g_zzz_yzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5802-5808)

    #pragma omp simd aligned(g_z_y_y_xx, g_z_y_y_xy, g_z_y_y_xz, g_z_y_y_yy, g_z_y_y_yz, g_z_y_y_zz, g_z_yzz_y_xx, g_z_yzz_y_xy, g_z_yzz_y_xz, g_z_yzz_y_yy, g_z_yzz_y_yz, g_z_yzz_y_zz, g_z_z_0_0_zz_yz_y_xx, g_z_z_0_0_zz_yz_y_xy, g_z_z_0_0_zz_yz_y_xz, g_z_z_0_0_zz_yz_y_yy, g_z_z_0_0_zz_yz_y_yz, g_z_z_0_0_zz_yz_y_zz, g_zzz_y_y_xx, g_zzz_y_y_xy, g_zzz_y_y_xz, g_zzz_y_y_yy, g_zzz_y_y_yz, g_zzz_y_y_zz, g_zzz_yzz_y_xx, g_zzz_yzz_y_xy, g_zzz_yzz_y_xz, g_zzz_yzz_y_yy, g_zzz_yzz_y_yz, g_zzz_yzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yz_y_xx[i] = 2.0 * g_z_y_y_xx[i] - 4.0 * g_z_yzz_y_xx[i] * b_exp - 2.0 * g_zzz_y_y_xx[i] * a_exp + 4.0 * g_zzz_yzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_y_xy[i] = 2.0 * g_z_y_y_xy[i] - 4.0 * g_z_yzz_y_xy[i] * b_exp - 2.0 * g_zzz_y_y_xy[i] * a_exp + 4.0 * g_zzz_yzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_y_xz[i] = 2.0 * g_z_y_y_xz[i] - 4.0 * g_z_yzz_y_xz[i] * b_exp - 2.0 * g_zzz_y_y_xz[i] * a_exp + 4.0 * g_zzz_yzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_y_yy[i] = 2.0 * g_z_y_y_yy[i] - 4.0 * g_z_yzz_y_yy[i] * b_exp - 2.0 * g_zzz_y_y_yy[i] * a_exp + 4.0 * g_zzz_yzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_y_yz[i] = 2.0 * g_z_y_y_yz[i] - 4.0 * g_z_yzz_y_yz[i] * b_exp - 2.0 * g_zzz_y_y_yz[i] * a_exp + 4.0 * g_zzz_yzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_y_zz[i] = 2.0 * g_z_y_y_zz[i] - 4.0 * g_z_yzz_y_zz[i] * b_exp - 2.0 * g_zzz_y_y_zz[i] * a_exp + 4.0 * g_zzz_yzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5808-5814)

    #pragma omp simd aligned(g_z_y_z_xx, g_z_y_z_xy, g_z_y_z_xz, g_z_y_z_yy, g_z_y_z_yz, g_z_y_z_zz, g_z_yzz_z_xx, g_z_yzz_z_xy, g_z_yzz_z_xz, g_z_yzz_z_yy, g_z_yzz_z_yz, g_z_yzz_z_zz, g_z_z_0_0_zz_yz_z_xx, g_z_z_0_0_zz_yz_z_xy, g_z_z_0_0_zz_yz_z_xz, g_z_z_0_0_zz_yz_z_yy, g_z_z_0_0_zz_yz_z_yz, g_z_z_0_0_zz_yz_z_zz, g_zzz_y_z_xx, g_zzz_y_z_xy, g_zzz_y_z_xz, g_zzz_y_z_yy, g_zzz_y_z_yz, g_zzz_y_z_zz, g_zzz_yzz_z_xx, g_zzz_yzz_z_xy, g_zzz_yzz_z_xz, g_zzz_yzz_z_yy, g_zzz_yzz_z_yz, g_zzz_yzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_yz_z_xx[i] = 2.0 * g_z_y_z_xx[i] - 4.0 * g_z_yzz_z_xx[i] * b_exp - 2.0 * g_zzz_y_z_xx[i] * a_exp + 4.0 * g_zzz_yzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_z_xy[i] = 2.0 * g_z_y_z_xy[i] - 4.0 * g_z_yzz_z_xy[i] * b_exp - 2.0 * g_zzz_y_z_xy[i] * a_exp + 4.0 * g_zzz_yzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_z_xz[i] = 2.0 * g_z_y_z_xz[i] - 4.0 * g_z_yzz_z_xz[i] * b_exp - 2.0 * g_zzz_y_z_xz[i] * a_exp + 4.0 * g_zzz_yzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_z_yy[i] = 2.0 * g_z_y_z_yy[i] - 4.0 * g_z_yzz_z_yy[i] * b_exp - 2.0 * g_zzz_y_z_yy[i] * a_exp + 4.0 * g_zzz_yzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_z_yz[i] = 2.0 * g_z_y_z_yz[i] - 4.0 * g_z_yzz_z_yz[i] * b_exp - 2.0 * g_zzz_y_z_yz[i] * a_exp + 4.0 * g_zzz_yzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_yz_z_zz[i] = 2.0 * g_z_y_z_zz[i] - 4.0 * g_z_yzz_z_zz[i] * b_exp - 2.0 * g_zzz_y_z_zz[i] * a_exp + 4.0 * g_zzz_yzz_z_zz[i] * a_exp * b_exp;
    }
    // integrals block (5814-5820)

    #pragma omp simd aligned(g_z_z_0_0_zz_zz_x_xx, g_z_z_0_0_zz_zz_x_xy, g_z_z_0_0_zz_zz_x_xz, g_z_z_0_0_zz_zz_x_yy, g_z_z_0_0_zz_zz_x_yz, g_z_z_0_0_zz_zz_x_zz, g_z_z_x_xx, g_z_z_x_xy, g_z_z_x_xz, g_z_z_x_yy, g_z_z_x_yz, g_z_z_x_zz, g_z_zzz_x_xx, g_z_zzz_x_xy, g_z_zzz_x_xz, g_z_zzz_x_yy, g_z_zzz_x_yz, g_z_zzz_x_zz, g_zzz_z_x_xx, g_zzz_z_x_xy, g_zzz_z_x_xz, g_zzz_z_x_yy, g_zzz_z_x_yz, g_zzz_z_x_zz, g_zzz_zzz_x_xx, g_zzz_zzz_x_xy, g_zzz_zzz_x_xz, g_zzz_zzz_x_yy, g_zzz_zzz_x_yz, g_zzz_zzz_x_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_zz_x_xx[i] = 4.0 * g_z_z_x_xx[i] - 4.0 * g_z_zzz_x_xx[i] * b_exp - 4.0 * g_zzz_z_x_xx[i] * a_exp + 4.0 * g_zzz_zzz_x_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_x_xy[i] = 4.0 * g_z_z_x_xy[i] - 4.0 * g_z_zzz_x_xy[i] * b_exp - 4.0 * g_zzz_z_x_xy[i] * a_exp + 4.0 * g_zzz_zzz_x_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_x_xz[i] = 4.0 * g_z_z_x_xz[i] - 4.0 * g_z_zzz_x_xz[i] * b_exp - 4.0 * g_zzz_z_x_xz[i] * a_exp + 4.0 * g_zzz_zzz_x_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_x_yy[i] = 4.0 * g_z_z_x_yy[i] - 4.0 * g_z_zzz_x_yy[i] * b_exp - 4.0 * g_zzz_z_x_yy[i] * a_exp + 4.0 * g_zzz_zzz_x_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_x_yz[i] = 4.0 * g_z_z_x_yz[i] - 4.0 * g_z_zzz_x_yz[i] * b_exp - 4.0 * g_zzz_z_x_yz[i] * a_exp + 4.0 * g_zzz_zzz_x_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_x_zz[i] = 4.0 * g_z_z_x_zz[i] - 4.0 * g_z_zzz_x_zz[i] * b_exp - 4.0 * g_zzz_z_x_zz[i] * a_exp + 4.0 * g_zzz_zzz_x_zz[i] * a_exp * b_exp;
    }
    // integrals block (5820-5826)

    #pragma omp simd aligned(g_z_z_0_0_zz_zz_y_xx, g_z_z_0_0_zz_zz_y_xy, g_z_z_0_0_zz_zz_y_xz, g_z_z_0_0_zz_zz_y_yy, g_z_z_0_0_zz_zz_y_yz, g_z_z_0_0_zz_zz_y_zz, g_z_z_y_xx, g_z_z_y_xy, g_z_z_y_xz, g_z_z_y_yy, g_z_z_y_yz, g_z_z_y_zz, g_z_zzz_y_xx, g_z_zzz_y_xy, g_z_zzz_y_xz, g_z_zzz_y_yy, g_z_zzz_y_yz, g_z_zzz_y_zz, g_zzz_z_y_xx, g_zzz_z_y_xy, g_zzz_z_y_xz, g_zzz_z_y_yy, g_zzz_z_y_yz, g_zzz_z_y_zz, g_zzz_zzz_y_xx, g_zzz_zzz_y_xy, g_zzz_zzz_y_xz, g_zzz_zzz_y_yy, g_zzz_zzz_y_yz, g_zzz_zzz_y_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_zz_y_xx[i] = 4.0 * g_z_z_y_xx[i] - 4.0 * g_z_zzz_y_xx[i] * b_exp - 4.0 * g_zzz_z_y_xx[i] * a_exp + 4.0 * g_zzz_zzz_y_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_y_xy[i] = 4.0 * g_z_z_y_xy[i] - 4.0 * g_z_zzz_y_xy[i] * b_exp - 4.0 * g_zzz_z_y_xy[i] * a_exp + 4.0 * g_zzz_zzz_y_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_y_xz[i] = 4.0 * g_z_z_y_xz[i] - 4.0 * g_z_zzz_y_xz[i] * b_exp - 4.0 * g_zzz_z_y_xz[i] * a_exp + 4.0 * g_zzz_zzz_y_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_y_yy[i] = 4.0 * g_z_z_y_yy[i] - 4.0 * g_z_zzz_y_yy[i] * b_exp - 4.0 * g_zzz_z_y_yy[i] * a_exp + 4.0 * g_zzz_zzz_y_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_y_yz[i] = 4.0 * g_z_z_y_yz[i] - 4.0 * g_z_zzz_y_yz[i] * b_exp - 4.0 * g_zzz_z_y_yz[i] * a_exp + 4.0 * g_zzz_zzz_y_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_y_zz[i] = 4.0 * g_z_z_y_zz[i] - 4.0 * g_z_zzz_y_zz[i] * b_exp - 4.0 * g_zzz_z_y_zz[i] * a_exp + 4.0 * g_zzz_zzz_y_zz[i] * a_exp * b_exp;
    }
    // integrals block (5826-5832)

    #pragma omp simd aligned(g_z_z_0_0_zz_zz_z_xx, g_z_z_0_0_zz_zz_z_xy, g_z_z_0_0_zz_zz_z_xz, g_z_z_0_0_zz_zz_z_yy, g_z_z_0_0_zz_zz_z_yz, g_z_z_0_0_zz_zz_z_zz, g_z_z_z_xx, g_z_z_z_xy, g_z_z_z_xz, g_z_z_z_yy, g_z_z_z_yz, g_z_z_z_zz, g_z_zzz_z_xx, g_z_zzz_z_xy, g_z_zzz_z_xz, g_z_zzz_z_yy, g_z_zzz_z_yz, g_z_zzz_z_zz, g_zzz_z_z_xx, g_zzz_z_z_xy, g_zzz_z_z_xz, g_zzz_z_z_yy, g_zzz_z_z_yz, g_zzz_z_z_zz, g_zzz_zzz_z_xx, g_zzz_zzz_z_xy, g_zzz_zzz_z_xz, g_zzz_zzz_z_yy, g_zzz_zzz_z_yz, g_zzz_zzz_z_zz  : 64)
    for (size_t i = 0; i < ndims; i++)
    {
        g_z_z_0_0_zz_zz_z_xx[i] = 4.0 * g_z_z_z_xx[i] - 4.0 * g_z_zzz_z_xx[i] * b_exp - 4.0 * g_zzz_z_z_xx[i] * a_exp + 4.0 * g_zzz_zzz_z_xx[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_z_xy[i] = 4.0 * g_z_z_z_xy[i] - 4.0 * g_z_zzz_z_xy[i] * b_exp - 4.0 * g_zzz_z_z_xy[i] * a_exp + 4.0 * g_zzz_zzz_z_xy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_z_xz[i] = 4.0 * g_z_z_z_xz[i] - 4.0 * g_z_zzz_z_xz[i] * b_exp - 4.0 * g_zzz_z_z_xz[i] * a_exp + 4.0 * g_zzz_zzz_z_xz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_z_yy[i] = 4.0 * g_z_z_z_yy[i] - 4.0 * g_z_zzz_z_yy[i] * b_exp - 4.0 * g_zzz_z_z_yy[i] * a_exp + 4.0 * g_zzz_zzz_z_yy[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_z_yz[i] = 4.0 * g_z_z_z_yz[i] - 4.0 * g_z_zzz_z_yz[i] * b_exp - 4.0 * g_zzz_z_z_yz[i] * a_exp + 4.0 * g_zzz_zzz_z_yz[i] * a_exp * b_exp;

        g_z_z_0_0_zz_zz_z_zz[i] = 4.0 * g_z_z_z_zz[i] - 4.0 * g_z_zzz_z_zz[i] * b_exp - 4.0 * g_zzz_z_z_zz[i] * a_exp + 4.0 * g_zzz_zzz_z_zz[i] * a_exp * b_exp;
    }
}

} // t4c_geom namespace

