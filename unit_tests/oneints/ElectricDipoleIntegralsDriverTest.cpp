//
//                     V.E.L.O.X. C.H.E.M. MP
//      ---------------------------------------------------
//           An Electronic Structure Code for Nanoscale
//
//  Copyright Â© 2018 by Velox Chem MP developers. All rights reserved.
//  Contact: Zilvinas Rinkevicius (rinkevic@kth.se), KTH, Sweden.


#include "ElectricDipoleIntegralsDriverTest.hpp"

#include "ElectricDipoleIntegralsDriver.hpp"
#include "MoleculeSetter.hpp"
#include "MolecularBasisSetter.hpp"

TEST_F(CElectricDipoleIntegralsDriverTest, ComputeSSForLiH)
{
    CElectricDipoleIntegralsDriver dipdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                          MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH();
    
    CGtoBlock bgtos(mlih, mbas, 0);
    
    CGtoBlock kgtos(mlih, mbas, 0);
    
    CDenseMatrix dipxmat(4, 4);
    
    CDenseMatrix dipymat(4, 4);
    
    CDenseMatrix dipzmat(4, 4);
    
    dipdrv.compute(dipxmat.values(), dipymat.values(), dipzmat.values(),
                   bgtos, kgtos);
    
    std::vector<double> intxvals{ 0.000000000000000,  0.000000000000000,  0.034080416572876,
                                  0.038381743586952,  0.000000000000000,  0.000000000000000,
                                  0.060847045273318,  0.067637145335229,  0.034080416572876,
                                  0.060847045273318,  0.400000000000000,  0.321445559231693,
                                  0.038381743586952,  0.067637145335229,  0.321445559231693,
                                  0.400000000000000};
    
    ASSERT_EQ(dipxmat, CDenseMatrix(intxvals, 4, 4));
    
    std::vector<double> intyvals{ 0.000000000000000,  0.000000000000000,  0.051120624859315,
                                  0.057572615380427,  0.000000000000000,  0.000000000000000,
                                  0.091270567909978,  0.101455718002844,  0.051120624859315,
                                  0.091270567909978,  0.600000000000000,  0.482168338847539,
                                  0.057572615380427,  0.101455718002844,  0.482168338847539,
                                  0.600000000000000};
    
    ASSERT_EQ(dipymat, CDenseMatrix(intyvals, 4, 4));
    
    std::vector<double> intzvals{ 0.000000000000000,  0.000000000000000,  0.093721145575410,
                                  0.105549794864117,  0.000000000000000,  0.000000000000000,
                                  0.167329374501625,  0.186002149671880,  0.093721145575410,
                                  0.167329374501625,  1.100000000000001,  0.883975287887155,
                                  0.105549794864117,  0.186002149671880,  0.883975287887155,
                                  1.100000000000001};
    
    ASSERT_EQ(dipzmat, CDenseMatrix(intzvals, 4, 4));
}

TEST_F(CElectricDipoleIntegralsDriverTest, ComputeSPForLiH)
{
    CElectricDipoleIntegralsDriver dipdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                          MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH();
    
    CGtoBlock bgtos(mlih, mbas, 0);
    
    CGtoBlock kgtos(mlih, mbas, 1);
    
    CDenseMatrix dipxmat(4, 12);
    
    CDenseMatrix dipymat(4, 12);
    
    CDenseMatrix dipzmat(4, 12);
    
    dipdrv.compute(dipxmat.values(), dipymat.values(), dipzmat.values(),
                   bgtos, kgtos);
    
    std::vector<double> intxvals{0.000000000000000,  0.000000000000000, -0.027194505513681,
                                -0.028442480254544,  0.000000000000000,  0.000000000000000,
                                -0.049856593441748, -0.052144547133331,  0.349517718067261,
                                 0.326843075568070,  0.037390368731802,  0.088318581191208,
                                 0.000000000000000,  0.000000000000000, -0.037716888864784,
                                -0.043557481374798,  0.000000000000000,  0.000000000000000,
                                -0.069147629585438, -0.079855382520464,  0.420263492740569,
                                 0.456435464587639,  0.073809484079972,  0.160013247550474,
                                 0.031373065382746,  0.053284434463371,  0.000000000000000,
                                 0.000000000000000,  0.057517286535034,  0.097688129849513,
                                 0.000000000000000,  0.000000000000000,  0.070516892226549,
                                 0.106033204954704,  0.319513141859236,  0.225523320976437,
                                 0.019077536949595,  0.035564534616346,  0.000000000000000,
                                 0.000000000000000,  0.034975484407590,  0.065201646796634,
                                 0.000000000000000,  0.000000000000000,  0.177876402042841,
                                 0.255249628652732,  0.389551476557429,  0.559016994374947};
    
    ASSERT_EQ(dipxmat, CDenseMatrix(intxvals, 4, 12));
    
    std::vector<double> intyvals{0.349517718067261,  0.326843075568070,  0.014728280803735,
                                 0.064616514312421,  0.000000000000000,  0.000000000000000,
                                -0.074784890162622, -0.078216820699997,  0.000000000000000,
                                 0.000000000000000, -0.027194505513681, -0.028442480254544,
                                 0.420263492740569,  0.456435464587639,  0.042378743359319,
                                 0.123715346404809,  0.000000000000000,  0.000000000000000,
                                -0.103721444378157, -0.119783073780695,  0.000000000000000,
                                 0.000000000000000, -0.037716888864784, -0.043557481374798,
                                 0.096661113378837,  0.150436900340846,  0.319513141859236,
                                 0.225523320976437,  0.086275929802551,  0.146532194774270,
                                 0.000000000000000,  0.000000000000000,  0.031373065382746,
                                 0.053284434463371,  0.000000000000000,  0.000000000000000,
                                 0.193774349500837,  0.284886740833021,  0.389551476557429,
                                 0.559016994374947,  0.052463226611385,  0.097802470194951,
                                 0.000000000000000,  0.000000000000000,  0.019077536949595,
                                 0.035564534616346,  0.000000000000000,  0.000000000000000};
    
    ASSERT_EQ(dipymat, CDenseMatrix(intyvals, 4, 12));
    
    std::vector<double> intzvals{0.000000000000000,  0.000000000000000, -0.074784890162622,
                                -0.078216820699997,  0.349517718067261,  0.326843075568070,
                                -0.081585592890552, -0.036117269922424,  0.000000000000000,
                                 0.000000000000000, -0.049856593441748, -0.052144547133331,
                                 0.000000000000000,  0.000000000000000, -0.103721444378157,
                                -0.119783073780695,  0.420263492740569,  0.456435464587639,
                                -0.091201904703459, -0.030550733464268,  0.000000000000000,
                                 0.000000000000000, -0.069147629585438, -0.079855382520464,
                                 0.086275929802551,  0.146532194774270,  0.000000000000000,
                                 0.000000000000000,  0.207774053276063,  0.339152605731952,
                                 0.319513141859236,  0.225523320976437,  0.057517286535034,
                                 0.097688129849513,  0.000000000000000,  0.000000000000000,
                                 0.052463226611385,  0.097802470194951,  0.000000000000000,
                                 0.000000000000000,  0.261340626197318,  0.410844467599246,
                                 0.389551476557429,  0.559016994374947,  0.034975484407590,
                                 0.065201646796634,  0.000000000000000,  0.000000000000000};

    ASSERT_EQ(dipzmat, CDenseMatrix(intzvals, 4, 12));
}

TEST_F(CElectricDipoleIntegralsDriverTest, ComputeSDForLiH)
{
    CElectricDipoleIntegralsDriver dipdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                          MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH();
    
    CGtoBlock bgtos(mlih, mbas, 0);
    
    CGtoBlock kgtos(mlih, mbas, 2);
    
    CDenseMatrix dipxmat(4, 20);
    
    CDenseMatrix dipymat(4, 20);
    
    CDenseMatrix dipzmat(4, 20);
    
    dipdrv.compute(dipxmat.values(), dipymat.values(), dipzmat.values(),
                   bgtos, kgtos);
    
    std::vector<double> intxvals{0.000000000000000,  0.000000000000000, -0.029517842927713,
                                -0.065349276073813,  0.000000000000000,  0.000000000000000,
                                 0.040845776957765,  0.038912150883398,  0.000000000000000,
                                 0.000000000000000,  0.051022598126848,  0.062936575776069,
                                 0.000000000000000,  0.000000000000000, -0.054116045367473,
                                -0.119807006135323,  0.000000000000000,  0.000000000000000,
                                -0.035769322571534, -0.058895213185093,  0.000000000000000,
                                 0.000000000000000, -0.045941809743883, -0.103046543661128,
                                 0.000000000000000,  0.000000000000000,  0.042910580259079,
                                 0.051425874341281,  0.000000000000000,  0.000000000000000,
                                 0.059349106149468,  0.089597063538206,  0.000000000000000,
                                 0.000000000000000, -0.084226651197120, -0.188918663378735,
                                 0.000000000000000,  0.000000000000000, -0.047532041143438,
                                -0.088956373544893,  0.064331122509494,  0.092183313223273,
                                 0.000000000000000,  0.000000000000000,  0.053345535222451,
                                 0.085928439853325,  0.000000000000000,  0.000000000000000,
                                 0.027037357013414,  0.047954984905049,  0.000000000000000,
                                 0.000000000000000,  0.117940391267406,  0.169002740909333,
                                 0.000000000000000,  0.000000000000000,  0.021872507191424,
                                 0.027604944630872,  0.000000000000000,  0.000000000000000,
                                 0.087653751694619,  0.134213740231602,  0.000000000000000,
                                 0.000000000000000,  0.017443852943995,  0.034283916227521,
                                 0.000000000000000,  0.000000000000000, -0.016799995296760,
                                -0.018369272440887,  0.000000000000000,  0.000000000000000,
                                 0.160698544773467,  0.246058523757937,  0.000000000000000,
                                 0.000000000000000,  0.051564013606354,  0.075970041640529,
                                 0.000000000000000,  0.000000000000000};
    
    ASSERT_EQ(dipxmat, CDenseMatrix(intxvals, 4, 20));
    
    std::vector<double> intyvals{0.000000000000000,  0.000000000000000, -0.007301053782789,
                                -0.031774623175452,  0.000000000000000,  0.000000000000000,
                                -0.020077897902669, -0.087380213732492,  0.000000000000000,
                                 0.000000000000000,  0.076533897190271,  0.094404863664103,
                                 0.000000000000000,  0.000000000000000,  0.040845776957765,
                                 0.038912150883398,  0.000000000000000,  0.000000000000000,
                                 0.035087721603772,  0.070655478467003,  0.000000000000000,
                                 0.000000000000000, -0.017624667023474, -0.053114097488849,
                                 0.000000000000000,  0.000000000000000, -0.048467834314554,
                                -0.146063768094334,  0.000000000000000,  0.000000000000000,
                                 0.089023659224202,  0.134395595307309,  0.000000000000000,
                                 0.000000000000000,  0.042910580259079,  0.051425874341281,
                                 0.000000000000000,  0.000000000000000,  0.051793252506485,
                                 0.110059162889485,  0.059052728710102,  0.087494463316523,
                                 0.000000000000000,  0.000000000000000,  0.162395003952781,
                                 0.240609774120437,  0.000000000000000,  0.000000000000000,
                                 0.040556035520120,  0.071932477357573,  0.000000000000000,
                                 0.000000000000000,  0.053345535222451,  0.085928439853325,
                                 0.000000000000000,  0.000000000000000, -0.057056731342796,
                                -0.080465798697819,  0.000000000000000,  0.000000000000000,
                                 0.063721850506714,  0.099864892344559,  0.000000000000000,
                                 0.000000000000000,  0.175235088893463,  0.274628453947538,
                                 0.000000000000000,  0.000000000000000, -0.025199992945140,
                                -0.027553908661331,  0.000000000000000,  0.000000000000000,
                                 0.017443852943995,  0.034283916227521,  0.000000000000000,
                                 0.000000000000000, -0.085275044474983, -0.129538660746031,
                                 0.000000000000000,  0.000000000000000};
    
    ASSERT_EQ(dipymat, CDenseMatrix(intyvals, 4, 20));
    
    std::vector<double> intzvals{0.000000000000000,  0.000000000000000,  0.040845776957765,
                                 0.038912150883398,  0.000000000000000,  0.000000000000000,
                                 0.067955033903319,  0.027509265807023,  0.000000000000000,
                                 0.000000000000000, -0.000584235875986, -0.079368119919462,
                                 0.000000000000000,  0.000000000000000,  0.045303355935546,
                                 0.018339510538016,  0.000000000000000,  0.000000000000000,
                                -0.017019073732402, -0.016213396201416,  0.000000000000000,
                                 0.000000000000000,  0.042910580259079,  0.051425874341281,
                                 0.000000000000000,  0.000000000000000,  0.056458438601647,
                                 0.019674292835111,  0.000000000000000,  0.000000000000000,
                                -0.032223667441081, -0.140206283528406,  0.000000000000000,
                                 0.000000000000000,  0.037638959067764,  0.013116195223408,
                                 0.000000000000000,  0.000000000000000, -0.017879408441283,
                                -0.021427447642201,  0.053345535222451,  0.085928439853325,
                                 0.000000000000000,  0.000000000000000,  0.191632967926707,
                                 0.297239817418706,  0.000000000000000,  0.000000000000000,
                                 0.217033363485093,  0.325375926601526,  0.000000000000000,
                                 0.000000000000000,  0.127755311951138,  0.198159878279138,
                                 0.000000000000000,  0.000000000000000, -0.022227306342688,
                                -0.035803516605552,  0.000000000000000,  0.000000000000000,
                                 0.017443852943995,  0.034283916227521,  0.000000000000000,
                                 0.000000000000000,  0.129281128038242,  0.216027631229095,
                                 0.000000000000000,  0.000000000000000,  0.211995630798099,
                                 0.336082709046033,  0.000000000000000,  0.000000000000000,
                                 0.086187418692161,  0.144018420819397,  0.000000000000000,
                                 0.000000000000000, -0.007268272059998, -0.014284965094800,
                                 0.000000000000000,  0.000000000000000};
    
    ASSERT_EQ(dipzmat, CDenseMatrix(intzvals, 4, 20));
}

TEST_F(CElectricDipoleIntegralsDriverTest, ComputeSFForLiH)
{
    CElectricDipoleIntegralsDriver dipdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                          MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH();
    
    CGtoBlock bgtos(mlih, mbas, 0);
    
    CGtoBlock kgtos(mlih, mbas, 3);
    
    CDenseMatrix dipxmat(4, 28);
    
    CDenseMatrix dipymat(4, 28);
    
    CDenseMatrix dipzmat(4, 28);
    
    dipdrv.compute(dipxmat.values(), dipymat.values(), dipzmat.values(),
                   bgtos, kgtos);
    
    std::vector<double> intxvals{0.000000000000000,  0.000000000000000,  0.028435554111359,
                                 0.047353163720076,  0.000000000000000,  0.000000000000000,
                                 0.043774679254897,  0.089261940915617,  0.000000000000000,
                                 0.000000000000000, -0.043285468448763, -0.042779744786085,
                                 0.000000000000000,  0.000000000000000, -0.045064660559828,
                                -0.065186058366081, -0.000000000000000, -0.000000000000000,
                                 0.040189084510415,  0.084041720979811,  0.000000000000000,
                                 0.000000000000000,  0.054036068457811,  0.080633856789127,
                                -0.000000000000000, -0.000000000000000, -0.005852681136953,
                                -0.014634123838219,  0.000000000000000,  0.000000000000000,
                                 0.030299463911526,  0.062787051993082,  0.000000000000000,
                                 0.000000000000000,  0.052482512536987,  0.121661272377577,
                                 0.000000000000000,  0.000000000000000, -0.035668479727796,
                                -0.050803233292216,  0.000000000000000,  0.000000000000000,
                                -0.044501118526870, -0.084440471369249, -0.000000000000000,
                                -0.000000000000000,  0.048929749267715,  0.114891296112692,
                                 0.000000000000000,  0.000000000000000,  0.054241789082238,
                                 0.105025799090914, -0.000000000000000,  0.000000000000000,
                                -0.007980120685376, -0.020391281567628,  0.035333567451981,
                                 0.046000162860396,  0.000000000000000,  0.000000000000000,
                                 0.108416290266377,  0.147574296309128,  0.000000000000000,
                                 0.000000000000000,  0.042946351303390,  0.067422799610670,
                                -0.000000000000000,  0.000000000000000, -0.023449973153367,
                                -0.026655877338049,  0.000000000000000,  0.000000000000000,
                                 0.106439380358320,  0.145295546237467, -0.000000000000000,
                                -0.000000000000000,  0.036274319689750,  0.043551200317673,
                                 0.000000000000000,  0.000000000000000, -0.023407648000592,
                                -0.032394194961280, -0.000000000000000,  0.000000000000000,
                                 0.033135896012704,  0.052938020563675,  0.000000000000000,
                                 0.000000000000000,  0.079493392874166,  0.129380931771497,
                                 0.000000000000000,  0.000000000000000,  0.000560577584610,
                                 0.005160790859801,  0.000000000000000,  0.000000000000000,
                                -0.035353871122424, -0.055046386098853,  0.000000000000000,
                                 0.000000000000000,  0.076621866273050,  0.124902655216347,
                                -0.000000000000000,  0.000000000000000,  0.046692214773095,
                                 0.073234489681980,  0.000000000000000,  0.000000000000000,
                                -0.015327235881671, -0.025198293358530,  0.000000000000000,
                                 0.000000000000000};
    
    ASSERT_EQ(dipxmat, CDenseMatrix(intxvals, 4, 28));
    
    std::vector<double> intyvals{0.000000000000000,  0.000000000000000, -0.014296000695819,
                                -0.021811247676945,  0.000000000000000,  0.000000000000000,
                                 0.010065466461306,  0.043257271242169, -0.000000000000000,
                                 0.000000000000000,  0.004117860803113,  0.048391933658074,
                                 0.000000000000000,  0.000000000000000, -0.067596990839743,
                                -0.097779087549122,  0.000000000000000,  0.000000000000000,
                                -0.043285468448763, -0.042779744786085,  0.000000000000000,
                                 0.000000000000000, -0.052377623123778, -0.096574751131326,
                                 0.000000000000000,  0.000000000000000, -0.019921282287293,
                                -0.040115727916319,  0.000000000000000, -0.000000000000000,
                                -0.014521115447350, -0.028517066436771,  0.000000000000000,
                                 0.000000000000000,  0.020177997544468,  0.062708834785670,
                                -0.000000000000000, -0.000000000000000,  0.019206016161219,
                                 0.072555268369179,  0.000000000000000,  0.000000000000000,
                                -0.066751677790305, -0.126660707053874,  0.000000000000000,
                                 0.000000000000000, -0.035668479727796, -0.050803233292216,
                                 0.000000000000000,  0.000000000000000, -0.059147167403072,
                                -0.129940678437298,  0.000000000000000,  0.000000000000000,
                                -0.023703502807014, -0.054592983217476, -0.011176239015467,
                                -0.013766173755390,  0.000000000000000,  0.000000000000000,
                                 0.099972301578482,  0.140561067197172,  0.000000000000000,
                                 0.000000000000000,  0.142228006444479,  0.201481212579692,
                                 0.000000000000000, -0.000000000000000, -0.035174959730050,
                                -0.039983816007074,  0.000000000000000,  0.000000000000000,
                                 0.042946351303390,  0.067422799610670, -0.000000000000000,
                                 0.000000000000000, -0.095953641635972, -0.128594104963139,
                                 0.000000000000000,  0.000000000000000, -0.047667761386561,
                                -0.064784722059613, -0.000000000000000, -0.000000000000000,
                                -0.013185781531112, -0.020775176316524, -0.000000000000000,
                                 0.000000000000000,  0.057844349462020,  0.096268927462294,
                                 0.000000000000000,  0.000000000000000,  0.077089014260225,
                                 0.129203314266181, -0.000000000000000,  0.000000000000000,
                                -0.053030806683635, -0.082569579148280,  0.000000000000000,
                                 0.000000000000000,  0.000560577584610,  0.005160790859801,
                                -0.000000000000000,  0.000000000000000, -0.077311453478506,
                                -0.124874193944914,  0.000000000000000,  0.000000000000000,
                                -0.035295345777973, -0.057398306656454, -0.000000000000000,
                                 0.000000000000000};
    
    ASSERT_EQ(dipymat, CDenseMatrix(intyvals, 4, 28));
    
    std::vector<double> intzvals{0.000000000000000,  0.000000000000000, -0.003512137127427,
                                -0.002985442269050,  0.000000000000000,  0.000000000000000,
                                -0.038827941254737, -0.014077177403380,  0.000000000000000,
                                 0.000000000000000, -0.013547996812039,  0.054324737839546,
                                -0.000000000000000, -0.000000000000000,  0.045199807725120,
                                 0.096456703700769,  0.000000000000000,  0.000000000000000,
                                -0.009031997874692,  0.036216491893031,  0.000000000000000,
                                 0.000000000000000,  0.016178308856141,  0.005865490584742,
                                 0.000000000000000,  0.000000000000000,  0.017950923095740,
                                 0.015258927152922,  0.000000000000000,  0.000000000000000,
                                -0.002720833955611, -0.003380053369938,  0.000000000000000,
                                 0.000000000000000, -0.023326890043457, -0.008446666788201,
                                 0.000000000000000,  0.000000000000000,  0.012994471482178,
                                 0.087563511416203, -0.000000000000000,  0.000000000000000,
                                 0.055721226488598,  0.132175087664006,  0.000000000000000,
                                 0.000000000000000,  0.008662980988118,  0.058375674277469,
                                 0.000000000000000,  0.000000000000000,  0.009719537518107,
                                 0.003519444495084,  0.000000000000000,  0.000000000000000,
                                 0.013906484662012,  0.017275828335236,  0.005087854998014,
                                 0.007748630669677,  0.000000000000000,  0.000000000000000,
                                 0.118731869563072,  0.174446416314159,  0.000000000000000,
                                 0.000000000000000,  0.236976531970896,  0.338720635707197,
                                -0.000000000000000,  0.000000000000000,  0.126103646239066,
                                 0.172495316783746, -0.000000000000000, -0.000000000000000,
                                 0.157984354647264,  0.225813757138131, -0.000000000000000,
                                -0.000000000000000, -0.049471612317947, -0.072686006797566,
                                 0.000000000000000,  0.000000000000000, -0.026004592212073,
                                -0.039604112311683,  0.000000000000000, -0.000000000000000,
                                 0.000890773028174,  0.001839868013271,  0.000000000000000,
                                 0.000000000000000,  0.042791757199347,  0.075726852267893,
                                 0.000000000000000,  0.000000000000000,  0.118031814290513,
                                 0.199759314828519,  0.000000000000000,  0.000000000000000,
                                 0.089545910559719,  0.146142674843159,  0.000000000000000,
                                -0.000000000000000,  0.078687876193675,  0.133172876552346,
                                 0.000000000000000,  0.000000000000000, -0.017829898833061,
                                -0.031552855111622,  0.000000000000000,  0.000000000000000,
                                -0.004552839921776, -0.009403769845610,  0.000000000000000,
                                 0.000000000000000};
    
    ASSERT_EQ(dipzmat, CDenseMatrix(intzvals, 4, 28));
}

TEST_F(CElectricDipoleIntegralsDriverTest, ComputeSGForLiH)
{
    CElectricDipoleIntegralsDriver dipdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                          MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH();
    
    CGtoBlock bgtos(mlih, mbas, 0);
    
    CGtoBlock kgtos(mlih, mbas, 4);
    
    CDenseMatrix dipxmat(4, 36);
    
    CDenseMatrix dipymat(4, 36);
    
    CDenseMatrix dipzmat(4, 36);
    
    dipdrv.compute(dipxmat.values(), dipymat.values(), dipzmat.values(),
                   bgtos, kgtos);
    
    std::vector<double> intxvals{0.000000000000000,  0.000000000000000, -0.004690571855120,
                                -0.005583378006416,  0.000000000000000,  0.000000000000000,
                                -0.043889459755011, -0.065248984114405,  0.000000000000000,
                                 0.000000000000000, -0.037539033422693, -0.070316147590080,
                                 0.000000000000000,  0.000000000000000,  0.038314499923697,
                                 0.040805974379459,  0.000000000000000,  0.000000000000000,
                                 0.031978643835602,  0.049294535610885,  0.000000000000000,
                                 0.000000000000000, -0.013988860661498, -0.030267977454411,
                                 0.000000000000000,  0.000000000000000, -0.052242978778737,
                                -0.069392646940462,  0.000000000000000,  0.000000000000000,
                                 0.008763432552822,  0.020110039988076,  0.000000000000000,
                                 0.000000000000000,  0.013362293857414,  0.020651826750615,
                                 0.000000000000000,  0.000000000000000, -0.003265343267182,
                                -0.006102257309538,  0.000000000000000,  0.000000000000000,
                                -0.034626755746458, -0.074129149439846,  0.000000000000000,
                                 0.000000000000000, -0.034160224588352, -0.082401482761732,
                                 0.000000000000000,  0.000000000000000,  0.025168970386943,
                                 0.043558450590912,  0.000000000000000,  0.000000000000000,
                                 0.025778665415360,  0.056307298331375,  0.000000000000000,
                                 0.000000000000000, -0.014002761731149, -0.036029547361225,
                                 0.000000000000000,  0.000000000000000, -0.038625655354256,
                                -0.077401918530772,  0.000000000000000,  0.000000000000000,
                                 0.009131805452841,  0.024074842035317,  0.000000000000000,
                                 0.000000000000000,  0.010788565653123,  0.023598849852966,
                                 0.000892506450397,  0.000507074277771,  0.000000000000000,
                                 0.000000000000000,  0.059657599163695,  0.073595034492835,
                                 0.000000000000000,  0.000000000000000,  0.108259611422850,
                                 0.139751193644915,  0.000000000000000,  0.000000000000000,
                                 0.011650685400539,  0.021275816760566,  0.000000000000000,
                                 0.000000000000000, -0.050382948612805, -0.062902673607408,
                                -0.000000000000000, -0.000000000000000,  0.056378146331668,
                                 0.073596625209000,  0.000000000000000,  0.000000000000000,
                                 0.038366838711237,  0.043794103641986, -0.000000000000000,
                                -0.000000000000000, -0.039849027290705, -0.052184851356526,
                                 0.000000000000000,  0.000000000000000, -0.021265878201021,
                                -0.026570200825555,  0.000000000000000, -0.000000000000000,
                                 0.001662811007742,  0.002686202439160,  0.000000000000000,
                                 0.000000000000000,  0.030138587142980,  0.051031812501819,
                                 0.000000000000000,  0.000000000000000,  0.042041950842822,
                                 0.072537018849440,  0.000000000000000,  0.000000000000000,
                                -0.008200046273425, -0.012381427368619,  0.000000000000000,
                                 0.000000000000000, -0.023924647766717, -0.040673243993474,
                                -0.000000000000000, -0.000000000000000,  0.020223634129277,
                                 0.035124724702142,  0.000000000000000,  0.000000000000000,
                                 0.026598043546645,  0.044266821933730,  0.000000000000000,
                                 0.000000000000000, -0.013956684221303, -0.024290945682255,
                                 0.000000000000000,  0.000000000000000, -0.010057550679239,
                                -0.017103019260006, -0.000000000000000, -0.000000000000000};
    
    ASSERT_EQ(dipxmat, CDenseMatrix(intxvals, 4, 36));
    
    std::vector<double> intyvals{0.000000000000000,  0.000000000000000,  0.012478384693744,
                                 0.019995005964708,  0.000000000000000,  0.000000000000000,
                                 0.022175707571364,  0.030076517744583,  0.000000000000000,
                                 0.000000000000000, -0.004089901899533, -0.029558035408458,
                                 0.000000000000000,  0.000000000000000,  0.017939889274916,
                                 0.003737001195138,  0.000000000000000,  0.000000000000000,
                                 0.047967965753403,  0.073941803416328,  0.000000000000000,
                                 0.000000000000000,  0.038314499923697,  0.040805974379459,
                                 0.000000000000000,  0.000000000000000,  0.046960287594711,
                                 0.078109875933299,  0.000000000000000,  0.000000000000000,
                                 0.030364476543036,  0.055198754443977,  0.000000000000000,
                                 0.000000000000000,  0.000365213078802,  0.002369263177016,
                                 0.000000000000000,  0.000000000000000,  0.010297042263024,
                                 0.022966598989473,  0.000000000000000,  0.000000000000000,
                                 0.016590090938527,  0.033668500309751,  0.000000000000000,
                                 0.000000000000000, -0.010579504370167, -0.037651555156834,
                                 0.000000000000000,  0.000000000000000,  0.006971380257970,
                                 0.000269161464535,  0.000000000000000,  0.000000000000000,
                                 0.038667998123040,  0.084460947497063,  0.000000000000000,
                                 0.000000000000000,  0.025168970386943,  0.043558450590912,
                                 0.000000000000000,  0.000000000000000,  0.039647514998283,
                                 0.090178727769677,  0.000000000000000,  0.000000000000000,
                                 0.027105795592824,  0.064454872188316,  0.000000000000000,
                                 0.000000000000000,  0.000860101759891,  0.003008373985721,
                                -0.022657259483459, -0.028567498630107,  0.000000000000000,
                                -0.000000000000000, -0.018736463712078, -0.021878221954275,
                                 0.000000000000000,  0.000000000000000,  0.098177870874717,
                                 0.131146969189910, -0.000000000000000,  0.000000000000000,
                                 0.066087050832117,  0.091326472509472,  0.000000000000000,
                                 0.000000000000000, -0.075574422919207, -0.094354010411112,
                                -0.000000000000000, -0.000000000000000,  0.011650685400539,
                                 0.021275816760566,  0.000000000000000,  0.000000000000000,
                                -0.096557452956082, -0.122660415602929, -0.000000000000000,
                                 0.000000000000000, -0.080947579242983, -0.104156341453088,
                                 0.000000000000000,  0.000000000000000, -0.007701150922653,
                                -0.010280736485294, -0.000000000000000, -0.000000000000000,
                                -0.010187386460634, -0.017384019643780,  0.000000000000000,
                                 0.000000000000000, -0.011986579962972, -0.020027097560285,
                                 0.000000000000000,  0.000000000000000,  0.029127908522319,
                                 0.051505082283650,  0.000000000000000,  0.000000000000000,
                                 0.013390262234756,  0.024806868561627,  0.000000000000000,
                                 0.000000000000000, -0.035886971650076, -0.061009865990210,
                                -0.000000000000000, -0.000000000000000, -0.008200046273425,
                                -0.012381427368619,  0.000000000000000,  0.000000000000000,
                                -0.041546977260625, -0.071120837476629,  0.000000000000000,
                                 0.000000000000000, -0.032125246899280, -0.055331491280276,
                                 0.000000000000000,  0.000000000000000, -0.002298154954407,
                                -0.004061261694190, -0.000000000000000, -0.000000000000000};
    
    ASSERT_EQ(dipymat, CDenseMatrix(intyvals, 4, 36));
    
    std::vector<double> intzvals{0.000000000000000,  0.000000000000000, -0.004781803672311,
                                -0.003553292776221,  0.000000000000000,  0.000000000000000,
                                 0.003491864336903,  0.001111332531553,  0.000000000000000,
                                 0.000000000000000,  0.011819130829794, -0.026105999084376,
                                 0.000000000000000,  0.000000000000000, -0.027562102185486,
                                -0.081034630117790,  0.000000000000000,  0.000000000000000,
                                -0.037069449125977, -0.046182323447007,  0.000000000000000,
                                 0.000000000000000, -0.018374734790324, -0.054023086745193,
                                 0.000000000000000,  0.000000000000000, -0.004924637845748,
                                 0.010877499618490,  0.000000000000000,  0.000000000000000,
                                -0.017847306610837, -0.005680144050159,  0.000000000000000,
                                 0.000000000000000, -0.004741955308375, -0.003523682003086,
                                 0.000000000000000,  0.000000000000000, -0.002659060962834,
                                -0.003420373523818,  0.000000000000000,  0.000000000000000,
                                 0.001477173346578,  0.000555171592275,  0.000000000000000,
                                 0.000000000000000, -0.004354065272484, -0.037232054681025,
                                 0.000000000000000,  0.000000000000000, -0.034290912869358,
                                -0.099008944069469,  0.000000000000000,  0.000000000000000,
                                -0.026450139233545, -0.050919639125223,  0.000000000000000,
                                 0.000000000000000, -0.022860608579572, -0.066005962712979,
                                 0.000000000000000,  0.000000000000000,  0.001814193863535,
                                 0.015513356117094,  0.000000000000000,  0.000000000000000,
                                -0.007549997104733, -0.002837543693851,  0.000000000000000,
                                 0.000000000000000, -0.002636902121477, -0.003391870411119,
                                -0.007527144642695, -0.010805053696759,  0.000000000000000,
                                 0.000000000000000,  0.011348666880515,  0.015743395414231,
                                -0.000000000000000,  0.000000000000000,  0.156238937057580,
                                 0.211404010124360, -0.000000000000000,  0.000000000000000,
                                 0.195495296097666,  0.258285505813323,  0.000000000000000,
                                 0.000000000000000,  0.015168442535940,  0.014897251312652,
                                -0.000000000000000, -0.000000000000000,  0.130330197398444,
                                 0.172190337208882,  0.000000000000000,  0.000000000000000,
                                -0.065099557107325, -0.088085004218483,  0.000000000000000,
                                 0.000000000000000, -0.058004297389301, -0.080466243228293,
                                 0.000000000000000,  0.000000000000000, -0.007464418437340,
                                -0.010715011582619,  0.000000000000000,  0.000000000000000,
                                -0.000702390292795, -0.001520166010586,  0.000000000000000,
                                 0.000000000000000,  0.002175887521271,  0.004063929345434,
                                 0.000000000000000,  0.000000000000000,  0.040847558665325,
                                 0.073228786560132,  0.000000000000000,  0.000000000000000,
                                 0.063834324942054,  0.111814196865949,  0.000000000000000,
                                 0.000000000000000,  0.015447180484493,  0.025325052042284,
                                -0.000000000000001, -0.000000000000000,  0.042556216628036,
                                 0.074542797910633,  0.000000000000000,  0.000000000000000,
                                -0.017019816110552, -0.030511994400055,  0.000000000000000,
                                 0.000000000000000, -0.011121202886495, -0.020771194432219,
                                 0.000000000000000,  0.000000000000000, -0.000696537040355,
                                -0.001507497960497,  0.000000000000000, -0.000000000000000};
    
    ASSERT_EQ(dipzmat, CDenseMatrix(intzvals, 4, 36));
}

