//
//                     V.E.L.O.X. C.H.E.M. MP
//      ---------------------------------------------------
//           An Electronic Structure Code for Nanoscale
//
//  Created by Zilvinas Rinkevicius (rinkevic@kth.se), KTH, Sweden.
//  Copyright Â© 2018 by Velox Chem MP developers. All rights reserved.

#include "NuclearPotentialIntegralsDriverTest.hpp"

#include "NuclearPotentialIntegralsDriver.hpp"
#include "MoleculeSetter.hpp"
#include "MolecularBasisSetter.hpp"

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeSSForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);

    auto mlih = vlxmol::getTestLiH();

    auto mbas = vlxbas::getTestBasisForLiH(0, 0);

    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);

    std::vector<double> intvals{ 7.736774122879349,  6.549415227007131,  0.855280000184068,
                                 1.949488520360516,  6.549415227007131,  6.001510859920003,
                                 1.170889580069949,  2.179290275400536,  0.855280000184068,
                                 1.170889580069949,  4.797350021933383,  3.463727426618309,
                                 1.949488520360516,  2.179290275400536,  3.463727426618309,
                                 3.665666692150181};

    std::vector<int32_t> rows{0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3};

    std::vector<int32_t> cols{0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3};

    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 4, 4, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeSPForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(0, 1);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);

    std::vector<double> intvals{ 7.736774122879349,  6.549415227007131, -0.774664715309043,
                                -1.589464820573308, -1.420218644733246, -2.914018837717731,
                                -0.516443143539362, -1.059643213715538,  6.549415227007131,
                                 6.001510859920003, -0.809642632993596, -1.540988269659015,
                                -1.484344827154925, -2.825145161041527, -0.539761755329064,
                                -1.027325513106010, -0.774664715309043, -0.809642632993596,
                                 3.907390315716412,  2.469876297996402,  0.152991511314216,
                                 0.155932067578619,  0.055633276841533,  0.056702570028589,
                                -1.589464820573308, -1.540988269659015,  2.469876297996402,
                                 3.000285580452371,  0.155932067578619,  0.304609876553509,
                                 0.056702570028589,  0.110767227837640, -1.420218644733246,
                                -1.484344827154925,  0.152991511314216,  0.155932067578619,
                                 4.104424837863508,  2.670697900180988,  0.101994340876144,
                                 0.103954711719079, -2.914018837717731, -2.825145161041527,
                                 0.155932067578619,  0.304609876553509,  2.670697900180988,
                                 3.392586179044012,  0.103954711719079,  0.203073251035673,
                                -0.516443143539362, -0.539761755329064,  0.055633276841533,
                                 0.056702570028589,  0.101994340876144,  0.103954711719079,
                                 3.861029251681802,  2.422624156305912, -1.059643213715538,
                                -1.027325513106010,  0.056702570028589,  0.110767227837640,
                                 0.103954711719079,  0.203073251035673,  2.422624156305912,
                                 2.907979557254338};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2,
                              2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
                              4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6,
                              6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0,
                              1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1,
                              2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2,
                              3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7};
    
    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 8, 8, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputePSForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(1, 0);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 4.797350021933383,  3.463727426618309,  0.716688045592732,
                                 0.961285903361370,  1.313928083586676,  1.762357489495846,
                                 0.477792030395155,  0.640857268907580,  3.463727426618309,
                                 3.665666692150181,  0.783057851629905,  0.977433983512970,
                                 1.435606061321493,  1.791962303107112,  0.522038567753270,
                                 0.651622655675314,  0.716688045592732,  0.783057851629905,
                                 5.389681097734912,  4.421159622196003,  0.059837391701642,
                                 0.068258249204655,  0.021759051527870,  0.024821181528965,
                                 0.961285903361370,  0.977433983512970,  4.421159622196003,
                                 4.214690910981703,  0.068258249204655,  0.090090018433681,
                                 0.024821181528965,  0.032760006703157,  1.313928083586676,
                                 1.435606061321493,  0.059837391701642,  0.068258249204655,
                                 5.466744405229450,  4.509067973444423,  0.039891594467762,
                                 0.045505499469770,  1.762357489495846,  1.791962303107112,
                                 0.068258249204655,  0.090090018433681,  4.509067973444423,
                                 4.330715934722049,  0.045505499469770,  0.060060012289120,
                                 0.477792030395155,  0.522038567753270,  0.021759051527870,
                                 0.024821181528965,  0.039891594467762,  0.045505499469770,
                                 5.371548554795020,  4.400475304255199,  0.640857268907580,
                                 0.651622655675314,  0.024821181528965,  0.032760006703157,
                                 0.045505499469770,  0.060060012289120,  4.400475304255199,
                                 4.187390905395738};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2,
                              2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
                              4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6,
                              6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0,
                              1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1,
                              2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2,
                              3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7};
    
    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 8, 8, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputePPForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(1, 1);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 5.389681097734912,  4.421159622196003,  0.090389933774467,
                                 0.697209517300726,  0.059837391701642,  0.068258249204655,
                                -1.087539794737917, -1.062407626496478,  0.021759051527870,
                                 0.024821181528965, -0.395469016268334, -0.386330045998719,
                                 4.421159622196003,  4.214690910981703,  0.286901921345548,
                                 0.935226972547510,  0.068258249204655,  0.090090018433681,
                                -1.094475238977150, -1.119418015165562,  0.024821181528965,
                                 0.032760006703157, -0.397990995991691, -0.407061096423841,
                                 0.090389933774467,  0.286901921345548,  3.907390315716412,
                                 2.469876297996402, -1.087539794737917, -1.094475238977150,
                                 0.152991511314216,  0.155932067578619, -0.395469016268334,
                                -0.397990995991691,  0.055633276841533,  0.056702570028589,
                                 0.697209517300726,  0.935226972547510,  2.469876297996402,
                                 3.000285580452371, -1.062407626496478, -1.119418015165562,
                                 0.155932067578619,  0.304609876553509, -0.386330045998719,
                                -0.407061096423841,  0.056702570028589,  0.110767227837640,
                                 0.059837391701642,  0.068258249204655, -1.087539794737917,
                                -1.062407626496478,  5.466744405229450,  4.509067973444423,
                                -1.310229498842548, -0.671042728944738,  0.039891594467762,
                                 0.045505499469770, -0.725026529825278, -0.708271750997652,
                                 0.068258249204655,  0.090090018433681, -1.094475238977150,
                                -1.119418015165562,  4.509067973444423,  4.330715934722049,
                                -1.122649522791691, -0.506447743953594,  0.045505499469770,
                                 0.060060012289120, -0.729650159318100, -0.746278676777042,
                                -1.087539794737917, -1.094475238977150,  0.152991511314216,
                                 0.155932067578619, -1.310229498842548, -1.122649522791691,
                                 4.104424837863508,  2.670697900180988, -0.725026529825278,
                                -0.729650159318100,  0.101994340876144,  0.103954711719079,
                                -1.062407626496478, -1.119418015165562,  0.155932067578619,
                                 0.304609876553509, -0.671042728944738, -0.506447743953594,
                                 2.670697900180988,  3.392586179044012, -0.708271750997652,
                                -0.746278676777042,  0.103954711719079,  0.203073251035673,
                                 0.021759051527870,  0.024821181528965, -0.395469016268334,
                                -0.386330045998719,  0.039891594467762,  0.045505499469770,
                                -0.725026529825278, -0.708271750997652,  5.371548554795020,
                                 4.400475304255199,  0.419947447331411,  1.019151222299658,
                                 0.024821181528965,  0.032760006703157, -0.397990995991691,
                                -0.407061096423841,  0.045505499469770,  0.060060012289120,
                                -0.729650159318100, -0.746278676777042,  4.400475304255199,
                                 4.187390905395738,  0.618561084671957,  1.274444552900710,
                                -0.395469016268334, -0.397990995991691,  0.055633276841533,
                                 0.056702570028589, -0.725026529825278, -0.729650159318100,
                                 0.101994340876144,  0.103954711719079,  0.419947447331411,
                                 0.618561084671957,  3.861029251681802,  2.422624156305912,
                                -0.386330045998719, -0.407061096423841,  0.056702570028589,
                                 0.110767227837640, -0.708271750997652, -0.746278676777042,
                                 0.103954711719079,  0.203073251035673,  1.019151222299658,
                                 1.274444552900710,  2.422624156305912,  2.907979557254338};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
                              1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                              2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
                              5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
                              7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                              9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};

    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 12, 12, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeSDForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(0, 2);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 7.736774122879349,  6.549415227007131,  0.519832082887633,
                                 0.892787578276054,  1.429538227940991,  2.455165840259148,
                                 1.187995555579791,  2.040327463393719,  0.953025485293994,
                                 1.636777226839432, -0.216596701203180, -0.371994824281689,
                                 6.549415227007131,  6.001510859920003,  0.435076680819680,
                                 0.770277454057193,  1.196460872254120,  2.118262998657282,
                                 0.994300236874595,  1.760349586158707,  0.797640581502747,
                                 1.412175332438188, -0.181281950341533, -0.320948939190497,
                                 0.519832082887633,  0.435076680819680,  3.478214801540742,
                                 1.893711993539113,  0.113845079639040,  0.098457288097802,
                                -0.010398449425070,  0.004397542058047,  0.135796844437519,
                                 0.109803540345022, -0.006358322731098, -0.006887707600306,
                                 0.892787578276054,  0.770277454057193,  1.893711993539113,
                                 2.568625662074751,  0.098457288097802,  0.176831721729404,
                                 0.004397542058047,  0.018338724450592,  0.109803540345022,
                                 0.191254160791963, -0.006887707600306, -0.013453349418572,
                                 1.429538227940991,  1.196460872254120,  0.113845079639040,
                                 0.098457288097802,  3.749890559770268,  2.128666885590687,
                                 0.158154370861165,  0.149787169537950,  0.116143059381084,
                                 0.112249489928672, -0.125305611931207, -0.098438822804517,
                                 2.455165840259148,  2.118262998657282,  0.098457288097802,
                                 0.176831721729404,  2.128666885590687,  2.990610452565374,
                                 0.149787169537950,  0.279165123100005,  0.112249489928672,
                                 0.210807136455715, -0.098438822804517, -0.169056134251319,
                                 1.187995555579791,  0.994300236874595, -0.010398449425070,
                                 0.004397542058047,  0.158154370861165,  0.149787169537950,
                                 3.749582339653307,  2.116088199964572,  0.105436247240776,
                                 0.099858113025300,  0.004332687260446, -0.001832309190852,
                                 2.040327463393719,  1.760349586158707,  0.004397542058047,
                                 0.018338724450592,  0.149787169537950,  0.279165123100005,
                                 2.116088199964572,  2.958418999537411,  0.099858113025300,
                                 0.186110082066670, -0.001832309190853, -0.007641135187747,
                                 0.953025485293994,  0.797640581502747,  0.135796844437519,
                                 0.109803540345022,  0.116143059381084,  0.112249489928672,
                                 0.105436247240776,  0.099858113025300,  3.653104676952698,
                                 2.035125643983459,  0.060223224606778,  0.040370954001891,
                                 1.636777226839432,  1.412175332438188,  0.109803540345022,
                                 0.191254160791963,  0.112249489928672,  0.210807136455715,
                                 0.099858113025300,  0.186110082066670,  2.035125643983459,
                                 2.814937838852278,  0.040370954001891,  0.063375141632784,
                                -0.216596701203180, -0.181281950341533, -0.006358322731098,
                                -0.006887707600306, -0.125305611931207, -0.098438822804517,
                                 0.004332687260446, -0.001832309190853,  0.060223224606778,
                                 0.040370954001891,  3.465604128124063,  1.880051373465174,
                                -0.371994824281689, -0.320948939190497, -0.006887707600306,
                                -0.013453349418572, -0.098438822804517, -0.169056134251319,
                                -0.001832309190852, -0.007641135187747,  0.040370954001891,
                                 0.063375141632784,  1.880051373465174,  2.541943185727918};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
                              1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                              2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
                              5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
                              7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                              9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
    
    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 12, 12, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeDSForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(2, 0);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 4.797350021933383,  3.463727426618309,  0.438292441916984,
                                 0.561132101826224,  1.205304215271707,  1.543113280022117,
                                 1.001649359826341,  1.282380339742899,  0.803536143514471,
                                 1.028742186681411, -0.182621850798743, -0.233805042427594,
                                 3.463727426618309,  3.665666692150181,  0.267827379173099,
                                 0.358034235799362,  0.736525292726023,  0.984594148448247,
                                 0.612077912453517,  0.818231684570712,  0.491016861817349,
                                 0.656396098965498, -0.111594741322125, -0.149180931583067,
                                 0.438292441916984,  0.267827379173099,  4.421808648667628,
                                 3.506299950695142,  0.044116585394124,  0.047866613129848,
                                -0.001316915371077,  0.002013659246585,  0.051075823687660,
                                 0.053453670625175, -0.002745282618823, -0.003335681649018,
                                 0.561132101826224,  0.358034235799362,  3.506299950695142,
                                 3.454438074787293,  0.047866613129848,  0.061292674094833,
                                 0.002013659246585,  0.005807780289902,  0.053453670625175,
                                 0.066604724762238, -0.003335681649018, -0.004606233887275,
                                 1.205304215271707,  0.736525292726023,  0.044116585394124,
                                 0.047866613129848,  4.527086863812696,  3.620527095664100,
                                 0.063922540896472,  0.072700727888479,  0.047398494293154,
                                 0.054462355723841, -0.046546107366602, -0.047949795904296,
                                 1.543113280022117,  0.984594148448247,  0.047866613129848,
                                 0.061292674094833,  3.620527095664100,  3.600704683422691,
                                 0.072700727888479,  0.096229946162625,  0.054462355723841,
                                 0.072585355729927, -0.047949795904296, -0.059004438848235,
                                 1.001649359826341,  0.612077912453517, -0.001316915371077,
                                 0.002013659246585,  0.063922540896472,  0.072700727888479,
                                 4.524473246959378,  3.614526031975203,  0.042615027264315,
                                 0.048467151925653,  0.000548714737949, -0.000839024686077,
                                 1.282380339742899,  0.818231684570712,  0.002013659246585,
                                 0.005807780289902,  0.072700727888479,  0.096229946162625,
                                 3.614526031975203,  3.590051139109891,  0.048467151925653,
                                 0.064153297441750, -0.000839024686077, -0.002419908454125,
                                 0.803536143514471,  0.491016861817349,  0.051075823687660,
                                 0.053453670625175,  0.047398494293154,  0.054462355723841,
                                 0.042615027264315,  0.048467151925653,  4.487588118568403,
                                 3.575141799227565,  0.020964701975384,  0.019735697889799,
                                 1.028742186681411,  0.656396098965498,  0.053453670625175,
                                 0.066604724762238,  0.054462355723841,  0.072585355729927,
                                 0.048467151925653,  0.064153297441750,  3.575141799227565,
                                 3.540216886981085,  0.019735697889799,  0.022446768312149,
                                -0.182621850798743, -0.111594741322125, -0.002745282618823,
                                -0.003335681649018, -0.046546107366602, -0.047949795904296,
                                 0.000548714737949, -0.000839024686077,  0.020964701975384,
                                 0.019735697889799,  4.416363838140298,  3.499684182091257,
                                -0.233805042427594, -0.149180931583067, -0.003335681649018,
                                -0.004606233887275, -0.047949795904296, -0.059004438848235,
                                -0.000839024686077, -0.002419908454125,  0.019735697889799,
                                 0.022446768312149,  3.499684182091257,  3.445302377577531};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
                              1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                              2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
                              5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,
                              7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                              9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
    
    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 12, 12, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputePDForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(1, 2);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 5.389681097734912,  4.421159622196003,  0.059837391701642,
                                 0.068258249204655,  0.021759051527870,  0.024821181528965,
                                -0.039269066424899, -0.365912043357681, -0.107989932668474,
                                -1.006258119233623,  1.184479184876926,  1.269312134986109,
                                 0.669295261674803,  0.554079251226094,  0.454396254263369,
                                 0.876278531670122,  4.421159622196003,  4.214690910981703,
                                 0.068258249204655,  0.090090018433681,  0.024821181528965,
                                 0.032760006703157, -0.118609518833216, -0.424599801578702,
                                -0.326176176791343, -1.167649454341430,  0.999592752257153,
                                 1.237890104912429,  0.521763136210959,  0.506231370650304,
                                 0.486228858738117,  0.936036421388687,  0.059837391701642,
                                 0.068258249204655,  5.466744405229450,  4.509067973444423,
                                 0.039891594467762,  0.045505499469770,  0.669295261674803,
                                 0.554079251226094,  1.234053155870793,  0.521512306650251,
                                 0.245621024457827, -0.855358062381776,  0.822702103913862,
                                 0.347674871100167, -0.278873025697835, -0.230866354677539,
                                 0.068258249204655,  0.090090018433681,  4.509067973444423,
                                 4.330715934722049,  0.045505499469770,  0.060060012289120,
                                 0.521763136210959,  0.506231370650304,  0.830037234884984,
                                 0.341047263660945, -0.087947390100520, -1.068190669537318,
                                 0.553358156589990,  0.227364842440630, -0.217401306754566,
                                -0.210929737770960,  0.021759051527870,  0.024821181528965,
                                 0.039891594467762,  0.045505499469770,  5.371548554795020,
                                 4.400475304255199, -0.363128718580441, -0.800722270139291,
                                 0.669295261674803,  0.554079251226094,  0.789652789917951,
                                 0.846208089990739, -0.665735984064143, -1.467990828588701,
                                -0.505747582137641, -0.752088491181928,  0.024821181528965,
                                 0.032760006703157,  0.045505499469770,  0.060060012289120,
                                 4.400475304255199,  4.187390905395738, -0.415079340163896,
                                -0.867004870845463,  0.521763136210959,  0.506231370650304,
                                 0.666395168171435,  0.825260069941620, -0.760978790300476,
                                -1.589508929883350, -0.482262613768127, -0.777427726577399,
                                -0.039269066424899, -0.118609518833216,  0.669295261674803,
                                 0.521763136210959, -0.363128718580441, -0.415079340163896,
                                 3.478214801540742,  1.893711993539113,  0.113845079639040,
                                 0.098457288097802, -0.010398449425070,  0.004397542058047,
                                 0.135796844437519,  0.109803540345022, -0.006358322731098,
                                -0.006887707600306, -0.365912043357681, -0.424599801578702,
                                 0.554079251226094,  0.506231370650304, -0.800722270139291,
                                -0.867004870845463,  1.893711993539113,  2.568625662074751,
                                 0.098457288097802,  0.176831721729404,  0.004397542058047,
                                 0.018338724450592,  0.109803540345022,  0.191254160791963,
                                -0.006887707600306, -0.013453349418572, -0.107989932668474,
                                -0.326176176791343,  1.234053155870793,  0.830037234884984,
                                 0.669295261674803,  0.521763136210959,  0.113845079639040,
                                 0.098457288097802,  3.749890559770268,  2.128666885590687,
                                 0.158154370861165,  0.149787169537950,  0.116143059381084,
                                 0.112249489928672, -0.125305611931207, -0.098438822804517,
                                -1.006258119233623, -1.167649454341430,  0.521512306650251,
                                 0.341047263660945,  0.554079251226094,  0.506231370650304,
                                 0.098457288097802,  0.176831721729404,  2.128666885590687,
                                 2.990610452565374,  0.149787169537950,  0.279165123100005,
                                 0.112249489928672,  0.210807136455715, -0.098438822804517,
                                -0.169056134251319,  1.184479184876926,  0.999592752257153,
                                 0.245621024457827, -0.087947390100520,  0.789652789917951,
                                 0.666395168171435, -0.010398449425070,  0.004397542058047,
                                 0.158154370861165,  0.149787169537950,  3.749582339653307,
                                 2.116088199964572,  0.105436247240776,  0.099858113025300,
                                 0.004332687260446, -0.001832309190852,  1.269312134986109,
                                 1.237890104912429, -0.855358062381776, -1.068190669537318,
                                 0.846208089990739,  0.825260069941620,  0.004397542058047,
                                 0.018338724450592,  0.149787169537950,  0.279165123100005,
                                 2.116088199964572,  2.958418999537411,  0.099858113025300,
                                 0.186110082066670, -0.001832309190853, -0.007641135187747,
                                 0.669295261674803,  0.521763136210959,  0.822702103913862,
                                 0.553358156589990, -0.665735984064143, -0.760978790300476,
                                 0.135796844437519,  0.109803540345022,  0.116143059381084,
                                 0.112249489928672,  0.105436247240776,  0.099858113025300,
                                 3.653104676952698,  2.035125643983459,  0.060223224606778,
                                 0.040370954001891,  0.554079251226094,  0.506231370650304,
                                 0.347674871100167,  0.227364842440630, -1.467990828588701,
                                -1.589508929883350,  0.109803540345022,  0.191254160791963,
                                 0.112249489928672,  0.210807136455715,  0.099858113025300,
                                 0.186110082066670,  2.035125643983459,  2.814937838852278,
                                 0.040370954001891,  0.063375141632784,  0.454396254263369,
                                 0.486228858738117, -0.278873025697835, -0.217401306754566,
                                -0.505747582137641, -0.482262613768127, -0.006358322731098,
                                -0.006887707600306, -0.125305611931207, -0.098438822804517,
                                 0.004332687260446, -0.001832309190853,  0.060223224606778,
                                 0.040370954001891,  3.465604128124063,  1.880051373465174,
                                 0.876278531670122,  0.936036421388687, -0.230866354677539,
                                -0.210929737770960, -0.752088491181928, -0.777427726577399,
                                -0.006887707600306, -0.013453349418572, -0.098438822804517,
                                -0.169056134251319, -0.001832309190852, -0.007641135187747,
                                 0.040370954001891,  0.063375141632784,  1.880051373465174,
                                 2.541943185727918};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
                              2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,
                              3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
                              5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                              6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
                              7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                              9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10,
                              10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12,
                              12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                              12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                              13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                              14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,
                              15, 15, 15, 15, 15, 15, 15, 15, 15, 15};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
                              14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                              13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                              11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                              10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8,
                              9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6,
                              7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5,
                              6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4,
                              5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2,
                              3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1,
                              2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0,
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15};

    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 16, 16, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeDPForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(2, 1);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 3.907390315716412,  2.469876297996402,  0.152991511314216,
                                 0.155932067578619,  0.055633276841533,  0.056702570028589,
                                 0.053732256478708,  0.165222660910237,  0.147763705316446,
                                 0.454362317503151, -1.112131754195617, -1.156286927453336,
                                -0.619919801552792, -0.589436667671049, -0.446914631090166,
                                -0.596137476807338,  2.469876297996402,  3.000285580452371,
                                 0.155932067578619,  0.304609876553509,  0.056702570028589,
                                 0.110767227837640,  0.203192151544686,  0.299565425425056,
                                 0.558778416747886,  0.823804919918905, -0.730424306790824,
                                -0.879972486779474, -0.322558217233817, -0.361004522152646,
                                -0.495390810227920, -0.662668992136875,  0.152991511314216,
                                 0.155932067578619,  4.104424837863508,  2.670697900180988,
                                 0.101994340876144,  0.103954711719079, -0.619919801552792,
                                -0.589436667671049, -1.116973959190741, -0.890850480271898,
                                -0.172375081541401,  0.198520636337938, -0.744649306127161,
                                -0.593900320181266,  0.258299917313663,  0.245598611529604,
                                 0.155932067578619,  0.304609876553509,  2.670697900180988,
                                 3.392586179044012,  0.103954711719079,  0.203073251035673,
                                -0.322558217233817, -0.361004522152646, -0.318335601430117,
                                -0.248046961475482,  0.466752209835439,  0.751506345591479,
                                -0.212223734286745, -0.165364640983654,  0.134399257180757,
                                 0.150418550896936,  0.055633276841533,  0.056702570028589,
                                 0.101994340876144,  0.103954711719079,  3.861029251681802,
                                 2.422624156305912,  0.362380112696603,  0.515759749397650,
                                -0.619919801552792, -0.589436667671049, -0.741421169463745,
                                -0.770857951635558,  0.664363539943773,  0.945559540562358,
                                 0.485797572712472,  0.576042156559756,  0.056702570028589,
                                 0.110767227837640,  0.103954711719079,  0.203073251035673,
                                 2.422624156305912,  2.907979557254338,  0.451405598786945,
                                 0.613441102752424, -0.322558217233817, -0.361004522152646,
                                -0.486949537860549, -0.586648324519649,  0.827576931109400,
                                 1.124642021712777,  0.428005454465225,  0.551174637834477,
                                 0.053732256478708,  0.203192151544686, -0.619919801552792,
                                -0.322558217233817,  0.362380112696603,  0.451405598786945,
                                 4.421808648667628,  3.506299950695142,  0.044116585394124,
                                 0.047866613129848, -0.001316915371077,  0.002013659246585,
                                 0.051075823687660,  0.053453670625175, -0.002745282618823,
                                -0.003335681649018,  0.165222660910237,  0.299565425425056,
                                -0.589436667671049, -0.361004522152646,  0.515759749397650,
                                 0.613441102752424,  3.506299950695142,  3.454438074787293,
                                 0.047866613129848,  0.061292674094833,  0.002013659246585,
                                 0.005807780289902,  0.053453670625175,  0.066604724762238,
                                -0.003335681649018, -0.004606233887275,  0.147763705316446,
                                 0.558778416747886, -1.116973959190741, -0.318335601430117,
                                -0.619919801552792, -0.322558217233817,  0.044116585394124,
                                 0.047866613129848,  4.527086863812696,  3.620527095664100,
                                 0.063922540896472,  0.072700727888479,  0.047398494293154,
                                 0.054462355723841, -0.046546107366602, -0.047949795904296,
                                 0.454362317503151,  0.823804919918905, -0.890850480271898,
                                -0.248046961475482, -0.589436667671049, -0.361004522152646,
                                 0.047866613129848,  0.061292674094833,  3.620527095664100,
                                 3.600704683422691,  0.072700727888479,  0.096229946162625,
                                 0.054462355723841,  0.072585355729927, -0.047949795904296,
                                -0.059004438848235, -1.112131754195617, -0.730424306790824,
                                -0.172375081541401,  0.466752209835439, -0.741421169463745,
                                -0.486949537860549, -0.001316915371077,  0.002013659246585,
                                 0.063922540896472,  0.072700727888479,  4.524473246959378,
                                 3.614526031975203,  0.042615027264315,  0.048467151925653,
                                 0.000548714737949, -0.000839024686077, -1.156286927453336,
                                -0.879972486779474,  0.198520636337938,  0.751506345591479,
                                -0.770857951635558, -0.586648324519649,  0.002013659246585,
                                 0.005807780289902,  0.072700727888479,  0.096229946162625,
                                 3.614526031975203,  3.590051139109891,  0.048467151925653,
                                 0.064153297441750, -0.000839024686077, -0.002419908454125,
                                -0.619919801552792, -0.322558217233817, -0.744649306127161,
                                -0.212223734286745,  0.664363539943773,  0.827576931109400,
                                 0.051075823687660,  0.053453670625175,  0.047398494293154,
                                 0.054462355723841,  0.042615027264315,  0.048467151925653,
                                 4.487588118568403,  3.575141799227565,  0.020964701975384,
                                 0.019735697889799, -0.589436667671049, -0.361004522152646,
                                -0.593900320181266, -0.165364640983654,  0.945559540562358,
                                 1.124642021712777,  0.053453670625175,  0.066604724762238,
                                 0.054462355723841,  0.072585355729927,  0.048467151925653,
                                 0.064153297441750,  3.575141799227565,  3.540216886981085,
                                 0.019735697889799,  0.022446768312149, -0.446914631090166,
                                -0.495390810227920,  0.258299917313663,  0.134399257180757,
                                 0.485797572712472,  0.428005454465225, -0.002745282618823,
                                -0.003335681649018, -0.046546107366602, -0.047949795904296,
                                 0.000548714737949, -0.000839024686077,  0.020964701975384,
                                 0.019735697889799,  4.416363838140298,  3.499684182091257,
                                -0.596137476807338, -0.662668992136875,  0.245598611529604,
                                 0.150418550896936,  0.576042156559756,  0.551174637834477,
                                -0.003335681649018, -0.004606233887275, -0.047949795904296,
                                -0.059004438848235, -0.000839024686077, -0.002419908454125,
                                 0.019735697889799,  0.022446768312149,  3.499684182091257,
                                 3.445302377577531};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
                              2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,
                              3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
                              5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6,
                              6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
                              7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                              9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10,
                              10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12,
                              12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                              12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                              13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                              14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,
                              15, 15, 15, 15, 15, 15, 15, 15, 15, 15};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
                              14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                              13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                              11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                              10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, 8,
                              9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6,
                              7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5,
                              6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4,
                              5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2,
                              3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1,
                              2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0,
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15};
    
    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 16, 16, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeDDForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(2, 2);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    std::vector<double> intvals{ 4.421808648667628,  3.506299950695142,  0.066142674108319,
                                 0.436419975514195,  0.044116585394124,  0.047866613129848,
                                -0.067731427130434, -0.283924409369267, -0.001316915371077,
                                 0.002013659246585,  0.837284525150745,  0.523835565566178,
                                 0.051075823687660,  0.053453670625175, -0.554879643447441,
                                -0.622692453744409, -0.002745282618823, -0.003335681649018,
                                -0.082415000500325, -0.035782879943729,  3.506299950695142,
                                 3.454438074787293,  0.183841540395159,  0.645399613935919,
                                 0.047866613129848,  0.061292674094833, -0.186645209674165,
                                -0.358804340598495,  0.002013659246585,  0.005807780289902,
                                 0.691691567445462,  0.558758426341339,  0.053453670625175,
                                 0.066604724762238, -0.607475353484824, -0.728030634616388,
                                -0.003335681649018, -0.004606233887275, -0.059546825267923,
                                -0.034513477039754,  0.066142674108319,  0.183841540395159,
                                 3.478214801540742,  1.893711993539113, -0.067731427130434,
                                -0.186645209674165,  0.113845079639040,  0.098457288097802,
                                 0.837284525150745,  0.691691567445462, -0.010398449425070,
                                 0.004397542058047, -0.554879643447441, -0.607475353484824,
                                 0.135796844437519,  0.109803540345022, -0.082415000500325,
                                -0.059546825267923, -0.006358322731098, -0.006887707600306,
                                 0.436419975514195,  0.645399613935919,  1.893711993539113,
                                 2.568625662074751, -0.283924409369267, -0.358804340598494,
                                 0.098457288097802,  0.176831721729404,  0.523835565566178,
                                 0.558758426341338,  0.004397542058047,  0.018338724450592,
                                -0.622692453744409, -0.728030634616388,  0.109803540345022,
                                 0.191254160791963, -0.035782879943729, -0.034513477039754,
                                -0.006887707600306, -0.013453349418572,  0.044116585394124,
                                 0.047866613129848, -0.067731427130434, -0.283924409369267,
                                 4.527086863812696,  3.620527095664100, -0.095489140634761,
                                -0.241126910480648,  0.063922540896472,  0.072700727888479,
                                 0.713366049669415,  0.089310667075767,  0.047398494293154,
                                 0.054462355723841,  0.663583089454348,  0.149286619865730,
                                -0.046546107366602, -0.047949795904296,  0.690864394272978,
                                 0.681734205651562,  0.047866613129848,  0.061292674094833,
                                -0.186645209674165, -0.358804340598494,  3.620527095664100,
                                 3.600704683422691, -0.261561800872734, -0.210838017037761,
                                 0.072700727888479,  0.096229946162625,  0.396165876002178,
                                 0.012571602390134,  0.054462355723841,  0.072585355729927,
                                 0.404341536773256,  0.097653096329639, -0.047949795904296,
                                -0.059004438848235,  0.705727615176897,  0.784977871731982,
                                -0.067731427130434, -0.186645209674165,  0.113845079639040,
                                 0.098457288097802, -0.095489140634761, -0.261561800872734,
                                 3.749890559770268,  2.128666885590687,  0.713366049669415,
                                 0.396165876002179,  0.158154370861165,  0.149787169537950,
                                 0.663583089454348,  0.404341536773256,  0.116143059381084,
                                 0.112249489928672,  0.690864394272978,  0.705727615176897,
                                -0.125305611931207, -0.098438822804517, -0.283924409369267,
                                -0.358804340598495,  0.098457288097802,  0.176831721729404,
                                -0.241126910480648, -0.210838017037761,  2.128666885590687,
                                 2.990610452565374,  0.089310667075768,  0.012571602390134,
                                 0.149787169537950,  0.279165123100005,  0.149286619865730,
                                 0.097653096329639,  0.112249489928672,  0.210807136455715,
                                 0.681734205651561,  0.784977871731982, -0.098438822804517,
                                -0.169056134251319, -0.001316915371077,  0.002013659246585,
                                 0.837284525150745,  0.523835565566178,  0.063922540896472,
                                 0.072700727888479,  0.713366049669415,  0.089310667075768,
                                 4.524473246959378,  3.614526031975203, -0.859473609818857,
                                -0.698163343060088,  0.042615027264315,  0.048467151925653,
                                 0.475577366446277,  0.059540444717178,  0.000548714737949,
                                -0.000839024686077, -0.348868552146144, -0.218264818985907,
                                 0.002013659246585,  0.005807780289902,  0.691691567445462,
                                 0.558758426341338,  0.072700727888479,  0.096229946162625,
                                 0.396165876002179,  0.012571602390134,  3.614526031975203,
                                 3.590051139109891, -0.881369573633583, -0.693493533669878,
                                 0.048467151925653,  0.064153297441750,  0.264110584001453,
                                 0.008381068260089, -0.000839024686077, -0.002419908454125,
                                -0.288204819768943, -0.232816010975558,  0.837284525150745,
                                 0.691691567445462, -0.010398449425070,  0.004397542058047,
                                 0.713366049669415,  0.396165876002178,  0.158154370861165,
                                 0.149787169537950, -0.859473609818857, -0.881369573633583,
                                 3.749582339653307,  2.116088199964572,  0.475577366446277,
                                 0.264110584001453,  0.105436247240776,  0.099858113025300,
                                -0.348868552146144, -0.288204819768943,  0.004332687260446,
                                -0.001832309190852,  0.523835565566178,  0.558758426341339,
                                 0.004397542058047,  0.018338724450592,  0.089310667075767,
                                 0.012571602390134,  0.149787169537950,  0.279165123100005,
                                -0.698163343060088, -0.693493533669878,  2.116088199964572,
                                 2.958418999537411,  0.059540444717178,  0.008381068260089,
                                 0.099858113025300,  0.186110082066670, -0.218264818985907,
                                -0.232816010975558, -0.001832309190853, -0.007641135187747,
                                 0.051075823687660,  0.053453670625175, -0.554879643447441,
                                -0.622692453744409,  0.047398494293154,  0.054462355723841,
                                 0.663583089454348,  0.149286619865730,  0.042615027264315,
                                 0.048467151925653,  0.475577366446277,  0.059540444717178,
                                 4.487588118568403,  3.575141799227565, -0.648475048513384,
                                -0.365532427035423,  0.020964701975384,  0.019735697889799,
                                -0.762764598016511, -0.585693363561380,  0.053453670625175,
                                 0.066604724762238, -0.607475353484824, -0.728030634616388,
                                 0.054462355723841,  0.072585355729927,  0.404341536773256,
                                 0.097653096329639,  0.048467151925653,  0.064153297441750,
                                 0.264110584001453,  0.008381068260089,  3.575141799227565,
                                 3.540216886981085, -0.598513081517114, -0.292215597312460,
                                 0.019735697889799,  0.022446768312149, -0.688823436100316,
                                -0.649867996967086, -0.554879643447441, -0.607475353484824,
                                 0.135796844437519,  0.109803540345022,  0.663583089454348,
                                 0.404341536773256,  0.116143059381084,  0.112249489928672,
                                 0.475577366446277,  0.264110584001453,  0.105436247240776,
                                 0.099858113025300, -0.648475048513384, -0.598513081517114,
                                 3.653104676952698,  2.035125643983459, -0.762764598016511,
                                -0.688823436100316,  0.060223224606778,  0.040370954001891,
                                -0.622692453744409, -0.728030634616388,  0.109803540345022,
                                 0.191254160791963,  0.149286619865730,  0.097653096329639,
                                 0.112249489928672,  0.210807136455715,  0.059540444717178,
                                 0.008381068260089,  0.099858113025300,  0.186110082066670,
                                -0.365532427035423, -0.292215597312460,  2.035125643983459,
                                 2.814937838852278, -0.585693363561380, -0.649867996967086,
                                 0.040370954001891,  0.063375141632784, -0.002745282618823,
                                -0.003335681649018, -0.082415000500325, -0.035782879943729,
                                -0.046546107366602, -0.047949795904296,  0.690864394272978,
                                 0.681734205651561,  0.000548714737949, -0.000839024686077,
                                -0.348868552146144, -0.218264818985907,  0.020964701975384,
                                 0.019735697889799, -0.762764598016511, -0.585693363561380,
                                 4.416363838140298,  3.499684182091257, -0.097313743550659,
                                 0.365450596959133, -0.003335681649018, -0.004606233887275,
                                -0.059546825267923, -0.034513477039754, -0.047949795904296,
                                -0.059004438848235,  0.705727615176897,  0.784977871731982,
                                -0.000839024686077, -0.002419908454125, -0.288204819768943,
                                -0.232816010975558,  0.019735697889799,  0.022446768312149,
                                -0.688823436100316, -0.649867996967086,  3.499684182091257,
                                 3.445302377577531,  0.065740336947112,  0.576947884473741,
                                -0.082415000500325, -0.059546825267923, -0.006358322731098,
                                -0.006887707600306,  0.690864394272978,  0.705727615176897,
                                -0.125305611931207, -0.098438822804517, -0.348868552146144,
                                -0.288204819768943,  0.004332687260446, -0.001832309190853,
                                -0.762764598016511, -0.688823436100316,  0.060223224606778,
                                 0.040370954001891, -0.097313743550659,  0.065740336947112,
                                 3.465604128124063,  1.880051373465174, -0.035782879943729,
                                -0.034513477039754, -0.006887707600306, -0.013453349418572,
                                 0.681734205651562,  0.784977871731982, -0.098438822804517,
                                -0.169056134251319, -0.218264818985907, -0.232816010975558,
                                -0.001832309190852, -0.007641135187747, -0.585693363561380,
                                -0.649867996967086,  0.040370954001891,  0.063375141632784,
                                 0.365450596959133,  0.576947884473741,  1.880051373465174,
                                 2.541943185727918};

    std::vector<int32_t> rows{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                              0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                              1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                              2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
                              3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
                              4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
                              5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                              5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                              6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                              7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                              8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9,
                              9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10,
                              10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                              10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                              11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12,
                              12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                              12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13,
                              13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14,
                              14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                              14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15,
                              15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
                              16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
                              16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17,
                              17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                              17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                              18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
                              19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
                              19, 19};

    std::vector<int32_t> cols{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                              10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                              18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                              13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1,
                              2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                              17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5,
                              6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                              10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                              18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                              13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7,
                              8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1,
                              2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                              17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                              12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5,
                              6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                              15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                              10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3,
                              4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                              18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                              13, 14, 15, 16, 17, 18, 19};

    ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 20, 20, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeSFForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(0, 3);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    
    //ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 8, 8, 1.0e-13));
}

TEST_F(CNuclearPotentialIntegralsDriverTest, ComputeFSForLiH)
{
    CNuclearPotentialIntegralsDriver npotdrv(mpi::master(), mpi::nodes(MPI_COMM_WORLD),
                                             MPI_COMM_WORLD);
    
    auto mlih = vlxmol::getTestLiH();
    
    auto mbas = vlxbas::getTestBasisForLiH(3, 0);
    
    auto npotmat = npotdrv.compute(mlih, mbas, MPI_COMM_WORLD);
    
    
    //ASSERT_EQ(npotmat, CSparseMatrix(intvals, rows, cols, 8, 8, 1.0e-13));
}



