#
#                     V.E.L.O.X. C.H.E.M. MP
#      ---------------------------------------------------
#           An Electronic Structure Code for Nanoscale
#
#  Created by Zilvinas Rinkevicius (rinkevic@kth.se), KTH, Sweden.
#  Copyright Â© 2018 by Velox Chem MP developers. All rights reserved.

# Automatically generated settings

USE_MPI := true
USE_GPU := true
USE_MKL := false

MATH_INC := -I/home/user/software/openblas/0.3.4/include
MATH_LIB := -L/home/user/software/openblas/0.3.4/lib
MATH_LIB += -Wl,-rpath,/home/user/software/openblas/0.3.4/lib
MATH_LIB += -lopenblas -lgomp -lpthread -lm -ldl

PYTHON := python3
PYTHON_USER_INC := 

CXX := mpicxx

CXX_REL_FLG := -fopenmp
CXX_DEB_FLG := -fopenmp

NVCC := nvcc
NVCC_REL_FLG := --compiler-options "-fopenmp"
NVCC_DEB_FLG := --compiler-options "-fopenmp"
CUDA_LIB := -L/usr/local/cuda-10.1/lib64 -lcuda -lcudart

MACLIBS := 

LTOFLAG := -fno-lto

# Generic settings

# Compiler flags

CXX_REL_FLG += -std=c++11 -O3 -Wall
CXX_DEB_FLG += -std=c++11 -O3 -Wall -g

# Preprocessor flags

CPP_REL_FLG := -DVLX_ALIGN=64
CPP_DEB_FLG := -DVLX_ALIGN=64 -DVAR_DEBUG=1

ifeq ($(USE_MPI),true)
  CPP_REL_FLG += -DENABLE_MPI=1
  CPP_DEB_FLG += -DENABLE_MPI=1
else
  CPP_REL_FLG += -DENABLE_MPI=0
  CPP_DEB_FLG += -DENABLE_MPI=0
endif

ifeq ($(USE_GPU),true)
  CPP_REL_FLG += -DENABLE_GPU
  CPP_DEB_FLG += -DENABLE_GPU
endif

ifeq ($(USE_MKL),true)
  CPP_REL_FLG += -DENABLE_MKL
  CPP_DEB_FLG += -DENABLE_MKL
endif

# Math library

LIB_LIST := $(MATH_LIB)

# Extra flag for MacOS

LIB_LIST += $(MACLIBS)

# Cuda flags

ifeq ($(USE_GPU),true)
  NVCC_REL_FLG += -std=c++11 -O3 --compiler-options "-Wall"
  NVCC_DEB_FLG += -std=c++11 -O3 --compiler-options "-Wall" --compiler-options "-g"
  LIB_LIST += $(CUDA_LIB)
endif

# Python interface

PYTHON_INC := $(shell $(PYTHON)-config --includes)
PYTHON_INC += -I$(shell $(PYTHON) -c "import mpi4py; print(mpi4py.get_include())")
PYTHON_INC += -I$(shell $(PYTHON) -c "import numpy; print(numpy.get_include())")
PYTHON_INC += -I$(PYTHON_USER_INC) $(shell $(PYTHON) -m pybind11 --includes)
PYTHON_LD  := $(shell $(PYTHON)-config --ldflags) $(LTOFLAG)

CXX_REL_FLG += -fPIC $(PYTHON_INC)
CXX_DEB_FLG += -fPIC $(PYTHON_INC)

ifeq ($(USE_GPU),true)
  NVCC_REL_FLG += --compiler-options "-fPIC" $(PYTHON_INC)
  NVCC_DEB_FLG += --compiler-options "-fPIC" $(PYTHON_INC)
endif

# Native shell commands

CP := cp -f
MV := mv -f
RM := rm -f

# Native libraries generation tools

AR      := ar
ARFLAGS := rc
